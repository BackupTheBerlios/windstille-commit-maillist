From grumbel at mail.berlios.de  Sat Aug  1 13:34:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 1 Aug 2009 13:34:39 +0200
Subject: [Windstille-commit] r2964 - trunk/media/wiki
Message-ID: <200908011134.n71BYdS9019226@sheep.berlios.de>

Author: grumbel
Date: 2009-08-01 13:34:38 +0200 (Sat, 01 Aug 2009)
New Revision: 2964

Modified:
   trunk/media/wiki/Backstory.wiki
   trunk/media/wiki/Planets.wiki
Log:
Some more backstory notes

Modified: trunk/media/wiki/Backstory.wiki
===================================================================
--- trunk/media/wiki/Backstory.wiki	2009-06-17 17:23:19 UTC (rev 2963)
+++ trunk/media/wiki/Backstory.wiki	2009-08-01 11:34:38 UTC (rev 2964)
@@ -2,12 +2,8 @@
 This is just a rough draft of a possible backstory, its not final and can be changed and adopted if necessary.
 <</note>>
 
-Some general things about the overall setting: 
+Windstille takes places a few hundred years in the future, but while the technology will be advanced, it will still be of the pre-singularity age. Human enhancement devices will be present, but not common place. AI will be present as well, but mainly act as an intuitive speech driven interface, not as robots with personalities. 
 
-* the overall tone of the game shall be close to 1980's Sci-Fi movies (Alien, Bladerunner, etc.)
-* the game shall stick to realism whenever possible
-* no crazy post-singularity techology, things shall stay simple and understandable
-
 == 2025 - Landing on the Moon, again
 
 In preparation for the mission to Mars mankind planed a research mission to moon with the goal to setup a small colony 

Modified: trunk/media/wiki/Planets.wiki
===================================================================
--- trunk/media/wiki/Planets.wiki	2009-06-17 17:23:19 UTC (rev 2963)
+++ trunk/media/wiki/Planets.wiki	2009-08-01 11:34:38 UTC (rev 2964)
@@ -14,6 +14,16 @@
 
 This is the moon where the game starts and most of the game will take place.
 
+Nugani isn't an ideal place for colonialization, but terraforming technology has allowed humans to settle on the moon. Breathable athmosphere isn't present on the whole planet as the terraforming is far from done, but around cities it is present, as air recycling and ventilation systems keep it fresh. These recycling systems causes a distinct constant flow of air inside the cities. 
+
+Near the cities there is a special kind of genetically engineered forest that is supposed to generate the oxygen, but so far it hasn't worked as hoped and thus supplies only a small part of the breathable air. Humans can survive there, but it isn't a pleasant place to be. In the city things are more critical, as without the air ventilation systems not enough breathable atmosphere makes it into the city. Still air situations are therefore feared in the city. 
+
+Low Altitude Geostationary Satellites (LAGS), balloon ships that hover stationary over the city and are controlled by electric motors powered by solor cells, provide communication and monitoring inside the city and its surrounding area. The LAGS are movable and can be deployed to other areas, but they are slow and thus can't be used in emergency situations.
+
+Cargo gets moved around by a underground tunnel system. From city to city normal sized trains are used, while for inner city small 1m^2 cargo trains are used.
+
+Small drones are used for close up surveillance.
+
 == Central
 
 <<thumbnail src="planet_central.jpg">>



From grumbel at mail.berlios.de  Mon Aug 10 15:36:40 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 10 Aug 2009 15:36:40 +0200
Subject: [Windstille-commit] r2965 - trunk/windstille/src/display
Message-ID: <200908101336.n7ADaeYE019985@sheep.berlios.de>

Author: grumbel
Date: 2009-08-10 15:36:39 +0200 (Mon, 10 Aug 2009)
New Revision: 2965

Modified:
   trunk/windstille/src/display/texture.cpp
Log:
Enabled mipmapping (currently not that useful, as only 3D object can make use of it, but not tiles)

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-01 11:34:38 UTC (rev 2964)
+++ trunk/windstille/src/display/texture.cpp	2009-08-10 13:36:39 UTC (rev 2965)
@@ -74,9 +74,9 @@
 
   glTexParameteri(target, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
   glTexParameteri(target, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
-  glTexParameteri(target, GL_TEXTURE_WRAP_S, GL_CLAMP);
-  glTexParameteri(target, GL_TEXTURE_WRAP_T, GL_CLAMP);
-  glTexParameteri(target, GL_TEXTURE_WRAP_R, GL_CLAMP);
+  glTexParameteri(target, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+  glTexParameteri(target, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
+  glTexParameteri(target, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);
 }
 
 static inline bool is_power_of_2(int v)
@@ -131,17 +131,31 @@
 
       glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
       glPixelStorei(GL_UNPACK_ROW_LENGTH, image.get_pitch() / image.get_bytes_per_pixel());
-      glTexImage2D(impl->target, 0, glformat,
-                   image.get_width(), image.get_height(), 0, sdl_format,
-                   GL_UNSIGNED_BYTE, image.get_pixels());
 
+      if (0)
+        {
+          glTexImage2D(impl->target, 0, glformat,
+                       image.get_width(), image.get_height(), 0, sdl_format,
+                       GL_UNSIGNED_BYTE, image.get_pixels());
+
+          glTexParameteri(impl->target, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+          glTexParameteri(impl->target, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+        }
+      else
+        {
+          gluBuild2DMipmaps(impl->target, glformat,
+                            image.get_width(), image.get_height(), sdl_format,
+                            GL_UNSIGNED_BYTE, image.get_pixels());
+
+          glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
+          glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+        }
+
       assert_gl("creating texture");
 
-      glTexParameteri(impl->target, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
-      glTexParameteri(impl->target, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
-      glTexParameteri(impl->target, GL_TEXTURE_WRAP_S, GL_CLAMP);
-      glTexParameteri(impl->target, GL_TEXTURE_WRAP_T, GL_CLAMP);
-      glTexParameteri(impl->target, GL_TEXTURE_WRAP_R, GL_CLAMP);
+      glTexParameteri(impl->target, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);
+      glTexParameteri(impl->target, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);
+      glTexParameteri(impl->target, GL_TEXTURE_WRAP_R, GL_CLAMP_TO_EDGE);
 
       assert_gl("setting texture parameters");
     } 



From grumbel at mail.berlios.de  Tue Aug 18 21:50:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 18 Aug 2009 21:50:37 +0200
Subject: [Windstille-commit] r2966 - trunk/windstille/src/editor
Message-ID: <200908181950.n7IJob4G017953@sheep.berlios.de>

Author: grumbel
Date: 2009-08-18 21:50:36 +0200 (Tue, 18 Aug 2009)
New Revision: 2966

Modified:
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_rotate_control_point.cpp
Log:
Fixed some double/float conversions

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-08-10 13:36:39 UTC (rev 2965)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-08-18 19:50:36 UTC (rev 2966)
@@ -221,20 +221,20 @@
              Vector2f(-w,  0));
   quad3.rotate(angle);
 
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 0*M_PI/2, get_world_pos() + quad1.p1)));
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 1*M_PI/2, get_world_pos() + quad1.p2)));
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 2*M_PI/2, get_world_pos() + quad1.p3)));
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 3*M_PI/2, get_world_pos() + quad1.p4)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 0*math::pi/2, get_world_pos() + quad1.p1)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 1*math::pi/2, get_world_pos() + quad1.p2)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 2*math::pi/2, get_world_pos() + quad1.p3)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, angle + 3*math::pi/2, get_world_pos() + quad1.p4)));
 
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, M_PI/4 + angle + 0*M_PI/2, get_world_pos() + quad3.p1, false, true)));
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, M_PI/4 + angle + 1*M_PI/2, get_world_pos() + quad3.p2, true,  false)));
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, M_PI/4 + angle + 2*M_PI/2, get_world_pos() + quad3.p3, false, true)));
-  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, M_PI/4 + angle + 3*M_PI/2, get_world_pos() + quad3.p4, true,  false)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, math::pi/4 + angle + 0*math::pi/2, get_world_pos() + quad3.p1, false, true)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, math::pi/4 + angle + 1*math::pi/2, get_world_pos() + quad3.p2, true,  false)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, math::pi/4 + angle + 2*math::pi/2, get_world_pos() + quad3.p3, false, true)));
+  control_points.push_back(ControlPointHandle(new DecalScaleControlPoint(this, math::pi/4 + angle + 3*math::pi/2, get_world_pos() + quad3.p4, true,  false)));
 
-  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 0*M_PI/2, get_world_pos() + quad2.p1)));
-  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 1*M_PI/2, get_world_pos() + quad2.p2)));
-  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 2*M_PI/2, get_world_pos() + quad2.p3)));
-  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 3*M_PI/2, get_world_pos() + quad2.p4)));
+  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 0*math::pi/2, get_world_pos() + quad2.p1)));
+  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 1*math::pi/2, get_world_pos() + quad2.p2)));
+  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 2*math::pi/2, get_world_pos() + quad2.p3)));
+  control_points.push_back(ControlPointHandle(new DecalRotateControlPoint(this, angle + 3*math::pi/2, get_world_pos() + quad2.p4)));
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/decal_rotate_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-10 13:36:39 UTC (rev 2965)
+++ trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-18 19:50:36 UTC (rev 2966)
@@ -39,10 +39,10 @@
   offset = offset_;
 
   Vector2f base = pos - center;
-  float base_angle = atan2(base.y, base.x);
+  float base_angle = atan2f(base.y, base.x);
 
   Vector2f current = (pos+offset) - center;
-  float current_angle = atan2(current.y, current.x);
+  float current_angle = atan2f(current.y, current.x);
 
   float new_angle = orig_angle + current_angle - base_angle;
 



From grumbel at mail.berlios.de  Tue Aug 18 22:28:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 18 Aug 2009 22:28:48 +0200
Subject: [Windstille-commit] r2967 - in trunk/windstille/src: display math
Message-ID: <200908182028.n7IKSmQf024098@sheep.berlios.de>

Author: grumbel
Date: 2009-08-18 22:28:47 +0200 (Tue, 18 Aug 2009)
New Revision: 2967

Modified:
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface.hpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/math/rect.hpp
Log:
Some more int/float cleanup

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-18 19:50:36 UTC (rev 2966)
+++ trunk/windstille/src/display/surface.cpp	2009-08-18 20:28:47 UTC (rev 2967)
@@ -41,7 +41,7 @@
   /**
    * The size of the Surface in pixels
    */
-  Size size;
+  Sizef size;
 };
 
 Surface::Surface()
@@ -61,30 +61,29 @@
 
   impl->texture = Texture(GL_TEXTURE_2D, math::round_to_power_of_two(width), math::round_to_power_of_two(height));
   impl->uv      = Rectf(0, 0,
-                        float(impl->size.width)  / impl->texture.get_width(),
-                        float(impl->size.height) / impl->texture.get_height());
+                        impl->size.width  / impl->texture.get_width(),
+                        impl->size.height / impl->texture.get_height());
 }
 
-Surface::Surface(Texture texture, const Rectf& rect, int width, int height)
+Surface::Surface(Texture texture, const Rectf& uv, const Sizef& size)
   : impl(new SurfaceImpl())
 {
   impl->texture = texture;
-  impl->size.width   = width;
-  impl->size.height  = height;
-  impl->uv      = rect;
+  impl->uv      = uv;
+  impl->size    = size;
 }
 
 Surface::~Surface()
 {
 }
 
-int
+float
 Surface::get_width()  const
 {
   return impl->size.width;
 }
 
-int
+float
 Surface::get_height() const
 { 
   return impl->size.height; 

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-08-18 19:50:36 UTC (rev 2966)
+++ trunk/windstille/src/display/surface.hpp	2009-08-18 20:28:47 UTC (rev 2967)
@@ -22,6 +22,7 @@
 #include <string>
 #include <boost/shared_ptr.hpp>
 #include "math/rect.hpp"
+#include "math/size.hpp"
 #include "texture.hpp"
 
 class SurfaceDrawingParameters;
@@ -42,17 +43,17 @@
   /** 
    * Create a new Surface object from a Texture
    * @param texture The Texture to use
-   * @param rect The rectangle of the texture to use in (0-1) notation
+   * @param uv The rectangle of the texture to use in (0-1) notation
    * @param width  Width of the surface on the screen
    * @param height Height of the surface on the screen
    */
-  Surface(Texture texture, const Rectf& rect, int width, int height);
+  Surface(Texture texture, const Rectf& uv, const Sizef& size);
   Surface(int width, int height);
   ~Surface();
   
-  int get_width()  const;
-  int get_height() const;
-
+  float get_width()  const;
+  float get_height() const;
+  
   Texture get_texture() const;
 
   /** Returns texture coordinates for the Surface rectangle */

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-18 19:50:36 UTC (rev 2966)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-18 20:28:47 UTC (rev 2967)
@@ -94,7 +94,7 @@
               throw std::runtime_error(msg.str());
             }
         
-          Surface result(texture, Rectf(0, 0, maxu, maxv), image.get_width(), image.get_height());
+          Surface result(texture, Rectf(0, 0, maxu, maxv), Sizef(image.get_width(), image.get_height()));
           surfaces.insert(std::make_pair(filename, result));
           return result;
         }      
@@ -131,7 +131,7 @@
           float s_min_v = maxv * x / static_cast<float>(image.get_height());
           float s_max_v = (maxv * (x + height)) / static_cast<float>(image.get_height());
 
-          surfaces.push_back(Surface(texture, Rectf(s_min_u, s_min_v, s_max_u, s_max_v), width, height));
+          surfaces.push_back(Surface(texture, Rectf(s_min_u, s_min_v, s_max_u, s_max_v), Sizef(width, height)));
         }
     }
 }

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-18 19:50:36 UTC (rev 2966)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-18 20:28:47 UTC (rev 2967)
@@ -193,7 +193,7 @@
       return Surface(texture,
                      Rectf(float(rect.left+1)  / texture.get_width(), float(rect.top+1)    / texture.get_height(),
                            float(rect.right-1) / texture.get_width(), float(rect.bottom-1) / texture.get_height()),
-                     surface.get_width(), surface.get_height());
+                     Sizef(surface.get_width(), surface.get_height()));
     }
 }
 

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-08-18 19:50:36 UTC (rev 2966)
+++ trunk/windstille/src/math/rect.hpp	2009-08-18 20:28:47 UTC (rev 2967)
@@ -322,8 +322,8 @@
   //: Sets the size of the rectangle, maintaining top/left position.
   void set_size(const Size &size)
   {
-    right = left + size.width;
-    bottom = top + size.height;
+    right  = left + static_cast<float>(size.width);
+    bottom = top  + static_cast<float>(size.height);
   }
 
   //: Calculates and returns the union of two rectangles.



From grumbel at mail.berlios.de  Wed Aug 19 17:09:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 17:09:21 +0200
Subject: [Windstille-commit] r2968 - in trunk/windstille: . data external
	src src/armature
Message-ID: <200908191509.n7JF9Ljh025855@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 17:09:20 +0200 (Wed, 19 Aug 2009)
New Revision: 2968

Modified:
   trunk/windstille/SConstruct
   trunk/windstille/TODO
   trunk/windstille/data/SConscript
   trunk/windstille/external/SConscript
   trunk/windstille/src/SConscript
   trunk/windstille/src/armature/ipo_curve.cpp
   trunk/windstille/src/armature/ipo_curve.hpp
Log:
Trimmed the SConscript stuff a bit

Modified: trunk/windstille/SConstruct
===================================================================
--- trunk/windstille/SConstruct	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/SConstruct	2009-08-19 15:09:20 UTC (rev 2968)
@@ -17,6 +17,8 @@
 
 import sys, os
 sys.path.append('scons')
+
+CacheDir('cache/')
 
 def CheckSDL(context, version):
     context.Message( 'Checking for SDL >= %s ...' % version )

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/TODO	2009-08-19 15:09:20 UTC (rev 2968)
@@ -10,6 +10,11 @@
 in the context of the whole game or if a potential performance
 enhanchment, actually enhanchmes anything at all.
 
+Porting
+=======
+
+Microsoft compiler don't have inttypes.h, need to write a replacement header
+
 Scripting
 =========
 
@@ -192,6 +197,8 @@
 Miscellaneous
 =============
 
+* figure out how to enable mipmapping into the tile and surface packer
+
 * View class could be done away, as it doesn't have any clear purpose
 
 * sorting DrawingRequest can be speed up by a bucket sort, as most
@@ -522,6 +529,8 @@
 Editor
 ======
 
+* Fix screenshot support (very crashy/buggy on different screensizes and stuff (padding error?))
+
 * unify delete/remove/erase a bit
 
 * figure out a way to rename image files without breaking the levels
@@ -785,6 +794,9 @@
   * EdgeRemoveCommand
   * NodeSetPosCommand
 
+  * UndoCopy
+  * UndoPaste
+
   * ObjectAddCommand      [done]
   * ObjectRemoveCommand   [done]
   * ObjectReorderCommand (raise/lower)

Modified: trunk/windstille/data/SConscript
===================================================================
--- trunk/windstille/data/SConscript	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/data/SConscript	2009-08-19 15:09:20 UTC (rev 2968)
@@ -22,6 +22,7 @@
 data_env = conf_env.Clone()
 
 data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
+                                                 src_suffix = ".xcf",
                                                  suffix = ".png") })
 
 for filename in glob.glob("images/decal/*.xcf"):

Modified: trunk/windstille/external/SConscript
===================================================================
--- trunk/windstille/external/SConscript	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/external/SConscript	2009-08-19 15:09:20 UTC (rev 2968)
@@ -19,7 +19,7 @@
 # ______________________________________________________________________
 #
 
-miniswig_env = Environment(CPPPATH=['../..'],
+miniswig_env = Environment(CPPPATH=['../..', "..", "miniswig"],
                            CXXFILESUFFIX = ".cpp",
                            YACCFLAGS=['-d', '--no-lines'])
 
@@ -30,12 +30,10 @@
                                  'miniswig/xmlwriter.cpp',
                                  'miniswig/create_wrapper.cpp',
                                  'miniswig/main.cpp',
-                                 'miniswig/tree.cpp'], 
-                                CPPPATH=["..", "miniswig"])
+                                 'miniswig/tree.cpp'])
 
 # bison -d --no-lines -o tools/miniswig/parser.cpp tools/miniswig/parser.yy
 
 Export('miniswig')
 
-
 # EOF #

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/src/SConscript	2009-08-19 15:09:20 UTC (rev 2968)
@@ -15,111 +15,55 @@
 ##  You should have received a copy of the GNU General Public License
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
+from glob import glob
+
 Import('conf_env', 'features')
 
 SConscript('scripting/SConscript')
 
+# libutil
 util_env = conf_env.Clone()
 util_env['CPPPATH'] = ['.', '..']
-util_lib = util_env.StaticLibrary('util', [
-        'lisp/getters.cpp',
-        'lisp/lexer.cpp',
-        'lisp/lisp.cpp',
-        'lisp/parser.cpp',
-        'lisp/properties.cpp',
-        'lisp/writer.cpp',
-        'util/baby_xml.cpp',
-        'util/command_line.cpp',
-        'util/command_line_generic.cpp',
-        'util/file_reader.cpp',
-        'util/file_writer.cpp',
-        'util/getter.cpp',
-        'util/response_curve.cpp',
-        'util/sexpr_file_reader.cpp',
-        'util/util.cpp',
-        ])
-
+util_lib = util_env.StaticLibrary('util', glob('lisp/*.cpp') + glob('util/*.cpp'))
+
+# libphysfs
 physfs_env = conf_env.Clone()
 physfs_env['CPPPATH'] = ['.', '..']
 physfs_env.ParseConfig('sdl-config --cflags --libs')
-physfs_lib = physfs_env.StaticLibrary('physfs', [
-        'physfs/physfs_sdl.cpp',
-        'physfs/physfs_stream.cpp'])
-
+physfs_lib = physfs_env.StaticLibrary('physfs', glob('physfs/*.cpp'))
+
+# libmath
 math_env = conf_env.Clone()
 math_env['CPPPATH'] = ['.']
-math_lib = math_env.StaticLibrary('math', [
-        'math/line.cpp',
-        'math/matrix.cpp',
-        'math/origin.cpp',
-        'math/quaternion.cpp',
-        'math/random.cpp',
-        'math/rect.cpp',
-        'math/vector2f.cpp',
-        ])
-
+math_lib = math_env.StaticLibrary('math', glob('math/*.cpp'))
+
+# libnavgraph
 navgraph_env = conf_env.Clone()
 navgraph_env['CPPPATH'] = ['.']
-navgraph_lib = navgraph_env.StaticLibrary('navgraph', [
-        'navigation/navigation_graph.cpp',
-        'navigation/node.cpp',
-        'navigation/properties.cpp',
-        'navigation/edge.cpp',
-        'navigation/edge_position.cpp',
-        ])
-
+navgraph_lib = navgraph_env.StaticLibrary('navgraph', glob('navigation/*.cpp'))
+
+# libparticles
 particles_env = conf_env.Clone()
 particles_env['CPPPATH'] = ['.']
-particles_lib = particles_env.StaticLibrary('particles', [
-        'particles/deform_drawer.cpp',
-        'particles/particle_system.cpp',
-        'particles/spark_drawer.cpp',
-        'particles/surface_drawer.cpp',
-        ])
-
+particles_lib = particles_env.StaticLibrary('particles', glob('particles/*.cpp'))
+
+# libdisplay
 display_env = conf_env.Clone()
 display_env['CPPPATH'] = ['.', '..']
 display_env.ParseConfig('sdl-config --cflags --libs')
 display_env.ParseConfig('freetype-config --libs --cflags')
-
-display_lib = display_env.StaticLibrary('display', [
-        'font/border_font_effect.cpp',
-        'font/no_font_effect.cpp',
-        'font/fonts.cpp',
-        'font/ttf_font.cpp',
-
-        'display/blitter.cpp',
-        'display/display.cpp',
-        'display/drawing_context.cpp',
-        'display/framebuffer.cpp',
-        'display/graphic_context_state.cpp',
-        'display/opengl_state.cpp',
-        'display/render_buffer.cpp',
-        'display/scene_context.cpp',
-        'display/shader_object.cpp',
-        'display/shader_program.cpp',
-        'display/software_surface.cpp',
-        'display/surface.cpp',
-        'display/surface_manager.cpp',
-        'display/text_area.cpp',
-        'display/texture.cpp',
-        'display/texture_manager.cpp',
-        'display/texture_packer.cpp',
-        'display/vertex_array_drawing_request.cpp',
-        
-        'sprite2d/data.cpp',
-        'sprite2d/manager.cpp',
-        'sprite2d/sprite.cpp',
-        'sprite3d/data.cpp',
-        'sprite3d/manager.cpp',
-        'sprite3d/sprite3d.cpp',
-        ])
+display_lib = display_env.StaticLibrary('display', 
+                                        glob('font/*.cpp') +
+                                        glob('display/*.cpp') +
+                                        glob('sprite2d/*.cpp') +
+                                        glob('sprite3d/*.cpp'))
 
 env = conf_env.Clone()
-env.Append(LIBS    = [particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
-                      'GL', 'GLU', 'GLEW', 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
-env.Append(LIBPATH = ['../external/'] )
-env.Append(CPPPATH = ['.', '..', '../external/SQUIRREL2/include/'])
+env.Append(LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
+                 'GL', 'GLU', 'GLEW',
+                 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
+env.Append(LIBPATH=['../external/'])
+env.Append(CPPPATH=['.', '..', '../external/SQUIRREL2/include/'])
 
 if features['64bit']:
     env.Append(CPPDEFINES = '_SQ64')
@@ -131,30 +75,20 @@
 env.ParseConfig('sdl-config --cflags --libs')
 env.ParseConfig('freetype-config --libs --cflags')
 
-env.Program('../windstille', [
-        'app/config.cpp',
-        'app/console.cpp',
-        'app/controller_def.cpp',
-        'app/globals.cpp',
-        'app/menu_manager.cpp',
-        'app/windstille_main.cpp',
-        'armature/armature.cpp',
-        'armature/bone.cpp',
-        'armature/mesh.cpp',
-        'armature/model.cpp',
-        'armature/pose.cpp',
-        'collision/collision_data.cpp',
-        'collision/collision_engine.cpp',
-        'collision/collision_object.cpp',
-        'collision/collision_test.cpp',
-        'collision/stair_contact.cpp',
-        'engine/camera.cpp',
-        'engine/entity.cpp',
-        'engine/game_object.cpp',
-        'engine/physics.cpp',
-        'engine/script_manager.cpp',
-        'engine/squirrel_thread.cpp',
-        'engine/sector.cpp',
+env.Program('../windstille', 
+            glob('app/*.cpp') +
+            glob('armature/*.cpp') +
+            glob('collision/*.cpp') +
+            glob('input/*.cpp') +
+            glob('hud/*.cpp') +
+            glob('objects/*.cpp') +
+            glob('screen/*.cpp') +
+            glob('properties/*.cpp') +
+            glob('tile/*.cpp') +
+            glob('sound/*.cpp') +
+            glob('scripting/*.cpp') +
+            glob('engine/*.cpp') +
+            [
         'gui/automap.cpp',
         'gui/button.cpp',
         'gui/component.cpp',
@@ -170,73 +104,15 @@
         'gui/slider.cpp',
         'gui/tab_component.cpp',
         'gui/text_view.cpp',
-        'hud/controller_help_window.cpp',
-        'hud/conversation.cpp',
-        'hud/dialog_manager.cpp',
-        'hud/inventory.cpp',
-        'hud/pda.cpp',
-        'hud/speech_manager.cpp',
-        'input/controller.cpp',
-        'input/controller_description.cpp',
-        'input/input_configurator.cpp',
-        'input/input_manager.cpp',
-        'input/input_manager_impl.cpp',
-        'input/input_manager_sdl.cpp',
-        'input/wiimote.cpp',
-        'objects/background_gradient.cpp',
-        'objects/bomb.cpp',
-        'objects/box.cpp',
-        'objects/character.cpp',
-        'objects/elevator.cpp',
-        'objects/grenade.cpp',
-        'objects/hedgehog.cpp',
-        'objects/laser_pointer.cpp',
-        'objects/liquid.cpp',
-        'objects/nightvision.cpp',
-        'objects/pistol.cpp',
-        'objects/player.cpp',
-        'objects/scriptable_object.cpp',
-        'objects/shockwave.cpp',
-        'objects/spider_mine.cpp',
-        'objects/swarm.cpp',
-        'objects/test_object.cpp',
-        'objects/trigger.cpp',
-        'objects/vrdummy.cpp',
-        'properties/property.cpp',
-        'properties/property_set.cpp',
-        'properties/properties.cpp',
-        'screen/armature_test.cpp',
-        'screen/game_session.cpp',
-        'screen/geometry_test.cpp',
-        'screen/navigation_test.cpp',
-        'screen/particle_viewer.cpp',
-        'screen/screen.cpp',
-        'screen/screen_manager.cpp',
-        'screen/sprite2dview.cpp',
-        'screen/sprite3dview.cpp',
-        'screen/title_screen.cpp',
-        'scripting/game_objects.cpp',
-        'scripting/interface.cpp',
-        'scripting/squirrel_error.cpp',
-        'scripting/util.cpp',
-        'scripting/wrapper.cpp',
-        'sound/sound_file.cpp',
-        'sound/wav_sound_file.cpp',
-        'sound/ogg_sound_file.cpp',
-        'sound/sound_manager.cpp',
-        'sound/sound_source.cpp',
-        'sound/stream_sound_source.cpp',
-        'tile/tile.cpp',
-        'tile/tile_description.cpp',
-        'tile/tile_factory.cpp',
-        'tile/tile_map.cpp',
-        'tile/tile_packer.cpp',
-        'screen/view.cpp',
         ])
 
+debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
+# -W: unused parameter
+# ['-Wall', '-Werror', '-O2', '-g'],
 editor_env = Environment(CPPPATH=['.'],
-                         CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'],
-                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib, 'GL', 'GLEW', 'SDL_image', 'physfs'])
+                         CXXFLAGS=debug_cxxflags,
+                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib,
+                                 'GL', 'GLEW', 'SDL_image', 'physfs'])
 
 editor_env.ParseConfig('pkg-config libpng --libs --cflags')
 editor_env.ParseConfig('sdl-config --cflags --libs')
@@ -244,7 +120,8 @@
 editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
-editor_env.Program('../windstille-editor', [
+editor_env.Program('../windstille-editor',
+                   [
         'editor/about_window.cpp',
         'editor/control_point.cpp',
         'editor/decal_object_model.cpp',

Modified: trunk/windstille/src/armature/ipo_curve.cpp
===================================================================
--- trunk/windstille/src/armature/ipo_curve.cpp	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/src/armature/ipo_curve.cpp	2009-08-19 15:09:20 UTC (rev 2968)
@@ -27,29 +27,32 @@
 }
 
 float
-IpoCurve::evalutate(float x)
+IpoCurve::evalutate(float /*x*/)
 {
   // find bezier points left and right from t
   Vector2f left;
   Vector2f right;
 
   // calculate the value t from x
-  float t;
+  //float t;
 
   // calculate the result
 
   //def bezier(p0, p1, p2, p3, t):
   //    return p0*(1-t)**3 + 3*p1*t*((1-t)**2) + 3*p2*(t**2)*(1-t) + p3*t**3
+  return 0.0f;
 }
 
 void
-IpoCurve::add_point(const BezierPoint& p)
+IpoCurve::add_point(const BezierPoint& /*p*/)
 {
+  /*
   assert(points.empty() ||
          points.back().point.x < p.x &&
          p.handle_left.x < p.x &&
          p.x < p.handle_right.x);
   points.push_back(p);
+  */
 }
 
 /* EOF */

Modified: trunk/windstille/src/armature/ipo_curve.hpp
===================================================================
--- trunk/windstille/src/armature/ipo_curve.hpp	2009-08-18 20:28:47 UTC (rev 2967)
+++ trunk/windstille/src/armature/ipo_curve.hpp	2009-08-19 15:09:20 UTC (rev 2968)
@@ -19,6 +19,10 @@
 #ifndef HEADER_WINDSTILLE_ARMATURE_IPO_CURVE_HPP
 #define HEADER_WINDSTILLE_ARMATURE_IPO_CURVE_HPP
 
+#include <vector>
+
+#include "math/vector2f.hpp"
+
 struct BezierPoint
 {
   Vector2f handle_left;



From grumbel at mail.berlios.de  Wed Aug 19 17:27:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 17:27:39 +0200
Subject: [Windstille-commit] r2969 - in trunk/windstille/src: . lisp physfs
Message-ID: <200908191527.n7JFRdqH028370@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 17:27:38 +0200 (Wed, 19 Aug 2009)
New Revision: 2969

Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/lisp/getters.cpp
   trunk/windstille/src/lisp/lexer.cpp
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/properties.cpp
   trunk/windstille/src/lisp/writer.cpp
   trunk/windstille/src/physfs/physfs_sdl.cpp
   trunk/windstille/src/physfs/physfs_stream.cpp
Log:
Trimmed the SConscript stuff some more

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/SConscript	2009-08-19 15:27:38 UTC (rev 2969)
@@ -23,33 +23,33 @@
 
 # libutil
 util_env = conf_env.Clone()
-util_env['CPPPATH'] = ['.', '..']
+util_env.Append(CPPPATH=['.'])
 util_lib = util_env.StaticLibrary('util', glob('lisp/*.cpp') + glob('util/*.cpp'))
 
 # libphysfs
 physfs_env = conf_env.Clone()
-physfs_env['CPPPATH'] = ['.', '..']
+physfs_env.Append(CPPPATH=['.'])
 physfs_env.ParseConfig('sdl-config --cflags --libs')
 physfs_lib = physfs_env.StaticLibrary('physfs', glob('physfs/*.cpp'))
 
 # libmath
 math_env = conf_env.Clone()
-math_env['CPPPATH'] = ['.']
+math_env.Append(CPPPATH=['.'])
 math_lib = math_env.StaticLibrary('math', glob('math/*.cpp'))
 
 # libnavgraph
 navgraph_env = conf_env.Clone()
-navgraph_env['CPPPATH'] = ['.']
+navgraph_env.Append(CPPPATH=['.'])
 navgraph_lib = navgraph_env.StaticLibrary('navgraph', glob('navigation/*.cpp'))
 
 # libparticles
 particles_env = conf_env.Clone()
-particles_env['CPPPATH'] = ['.']
+particles_env.Append(CPPPATH=['.'])
 particles_lib = particles_env.StaticLibrary('particles', glob('particles/*.cpp'))
 
 # libdisplay
 display_env = conf_env.Clone()
-display_env['CPPPATH'] = ['.', '..']
+display_env.Append(CPPPATH=['.'])
 display_env.ParseConfig('sdl-config --cflags --libs')
 display_env.ParseConfig('freetype-config --libs --cflags')
 display_lib = display_env.StaticLibrary('display', 
@@ -88,6 +88,7 @@
             glob('sound/*.cpp') +
             glob('scripting/*.cpp') +
             glob('engine/*.cpp') +
+#            glob('gui/*.cpp') +
             [
         'gui/automap.cpp',
         'gui/button.cpp',
@@ -121,6 +122,7 @@
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
 editor_env.Program('../windstille-editor',
+#                   glob('editor/*.cpp'))
                    [
         'editor/about_window.cpp',
         'editor/control_point.cpp',

Modified: trunk/windstille/src/lisp/getters.cpp
===================================================================
--- trunk/windstille/src/lisp/getters.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/lisp/getters.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -1,4 +1,3 @@
-#include <config.h>
 #include "getters.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/lisp/lexer.cpp
===================================================================
--- trunk/windstille/src/lisp/lexer.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/lisp/lexer.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -14,7 +14,6 @@
 //  You should have received a copy of the GNU General Public License
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-#include <config.h>
 
 #include <sstream>
 #include <stdexcept>

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -17,7 +17,6 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <string.h>
-#include <config.h>
 #include <assert.h>
 #include "lisp.hpp"
 

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -15,7 +15,6 @@
 //  You should have received a copy of the GNU General Public License
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-#include <config.h>
 
 #include <memory>
 #include <string.h>

Modified: trunk/windstille/src/lisp/properties.cpp
===================================================================
--- trunk/windstille/src/lisp/properties.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/lisp/properties.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -1,4 +1,3 @@
-#include <config.h>
 
 #include "lisp.hpp"
 #include "properties.hpp"

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -15,8 +15,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <config.h>
-
 #include <iostream>
 
 #include "writer.hpp"

Modified: trunk/windstille/src/physfs/physfs_sdl.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -15,7 +15,6 @@
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
-#include <config.h>
 
 #include "physfs_sdl.hpp"
 

Modified: trunk/windstille/src/physfs/physfs_stream.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-19 15:09:20 UTC (rev 2968)
+++ trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-19 15:27:38 UTC (rev 2969)
@@ -15,7 +15,6 @@
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
-#include <config.h>
 
 #include "physfs_stream.hpp"
 



From grumbel at mail.berlios.de  Wed Aug 19 17:30:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 17:30:01 +0200
Subject: [Windstille-commit] r2970 - in trunk/windstille/src: . gui
Message-ID: <200908191530.n7JFU1HN028541@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 17:30:00 +0200 (Wed, 19 Aug 2009)
New Revision: 2970

Removed:
   trunk/windstille/src/gui/component_factory.cpp
   trunk/windstille/src/gui/component_factory.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/gui/
Log:
Removed some more stuff

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-08-19 15:27:38 UTC (rev 2969)
+++ trunk/windstille/src/SConscript	2009-08-19 15:30:00 UTC (rev 2970)
@@ -88,24 +88,7 @@
             glob('sound/*.cpp') +
             glob('scripting/*.cpp') +
             glob('engine/*.cpp') +
-#            glob('gui/*.cpp') +
-            [
-        'gui/automap.cpp',
-        'gui/button.cpp',
-        'gui/component.cpp',
-        'gui/grid_component.cpp',
-        'gui/group_component.cpp',
-        'gui/gui_manager.cpp',
-        'gui/label.cpp',
-        'gui/list_view.cpp',
-        'gui/menu.cpp',
-        'gui/menu_component.cpp',
-        'gui/menu_item.cpp',
-        'gui/root_component.cpp',
-        'gui/slider.cpp',
-        'gui/tab_component.cpp',
-        'gui/text_view.cpp',
-        ])
+            glob('gui/*.cpp'))
 
 debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
 # -W: unused parameter


Property changes on: trunk/windstille/src/gui
___________________________________________________________________
Name: svn:ignore
   - 
.sconsign
semantic.cache

   + old
.sconsign
semantic.cache


Deleted: trunk/windstille/src/gui/component_factory.cpp
===================================================================
--- trunk/windstille/src/gui/component_factory.cpp	2009-08-19 15:27:38 UTC (rev 2969)
+++ trunk/windstille/src/gui/component_factory.cpp	2009-08-19 15:30:00 UTC (rev 2970)
@@ -1,63 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include <stdexcept>
-#include "tab_component.hpp"
-#include "grid_component.hpp"
-#include "automap.hpp"
-#include "button.hpp"
-#include "component_factory.hpp"
-
-namespace gui {
-
-ComponentFactory::ComponentFactory()
-{
-}
-
-ComponentFactory::~ComponentFactory()
-{
-}
-
-Component*
-ComponentFactory::create(const std::string& name, FileReader& reader, Component* parent)
-{
-  if (name == "tab")
-    {
-      return new TabComponent(reader, parent);
-    }
-  else if (name == "automap")
-    {
-      return new Automap(reader, parent);
-    }
-  else if (name == "grid")
-    {
-      return new GridComponent(reader, parent);
-    }
-  else if (name == "button")
-    {
-      return new Button(reader, parent);
-    }
-  else
-    {
-      throw std::runtime_error("Error: Unknown component");
-    }
-}
-
-} // namespace gui
-
-/* EOF */

Deleted: trunk/windstille/src/gui/component_factory.hpp
===================================================================
--- trunk/windstille/src/gui/component_factory.hpp	2009-08-19 15:27:38 UTC (rev 2969)
+++ trunk/windstille/src/gui/component_factory.hpp	2009-08-19 15:30:00 UTC (rev 2970)
@@ -1,47 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_GUI_COMPONENT_FACTORY_HPP
-#define HEADER_WINDSTILLE_GUI_COMPONENT_FACTORY_HPP
-
-#include <string>
-
-namespace gui {
-
-class Component;
-
-/** */
-class ComponentFactory
-{
-private:
-public:
-  ComponentFactory();
-  ~ComponentFactory();
-
-  Component* create(const std::string& name, FileReader& reader, Component* parent);
-  
-private:
-  ComponentFactory (const ComponentFactory&);
-  ComponentFactory& operator= (const ComponentFactory&);
-};
-
-} // namespace gui
-
-#endif
-
-/* EOF */



From grumbel at mail.berlios.de  Wed Aug 19 17:35:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 17:35:26 +0200
Subject: [Windstille-commit] r2971 - in trunk/windstille/src: . properties
Message-ID: <200908191535.n7JFZQDb029144@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 17:35:25 +0200 (Wed, 19 Aug 2009)
New Revision: 2971

Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/properties/properties.hpp
Log:
Trimmed the SConscript stuff some more

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-08-19 15:30:00 UTC (rev 2970)
+++ trunk/windstille/src/SConscript	2009-08-19 15:35:25 UTC (rev 2971)
@@ -59,6 +59,8 @@
                                         glob('sprite3d/*.cpp'))
 
 env = conf_env.Clone()
+env.ParseConfig('sdl-config --cflags --libs')
+env.ParseConfig('freetype-config --libs --cflags')
 env.Append(LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
                  'GL', 'GLU', 'GLEW',
                  'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
@@ -72,9 +74,6 @@
     env.Append(CPPDEFINES = 'HAVE_CWIID')
     env.Append(LIBS = 'cwiid')
 
-env.ParseConfig('sdl-config --cflags --libs')
-env.ParseConfig('freetype-config --libs --cflags')
-
 env.Program('../windstille', 
             glob('app/*.cpp') +
             glob('armature/*.cpp') +
@@ -104,37 +103,6 @@
 editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
-editor_env.Program('../windstille-editor',
-#                   glob('editor/*.cpp'))
-                   [
-        'editor/about_window.cpp',
-        'editor/control_point.cpp',
-        'editor/decal_object_model.cpp',
-        'editor/decal_rotate_control_point.cpp',
-        'editor/decal_scale_control_point.cpp',
-        'editor/editor_window.cpp',
-        'editor/layer_widget.cpp',
-#        'editor/group_command.cpp',
-        'editor/layer.cpp',
-        'editor/main.cpp',
-        'editor/minimap_widget.cpp',
-        'editor/object_model.cpp',
-#        'editor/object_commands.cpp',
-        'editor/object_model_factory.cpp',
-        'editor/object_selector.cpp',
-        'editor/particle_system_object_model.cpp',
-        'editor/layer_manager.cpp',
-        'editor/navgraph_insert_tool.cpp',
-        'editor/navgraph_select_tool.cpp',
-        'editor/scroll_tool.cpp',
-        'editor/sector_model.cpp',
-        'editor/select_tool.cpp',
-        'editor/selection.cpp',
-        'editor/node_selection.cpp',
-        'editor/sprite_object_model.cpp',
-        'editor/windstille_widget.cpp',
-        'editor/zoom_tool.cpp',
-        'editor/undo_manager.cpp',
-        ])
+editor_env.Program('../windstille-editor', glob('editor/*.cpp'))
 
 # EOF #

Modified: trunk/windstille/src/properties/properties.hpp
===================================================================
--- trunk/windstille/src/properties/properties.hpp	2009-08-19 15:30:00 UTC (rev 2970)
+++ trunk/windstille/src/properties/properties.hpp	2009-08-19 15:35:25 UTC (rev 2971)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_PROPERTIES_PROPERTIES_HPP
 #define HEADER_WINDSTILLE_PROPERTIES_PROPERTIES_HPP
 
+#include <vector>
 #include <string>
 
 class PropertySet;



From grumbel at mail.berlios.de  Wed Aug 19 17:46:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 17:46:26 +0200
Subject: [Windstille-commit] r2972 - in trunk/windstille: . src
Message-ID: <200908191546.n7JFkQq7030429@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 17:46:25 +0200 (Wed, 19 Aug 2009)
New Revision: 2972

Modified:
   trunk/windstille/SConstruct
   trunk/windstille/src/SConscript
Log:
Trimmed the SConscript stuff some more

Modified: trunk/windstille/SConstruct
===================================================================
--- trunk/windstille/SConstruct	2009-08-19 15:35:25 UTC (rev 2971)
+++ trunk/windstille/SConstruct	2009-08-19 15:46:25 UTC (rev 2972)
@@ -18,7 +18,8 @@
 import sys, os
 sys.path.append('scons')
 
-CacheDir('cache/')
+CacheDir('cache')
+# VariantDir('build', '.')
 
 def CheckSDL(context, version):
     context.Message( 'Checking for SDL >= %s ...' % version )

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-08-19 15:35:25 UTC (rev 2971)
+++ trunk/windstille/src/SConscript	2009-08-19 15:46:25 UTC (rev 2972)
@@ -15,37 +15,43 @@
 ##  You should have received a copy of the GNU General Public License
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-from glob import glob
+import glob
 
 Import('conf_env', 'features')
 
 SConscript('scripting/SConscript')
+
+def expand_path(*args):
+    lst = []
+    for i in args:
+        lst += glob.glob(i)
+    return lst
 
 # libutil
 util_env = conf_env.Clone()
 util_env.Append(CPPPATH=['.'])
-util_lib = util_env.StaticLibrary('util', glob('lisp/*.cpp') + glob('util/*.cpp'))
+util_lib = util_env.StaticLibrary('util', expand_path('lisp/*.cpp',  'util/*.cpp'))
 
 # libphysfs
 physfs_env = conf_env.Clone()
 physfs_env.Append(CPPPATH=['.'])
 physfs_env.ParseConfig('sdl-config --cflags --libs')
-physfs_lib = physfs_env.StaticLibrary('physfs', glob('physfs/*.cpp'))
+physfs_lib = physfs_env.StaticLibrary('physfs', expand_path('physfs/*.cpp'))
 
 # libmath
 math_env = conf_env.Clone()
 math_env.Append(CPPPATH=['.'])
-math_lib = math_env.StaticLibrary('math', glob('math/*.cpp'))
+math_lib = math_env.StaticLibrary('math', expand_path('math/*.cpp'))
 
 # libnavgraph
 navgraph_env = conf_env.Clone()
 navgraph_env.Append(CPPPATH=['.'])
-navgraph_lib = navgraph_env.StaticLibrary('navgraph', glob('navigation/*.cpp'))
+navgraph_lib = navgraph_env.StaticLibrary('navgraph', expand_path('navigation/*.cpp'))
 
 # libparticles
 particles_env = conf_env.Clone()
 particles_env.Append(CPPPATH=['.'])
-particles_lib = particles_env.StaticLibrary('particles', glob('particles/*.cpp'))
+particles_lib = particles_env.StaticLibrary('particles', expand_path('particles/*.cpp'))
 
 # libdisplay
 display_env = conf_env.Clone()
@@ -53,10 +59,8 @@
 display_env.ParseConfig('sdl-config --cflags --libs')
 display_env.ParseConfig('freetype-config --libs --cflags')
 display_lib = display_env.StaticLibrary('display', 
-                                        glob('font/*.cpp') +
-                                        glob('display/*.cpp') +
-                                        glob('sprite2d/*.cpp') +
-                                        glob('sprite3d/*.cpp'))
+                                        expand_path('font/*.cpp', 'display/*.cpp', 'sprite2d/*.cpp', 'sprite3d/*.cpp'))
+
 
 env = conf_env.Clone()
 env.ParseConfig('sdl-config --cflags --libs')
@@ -74,20 +78,19 @@
     env.Append(CPPDEFINES = 'HAVE_CWIID')
     env.Append(LIBS = 'cwiid')
 
-env.Program('../windstille', 
-            glob('app/*.cpp') +
-            glob('armature/*.cpp') +
-            glob('collision/*.cpp') +
-            glob('input/*.cpp') +
-            glob('hud/*.cpp') +
-            glob('objects/*.cpp') +
-            glob('screen/*.cpp') +
-            glob('properties/*.cpp') +
-            glob('tile/*.cpp') +
-            glob('sound/*.cpp') +
-            glob('scripting/*.cpp') +
-            glob('engine/*.cpp') +
-            glob('gui/*.cpp'))
+env.Program('../windstille', expand_path('app/*.cpp',
+                                         'armature/*.cpp',
+                                         'collision/*.cpp',
+                                         'engine/*.cpp',
+                                         'gui/*.cpp',
+                                         'hud/*.cpp',
+                                         'input/*.cpp',
+                                         'objects/*.cpp',
+                                         'properties/*.cpp',
+                                         'screen/*.cpp',
+                                         'scripting/*.cpp',
+                                         'sound/*.cpp',
+                                         'tile/*.cpp'))
 
 debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
 # -W: unused parameter
@@ -103,6 +106,6 @@
 editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
-editor_env.Program('../windstille-editor', glob('editor/*.cpp'))
+editor_env.Program('../windstille-editor', expand_path('editor/*.cpp'))
 
 # EOF #



From grumbel at mail.berlios.de  Wed Aug 19 19:03:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 19:03:37 +0200
Subject: [Windstille-commit] r2973 - in trunk/windstille: . data external
	src src/engine src/scripting
Message-ID: <200908191703.n7JH3b9C028785@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 19:03:32 +0200 (Wed, 19 Aug 2009)
New Revision: 2973

Removed:
   trunk/windstille/data/SConscript
   trunk/windstille/external/SConscript
   trunk/windstille/src/SConscript
   trunk/windstille/src/scripting/SConscript
Modified:
   trunk/windstille/SConstruct
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/scripting/wrapper.hpp
Log:
Merged all SConscript back together

Modified: trunk/windstille/SConstruct
===================================================================
--- trunk/windstille/SConstruct	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/SConstruct	2009-08-19 17:03:32 UTC (rev 2973)
@@ -15,66 +15,12 @@
 ##  You should have received a copy of the GNU General Public License
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-import sys, os
+import sys, os, glob
 sys.path.append('scons')
 
 CacheDir('cache')
-# VariantDir('build', '.')
 
-def CheckSDL(context, version):
-    context.Message( 'Checking for SDL >= %s ...' % version )
-    (ret, outstring) = context.TryAction('sdl-config --version')
-    if ret:
-        outstring = outstring[0:-1]
-        if outstring != version:
-            context.Result( "failed, got '%s' instead" % outstring )
-            return 0
-        else:
-            context.Result( 1 )
-            return 1
-    else:
-        context.Result( ret )
-        return ret
-
-def CheckPhysFS(context, version):
-    optionFile = env['CACHEDIR'] + 'libphysfs.cache.py'
-    opts = Variables(optionFile)
-    opts.AddVariables(('CACHED_LIBPHYSFS',    'Whether libphysfs is available'),
-                      ('CXXFLAGS_LIBPHYSFS',  ''),
-                      ('LINKFLAGS_LIBPHYSFS', ''))
-    opts.Update(context.env)
-
-    context.Message( 'Checking for PhysFS >= %s ...' % version )
-    if not context.env.has_key('CACHED_LIBPHYSFS'):
-        oldLIBS = context.env.get( 'LIBS', [] )
-        context.env.Append(LIBS = [ 'physfs' ])
-        ret = context.TryCompile("""
-        #include <physfs.h>
-        int main()
-        {
-           return 0;
-        }
-        """, '.c')
-        oldLIBS = context.env.get( 'LIBS', [] )
-        context.env.Replace(LIBS = oldLIBS)
-
-        if ret:
-            env['CACHED_LIBPHYSFS']  = '1'
-            env['CXXFLAGS_LIBPHYSFS']  = ''
-            env['LINKFLAGS_LIBPHYSFS'] = '-lphysfs'
-
-            opts.Save(optionFile, context.env)
-            context.Result(ret)
-            return ret
-        else:
-            context.Result(ret)
-        return ret
-    else:
-        context.Result('ok (cached)')
-        return 1
-
 # YACC
-
 yacc_test_text = """
 %{
 #include <stdio.h>
@@ -100,7 +46,6 @@
 	return is_ok
 
 # LEX
-
 lex_test_text = """
 %{
 #include <stdio.h>
@@ -199,15 +144,147 @@
     
 conf_env = conf.Finish()
 
-Export('conf_env', 'features')
-
 # SConscript('build/tools/SConscript')
 # SConscript('build/lib/SConscript')
 # SConscript('build/src/SConscript')
 # SConscript('build/src/scripting/SConscript')
+
+squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],
+                           CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
 
-SConscript('external/SConscript')
-SConscript('src/SConscript')
-SConscript('data/SConscript')
+if features['64bit']:
+    squirrel_env.Append(CPPDEFINES = '_SQ64')
 
+# squirrel_env.Append(CXXFLAGS = conf_env['CXXFLAGS'])
+
+squirrel_env.Library('squirrel',
+                     Glob('external/SQUIRREL2/squirrel/*.cpp') +
+                     Glob('external/SQUIRREL2/sqstdlib/*.cpp'))
+
+
+miniswig_env = Environment(CPPPATH=['.', "..", "miniswig"],
+                           CXXFILESUFFIX = ".cpp",
+                           YACCFLAGS=['-d', '--no-lines'])
+
+miniswig = miniswig_env.Program('external/miniswig/miniswig',
+                                ['external/miniswig/parser.yy',
+                                 'external/miniswig/lexer.ll',
+                                 'external/miniswig/create_docu.cpp',
+                                 'external/miniswig/xmlwriter.cpp',
+                                 'external/miniswig/create_wrapper.cpp',
+                                 'external/miniswig/main.cpp',
+                                 'external/miniswig/tree.cpp'])
+
+env = Environment(MINISWIG='external/miniswig/miniswig')
+
+env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
+                        ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
+            ['src/scripting/interface.hpp',
+             'src/scripting/game_objects.hpp'])
+
+env.Depends(env.Command(['src/scripting/wrapper.cpp', 'src/scripting/wrapper.hpp'], 'src/scripting/miniswig.tmp',
+                        ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
+            miniswig)
+
+Export('conf_env', 'features', 'miniswig')
+
+def expand_path(*args):
+    lst = []
+    for i in args:
+        lst += Glob(i)
+    return lst
+
+# libutil
+util_env = conf_env.Clone()
+util_env.Append(CPPPATH=['src'])
+util_lib = util_env.StaticLibrary('util', expand_path('src/lisp/*.cpp',  'src/util/*.cpp'))
+
+# libphysfs
+physfs_env = conf_env.Clone()
+physfs_env.Append(CPPPATH=['src'])
+physfs_env.ParseConfig('sdl-config --cflags --libs')
+physfs_lib = physfs_env.StaticLibrary('src/physfs', expand_path('src/physfs/*.cpp'))
+
+# libmath
+math_env = conf_env.Clone()
+math_env.Append(CPPPATH=['src'])
+math_lib = math_env.StaticLibrary('math', expand_path('src/math/*.cpp'))
+
+# libnavgraph
+navgraph_env = conf_env.Clone()
+navgraph_env.Append(CPPPATH=['src'])
+navgraph_lib = navgraph_env.StaticLibrary('navgraph', expand_path('src/navigation/*.cpp'))
+
+# libparticles
+particles_env = conf_env.Clone()
+particles_env.Append(CPPPATH=['src'])
+particles_lib = particles_env.StaticLibrary('particles', expand_path('src/particles/*.cpp'))
+
+# libdisplay
+display_env = conf_env.Clone()
+display_env.Append(CPPPATH=['src'])
+display_env.ParseConfig('sdl-config --cflags --libs')
+display_env.ParseConfig('freetype-config --libs --cflags')
+display_lib = display_env.StaticLibrary('display', 
+                                        expand_path('src/font/*.cpp',
+                                                    'src/display/*.cpp',
+                                                    'src/sprite2d/*.cpp',
+                                                    'src/sprite3d/*.cpp'))
+
+
+env = conf_env.Clone()
+env.ParseConfig('sdl-config --cflags --libs')
+env.ParseConfig('freetype-config --libs --cflags')
+env.Append(LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
+                 'GL', 'GLU', 'GLEW',
+                 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
+env.Append(LIBPATH=['external/'])
+env.Append(CPPPATH=['src', '.', 'external/SQUIRREL2/include/'])
+
+if features['64bit']:
+    env.Append(CPPDEFINES = '_SQ64')
+
+if features['cwiid']:
+    env.Append(CPPDEFINES = 'HAVE_CWIID')
+    env.Append(LIBS = 'cwiid')
+
+env.Program('windstille', expand_path('src/app/*.cpp',
+                                         'src/armature/*.cpp',
+                                         'src/collision/*.cpp',
+                                         'src/engine/*.cpp',
+                                         'src/gui/*.cpp',
+                                         'src/hud/*.cpp',
+                                         'src/input/*.cpp',
+                                         'src/objects/*.cpp',
+                                         'src/properties/*.cpp',
+                                         'src/screen/*.cpp',
+                                         'src/scripting/*.cpp',
+                                         'src/sound/*.cpp',
+                                         'src/tile/*.cpp'))
+
+debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
+# -W: unused parameter
+# ['-Wall', '-Werror', '-O2', '-g'],
+editor_env = Environment(CPPPATH=['.'],
+                         CXXFLAGS=debug_cxxflags,
+                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib,
+                                 'GL', 'GLEW', 'SDL_image', 'physfs'])
+
+editor_env.ParseConfig('pkg-config libpng --libs --cflags')
+editor_env.ParseConfig('sdl-config --cflags --libs')
+editor_env.ParseConfig('Magick++-config --libs --cppflags')
+editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
+editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
+
+editor_env.Program('../windstille-editor', expand_path('editor/*.cpp'))
+
+data_env = conf_env.Clone()
+
+data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
+                                                 src_suffix = ".xcf",
+                                                 suffix = ".png") })
+
+for filename in glob.glob("data/images/decal/*.xcf"):
+    data_env.xcf2png(filename)
+
 # EOF #

Deleted: trunk/windstille/data/SConscript
===================================================================
--- trunk/windstille/data/SConscript	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/data/SConscript	2009-08-19 17:03:32 UTC (rev 2973)
@@ -1,31 +0,0 @@
-##  -*- python -*-
-##  Windstille - A Sci-Fi Action-Adventure Game
-##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-##
-##  This program is free software: you can redistribute it and/or modify
-##  it under the terms of the GNU General Public License as published by
-##  the Free Software Foundation, either version 3 of the License, or
-##  (at your option) any later version.
-##  
-##  This program is distributed in the hope that it will be useful,
-##  but WITHOUT ANY WARRANTY; without even the implied warranty of
-##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-##  GNU General Public License for more details.
-##  
-##  You should have received a copy of the GNU General Public License
-##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-
-import glob
-
-Import('conf_env', 'features')
-
-data_env = conf_env.Clone()
-
-data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
-                                                 src_suffix = ".xcf",
-                                                 suffix = ".png") })
-
-for filename in glob.glob("images/decal/*.xcf"):
-    data_env.xcf2png(filename)
-
-# EOF #

Deleted: trunk/windstille/external/SConscript
===================================================================
--- trunk/windstille/external/SConscript	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/external/SConscript	2009-08-19 17:03:32 UTC (rev 2973)
@@ -1,39 +0,0 @@
-## -*- python -*-
-
-import glob
-
-Import('conf_env', 'features')
-
-squirrel_env = Environment(CPPPATH  = ['SQUIRREL2/include'],
-                           CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
-
-if features['64bit']:
-    squirrel_env.Append(CPPDEFINES = '_SQ64')
-
-# squirrel_env.Append(CXXFLAGS = conf_env['CXXFLAGS'])
-
-squirrel_env.Library('squirrel',
-                     glob.glob('SQUIRREL2/squirrel/*.cpp') +
-                     glob.glob('SQUIRREL2/sqstdlib/*.cpp'))
-
-# ______________________________________________________________________
-#
-
-miniswig_env = Environment(CPPPATH=['../..', "..", "miniswig"],
-                           CXXFILESUFFIX = ".cpp",
-                           YACCFLAGS=['-d', '--no-lines'])
-
-miniswig = miniswig_env.Program('miniswig/miniswig',
-                                ['miniswig/parser.yy',
-                                 'miniswig/lexer.ll',
-                                 'miniswig/create_docu.cpp',
-                                 'miniswig/xmlwriter.cpp',
-                                 'miniswig/create_wrapper.cpp',
-                                 'miniswig/main.cpp',
-                                 'miniswig/tree.cpp'])
-
-# bison -d --no-lines -o tools/miniswig/parser.cpp tools/miniswig/parser.yy
-
-Export('miniswig')
-
-# EOF #

Deleted: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/src/SConscript	2009-08-19 17:03:32 UTC (rev 2973)
@@ -1,111 +0,0 @@
-##  -*- python -*-
-##  Windstille - A Sci-Fi Action-Adventure Game
-##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-##
-##  This program is free software: you can redistribute it and/or modify
-##  it under the terms of the GNU General Public License as published by
-##  the Free Software Foundation, either version 3 of the License, or
-##  (at your option) any later version.
-##  
-##  This program is distributed in the hope that it will be useful,
-##  but WITHOUT ANY WARRANTY; without even the implied warranty of
-##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-##  GNU General Public License for more details.
-##  
-##  You should have received a copy of the GNU General Public License
-##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-
-import glob
-
-Import('conf_env', 'features')
-
-SConscript('scripting/SConscript')
-
-def expand_path(*args):
-    lst = []
-    for i in args:
-        lst += glob.glob(i)
-    return lst
-
-# libutil
-util_env = conf_env.Clone()
-util_env.Append(CPPPATH=['.'])
-util_lib = util_env.StaticLibrary('util', expand_path('lisp/*.cpp',  'util/*.cpp'))
-
-# libphysfs
-physfs_env = conf_env.Clone()
-physfs_env.Append(CPPPATH=['.'])
-physfs_env.ParseConfig('sdl-config --cflags --libs')
-physfs_lib = physfs_env.StaticLibrary('physfs', expand_path('physfs/*.cpp'))
-
-# libmath
-math_env = conf_env.Clone()
-math_env.Append(CPPPATH=['.'])
-math_lib = math_env.StaticLibrary('math', expand_path('math/*.cpp'))
-
-# libnavgraph
-navgraph_env = conf_env.Clone()
-navgraph_env.Append(CPPPATH=['.'])
-navgraph_lib = navgraph_env.StaticLibrary('navgraph', expand_path('navigation/*.cpp'))
-
-# libparticles
-particles_env = conf_env.Clone()
-particles_env.Append(CPPPATH=['.'])
-particles_lib = particles_env.StaticLibrary('particles', expand_path('particles/*.cpp'))
-
-# libdisplay
-display_env = conf_env.Clone()
-display_env.Append(CPPPATH=['.'])
-display_env.ParseConfig('sdl-config --cflags --libs')
-display_env.ParseConfig('freetype-config --libs --cflags')
-display_lib = display_env.StaticLibrary('display', 
-                                        expand_path('font/*.cpp', 'display/*.cpp', 'sprite2d/*.cpp', 'sprite3d/*.cpp'))
-
-
-env = conf_env.Clone()
-env.ParseConfig('sdl-config --cflags --libs')
-env.ParseConfig('freetype-config --libs --cflags')
-env.Append(LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
-                 'GL', 'GLU', 'GLEW',
-                 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
-env.Append(LIBPATH=['../external/'])
-env.Append(CPPPATH=['.', '..', '../external/SQUIRREL2/include/'])
-
-if features['64bit']:
-    env.Append(CPPDEFINES = '_SQ64')
-
-if features['cwiid']:
-    env.Append(CPPDEFINES = 'HAVE_CWIID')
-    env.Append(LIBS = 'cwiid')
-
-env.Program('../windstille', expand_path('app/*.cpp',
-                                         'armature/*.cpp',
-                                         'collision/*.cpp',
-                                         'engine/*.cpp',
-                                         'gui/*.cpp',
-                                         'hud/*.cpp',
-                                         'input/*.cpp',
-                                         'objects/*.cpp',
-                                         'properties/*.cpp',
-                                         'screen/*.cpp',
-                                         'scripting/*.cpp',
-                                         'sound/*.cpp',
-                                         'tile/*.cpp'))
-
-debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
-# -W: unused parameter
-# ['-Wall', '-Werror', '-O2', '-g'],
-editor_env = Environment(CPPPATH=['.'],
-                         CXXFLAGS=debug_cxxflags,
-                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib,
-                                 'GL', 'GLEW', 'SDL_image', 'physfs'])
-
-editor_env.ParseConfig('pkg-config libpng --libs --cflags')
-editor_env.ParseConfig('sdl-config --cflags --libs')
-editor_env.ParseConfig('Magick++-config --libs --cppflags')
-editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
-editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
-
-editor_env.Program('../windstille-editor', expand_path('editor/*.cpp'))
-
-# EOF #

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-19 17:03:32 UTC (rev 2973)
@@ -33,6 +33,7 @@
 #include "app/console.hpp"
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
+#include "scripting/game_objects.hpp"
 #include "scripting/squirrel_error.hpp"
 #include "physfs/physfs_stream.hpp"
 

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-08-19 17:03:32 UTC (rev 2973)
@@ -30,6 +30,7 @@
 #include "scripting/util.hpp"
 
 class SquirrelThread;
+class GameObject;
 
 /**
  * This class is responsible for managing all running squirrel threads

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-19 17:03:32 UTC (rev 2973)
@@ -16,9 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "squirrel_thread.hpp"
+
+#include "app/globals.hpp"
 #include "scripting/util.hpp"
 #include "scripting/squirrel_error.hpp"
-#include "squirrel_thread.hpp"
+#include "scripting/game_objects.hpp"
 
 using Scripting::SquirrelError;
 

Deleted: trunk/windstille/src/scripting/SConscript
===================================================================
--- trunk/windstille/src/scripting/SConscript	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/src/scripting/SConscript	2009-08-19 17:03:32 UTC (rev 2973)
@@ -1,17 +0,0 @@
-## -*- python -*-
-
-import SCons
-
-Import(['miniswig'])
-
-env = Environment(MINISWIG='external/miniswig/miniswig')
-
-env.Depends(env.Command('miniswig.tmp', 'wrapper.interface.hpp',
-                        ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
-            ['interface.hpp', 'game_objects.hpp'])
-
-env.Depends(env.Command(['wrapper.cpp', 'wrapper.hpp'], 'miniswig.tmp',
-                        ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
-            miniswig)
-
-# EOF #

Modified: trunk/windstille/src/scripting/wrapper.hpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.hpp	2009-08-19 15:46:25 UTC (rev 2972)
+++ trunk/windstille/src/scripting/wrapper.hpp	2009-08-19 17:03:32 UTC (rev 2973)
@@ -7,16 +7,19 @@
 #define __windstille_WRAPPER_H__
 
 #include <squirrel.h>
-#include "wrapper.interface.hpp"
 
 namespace Scripting
 {
 
 void register_windstille_wrapper(HSQUIRRELVM v);
 
+class GameObject;
 void create_squirrel_instance(HSQUIRRELVM v, Scripting::GameObject* object, bool setup_releasehook = false);
+class TestObject;
 void create_squirrel_instance(HSQUIRRELVM v, Scripting::TestObject* object, bool setup_releasehook = false);
+class Player;
 void create_squirrel_instance(HSQUIRRELVM v, Scripting::Player* object, bool setup_releasehook = false);
+class ScriptableObject;
 void create_squirrel_instance(HSQUIRRELVM v, Scripting::ScriptableObject* object, bool setup_releasehook = false);
 
 }



From grumbel at mail.berlios.de  Wed Aug 19 20:15:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 20:15:41 +0200
Subject: [Windstille-commit] r2974 - trunk/windstille/src/editor
Message-ID: <200908191815.n7JIFfCh032578@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 20:15:41 +0200 (Wed, 19 Aug 2009)
New Revision: 2974

Modified:
   trunk/windstille/src/editor/main.cpp
Log:
Catch exceptions properly

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-08-19 17:03:32 UTC (rev 2973)
+++ trunk/windstille/src/editor/main.cpp	2009-08-19 18:15:41 UTC (rev 2974)
@@ -82,9 +82,13 @@
       
       Gtk::Main::run(window);
     }
+  catch(Glib::Exception& err)
+    {
+      std::cout << "Glib::Exception: " << err.what() << std::endl;
+    }
   catch(std::exception& err)
     {
-      std::cout << "Exception: " << err.what() << std::endl;
+      std::cout << "std::exception: " << err.what() << std::endl;
     }
   return 0;
 }



From grumbel at mail.berlios.de  Wed Aug 19 20:16:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 20:16:28 +0200
Subject: [Windstille-commit] r2975 - trunk/windstille
Message-ID: <200908191816.n7JIGSrG000037@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 20:16:28 +0200 (Wed, 19 Aug 2009)
New Revision: 2975

Added:
   trunk/windstille/SConscript
Modified:
   trunk/windstille/SConstruct
Log:
Splitted SConstruct into two files, should make VariantDir handling easier

Added: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-19 18:15:41 UTC (rev 2974)
+++ trunk/windstille/SConscript	2009-08-19 18:16:28 UTC (rev 2975)
@@ -0,0 +1,266 @@
+##  -*- python -*-
+##  Windstille - A Sci-Fi Action-Adventure Game
+##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+##
+##  This program is free software: you can redistribute it and/or modify
+##  it under the terms of the GNU General Public License as published by
+##  the Free Software Foundation, either version 3 of the License, or
+##  (at your option) any later version.
+##  
+##  This program is distributed in the hope that it will be useful,
+##  but WITHOUT ANY WARRANTY; without even the implied warranty of
+##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+##  GNU General Public License for more details.
+##  
+##  You should have received a copy of the GNU General Public License
+##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+import glob
+
+CacheDir('cache')
+
+debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
+
+# YACC
+yacc_test_text = """
+%{
+#include <stdio.h>
+
+/* MSVC++ needs this before it can swallow Bison output */
+#ifdef _MSC_VER
+# define __STDC__
+#endif
+%}
+%token MSG
+%start ROOT
+%%
+ROOT:
+    MSG { printf("HELLO"); } 
+    ;
+%%
+"""
+
+def CheckYacc(context):
+    context.Message("Checking for Yacc ('%s')... " % context.env.get('YACC'))
+    is_ok = context.TryCompile(yacc_test_text,".y")
+    context.Result(is_ok)
+    return is_ok
+
+# LEX
+lex_test_text = """
+%{
+#include <stdio.h>
+%}
+DIGIT	[0-9]
+ID		[a-z][a-z0-9]*
+%%
+{DIGIT}+	{
+		printf("A digit: %s\\n",yytext);
+	}
+
+[ \\t\\n]+    /* ignore */
+
+.			{
+		printf("Unrecognized guff");
+	}
+%%
+main(){
+	yylex();
+}
+"""
+
+def CheckLex(context):
+    context.Message("Checking for Lex ('%s')... " % context.env.get('LEX'))
+    is_ok = context.TryCompile(lex_test_text,".l")
+    context.Result(is_ok)
+    return is_ok
+
+
+def Check32bit(context):
+    check32bit_test_source_file = """
+#include <stdio.h>
+int main()
+{
+   printf("%dbit", sizeof(void*)*8);
+   return 0;
+}
+    """
+    context.Message('Checking for bits... ')
+    (suc, output) = context.TryRun(check32bit_test_source_file, '.cpp')
+    if suc:
+        context.Result(output)
+    else:
+        context.Result("test error")
+    return output
+
+
+conf_env = Environment()
+
+opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
+opts.Add('CPPPATH', 'Additional preprocessor paths')
+opts.Add('CPPFLAGS', 'Additional preprocessor flags')
+opts.Add('CPPDEFINES', 'defined constants')
+opts.Add('LIBPATH', 'Additional library paths')
+opts.Add('LIBS', 'Additional libraries')
+opts.Add('CCFLAGS', 'C Compiler flags')
+opts.Add('CXXFLAGS', 'C++ Compiler flags')
+opts.Add('LINKFLAGS', 'Linker Compiler flags')
+opts.Add('CC', 'C Compiler')
+opts.Add('CXX', 'C++ Compiler')  
+opts.Update(conf_env)
+opts.Save('options.cache', conf_env)
+Help(opts.GenerateHelpText(conf_env))
+
+# FIXME: Giving multiple CCFLAGS doesn't work since they have to be
+# broken down to a list
+
+features = {
+    "64bit" : 0,
+    "cwiid" : 0
+    }
+
+conf = Configure(conf_env, custom_tests = { 'Check32bit' : Check32bit,
+                                            'CheckYacc'  : CheckYacc,
+                                            'CheckLex'   : CheckLex})
+if conf.Check32bit() == "64bit":
+    # conf.env.Append(CXXFLAGS="-D_SQ64")
+    features["64bit"] = 1
+
+if conf.CheckLib('cwiid'):
+    features["cwiid"] = 1
+
+if not conf.CheckLex():
+    print "lex or flex not found, aborting."
+    Exit(1)
+
+if not conf.CheckYacc():
+    print "yacc or bison not found, aborting."
+    Exit(1)
+
+conf_env = conf.Finish()
+
+squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],
+                           CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
+
+if features['64bit']:
+    squirrel_env.Append(CPPDEFINES = '_SQ64')
+
+# squirrel_env.Append(CXXFLAGS = conf_env['CXXFLAGS'])
+
+squirrel_env.Library('squirrel',
+                     Glob('external/SQUIRREL2/squirrel/*.cpp') +
+                     Glob('external/SQUIRREL2/sqstdlib/*.cpp'))
+
+
+miniswig_env = Environment(CPPPATH=['.', 'miniswig'],
+                           CXXFILESUFFIX = ".cpp",
+                           YACCFLAGS=['-d', '--no-lines'])
+
+miniswig_bin = miniswig_env.Program('external/miniswig/miniswig',
+                                    ['external/miniswig/parser.yy',
+                                     'external/miniswig/lexer.ll',
+                                     'external/miniswig/create_docu.cpp',
+                                     'external/miniswig/xmlwriter.cpp',
+                                     'external/miniswig/create_wrapper.cpp',
+                                     'external/miniswig/main.cpp',
+                                     'external/miniswig/tree.cpp'])
+
+env = Environment(MINISWIG='external/miniswig/miniswig')
+
+env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
+                        ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
+            ['src/scripting/interface.hpp',
+             'src/scripting/game_objects.hpp'])
+
+env.Depends(env.Command(['src/scripting/wrapper.cpp', 'src/scripting/wrapper.hpp'], 'src/scripting/miniswig.tmp',
+                        ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
+            miniswig_bin)
+
+# libutil
+util_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+util_lib = util_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
+
+# libphysfs
+physfs_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+physfs_env.ParseConfig('sdl-config --cflags --libs')
+physfs_lib = physfs_env.StaticLibrary('src/physfs', Glob('src/physfs/*.cpp'))
+
+# libmath
+math_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+math_lib = math_env.StaticLibrary('math', Glob('src/math/*.cpp'))
+
+# libnavgraph
+navgraph_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+navgraph_lib = navgraph_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
+
+# libparticles
+particles_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+particles_lib = particles_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
+
+# libdisplay
+display_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+display_env.ParseConfig('sdl-config --cflags --libs')
+display_env.ParseConfig('freetype-config --libs --cflags')
+display_lib = display_env.StaticLibrary('display', 
+                                        Glob('src/font/*.cpp') +
+                                        Glob('src/display/*.cpp') +
+                                        Glob('src/sprite2d/*.cpp') +
+                                        Glob('src/sprite3d/*.cpp'))
+
+
+windstille_env = Environment(CXXFLAGS=debug_cxxflags,
+                  CPPPATH=['src', '.', 'external/SQUIRREL2/include/'],
+                  LIBPATH=['external/'],
+                  LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
+                        'GL', 'GLU', 'GLEW',
+                        'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
+
+windstille_env.ParseConfig('sdl-config --cflags --libs')
+windstille_env.ParseConfig('freetype-config --libs --cflags')
+
+if features['64bit']:
+    windstille_env.Append(CPPDEFINES = '_SQ64')
+
+if features['cwiid']:
+    windstille_env.Append(CPPDEFINES = 'HAVE_CWIID')
+    windstille_env.Append(LIBS = 'cwiid')
+
+windstille_env.Program('windstille',
+                       Glob('src/app/*.cpp') +
+                       Glob('src/armature/*.cpp') +
+                       Glob('src/collision/*.cpp') +
+                       Glob('src/engine/*.cpp') +
+                       Glob('src/gui/*.cpp') +
+                       Glob('src/hud/*.cpp') +
+                       Glob('src/input/*.cpp') +
+                       Glob('src/objects/*.cpp') +
+                       Glob('src/properties/*.cpp') +
+                       Glob('src/screen/*.cpp') +
+                       Glob('src/scripting/*.cpp') +
+                       Glob('src/sound/*.cpp') +
+                       Glob('src/tile/*.cpp'))
+
+editor_env = Environment(CPPPATH=['src'],
+                         CXXFLAGS=debug_cxxflags,
+                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib,
+                                 'GL', 'GLEW', 'SDL_image', 'physfs'])
+
+editor_env.ParseConfig('Magick++-config --libs --cppflags')
+editor_env.ParseConfig('sdl-config --cflags --libs')
+editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4')
+editor_env.ParseConfig('pkg-config --cflags --libs gtkglextmm-1.2')
+editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
+editor_env.ParseConfig('pkg-config --cflags --libs libpng')
+
+editor_env.Program('windstille-editor', Glob('src/editor/*.cpp'))
+
+data_env = Environment()
+
+data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
+                                                 src_suffix = ".xcf",
+                                                 suffix = ".png") })
+
+for filename in Glob("data/images/decal/*.xcf"):
+    data_env.xcf2png(filename)
+
+# EOF #

Modified: trunk/windstille/SConstruct
===================================================================
--- trunk/windstille/SConstruct	2009-08-19 18:15:41 UTC (rev 2974)
+++ trunk/windstille/SConstruct	2009-08-19 18:16:28 UTC (rev 2975)
@@ -1,6 +1,6 @@
 ##  -*- python -*-
 ##  Windstille - A Sci-Fi Action-Adventure Game
-##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+##  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
 ##
 ##  This program is free software: you can redistribute it and/or modify
 ##  it under the terms of the GNU General Public License as published by
@@ -15,276 +15,7 @@
 ##  You should have received a copy of the GNU General Public License
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-import sys, os, glob
-sys.path.append('scons')
+SConscript('SConscript')
+# SConscript('SConscript', variant_dir='build')
 
-CacheDir('cache')
-
-# YACC
-yacc_test_text = """
-%{
-#include <stdio.h>
-
-/* MSVC++ needs this before it can swallow Bison output */
-#ifdef _MSC_VER
-# define __STDC__
-#endif
-%}
-%token MSG
-%start ROOT
-%%
-ROOT:
-	MSG { printf("HELLO"); } 
-	;
-%%
-"""
-
-def CheckYacc(context):
-	context.Message("Checking for Yacc ('%s')... " % context.env.get('YACC'))
-	is_ok = context.TryCompile(yacc_test_text,".y")
-	context.Result(is_ok)
-	return is_ok
-
-# LEX
-lex_test_text = """
-%{
-#include <stdio.h>
-%}
-DIGIT	[0-9]
-ID		[a-z][a-z0-9]*
-%%
-{DIGIT}+	{
-		printf("A digit: %s\\n",yytext);
-	}
-
-[ \\t\\n]+    /* ignore */
-
-.			{
-		printf("Unrecognized guff");
-	}
-%%
-main(){
-	yylex();
-}
-"""
-
-def CheckLex(context):
-	context.Message("Checking for Lex ('%s')... " % context.env.get('LEX'))
-	is_ok = context.TryCompile(lex_test_text,".l")
-	context.Result(is_ok)
-	return is_ok
-
-
-def Check32bit(context):
-    check32bit_test_source_file = """
-#include <stdio.h>
-int main()
-{
-   printf("%dbit", sizeof(void*)*8);
-   return 0;
-}
-    """
-    context.Message('Checking for bits... ')
-    (suc, output) = context.TryRun(check32bit_test_source_file, '.cpp')
-    if suc:
-      context.Result(output)
-    else:
-      context.Result("test error")
-    return output
-
-
-# FIXME: Add check for ICONV_CONST
-
-# BuildDir('build/src',   'src', duplicate=0)
-# BuildDir('build/lib',   'lib', duplicate=0)
-# BuildDir('build/tools', 'tools', duplicate=0)
-
-conf_env = Environment()
-
-opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
-opts.Add('CPPPATH', 'Additional preprocessor paths')
-opts.Add('CPPFLAGS', 'Additional preprocessor flags')
-opts.Add('CPPDEFINES', 'defined constants')
-opts.Add('LIBPATH', 'Additional library paths')
-opts.Add('LIBS', 'Additional libraries')
-opts.Add('CCFLAGS', 'C Compiler flags')
-opts.Add('CXXFLAGS', 'C++ Compiler flags')
-opts.Add('LINKFLAGS', 'Linker Compiler flags')
-opts.Add('CC', 'C Compiler')
-opts.Add('CXX', 'C++ Compiler')  
-opts.Update(conf_env)
-opts.Save('options.cache', conf_env)
-Help(opts.GenerateHelpText(conf_env))
-
-# FIXME: Giving multiple CCFLAGS doesn't work since they have to be
-# broken down to a list
-
-features = {
-    "64bit" : 0,
-    "cwiid" : 0
-    }
-
-conf = Configure(conf_env, custom_tests = { 'Check32bit' : Check32bit,
-                                            'CheckYacc'  : CheckYacc,
-                                            'CheckLex'   : CheckLex})
-if conf.Check32bit() == "64bit":
-    # conf.env.Append(CXXFLAGS="-D_SQ64")
-    features["64bit"] = 1
-
-if conf.CheckLib('cwiid'):
-    features["cwiid"] = 1
-    
-if not conf.CheckLex():
-    print "lex or flex not found, aborting."
-    Exit(1)
-    
-if not conf.CheckYacc():
-    print "yacc or bison not found, aborting."
-    Exit(1)
-    
-conf_env = conf.Finish()
-
-# SConscript('build/tools/SConscript')
-# SConscript('build/lib/SConscript')
-# SConscript('build/src/SConscript')
-# SConscript('build/src/scripting/SConscript')
-
-squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],
-                           CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
-
-if features['64bit']:
-    squirrel_env.Append(CPPDEFINES = '_SQ64')
-
-# squirrel_env.Append(CXXFLAGS = conf_env['CXXFLAGS'])
-
-squirrel_env.Library('squirrel',
-                     Glob('external/SQUIRREL2/squirrel/*.cpp') +
-                     Glob('external/SQUIRREL2/sqstdlib/*.cpp'))
-
-
-miniswig_env = Environment(CPPPATH=['.', "..", "miniswig"],
-                           CXXFILESUFFIX = ".cpp",
-                           YACCFLAGS=['-d', '--no-lines'])
-
-miniswig = miniswig_env.Program('external/miniswig/miniswig',
-                                ['external/miniswig/parser.yy',
-                                 'external/miniswig/lexer.ll',
-                                 'external/miniswig/create_docu.cpp',
-                                 'external/miniswig/xmlwriter.cpp',
-                                 'external/miniswig/create_wrapper.cpp',
-                                 'external/miniswig/main.cpp',
-                                 'external/miniswig/tree.cpp'])
-
-env = Environment(MINISWIG='external/miniswig/miniswig')
-
-env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
-                        ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
-            ['src/scripting/interface.hpp',
-             'src/scripting/game_objects.hpp'])
-
-env.Depends(env.Command(['src/scripting/wrapper.cpp', 'src/scripting/wrapper.hpp'], 'src/scripting/miniswig.tmp',
-                        ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
-            miniswig)
-
-Export('conf_env', 'features', 'miniswig')
-
-def expand_path(*args):
-    lst = []
-    for i in args:
-        lst += Glob(i)
-    return lst
-
-# libutil
-util_env = conf_env.Clone()
-util_env.Append(CPPPATH=['src'])
-util_lib = util_env.StaticLibrary('util', expand_path('src/lisp/*.cpp',  'src/util/*.cpp'))
-
-# libphysfs
-physfs_env = conf_env.Clone()
-physfs_env.Append(CPPPATH=['src'])
-physfs_env.ParseConfig('sdl-config --cflags --libs')
-physfs_lib = physfs_env.StaticLibrary('src/physfs', expand_path('src/physfs/*.cpp'))
-
-# libmath
-math_env = conf_env.Clone()
-math_env.Append(CPPPATH=['src'])
-math_lib = math_env.StaticLibrary('math', expand_path('src/math/*.cpp'))
-
-# libnavgraph
-navgraph_env = conf_env.Clone()
-navgraph_env.Append(CPPPATH=['src'])
-navgraph_lib = navgraph_env.StaticLibrary('navgraph', expand_path('src/navigation/*.cpp'))
-
-# libparticles
-particles_env = conf_env.Clone()
-particles_env.Append(CPPPATH=['src'])
-particles_lib = particles_env.StaticLibrary('particles', expand_path('src/particles/*.cpp'))
-
-# libdisplay
-display_env = conf_env.Clone()
-display_env.Append(CPPPATH=['src'])
-display_env.ParseConfig('sdl-config --cflags --libs')
-display_env.ParseConfig('freetype-config --libs --cflags')
-display_lib = display_env.StaticLibrary('display', 
-                                        expand_path('src/font/*.cpp',
-                                                    'src/display/*.cpp',
-                                                    'src/sprite2d/*.cpp',
-                                                    'src/sprite3d/*.cpp'))
-
-
-env = conf_env.Clone()
-env.ParseConfig('sdl-config --cflags --libs')
-env.ParseConfig('freetype-config --libs --cflags')
-env.Append(LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
-                 'GL', 'GLU', 'GLEW',
-                 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
-env.Append(LIBPATH=['external/'])
-env.Append(CPPPATH=['src', '.', 'external/SQUIRREL2/include/'])
-
-if features['64bit']:
-    env.Append(CPPDEFINES = '_SQ64')
-
-if features['cwiid']:
-    env.Append(CPPDEFINES = 'HAVE_CWIID')
-    env.Append(LIBS = 'cwiid')
-
-env.Program('windstille', expand_path('src/app/*.cpp',
-                                         'src/armature/*.cpp',
-                                         'src/collision/*.cpp',
-                                         'src/engine/*.cpp',
-                                         'src/gui/*.cpp',
-                                         'src/hud/*.cpp',
-                                         'src/input/*.cpp',
-                                         'src/objects/*.cpp',
-                                         'src/properties/*.cpp',
-                                         'src/screen/*.cpp',
-                                         'src/scripting/*.cpp',
-                                         'src/sound/*.cpp',
-                                         'src/tile/*.cpp'))
-
-debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
-# -W: unused parameter
-# ['-Wall', '-Werror', '-O2', '-g'],
-editor_env = Environment(CPPPATH=['.'],
-                         CXXFLAGS=debug_cxxflags,
-                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib,
-                                 'GL', 'GLEW', 'SDL_image', 'physfs'])
-
-editor_env.ParseConfig('pkg-config libpng --libs --cflags')
-editor_env.ParseConfig('sdl-config --cflags --libs')
-editor_env.ParseConfig('Magick++-config --libs --cppflags')
-editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
-editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
-
-editor_env.Program('../windstille-editor', expand_path('editor/*.cpp'))
-
-data_env = conf_env.Clone()
-
-data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
-                                                 src_suffix = ".xcf",
-                                                 suffix = ".png") })
-
-for filename in glob.glob("data/images/decal/*.xcf"):
-    data_env.xcf2png(filename)
-
 # EOF #



From grumbel at mail.berlios.de  Wed Aug 19 20:30:30 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 20:30:30 +0200
Subject: [Windstille-commit] r2976 - trunk/windstille/data/images/decal
Message-ID: <200908191830.n7JIUUI2002254@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 20:30:28 +0200 (Wed, 19 Aug 2009)
New Revision: 2976

Added:
   trunk/windstille/data/images/decal/mist.png
   trunk/windstille/data/images/decal/sky.png
   trunk/windstille/data/images/decal/stone4.png
   trunk/windstille/data/images/decal/stone5.png
   trunk/windstille/data/images/decal/wall1.xcf
   trunk/windstille/data/images/decal/wall2.xcf
Log:
Some more gfx

Added: trunk/windstille/data/images/decal/mist.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/mist.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/sky.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/sky.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stone4.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stone4.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stone5.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stone5.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/wall1.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/wall1.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/x-xcf

Added: trunk/windstille/data/images/decal/wall2.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/wall2.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/x-xcf



From grumbel at mail.berlios.de  Wed Aug 19 20:37:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 19 Aug 2009 20:37:19 +0200
Subject: [Windstille-commit] r2977 - in trunk/windstille/data: editor
	images/decal sectors/trainstation
Message-ID: <200908191837.n7JIbJNd003430@sheep.berlios.de>

Author: grumbel
Date: 2009-08-19 20:36:58 +0200 (Wed, 19 Aug 2009)
New Revision: 2977

Added:
   trunk/windstille/data/editor/particlesystem.png
   trunk/windstille/data/images/decal/bathroom.png
   trunk/windstille/data/images/decal/stone_ground1.png
   trunk/windstille/data/sectors/trainstation/cave.wst
   trunk/windstille/data/sectors/trainstation/house1.wst
Log:
Stuff floating around in working directory

Added: trunk/windstille/data/editor/particlesystem.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/particlesystem.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/bathroom.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/bathroom.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stone_ground1.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stone_ground1.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/sectors/trainstation/cave.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-19 18:30:28 UTC (rev 2976)
+++ trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-19 18:36:58 UTC (rev 2977)
@@ -0,0 +1,1120 @@
+;; -*- scheme -*-
+
+(windstille-sector
+  (version 2)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (navigation
+    (nodes)
+    (edges))
+  (layers
+    (layer
+      (name "Highlight")
+      (visible #t)
+      (locked #f)
+      (objects
+        (decal
+          (id "0xa49fa38")
+          (pos 1491 290)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 4.87573 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa4a0958")
+          (pos 1836 285)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 4.2196 4.28064)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ed6d48")
+          (pos 1862 301)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 1.21362 2.37329)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xaf3d9e8")
+          (pos 633 71)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.18091 2.04065)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2b9638")
+          (pos 1506 320)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.53186 2.04065)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2bb128")
+          (pos 807 494)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.18091 3.6123)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2bc078")
+          (pos -11 300)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.18091 4.6499)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa0ac660")
+          (pos 221 637)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 2.27742 2.45264)
+          (angle 0.784225)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9a12cb8")
+          (pos 457 879)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.547691 1)
+          (angle -1.15112)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a12d18")
+          (pos 387 950)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.547691 1)
+          (angle -0.496468)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a23020")
+          (pos 111 927)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.432803 1.02061)
+          (angle 0.526995)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a28570")
+          (pos 20 829)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.613032 1)
+          (angle 1.17301)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a21f38")
+          (pos -25 -187)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.633137 1.13705)
+          (angle -0.225098)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9a43c78")
+          (pos -235 59)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 2.02513)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a66ac8")
+          (pos 1327 416)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle -0.125517)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a576e8")
+          (pos 584 611)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a57998")
+          (pos 487 721)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle -1.45481)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a581a8")
+          (pos 791 613)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.671053 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a57c48")
+          (pos 1079 519)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.653159 1)
+          (angle -0.676684)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a57dc8")
+          (pos 284 958)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.516896 1)
+          (angle -0.0123753)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a57f30")
+          (pos 11 763)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.466387 1)
+          (angle 1.39855)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x99d18a8")
+          (pos -246 438)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.373611 1.13705)
+          (angle 0.881639)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a58898")
+          (pos -137 537)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.778182)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a58988")
+          (pos -276 270)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.794896 1)
+          (angle 1.53565)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a44f50")
+          (pos -152 -55)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 2.21615)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a44b00")
+          (pos 113 -167)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.22988)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a44cb8")
+          (pos 389 -175)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.01167)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a58af0")
+          (pos 679 -157)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.39343)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a44670")
+          (pos 961 -57)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.57112)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a44548")
+          (pos 1211 111)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.738519 1)
+          (angle 3.91488)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a44830")
+          (pos 1447 171)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.698315 1)
+          (angle 3.04458)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a45b38")
+          (pos 1730 174)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.28875)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a45c40")
+          (pos 1575 399)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle -0.00353482)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a260f8")
+          (pos 1179 454)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.422523 1.06468)
+          (angle -0.502458)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a5e558")
+          (pos 1124 21)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.479002 1.13705)
+          (angle 0.62437)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9a28638")
+          (pos 1584 152)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.479002 1.13705)
+          (angle -0.0267833)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9a661d0")
+          (pos 1314 162)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.479002 1.13705)
+          (angle 0.201065)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9a20fe8")
+          (pos 245 -168)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.375897 1.13705)
+          (angle -0.0368825)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9a21cb8")
+          (pos -36 679)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.462536 1.24191)
+          (angle -2.07138)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9a21030")
+          (pos 59 883)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.266922 1)
+          (angle 0.858955)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a22798")
+          (pos 162 944)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.392828 1)
+          (angle 0.236345)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a23310")
+          (pos 425 917)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.289912 1)
+          (angle -0.750182)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a241f0")
+          (pos 500 592)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.159667 0.959035)
+          (angle -1.12329)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x99b6b20")
+          (pos 939 596)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.36201 1)
+          (angle -0.260153)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a17940")
+          (pos 841 -118)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.521345 1.13306)
+          (angle 0.359509)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x99b75f8")
+          (pos 550 -190)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 0.521345 1.13306)
+          (angle 0.0806708)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x9e9fa70")
+          (pos 826 611)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.570142 0.820964)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea1588")
+          (pos -97 564)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.52943 0.662926)
+          (angle 0.778139)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ed7630")
+          (pos -208 26)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.52943 0.792548)
+          (angle 2.13367)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea2298")
+          (pos -183 452)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.328966 0.529188)
+          (angle 0.852471)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9eb4368")
+          (pos -259 340)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.39514 0.81849)
+          (angle 1.39764)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ed7bc0")
+          (pos 572 614)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.597434 0.869792)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ed8660")
+          (pos 489 680)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.570142 0.820964)
+          (angle -1.39685)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ed6800")
+          (pos 717 613)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.597434 0.869792)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a0cd70")
+          (pos 1713 397)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone_ground1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.0933437)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ed9c18")
+          (pos 1562 400)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/green2.png")
+          (type 0)
+          (scale 0.65202 0.820964)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9a45080")
+          (pos 740 435)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/humanreference.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Green Stuff")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9ea2a88")
+          (pos 883 462)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a1f4c0")
+          (pos -106 455)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.704407)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9e9f6d8")
+          (pos 299 810)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9e9fd60")
+          (pos 533 406)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea10f8")
+          (pos 501 -70)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.24437)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0x9eb45a8")
+          (pos 132 16)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.05672)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea0078")
+          (pos 880 5)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.3798)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9fa2158")
+          (pos -142 276)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ec7460")
+          (pos -137 237)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2b9ec8")
+          (pos 168 -65)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2bb978")
+          (pos 621 -102)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2b9f10")
+          (pos -29 635)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa2ac890")
+          (pos 829 582)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 2.38855 1.11444)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Background")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9a17b80")
+          (pos 405 453)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1.0111)
+          (angle 0.0759436)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a13540")
+          (pos 590 448)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 0.734504)
+          (angle -0.257207)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x99b73d8")
+          (pos 188 471)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 1.06108)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a14888")
+          (pos -3 402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.816322)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a1d7e0")
+          (pos 186 627)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 1.06108)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x99fb9e8")
+          (pos 847 365)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x99fb918")
+          (pos -67 465)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.739616)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a405c0")
+          (pos 345 -17)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a408f0")
+          (pos 684 -21)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a40678")
+          (pos -43 -14)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a40d80")
+          (pos 412 773)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone4.png")
+          (type 0)
+          (scale 1.45422 1.39971)
+          (angle -0.624027)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0x9a40b38")
+          (pos 301 859)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone4.png")
+          (type 0)
+          (scale 1.45422 1.39971)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a1db70")
+          (pos 346 768)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 0.694642 0.648152)
+          (angle -0.211019)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a228f0")
+          (pos 421 567)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/shadow.png")
+          (type 0)
+          (scale 11.4061 5.2496)
+          (angle 3.09674)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "BackgroundBG")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x99c3780")
+          (pos -12 222)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x97a1390")
+          (pos 88 -27)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a147f0")
+          (pos 404 194)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a14f40")
+          (pos 771 147)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x99c1e00")
+          (pos 839 -27)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 0.673403)
+          (angle 0.459292)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a18c78")
+          (pos 514 -55)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 0.828297)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea26b0")
+          (pos 1074 164)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 0.790112 0.759615)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea25d8")
+          (pos 1538 276)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 0.699519)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea2df0")
+          (pos 1168 331)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1.02332 0.605082)
+          (angle -0.287153)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9e9fe20")
+          (pos 0 -14)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9e9ffa0")
+          (pos 371 -25)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ea0858")
+          (pos 701 0)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9a20240")
+          (pos 1125 158)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 2.47095 1.53711)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))))
+
+;; EOF ;;

Added: trunk/windstille/data/sectors/trainstation/house1.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-19 18:30:28 UTC (rev 2976)
+++ trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-19 18:36:58 UTC (rev 2977)
@@ -0,0 +1,2686 @@
+;; -*- scheme -*-
+
+(windstille-sector
+  (version 2)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (navigation
+    (nodes)
+    (edges))
+  (layers
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #f)
+      (objects
+        (decal
+          (id "0x9bcb088")
+          (pos -359 728)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9bf3a20")
+          (pos -1146 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf36a8")
+          (pos -634 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9baa868")
+          (pos -122 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf3fe0")
+          (pos 390 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf40e8")
+          (pos -2170 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4280")
+          (pos -1658 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4c98")
+          (pos 128 -75)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/northernstarjoinnow.png")
+          (type 0)
+          (scale 2.03446 1.8138)
+          (angle -0.0652688)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4e10")
+          (pos 390 1571)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/vrdoor-color.png")
+          (type 0)
+          (scale 104.358 7.43495)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4a78")
+          (pos 1926 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4350")
+          (pos 2438 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4880")
+          (pos 2950 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9baba90")
+          (pos 3462 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4440")
+          (pos 902 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf4548")
+          (pos 1414 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf46e0")
+          (pos -2682 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9bab040")
+          (pos 1343 992)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.446869 0.711044)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bab428")
+          (pos 1347 899)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/humanreference.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9baaed0")
+          (pos 2049 922)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/trashcan.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9babc38")
+          (pos 2249 761)
+          (parent "")
+          (select-mask 1)
+          (path "images/streetlamp.png")
+          (type 0)
+          (scale 2.44444 2.26364)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bb3d20")
+          (pos 2925 761)
+          (parent "")
+          (select-mask 1)
+          (path "images/streetlamp.png")
+          (type 0)
+          (scale 2.44444 2.26364)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9babd80")
+          (pos -1901 763)
+          (parent "")
+          (select-mask 1)
+          (path "images/streetlamp.png")
+          (type 0)
+          (scale 2.44444 2.26364)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9babeb8")
+          (pos -1225 763)
+          (parent "")
+          (select-mask 1)
+          (path "images/streetlamp.png")
+          (type 0)
+          (scale 2.44444 2.26364)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bb41b0")
+          (pos 118 763)
+          (parent "")
+          (select-mask 1)
+          (path "images/streetlamp.png")
+          (type 0)
+          (scale 2.44444 2.26364)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "House1")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9bf1828")
+          (pos 297 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9baa670")
+          (pos 497 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2130")
+          (pos 1497 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf1e68")
+          (pos 1097 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9baa470")
+          (pos 1297 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf1fc8")
+          (pos 1297 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2e28")
+          (pos 1497 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf1ba8")
+          (pos 297 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2368")
+          (pos 497 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2438")
+          (pos 1097 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf32b8")
+          (pos 1297 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf3418")
+          (pos 1497 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2f20")
+          (pos 297 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2fc8")
+          (pos 497 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa3209f0")
+          (pos 1097 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa320ab0")
+          (pos 697 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa3e4590")
+          (pos 697 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa3e46f0")
+          (pos 697 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa40b950")
+          (pos 897 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa459ec0")
+          (pos 897 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa45a0f8")
+          (pos 897 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa4a8430")
+          (pos 450 837)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa4a8620")
+          (pos 898 837)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa4f6b78")
+          (pos 1352 835)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa4f6990")
+          (pos 650 676)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa51de50")
+          (pos 676 1027)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.513626 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf2820")
+          (pos 673 883)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/unit1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf29d8")
+          (pos 1112 1001)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.513626 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa51e228")
+          (pos 1125 883)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/unit1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa67cf30")
+          (pos 265 1004)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.513626 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa696e78")
+          (pos 266 883)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/unit1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa696f78")
+          (pos 1519 1042)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.513626 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa36eeb8")
+          (pos 1527 883)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/unit1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa36efc8")
+          (pos -678 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6b0cc8")
+          (pos -78 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6b0d58")
+          (pos -478 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa7336a0")
+          (pos -278 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa7338c8")
+          (pos -278 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6cad28")
+          (pos -78 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6cae48")
+          (pos -678 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa781ba8")
+          (pos -478 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa781c60")
+          (pos -278 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa7f7740")
+          (pos -78 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa7f7510")
+          (pos -678 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa845ce8")
+          (pos -478 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa845b00")
+          (pos -611 895)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6e4dd8")
+          (pos -120 899)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa8db3d8")
+          (pos -376 884)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/door.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa8eb6e0")
+          (pos -375 869)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/elevatordoor.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6e5158")
+          (pos -614 698)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa6e5248")
+          (pos -123 702)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa92bdf0")
+          (pos -372 698)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/streetlamp.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xa92bf08")
+          (pos 1580 952)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bb49b8")
+          (pos 997 473)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
+          (angle 1.57151)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bb4000")
+          (pos 10 892)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bb4548")
+          (pos 208 938)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bb43e8")
+          (pos 122 1025)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.674225 0.373627)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bf1608")
+          (pos -394 441)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.97122 0.373627)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa7d00d8")
+          (pos -754 970)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa7d0228")
+          (pos -846 1045)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.855423 0.373627)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa92b800")
+          (pos 1733 1039)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.855423 0.373627)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "House2")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9b8d8c0")
+          (pos -1005 849)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0x9ba97e0")
+          (pos 2356 901)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.660156 1.07422)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa0fd7b0")
+          (pos 2187 847)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa0fd9a8")
+          (pos 2294 847)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba9c88")
+          (pos 2065 847)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba9bf0")
+          (pos 1943 847)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaa6e508")
+          (pos 1606 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaa95a38")
+          (pos 1806 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba9930")
+          (pos 606 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba9b00")
+          (pos 806 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba9fa8")
+          (pos 1406 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xab32ac8")
+          (pos 1006 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xab32c08")
+          (pos 1206 312)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xab32d18")
+          (pos 606 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaabd510")
+          (pos 806 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xab81398")
+          (pos 1806 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xab81480")
+          (pos 1406 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xabf69a0")
+          (pos 1606 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xabf6b38")
+          (pos 1606 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xab5a010")
+          (pos 1806 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xac44ea0")
+          (pos 606 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xac44fe0")
+          (pos 806 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xac933d8")
+          (pos 1406 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xac93560")
+          (pos 1606 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xace1910")
+          (pos 1906 925)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.25 0.929688)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xace1a30")
+          (pos 1806 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xad2fe88")
+          (pos 606 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xad30010")
+          (pos 806 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xad7e428")
+          (pos 1406 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xad7e558")
+          (pos 1006 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xada5880")
+          (pos 1006 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xada5a08")
+          (pos 1006 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xadf3e20")
+          (pos 1206 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xadf3f50")
+          (pos 1206 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xae42390")
+          (pos 1206 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xae42518")
+          (pos 1606 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xae90930")
+          (pos 1806 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xae90a60")
+          (pos 606 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaedeea0")
+          (pos 806 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaedf028")
+          (pos 1406 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaf2d440")
+          (pos 1006 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaf2d570")
+          (pos 1206 912)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaf7b9b0")
+          (pos 1724 410)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty8.png")
+          (type 0)
+          (scale 4.38542 1.99826)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaf7bb18")
+          (pos 1727 319)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xaabd2d0")
+          (pos 1730 682)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty8.png")
+          (type 0)
+          (scale 4.03819 1.95486)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0xaabd0f0")
+          (pos 1727 574)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb01d848")
+          (pos 1727 831)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb030650")
+          (pos 1576 399)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty7.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb050a38")
+          (pos 666 291)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty7.png")
+          (type 0)
+          (scale 2.10453 1.6875)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb050b10")
+          (pos 1050 260)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb073178")
+          (pos 1750 898)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dirty2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb01da10")
+          (pos 1529 234)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/container_crack.png")
+          (type 0)
+          (scale 0.535473 0.593927)
+          (angle 1.57305)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb0b1f08")
+          (pos 158 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb0b2038")
+          (pos 358 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb0e5aa0")
+          (pos -842 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb099e48")
+          (pos -642 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb0e59f0")
+          (pos -42 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xafc9f88")
+          (pos -242 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xafca040")
+          (pos -842 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb1198f8")
+          (pos -642 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb1b5f18")
+          (pos 358 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb1b6008")
+          (pos -42 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb22b8c0")
+          (pos 158 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb22ba40")
+          (pos 158 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb252c68")
+          (pos 358 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9b8f4b8")
+          (pos -955 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.378906 0.929688)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0xb1197b8")
+          (pos -842 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb2a1210")
+          (pos -642 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb2a1440")
+          (pos -42 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb2ef6d8")
+          (pos 158 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb2ef8a8")
+          (pos 358 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb204460")
+          (pos -842 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb204508")
+          (pos -642 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb364da0")
+          (pos -42 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb364e98")
+          (pos -442 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb3da960")
+          (pos -442 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb3da778")
+          (pos -442 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb38c1f0")
+          (pos -242 913)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb38c2e0")
+          (pos -242 713)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb4771f8")
+          (pos -242 313)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb477240")
+          (pos 158 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb4c57e0")
+          (pos 358 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb428bf8")
+          (pos -842 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb428cb0")
+          (pos -642 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb53b200")
+          (pos -42 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb53afd0")
+          (pos -442 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb5897a8")
+          (pos -242 1113)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb5895c0")
+          (pos -442 513)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9bd7b90")
+          (pos -1418 903)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.660156 1.07422)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0xbd3d850")
+          (pos -1249 849)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0xbcdcfb0")
+          (pos -1356 849)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0x9b84498")
+          (pos -1127 849)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/wall1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #t)
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xb513c30")
+          (pos 516 341)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.645615 2.06163)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa92b920")
+          (pos -608 245)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.00801 0.526215)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb513d88")
+          (pos 803 49)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.77095 0.383163)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba8b28")
+          (pos 263 271)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 2.26686 0.573898)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "House3")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x9ba8dc0")
+          (pos 271 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba94b0")
+          (pos 471 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba95e0")
+          (pos 271 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba92a8")
+          (pos 671 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb6748b0")
+          (pos 71 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb674df0")
+          (pos -129 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb6c3120")
+          (pos 1071 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb6ea588")
+          (pos 871 398)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb6ea7c0")
+          (pos 471 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb75fc00")
+          (pos 471 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb75fe30")
+          (pos 471 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb7ae0c8")
+          (pos 271 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb7ae298")
+          (pos 271 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba8f10")
+          (pos 271 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba8fb8")
+          (pos 671 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb7fc688")
+          (pos 71 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb7fc780")
+          (pos -129 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb872248")
+          (pos 1071 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb872060")
+          (pos 871 198)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb823ad8")
+          (pos 671 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb823bc8")
+          (pos 71 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb90eae0")
+          (pos -129 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb90eb28")
+          (pos 1071 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb95d0c8")
+          (pos 871 -2)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb8c04e0")
+          (pos 871 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb8c0598")
+          (pos 671 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb9d2ae8")
+          (pos 1071 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb9d28b8")
+          (pos 71 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xba21090")
+          (pos -129 -402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xba20ea8")
+          (pos 471 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb9ab4f0")
+          (pos 671 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb9ab5e0")
+          (pos 71 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbabd928")
+          (pos -129 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbabd970")
+          (pos 1071 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbb0bf10")
+          (pos 871 -202)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xba6f328")
+          (pos -653 74)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xba6f3e0")
+          (pos -653 -126)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbb81930")
+          (pos -653 274)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbb81700")
+          (pos -453 74)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbbcfed8")
+          (pos -453 -126)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbbcfcf0")
+          (pos -453 274)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbb5a338")
+          (pos -650 74)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb674cc0")
+          (pos -466 72)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "BackgroundFG")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xbb5a4d8")
+          (pos 2262 765)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/container_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb5d7a00")
+          (pos 3286 765)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/container_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9ba8c38")
+          (pos -1394 768)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/container_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb5d7c20")
+          (pos -2418 768)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/container_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbccac40")
+          (pos -1885 963)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/shadow.png")
+          (type 0)
+          (scale 17.7847 1.14305)
+          (angle 0)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0xbc6c7a8")
+          (pos -953 668)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/shadow.png")
+          (type 0)
+          (scale 6.34885 1)
+          (angle -1.53242)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0xa0fbd60")
+          (pos 2986 965)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/shadow.png")
+          (type 0)
+          (scale 17.7847 1.14305)
+          (angle 0)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0xbcdd650")
+          (pos 1940 638)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/shadow.png")
+          (type 0)
+          (scale 5.86302 0.899048)
+          (angle -1.56134)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Background")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xa0fbb20")
+          (pos 3261 136)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 6.2412 5.80158)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb1195b8")
+          (pos 1808 277)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 5.16732 4.43512)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbcdd3c0")
+          (pos -1624 845)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 6.2412 5.80158)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbcdd4f8")
+          (pos -6 -152)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 7.50742 7.14906)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xa0fd328")
+          (pos -2854 236)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 6.2412 5.80158)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Sky")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xbb5a490")
+          (pos 471 -248)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/sky.png")
+          (type 0)
+          (scale 51.614 21.0264)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))))
+
+;; EOF ;;



From grumbel at mail.berlios.de  Thu Aug 20 00:49:00 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 20 Aug 2009 00:49:00 +0200
Subject: [Windstille-commit] r2978 - trunk/windstille/data/particlesystems
Message-ID: <200908192249.n7JMn0Wc021024@sheep.berlios.de>

Author: grumbel
Date: 2009-08-20 00:48:58 +0200 (Thu, 20 Aug 2009)
New Revision: 2978

Added:
   trunk/windstille/data/particlesystems/water.particles
Log:
Added water particle system

Added: trunk/windstille/data/particlesystems/water.particles
===================================================================
--- trunk/windstille/data/particlesystems/water.particles	2009-08-19 18:36:58 UTC (rev 2977)
+++ trunk/windstille/data/particlesystems/water.particles	2009-08-19 22:48:58 UTC (rev 2978)
@@ -0,0 +1,27 @@
+;; -*- scheme -*-
+
+(particle-systems
+ (particle-system
+  (drawer (spark-drawer (color 0.25 0.5 1.0) (width 0.3)))
+  (z-pos 900)
+  (count 2000)
+  (pos 0 -200)
+  (layer "highlight")
+  (velocity 100 200)
+  (cone -10 -170)
+  (gravity 0  .5)
+  (distribution (line-distribution (x1 -25)  (y1 0) (x2 25) (y2 0))))
+
+  (particle-system
+   (drawer (spark-drawer (color 0.8 0.8 1.0) (width 0.5)))
+   (z-pos 900)
+   (count 2000)
+   (pos 0 -200)
+   (layer "highlight")
+   (velocity 100 200)
+   (cone -50 -130)
+   (gravity 0  .5)
+   (distribution (line-distribution (x1 -25)  (y1 0) (x2 25) (y2 0))))
+)
+
+;; EOF ;;



From grumbel at mail.berlios.de  Fri Aug 21 14:45:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 14:45:55 +0200
Subject: [Windstille-commit] r2979 - in trunk/windstille/src: app display
Message-ID: <200908211245.n7LCjtrG006581@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 14:45:54 +0200 (Fri, 21 Aug 2009)
New Revision: 2979

Added:
   trunk/windstille/src/display/opengl_window.cpp
   trunk/windstille/src/display/opengl_window.hpp
Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface.hpp
Log:
Added OpenGLWindow class

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-19 22:48:58 UTC (rev 2978)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 12:45:54 UTC (rev 2979)
@@ -27,6 +27,7 @@
 #include "config.hpp"
 #include "display/display.hpp"
 #include "display/opengl_state.hpp"
+#include "display/opengl_window.hpp"
 #include "display/surface_manager.hpp"
 #include "display/texture_manager.hpp"
 #include "engine/script_manager.hpp"
@@ -159,94 +160,18 @@
 void
 WindstilleMain::set_fullscreen(bool fullscreen)
 { 
-  Uint32 flags = SDL_OPENGL;
-  if (fullscreen)
-    flags |= SDL_FULLSCREEN;
-
-  SDL_Surface* window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
-                                         0, flags);
-  if (!window)
-    {
-      throw std::runtime_error("Display:: Couldn't create window");
-    }
+  m_window->set_fullscreen(fullscreen);
 }
 
 void
-WindstilleMain::init_display()
-{
-  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
-  SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5);
-  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
-  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
-
-  if (config.get_int("anti-aliasing"))
-    {
-      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLEBUFFERS, 1 ); // boolean value, either it's enabled or not
-      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config.get_int("anti-aliasing") ); // 0, 2, or 4 for number of samples
-    }
-
-  SDL_Surface* window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
-                                        0, SDL_OPENGL | (config.get_bool("fullscreen") ? SDL_FULLSCREEN : 0));
-
-  if (!window)
-    {
-      throw std::runtime_error("Display:: Couldn't create window");
-    }
-  else
-    {
-      SDL_WM_SetCaption("Windstille", 0 /* icon */);
-
-      GLenum err = glewInit();
-      if(err != GLEW_OK) {
-        std::ostringstream msg;
-        msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
-        throw std::runtime_error(msg.str());
-      }
-      /*
-        if(!GLEW_EXT_framebuffer_object) {
-        std::ostringstream msg;
-        msg << "Display:: Framebuffer opengl extension not supported";
-        throw std::runtime_error(msg.str());
-        }
-      */
-
-      glViewport(0, 0, window->w, window->h);
-      glMatrixMode(GL_PROJECTION);
-      glLoadIdentity();
-
-      static const float cl_pixelcenter_constant = 0.375;
-
-      //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
-  
-      // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
-      Display::aspect_size = Size(config.get_int("aspect-width"), 
-                                  config.get_int("aspect-height"));
-
-      glOrtho(0.0, 
-              Display::get_width(), Display::get_height(),
-              0.0, 1000.0, -1000.0);
-      glMatrixMode(GL_MODELVIEW);
-      glLoadIdentity();
-      glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
-
-      if (config.get_int("anti-aliasing"))
-        glEnable(GL_MULTISAMPLE_ARB); 
-
-      assert_gl("setup projection");
-
-      OpenGLState::init();
-    }
-}
-
-void
 WindstilleMain::init_modules()
 {
   if (debug) std::cout << "Initialising Freetype2" << std::endl;
     
-  TTFFont::init();
-  
-  init_display();
+  m_window.reset(new OpenGLWindow());
 
+  TTFFont::init(); 
+
   if (debug) std::cout << "Initialising Fonts" << std::endl;
   Fonts::init(); 
   new SoundManager();

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-19 22:48:58 UTC (rev 2978)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-21 12:45:54 UTC (rev 2979)
@@ -47,8 +47,12 @@
 #ifndef HEADER_WINDSTILLE_APP_WINDSTILLE_MAIN_HPP
 #define HEADER_WINDSTILLE_APP_WINDSTILLE_MAIN_HPP
 
+#include <boost/scoped_ptr.hpp>
+
 #include "screen/screen.hpp"
 
+class OpenGLWindow;
+
 class WindstilleMain
 { 
 private:
@@ -64,11 +68,13 @@
   void set_fullscreen(bool fullscreen);
 
 private:
-  void init_display();
   void init_sdl();
   void init_physfs(const char* argv0);
   void init_modules();
   void deinit_modules();
+
+private:
+  boost::scoped_ptr<OpenGLWindow> m_window;
 };
 
 #endif

Added: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-19 22:48:58 UTC (rev 2978)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-21 12:45:54 UTC (rev 2979)
@@ -0,0 +1,122 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/opengl_window.hpp"
+
+#include <GL/glew.h>
+#include <GL/gl.h>
+#include <SDL/SDL_image.h>
+
+#include "util/util.hpp" 
+#include "display/opengl_state.hpp"
+#include "display/display.hpp"
+#include "app/config.hpp"
+
+OpenGLWindow::OpenGLWindow()
+{
+  atexit(SDL_Quit);
+
+  SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 1); // vsync
+  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
+  SDL_GL_SetAttribute(SDL_GL_RED_SIZE,   5);
+  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE,  5);
+
+  if (config.get_int("anti-aliasing"))
+    {
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLEBUFFERS, 1 ); // boolean value, either it's enabled or not
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config.get_int("anti-aliasing") ); // 0, 2, or 4 for number of samples
+    }
+  
+  SDL_WM_SetCaption("Windstille", "Windstille");
+  //SDL_WM_SetIcon(IMG_Load(Pathname("data/icon.png").getSysPath().c_str()), NULL);
+
+  m_window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
+                              0, SDL_OPENGL | (config.get_bool("fullscreen") ? SDL_FULLSCREEN : 0));
+
+  if (!m_window)
+    {
+      throw std::runtime_error("Display:: Couldn't create window");
+    }
+  else
+    {
+      GLenum err = glewInit();
+      if(err != GLEW_OK) {
+        std::ostringstream msg;
+        msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
+        throw std::runtime_error(msg.str());
+      }
+      /*
+        if(!GLEW_EXT_framebuffer_object) {
+        std::ostringstream msg;
+        msg << "Display:: Framebuffer opengl extension not supported";
+        throw std::runtime_error(msg.str());
+        }
+      */
+
+      glViewport(0, 0, m_window->w, m_window->h);
+      glMatrixMode(GL_PROJECTION);
+      glLoadIdentity();
+
+      static const float cl_pixelcenter_constant = 0.375;
+
+      //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+  
+      // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
+      Display::aspect_size = Size(config.get_int("aspect-width"), 
+                                  config.get_int("aspect-height"));
+
+      glOrtho(0.0, 
+              Display::get_width(), Display::get_height(),
+              0.0, 1000.0, -1000.0);
+      glMatrixMode(GL_MODELVIEW);
+      glLoadIdentity();
+      glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
+
+      if (config.get_int("anti-aliasing"))
+        glEnable(GL_MULTISAMPLE_ARB); 
+
+      assert_gl("setup projection");
+
+      OpenGLState::init();
+    }
+}
+
+OpenGLWindow::~OpenGLWindow()
+{
+  // must not free m_window, see:
+  // http://sdl.beuc.net/sdl.wiki/SDL_SetVideoMode
+} 
+
+void
+OpenGLWindow::set_fullscreen(bool fullscreen)
+{
+  Uint32 flags = SDL_OPENGL;
+
+  if (fullscreen)
+    flags |= SDL_FULLSCREEN;
+
+  m_window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"), 0, flags);
+
+  if (!m_window)
+    {
+      throw std::runtime_error("OpenGLWindow: Couldn't create window");
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/display/opengl_window.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/opengl_window.hpp
===================================================================
--- trunk/windstille/src/display/opengl_window.hpp	2009-08-19 22:48:58 UTC (rev 2978)
+++ trunk/windstille/src/display/opengl_window.hpp	2009-08-21 12:45:54 UTC (rev 2979)
@@ -0,0 +1,45 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_OPENGL_WINDOW_HPP
+#define HEADER_WINDSTILLE_DISPLAY_OPENGL_WINDOW_HPP
+
+#include <SDL.h>
+
+class OpenGLWindow
+{
+private:
+  SDL_Surface* m_window;
+
+public:
+  OpenGLWindow();
+  ~OpenGLWindow();
+
+  int get_width()  const { return m_window->w; }
+  int get_height() const { return m_window->h; }
+
+  void set_fullscreen(bool fullscreen);
+
+private:
+  OpenGLWindow(const OpenGLWindow&);
+  OpenGLWindow& operator=(const OpenGLWindow&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/opengl_window.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-19 22:48:58 UTC (rev 2978)
+++ trunk/windstille/src/display/surface.cpp	2009-08-21 12:45:54 UTC (rev 2979)
@@ -59,6 +59,7 @@
 {
   impl->size  = Size(width, height);
 
+  // FIXME: rounding to power of two shouldn't be needed in OpenGL2.0 or later
   impl->texture = Texture(GL_TEXTURE_2D, math::round_to_power_of_two(width), math::round_to_power_of_two(height));
   impl->uv      = Rectf(0, 0,
                         impl->size.width  / impl->texture.get_width(),

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-08-19 22:48:58 UTC (rev 2978)
+++ trunk/windstille/src/display/surface.hpp	2009-08-21 12:45:54 UTC (rev 2979)
@@ -66,6 +66,7 @@
   operator bool() const;
 
   long use_count() const { return impl.use_count(); }
+
 private:
   boost::shared_ptr<SurfaceImpl> impl;
 };



From grumbel at mail.berlios.de  Fri Aug 21 14:58:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 14:58:01 +0200
Subject: [Windstille-commit] r2980 - in trunk/windstille: . src/util
Message-ID: <200908211258.n7LCw1Nt007296@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 14:58:01 +0200 (Fri, 21 Aug 2009)
New Revision: 2980

Added:
   trunk/windstille/src/util/pathname.cpp
   trunk/windstille/src/util/pathname.hpp
Modified:
   trunk/windstille/SConscript
Log:
Added Pathname class

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-21 12:45:54 UTC (rev 2979)
+++ trunk/windstille/SConscript	2009-08-21 12:58:01 UTC (rev 2980)
@@ -145,14 +145,12 @@
 if features['64bit']:
     squirrel_env.Append(CPPDEFINES = '_SQ64')
 
-# squirrel_env.Append(CXXFLAGS = conf_env['CXXFLAGS'])
-
 squirrel_env.Library('squirrel',
                      Glob('external/SQUIRREL2/squirrel/*.cpp') +
                      Glob('external/SQUIRREL2/sqstdlib/*.cpp'))
 
 
-miniswig_env = Environment(CPPPATH=['.', 'miniswig'],
+miniswig_env = Environment(CPPPATH=['.', 'external/miniswig/'],
                            CXXFILESUFFIX = ".cpp",
                            YACCFLAGS=['-d', '--no-lines'])
 
@@ -176,29 +174,19 @@
                         ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
             miniswig_bin)
 
-# libutil
-util_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
-util_lib = util_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
+wstlib_env    = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+util_lib      = wstlib_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
+math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
+navgraph_lib  = wstlib_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
+particles_lib = wstlib_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
 
 # libphysfs
-physfs_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+physfs_env = wstlib_env.Clone()
 physfs_env.ParseConfig('sdl-config --cflags --libs')
 physfs_lib = physfs_env.StaticLibrary('src/physfs', Glob('src/physfs/*.cpp'))
 
-# libmath
-math_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
-math_lib = math_env.StaticLibrary('math', Glob('src/math/*.cpp'))
-
-# libnavgraph
-navgraph_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
-navgraph_lib = navgraph_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
-
-# libparticles
-particles_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
-particles_lib = particles_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
-
 # libdisplay
-display_env = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
+display_env = wstlib_env.Clone()
 display_env.ParseConfig('sdl-config --cflags --libs')
 display_env.ParseConfig('freetype-config --libs --cflags')
 display_lib = display_env.StaticLibrary('display', 
@@ -206,14 +194,15 @@
                                         Glob('src/display/*.cpp') +
                                         Glob('src/sprite2d/*.cpp') +
                                         Glob('src/sprite3d/*.cpp'))
-
 
 windstille_env = Environment(CXXFLAGS=debug_cxxflags,
                   CPPPATH=['src', '.', 'external/SQUIRREL2/include/'],
                   LIBPATH=['external/'],
                   LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
                         'GL', 'GLU', 'GLEW',
-                        'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals-mt'])
+                        'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',
+                        # FIXME: Add configure checks for exact boost library name
+                        'boost_signals-mt', 'boost_filesystem-mt'])
 
 windstille_env.ParseConfig('sdl-config --cflags --libs')
 windstille_env.ParseConfig('freetype-config --libs --cflags')
@@ -262,5 +251,16 @@
 
 for filename in Glob("data/images/decal/*.xcf"):
     data_env.xcf2png(filename)
+
+data_files = ["data/sounds/*.wav",
+              "data/sounds/*.ogg",
+              "data/fonts/*.ttf",
+              "data/images/*.png",
+              "data/images/*/*.png",
+              "data/images/*/*/*.png"]
+
+for pattern in data_files:
+    for filename in Glob(pattern):
+        File(filename)
 
 # EOF #

Added: trunk/windstille/src/util/pathname.cpp
===================================================================
--- trunk/windstille/src/util/pathname.cpp	2009-08-21 12:45:54 UTC (rev 2979)
+++ trunk/windstille/src/util/pathname.cpp	2009-08-21 12:58:01 UTC (rev 2980)
@@ -0,0 +1,167 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "util/pathname.hpp"
+
+#include <assert.h>
+#include <iostream>
+#include <boost/filesystem.hpp>
+
+std::string Pathname::s_datadir;
+std::string Pathname::s_userdir;
+Pathname::Overrides Pathname::s_datadir_overrides;
+
+void
+Pathname::set_datadir_overrides(const Overrides& overrides)
+{
+  s_datadir_overrides = overrides;
+}
+
+static void add_overrides(const boost::filesystem::path& path, const boost::filesystem::path& base, 
+                         Pathname::Overrides* overrides)
+{
+  boost::filesystem::directory_iterator end_i; // default construction yields past-the-end
+
+  for(boost::filesystem::directory_iterator i(path); i != end_i; ++i)
+  {
+    if (boost::filesystem::is_directory(i->status()))
+    {
+      add_overrides(i->path(), base / i->leaf(), overrides);
+    }
+    else
+    {
+      std::string from_path   = (base / i->leaf()).string();
+      std::string to_path    = i->path().native_file_string();
+      (*overrides)[from_path] = to_path;
+    }
+  }
+}
+
+void
+Pathname::add_datadir_overrides(const std::string& path)
+{
+  add_overrides(path, "", &s_datadir_overrides);
+}
+
+void Pathname::clear_datadir_overrides()
+{
+  s_datadir_overrides.clear();
+}
+
+void Pathname::set_datadir(const std::string& datadir)
+{
+  s_datadir = datadir;
+}
+
+void Pathname::set_userdir(const std::string& userdir)
+{
+  s_userdir = userdir;
+}
+
+std::string Pathname::get_datadir()
+{
+  return s_datadir;
+}
+
+std::string Pathname::get_userdir()
+{
+  return s_userdir;
+}
+
+// -----------------------------------------------------------------------------
+
+Pathname::Pathname(const std::string& path, PathType type)
+  : m_path(path),
+    m_type(type)
+{  
+}
+
+bool
+Pathname::exists() const
+{
+  switch(m_type)
+  {
+    case kEmpty:
+      return false;
+
+    default:
+      return boost::filesystem::exists(get_sys_path());
+  }
+}
+
+std::string
+Pathname::get_sys_path() const
+{
+  switch(m_type)
+  {
+    case kSysPath:
+      return m_path;
+
+    case kDataPath:
+      if (s_datadir_overrides.empty())
+      {
+        return s_datadir + m_path;
+      }
+      else
+      {
+        Overrides::const_iterator it = s_datadir_overrides.find(m_path);
+        if (it == s_datadir_overrides.end())
+        {
+          return s_datadir + m_path;
+        }
+        else
+        {
+          return it->second;
+        }
+      }
+
+    case kUserPath:
+      return s_userdir + m_path;
+
+    case kEmpty:
+      return "";
+
+    default:
+      assert(!"Never reached");
+      return std::string();
+  }
+}
+
+std::ostream& operator<<(std::ostream& s, const Pathname& path)
+{
+  switch(path.get_type())
+  {
+    case Pathname::kSysPath:
+      return s << "sys:" << path.get_raw_path() << " - " << path.get_sys_path();
+
+    case Pathname::kDataPath:
+      return s << "data:" << path.get_raw_path() << " - " << path.get_sys_path();
+
+    case Pathname::kUserPath:
+      return s << "user:" << path.get_raw_path() << " - " << path.get_sys_path();
+
+    case Pathname::kEmpty:
+      return s << "empty";
+
+    default:
+      assert(!"never reached");
+      return s;
+  }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/util/pathname.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/util/pathname.hpp
===================================================================
--- trunk/windstille/src/util/pathname.hpp	2009-08-21 12:45:54 UTC (rev 2979)
+++ trunk/windstille/src/util/pathname.hpp	2009-08-21 12:58:01 UTC (rev 2980)
@@ -0,0 +1,121 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_UTIL_PATHNAME_HPP
+#define HEADER_WINDSTILLE_UTIL_PATHNAME_HPP
+
+#include <iosfwd>
+#include <string>
+#include <map>
+
+/** 
+ *  Pathname wraps a path and a path type, thus allowing the easy
+ *  creation of paths that point to the data directory, the users
+ *  savegame directory or the native filesystem along with allowing
+ *  ways to manipulate the location of either of those.
+ * 
+ *  A Pathname like:
+ *
+ *    Pathname path("maps\\test.png", Pathname::kDataPath);
+ *
+ *  Would be automatically expanded to:
+ *
+ *    path.getSysPath() => "C:\\Program Files\\Gicomm2\\data\\maps\\test.png"
+ */
+class Pathname
+{
+public:
+  typedef std::map<std::string, std::string> Overrides;
+
+  static void set_datadir(const std::string& datadir);
+  static void set_userdir(const std::string& userdir);
+
+  static std::string get_datadir();
+  static std::string get_userdir();
+
+  /**
+   *  setDatadirOverrides() allows you to specify mappings from
+   *  pathnames to native filesystem that override the default, thus
+   *  allowing you insert files into the virtual datadir without
+   *  actually modifying the filesystem. This functionality is usefull
+   *  for example for user modifications.
+   */
+  static void set_datadir_overrides(const Overrides& s_datadir_overrides);
+
+  static void add_datadir_overrides(const std::string& path);
+  static void clear_datadir_overrides();
+
+private:
+  static std::string s_datadir;
+  static std::string s_userdir;
+
+  static Overrides s_datadir_overrides;
+
+public:
+  enum PathType 
+  { 
+    kSysPath,  // A path that points directly to the filesystem
+    kDataPath, // A path that is relative to the top of the data/ directory
+    kUserPath, // A path that is relative to the top of the user directory
+    kEmpty
+  };
+  
+  Pathname()
+    : m_type(kEmpty)
+  {}
+
+  /** Create a Pathname object. 
+   *  
+   *  Create a path to the native filessytem:
+   *  Pathname("C:\\User\\JUser\\Desktop\\test.png", Pathname::kSysPath)
+   *
+   *  Create a path to the data directory:
+   *  Pathname("maps\\test.png", Pathname::kDataPath)
+   * 
+   *  Create a path to the users savegame directory:
+   *  Pathname("savegames\\save1.sav", Pathname::kUserPath)
+   */
+  explicit Pathname(const std::string& path, PathType type = kDataPath);
+  
+  bool empty() const { return m_type == kEmpty; }
+
+  bool exists() const;
+
+  /**
+   *  Convert the given path and type to a string that points to the
+   *  native filesystem path and which can be used in fopen(),
+   *  fstream, etc.
+   */
+  std::string get_sys_path() const;
+
+  /** Returns the relative unprocessed path */
+  std::string get_raw_path() const { return m_path; }
+
+  /** Returns the type of this Pathname */
+  PathType    get_type()    const { return m_type; }
+
+private:
+  std::string m_path;
+  PathType    m_type;
+};
+
+std::ostream& operator<<(std::ostream& s, const Pathname& path);
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/util/pathname.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Fri Aug 21 15:04:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 15:04:56 +0200
Subject: [Windstille-commit] r2981 - in trunk/windstille/src: app util
Message-ID: <200908211304.n7LD4uuX008848@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 15:04:56 +0200 (Fri, 21 Aug 2009)
New Revision: 2981

Added:
   trunk/windstille/src/util/system.cpp
   trunk/windstille/src/util/system.hpp
Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Added System class

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 12:58:01 UTC (rev 2980)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 13:04:56 UTC (rev 2981)
@@ -48,13 +48,10 @@
 #include "sprite3d/manager.hpp"
 #include "tile/tile_factory.hpp"
 #include "util/util.hpp"
+#include "util/pathname.hpp"
+#include "util/system.hpp"
 #include "windstille_main.hpp"
 
-#ifdef WIN32
-#include "shlwapi.h"
-#define strcasecmp lstrcmpiA 
-#endif
-
 WindstilleMain* WindstilleMain::current_ = 0;
 
 WindstilleMain::WindstilleMain()
@@ -74,6 +71,9 @@
     {
       config.parse_args(argc, argv);
 
+      Pathname::set_datadir(System::find_default_datadir());
+      Pathname::set_userdir(System::find_default_userdir());
+
       init_physfs(argv[0]);
       init_sdl();
 

Added: trunk/windstille/src/util/system.cpp
===================================================================
--- trunk/windstille/src/util/system.cpp	2009-08-21 12:58:01 UTC (rev 2980)
+++ trunk/windstille/src/util/system.cpp	2009-08-21 13:04:56 UTC (rev 2981)
@@ -0,0 +1,91 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "util/system.hpp"
+
+#include <stdexcept>
+#include <sstream>
+#include <stdlib.h>
+#ifdef HAVE_BINRELOC
+#  include <binreloc.h>
+#endif
+
+std::string System::find_default_datadir()
+{
+#ifdef HAVE_BINRELOC
+  std::string datadir = "data/";
+
+  BrInitError error;
+  if (!br_init(&error))
+  {
+    std::ostringstream out;
+    out << "Error: Couldn't init binreloc: " << error;
+    throw std::runtime_error(out.str());
+  }
+  else
+  {
+    char* c_prefix = br_find_exe_dir(NULL);
+    if (!c_prefix)
+    {
+      throw std::runtime_error("Error: Couldn't find prefix");
+    }
+    else
+    {
+      datadir = c_prefix;
+      free(c_prefix);
+      datadir += "/data/";
+
+      return datadir;
+    }
+  }
+#elif _WIN32
+  // TODO: do something with GetModuleFileName()
+  return "data/";
+#else
+  return "data/";
+#endif
+}
+
+std::string System::find_default_userdir()
+{
+#ifdef _WIN32
+  char* appdata = getenv("APPDATA");
+  if (!appdata)
+  {
+    throw std::runtime_error("APPDATA environment variable not set");
+  }
+  else
+  {
+    std::ostringstream out;
+    out << appdata << "/windstille/";
+    return out.str();
+  }
+#else
+  char* home = getenv("HOME");
+  if (!home)
+  {
+    throw std::runtime_error("HOME environment variable not set");
+  }
+  else
+  {
+    std::ostringstream out;
+    out << home << "/.windstille/";
+    return out.str();
+  }
+#endif
+}


Property changes on: trunk/windstille/src/util/system.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/util/system.hpp
===================================================================
--- trunk/windstille/src/util/system.hpp	2009-08-21 12:58:01 UTC (rev 2980)
+++ trunk/windstille/src/util/system.hpp	2009-08-21 13:04:56 UTC (rev 2981)
@@ -0,0 +1,34 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef SYSTEM_H_
+#define SYSTEM_H_
+
+#include <string>
+
+/** 
+ *  A Collection of OS specific functionality 
+ */
+class System
+{
+public:
+  static std::string find_default_datadir();
+  static std::string find_default_userdir();
+};
+
+#endif 


Property changes on: trunk/windstille/src/util/system.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Fri Aug 21 15:19:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 15:19:56 +0200
Subject: [Windstille-commit] r2982 - in trunk/windstille: data src/display
Message-ID: <200908211319.n7LDJufL010370@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 15:19:56 +0200 (Fri, 21 Aug 2009)
New Revision: 2982

Added:
   trunk/windstille/data/icon.png
Modified:
   trunk/windstille/src/display/opengl_window.cpp
Log:
Added icon

Added: trunk/windstille/data/icon.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/icon.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-21 13:04:56 UTC (rev 2981)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-21 13:19:56 UTC (rev 2982)
@@ -23,6 +23,7 @@
 #include <SDL/SDL_image.h>
 
 #include "util/util.hpp" 
+#include "util/pathname.hpp"
 #include "display/opengl_state.hpp"
 #include "display/display.hpp"
 #include "app/config.hpp"
@@ -44,7 +45,7 @@
     }
   
   SDL_WM_SetCaption("Windstille", "Windstille");
-  //SDL_WM_SetIcon(IMG_Load(Pathname("data/icon.png").getSysPath().c_str()), NULL);
+  SDL_WM_SetIcon(IMG_Load(Pathname("icon.png").get_sys_path().c_str()), NULL);
 
   m_window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
                               0, SDL_OPENGL | (config.get_bool("fullscreen") ? SDL_FULLSCREEN : 0));



From grumbel at mail.berlios.de  Fri Aug 21 16:35:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 16:35:37 +0200
Subject: [Windstille-commit] r2983 - in trunk/windstille/src: display screen
	scripting
Message-ID: <200908211435.n7LEZbh9020555@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 16:35:35 +0200 (Fri, 21 Aug 2009)
New Revision: 2983

Modified:
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/display/opengl_window.cpp
   trunk/windstille/src/display/opengl_window.hpp
   trunk/windstille/src/screen/screen.cpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Moved some more stuff into OpenGLWindow

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-21 13:19:56 UTC (rev 2982)
+++ trunk/windstille/src/display/display.cpp	2009-08-21 14:35:35 UTC (rev 2983)
@@ -16,19 +16,20 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "display/display.hpp"
+
+#include <assert.h>
 #include <boost/scoped_array.hpp>
 #include <png.h>
 #include <math.h>
 #include <errno.h>
 #include <fstream>
 #include <stdexcept>
-#include <SDL.h>
+
 #include "app/config.hpp"
 #include "math/math.hpp"
 #include "display/opengl_state.hpp"
-#include "display.hpp"
 #include "util/util.hpp"
-#include <assert.h>
 
 Size              Display::aspect_size;
 std::vector<Rect> Display::cliprects;
@@ -462,15 +463,6 @@
 }
 
 void
-Display::set_gamma(float r, float g, float b)
-{
-  if (SDL_SetGamma(r, g, b) == -1)
-    {
-      // Couldn't set gamma
-    }
-}
-
-void
 Display::save_screenshot(const std::string& filename)
 {
   GLint viewport[4];
@@ -504,19 +496,6 @@
 
       out.close();
     }
-  else if (0) // BMP saving
-    {
-#if SDL_BYTEORDER == SDL_BIG_ENDIAN
-      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels.get(), size.width, size.height, 24, size.width*3,
-                                                      0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
-#else
-      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels.get(), size.width, size.height, 24, size.width*3,
-                                                      0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
-#endif
-
-      SDL_SaveBMP(surface, filename.c_str());
-      SDL_FreeSurface(surface);
-    }
   else // PNG saving
     {
       FILE* fp = fopen(filename.c_str(), "w");

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-08-21 13:19:56 UTC (rev 2982)
+++ trunk/windstille/src/display/display.hpp	2009-08-21 14:35:35 UTC (rev 2983)
@@ -70,8 +70,6 @@
   static void pop_framebuffer();
   static Framebuffer get_framebuffer();
 
-  static void set_gamma(float r, float g, float b);
-
   static void save_screenshot(const std::string& filename);
 
   static void init();

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-21 13:19:56 UTC (rev 2982)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-21 14:35:35 UTC (rev 2983)
@@ -18,6 +18,7 @@
 
 #include "display/opengl_window.hpp"
 
+#include <assert.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include <SDL/SDL_image.h>
@@ -28,8 +29,13 @@
 #include "display/display.hpp"
 #include "app/config.hpp"
 
+OpenGLWindow* OpenGLWindow::s_current = 0;
+
 OpenGLWindow::OpenGLWindow()
 {
+  assert(s_current);
+  s_current = this;
+
   atexit(SDL_Quit);
 
   SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 1); // vsync
@@ -57,7 +63,8 @@
   else
     {
       GLenum err = glewInit();
-      if(err != GLEW_OK) {
+      if(err != GLEW_OK) 
+      {
         std::ostringstream msg;
         msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
         throw std::runtime_error(msg.str());
@@ -82,8 +89,7 @@
       Display::aspect_size = Size(config.get_int("aspect-width"), 
                                   config.get_int("aspect-height"));
 
-      glOrtho(0.0, 
-              Display::get_width(), Display::get_height(),
+      glOrtho(0.0, Display::get_width(), Display::get_height(),
               0.0, 1000.0, -1000.0);
       glMatrixMode(GL_MODELVIEW);
       glLoadIdentity();
@@ -120,4 +126,13 @@
     }
 }
 
+void
+OpenGLWindow::set_gamma(float r, float g, float b)
+{
+  if (SDL_SetGamma(r, g, b) == -1)
+    {
+      // Couldn't set gamma
+    }
+}
+
 /* EOF */

Modified: trunk/windstille/src/display/opengl_window.hpp
===================================================================
--- trunk/windstille/src/display/opengl_window.hpp	2009-08-21 13:19:56 UTC (rev 2982)
+++ trunk/windstille/src/display/opengl_window.hpp	2009-08-21 14:35:35 UTC (rev 2983)
@@ -20,10 +20,16 @@
 #define HEADER_WINDSTILLE_DISPLAY_OPENGL_WINDOW_HPP
 
 #include <SDL.h>
+#include <string>
 
 class OpenGLWindow
 {
 private:
+  static OpenGLWindow* s_current;
+public:
+  static OpenGLWindow* current() { return s_current; }
+
+private:
   SDL_Surface* m_window;
 
 public:
@@ -34,6 +40,7 @@
   int get_height() const { return m_window->h; }
 
   void set_fullscreen(bool fullscreen);
+  void set_gamma(float r, float g, float b);
 
 private:
   OpenGLWindow(const OpenGLWindow&);

Modified: trunk/windstille/src/screen/screen.cpp
===================================================================
--- trunk/windstille/src/screen/screen.cpp	2009-08-21 13:19:56 UTC (rev 2982)
+++ trunk/windstille/src/screen/screen.cpp	2009-08-21 14:35:35 UTC (rev 2983)
@@ -18,6 +18,7 @@
 
 #include <math.h>
 #include <iostream>
+
 #include "display/display.hpp"
 #include "app/windstille_main.hpp"
 #include "screen.hpp"

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-21 13:19:56 UTC (rev 2982)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-21 14:35:35 UTC (rev 2983)
@@ -16,26 +16,29 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "wrapper.interface.hpp"
+#include "interface.hpp"
+
 #include <vector>
 #include <assert.h>
-#include "wrapper.interface.hpp"
-#include "util.hpp"
-#include "interface.hpp"
-#include "sound/sound_manager.hpp"
-#include "screen/game_session.hpp"
-#include "hud/dialog_manager.hpp"
-#include "hud/speech_manager.hpp"
-#include "hud/conversation.hpp"
+
+#include "app/config.hpp"
+#include "display/display.hpp"
+#include "display/opengl_window.hpp"
+#include "engine/camera.hpp"
 #include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
+#include "engine/squirrel_thread.hpp"
 #include "font/fonts.hpp"
-#include "engine/camera.hpp"
-#include "app/config.hpp"
+#include "hud/controller_help_window.hpp"
+#include "hud/conversation.hpp"
+#include "hud/dialog_manager.hpp"
 #include "hud/pda.hpp"
+#include "hud/speech_manager.hpp"
+#include "screen/game_session.hpp"
+#include "sound/sound_manager.hpp"
+#include "util.hpp"
 #include "util/sexpr_file_reader.hpp"
-#include "display/display.hpp"
-#include "engine/squirrel_thread.hpp"
-#include "hud/controller_help_window.hpp"
 
 namespace Scripting
 {
@@ -313,12 +316,12 @@
 
 void set_gamma(float g)
 {
-  Display::set_gamma(g, g, g);
+  OpenGLWindow::current()->set_gamma(g, g, g);
 }
 
 void set_gamma_rgb(float r, float g, float b)
 {
-  Display::set_gamma(r, g, b);
+  OpenGLWindow::current()->set_gamma(r, g, b);
 }
 
 void show_config()



From grumbel at mail.berlios.de  Fri Aug 21 17:33:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 17:33:37 +0200
Subject: [Windstille-commit] r2984 - trunk/windstille/src/display
Message-ID: <200908211533.n7LFXbxM027738@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 17:33:37 +0200 (Fri, 21 Aug 2009)
New Revision: 2984

Modified:
   trunk/windstille/src/display/opengl_window.cpp
Log:
Fixed assert()

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-21 14:35:35 UTC (rev 2983)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-21 15:33:37 UTC (rev 2984)
@@ -33,7 +33,7 @@
 
 OpenGLWindow::OpenGLWindow()
 {
-  assert(s_current);
+  assert(!s_current);
   s_current = this;
 
   atexit(SDL_Quit);



From grumbel at mail.berlios.de  Fri Aug 21 17:34:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 17:34:04 +0200
Subject: [Windstille-commit] r2985 - in trunk/windstille/src: app util
Message-ID: <200908211534.n7LFY40R027849@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 17:34:03 +0200 (Fri, 21 Aug 2009)
New Revision: 2985

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/globals.cpp
   trunk/windstille/src/app/globals.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/util/system.cpp
Log:
Use Pathname() to detect userdir and datadir

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-21 15:33:37 UTC (rev 2984)
+++ trunk/windstille/src/app/config.cpp	2009-08-21 15:34:03 UTC (rev 2985)
@@ -16,13 +16,15 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "windstille.hpp"
+#include "app/config.hpp"
 
 #include <stdio.h>
 #include <boost/format.hpp>
 #include <memory>
 #include <iostream>
-#include "config.hpp"
+
+#include "app/windstille.hpp"
+#include "util/pathname.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "util/command_line.hpp"
 #include "globals.hpp"
@@ -218,7 +220,7 @@
           break;
 
         case 'd':
-          datadir = argp.get_argument();
+          Pathname::set_datadir(argp.get_argument());
           break;
 
         case debug_flag:

Modified: trunk/windstille/src/app/globals.cpp
===================================================================
--- trunk/windstille/src/app/globals.cpp	2009-08-21 15:33:37 UTC (rev 2984)
+++ trunk/windstille/src/app/globals.cpp	2009-08-21 15:34:03 UTC (rev 2985)
@@ -18,9 +18,7 @@
 
 #include "globals.hpp"
 
-std::string datadir;
-
-int TILE_SIZE    = 32;
+int TILE_SIZE       = 32;
 int TILE_RESOLUTION = 64;
 
 float game_time = 0.0f;

Modified: trunk/windstille/src/app/globals.hpp
===================================================================
--- trunk/windstille/src/app/globals.hpp	2009-08-21 15:33:37 UTC (rev 2984)
+++ trunk/windstille/src/app/globals.hpp	2009-08-21 15:34:03 UTC (rev 2985)
@@ -28,9 +28,6 @@
 
 const float GRAVITY = 1500;
 
-/** datadir => /usr/local/share/games/windstille/ */
-extern std::string datadir;
-
 /**
  * This is the global game time in seconds. Should be the same as normal time,
  * except that it stops when the game pauses

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 15:33:37 UTC (rev 2984)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 15:34:03 UTC (rev 2985)
@@ -21,6 +21,7 @@
 #include "windstille.hpp"
 
 #include <boost/scoped_array.hpp>
+#include <boost/filesystem.hpp>
 #include <stdio.h>
 #include <physfs.h>
 
@@ -69,11 +70,11 @@
 {
   try 
     {
-      config.parse_args(argc, argv);
-
       Pathname::set_datadir(System::find_default_datadir());
       Pathname::set_userdir(System::find_default_userdir());
 
+      config.parse_args(argc, argv);
+
       init_physfs(argv[0]);
       init_sdl();
 
@@ -293,99 +294,35 @@
 WindstilleMain::init_physfs(const char* argv0)
 {
   if (!PHYSFS_init(argv0))
-    {
-      std::stringstream msg;
-      msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
-      throw std::runtime_error(msg.str());
-    }
-
-  { // Initialize physfs (this is a slightly modified version of
-    // PHYSFS_setSaneConfig
-    const char* application = "windstille";
-    const char* userdir = PHYSFS_getUserDir();
-  
-    boost::scoped_array<char> writedir(new char[strlen(userdir) + strlen(application) + 2]);
-
-    // Set configuration directory
-    sprintf(writedir.get(), "%s.%s", userdir, application);
-    if (!PHYSFS_setWriteDir(writedir.get()))
-      {
-        // try to create the directory
-        boost::scoped_array<char> mkdir(new char[strlen(application) + 2]);
-
-        sprintf(mkdir.get(), ".%s", application);
-
-        if (!PHYSFS_setWriteDir(userdir) || !PHYSFS_mkdir(mkdir.get())) 
-          {
-            std::ostringstream msg;
-            msg << "Failed creating configuration directory '"
-                << writedir << "': " << PHYSFS_getLastError();
-            throw std::runtime_error(msg.str());
-          }
-
-        if (!PHYSFS_setWriteDir(writedir.get())) 
-          {
-            std::ostringstream msg;
-            msg << "Failed to use configuration directory '"
-                <<  writedir << "': " << PHYSFS_getLastError();
-            throw std::runtime_error(msg.str());
-          }
-      }
-    PHYSFS_addToSearchPath(writedir.get(), 0);
+  {
+    std::stringstream msg;
+    msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
+    throw std::runtime_error(msg.str());
   }
+  else
+  {
+    boost::filesystem::create_directory(Pathname::get_userdir());
 
-  { // when started from source dir...
-    ::datadir = PHYSFS_getBaseDir();
-    ::datadir += "data/";
-    std::string testfname = ::datadir;
-    testfname += "tiles.scm";
-    bool sourcedir = false;
-    FILE* f = fopen(testfname.c_str(), "r");
-    if (f)
-      {
-        fclose(f);
-        if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
-          {
-            std::cout << "Warning: Couldn't add '" << ::datadir
-                      << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
-          }
-        else 
-          {
-            sourcedir = true;
-          }
-      }
-  
-    if (!sourcedir)
-      {
-#if defined(APPDATADIR) || defined(ENABLE_BINRELOC)
-#ifdef ENABLE_BINRELOC
-        char* brdatadir = br_strcat(DATADIR, "/" PACKAGE_NAME);
-        ::datadir = brdatadir;
-        free(brdatadir);
-#else
-        ::datadir = APPDATADIR;
-#endif
-        if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
-          {
-            std::cout << "Couldn't add '" << ::datadir
-                      << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
-          }
-#endif
-      }
-  }
+    PHYSFS_setWriteDir(Pathname::get_userdir().c_str());
+    PHYSFS_addToSearchPath(Pathname::get_userdir().c_str(), 0);
+    PHYSFS_addToSearchPath(Pathname::get_datadir().c_str(), 0);
 
-  // allow symbolic links
-  PHYSFS_permitSymbolicLinks(1);
+    // allow symbolic links
+    PHYSFS_permitSymbolicLinks(1);
 
-  //show search Path
-  if (debug)
+    //show search Path
+    if (debug)
     {
+      std::cout << "userdir: " << Pathname::get_userdir() << std::endl;
+      std::cout << "datadir: " << Pathname::get_datadir() << std::endl;
+
       std::cout << "SearchPath:" << std::endl;
       char** search_path = PHYSFS_getSearchPath();
       for(char** i = search_path; *i != NULL; i++)
         std::cout << "  " << *i << std::endl;;
       PHYSFS_freeList(search_path);
     }
+  }
 }
 
 int main(int argc, char** argv)

Modified: trunk/windstille/src/util/system.cpp
===================================================================
--- trunk/windstille/src/util/system.cpp	2009-08-21 15:33:37 UTC (rev 2984)
+++ trunk/windstille/src/util/system.cpp	2009-08-21 15:34:03 UTC (rev 2985)
@@ -76,16 +76,26 @@
     return out.str();
   }
 #else
-  char* home = getenv("HOME");
-  if (!home)
+  char* xdg_config_home = getenv("XDG_CONFIG_HOME");
+  if (xdg_config_home)
   {
-    throw std::runtime_error("HOME environment variable not set");
+      std::ostringstream out;
+      out << xdg_config_home << "/windstille/";
+      return out.str();   
   }
   else
   {
-    std::ostringstream out;
-    out << home << "/.windstille/";
-    return out.str();
+    char* home = getenv("HOME");
+    if (!home)
+    {
+      throw std::runtime_error("HOME environment variable not set");
+    }
+    else
+    {
+      std::ostringstream out;
+      out << home << "/.config/windstille/";
+      return out.str();
+    }
   }
 #endif
 }



From grumbel at mail.berlios.de  Fri Aug 21 17:39:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 17:39:54 +0200
Subject: [Windstille-commit] r2986 - in trunk/windstille: . external
	external/binreloc-2.0
Message-ID: <200908211539.n7LFdsiQ028674@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 17:39:54 +0200 (Fri, 21 Aug 2009)
New Revision: 2986

Added:
   trunk/windstille/external/binreloc-2.0/
   trunk/windstille/external/binreloc-2.0/binreloc.c
   trunk/windstille/external/binreloc-2.0/binreloc.h
Modified:
   trunk/windstille/SConscript
   trunk/windstille/external/README
Log:
Added binreloc library

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-21 15:34:03 UTC (rev 2985)
+++ trunk/windstille/SConscript	2009-08-21 15:39:54 UTC (rev 2986)
@@ -174,6 +174,9 @@
                         ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
             miniswig_bin)
 
+
+binreloc_lib = StaticLibrary("binreloc", ["external/binreloc-2.0/binreloc.c"], CPPDEFINES=["ENABLE_BINRELOC"])
+
 wstlib_env    = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
 util_lib      = wstlib_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
 math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
@@ -231,7 +234,7 @@
 
 editor_env = Environment(CPPPATH=['src'],
                          CXXFLAGS=debug_cxxflags,
-                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib,
+                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib, binreloc_lib,
                                  'GL', 'GLEW', 'SDL_image', 'physfs'])
 
 editor_env.ParseConfig('Magick++-config --libs --cppflags')

Modified: trunk/windstille/external/README
===================================================================
--- trunk/windstille/external/README	2009-08-21 15:34:03 UTC (rev 2985)
+++ trunk/windstille/external/README	2009-08-21 15:39:54 UTC (rev 2986)
@@ -1,11 +1,21 @@
 SQUIRREL2/ - http://squirrel-lang.org
+-------------------------------------
     SQUIRREL2/ is a verbatim copy of the squirrel tarball, to update
     it, just remove SQUIRREL2 and extract a new tarball. 
     Some non-critical -Wall fixes where done, see:
 
      % svn diff -r 2535:2536
 
+
 miniswig/ - Squirrel Wrapper Generator
+--------------------------------------
     uses svn:externals should update automatically
 
+
+binreloc-2.0/
+-------------
+ * downloaded from http://autopackage.org/download-tools.html
+ * source files generated with "./generate.pl normal" (see binreloc docu)
+
+
 # EOF #

Added: trunk/windstille/external/binreloc-2.0/binreloc.c
===================================================================
--- trunk/windstille/external/binreloc-2.0/binreloc.c	2009-08-21 15:34:03 UTC (rev 2985)
+++ trunk/windstille/external/binreloc-2.0/binreloc.c	2009-08-21 15:39:54 UTC (rev 2986)
@@ -0,0 +1,766 @@
+/*
+ * BinReloc - a library for creating relocatable executables
+ * Written by: Hongli Lai <h.lai at chello.nl>
+ * http://autopackage.org/
+ *
+ * This source code is public domain. You can relicense this code
+ * under whatever license you want.
+ *
+ * See http://autopackage.org/docs/binreloc/ for
+ * more information and how to use this.
+ */
+
+#ifndef __BINRELOC_C__
+#define __BINRELOC_C__
+
+#ifdef ENABLE_BINRELOC
+	#include <sys/types.h>
+	#include <sys/stat.h>
+	#include <unistd.h>
+#endif /* ENABLE_BINRELOC */
+#include <stdio.h>
+#include <stdlib.h>
+#include <limits.h>
+#include <string.h>
+#include "binreloc.h"
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+
+
+/** @internal
+ * Find the canonical filename of the executable. Returns the filename
+ * (which must be freed) or NULL on error. If the parameter 'error' is
+ * not NULL, the error code will be stored there, if an error occured.
+ */
+static char *
+_br_find_exe (BrInitError *error)
+{
+#ifndef ENABLE_BINRELOC
+	if (error)
+		*error = BR_INIT_ERROR_DISABLED;
+	return NULL;
+#else
+	char *path, *path2, *line, *result;
+	size_t buf_size;
+	ssize_t size;
+	struct stat stat_buf;
+	FILE *f;
+
+	/* Read from /proc/self/exe (symlink) */
+	if (sizeof (path) > SSIZE_MAX)
+		buf_size = SSIZE_MAX - 1;
+	else
+		buf_size = PATH_MAX - 1;
+	path = (char *) malloc (buf_size);
+	if (path == NULL) {
+		/* Cannot allocate memory. */
+		if (error)
+			*error = BR_INIT_ERROR_NOMEM;
+		return NULL;
+	}
+	path2 = (char *) malloc (buf_size);
+	if (path2 == NULL) {
+		/* Cannot allocate memory. */
+		if (error)
+			*error = BR_INIT_ERROR_NOMEM;
+		free (path);
+		return NULL;
+	}
+
+	strncpy (path2, "/proc/self/exe", buf_size - 1);
+
+	while (1) {
+		int i;
+
+		size = readlink (path2, path, buf_size - 1);
+		if (size == -1) {
+			/* Error. */
+			free (path2);
+			break;
+		}
+
+		/* readlink() success. */
+		path[size] = '\0';
+
+		/* Check whether the symlink's target is also a symlink.
+		 * We want to get the final target. */
+		i = stat (path, &stat_buf);
+		if (i == -1) {
+			/* Error. */
+			free (path2);
+			break;
+		}
+
+		/* stat() success. */
+		if (!S_ISLNK (stat_buf.st_mode)) {
+			/* path is not a symlink. Done. */
+			free (path2);
+			return path;
+		}
+
+		/* path is a symlink. Continue loop and resolve this. */
+		strncpy (path, path2, buf_size - 1);
+	}
+
+
+	/* readlink() or stat() failed; this can happen when the program is
+	 * running in Valgrind 2.2. Read from /proc/self/maps as fallback. */
+
+	buf_size = PATH_MAX + 128;
+	line = (char *) realloc (path, buf_size);
+	if (line == NULL) {
+		/* Cannot allocate memory. */
+		free (path);
+		if (error)
+			*error = BR_INIT_ERROR_NOMEM;
+		return NULL;
+	}
+
+	f = fopen ("/proc/self/maps", "r");
+	if (f == NULL) {
+		free (line);
+		if (error)
+			*error = BR_INIT_ERROR_OPEN_MAPS;
+		return NULL;
+	}
+
+	/* The first entry should be the executable name. */
+	result = fgets (line, (int) buf_size, f);
+	if (result == NULL) {
+		fclose (f);
+		free (line);
+		if (error)
+			*error = BR_INIT_ERROR_READ_MAPS;
+		return NULL;
+	}
+
+	/* Get rid of newline character. */
+	buf_size = strlen (line);
+	if (buf_size <= 0) {
+		/* Huh? An empty string? */
+		fclose (f);
+		free (line);
+		if (error)
+			*error = BR_INIT_ERROR_INVALID_MAPS;
+		return NULL;
+	}
+	if (line[buf_size - 1] == 10)
+		line[buf_size - 1] = 0;
+
+	/* Extract the filename; it is always an absolute path. */
+	path = strchr (line, '/');
+
+	/* Sanity check. */
+	if (strstr (line, " r-xp ") == NULL || path == NULL) {
+		fclose (f);
+		free (line);
+		if (error)
+			*error = BR_INIT_ERROR_INVALID_MAPS;
+		return NULL;
+	}
+
+	path = strdup (path);
+	free (line);
+	fclose (f);
+	return path;
+#endif /* ENABLE_BINRELOC */
+}
+
+
+/** @internal
+ * Find the canonical filename of the executable which owns symbol.
+ * Returns a filename which must be freed, or NULL on error.
+ */
+static char *
+_br_find_exe_for_symbol (const void *symbol, BrInitError *error)
+{
+#ifndef ENABLE_BINRELOC
+	if (error)
+		*error = BR_INIT_ERROR_DISABLED;
+	return (char *) NULL;
+#else
+	#define SIZE PATH_MAX + 100
+	FILE *f;
+	size_t address_string_len;
+	char *address_string, line[SIZE], *found;
+
+	if (symbol == NULL)
+		return (char *) NULL;
+
+	f = fopen ("/proc/self/maps", "r");
+	if (f == NULL)
+		return (char *) NULL;
+
+	address_string_len = 4;
+	address_string = (char *) malloc (address_string_len);
+	found = (char *) NULL;
+
+	while (!feof (f)) {
+		char *start_addr, *end_addr, *end_addr_end, *file;
+		void *start_addr_p, *end_addr_p;
+		size_t len;
+
+		if (fgets (line, SIZE, f) == NULL)
+			break;
+
+		/* Sanity check. */
+		if (strstr (line, " r-xp ") == NULL || strchr (line, '/') == NULL)
+			continue;
+
+		/* Parse line. */
+		start_addr = line;
+		end_addr = strchr (line, '-');
+		file = strchr (line, '/');
+
+		/* More sanity check. */
+		if (!(file > end_addr && end_addr != NULL && end_addr[0] == '-'))
+			continue;
+
+		end_addr[0] = '\0';
+		end_addr++;
+		end_addr_end = strchr (end_addr, ' ');
+		if (end_addr_end == NULL)
+			continue;
+
+		end_addr_end[0] = '\0';
+		len = strlen (file);
+		if (len == 0)
+			continue;
+		if (file[len - 1] == '\n')
+			file[len - 1] = '\0';
+
+		/* Get rid of "(deleted)" from the filename. */
+		len = strlen (file);
+		if (len > 10 && strcmp (file + len - 10, " (deleted)") == 0)
+			file[len - 10] = '\0';
+
+		/* I don't know whether this can happen but better safe than sorry. */
+		len = strlen (start_addr);
+		if (len != strlen (end_addr))
+			continue;
+
+
+		/* Transform the addresses into a string in the form of 0xdeadbeef,
+		 * then transform that into a pointer. */
+		if (address_string_len < len + 3) {
+			address_string_len = len + 3;
+			address_string = (char *) realloc (address_string, address_string_len);
+		}
+
+		memcpy (address_string, "0x", 2);
+		memcpy (address_string + 2, start_addr, len);
+		address_string[2 + len] = '\0';
+		sscanf (address_string, "%p", &start_addr_p);
+
+		memcpy (address_string, "0x", 2);
+		memcpy (address_string + 2, end_addr, len);
+		address_string[2 + len] = '\0';
+		sscanf (address_string, "%p", &end_addr_p);
+
+
+		if (symbol >= start_addr_p && symbol < end_addr_p) {
+			found = file;
+			break;
+		}
+	}
+
+	free (address_string);
+	fclose (f);
+
+	if (found == NULL)
+		return (char *) NULL;
+	else
+		return strdup (found);
+#endif /* ENABLE_BINRELOC */
+}
+
+
+#ifndef BINRELOC_RUNNING_DOXYGEN
+	#undef NULL
+	#define NULL ((void *) 0) /* typecasted as char* for C++ type safeness */
+#endif
+
+static char *exe = (char *) NULL;
+
+
+/** Initialize the BinReloc library (for applications).
+ *
+ * This function must be called before using any other BinReloc functions.
+ * It attempts to locate the application's canonical filename.
+ *
+ * @note If you want to use BinReloc for a library, then you should call
+ *       br_init_lib() instead.
+ *
+ * @param error  If BinReloc failed to initialize, then the error code will
+ *               be stored in this variable. Set to NULL if you want to
+ *               ignore this. See #BrInitError for a list of error codes.
+ *
+ * @returns 1 on success, 0 if BinReloc failed to initialize.
+ */
+int
+br_init (BrInitError *error)
+{
+	exe = _br_find_exe (error);
+	return exe != NULL;
+}
+
+
+/** Initialize the BinReloc library (for libraries).
+ *
+ * This function must be called before using any other BinReloc functions.
+ * It attempts to locate the calling library's canonical filename.
+ *
+ * @note The BinReloc source code MUST be included in your library, or this
+ *       function won't work correctly.
+ *
+ * @param error  If BinReloc failed to initialize, then the error code will
+ *               be stored in this variable. Set to NULL if you want to
+ *               ignore this. See #BrInitError for a list of error codes.
+ *
+ * @returns 1 on success, 0 if a filename cannot be found.
+ */
+int
+br_init_lib (BrInitError *error)
+{
+	exe = _br_find_exe_for_symbol ((const void *) "", error);
+	return exe != NULL;
+}
+
+
+/** Find the canonical filename of the current application.
+ *
+ * @param default_exe  A default filename which will be used as fallback.
+ * @returns A string containing the application's canonical filename,
+ *          which must be freed when no longer necessary. If BinReloc is
+ *          not initialized, or if br_init() failed, then a copy of
+ *          default_exe will be returned. If default_exe is NULL, then
+ *          NULL will be returned.
+ */
+char *
+br_find_exe (const char *default_exe)
+{
+	if (exe == (char *) NULL) {
+		/* BinReloc is not initialized. */
+		if (default_exe != (const char *) NULL)
+			return strdup (default_exe);
+		else
+			return (char *) NULL;
+	}
+	return strdup (exe);
+}
+
+
+/** Locate the directory in which the current application is installed.
+ *
+ * The prefix is generated by the following pseudo-code evaluation:
+ * \code
+ * dirname(exename)
+ * \endcode
+ *
+ * @param default_dir  A default directory which will used as fallback.
+ * @return A string containing the directory, which must be freed when no
+ *         longer necessary. If BinReloc is not initialized, or if the
+ *         initialization function failed, then a copy of default_dir
+ *         will be returned. If default_dir is NULL, then NULL will be
+ *         returned.
+ */
+char *
+br_find_exe_dir (const char *default_dir)
+{
+	if (exe == NULL) {
+		/* BinReloc not initialized. */
+		if (default_dir != NULL)
+			return strdup (default_dir);
+		else
+			return NULL;
+	}
+
+	return br_dirname (exe);
+}
+
+
+/** Locate the prefix in which the current application is installed.
+ *
+ * The prefix is generated by the following pseudo-code evaluation:
+ * \code
+ * dirname(dirname(exename))
+ * \endcode
+ *
+ * @param default_prefix  A default prefix which will used as fallback.
+ * @return A string containing the prefix, which must be freed when no
+ *         longer necessary. If BinReloc is not initialized, or if
+ *         the initialization function failed, then a copy of default_prefix
+ *         will be returned. If default_prefix is NULL, then NULL will be returned.
+ */
+char *
+br_find_prefix (const char *default_prefix)
+{
+	char *dir1, *dir2;
+
+	if (exe == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_prefix != (const char *) NULL)
+			return strdup (default_prefix);
+		else
+			return (char *) NULL;
+	}
+
+	dir1 = br_dirname (exe);
+	dir2 = br_dirname (dir1);
+	free (dir1);
+	return dir2;
+}
+
+
+/** Locate the application's binary folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/bin"
+ * \endcode
+ *
+ * @param default_bin_dir  A default path which will used as fallback.
+ * @return A string containing the bin folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if
+ *         the initialization function failed, then a copy of default_bin_dir will
+ *         be returned. If default_bin_dir is NULL, then NULL will be returned.
+ */
+char *
+br_find_bin_dir (const char *default_bin_dir)
+{
+	char *prefix, *dir;
+
+	prefix = br_find_prefix ((const char *) NULL);
+	if (prefix == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_bin_dir != (const char *) NULL)
+			return strdup (default_bin_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (prefix, "bin");
+	free (prefix);
+	return dir;
+}
+
+
+/** Locate the application's superuser binary folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/sbin"
+ * \endcode
+ *
+ * @param default_sbin_dir  A default path which will used as fallback.
+ * @return A string containing the sbin folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if the
+ *         initialization function failed, then a copy of default_sbin_dir will
+ *         be returned. If default_bin_dir is NULL, then NULL will be returned.
+ */
+char *
+br_find_sbin_dir (const char *default_sbin_dir)
+{
+	char *prefix, *dir;
+
+	prefix = br_find_prefix ((const char *) NULL);
+	if (prefix == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_sbin_dir != (const char *) NULL)
+			return strdup (default_sbin_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (prefix, "sbin");
+	free (prefix);
+	return dir;
+}
+
+
+/** Locate the application's data folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/share"
+ * \endcode
+ *
+ * @param default_data_dir  A default path which will used as fallback.
+ * @return A string containing the data folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if the
+ *         initialization function failed, then a copy of default_data_dir
+ *         will be returned. If default_data_dir is NULL, then NULL will be
+ *         returned.
+ */
+char *
+br_find_data_dir (const char *default_data_dir)
+{
+	char *prefix, *dir;
+
+	prefix = br_find_prefix ((const char *) NULL);
+	if (prefix == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_data_dir != (const char *) NULL)
+			return strdup (default_data_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (prefix, "share");
+	free (prefix);
+	return dir;
+}
+
+
+/** Locate the application's localization folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/share/locale"
+ * \endcode
+ *
+ * @param default_locale_dir  A default path which will used as fallback.
+ * @return A string containing the localization folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if the
+ *         initialization function failed, then a copy of default_locale_dir will be returned.
+ *         If default_locale_dir is NULL, then NULL will be returned.
+ */
+char *
+br_find_locale_dir (const char *default_locale_dir)
+{
+	char *data_dir, *dir;
+
+	data_dir = br_find_data_dir ((const char *) NULL);
+	if (data_dir == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_locale_dir != (const char *) NULL)
+			return strdup (default_locale_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (data_dir, "locale");
+	free (data_dir);
+	return dir;
+}
+
+
+/** Locate the application's library folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/lib"
+ * \endcode
+ *
+ * @param default_lib_dir  A default path which will used as fallback.
+ * @return A string containing the library folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if the initialization
+ *         function failed, then a copy of default_lib_dir will be returned.
+ *         If default_lib_dir is NULL, then NULL will be returned.
+ */
+char *
+br_find_lib_dir (const char *default_lib_dir)
+{
+	char *prefix, *dir;
+
+	prefix = br_find_prefix ((const char *) NULL);
+	if (prefix == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_lib_dir != (const char *) NULL)
+			return strdup (default_lib_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (prefix, "lib");
+	free (prefix);
+	return dir;
+}
+
+
+/** Locate the application's libexec folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/libexec"
+ * \endcode
+ *
+ * @param default_libexec_dir  A default path which will used as fallback.
+ * @return A string containing the libexec folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if the initialization
+ *         function failed, then a copy of default_libexec_dir will be returned.
+ *         If default_libexec_dir is NULL, then NULL will be returned.
+ */
+char *
+br_find_libexec_dir (const char *default_libexec_dir)
+{
+	char *prefix, *dir;
+
+	prefix = br_find_prefix ((const char *) NULL);
+	if (prefix == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_libexec_dir != (const char *) NULL)
+			return strdup (default_libexec_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (prefix, "libexec");
+	free (prefix);
+	return dir;
+}
+
+
+/** Locate the application's configuration files folder.
+ *
+ * The path is generated by the following pseudo-code evaluation:
+ * \code
+ * prefix + "/etc"
+ * \endcode
+ *
+ * @param default_etc_dir  A default path which will used as fallback.
+ * @return A string containing the etc folder's path, which must be freed when
+ *         no longer necessary. If BinReloc is not initialized, or if the initialization
+ *         function failed, then a copy of default_etc_dir will be returned.
+ *         If default_etc_dir is NULL, then NULL will be returned.
+ */
+char *
+br_find_etc_dir (const char *default_etc_dir)
+{
+	char *prefix, *dir;
+
+	prefix = br_find_prefix ((const char *) NULL);
+	if (prefix == (char *) NULL) {
+		/* BinReloc not initialized. */
+		if (default_etc_dir != (const char *) NULL)
+			return strdup (default_etc_dir);
+		else
+			return (char *) NULL;
+	}
+
+	dir = br_build_path (prefix, "etc");
+	free (prefix);
+	return dir;
+}
+
+
+/***********************
+ * Utility functions
+ ***********************/
+
+/** Concatenate str1 and str2 to a newly allocated string.
+ *
+ * @param str1 A string.
+ * @param str2 Another string.
+ * @returns A newly-allocated string. This string should be freed when no longer needed.
+ */
+char *
+br_strcat (const char *str1, const char *str2)
+{
+	char *result;
+	size_t len1, len2;
+
+	if (str1 == NULL)
+		str1 = "";
+	if (str2 == NULL)
+		str2 = "";
+
+	len1 = strlen (str1);
+	len2 = strlen (str2);
+
+	result = (char *) malloc (len1 + len2 + 1);
+	memcpy (result, str1, len1);
+	memcpy (result + len1, str2, len2);
+	result[len1 + len2] = '\0';
+
+	return result;
+}
+
+
+char *
+br_build_path (const char *dir, const char *file)
+{
+	char *dir2, *result;
+	size_t len;
+	int must_free = 0;
+
+	len = strlen (dir);
+	if (len > 0 && dir[len - 1] != '/') {
+		dir2 = br_strcat (dir, "/");
+		must_free = 1;
+	} else
+		dir2 = (char *) dir;
+
+	result = br_strcat (dir2, file);
+	if (must_free)
+		free (dir2);
+	return result;
+}
+
+
+/* Emulates glibc's strndup() */
+static char *
+br_strndup (const char *str, size_t size)
+{
+	char *result = (char *) NULL;
+	size_t len;
+
+	if (str == (const char *) NULL)
+		return (char *) NULL;
+
+	len = strlen (str);
+	if (len == 0)
+		return strdup ("");
+	if (size > len)
+		size = len;
+
+	result = (char *) malloc (len + 1);
+	memcpy (result, str, size);
+	result[size] = '\0';
+	return result;
+}
+
+
+/** Extracts the directory component of a path.
+ *
+ * Similar to g_dirname() or the dirname commandline application.
+ *
+ * Example:
+ * \code
+ * br_dirname ("/usr/local/foobar");  --> Returns: "/usr/local"
+ * \endcode
+ *
+ * @param path  A path.
+ * @returns     A directory name. This string should be freed when no longer needed.
+ */
+char *
+br_dirname (const char *path)
+{
+	char *end, *result;
+
+	if (path == (const char *) NULL)
+		return (char *) NULL;
+
+	end = strrchr (path, '/');
+	if (end == (const char *) NULL)
+		return strdup (".");
+
+	while (end > path && *end == '/')
+		end--;
+	result = br_strndup (path, end - path + 1);
+	if (result[0] == 0) {
+		free (result);
+		return strdup ("/");
+	} else
+		return result;
+}
+
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* __BINRELOC_C__ */


Property changes on: trunk/windstille/external/binreloc-2.0/binreloc.c
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/external/binreloc-2.0/binreloc.h
===================================================================
--- trunk/windstille/external/binreloc-2.0/binreloc.h	2009-08-21 15:34:03 UTC (rev 2985)
+++ trunk/windstille/external/binreloc-2.0/binreloc.h	2009-08-21 15:39:54 UTC (rev 2986)
@@ -0,0 +1,80 @@
+/*
+ * BinReloc - a library for creating relocatable executables
+ * Written by: Hongli Lai <h.lai at chello.nl>
+ * http://autopackage.org/
+ *
+ * This source code is public domain. You can relicense this code
+ * under whatever license you want.
+ *
+ * See http://autopackage.org/docs/binreloc/ for
+ * more information and how to use this.
+ */
+
+#ifndef __BINRELOC_H__
+#define __BINRELOC_H__
+
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
+
+
+/** These error codes can be returned by br_init(), br_init_lib(), gbr_init() or gbr_init_lib(). */
+typedef enum {
+	/** Cannot allocate memory. */
+	BR_INIT_ERROR_NOMEM,
+	/** Unable to open /proc/self/maps; see errno for details. */
+	BR_INIT_ERROR_OPEN_MAPS,
+	/** Unable to read from /proc/self/maps; see errno for details. */
+	BR_INIT_ERROR_READ_MAPS,
+	/** The file format of /proc/self/maps is invalid; kernel bug? */
+	BR_INIT_ERROR_INVALID_MAPS,
+	/** BinReloc is disabled (the ENABLE_BINRELOC macro is not defined). */
+	BR_INIT_ERROR_DISABLED
+} BrInitError;
+
+
+#ifndef BINRELOC_RUNNING_DOXYGEN
+/* Mangle symbol names to avoid symbol collisions with other ELF objects. */
+	#define br_init             gJdn38894613193140_br_init
+	#define br_init_lib         gJdn38894613193140_br_init_lib
+	#define br_find_exe         gJdn38894613193140_br_find_exe
+	#define br_find_exe_dir     gJdn38894613193140_br_find_exe_dir
+	#define br_find_prefix      gJdn38894613193140_br_find_prefix
+	#define br_find_bin_dir     gJdn38894613193140_br_find_bin_dir
+	#define br_find_sbin_dir    gJdn38894613193140_br_find_sbin_dir
+	#define br_find_data_dir    gJdn38894613193140_br_find_data_dir
+	#define br_find_locale_dir  gJdn38894613193140_br_find_locale_dir
+	#define br_find_lib_dir     gJdn38894613193140_br_find_lib_dir
+	#define br_find_libexec_dir gJdn38894613193140_br_find_libexec_dir
+	#define br_find_etc_dir     gJdn38894613193140_br_find_etc_dir
+	#define br_strcat           gJdn38894613193140_br_strcat
+	#define br_build_path       gJdn38894613193140_br_build_path
+	#define br_dirname          gJdn38894613193140_br_dirname
+
+
+#endif
+int   br_init             (BrInitError *error);
+int   br_init_lib         (BrInitError *error);
+
+char *br_find_exe         (const char *default_exe);
+char *br_find_exe_dir     (const char *default_dir);
+char *br_find_prefix      (const char *default_prefix);
+char *br_find_bin_dir     (const char *default_bin_dir);
+char *br_find_sbin_dir    (const char *default_sbin_dir);
+char *br_find_data_dir    (const char *default_data_dir);
+char *br_find_locale_dir  (const char *default_locale_dir);
+char *br_find_lib_dir     (const char *default_lib_dir);
+char *br_find_libexec_dir (const char *default_libexec_dir);
+char *br_find_etc_dir     (const char *default_etc_dir);
+
+/* Utility functions */
+char *br_strcat  (const char *str1, const char *str2);
+char *br_build_path (const char *dir, const char *file);
+char *br_dirname (const char *path);
+
+
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
+
+#endif /* __BINRELOC_H__ */


Property changes on: trunk/windstille/external/binreloc-2.0/binreloc.h
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Fri Aug 21 17:52:07 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 17:52:07 +0200
Subject: [Windstille-commit] r2987 - trunk/windstille/src/app
Message-ID: <200908211552.n7LFq7qv030662@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 17:52:07 +0200 (Fri, 21 Aug 2009)
New Revision: 2987

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Fixed problem in deinitialisation

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 15:39:54 UTC (rev 2986)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 15:52:07 UTC (rev 2987)
@@ -139,7 +139,8 @@
       screen_manager.run();
     
       deinit_modules();
-
+      PHYSFS_deinit();
+      config.save();
     } 
   catch (std::exception& err)
     {
@@ -150,11 +151,6 @@
       std::cout << "Error catched something unknown?!" << std::endl;
     }
 
-  config.save();
-
-  SDL_Quit();
-  PHYSFS_deinit();
-
   return 0;
 }
 



From grumbel at mail.berlios.de  Fri Aug 21 17:52:18 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 17:52:18 +0200
Subject: [Windstille-commit] r2988 - trunk/windstille/src/collision
Message-ID: <200908211552.n7LFqIVk030708@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 17:52:18 +0200 (Fri, 21 Aug 2009)
New Revision: 2988

Modified:
   trunk/windstille/src/collision/collision_data.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/collision/collision_data.cpp
===================================================================
--- trunk/windstille/src/collision/collision_data.cpp	2009-08-21 15:52:07 UTC (rev 2987)
+++ trunk/windstille/src/collision/collision_data.cpp	2009-08-21 15:52:18 UTC (rev 2988)
@@ -27,7 +27,9 @@
 	*this=r;
     }
   else if (state == NONE)
-    *this=r;
+    {
+      *this=r;
+    }
 
   return *this;
 }



From grumbel at mail.berlios.de  Fri Aug 21 18:15:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 18:15:43 +0200
Subject: [Windstille-commit] r2989 - trunk/windstille/src/app
Message-ID: <200908211615.n7LGFhjf002063@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 18:15:42 +0200 (Fri, 21 Aug 2009)
New Revision: 2989

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/globals.cpp
   trunk/windstille/src/app/globals.hpp
   trunk/windstille/src/app/windstille_main.cpp
Log:
Automatically detect file-type, so model selection is no longer needed

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-21 15:52:18 UTC (rev 2988)
+++ trunk/windstille/src/app/config.cpp	2009-08-21 16:15:42 UTC (rev 2989)
@@ -141,20 +141,12 @@
 
   const int debug_flag        = 256;
   const int nodebug_flag      = 257;
-  const int sprite3dview_flag = 258;
-  const int particleview_flag = 259;
-  const int sprite2dview_flag = 260;
   const int secondary_controller_file = 261;
     
   argp.set_help_indent(24);
   argp.add_usage ("[LEVELFILE]");
   argp.add_doc   ("Windstille is a classic Jump'n Run game.");
 
-  argp.add_group("Mode Options:");
-  argp.add_option(sprite3dview_flag, "sprite3dview", "", "Launch Sprite3DView instead of the game");
-  argp.add_option(sprite2dview_flag, "sprite2dview", "", "Launch Sprite2DView instead of the game");
-  argp.add_option(particleview_flag, "particle-viewer", "", "Launch ParticleView instead of the game");
-
   argp.add_group("Display Options:");
   argp.add_option('g', "geometry",   "WxH", "Change window size to WIDTH and HEIGHT");
   argp.add_option('a', "aspect",   "WxH", "Change aspect size to WIDTH and HEIGHT");
@@ -231,18 +223,6 @@
           debug = false;
           break;
 
-        case sprite3dview_flag:
-          sprite3dview = true;
-          break;
-
-        case sprite2dview_flag:
-          sprite2dview = true;
-          break;
-
-        case particleview_flag:
-          particleview = true;
-          break;
-
         case 'f':
           set_bool("fullscreen", true);
           break;

Modified: trunk/windstille/src/app/globals.cpp
===================================================================
--- trunk/windstille/src/app/globals.cpp	2009-08-21 15:52:18 UTC (rev 2988)
+++ trunk/windstille/src/app/globals.cpp	2009-08-21 16:15:42 UTC (rev 2989)
@@ -32,8 +32,4 @@
 bool collision_debug = false;
 bool sound_disabled  = false;
 
-bool sprite3dview    = false;
-bool sprite2dview    = false;
-bool particleview    = false;
-
 /* EOF */

Modified: trunk/windstille/src/app/globals.hpp
===================================================================
--- trunk/windstille/src/app/globals.hpp	2009-08-21 15:52:18 UTC (rev 2988)
+++ trunk/windstille/src/app/globals.hpp	2009-08-21 16:15:42 UTC (rev 2989)
@@ -38,9 +38,6 @@
 
 extern bool debug;
 extern bool collision_debug;
-extern bool sprite3dview;
-extern bool sprite2dview;
-extern bool particleview;
 
 enum GameMainState { RUN_GAME, LOAD_MENU, LOAD_GAME_SESSION, QUIT_GAME };
 

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 15:52:18 UTC (rev 2988)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 16:15:42 UTC (rev 2989)
@@ -87,54 +87,58 @@
       if (debug) 
         std::cout << "Starting file: '" << config.get_string("levelfile") << "'" << std::endl;
     
-      std::string levelfile;
       if (config.get<std::string>("levelfile").is_set())
         {
           // FIXME: Looks a little hacky, doesn't it?
           std::string leveldir = dirname(config.get_string("levelfile"));
           PHYSFS_addToSearchPath(leveldir.c_str(), true);
-          levelfile = basename(config.get_string("levelfile"));
-        }
+          std::string levelfile = basename(config.get_string("levelfile"));
 
-      if (sprite3dview)
-        {
-          std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
+          // FIXME: file-type "detection" is pretty basic, only works
+          // with s-expr and nothing else
+          std::string file_type = FileReader::parse(levelfile).get_name();
+          std::cout << file_type << std::endl;
 
-          if (!levelfile.empty())
-            sprite3dview->set_model(levelfile);
+          if (file_type == "sprite3d") // FIXME: sprite3d isn't actually a sexpr file
+            {
+              std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
-          // Launching Sprite3DView instead of game
-          screen_manager.push_screen(sprite3dview.release());
-        }
-      else if (sprite2dview)
-        {
-          std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
+              if (!levelfile.empty())
+                sprite3dview->set_model(levelfile);
 
-          if (!levelfile.empty())
-            sprite2dview->set_sprite(levelfile);
+              // Launching Sprite3DView instead of game
+              screen_manager.push_screen(sprite3dview.release());
+            }
+          else if (file_type == "sprite") // FIXME: PNG are sprites too
+            {
+              std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
 
-          // Launching Sprite2DView instead of game
-          screen_manager.push_screen(sprite2dview.release());
-        }
-      else if (particleview)
-        {
-          ParticleViewer* particle_viewer = new ParticleViewer();
-          if (!levelfile.empty())
-            particle_viewer->load(levelfile);
-          screen_manager.push_screen(particle_viewer);
-        }
-      else
-        {
-          if (levelfile.empty())
+              if (!levelfile.empty())
+                sprite2dview->set_sprite(levelfile);
+
+              // Launching Sprite2DView instead of game
+              screen_manager.push_screen(sprite2dview.release());
+            }
+          else if (file_type == "particle-systems")
             {
-              //screen_manager.push_screen(new GameSession("levels/newformat2.wst"));
-              screen_manager.push_screen(new TitleScreen());
+              ParticleViewer* particle_viewer = new ParticleViewer();
+              if (!levelfile.empty())
+                particle_viewer->load(levelfile);
+              screen_manager.push_screen(particle_viewer);
             }
-          else
+          else if (file_type == "windstille-sector")
             {
               screen_manager.push_screen(new GameSession(levelfile));
             }
+          else
+            {
+              throw std::runtime_error("Unknown filetype '" + file_type + "'");
+            }
         }
+      else
+        {
+          screen_manager.push_screen(new TitleScreen());
+        }
         
       screen_manager.run();
     



From grumbel at mail.berlios.de  Fri Aug 21 20:22:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 20:22:50 +0200
Subject: [Windstille-commit] r2990 - trunk/windstille/src/app
Message-ID: <200908211822.n7LIMo4v003896@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 20:22:50 +0200 (Fri, 21 Aug 2009)
New Revision: 2990

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Fixed issue with config.save() order

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 16:15:42 UTC (rev 2989)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 18:22:50 UTC (rev 2990)
@@ -97,7 +97,6 @@
           // FIXME: file-type "detection" is pretty basic, only works
           // with s-expr and nothing else
           std::string file_type = FileReader::parse(levelfile).get_name();
-          std::cout << file_type << std::endl;
 
           if (file_type == "sprite3d") // FIXME: sprite3d isn't actually a sexpr file
             {
@@ -141,10 +140,11 @@
         }
         
       screen_manager.run();
+
+      config.save();
     
       deinit_modules();
       PHYSFS_deinit();
-      config.save();
     } 
   catch (std::exception& err)
     {
@@ -310,9 +310,8 @@
     // allow symbolic links
     PHYSFS_permitSymbolicLinks(1);
 
-    //show search Path
     if (debug)
-    {
+    { //show search Path
       std::cout << "userdir: " << Pathname::get_userdir() << std::endl;
       std::cout << "datadir: " << Pathname::get_datadir() << std::endl;
 



From grumbel at mail.berlios.de  Fri Aug 21 20:45:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 20:45:29 +0200
Subject: [Windstille-commit] r2991 - trunk/windstille/src
Message-ID: <200908211845.n7LIjToP006406@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 20:45:29 +0200 (Fri, 21 Aug 2009)
New Revision: 2991

Removed:
   trunk/windstille/src/weapons/
Log:
Deleted unused directory



From grumbel at mail.berlios.de  Fri Aug 21 20:45:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 20:45:53 +0200
Subject: [Windstille-commit] r2992 - trunk/windstille/src/app
Message-ID: <200908211845.n7LIjrJf006456@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 20:45:52 +0200 (Fri, 21 Aug 2009)
New Revision: 2992

Modified:
   trunk/windstille/src/app/menu_manager.cpp
Log:
Added water.particles to the list

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-21 18:45:29 UTC (rev 2991)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-21 18:45:52 UTC (rev 2992)
@@ -193,6 +193,7 @@
 
   std::vector<std::string> scenarios;
   scenarios.push_back("particlesystems/fire.particles");
+  scenarios.push_back("particlesystems/water.particles");
   
   for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {



From grumbel at mail.berlios.de  Fri Aug 21 21:43:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 21:43:55 +0200
Subject: [Windstille-commit] r2993 - in trunk/windstille/src: display
	particles
Message-ID: <200908211943.n7LJhtmm015642@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 21:43:53 +0200 (Fri, 21 Aug 2009)
New Revision: 2993

Modified:
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/particles/deform_drawer.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-21 18:45:52 UTC (rev 2992)
+++ trunk/windstille/src/display/display.cpp	2009-08-21 19:43:53 UTC (rev 2993)
@@ -481,7 +481,7 @@
   glReadPixels(0, 0, size.width, size.height, GL_RGB, GL_UNSIGNED_BYTE, pixels.get());
 
   if (0)
-    {
+    { // PPM saving
       int pitch = size.width * 3;
 
       // save to ppm
@@ -496,8 +496,8 @@
 
       out.close();
     }
-  else // PNG saving
-    {
+  else 
+    { // PNG saving
       FILE* fp = fopen(filename.c_str(), "w");
 
       if (!fp)

Modified: trunk/windstille/src/particles/deform_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.hpp	2009-08-21 18:45:52 UTC (rev 2992)
+++ trunk/windstille/src/particles/deform_drawer.hpp	2009-08-21 19:43:53 UTC (rev 2993)
@@ -40,6 +40,7 @@
   Framebuffer    framebuffer;
   Surface        surface;
   ShaderProgram  shader_program;
+
 public:
   DeformDrawer(FileReader& props);
   ~DeformDrawer();



From grumbel at mail.berlios.de  Fri Aug 21 21:44:33 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 21:44:33 +0200
Subject: [Windstille-commit] r2994 - trunk/windstille/src/screen
Message-ID: <200908211944.n7LJiXto015816@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 21:44:32 +0200 (Fri, 21 Aug 2009)
New Revision: 2994

Modified:
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Shut down properly when a non-titlescreen screen is used at startup

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 19:43:53 UTC (rev 2993)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 19:44:32 UTC (rev 2994)
@@ -19,38 +19,35 @@
 #include <boost/format.hpp>
 #include <iostream>
 #ifndef WIN32
-#include <unistd.h>
+#  include <unistd.h>
 #endif
-#include "game_session.hpp"
-#include "input/input_manager_sdl.hpp"
+
+#include "app/config.hpp"
+#include "app/globals.hpp"
+#include "app/windstille_main.hpp"
 #include "display/display.hpp"
-#include "app/globals.hpp"
-#include "screen.hpp"
 #include "font/fonts.hpp"
-#include "app/config.hpp"
-#include "app/windstille_main.hpp"
-#include "input/input_manager.hpp"
-#include "input/input_configurator.hpp"
-#include "sound/sound_manager.hpp"
+#include "game_session.hpp"
 #include "gui/gui_manager.hpp"
 #include "hud/controller_help_window.hpp"
+#include "input/input_configurator.hpp"
+#include "input/input_manager.hpp"
+#include "input/input_manager_sdl.hpp"
+#include "screen.hpp"
 #include "screen_manager.hpp"
+#include "sound/sound_manager.hpp"
 
 // GUI Stuff, can be removed if gui is a bit better organised
+#include "gui/automap.hpp"
 #include "gui/button.hpp"
-#include "gui/slider.hpp"
-#include "gui/root_component.hpp"
 #include "gui/grid_component.hpp"
+#include "gui/list_view.hpp"
 #include "gui/menu_component.hpp"
+#include "gui/root_component.hpp"
+#include "gui/slider.hpp"
 #include "gui/tab_component.hpp"
-#include "gui/list_view.hpp"
 #include "gui/text_view.hpp"
-#include "gui/automap.hpp"
 
-#ifdef WIN32
-#define snprintf _snprintf
-#endif
-
 ScreenManager screen_manager; 
 
 ScreenManager::ScreenManager()
@@ -80,113 +77,127 @@
 
   ticks = SDL_GetTicks();
 
-  ControllerHelpWindow controller_help_window;
+  //controller_help_window = new ControllerHelpWindow();
+  apply_pending_actions();
 
-  while (!do_quit)
-    {
-      /// Amount of time the world moves forward each update(), this is
-      /// independed of the number of frames and always constant
-      static const float step = .001;
+  while (!do_quit && !screens.empty())
+  {
+    /// Amount of time the world moves forward each update(), this is
+    /// independed of the number of frames and always constant
+    static const float step = .001;
 
-      Uint32 now = SDL_GetTicks();
-      float delta = static_cast<float>(now - ticks) / 1000.0f + overlap_delta;
-      ticks = now;
+    Uint32 now = SDL_GetTicks();
+    float delta = static_cast<float>(now - ticks) / 1000.0f + overlap_delta;
+    ticks = now;
 
-      time_counter  += delta;
+    time_counter += delta;
 
-      while (delta > step)
-        {
-          InputManager::update(delta);
+    while (delta > step)
+    {
+      InputManager::update(delta);
 
-          console.update(step);
-          if (!console.is_active())
-            {
-              if (!overlay_screens.empty())
-                overlay_screens.back()->update(step, InputManager::get_controller());
-              else if (!screens.empty())
-                screens.back()->update(step, InputManager::get_controller());
-            }
-          InputManager::clear();
+      console.update(step);
+      if (!console.is_active())
+      {
+        if (!overlay_screens.empty())
+          overlay_screens.back()->update(step, InputManager::get_controller());
+        else if (!screens.empty())
+          screens.back()->update(step, InputManager::get_controller());
+      }
+      InputManager::clear();
   
-          delta -= step;
-        }
+      delta -= step;
+    }
       
-      overlap_delta = delta;
+    overlap_delta = delta;
 
-      SoundManager::current()->update();
+    SoundManager::current()->update();
 
-      if (!screens.empty())
-        screens.back()->draw();
+    draw();
 
-      if (!overlay_screens.empty())
-        overlay_screens.back()->draw();
+    frame_counter += 1;
 
-      if (show_controller_help_window)
-        controller_help_window.draw();
+    poll_events();
 
-      console.draw();
+    apply_pending_actions();
+  }
+}
 
-      if (config.get_bool("show-fps"))
-        draw_fps();
+void
+ScreenManager::draw()
+{
+  if (!screens.empty())
+    screens.back()->draw();
 
-      SDL_GL_SwapBuffers();
-      frame_counter += 1;
+  if (!overlay_screens.empty())
+    overlay_screens.back()->draw();
 
-      // Commit any pending screen actions
-      switch(overlay_screen_action)
-        {
-          case PUSH_SCREEN:
-            overlay_screens.push_back(overlay_screen_screen);
-            overlay_screen_screen = boost::shared_ptr<Screen>();
-            break;
+  // if (show_controller_help_window)
+  //   controller_help_window.draw();
 
-          case POP_SCREEN:
-            if (overlay_screens.empty())
-              {
-                std::cout << "Error: ScreenManager: trying to pop_overlay with empty stack" << std::endl;
-              }
-            else
-              {
-                overlay_screens.pop_back();
-              }
-            break;
+  console.draw();
 
-          case CLEAR_SCREENS:
-            overlay_screens.clear();
-            break;
+  if (config.get_bool("show-fps"))
+    draw_fps();
 
-          case NONE:
-            // nothing
-            break;
-        }
-      overlay_screen_action = NONE;
+  SDL_GL_SwapBuffers();
+}
 
-      switch(screen_action)
-        {
-          case PUSH_SCREEN:
-            screens.push_back(screen_screen);
-            screen_screen = boost::shared_ptr<Screen>();
-            screens.back()->on_startup();
-            break;
+void
+ScreenManager::apply_pending_actions()
+{
+  // Commit any pending screen actions
+  switch(overlay_screen_action)
+  {
+    case PUSH_SCREEN:
+      overlay_screens.push_back(overlay_screen_screen);
+      overlay_screen_screen = boost::shared_ptr<Screen>();
+      break;
 
-          case POP_SCREEN:
-            screens.pop_back();
-            if (!screens.empty())
-              screens.back()->on_startup();
-            break;
+    case POP_SCREEN:
+      if (overlay_screens.empty())
+      {
+        std::cout << "Error: ScreenManager: trying to pop_overlay with empty stack" << std::endl;
+      }
+      else
+      {
+        overlay_screens.pop_back();
+      }
+      break;
 
-          case CLEAR_SCREENS:
-            screens.clear();
-            break;
+    case CLEAR_SCREENS:
+      overlay_screens.clear();
+      break;
 
-          case NONE:
-            // nothing
-            break;
-        }
-      screen_action = NONE;
+    case NONE:
+      // nothing
+      break;
+  }
+  overlay_screen_action = NONE;
 
-      poll_events();
-    }
+  switch(screen_action)
+  {
+    case PUSH_SCREEN:
+      screens.push_back(screen_screen);
+      screen_screen = boost::shared_ptr<Screen>();
+      screens.back()->on_startup();
+      break;
+
+    case POP_SCREEN:
+      screens.pop_back();
+      if (!screens.empty())
+        screens.back()->on_startup();
+      break;
+
+    case CLEAR_SCREENS:
+      screens.clear();
+      break;
+
+    case NONE:
+      // nothing
+      break;
+  }
+  screen_action = NONE;
 }
 
 void
@@ -333,9 +344,9 @@
       frame_counter = 0;
     }
   
-  char output[20];
-  snprintf(output, sizeof(output), "FPS: %d", last_fps);
-  Fonts::ttffont->draw(Vector2f(Display::get_width() - 100, 30), output);
+  std::ostringstream out;
+  out << "FPS: " << last_fps;
+  Fonts::ttffont->draw(Vector2f(Display::get_width() - 100, 30), out.str());
 }
 
 void

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-08-21 19:43:53 UTC (rev 2993)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-08-21 19:44:32 UTC (rev 2994)
@@ -50,6 +50,9 @@
   bool  do_quit;
   bool  show_controller_help_window;
 
+  void apply_pending_actions();
+  void draw();
+  
 public:
   ScreenManager();
   ~ScreenManager();



From grumbel at mail.berlios.de  Fri Aug 21 22:03:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 22:03:58 +0200
Subject: [Windstille-commit] r2995 - trunk/windstille/src/screen
Message-ID: <200908212003.n7LK3wlU021635@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 22:03:57 +0200 (Fri, 21 Aug 2009)
New Revision: 2995

Modified:
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Cleaned up includes, removed some Unix specific code

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 19:44:32 UTC (rev 2994)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 20:03:57 UTC (rev 2995)
@@ -16,11 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "screen/screen_manager.hpp"
+
 #include <boost/format.hpp>
+#include <boost/filesystem.hpp>
 #include <iostream>
-#ifndef WIN32
-#  include <unistd.h>
-#endif
 
 #include "app/config.hpp"
 #include "app/globals.hpp"
@@ -28,26 +28,13 @@
 #include "display/display.hpp"
 #include "font/fonts.hpp"
 #include "game_session.hpp"
-#include "gui/gui_manager.hpp"
 #include "hud/controller_help_window.hpp"
 #include "input/input_configurator.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "screen.hpp"
-#include "screen_manager.hpp"
 #include "sound/sound_manager.hpp"
 
-// GUI Stuff, can be removed if gui is a bit better organised
-#include "gui/automap.hpp"
-#include "gui/button.hpp"
-#include "gui/grid_component.hpp"
-#include "gui/list_view.hpp"
-#include "gui/menu_component.hpp"
-#include "gui/root_component.hpp"
-#include "gui/slider.hpp"
-#include "gui/tab_component.hpp"
-#include "gui/text_view.hpp"
-
 ScreenManager screen_manager; 
 
 ScreenManager::ScreenManager()
@@ -233,7 +220,6 @@
           case SDL_SYSWMEVENT:
             // event.syswm
             break;
-            break;
 
           case SDL_KEYDOWN:
           case SDL_KEYUP:
@@ -268,7 +254,6 @@
                       WindstilleMain::current()->set_fullscreen(config.get_bool("fullscreen"));
                       break;
               
-#ifndef WIN32
                     case SDLK_F12:
                       {
                         // FIXME: Replace this with Physfs stuff
@@ -277,13 +262,12 @@
                         do {
                           filename = (boost::format("/tmp/windstille%04d.png") % count).str();
                           count += 1;
-                        } while(access(filename.c_str(), F_OK) == 0);
+                        } while(boost::filesystem::exists(filename));
 
                         Display::save_screenshot(filename);
                         console << "Writing screenshot to: '" << filename << "'" << std::endl;
                       }
                       break;
-#endif
               
                     default:
                       if (!console.is_active())

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-08-21 19:44:32 UTC (rev 2994)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-08-21 20:03:57 UTC (rev 2995)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_SCREEN_SCREEN_MANAGER_HPP
 
 #include <boost/shared_ptr.hpp>
+#include <vector>
 
 class Screen;
 



From grumbel at mail.berlios.de  Fri Aug 21 22:14:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 22:14:25 +0200
Subject: [Windstille-commit] r2996 - in trunk/windstille/src: app display
	editor screen
Message-ID: <200908212014.n7LKEP7N024259@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 22:14:24 +0200 (Fri, 21 Aug 2009)
New Revision: 2996

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/screen/screen_manager.cpp
Log:
Save screenshots to the user directory

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 20:03:57 UTC (rev 2995)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 20:14:24 UTC (rev 2996)
@@ -302,6 +302,7 @@
   else
   {
     boost::filesystem::create_directory(Pathname::get_userdir());
+    boost::filesystem::create_directory(Pathname("screenshots", Pathname::kUserPath).get_sys_path());
 
     PHYSFS_setWriteDir(Pathname::get_userdir().c_str());
     PHYSFS_addToSearchPath(Pathname::get_userdir().c_str(), 0);

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-21 20:03:57 UTC (rev 2995)
+++ trunk/windstille/src/display/display.cpp	2009-08-21 20:14:24 UTC (rev 2996)
@@ -30,6 +30,7 @@
 #include "math/math.hpp"
 #include "display/opengl_state.hpp"
 #include "util/util.hpp"
+#include "util/pathname.hpp"
 
 Size              Display::aspect_size;
 std::vector<Rect> Display::cliprects;
@@ -463,13 +464,13 @@
 }
 
 void
-Display::save_screenshot(const std::string& filename)
+Display::save_screenshot(const Pathname& filename)
 {
   GLint viewport[4];
   glGetIntegerv(GL_VIEWPORT, viewport);
   Size size(viewport[2], viewport[3]);
 
-  std::cout << "Viewpoint: " << size << std::endl;
+  // std::cout << "Viewpoint: " << size << std::endl;
 
   size.width /= 4;
   size.width *= 4;
@@ -485,7 +486,7 @@
       int pitch = size.width * 3;
 
       // save to ppm
-      std::ofstream out(filename.c_str());
+      std::ofstream out(filename.get_sys_path().c_str());
       out << "P6\n"
           << "# Windstille Screenshot\n"
           << size.width << " " << size.height << "\n"
@@ -498,7 +499,7 @@
     }
   else 
     { // PNG saving
-      FILE* fp = fopen(filename.c_str(), "w");
+      FILE* fp = fopen(filename.get_sys_path().c_str(), "w");
 
       if (!fp)
         {

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-08-21 20:03:57 UTC (rev 2995)
+++ trunk/windstille/src/display/display.hpp	2009-08-21 20:14:24 UTC (rev 2996)
@@ -27,6 +27,8 @@
 #include "math/line.hpp"
 #include "color.hpp"
 #include "display/framebuffer.hpp"
+
+class Pathname;
 
 class Display
 {
@@ -70,7 +72,7 @@
   static void pop_framebuffer();
   static Framebuffer get_framebuffer();
 
-  static void save_screenshot(const std::string& filename);
+  static void save_screenshot(const Pathname& filename);
 
   static void init();
 };

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-21 20:03:57 UTC (rev 2995)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-21 20:14:24 UTC (rev 2996)
@@ -28,6 +28,7 @@
 #include "display/surface_manager.hpp"
 #include "display/opengl_state.hpp"
 #include "display/surface.hpp"
+#include "util/pathname.hpp"
 #include "editor_window.hpp"
 #include "scroll_tool.hpp"
 #include "sector_model.hpp"
@@ -876,7 +877,7 @@
 
   if (glwindow->gl_begin(get_gl_context()))
     {
-      Display::save_screenshot(filename);
+      Display::save_screenshot(Pathname(filename, Pathname::kSysPath));
       glwindow->gl_end();
     }
 }

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 20:03:57 UTC (rev 2995)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 20:14:24 UTC (rev 2996)
@@ -27,13 +27,14 @@
 #include "app/windstille_main.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
-#include "game_session.hpp"
+#include "screen/game_session.hpp"
 #include "hud/controller_help_window.hpp"
 #include "input/input_configurator.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_manager_sdl.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 #include "sound/sound_manager.hpp"
+#include "util/pathname.hpp"
 
 ScreenManager screen_manager; 
 
@@ -258,11 +259,11 @@
                       {
                         // FIXME: Replace this with Physfs stuff
                         int count = 0;
-                        std::string filename;
+                        Pathname filename;
                         do {
-                          filename = (boost::format("/tmp/windstille%04d.png") % count).str();
+                          filename = Pathname((boost::format("screenshots/windstille%04d.png") % count).str(), Pathname::kUserPath);
                           count += 1;
-                        } while(boost::filesystem::exists(filename));
+                        } while(filename.exists());
 
                         Display::save_screenshot(filename);
                         console << "Writing screenshot to: '" << filename << "'" << std::endl;



From grumbel at mail.berlios.de  Fri Aug 21 22:49:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 22:49:31 +0200
Subject: [Windstille-commit] r2997 - trunk/windstille/src/display
Message-ID: <200908212049.n7LKnVJo000022@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 22:49:30 +0200 (Fri, 21 Aug 2009)
New Revision: 2997

Modified:
   trunk/windstille/src/display/display.cpp
Log:
Reduced compression level to 3

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-21 20:14:24 UTC (rev 2996)
+++ trunk/windstille/src/display/display.cpp	2009-08-21 20:49:30 UTC (rev 2997)
@@ -508,7 +508,7 @@
         }
       else
         {
-          int pitch   = size.width * 3;
+          int pitch = size.width * 3;
           png_structp png_ptr;
           png_infop   info_ptr;
 
@@ -524,7 +524,7 @@
                        PNG_COMPRESSION_TYPE_BASE, 
                        PNG_FILTER_TYPE_BASE);
       
-          png_set_compression_level(png_ptr, 6);
+          png_set_compression_level(png_ptr, 3);
           png_write_info(png_ptr, info_ptr);
 
           boost::scoped_array<png_bytep> row_pointers(new png_bytep[size.height]);



From grumbel at mail.berlios.de  Fri Aug 21 22:49:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 22:49:45 +0200
Subject: [Windstille-commit] r2998 - trunk/windstille/src/display
Message-ID: <200908212049.n7LKnjx3000095@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 22:49:43 +0200 (Fri, 21 Aug 2009)
New Revision: 2998

Modified:
   trunk/windstille/src/display/scene_context.cpp
Log:
Use boost::scoped_ptr

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-21 20:49:30 UTC (rev 2997)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-21 20:49:43 UTC (rev 2998)
@@ -18,8 +18,9 @@
 
 #include <GL/glew.h>
 #include <GL/gl.h>
-
+#include <assert.h>
 #include <iostream>
+#include <boost/scoped_ptr.hpp>
 
 #include "util/util.hpp"
 #include "display/display.hpp"
@@ -30,7 +31,6 @@
 #include "shader_object.hpp"
 #include "framebuffer.hpp"
 #include "scene_context.hpp"
-#include <assert.h>
 
 // The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
 #define LIGHTMAP_DIV 4
@@ -60,7 +60,7 @@
     }
   };
   
-  Framebuffers* framebuffers;
+  boost::scoped_ptr<Framebuffers> framebuffers;
   Surface lightmap;
 
   SceneContextImpl() 
@@ -78,7 +78,6 @@
 
   ~SceneContextImpl()
   {
-    delete framebuffers;
   }
 };
 



From grumbel at mail.berlios.de  Fri Aug 21 22:50:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 22:50:23 +0200
Subject: [Windstille-commit] r2999 - trunk/windstille/src/app
Message-ID: <200908212050.n7LKoNv2000269@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 22:50:22 +0200 (Fri, 21 Aug 2009)
New Revision: 2999

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
Log:
Minor cleanup in init routine, more will follow

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 20:49:43 UTC (rev 2998)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 20:50:22 UTC (rev 2999)
@@ -69,93 +69,115 @@
 WindstilleMain::main(int argc, char** argv)
 {
   try 
-    {
-      Pathname::set_datadir(System::find_default_datadir());
-      Pathname::set_userdir(System::find_default_userdir());
+  {
+    Pathname::set_datadir(System::find_default_datadir());
+    Pathname::set_userdir(System::find_default_userdir());
 
-      config.parse_args(argc, argv);
+    config.parse_args(argc, argv);
 
-      init_physfs(argv[0]);
-      init_sdl();
+    init_physfs(argv[0]);
+    init_sdl();
 
-      config.load();
+    config.load();
     
-      config.parse_args(argc, argv);
+    config.parse_args(argc, argv);
 
+    {
+      m_window.reset(new OpenGLWindow());
+        
+      TTFFont::init(); 
+
+      Fonts::init(); 
+      new SoundManager();
+  
+      if (debug) std::cout << "Initialising ScriptManager" << std::endl;
+      texture_manager  = new TextureManager();
+      new SurfaceManager();
+      new ScriptManager();
+      sprite2d_manager = new SpriteManager();
+      sprite3d_manager = new sprite3d::Manager();
+
       init_modules();
     
-      if (debug) 
-        std::cout << "Starting file: '" << config.get_string("levelfile") << "'" << std::endl;
+      run();
+    }
+
+    config.save();
     
-      if (config.get<std::string>("levelfile").is_set())
-        {
-          // FIXME: Looks a little hacky, doesn't it?
-          std::string leveldir = dirname(config.get_string("levelfile"));
-          PHYSFS_addToSearchPath(leveldir.c_str(), true);
-          std::string levelfile = basename(config.get_string("levelfile"));
+    deinit_modules();
+    PHYSFS_deinit();
+  } 
+  catch (std::exception& err)
+  {
+    std::cout << "std::exception: " << err.what() << std::endl;
+  }
+  catch (...)
+  {
+    std::cout << "Error catched something unknown?!" << std::endl;
+  }
 
-          // FIXME: file-type "detection" is pretty basic, only works
-          // with s-expr and nothing else
-          std::string file_type = FileReader::parse(levelfile).get_name();
+  return 0;
+}
 
-          if (file_type == "sprite3d") // FIXME: sprite3d isn't actually a sexpr file
-            {
-              std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
+void
+WindstilleMain::run()
+{
+  if (debug) 
+    std::cout << "Starting file: '" << config.get_string("levelfile") << "'" << std::endl;
+    
+  if (config.get<std::string>("levelfile").is_set())
+  {
+    // FIXME: Looks a little hacky, doesn't it?
+    std::string leveldir = dirname(config.get_string("levelfile"));
+    PHYSFS_addToSearchPath(leveldir.c_str(), true);
+    std::string levelfile = basename(config.get_string("levelfile"));
 
-              if (!levelfile.empty())
-                sprite3dview->set_model(levelfile);
+    // FIXME: file-type "detection" is pretty basic, only works
+    // with s-expr and nothing else
+    std::string file_type = FileReader::parse(levelfile).get_name();
 
-              // Launching Sprite3DView instead of game
-              screen_manager.push_screen(sprite3dview.release());
-            }
-          else if (file_type == "sprite") // FIXME: PNG are sprites too
-            {
-              std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
+    if (file_type == "sprite3d") // FIXME: sprite3d isn't actually a sexpr file
+    {
+      std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
-              if (!levelfile.empty())
-                sprite2dview->set_sprite(levelfile);
+      if (!levelfile.empty())
+        sprite3dview->set_model(levelfile);
 
-              // Launching Sprite2DView instead of game
-              screen_manager.push_screen(sprite2dview.release());
-            }
-          else if (file_type == "particle-systems")
-            {
-              ParticleViewer* particle_viewer = new ParticleViewer();
-              if (!levelfile.empty())
-                particle_viewer->load(levelfile);
-              screen_manager.push_screen(particle_viewer);
-            }
-          else if (file_type == "windstille-sector")
-            {
-              screen_manager.push_screen(new GameSession(levelfile));
-            }
-          else
-            {
-              throw std::runtime_error("Unknown filetype '" + file_type + "'");
-            }
-        }
-      else
-        {
-          screen_manager.push_screen(new TitleScreen());
-        }
-        
-      screen_manager.run();
+      // Launching Sprite3DView instead of game
+      screen_manager.push_screen(sprite3dview.release());
+    }
+    else if (file_type == "sprite") // FIXME: PNG are sprites too
+    {
+      std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
 
-      config.save();
-    
-      deinit_modules();
-      PHYSFS_deinit();
-    } 
-  catch (std::exception& err)
+      if (!levelfile.empty())
+        sprite2dview->set_sprite(levelfile);
+
+      // Launching Sprite2DView instead of game
+      screen_manager.push_screen(sprite2dview.release());
+    }
+    else if (file_type == "particle-systems")
     {
-      std::cout << "std::exception: " << err.what() << std::endl;
+      ParticleViewer* particle_viewer = new ParticleViewer();
+      if (!levelfile.empty())
+        particle_viewer->load(levelfile);
+      screen_manager.push_screen(particle_viewer);
     }
-  catch (...)
+    else if (file_type == "windstille-sector")
     {
-      std::cout << "Error catched something unknown?!" << std::endl;
+      screen_manager.push_screen(new GameSession(levelfile));
     }
-
-  return 0;
+    else
+    {
+      throw std::runtime_error("Unknown filetype '" + file_type + "'");
+    }
+  }
+  else
+  {
+    screen_manager.push_screen(new TitleScreen());
+  }
+  
+  screen_manager.run();
 }
 
 void
@@ -167,25 +189,11 @@
 void
 WindstilleMain::init_modules()
 {
-  if (debug) std::cout << "Initialising Freetype2" << std::endl;
-    
-  m_window.reset(new OpenGLWindow());
-
-  TTFFont::init(); 
-
   if (debug) std::cout << "Initialising Fonts" << std::endl;
-  Fonts::init(); 
-  new SoundManager();
   SoundManager::current()->set_master_volume(config.get_int("master-volume")/100.0f);
   SoundManager::current()->enable_sound(config.get_bool("sound"));
   SoundManager::current()->enable_music(config.get_bool("music"));
 
-  if (debug) std::cout << "Initialising ScriptManager" << std::endl;
-  texture_manager  = new TextureManager();
-  new SurfaceManager();
-  new ScriptManager();
-  sprite2d_manager = new SpriteManager();
-  sprite3d_manager = new sprite3d::Manager();
 
   ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
 

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-21 20:49:43 UTC (rev 2998)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-21 20:50:22 UTC (rev 2999)
@@ -68,6 +68,7 @@
   void set_fullscreen(bool fullscreen);
 
 private:
+  void run();
   void init_sdl();
   void init_physfs(const char* argv0);
   void init_modules();



From grumbel at mail.berlios.de  Fri Aug 21 23:11:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 23:11:43 +0200
Subject: [Windstille-commit] r3000 - in trunk/windstille/src: app armature
	display editor screen sprite2d sprite3d
Message-ID: <200908212111.n7LLBhot006319@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 23:11:40 +0200 (Fri, 21 Aug 2009)
New Revision: 3000

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/armature/mesh.cpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/texture_manager.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/sprite2d/manager.cpp
   trunk/windstille/src/sprite2d/manager.hpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/manager.cpp
   trunk/windstille/src/sprite3d/manager.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
Log:
Use RAII for Manager allocation

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -18,12 +18,12 @@
 
 #include <memory>
 #include <boost/bind.hpp>
+
 #include "config.hpp"
 #include "sound/sound_manager.hpp"
 #include "console.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
-#include "app/windstille_main.hpp"
 #include "screen/game_session.hpp"
 #include "gui/group_component.hpp"
 #include "gui/gui_manager.hpp"
@@ -39,6 +39,7 @@
 #include "screen/armature_test.hpp"
 #include "screen/navigation_test.hpp"
 #include "gui/menu_item.hpp"
+#include "display/opengl_window.hpp"
 #ifdef HAVE_CWIID
 #include "input/wiimote.hpp"
 #endif
@@ -438,7 +439,7 @@
 MenuManager::menu_fullscreen(int i)
 {
   config.set_bool("fullscreen", i);
-  WindstilleMain::current()->set_fullscreen(config.get_bool("fullscreen"));
+  OpenGLWindow::current()->set_fullscreen(config.get_bool("fullscreen"));
 }
 
 void

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -86,26 +86,24 @@
       m_window.reset(new OpenGLWindow());
         
       TTFFont::init(); 
-
       Fonts::init(); 
-      new SoundManager();
-  
-      if (debug) std::cout << "Initialising ScriptManager" << std::endl;
-      texture_manager  = new TextureManager();
-      new SurfaceManager();
-      new ScriptManager();
-      sprite2d_manager = new SpriteManager();
-      sprite3d_manager = new sprite3d::Manager();
 
+      SoundManager      sound_manager;
+      TextureManager    texture_manager;
+      SurfaceManager    surface_manager;
+      SpriteManager     sprite_manager;
+      sprite3d::Manager sprite3d_manager;
+      ScriptManager     script_manager;
+
       init_modules();
     
       run();
-    }
 
-    config.save();
+      config.save();
     
-    deinit_modules();
-    PHYSFS_deinit();
+      deinit_modules();
+      PHYSFS_deinit();
+    }
   } 
   catch (std::exception& err)
   {
@@ -181,12 +179,6 @@
 }
 
 void
-WindstilleMain::set_fullscreen(bool fullscreen)
-{ 
-  m_window->set_fullscreen(fullscreen);
-}
-
-void
 WindstilleMain::init_modules()
 {
   if (debug) std::cout << "Initialising Fonts" << std::endl;
@@ -258,23 +250,7 @@
 {
   TileFactory::deinit();
   InputManager::deinit();
-
-  delete sprite3d_manager;
-  sprite3d_manager = 0;
-
-  delete sprite2d_manager;
-  sprite2d_manager = 0;
-
-  delete ScriptManager::current();
-  
-  delete SurfaceManager::current();
-
-  delete texture_manager;
-  texture_manager = 0;
-  
-  delete SoundManager::current();
   Fonts::deinit();
-
   TTFFont::deinit();
 }
 

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -65,7 +65,6 @@
   ~WindstilleMain();
 
   int main(int argc, char** argv);
-  void set_fullscreen(bool fullscreen);
 
 private:
   void run();

Modified: trunk/windstille/src/armature/mesh.cpp
===================================================================
--- trunk/windstille/src/armature/mesh.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/armature/mesh.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -158,7 +158,7 @@
 #endif
 
   texture_filename = path + basename(texture_filename);
-  texture = texture_manager->get(texture_filename);
+  texture = TextureManager::current()->get(texture_filename);
 
   // Check that all vectors contain enough values for the given number
   // of vertices

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/display/texture.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -55,7 +55,7 @@
 
 Texture::Texture(const std::string& filename)
 {
-  *this = texture_manager->get(filename);
+  *this = TextureManager::current()->get(filename);
 }
 
 Texture::Texture(GLenum target, int width, int height, GLint format)

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -18,21 +18,25 @@
 
 #include "texture_manager.hpp"
 
+#include <assert.h>
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
 #include <GL/glew.h>
 #include <GL/gl.h>
+
 #include "util/util.hpp"
 #include "app/globals.hpp"
 #include "texture.hpp"
 #include "software_surface.hpp"
 #include "physfs/physfs_sdl.hpp"
 
-TextureManager* texture_manager = 0;
+TextureManager* TextureManager::s_current = 0;
 
 TextureManager::TextureManager()
 {
+  assert(!s_current);
+  s_current = this;
 }
 
 TextureManager::~TextureManager()

Modified: trunk/windstille/src/display/texture_manager.hpp
===================================================================
--- trunk/windstille/src/display/texture_manager.hpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/display/texture_manager.hpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -31,7 +31,12 @@
  */
 class TextureManager
 {
+private:
+  static TextureManager* s_current; 
 public:
+  static TextureManager* current() { return s_current; }
+
+public:
   TextureManager();
   ~TextureManager();
 

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/editor/main.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -58,8 +58,8 @@
           throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
         }
 
-      sprite2d_manager = new SpriteManager();
-      texture_manager  = new TextureManager();
+      SpriteManager  sprite2d_manager;
+      TextureManager texture_manager;
 
       Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
       icon_theme->append_search_path("data/editor/");

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -24,14 +24,14 @@
 
 #include "app/config.hpp"
 #include "app/globals.hpp"
-#include "app/windstille_main.hpp"
 #include "display/display.hpp"
+#include "display/opengl_window.hpp"
 #include "font/fonts.hpp"
-#include "screen/game_session.hpp"
 #include "hud/controller_help_window.hpp"
 #include "input/input_configurator.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_manager_sdl.hpp"
+#include "screen/game_session.hpp"
 #include "screen/screen.hpp"
 #include "sound/sound_manager.hpp"
 #include "util/pathname.hpp"
@@ -252,7 +252,7 @@
               
                     case SDLK_F11:
                       config.set_bool("fullscreen", !config.get_bool("fullscreen"));
-                      WindstilleMain::current()->set_fullscreen(config.get_bool("fullscreen"));
+                      OpenGLWindow::current()->set_fullscreen(config.get_bool("fullscreen"));
                       break;
               
                     case SDLK_F12:

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -269,7 +269,7 @@
       console << index << ": " << directory[index] << std::endl;
     }
 
-  sprite2d_manager->cleanup();
+  SpriteManager::current()->cleanup();
   SurfaceManager::current()->cleanup();
 }
 

Modified: trunk/windstille/src/sprite2d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite2d/manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -18,14 +18,19 @@
 */
 
 #include "sprite2d/manager.hpp"
+
+#include <iostream>
+#include <assert.h>
+
 #include "sprite2d/data.hpp"
 #include "sprite2d/sprite.hpp"
-#include <iostream>
 
-SpriteManager* sprite2d_manager = 0;
+SpriteManager* SpriteManager::s_current = 0;
 
 SpriteManager::SpriteManager()
 {
+  assert(!s_current);
+  s_current = this;
 }
 
 SpriteManager::~SpriteManager()

Modified: trunk/windstille/src/sprite2d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.hpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite2d/manager.hpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -29,7 +29,12 @@
 
 class SpriteManager
 {
+private:
+  static SpriteManager* s_current;
 public:
+  static SpriteManager* current() { return s_current; }
+
+public:
   SpriteManager();
   ~SpriteManager();
 
@@ -42,8 +47,6 @@
   Datas datas;
 };
 
-extern SpriteManager* sprite2d_manager;
-
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -35,7 +35,7 @@
 
 Sprite::Sprite(const std::string& filename)
 {
-  data = sprite2d_manager->create_data(filename);
+  data = SpriteManager::current()->create_data(filename);
 
   current_action = data->actions[0];
   vflip    = false;

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -114,7 +114,7 @@
       mesh.triangle_count = read_uint16_t(file);
       mesh.vertex_count   = read_uint16_t(file);
 
-      mesh.texture = texture_manager->get(texturename);
+      mesh.texture = TextureManager::current()->get(texturename);
 
       // read triangles
       mesh.vertex_indices.reserve(mesh.triangle_count * 3);

Modified: trunk/windstille/src/sprite3d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite3d/manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -20,13 +20,14 @@
 #include "sprite3d/data.hpp"
 #include "sprite3d/sprite3d.hpp"
 
-sprite3d::Manager* sprite3d_manager = 0;
+namespace sprite3d {
 
-namespace sprite3d
-{
+Manager* Manager::s_current = 0;
 
 Manager::Manager()
 {
+  assert(!s_current);
+  s_current = this;
 }
 
 Manager::~Manager()

Modified: trunk/windstille/src/sprite3d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.hpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite3d/manager.hpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -28,12 +28,17 @@
 
 class Manager
 {
+private:
+  static Manager* s_current;
 public:
+  static Manager* current() { return s_current; }
+
+public:
   Manager();
   ~Manager();
 
   Data* create_data(const std::string& filename);
-
+    
 private:
   typedef std::map<std::string, Data*> Datas;
   Datas datas;
@@ -41,8 +46,6 @@
 
 } // namespace sprite3d
 
-extern sprite3d::Manager* sprite3d_manager;
-
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-21 20:50:22 UTC (rev 2999)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-21 21:11:40 UTC (rev 3000)
@@ -41,7 +41,7 @@
 }
 
 Sprite3D::Sprite3D(const std::string& filename)
-  : data(sprite3d_manager->create_data(filename)),
+  : data(sprite3d::Manager::current()->create_data(filename)),
     actions_switched(false)
 {
   frame1.action         = &data->actions[0];



From grumbel at mail.berlios.de  Fri Aug 21 23:44:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 21 Aug 2009 23:44:48 +0200
Subject: [Windstille-commit] r3001 - in trunk/windstille/src: app display
	font gui hud input screen scripting tile
Message-ID: <200908212144.n7LLimoX013593@sheep.berlios.de>

Author: grumbel
Date: 2009-08-21 23:44:41 +0200 (Fri, 21 Aug 2009)
New Revision: 3001

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/fonts.hpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/font/ttf_font.hpp
   trunk/windstille/src/gui/button.cpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/label.cpp
   trunk/windstille/src/gui/list_view.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_factory.hpp
Log:
Converted the remaining managers to RAII

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/app/console.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -151,9 +151,9 @@
   int y = y_pos;
 
   if (active)
-    y -= Fonts::ttffont->get_height() + 2;
+    y -= Fonts::current()->ttffont->get_height() + 2;
 
-  int num_lines = 600 / (Fonts::ttffont->get_height() + 2);
+  int num_lines = 600 / (Fonts::current()->ttffont->get_height() + 2);
 
   if (console.is_active())
     Display::fill_rect(Rect(0,0, Display::get_width(), 600),
@@ -167,9 +167,9 @@
           if (buffer[i].display_time > 4.0f && !console.is_active())
             alpha = 1.0f - (buffer[i].display_time - 4.0f);
 
-          Fonts::ttffont->draw(Vector2f(x_pos, y), buffer[i].message, Color(0.88f, 0.88f, 1.0f, alpha));
+          Fonts::current()->ttffont->draw(Vector2f(x_pos, y), buffer[i].message, Color(0.88f, 0.88f, 1.0f, alpha));
         }
-      y -= Fonts::ttffont->get_height() + 2;
+      y -= Fonts::current()->ttffont->get_height() + 2;
     }
 
   if (active)
@@ -183,7 +183,7 @@
             str += "_";
         }
 
-      Fonts::ttffont->draw(Vector2f(x_pos, y_pos), "> " + str, Color(1.0f, 1.0f, 1.0f));
+      Fonts::current()->ttffont->draw(Vector2f(x_pos, y_pos), "> " + str, Color(1.0f, 1.0f, 1.0f));
     }
 }
 
@@ -197,7 +197,7 @@
 
   if (active)
     {
-      InputEventLst events = InputManager::get_controller().get_events();
+      InputEventLst events = InputManager::current()->get_controller().get_events();
   
       for (InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
         {
@@ -538,7 +538,7 @@
 Console::activate()
 {
   // Get rid of all input events so that we don't double press
-  InputManager::clear();
+  InputManager::current()->clear();
   impl->active = true;
 
   SDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY, SDL_DEFAULT_REPEAT_INTERVAL);

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -127,7 +127,7 @@
                                menu.get_root()));
 
     std::auto_ptr<gui::TextView> text(new gui::TextView(text_group->get_child_rect(), text_group.get()));
-    text->set_font(Fonts::vera12);
+    text->set_font(Fonts::current()->vera12.get());
     text->set_text("Windstille " WINDSTILLE_VERSION " - Copyright (C) 2009 Ingo Ruhnke &lt;grumbel at gmx.de&gt;\n"
                    "\n"
                    "This program is free software: you can redistribute it and/or modify "
@@ -258,7 +258,7 @@
   std::auto_ptr<TextView> text(new TextView(group->get_child_rect(), 
                                             group.get()));
 
-  text->set_font(Fonts::vera12);
+  text->set_font(Fonts::current()->vera12.get());
   text->set_text("This is a tech-demo of Windstille. Its not meant "
                  "to be playable in any way except a bit of walking around. "
                  "It provides nothing to accomplish, just a few scenarios to "
@@ -324,7 +324,7 @@
 
   std::auto_ptr<TextView> text(new TextView(group->get_child_rect(), group.get()));
 
-  text->set_font(Fonts::vera12);
+  text->set_font(Fonts::current()->vera12.get());
   text->set_text("Programming\n"
                  "===========\n"
                  "\n"

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -83,17 +83,17 @@
     config.parse_args(argc, argv);
 
     {
-      m_window.reset(new OpenGLWindow());
-        
-      TTFFont::init(); 
-      Fonts::init(); 
-
+      OpenGLWindow      window;
+      TTFFontManager    ttffont_manager;
+      Fonts             fonts;
       SoundManager      sound_manager;
       TextureManager    texture_manager;
       SurfaceManager    surface_manager;
       SpriteManager     sprite_manager;
       sprite3d::Manager sprite3d_manager;
       ScriptManager     script_manager;
+      InputManager      input_manager;
+      TileFactory       tile_factory("tiles.scm");
 
       init_modules();
     
@@ -101,10 +101,9 @@
 
       config.save();
     
-      deinit_modules();
       PHYSFS_deinit();
     }
-  } 
+  }
   catch (std::exception& err)
   {
     std::cout << "std::exception: " << err.what() << std::endl;
@@ -186,7 +185,6 @@
   SoundManager::current()->enable_sound(config.get_bool("sound"));
   SoundManager::current()->enable_music(config.get_bool("music"));
 
-
   ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
 
   { // Fill controller_description with data
@@ -229,32 +227,18 @@
     controller_description.add_ball("mouse-motion-y", MOUSE_MOTION_Y);
   }
     
-  {
-    InputManager::init();
-      
+  {     
     if (config.get<std::string>("primary-controller-file").is_set())
-      InputManager::load(config.get<std::string>("primary-controller-file").get());
+      InputManager::current()->load(config.get<std::string>("primary-controller-file").get());
     else
-      InputManager::load("controller/keyboard.scm");
+      InputManager::current()->load("controller/keyboard.scm");
 
     if (config.get<std::string>("secondary-controller-file").is_set())
-      InputManager::load(config.get<std::string>("secondary-controller-file").get());
+      InputManager::current()->load(config.get<std::string>("secondary-controller-file").get());
   }
-
-  if (debug) std::cout << "Initialising TileFactory" << std::endl;
-  TileFactory::init();
 }
 
 void
-WindstilleMain::deinit_modules()
-{
-  TileFactory::deinit();
-  InputManager::deinit();
-  Fonts::deinit();
-  TTFFont::deinit();
-}
-
-void
 WindstilleMain::init_sdl()
 {
 #ifdef DEBUG

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -51,8 +51,6 @@
 
 #include "screen/screen.hpp"
 
-class OpenGLWindow;
-
 class WindstilleMain
 { 
 private:
@@ -72,9 +70,6 @@
   void init_physfs(const char* argv0);
   void init_modules();
   void deinit_modules();
-
-private:
-  boost::scoped_ptr<OpenGLWindow> m_window;
 };
 
 #endif

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -126,7 +126,7 @@
   void draw(const Texture& /*tmp_texture*/) {
     glPushMatrix();
     glMultMatrixf(modelview.matrix);
-    Fonts::ttffont->draw(pos, text);
+    Fonts::current()->ttffont->draw(pos, text);
     glPopMatrix();
   }
 };

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -56,7 +56,7 @@
 TextArea::TextArea(const Rectf& rect, bool letter_by_letter)
   : impl(new TextAreaImpl)
 {
-  impl->font = Fonts::vera20;
+  impl->font = Fonts::current()->vera20.get();
   impl->rect    = rect;
   // FIXME: freetype might provide info for vspacing, not sure
   impl->v_space = 2;

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/font/fonts.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -16,28 +16,25 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <assert.h>
+
 #include "app/globals.hpp"
 #include "border_font_effect.hpp"
 #include "fonts.hpp"
 
-TTFFont* Fonts::ttffont = 0;
-TTFFont* Fonts::vera12  = 0;
-TTFFont* Fonts::vera20  = 0;
+Fonts* Fonts::s_current = 0;
 
-void
-Fonts::init()
+Fonts::Fonts()
+  : ttffont(new TTFFont("fonts/VeraMono.ttf", 14, BorderFontEffect(1, true))),
+    vera12(new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2, true))),
+    vera20(new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2, true)))
 {
-  ttffont = new TTFFont("fonts/VeraMono.ttf", 14, BorderFontEffect(1, true));
-  vera12  = new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2, true));
-  vera20  = new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2, true));
+  assert(!s_current);
+  s_current = this;
 }
 
-void
-Fonts::deinit()
+Fonts::~Fonts()
 {
-  delete ttffont;
-  delete vera12;
-  delete vera20;
 }
 
 /* EOF */

Modified: trunk/windstille/src/font/fonts.hpp
===================================================================
--- trunk/windstille/src/font/fonts.hpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/font/fonts.hpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -19,16 +19,25 @@
 #ifndef HEADER_WINDSTILLE_FONT_FONTS_HPP
 #define HEADER_WINDSTILLE_FONT_FONTS_HPP
 
+#include <boost/scoped_ptr.hpp>
+
 #include "ttf_font.hpp"
 
-class Fonts {
+class Fonts 
+{
+private:
+  static Fonts* s_current;
 public:
-  static TTFFont* ttffont;
-  static TTFFont* vera12;
-  static TTFFont* vera20;
+  static Fonts* current() { return s_current; }
 
-  static void init();
-  static void deinit();
+public:
+  boost::scoped_ptr<TTFFont> ttffont;
+  boost::scoped_ptr<TTFFont> vera12;
+  boost::scoped_ptr<TTFFont> vera20;
+
+public:
+  Fonts();
+  ~Fonts();
 };
 
 #endif

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -248,4 +248,14 @@
   FT_Done_FreeType( TTFFontImpl::library );
 }
 
+TTFFontManager::TTFFontManager()
+{
+  TTFFont::init();
+}
+
+TTFFontManager::~TTFFontManager()
+{
+  TTFFont::deinit();
+}
+
 /* EOF */

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -82,6 +82,13 @@
   std::auto_ptr<TTFFontImpl> impl;
 };
 
+class TTFFontManager
+{
+public:
+  TTFFontManager();
+  ~TTFFontManager();
+};
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/gui/button.cpp
===================================================================
--- trunk/windstille/src/gui/button.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/button.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -45,11 +45,11 @@
 {
   Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
   Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
-  Fonts::vera20->draw_center(Vector2f(rect.left + rect.get_width()/2, rect.top + rect.get_height()/2),
-                             label,
-                             is_active()
-                             ? Color(1.0f, 1.0f, 1.0f, 1.0f) 
-                             : Color(1.0f, 1.0f, 1.0f, 0.5f));
+  Fonts::current()->vera20->draw_center(Vector2f(rect.left + rect.get_width()/2, rect.top + rect.get_height()/2),
+                                        label,
+                                        is_active()
+                                        ? Color(1.0f, 1.0f, 1.0f, 1.0f) 
+                                        : Color(1.0f, 1.0f, 1.0f, 0.5f));
 }
 
 void

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -43,7 +43,7 @@
 
   if (!title.empty())
     {
-      TTFFont* font = Fonts::vera20;
+      TTFFont* font = Fonts::current()->vera20.get();
       font->draw_center(Vector2f(rect.left + rect.get_width()/2, rect.top + font->get_height() + 5), 
                         title, Color(1.0f, 1.0f, 1.0f));
 
@@ -79,7 +79,7 @@
   int padding = 6;
 
   return Rectf(rect.left   + padding,
-               rect.top    + padding + (title.empty() ? 0 : Fonts::vera20->get_height() + 18),
+               rect.top    + padding + (title.empty() ? 0 : Fonts::current()->vera20->get_height() + 18),
                rect.right  - padding,
                rect.bottom - padding);
 }

Modified: trunk/windstille/src/gui/label.cpp
===================================================================
--- trunk/windstille/src/gui/label.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/label.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -36,9 +36,9 @@
 {
   //Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
   //Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
-  Fonts::vera12->draw(Vector2f(rect.left + 5/*+ rect.get_width()/2*/, rect.top + rect.get_height()/2 + 3),
-                      label,
-                      Color(1.0f, 1.0f, 1.0f, 1.0f));
+  Fonts::current()->vera12->draw(Vector2f(rect.left + 5/*+ rect.get_width()/2*/, rect.top + rect.get_height()/2 + 3),
+                                 label,
+                                 Color(1.0f, 1.0f, 1.0f, 1.0f));
 }
 
 void

Modified: trunk/windstille/src/gui/list_view.cpp
===================================================================
--- trunk/windstille/src/gui/list_view.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/list_view.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -36,7 +36,7 @@
 void
 ListView::draw()
 {
-  TTFFont* font = Fonts::vera20;
+  TTFFont* font = Fonts::current()->vera20.get();
 
   float x = rect.left;
   float y = rect.top + font->get_height();

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/menu.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -39,7 +39,7 @@
 
   group.reset(new GroupComponent(rect, name, parent));
   menu.reset(new MenuComponent(group->get_child_rect(), allow_cancel, group.get()));
-  menu->set_font(Fonts::vera20);
+  menu->set_font(Fonts::current()->vera20.get());
 }
 
 Menu::~Menu()
@@ -100,7 +100,7 @@
                     (rect.top + rect.bottom) / 2.0f);
 
     Sizef size(menu->get_prefered_width(), 
-               menu->get_prefered_height() + (group->has_title()?Fonts::vera20->get_height() + 18:0.0f));
+               menu->get_prefered_height() + (group->has_title() ? Fonts::current()->vera20->get_height() + 18 : 0.0f));
 
     group->set_screen_rect(Rectf(Vector2f(center.x - size.width/2.0f,
                                           center.y - size.height/2.0f),

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -31,7 +31,7 @@
 MenuComponent::MenuComponent(const Rectf& rect, bool allow_cancel_, Component* parent)
   : Component(rect, parent),
     current_item(0),
-    font(Fonts::vera20),
+    font(Fonts::current()->vera20.get()),
     allow_cancel(allow_cancel_),
     scroll_mode(false),
     scroll_offset(0),

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -50,7 +50,7 @@
     {
       Rectf tab_rect(Vector2f(rect.left + tab_width * i + 10,
                             rect.top),
-                     Sizef(tab_width - 20, Fonts::vera20->get_height() + 6));
+                     Sizef(tab_width - 20, Fonts::current()->vera20->get_height() + 6));
 
       if (i == current_tab)
         Display::fill_rounded_rect(tab_rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
@@ -59,12 +59,12 @@
 
       Display::draw_rounded_rect(tab_rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
-      Fonts::vera20->draw_center(Vector2f(rect.left + tab_width * i + tab_width/2,
-                                        rect.top + Fonts::vera20->get_height()),
-                                 tabs[i].label,
-                                 tabs[current_tab].component->is_active()
-                                 ? Color(1.0f, 1.0f, 1.0f, 0.5f) 
-                                 : Color(1.0f, 1.0f, 1.0f, 1.0f));
+      Fonts::current()->vera20->draw_center(Vector2f(rect.left + tab_width * i + tab_width/2,
+                                                     rect.top + Fonts::current()->vera20->get_height()),
+                                            tabs[i].label,
+                                            tabs[current_tab].component->is_active()
+                                            ? Color(1.0f, 1.0f, 1.0f, 0.5f) 
+                                            : Color(1.0f, 1.0f, 1.0f, 1.0f));
     }
 
   tabs[current_tab].component->draw();
@@ -138,7 +138,7 @@
 
   int padding = 6;
   component->set_screen_rect(Rectf(rect.left + padding,
-                                   rect.top  + padding + Fonts::vera20->get_height() + 10,
+                                   rect.top  + padding + Fonts::current()->vera20->get_height() + 10,
                                    rect.right  - padding,
                                    rect.bottom - padding
                                    ));

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -86,7 +86,7 @@
 void
 ControllerHelpWindow::draw()
 {
-  const Controller& controller = InputManager::get_controller();
+  const Controller& controller = InputManager::current()->get_controller();
 
   Vector2f pos(Display::get_width()  - 350 - 16, 
                Display::get_height() - 200 - 16);

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -82,8 +82,8 @@
 
       Vector2f textpos = pos + Vector2f(0, 16.0f);
       // FIXME: Doesn't handle multi line text
-      Sizef size(Fonts::vera20->get_width(choices[i].topic) + 40.0f,
-                 Fonts::vera20->get_height() + 25.0f);
+      Sizef size(Fonts::current()->vera20->get_width(choices[i].topic) + 40.0f,
+                 Fonts::current()->vera20->get_height() + 25.0f);
       Rectf  rect(textpos + distance * offset - Vector2f(size.width/2, size.height - 15), size);
 
       if (i == selection)
@@ -93,18 +93,18 @@
           Display::fill_arc(pos, 42.0f, start, end, Color(1.0f, 1.0f, 1.0f, 0.5f), 24);
           Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f));
 
-          Fonts::vera20->draw_center(Vector2f(textpos.x + distance * offset.x,
-                                            textpos.y + distance * offset.y), 
-                                     choices[i].topic, Color(1.0f, 1.0f, 0.0f));
-
-          Fonts::vera20->draw_center(Vector2f(400.0f, Display::get_height() - 32.0f),
-                                     choices[i].text, Color(1.0f, 1.0f, 1.0f));
+          Fonts::current()->vera20->draw_center(Vector2f(textpos.x + distance * offset.x,
+                                                         textpos.y + distance * offset.y), 
+                                                choices[i].topic, Color(1.0f, 1.0f, 0.0f));
+          
+          Fonts::current()->vera20->draw_center(Vector2f(400.0f, Display::get_height() - 32.0f),
+                                                choices[i].text, Color(1.0f, 1.0f, 1.0f));
           Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 0.0f));
         }
       else
         {
           Display::fill_rounded_rect(rect, 5.0f, Color(0.25f, 0.25f, 0.25f, 0.75f));
-          Fonts::vera20->draw_center(Vector2f(textpos.x + distance * offset.x,
+          Fonts::current()->vera20->draw_center(Vector2f(textpos.x + distance * offset.x,
                                             textpos.y + distance * offset.y),
                                      choices[i].topic, Color(0.8f, 0.8f, 0.8f));
           Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f));

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -179,9 +179,9 @@
 
   Size dialog_size(dialog_width, dialog_height);
 
-  text_area.reset(new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::vera20->get_height()),
+  text_area.reset(new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::current()->vera20->get_height()),
                                     Size(text_width, 200)), true));
-  text_area->set_font(Fonts::vera20);
+  text_area->set_font(Fonts::current()->vera20.get());
   text_area->set_text(text);
 }
 

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -102,7 +102,7 @@
       if (i == 0 && moving == 0)
         {
           slothighlight.draw(draw_pos);
-          Fonts::vera20->draw_center(Vector2f(draw_pos.x, draw_pos.y - 64), item.name);
+          Fonts::current()->vera20->draw_center(Vector2f(draw_pos.x, draw_pos.y - 64), item.name);
         }
       else
         {

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/hud/pda.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -48,8 +48,8 @@
   text_area.reset(new TextArea(Rectf(pos + Vector2f(40.0f, 50.0f) + Vector2f(0.0f, 56.0f),
                                      Sizef(315.0f, 380.0f)).grow(-12.0f), false));
 
-  ui_area->set_font(Fonts::vera12);
-  text_area->set_font(Fonts::vera12);
+  ui_area->set_font(Fonts::current()->vera12.get());
+  text_area->set_font(Fonts::current()->vera12.get());
 }
 
 PDA::~PDA()

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -62,7 +62,7 @@
   // that we get an empty gap between succesive text on the screen,
   // which is needed to make text look more like natural speech.
   if (seconds_passed < (seconds_till_done - .1f))
-    Fonts::vera20->draw_center(pos, text, color);
+    Fonts::current()->vera20->draw_center(pos, text, color);
 }
 
 void

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -40,7 +40,7 @@
 
   area.set_text(out.str());
 
-  area.set_font(Fonts::ttffont);
+  area.set_font(Fonts::current()->ttffont.get());
 
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, INVENTORY_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, AIM_BUTTON);

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <assert.h>
 #include <iostream>
 #include <assert.h>
 #include <stdexcept>
@@ -26,18 +27,17 @@
 #include "input_manager_impl.hpp"
 #include "input_manager.hpp"
 
-InputManagerImpl* InputManager::impl = 0;
+InputManager* InputManager::s_current = 0;
 
-void
-InputManager::init()
+InputManager::InputManager()
+  : impl(new InputManagerSDL())
 {
-  impl = new InputManagerSDL();
+  assert(!s_current);
+  s_current = this;
 }
 
-void 
-InputManager::deinit()
+InputManager::~InputManager()
 {
-  delete impl;
 }
 
 void

Modified: trunk/windstille/src/input/input_manager.hpp
===================================================================
--- trunk/windstille/src/input/input_manager.hpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/input/input_manager.hpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -21,6 +21,8 @@
 
 #include <string>
 #include <vector>
+#include <boost/scoped_ptr.hpp>
+
 #include "controller.hpp"
 #include "input_event.hpp"
 
@@ -30,21 +32,24 @@
 class InputManager
 {
 private:
-  static InputManagerImpl* impl;
+  static InputManager* s_current;
+public:
+  static InputManager* current() { return s_current; }
 
 public:
-  /** Init the InputManager */
-  static void init();
-  static void deinit();
+  InputManager();
+  ~InputManager();
 
   /** Load configuration file \a filename */
-  static void load(const std::string& filename);
+  void load(const std::string& filename);
 
-  static void update(float delta);
-  static const Controller& get_controller();
-  static void clear();
+  void update(float delta);
+  const Controller& get_controller();
+  void clear();
 
 private:
+  boost::scoped_ptr<InputManagerImpl> impl;
+
   InputManager(const InputManager&);
   InputManager& operator=(const InputManager&);
 };

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -174,8 +174,8 @@
   if (pause)
     {
       if ((SDL_GetTicks() / 1000) % 2)
-        Fonts::vera20->draw(Vector2f(Display::get_width()/2.0f, Display::get_height()/2.0f), 
-                            "Pause");
+        Fonts::current()->vera20->draw(Vector2f(Display::get_width()/2.0f, Display::get_height()/2.0f), 
+                                       "Pause");
     }
 }
 

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -82,17 +82,17 @@
 
     while (delta > step)
     {
-      InputManager::update(delta);
+      InputManager::current()->update(delta);
 
       console.update(step);
       if (!console.is_active())
       {
         if (!overlay_screens.empty())
-          overlay_screens.back()->update(step, InputManager::get_controller());
+          overlay_screens.back()->update(step, InputManager::current()->get_controller());
         else if (!screens.empty())
-          screens.back()->update(step, InputManager::get_controller());
+          screens.back()->update(step, InputManager::current()->get_controller());
       }
-      InputManager::clear();
+      InputManager::current()->clear();
   
       delta -= step;
     }
@@ -331,7 +331,7 @@
   
   std::ostringstream out;
   out << "FPS: " << last_fps;
-  Fonts::ttffont->draw(Vector2f(Display::get_width() - 100, 30), out.str());
+  Fonts::current()->ttffont->draw(Vector2f(Display::get_width() - 100, 30), out.str());
 }
 
 void

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -80,16 +80,16 @@
   sc.render();
   
   float x = 10.0f;
-  float y =  Fonts::vera12->get_height() + 5.0f;
-  int line_height = Fonts::vera12->get_height()+5;
+  float y =  Fonts::current()->vera12->get_height() + 5.0f;
+  int line_height = Fonts::current()->vera12->get_height()+5;
 
   for(int i = 0; i < int(actions.size()); ++i)
     {
       if (i == current_action)
-        Fonts::vera12->draw(Vector2f(x, y),
+        Fonts::current()->vera12->draw(Vector2f(x, y),
                             actions[i], Color(1.0f, 1.0f, 1.0f));
       else
-        Fonts::vera12->draw(Vector2f(x, y),
+        Fonts::current()->vera12->draw(Vector2f(x, y),
                             actions[i], Color(0.7f, 0.7f, 0.7f));
 
 
@@ -97,7 +97,7 @@
       if (y > 580.0f)
         {
           x += 200.0f;
-          y =  Fonts::vera12->get_height() + 5.0f;
+          y =  Fonts::current()->vera12->get_height() + 5.0f;
         }
     }
 }

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/screen/view.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -72,7 +72,7 @@
   if (keystate[SDLK_KP_MINUS])
     zoom *= 1.0f - delta;
 
-  const Controller& controller = InputManager::get_controller();
+  const Controller& controller = InputManager::current()->get_controller();
 
   if (controller.get_button_state(DEBUG_BUTTON))
     {

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -128,9 +128,9 @@
   boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
-    {
-      ptr->set_wakeup_event(ScriptManager::TIME, time);
-    }
+  {
+    ptr->set_wakeup_event(ScriptManager::TIME, time);
+  }
 }
 
 void wait_for_dialog(HSQUIRRELVM vm)
@@ -138,9 +138,9 @@
   boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
-    {
-      ptr->set_wakeup_event(ScriptManager::DIALOG_CLOSED);
-    }
+  {
+    ptr->set_wakeup_event(ScriptManager::DIALOG_CLOSED);
+  }
 }
 
 void wait_for_camera(HSQUIRRELVM vm)
@@ -148,9 +148,9 @@
   boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
-    {
-      ptr->set_wakeup_event(ScriptManager::CAMERA_DONE);
-    }
+  {
+    ptr->set_wakeup_event(ScriptManager::CAMERA_DONE);
+  }
 }
 
 void wait_for_fade(HSQUIRRELVM vm)
@@ -158,9 +158,9 @@
   boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
-    {
-      ptr->set_wakeup_event(ScriptManager::FADE_DONE);
-    }
+  {
+    ptr->set_wakeup_event(ScriptManager::FADE_DONE);
+  }
 }
 
 int speech_show(const std::string& text, float x, float y, float r, float g, float b)
@@ -222,10 +222,10 @@
   const std::vector<boost::shared_ptr< ::GameObject > >& objects = Sector::current()->get_objects();
   
   for(std::vector<boost::shared_ptr< ::GameObject > >::const_iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      if (!(*i)->get_name().empty())
-        console << (*i)->get_name() << std::endl;
-    }
+  {
+    if (!(*i)->get_name().empty())
+      console << (*i)->get_name() << std::endl;
+  }
 }
 
 float get_game_speed()
@@ -264,9 +264,9 @@
   boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
-    {
-      ptr->set_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
-    }
+  {
+    ptr->set_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
+  }
 }
 
 SQInteger display(HSQUIRRELVM v)
@@ -304,12 +304,12 @@
 
 void set_console_font(const std::string& font, int size)
 {
-  TTFFont* oldfont = Fonts::ttffont;
-
-  try {
-    Fonts::ttffont = new TTFFont("fonts/" + font, size);
-    delete oldfont;
-  } catch(std::exception& err) {
+  try 
+  {
+    Fonts::current()->ttffont.reset(new TTFFont("fonts/" + font, size));
+  }
+  catch(std::exception& err) 
+  {
     console << err.what() << std::endl;
   }
 }
@@ -362,26 +362,26 @@
 SQInteger spawn_object(HSQUIRRELVM v)
 {
   if (Sector::current())
-    {
-      const char* objname = 0;
-      sq_getstring(v, -2, &objname);
+  {
+    const char* objname = 0;
+    sq_getstring(v, -2, &objname);
 
-      // Newly created objects are deleted in ~SExprFileReader() and ~Lisp()
-      std::vector<lisp::Lisp*> entries;
-      entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, objname));
-      table_to_lisp(v, -1, entries);
+    // Newly created objects are deleted in ~SExprFileReader() and ~Lisp()
+    std::vector<lisp::Lisp*> entries;
+    entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, objname));
+    table_to_lisp(v, -1, entries);
 
-      try 
-        {
-          SExprFileReader reader(new lisp::Lisp(entries), true);
-          Sector::current()->add_object(reader);
-        }
-      catch (std::exception& e) 
-        {
-          std::cerr << "Error parsing object in spawn_object: " << e.what()
-                    << "\n";
-        }
+    try 
+    {
+      SExprFileReader reader(new lisp::Lisp(entries), true);
+      Sector::current()->add_object(reader);
     }
+    catch (std::exception& e) 
+    {
+      std::cerr << "Error parsing object in spawn_object: " << e.what()
+                << "\n";
+    }
+  }
   return 0;
 }
 
@@ -394,11 +394,11 @@
 SQInteger spawn_function(HSQUIRRELVM v)
 {
   if (ScriptManager::current())
-    {
-      boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script(v, false);
-      thread->load(v, -1);
-      sq_pop(v, 1);
-    }
+  {
+    boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script(v, false);
+    thread->load(v, -1);
+    sq_pop(v, 1);
+  }
   return 0;
 }
 
@@ -409,13 +409,13 @@
   table_to_lisp(v, -1, entries);
 
   for(std::vector<lisp::Lisp*>::iterator i = entries.begin(); i != entries.end(); ++i)
-    {
-      console << (i - entries.begin()) << ": ";
-      std::stringstream str;
-      (*i)->print(str);
-      console << str.str();
-      console << std::endl;
-    }
+  {
+    console << (i - entries.begin()) << ": ";
+    std::stringstream str;
+    (*i)->print(str);
+    console << str.str();
+    console << std::endl;
+  }
    
   return 0;
 }

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -22,6 +22,7 @@
 #include <sstream>
 #include <iostream>
 #include <memory>
+
 #include "app/globals.hpp"
 #include "tile.hpp"
 #include "tile_packer.hpp"
@@ -35,8 +36,6 @@
 
 TileFactory* TileFactory::current_ = 0;
 
-std::string TileFactory::tile_def_file = "tiles.scm";
-
 /** Check if the given region of the given image is fully transparent */
 bool surface_empty(const SoftwareSurface& image, int sx, int sy, int w, int h)
 { 
@@ -54,8 +53,11 @@
   return true;
 }
 
-TileFactory::TileFactory (const std::string& filename)
+TileFactory::TileFactory(const std::string& filename)
 {
+  assert(!current_);
+  current_ = this;
+
   packers.push_back(new TilePacker(1024, 1024));
   packers.push_back(new TilePacker(1024, 1024));
   color_packer     = 0;
@@ -176,18 +178,4 @@
     }
 }
 
-void
-TileFactory::init()
-{
-  assert(current_ == 0);
-  current_ = new TileFactory(tile_def_file);
-}
-
-/** Destroy the default TileFactor */
-void
-TileFactory::deinit()
-{
-  delete current_;
-}
-
 /* EOF */

Modified: trunk/windstille/src/tile/tile_factory.hpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.hpp	2009-08-21 21:11:40 UTC (rev 3000)
+++ trunk/windstille/src/tile/tile_factory.hpp	2009-08-21 21:44:41 UTC (rev 3001)
@@ -43,8 +43,6 @@
   std::vector<TileDescription*> descriptions;
   
 public:
-  static std::string tile_def_file;
-
   typedef Tiles::iterator iterator;
   
   iterator begin() { return tiles.begin(); }
@@ -53,7 +51,7 @@
   /** Create a TileFactory from a given tile definition file */
   TileFactory(const std::string& filename);
   ~TileFactory();
-
+  
   /**
    * Create a new tile, or loads&create it if it is not already
    * available
@@ -65,12 +63,6 @@
    */
   void pack(int id, int colmap, const SoftwareSurface& image, const Rect& rect);
 
-  /** Create the default TileFactor*/
-  static void init();
-
-  /** Destroy the default TileFactor*/
-  static void deinit();
-
   /** Access the default TileFactor*/
   static TileFactory* current() { return current_; }
 



From grumbel at mail.berlios.de  Sat Aug 22 00:17:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 00:17:45 +0200
Subject: [Windstille-commit] r3002 - in trunk/windstille:
	data/particlesystems src/particles
Message-ID: <200908212217.n7LMHjJd021665@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 00:17:38 +0200 (Sat, 22 Aug 2009)
New Revision: 3002

Modified:
   trunk/windstille/data/particlesystems/water.particles
   trunk/windstille/src/particles/spark_drawer.cpp
Log:
Fixed width in SparkDrawer

Modified: trunk/windstille/data/particlesystems/water.particles
===================================================================
--- trunk/windstille/data/particlesystems/water.particles	2009-08-21 21:44:41 UTC (rev 3001)
+++ trunk/windstille/data/particlesystems/water.particles	2009-08-21 22:17:38 UTC (rev 3002)
@@ -2,9 +2,9 @@
 
 (particle-systems
  (particle-system
-  (drawer (spark-drawer (color 0.25 0.5 1.0) (width 0.3)))
+  (drawer (spark-drawer (color 0.25 0.5 1.0) (width 2.5)))
   (z-pos 900)
-  (count 2000)
+  (count 1000)
   (pos 0 -200)
   (layer "highlight")
   (velocity 100 200)
@@ -13,9 +13,9 @@
   (distribution (line-distribution (x1 -25)  (y1 0) (x2 25) (y2 0))))
 
   (particle-system
-   (drawer (spark-drawer (color 0.8 0.8 1.0) (width 0.5)))
+   (drawer (spark-drawer (color 0.8 0.8 1.0) (width 2.5)))
    (z-pos 900)
-   (count 2000)
+   (count 1000)
    (pos 0 -200)
    (layer "highlight")
    (velocity 100 200)

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-21 21:44:41 UTC (rev 3001)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-21 22:17:38 UTC (rev 3002)
@@ -56,21 +56,27 @@
       buffer->set_blend_func(GL_SRC_ALPHA, GL_ONE);
       for(ParticleSystem::Particles::iterator i = psys.begin(); i != psys.end(); ++i)
         {
-          float len = sqrt(i->v_x * i->v_x + i->v_y * i->v_y);
-          float o_x = i->v_x/len * width;
-          float o_y = i->v_y/len * width;
+          const float len = sqrtf(i->v_x * i->v_x  +  i->v_y * i->v_y);
 
-          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
-          buffer->vertex(i->x - o_y, i->y - o_x);
+          const float o_x = i->v_y/len * width;
+          const float o_y = i->v_x/len * width;
 
-          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
-          buffer->vertex(i->x + o_y, i->y - o_x);
+          const float x1 = i->x;
+          const float y1 = i->y;
+          const float x2 = i->x + i->v_x/10.0f;
+          const float y2 = i->y + i->v_y/10.0f;
 
           buffer->color(Color(0, 0, 0, 0));
-          buffer->vertex(i->x - i->v_x/10.0f - o_y, i->y - i->v_y/10.0f - o_x); 
+          buffer->vertex(x1 + o_x, y1 - o_y);
 
           buffer->color(Color(0, 0, 0, 0));
-          buffer->vertex(i->x + i->v_x/10.0f + o_y, i->y - i->v_y/10.0f - o_x); 
+          buffer->vertex(x1 - o_x, y1 + o_y);
+
+          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
+          buffer->vertex(x2 - o_x, y2 + o_y); 
+
+          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
+          buffer->vertex(x2 + o_x, y2 - o_y); 
         }
     }
 



From grumbel at mail.berlios.de  Sat Aug 22 01:16:00 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 01:16:00 +0200
Subject: [Windstille-commit] r3003 - trunk/windstille/src/sprite3d
Message-ID: <200908212316.n7LNG0lC014054@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 01:15:52 +0200 (Sat, 22 Aug 2009)
New Revision: 3003

Modified:
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
Log:
Minor code cleanup and use boost::scoped_array

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-21 22:17:38 UTC (rev 3002)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-21 23:15:52 UTC (rev 3003)
@@ -18,11 +18,13 @@
 
 #include "sprite3d/data.hpp"
 
+#include <boost/scoped_array.hpp>
 #include <iostream>
 #include <physfs.h>
 #include <string.h>
 #include <sstream>
 #include <stdexcept>
+
 #include "util/util.hpp"
 #include "app/globals.hpp"
 #include "display/texture_manager.hpp"
@@ -34,26 +36,27 @@
 
 static inline float read_float(PHYSFS_file* file)
 {
-  union {
-    uint32_t i;
-    float    f;
-  } result;
+  float result;
 
-  if(PHYSFS_readULE32(file, &result.i) == 0) {
+  if(PHYSFS_readULE32(file, reinterpret_cast<PHYSFS_uint32*>(&result)) == 0) 
+  {
     std::ostringstream msg;
     msg << "Problem reading float value: " << PHYSFS_getLastError();
     throw std::runtime_error(msg.str());
   }
-
-  // FIXME: is this platform independent? -> should be, since
-  // endianess is handled in readULE32
-  return result.f;
+  else
+  {
+    // FIXME: is this platform independent? -> should be, since
+    // endianess is handled in readULE32
+    return result;
+  }
 }
 
 static inline uint16_t read_uint16_t(PHYSFS_file* file)
 {
   uint16_t result;
-  if(PHYSFS_readULE16(file, &result) == 0) {
+  if(PHYSFS_readULE16(file, &result) == 0) 
+  {
     std::ostringstream msg;
     msg << "Problem reading uint16 value: " << PHYSFS_getLastError();
     throw std::runtime_error(msg.str());
@@ -63,17 +66,20 @@
 
 static inline std::string read_string(PHYSFS_file* file, size_t size)
 {
-  char* buffer = new char[size+1];
-  if(PHYSFS_read(file, buffer, size, 1) != 1) {
+  boost::scoped_array<char> buffer(new char[size+1]);
+  if(PHYSFS_read(file, buffer.get(), size, 1) != 1) 
+  {
     std::ostringstream msg;
     msg << "Problem reading string value: " << PHYSFS_getLastError();
     throw std::runtime_error(msg.str());
   }
-  buffer[size] = 0;
-  std::string ret = buffer;
-  delete[] buffer;
+  else
+  {
+    buffer[size] = 0;
+    std::string ret = buffer.get();
 
-  return ret;
+    return ret;
+  }
 }
 
 Data::Data(const std::string& filename)
@@ -210,16 +216,16 @@
   }
 
   if (actions.empty())
-    {
-      std::ostringstream msg;
-      msg << "No action with name '" << name << "' defined";
-      throw std::runtime_error(msg.str());
-    }
+  {
+    std::ostringstream msg;
+    msg << "No action with name '" << name << "' defined";
+    throw std::runtime_error(msg.str());
+  }
   else
-    {
-      std::cout << "No action with name '" << name << "' defined" << std::endl;
-      return actions.front();
-    }
+  {
+    std::cout << "No action with name '" << name << "' defined" << std::endl;
+    return actions.front();
+  }
 }
 
 const Marker&

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-21 22:17:38 UTC (rev 3002)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-21 23:15:52 UTC (rev 3003)
@@ -18,12 +18,14 @@
 
 #include "sprite3d/sprite3d.hpp"
 
+#include <boost/scoped_array.hpp>
 #include <assert.h>
 #include <vector>
 #include <stdint.h>
 #include <sstream>
 #include <stdexcept>
 #include <physfs.h>
+
 #include "display/drawing_request.hpp"
 #include "display/scene_context.hpp"
 #include "app/globals.hpp"
@@ -335,14 +337,14 @@
   OpenGLState state;
 
   if (blend_sfactor != GL_ONE || blend_dfactor != GL_ZERO)
-    {
-      state.enable(GL_BLEND);
-      state.set_blend_func(blend_sfactor, blend_dfactor);
-    }
+  {
+    state.enable(GL_BLEND);
+    state.set_blend_func(blend_sfactor, blend_dfactor);
+  }
   else
-    {
-      state.enable(GL_DEPTH_TEST);
-    }
+  {
+    state.enable(GL_DEPTH_TEST);
+  }
 
   state.enable_client_state(GL_VERTEX_ARRAY);
   state.enable_client_state(GL_NORMAL_ARRAY);
@@ -354,53 +356,56 @@
   const ActionFrame& aframe2 = frame2.action->frames[frame2.frame];
   
   for(uint16_t m = 0; m < data->meshs.size(); ++m) 
-    {
-      const Mesh& mesh = data->meshs[m];
-      const MeshVertices& vertices1 = aframe1.meshs[m];
-      const MeshVertices& vertices2 = aframe2.meshs[m];
+  {
+    const Mesh& mesh = data->meshs[m];
+    const MeshVertices& vertices1 = aframe1.meshs[m];
+    const MeshVertices& vertices2 = aframe2.meshs[m];
 
-      // set texture
-      state.bind_texture(mesh.texture);
+    // set texture
+    state.bind_texture(mesh.texture);
 
-      // blend between frame1 + frame2
-      float* verts = new float[mesh.vertex_count * 3];
-      if(frame1.rot == frame2.rot) {
-        for(uint16_t v = 0; v < mesh.vertex_count*3; ++v) {
-          float v1 = vertices1.vertices[v];
-          float v2 = vertices2.vertices[v];
-          verts[v] = interpolate(v1, v2, blend_time);
-        }
-      } else {
-        // need to manually rotate 180 degree here because frames have different
-        // rot values (=> x=-x, y=y, z=-z)
-        for(uint16_t v = 0; v < mesh.vertex_count*3; ) {
-          // X coord
-          float v1 = vertices1.vertices[v];
-          float v2 = -vertices2.vertices[v];
-          verts[v++] = interpolate(v1, v2, blend_time);
-          // Y coord
-          v1 = vertices1.vertices[v];
-          v2 = vertices2.vertices[v];
-          verts[v++] = interpolate(v1, v2, blend_time);
-          // Z coord
-          v1 = vertices1.vertices[v];
-          v2 = -vertices2.vertices[v];                            
-          verts[v++] = interpolate(v1, v2, blend_time);          
-        }
+    // blend between frame1 + frame2
+    boost::scoped_array<float> verts(new float[mesh.vertex_count * 3]);
+    if(frame1.rot == frame2.rot) 
+    {
+      for(uint16_t v = 0; v < mesh.vertex_count*3; ++v) 
+      {
+        float v1 = vertices1.vertices[v];
+        float v2 = vertices2.vertices[v];
+        verts[v] = interpolate(v1, v2, blend_time);
       }
+    } 
+    else 
+    {
+      // need to manually rotate 180 degree here because frames have different
+      // rot values (=> x=-x, y=y, z=-z)
+      for(uint16_t v = 0; v < mesh.vertex_count*3; ) 
+      {
+        // X coord
+        float v1 = vertices1.vertices[v];
+        float v2 = -vertices2.vertices[v];
+        verts[v++] = interpolate(v1, v2, blend_time);
+        // Y coord
+        v1 = vertices1.vertices[v];
+        v2 = vertices2.vertices[v];
+        verts[v++] = interpolate(v1, v2, blend_time);
+        // Z coord
+        v1 = vertices1.vertices[v];
+        v2 = -vertices2.vertices[v];                            
+        verts[v++] = interpolate(v1, v2, blend_time);          
+      }
+    }
 
-      state.activate();
+    state.activate();
 
-      // draw mesh
-      glVertexPointer(3, GL_FLOAT, 0, verts);
-      glNormalPointer(GL_FLOAT, 0, &*mesh.normals.begin());
-      glTexCoordPointer(2, GL_FLOAT, 0, &*mesh.tex_coords.begin());
-      glDrawElements(GL_TRIANGLES, mesh.triangle_count * 3, GL_UNSIGNED_SHORT,
-                     &*mesh.vertex_indices.begin());
+    // draw mesh
+    glVertexPointer(3, GL_FLOAT, 0, verts.get());
+    glNormalPointer(GL_FLOAT, 0, &*mesh.normals.begin());
+    glTexCoordPointer(2, GL_FLOAT, 0, &*mesh.tex_coords.begin());
+    glDrawElements(GL_TRIANGLES, mesh.triangle_count * 3, GL_UNSIGNED_SHORT,
+                   &*mesh.vertex_indices.begin());
+  }
 
-      delete[] verts;
-    }
-
   assert_gl("rendering 3d sprite");      
 
   glPopMatrix();



From grumbel at mail.berlios.de  Sat Aug 22 16:51:20 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 16:51:20 +0200
Subject: [Windstille-commit] r3004 - in trunk/windstille/src: display
	objects screen sprite3d util
Message-ID: <200908221451.n7MEpKuj003647@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 16:51:18 +0200 (Sat, 22 Aug 2009)
New Revision: 3004

Modified:
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/grenade.cpp
   trunk/windstille/src/objects/pistol.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/test_object.cpp
   trunk/windstille/src/objects/vrdummy.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/data.hpp
   trunk/windstille/src/sprite3d/manager.cpp
   trunk/windstille/src/sprite3d/manager.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/sprite3d/sprite3d.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
   trunk/windstille/src/util/pathname.cpp
   trunk/windstille/src/util/pathname.hpp
Log:
Integrated Pathname() some more

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -107,6 +107,7 @@
 
   /** Return the area of the screen that will be visible*/
   Rectf get_clip_rect();
+
 private:
   DrawingContext (const DrawingContext&);
   DrawingContext& operator= (const DrawingContext&);

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/objects/character.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -44,7 +44,7 @@
   props.get("sprite3d", sprite3d_filename);
   props.get("action", action_name);
   
-  sprite = Sprite3D(sprite3d_filename);
+  sprite = Sprite3D(Pathname(sprite3d_filename));
 
   if (!action_name.empty())
     sprite.set_action(action_name);

Modified: trunk/windstille/src/objects/grenade.cpp
===================================================================
--- trunk/windstille/src/objects/grenade.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/objects/grenade.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -21,7 +21,7 @@
 #include "grenade.hpp"
 
 Grenade::Grenade()
-  : sprite("models/objects/grenade/grenade.wsprite"), 
+  : sprite(Pathname("models/objects/grenade/grenade.wsprite")), 
     physics(this)
 {
   c_object.reset(new CollisionObject(this, Rectf(0, 0, 32, 32)));

Modified: trunk/windstille/src/objects/pistol.cpp
===================================================================
--- trunk/windstille/src/objects/pistol.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/objects/pistol.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -23,7 +23,7 @@
   : laser_pointer(0)
 {
   laser_pointer = new LaserPointer();
-  sprite = Sprite3D("models/objects/pistol/pistol.wsprite");
+  sprite = Sprite3D(Pathname("models/objects/pistol/pistol.wsprite"));
 }
 
 Pistol::~Pistol()

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/objects/player.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -50,7 +50,7 @@
 {
   current_ = this;
 
-  sprite = Sprite3D("models/characters/jane/jane.wsprite");
+  sprite = Sprite3D(Pathname("models/characters/jane/jane.wsprite"));
   pos.x = 320;
   pos.y = 200;
   name = "player";

Modified: trunk/windstille/src/objects/test_object.cpp
===================================================================
--- trunk/windstille/src/objects/test_object.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/objects/test_object.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -33,7 +33,7 @@
   
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in TestObject");
-  sprite = Sprite3D(spritename);
+  sprite = Sprite3D(Pathname(spritename));
 }
 
 TestObject::~TestObject()
@@ -69,7 +69,7 @@
 TestObject::set_sprite(const std::string& filename)
 {
   try {
-    sprite = Sprite3D(filename);
+    sprite = Sprite3D(Pathname(filename));
   } catch(std::exception& e) {
     std::cerr << "Couldn't change sprite to '" << filename << "': " 
               << e.what() << "\n";
@@ -104,7 +104,7 @@
                    const std::string& attachement_point)
 {
   AttachedSprite asprite;
-  asprite.sprite = Sprite3D(spritename);
+  asprite.sprite = Sprite3D(Pathname(spritename));
   asprite.attachpoint = sprite.get_attachment_point_id(attachement_point);
   attached_sprites.push_back(asprite);
 }

Modified: trunk/windstille/src/objects/vrdummy.cpp
===================================================================
--- trunk/windstille/src/objects/vrdummy.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/objects/vrdummy.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -24,7 +24,7 @@
   props.get("name", name);
   props.get("pos",  pos);
     
-  sprite = Sprite3D("models/characters/vrdummy/vrdummy.wsprite");
+  sprite = Sprite3D(Pathname("models/characters/vrdummy/vrdummy.wsprite"));
   rotation = 0;
 
   highlight = Sprite("images/hedgehog_highlight.sprite");

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -31,7 +31,7 @@
 {
   current_action = 0;
 
-  sprite = Sprite3D("models/characters/jane/jane.wsprite");
+  sprite = Sprite3D(Pathname("models/characters/jane/jane.wsprite"));
   actions = sprite.get_actions();
 
   sprite.set_action(actions[current_action]);
@@ -48,7 +48,7 @@
 void
 Sprite3DView::set_model(const std::string& filename)
 {
-  sprite  = Sprite3D(filename);
+  sprite  = Sprite3D(Pathname(filename));
   actions = sprite.get_actions();
 }
 

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -26,6 +26,7 @@
 #include <stdexcept>
 
 #include "util/util.hpp"
+#include "util/pathname.hpp"
 #include "app/globals.hpp"
 #include "display/texture_manager.hpp"
 #include "display/texture.hpp"
@@ -82,9 +83,9 @@
   }
 }
 
-Data::Data(const std::string& filename)
+Data::Data(const Pathname& filename)
 {
-  PHYSFS_file* file = PHYSFS_openRead(filename.c_str());
+  PHYSFS_file* file = PHYSFS_openRead(filename.get_physfs_path().c_str());
   if(!file) {
     std::ostringstream msg;
     msg << "Couldn't open '" << filename << "': "
@@ -116,7 +117,7 @@
       Mesh& mesh = *i;
 
       std::string texturename = read_string(file, 64);
-      texturename = dirname(filename) + basename(texturename);
+      texturename = dirname(filename.get_physfs_path()) + basename(texturename);
       mesh.triangle_count = read_uint16_t(file);
       mesh.vertex_count   = read_uint16_t(file);
 

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -28,6 +28,8 @@
 #include "math/vector3.hpp"
 #include "math/quaternion.hpp"
 
+class Pathname;
+
 namespace sprite3d
 {
 
@@ -45,7 +47,7 @@
 class Data
 {
 public:
-  Data(const std::string& filename);
+  Data(const Pathname& filename);
   ~Data();
 
   const Action& get_action(const std::string& name) const;

Modified: trunk/windstille/src/sprite3d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/sprite3d/manager.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -17,6 +17,7 @@
 */
 
 #include "sprite3d/manager.hpp"
+
 #include "sprite3d/data.hpp"
 #include "sprite3d/sprite3d.hpp"
 
@@ -37,7 +38,7 @@
 }
 
 Data*
-Manager::create_data(const std::string& filename)
+Manager::create_data(const Pathname& filename)
 {
   Datas::iterator i = datas.find(filename);
   if(i != datas.end())

Modified: trunk/windstille/src/sprite3d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.hpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/sprite3d/manager.hpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -22,6 +22,8 @@
 #include <string>
 #include <map>
 
+#include "util/pathname.hpp"
+
 namespace sprite3d {
 
 class Data;
@@ -37,10 +39,10 @@
   Manager();
   ~Manager();
 
-  Data* create_data(const std::string& filename);
+  Data* create_data(const Pathname& filename);
     
 private:
-  typedef std::map<std::string, Data*> Datas;
+  typedef std::map<Pathname, Data*> Datas;
   Datas datas;
 };
 

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -42,7 +42,7 @@
 {
 }
 
-Sprite3D::Sprite3D(const std::string& filename)
+Sprite3D::Sprite3D(const Pathname& filename)
   : data(sprite3d::Manager::current()->create_data(filename)),
     actions_switched(false)
 {

Modified: trunk/windstille/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -47,7 +47,7 @@
   typedef uint16_t PointID;
 
   Sprite3D();
-  Sprite3D(const std::string& filename);
+  Sprite3D(const Pathname& filename);
   ~Sprite3D();
 
   /**

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -16,12 +16,22 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "file_reader.hpp"
+
+#include <fstream>
+
 #include "lisp/parser.hpp"
 #include "sexpr_file_reader.hpp"
-#include "file_reader.hpp"
 #include "file_reader_impl.hpp"
 
 FileReader
+FileReader::parse(const Pathname& filename)
+{
+  std::ifstream in(filename.get_sys_path().c_str());
+  return FileReader::parse(in, filename.get_sys_path());
+}
+
+FileReader
 FileReader::parse(std::istream& stream, const std::string& filename)
 {
   lisp::Lisp* root = lisp::Parser::parse(stream, filename);

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/util/file_reader.hpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -21,8 +21,10 @@
 
 #include <string>
 #include <vector>
-#include "getter.hpp"
 #include <boost/shared_ptr.hpp>
+
+#include "util/pathname.hpp"
+#include "util/getter.hpp"
 
 class FileReaderImpl;
 
@@ -31,6 +33,7 @@
 class FileReader
 {
 public:
+  static FileReader parse(const Pathname& filename);
   static FileReader parse(const std::string& filename);
   static FileReader parse(std::istream& stream, const std::string& filename);
 

Modified: trunk/windstille/src/util/pathname.cpp
===================================================================
--- trunk/windstille/src/util/pathname.cpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/util/pathname.cpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -20,6 +20,7 @@
 
 #include <assert.h>
 #include <iostream>
+#include <sstream>
 #include <boost/filesystem.hpp>
 
 std::string Pathname::s_datadir;
@@ -105,6 +106,32 @@
 }
 
 std::string
+Pathname::get_physfs_path() const
+{
+  switch(m_type)
+  {
+    case kSysPath: 
+    {
+      std::ostringstream str;
+      str << "Can't convert " << *this << " to PhysFS path";
+      throw std::runtime_error(str.str()); 
+      return "";
+    }
+          
+    case kUserPath:
+    case kDataPath:
+      return m_path;
+
+    case kEmpty:
+      return "";
+
+    default:
+      assert(!"Never reached");
+      return std::string();
+  }
+}
+
+std::string
 Pathname::get_sys_path() const
 {
   switch(m_type)
@@ -142,6 +169,14 @@
   }
 }
 
+bool
+Pathname::operator<(const Pathname& rhs) const
+{
+  return 
+    m_path < rhs.m_path ||
+    m_type < rhs.m_type;
+}
+
 std::ostream& operator<<(std::ostream& s, const Pathname& path)
 {
   switch(path.get_type())

Modified: trunk/windstille/src/util/pathname.hpp
===================================================================
--- trunk/windstille/src/util/pathname.hpp	2009-08-21 23:15:52 UTC (rev 3003)
+++ trunk/windstille/src/util/pathname.hpp	2009-08-22 14:51:18 UTC (rev 3004)
@@ -103,12 +103,16 @@
    */
   std::string get_sys_path() const;
 
+  std::string get_physfs_path() const;
+
   /** Returns the relative unprocessed path */
   std::string get_raw_path() const { return m_path; }
 
   /** Returns the type of this Pathname */
   PathType    get_type()    const { return m_type; }
 
+  bool operator<(const Pathname& rhs) const;
+
 private:
   std::string m_path;
   PathType    m_type;



From grumbel at mail.berlios.de  Sat Aug 22 17:03:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 17:03:43 +0200
Subject: [Windstille-commit] r3005 - in trunk/windstille/src: app engine
	screen scripting
Message-ID: <200908221503.n7MF3hhk006056@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 17:03:41 +0200 (Sat, 22 Aug 2009)
New Revision: 3005

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/game_session.hpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Integrated Pathname() some more

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/app/console.cpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -16,15 +16,18 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "app/console.hpp"
+
 #include <assert.h>
+
+#include "util/pathname.hpp"
+#include "display/display.hpp"
+#include "engine/script_manager.hpp"
+#include "font/fonts.hpp"
+#include "input/input_manager.hpp"
 #include "math/rect.hpp"
-#include "font/fonts.hpp"
 #include "screen/game_session.hpp"
-#include "input/input_manager.hpp"
-#include "engine/script_manager.hpp"
-#include "display/display.hpp"
 #include "scripting/util.hpp"
-#include "console.hpp"
 
 Console console;
 
@@ -444,7 +447,7 @@
     }
   else if (command_line == "reset")
     {
-      GameSession::current()->set_sector("levels/newformat2.wst");
+      GameSession::current()->set_sector(Pathname("levels/newformat2.wst"));
     }
   else if (command_line == "show")
     {

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -209,18 +209,18 @@
 {
   gui::Menu menu("Select Scenario", create_centered_rect(500, 340));
 
-  std::vector<std::string> scenarios;
-  scenarios.push_back("sectors/apartment/apartment.wst");
-  scenarios.push_back("sectors/bluestone/bluestone.wst");
-  scenarios.push_back("sectors/forest/forest.wst");
-  scenarios.push_back("sectors/industrial/industrial.wst");
-  scenarios.push_back("sectors/intro/intro.wst");
-  scenarios.push_back("sectors/newformat2/newformat2.wst");
-  scenarios.push_back("sectors/virtualreality/virtualreality.wst");
+  std::vector<Pathname> scenarios;
+  scenarios.push_back(Pathname("sectors/apartment/apartment.wst"));
+  scenarios.push_back(Pathname("sectors/bluestone/bluestone.wst"));
+  scenarios.push_back(Pathname("sectors/forest/forest.wst"));
+  scenarios.push_back(Pathname("sectors/industrial/industrial.wst"));
+  scenarios.push_back(Pathname("sectors/intro/intro.wst"));
+  scenarios.push_back(Pathname("sectors/newformat2/newformat2.wst"));
+  scenarios.push_back(Pathname("sectors/virtualreality/virtualreality.wst"));
   
-  for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
+  for(std::vector<Pathname>::const_iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {
-      menu.add_button(*i, boost::bind(&MenuManager::menu_start_scenario, *i));
+      menu.add_button(i->get_raw_path(), boost::bind(&MenuManager::menu_start_scenario, *i));
     }
 
   menu.show();
@@ -385,7 +385,7 @@
 // Callbacks
 
 void
-MenuManager::menu_show_model(std::string model)
+MenuManager::menu_show_model(const std::string& model)
 {
   std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
@@ -397,7 +397,7 @@
 }
 
 void
-MenuManager::menu_show_particle_system(std::string file)
+MenuManager::menu_show_particle_system(const std::string& file)
 {
   std::auto_ptr<ParticleViewer> particle_viewer(new ParticleViewer());
   particle_viewer->load(file);
@@ -409,7 +409,7 @@
 void
 MenuManager::menu_start_game()
 {
-  screen_manager.push_screen(new GameSession("levels/newformat2.wst"));
+  screen_manager.push_screen(new GameSession(Pathname("levels/newformat2.wst")));
   screen_manager.pop_overlay();
 }
 
@@ -422,7 +422,7 @@
 }
 
 void
-MenuManager::menu_start_scenario(std::string scenario)
+MenuManager::menu_start_scenario(const Pathname& scenario)
 {
   std::cout << "Starting: " << scenario << std::endl;
   screen_manager.push_screen(new GameSession(scenario));

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -20,7 +20,10 @@
 #define HEADER_WINDSTILLE_APP_MENU_MANAGER_HPP
 
 #include <vector>
+
 #include "math/rect.hpp"
+
+class Pathname;
 
 /** 
  *  The MenuManager creates and displays the metagame menus (main,
@@ -65,12 +68,12 @@
   static void menu_music_volume(int i);
 
   static void menu_ambient_light(int i, int component);
-  static void menu_start_scenario(std::string scenario);
-  static void menu_show_model(std::string scenario);
+  static void menu_start_scenario(const Pathname& scenario);
+  static void menu_show_model(const std::string& scenario);
   static void menu_show_geometry_test();
   static void menu_show_armature_test();
   static void menu_show_navigation_test();
-  static void menu_show_particle_system(std::string file);
+  static void menu_show_particle_system(const std::string& file);
   static void menu_gamma(int i);
   static void menu_wiimote();
 };

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -162,7 +162,7 @@
     }
     else if (file_type == "windstille-sector")
     {
-      screen_manager.push_screen(new GameSession(levelfile));
+      screen_manager.push_screen(new GameSession(Pathname(levelfile)));
     }
     else
     {

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -53,7 +53,7 @@
 
 Sector* Sector::current_ = 0;
 
-Sector::Sector(const std::string& arg_filename)
+Sector::Sector(const Pathname& arg_filename)
   : filename(arg_filename),
     player(0)    
 { 
@@ -86,7 +86,7 @@
 }
 
 void
-Sector::parse_file(const std::string& filename)
+Sector::parse_file(const Pathname& filename)
 {
   if (debug) std::cout << "Sector:parse_file '" << filename << "'" << std::endl;
   
@@ -300,7 +300,7 @@
   return ambient_light;
 }
 
-std::string
+Pathname
 Sector::get_filename () const
 {
   return filename;
@@ -310,7 +310,7 @@
 Sector::get_directory() const
 {
   // FIXME: Not pretty
-  std::string directory = filename;
+  std::string directory = filename.get_sys_path();
   directory.erase(directory.rfind('/')+1);
   return directory;
 }

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -23,18 +23,20 @@
 #include <string>
 #include <vector>
 #include <boost/shared_ptr.hpp>
+
+#include "util/pathname.hpp"
 #include "display/color.hpp"
 
+class CollisionEngine;
+class Entity;
 class FileReader;
 class GameObject;
-class TileMap;
+class NavigationGraph;
 class Player;
 class SceneContext;
 class SpawnPoint;
-class CollisionEngine;
-class NavigationGraph;
-class Entity;
 class SquirrelThread;
+class TileMap;
 
 /** */
 class Sector
@@ -45,7 +47,7 @@
   static Sector* current() { return current_; }
   
 private:
-  std::string filename;
+  Pathname filename;
   std::string name;
   std::string music;
   std::string init_script;
@@ -69,16 +71,16 @@
 
   Player* player;
 
-  void parse_file(const std::string& filename);
+  void parse_file(const Pathname& filename);
 
   void commit_adds();
   void commit_removes();
 
 public:
-  Sector(const std::string& filename);
+  Sector(const Pathname& filename);
   ~Sector();
 
-  std::string get_filename() const;
+  Pathname get_filename() const;
   std::string get_directory() const;
 
   void draw(SceneContext& gc);

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -68,7 +68,7 @@
   std::auto_ptr<Sector> sector;
   View    view;
 
-  std::string filename;
+  Pathname filename;
 
   bool pause;
   
@@ -123,7 +123,7 @@
   void handle_event(const SDL_Event& event);
 };
 
-GameSession::GameSession(const std::string& arg_filename)
+GameSession::GameSession(const Pathname& arg_filename)
   : impl(new GameSessionImpl())
 {
   current_ = this;
@@ -323,7 +323,7 @@
 }
 
 void
-GameSession::change_sector(const std::string& arg_filename)
+GameSession::change_sector(const Pathname& arg_filename)
 {
   impl->filename = arg_filename;
  
@@ -342,7 +342,7 @@
 }
 
 void
-GameSession::set_sector(const std::string& )
+GameSession::set_sector(const Pathname& /* FIXME: huh? */)
 {
   impl->sector = std::auto_ptr<Sector>(new Sector(impl->filename));
  

Modified: trunk/windstille/src/screen/game_session.hpp
===================================================================
--- trunk/windstille/src/screen/game_session.hpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/screen/game_session.hpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -37,6 +37,7 @@
 class DialogManager;
 class Conversation;
 class Inventory;
+class Pathname;
 
 class GameSessionImpl;
 
@@ -50,7 +51,7 @@
 public:
   static GameSession* current() { return current_; }
 
-  GameSession(const std::string& arg_filename);
+  GameSession(const Pathname& arg_filename);
   virtual ~GameSession();
 
   View* get_view();
@@ -62,10 +63,10 @@
   void set_control_state(ControlState state);
 
   /** Switches the sector instantly without fadeout */
-  void set_sector(const std::string& filename);
+  void set_sector(const Pathname& filename);
 
   /** Fades out then switches sectors and fades in again */
-  void change_sector(const std::string& filename);
+  void change_sector(const Pathname& filename);
 
   /** Set the GameSession into a mode for cutscenes, this means for
       most part to switch into a 16:9 viewmode with black borders */

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-22 14:51:18 UTC (rev 3004)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-22 15:03:41 UTC (rev 3005)
@@ -45,7 +45,7 @@
 
 void set_sector(const std::string& filename)
 {
-  GameSession::current()->change_sector(filename);
+  GameSession::current()->change_sector(Pathname(filename));
 }
 
 void play_music(const std::string& musicfile)



From grumbel at mail.berlios.de  Sat Aug 22 17:27:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 17:27:22 +0200
Subject: [Windstille-commit] r3006 - in trunk/windstille/src: app editor
	engine hud objects screen sprite2d
Message-ID: <200908221527.n7MFRMAL008942@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 17:27:18 +0200 (Sat, 22 Aug 2009)
New Revision: 3006

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/editor/sprite_object_model.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/objects/bomb.cpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/elevator.cpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/objects/vrdummy.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/screen/sprite2dview.hpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/screen/sprite3dview.hpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite2d/data.hpp
   trunk/windstille/src/sprite2d/manager.cpp
   trunk/windstille/src/sprite2d/manager.hpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
Log:
Integrated Pathname() some more

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -165,23 +165,23 @@
 {
   gui::Menu menu("Select Model", create_centered_rect(550, 376));
   
-  std::vector<std::string> models;
-  models.push_back("models/characters/bob/bob.wsprite");
-  models.push_back("models/characters/jane/jane.wsprite");
-  models.push_back("models/characters/monster/monster.wsprite");
-  models.push_back("models/characters/powersuit/powersuit.wsprite");
-  models.push_back("models/characters/sophie/sophie.wsprite");
-  models.push_back("models/characters/spider/spider.wsprite");
-  models.push_back("models/characters/vrdummy/vrdummy.wsprite");
-  models.push_back("models/characters/yagor/yagor.wsprite");
-  models.push_back("models/objects/grenade/grenade.wsprite");
-  models.push_back("models/objects/pistol/pistol.wsprite");
-  models.push_back("models/vehicles/shuttle/shuttle.wsprite");
-  models.push_back("models/vehicles/train/train.wsprite"); 
+  std::vector<Pathname> models;
+  models.push_back(Pathname("models/characters/bob/bob.wsprite"));
+  models.push_back(Pathname("models/characters/jane/jane.wsprite"));
+  models.push_back(Pathname("models/characters/monster/monster.wsprite"));
+  models.push_back(Pathname("models/characters/powersuit/powersuit.wsprite"));
+  models.push_back(Pathname("models/characters/sophie/sophie.wsprite"));
+  models.push_back(Pathname("models/characters/spider/spider.wsprite"));
+  models.push_back(Pathname("models/characters/vrdummy/vrdummy.wsprite"));
+  models.push_back(Pathname("models/characters/yagor/yagor.wsprite"));
+  models.push_back(Pathname("models/objects/grenade/grenade.wsprite"));
+  models.push_back(Pathname("models/objects/pistol/pistol.wsprite"));
+  models.push_back(Pathname("models/vehicles/shuttle/shuttle.wsprite"));
+  models.push_back(Pathname("models/vehicles/train/train.wsprite")); 
 
-  for(std::vector<std::string>::iterator i = models.begin(); i != models.end(); ++i)
+  for(std::vector<Pathname>::const_iterator i = models.begin(); i != models.end(); ++i)
     {
-      menu.add_button(*i, boost::bind(&MenuManager::menu_show_model, std::string(*i)));
+      menu.add_button(i->get_raw_path(), boost::bind(&MenuManager::menu_show_model, *i));
     }
   
   menu.show();
@@ -192,14 +192,14 @@
 {
   gui::Menu menu("Particle Systems", create_centered_rect(400, 340));
 
-  std::vector<std::string> scenarios;
-  scenarios.push_back("particlesystems/fire.particles");
-  scenarios.push_back("particlesystems/water.particles");
+  std::vector<Pathname> scenarios;
+  scenarios.push_back(Pathname("particlesystems/fire.particles"));
+  scenarios.push_back(Pathname("particlesystems/water.particles"));
   
-  for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
-    {
-      menu.add_button(*i, boost::bind(&MenuManager::menu_show_particle_system, *i));
-    }
+  for(std::vector<Pathname>::const_iterator i = scenarios.begin(); i != scenarios.end(); ++i)
+  {
+    menu.add_button(i->get_raw_path(), boost::bind(&MenuManager::menu_show_particle_system, *i));
+  }
 
   menu.show();
 }
@@ -385,11 +385,11 @@
 // Callbacks
 
 void
-MenuManager::menu_show_model(const std::string& model)
+MenuManager::menu_show_model(const Pathname& filename)
 {
   std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
-  sprite3dview->set_model(model);
+  sprite3dview->set_model(filename);
 
   // Launching Sprite3DView instead of game
   screen_manager.push_screen(sprite3dview.release());
@@ -397,10 +397,10 @@
 }
 
 void
-MenuManager::menu_show_particle_system(const std::string& file)
+MenuManager::menu_show_particle_system(const Pathname& filename)
 {
   std::auto_ptr<ParticleViewer> particle_viewer(new ParticleViewer());
-  particle_viewer->load(file);
+  particle_viewer->load(filename);
 
   screen_manager.push_screen(particle_viewer.release());
   screen_manager.clear_overlay();

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -68,12 +68,12 @@
   static void menu_music_volume(int i);
 
   static void menu_ambient_light(int i, int component);
-  static void menu_start_scenario(const Pathname& scenario);
-  static void menu_show_model(const std::string& scenario);
+  static void menu_start_scenario(const Pathname& filename);
+  static void menu_show_model(const Pathname& filename);
   static void menu_show_geometry_test();
   static void menu_show_armature_test();
   static void menu_show_navigation_test();
-  static void menu_show_particle_system(const std::string& file);
+  static void menu_show_particle_system(const Pathname& filename);
   static void menu_gamma(int i);
   static void menu_wiimote();
 };

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -118,27 +118,24 @@
 
 void
 WindstilleMain::run()
-{
-  if (debug) 
-    std::cout << "Starting file: '" << config.get_string("levelfile") << "'" << std::endl;
-    
+{  
   if (config.get<std::string>("levelfile").is_set())
   {
-    // FIXME: Looks a little hacky, doesn't it?
-    std::string leveldir = dirname(config.get_string("levelfile"));
-    PHYSFS_addToSearchPath(leveldir.c_str(), true);
-    std::string levelfile = basename(config.get_string("levelfile"));
+    Pathname filename(config.get_string("levelfile"), Pathname::kSysPath);
 
+    if (debug) 
+      std::cout << "Starting file: " << filename << std::endl;
+
     // FIXME: file-type "detection" is pretty basic, only works
     // with s-expr and nothing else
-    std::string file_type = FileReader::parse(levelfile).get_name();
+    std::string file_type = FileReader::parse(filename).get_name();
 
     if (file_type == "sprite3d") // FIXME: sprite3d isn't actually a sexpr file
     {
       std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
-      if (!levelfile.empty())
-        sprite3dview->set_model(levelfile);
+      if (!filename.empty())
+        sprite3dview->set_model(filename);
 
       // Launching Sprite3DView instead of game
       screen_manager.push_screen(sprite3dview.release());
@@ -147,8 +144,8 @@
     {
       std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
 
-      if (!levelfile.empty())
-        sprite2dview->set_sprite(levelfile);
+      if (!filename.empty())
+        sprite2dview->set_sprite(filename);
 
       // Launching Sprite2DView instead of game
       screen_manager.push_screen(sprite2dview.release());
@@ -156,13 +153,13 @@
     else if (file_type == "particle-systems")
     {
       ParticleViewer* particle_viewer = new ParticleViewer();
-      if (!levelfile.empty())
-        particle_viewer->load(levelfile);
+      if (!filename.empty())
+        particle_viewer->load(filename);
       screen_manager.push_screen(particle_viewer);
     }
     else if (file_type == "windstille-sector")
     {
-      screen_manager.push_screen(new GameSession(Pathname(levelfile)));
+      screen_manager.push_screen(new GameSession(filename));
     }
     else
     {

Modified: trunk/windstille/src/editor/sprite_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/editor/sprite_object_model.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "util/pathname.hpp"
 #include "display/scene_context.hpp"
 #include "sprite_object_model.hpp"
 
@@ -23,7 +24,7 @@
                                      const std::string& path_)
   : ObjectModel(name_, rel_pos_),
     path(path_),
-    sprite(path_)
+    sprite(Pathname(path_))
 {
 }
 

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -310,7 +310,7 @@
 Sector::get_directory() const
 {
   // FIXME: Not pretty
-  std::string directory = filename.get_sys_path();
+  std::string directory = filename.get_physfs_path();
   directory.erase(directory.rfind('/')+1);
   return directory;
 }

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -16,15 +16,18 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "hud/dialog_manager.hpp"
+
 #include <iostream>
+
 #include "font/fonts.hpp"
 #include "screen/game_session.hpp"
 #include "input/controller.hpp"
 #include "input/input_manager.hpp"
-#include "dialog_manager.hpp"
 #include "engine/script_manager.hpp"
 #include "display/text_area.hpp"
 #include "display/display.hpp"
+#include "util/pathname.hpp"
 #include "app/config.hpp"
 
 DialogManager* DialogManager::current_ = 0;
@@ -43,7 +46,7 @@
 { 
   delay     = 0.0;
   alignment = alignment_;
-  portrait  = Sprite(portrait_);
+  portrait  = Sprite(Pathname(portrait_));
   portrait.set_scale(0.65f);
   text      = text_;
   caption = false;

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -16,14 +16,17 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "hud/inventory.hpp"
+
 #include <iostream>
 #include <vector>
+
+#include "font/fonts.hpp"
+#include "input/controller.hpp"
+#include "input/input_manager.hpp"
 #include "screen/game_session.hpp"
 #include "sprite2d/sprite.hpp"
-#include "font/fonts.hpp"
-#include "input/input_manager.hpp"
-#include "input/controller.hpp"
-#include "inventory.hpp"
+#include "util/pathname.hpp"
 
 class InventoryItem
 {
@@ -32,7 +35,7 @@
   Sprite sprite;
   
   InventoryItem(const std::string& name, const std::string& filename)
-    : name(name), sprite(filename)
+    : name(name), sprite(Pathname(filename))
   {
   }
 };
@@ -69,8 +72,8 @@
 Inventory::Inventory()
   : impl(new InventoryImpl())
 {
-  impl->slot = Sprite("images/inventory/slot.sprite");
-  impl->slothighlight = Sprite("images/inventory/slothighlight.sprite");
+  impl->slot = Sprite(Pathname("images/inventory/slot.sprite"));
+  impl->slothighlight = Sprite(Pathname("images/inventory/slothighlight.sprite"));
   impl->moving = false;
   impl->add_angle = 0.0f;
   impl->current_item = 0;

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/hud/pda.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -41,7 +41,7 @@
     state(PDA_OBJECTIVES),
     old_state(PDA_NONE)
 { 
-  background = Sprite("images/pda/pda.sprite");
+  background = Sprite(Pathname("images/pda/pda.sprite"));
 
   ui_area.reset(new TextArea(Rectf(pos + Vector2f(40.0f, 50.0f), 
                                    Sizef(315.0f, 435.0f)).grow(-12.0f), false));

Modified: trunk/windstille/src/objects/bomb.cpp
===================================================================
--- trunk/windstille/src/objects/bomb.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/bomb.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -21,11 +21,11 @@
 #include "bomb.hpp"
 
 Bomb::Bomb(int x, int y)
-  : sprite("images/bomb.sprite"),
-    explo("images/explo.sprite"),
-    light("images/bomblight.sprite"),
-    highlight("images/bombhighlight.sprite"),
-    explolight("images/explolight.sprite"),
+  : sprite(Pathname("images/bomb.sprite")),
+    explo(Pathname("images/explo.sprite")),
+    light(Pathname("images/bomblight.sprite")),
+    highlight(Pathname("images/bombhighlight.sprite")),
+    explolight(Pathname("images/explolight.sprite")),
     pos(x, int(y/TILE_SIZE+1)*TILE_SIZE),
     count(2.0f),
     state(COUNTDOWN),

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/box.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -45,7 +45,7 @@
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in Box");
   
-  sprite = Sprite(spritename);
+  sprite = Sprite(Pathname(spritename));
   
   colobj = new CollisionObject(this, Rectf(0, 0, width, height));
   colobj->set_velocity(vel);

Modified: trunk/windstille/src/objects/elevator.cpp
===================================================================
--- trunk/windstille/src/objects/elevator.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/elevator.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -33,7 +33,7 @@
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in Elevator");
 
-  sprite = Sprite(spritename);
+  sprite = Sprite(Pathname(spritename));
   size  = Size(128, 64);
   colobject = new CollisionObject(this, Rectf(Vector2f(0,0), size));
   Sector::current()->get_collision_engine()->add(colobject);

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -22,10 +22,10 @@
 #include "hedgehog.hpp"
 
 Hedgehog::Hedgehog(FileReader& props)
-  : sprite("images/hedgehog.sprite"),
-    die_sprite("images/hedgehog_die1.sprite"),
-    light("images/hedgehog_light.sprite"),
-    highlight("images/hedgehog_highlight.sprite")
+  : sprite(Pathname("images/hedgehog.sprite")),
+    die_sprite(Pathname("images/hedgehog_die1.sprite")),
+    light(Pathname("images/hedgehog_light.sprite")),
+    highlight(Pathname("images/hedgehog_highlight.sprite"))
 {
   props.get("name", name);
   props.get("pos",  pos);

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -26,8 +26,8 @@
 LaserPointer::LaserPointer()
 {
   noise = Texture("images/noise2.png");
-  laserpointer = Sprite("images/laserpointer.sprite");
-  laserpointer_light = Sprite("images/laserpointer_light.sprite");
+  laserpointer = Sprite(Pathname("images/laserpointer.sprite"));
+  laserpointer_light = Sprite(Pathname("images/laserpointer_light.sprite"));
   laserpointer_light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   noise.set_wrap(GL_REPEAT);
   noise.set_filter(GL_LINEAR);

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -25,7 +25,7 @@
 #include "nightvision.hpp"
 
 Nightvision::Nightvision(FileReader& /*props*/)
-  : nightvision("images/nightvision.sprite")
+  : nightvision(Pathname("images/nightvision.sprite"))
 {
   name = "nightvision";
   noise = Texture("images/noise.png");

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -48,17 +48,17 @@
     set_useable(true);
   
   if(spritename != "")
-    sprite = Sprite(spritename);
+    sprite = Sprite(Pathname(spritename));
   
   if (highlightname != "")
     {
-      highlight = Sprite(highlightname);
+      highlight = Sprite(Pathname(highlightname));
       highlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
     }
 
   if (lightname != "")
     {
-      light = Sprite(lightname);
+      light = Sprite(Pathname(lightname));
       light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
     }
     

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -21,13 +21,13 @@
 #include "sprite2d/manager.hpp"
 
 SpiderMine::SpiderMine(FileReader& props)
-  : explode("images/explosion.sprite"),
-    explode_light("images/explolight.sprite")
+  : explode(Pathname("images/explosion.sprite")),
+    explode_light(Pathname("images/explolight.sprite"))
 {
   props.get("name", name);
   props.get("pos",  pos);
     
-  sprite = Sprite("images/spider_mine.sprite");
+  sprite = Sprite(Pathname("images/spider_mine.sprite"));
   //sprite.set_scale(.5, .5);
   initial_position = pos;
   walk_speed = 160;

Modified: trunk/windstille/src/objects/vrdummy.cpp
===================================================================
--- trunk/windstille/src/objects/vrdummy.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/objects/vrdummy.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -27,7 +27,7 @@
   sprite = Sprite3D(Pathname("models/characters/vrdummy/vrdummy.wsprite"));
   rotation = 0;
 
-  highlight = Sprite("images/hedgehog_highlight.sprite");
+  highlight = Sprite(Pathname("images/hedgehog_highlight.sprite"));
   highlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   
   jump_time = 0;

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -37,7 +37,7 @@
 
 ParticleViewer::ParticleViewer()
 {
-  background = Sprite("images/greychess.sprite");
+  background = Sprite(Pathname("images/greychess.sprite"));
 }
 
 ParticleViewer::~ParticleViewer()
@@ -45,7 +45,7 @@
 }
 
 void
-ParticleViewer::load(const std::string& filename)
+ParticleViewer::load(const Pathname& filename)
 {
   std::cout << "ParticleViewer: loading " << filename << std::endl;
 

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -51,7 +51,7 @@
   
   void draw();
   void update(float delta, const Controller& controller);
-  void load(const std::string& filename);
+  void load(const Pathname& filename);
 
 private:
   ParticleViewer (const ParticleViewer&);

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -251,7 +251,7 @@
 
       do {
         try {
-          new_sprite = Sprite(dir[index]);
+          new_sprite = Sprite(Pathname(dir[index]));
           retry = false;
         } catch(std::exception& e) {
           // FIXME: won't work in combination with shuffle
@@ -389,7 +389,7 @@
 }
 
 void
-Sprite2DView::set_sprite(const std::string& filename)
+Sprite2DView::set_sprite(const Pathname& filename)
 {
   sprite = Sprite(filename);
   ignore_delta = true;

Modified: trunk/windstille/src/screen/sprite2dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/sprite2dview.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -77,7 +77,7 @@
   void next_image(int i = 1);
   void prev_image(int i = 1) { next_image(-i); }
 
-  void set_sprite(const std::string& filename);
+  void set_sprite(const Pathname& filename);
   void prepare_sprite(Sprite& sprite);
 
 private:

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -46,9 +46,9 @@
 }
 
 void
-Sprite3DView::set_model(const std::string& filename)
+Sprite3DView::set_model(const Pathname& filename)
 {
-  sprite  = Sprite3D(Pathname(filename));
+  sprite  = Sprite3D(filename);
   actions = sprite.get_actions();
 }
 

Modified: trunk/windstille/src/screen/sprite3dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/sprite3dview.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -45,7 +45,7 @@
   void draw();
   void update(float delta, const Controller& controller);
 
-  void set_model(const std::string& filename);
+  void set_model(const Pathname& filename);
   
   void handle_event(const SDL_Event& );
 

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -16,14 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "screen/title_screen.hpp"
+
 #include <iostream>
+
 #include "display/display.hpp"
 #include "app/menu_manager.hpp"
-#include "title_screen.hpp"
 
 TitleScreen::TitleScreen()
 {
-  background = Sprite("images/titlescreen.sprite");
+  background = Sprite(Pathname("images/titlescreen.sprite"));
   background.set_scale(std::max(float(Display::get_width())  / background.get_width(),
                                 float(Display::get_height()) / background.get_height()));
 }

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -28,9 +28,10 @@
 #include "display/surface.hpp"
 #include "display/surface_manager.hpp"
 
-SpriteData::SpriteData(const std::string& filename)
+SpriteData::SpriteData(const Pathname& pathname)
 {
-  if (PHYSFS_exists(filename.c_str()))
+  std::string filename = pathname.get_physfs_path();
+  if (pathname.exists())
     {
       if (has_suffix(filename, ".sprite"))
         {

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -47,7 +47,7 @@
   SpriteAction* parse_action(const std::string& dir, FileReader& reader);
 
 public:
-  SpriteData(const std::string& filename);
+  SpriteData(const Pathname& filename);
   virtual ~SpriteData();
 
   typedef std::vector<SpriteAction*> Actions;

Modified: trunk/windstille/src/sprite2d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/sprite2d/manager.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -22,6 +22,7 @@
 #include <iostream>
 #include <assert.h>
 
+#include "util/pathname.hpp"
 #include "sprite2d/data.hpp"
 #include "sprite2d/sprite.hpp"
 
@@ -38,7 +39,7 @@
 }
 
 SpriteDataPtr
-SpriteManager::create_data(const std::string& filename)
+SpriteManager::create_data(const Pathname& filename)
 {
   Datas::iterator i = datas.find(filename);
   if(i != datas.end())

Modified: trunk/windstille/src/sprite2d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/sprite2d/manager.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -24,7 +24,9 @@
 #include <map>
 #include <boost/shared_ptr.hpp>
 
+class Pathname;
 class SpriteData;
+
 typedef boost::shared_ptr<SpriteData> SpriteDataPtr;
 
 class SpriteManager
@@ -38,12 +40,12 @@
   SpriteManager();
   ~SpriteManager();
 
-  SpriteDataPtr create_data(const std::string& filename);
+  SpriteDataPtr create_data(const Pathname& filename);
   
   /** Removes all cached Sprites that are no longer in use */
   void cleanup();
 private:
-  typedef std::map<std::string, SpriteDataPtr> Datas;
+  typedef std::map<Pathname, SpriteDataPtr> Datas;
   Datas datas;
 };
 

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -33,7 +33,7 @@
 {  
 }
 
-Sprite::Sprite(const std::string& filename)
+Sprite::Sprite(const Pathname& filename)
 {
   data = SpriteManager::current()->create_data(filename);
 

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-22 15:03:41 UTC (rev 3005)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-22 15:27:18 UTC (rev 3006)
@@ -23,6 +23,8 @@
 #include <string>
 #include <GL/glew.h>
 #include <GL/gl.h>
+
+#include "util/pathname.hpp"
 #include "display/color.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
@@ -60,7 +62,7 @@
   /** Load a sprite from file or in-case the .sprite file isn't found
       search for a .png with the same name and use that as a simple
       one-file sprite */
-  Sprite(const std::string& filename);
+  Sprite(const Pathname& filename);
   Sprite(const SpriteDataPtr data);
   ~Sprite();
 



From grumbel at mail.berlios.de  Sat Aug 22 20:40:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 20:40:13 +0200
Subject: [Windstille-commit] r3007 - trunk/windstille/src/util
Message-ID: <200908221840.n7MIeDox015419@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 20:40:13 +0200 (Sat, 22 Aug 2009)
New Revision: 3007

Modified:
   trunk/windstille/src/util/pathname.cpp
   trunk/windstille/src/util/pathname.hpp
Log:
Added Pathname::get_extension()

Modified: trunk/windstille/src/util/pathname.cpp
===================================================================
--- trunk/windstille/src/util/pathname.cpp	2009-08-22 15:27:18 UTC (rev 3006)
+++ trunk/windstille/src/util/pathname.cpp	2009-08-22 18:40:13 UTC (rev 3007)
@@ -169,6 +169,24 @@
   }
 }
 
+std::string
+Pathname::get_extension() const
+{
+  for(int i = m_path.size()-1; i >= 0; --i)
+  {
+    if (m_path[i] == '.')
+    {
+      return m_path.substr(i+1);
+    }
+    else if (m_path[i] == '/')
+    {
+      return std::string();
+    }
+  }
+
+  return std::string();
+}
+
 bool
 Pathname::operator<(const Pathname& rhs) const
 {

Modified: trunk/windstille/src/util/pathname.hpp
===================================================================
--- trunk/windstille/src/util/pathname.hpp	2009-08-22 15:27:18 UTC (rev 3006)
+++ trunk/windstille/src/util/pathname.hpp	2009-08-22 18:40:13 UTC (rev 3007)
@@ -111,6 +111,9 @@
   /** Returns the type of this Pathname */
   PathType    get_type()    const { return m_type; }
 
+  /** Returns the files extension ('png', 'jpg', 'sprite', etc.) */
+  std::string get_extension() const;
+
   bool operator<(const Pathname& rhs) const;
 
 private:



From grumbel at mail.berlios.de  Sat Aug 22 20:41:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 20:41:12 +0200
Subject: [Windstille-commit] r3008 - trunk/windstille/src/app
Message-ID: <200908221841.n7MIfCmE015510@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 20:41:12 +0200 (Sat, 22 Aug 2009)
New Revision: 3008

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Simply use file extension for type detection

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-22 18:40:13 UTC (rev 3007)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-22 18:41:12 UTC (rev 3008)
@@ -126,11 +126,9 @@
     if (debug) 
       std::cout << "Starting file: " << filename << std::endl;
 
-    // FIXME: file-type "detection" is pretty basic, only works
-    // with s-expr and nothing else
-    std::string file_type = FileReader::parse(filename).get_name();
+    const std::string file_type = filename.get_extension();
 
-    if (file_type == "sprite3d") // FIXME: sprite3d isn't actually a sexpr file
+    if (file_type == "wsprite")
     {
       std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
@@ -140,7 +138,7 @@
       // Launching Sprite3DView instead of game
       screen_manager.push_screen(sprite3dview.release());
     }
-    else if (file_type == "sprite") // FIXME: PNG are sprites too
+    else if (file_type == "sprite" || file_type == "png" || file_type == "jpg")
     {
       std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
 
@@ -150,14 +148,14 @@
       // Launching Sprite2DView instead of game
       screen_manager.push_screen(sprite2dview.release());
     }
-    else if (file_type == "particle-systems")
+    else if (file_type == "particles")
     {
       ParticleViewer* particle_viewer = new ParticleViewer();
       if (!filename.empty())
         particle_viewer->load(filename);
       screen_manager.push_screen(particle_viewer);
     }
-    else if (file_type == "windstille-sector")
+    else if (file_type == "wst")
     {
       screen_manager.push_screen(new GameSession(filename));
     }



From grumbel at mail.berlios.de  Sat Aug 22 21:14:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 21:14:28 +0200
Subject: [Windstille-commit] r3009 - in trunk/windstille/src: armature
	display editor objects particles sprite2d sprite3d tile
Message-ID: <200908221914.n7MJESk4020322@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 21:14:26 +0200 (Sat, 22 Aug 2009)
New Revision: 3009

Modified:
   trunk/windstille/src/armature/mesh.cpp
   trunk/windstille/src/display/software_surface.cpp
   trunk/windstille/src/display/software_surface.hpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface.hpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/display/texture.hpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/texture_manager.hpp
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_rotate_control_point.cpp
   trunk/windstille/src/editor/decal_scale_control_point.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/sprite3d.hpp
   trunk/windstille/src/tile/tile_description.cpp
Log:
Integrated Pathname() some more

Modified: trunk/windstille/src/armature/mesh.cpp
===================================================================
--- trunk/windstille/src/armature/mesh.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/armature/mesh.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -158,7 +158,7 @@
 #endif
 
   texture_filename = path + basename(texture_filename);
-  texture = TextureManager::current()->get(texture_filename);
+  texture = TextureManager::current()->get(Pathname(texture_filename));
 
   // Check that all vectors contain enough values for the given number
   // of vertices

Modified: trunk/windstille/src/display/software_surface.cpp
===================================================================
--- trunk/windstille/src/display/software_surface.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/software_surface.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -24,6 +24,7 @@
 #include <stdexcept>
 #include <SDL_image.h>
 
+#include "util/pathname.hpp"
 #include "math/rect.hpp"
 #include "physfs/physfs_sdl.hpp"
 #include "software_surface.hpp"
@@ -34,10 +35,10 @@
   SDL_Surface* surface;
 };
 
-SoftwareSurface::SoftwareSurface(const std::string& filename)
+SoftwareSurface::SoftwareSurface(const Pathname& filename)
   : impl(new SoftwareSurfaceImpl())
 {
-  impl->surface = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
+  impl->surface = IMG_Load(filename.get_sys_path().c_str());
 
   if (!impl->surface)
     {

Modified: trunk/windstille/src/display/software_surface.hpp
===================================================================
--- trunk/windstille/src/display/software_surface.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/software_surface.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -23,6 +23,7 @@
 #include <boost/shared_ptr.hpp>
 #include <string>
 
+#include "util/pathname.hpp"
 #include "math/size.hpp"
 
 class Rect;
@@ -37,7 +38,7 @@
   };
 
   SoftwareSurface() {}
-  SoftwareSurface(const std::string& filename);
+  explicit SoftwareSurface(const Pathname& filename);
   SoftwareSurface(int width, int height, Format format = RGBA);
   ~SoftwareSurface();
 

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/surface.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -16,14 +16,15 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "display/surface.hpp"
+
 #include <iostream>
 
-#include "surface.hpp"
+#include "display/opengl_state.hpp"
+#include "math/quad.hpp"
 #include "math/vector2f.hpp"
-#include "math/quad.hpp"
-#include "display/opengl_state.hpp"
-#include "surface_drawing_parameters.hpp"
-#include "surface_manager.hpp"
+#include "display/surface_drawing_parameters.hpp"
+#include "display/surface_manager.hpp"
 
 class SurfaceImpl
 {
@@ -48,7 +49,7 @@
 {
 }
 
-Surface::Surface(const std::string& filename)
+Surface::Surface(const Pathname& filename)
 {
   // FIXME: a bit ugly, should move some of the surface_manager code over here
   *this = SurfaceManager::current()->get(filename);

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/surface.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -21,6 +21,8 @@
 
 #include <string>
 #include <boost/shared_ptr.hpp>
+
+#include "util/pathname.hpp"
 #include "math/rect.hpp"
 #include "math/size.hpp"
 #include "texture.hpp"
@@ -38,7 +40,7 @@
 {
 public:
   Surface();
-  Surface(const std::string& filename);
+  explicit Surface(const Pathname& filename);
   
   /** 
    * Create a new Surface object from a Texture

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -60,7 +60,7 @@
 }
 
 Surface
-SurfaceManager::get(const std::string& filename)
+SurfaceManager::get(const Pathname& filename)
 {
   Surfaces::iterator i = surfaces.find(filename);
 
@@ -102,7 +102,7 @@
 }
 
 void
-SurfaceManager::load_grid(const std::string& filename,
+SurfaceManager::load_grid(const Pathname& filename,
                           std::vector<Surface>& surfaces,
                           int width, int height)
 {

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -19,12 +19,12 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_MANAGER_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SURFACE_MANAGER_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <string>
 #include <vector>
 #include <map>
-#include <GL/glew.h>
-#include <GL/gl.h>
+
+#include "util/pathname.hpp"
 #include "texture.hpp"
 
 class Surface;
@@ -41,9 +41,9 @@
   static SurfaceManager* current() { return current_; } 
 
 private:
-  std::auto_ptr<TexturePacker> texture_packer;
+  boost::scoped_ptr<TexturePacker> texture_packer;
   
-  typedef std::map<std::string, Surface> Surfaces;
+  typedef std::map<Pathname, Surface> Surfaces;
   Surfaces surfaces;
 
 public:
@@ -51,13 +51,13 @@
   ~SurfaceManager();
 
   /** returns a surface containing the image specified with filename */
-  Surface get(const std::string& filename);
+  Surface get(const Pathname& filename);
 
   /**
    * Loads an image and splits it into several Surfaces sized width and height.
    * The created surfaces will be added to the surfaces vector.
    */
-  void load_grid(const std::string& filename,
+  void load_grid(const Pathname& filename,
                  std::vector<Surface>& surfaces, int width, int height);
 
   Texture create_texture(const SoftwareSurface& image,

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/texture.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -17,16 +17,17 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "display/texture.hpp"
+
 #include <stdexcept>
 #include <iostream>
 #include <GL/glew.h>
 #include <GL/gl.h>
 
 #include "math/rect.hpp"
-#include "texture.hpp"
 #include "display/software_surface.hpp"
 #include "display/opengl_state.hpp"
-#include "texture_manager.hpp"
+#include "display/texture_manager.hpp"
 #include "util/util.hpp"
 
 class TextureImpl
@@ -53,7 +54,7 @@
 {
 }
 
-Texture::Texture(const std::string& filename)
+Texture::Texture(const Pathname& filename)
 {
   *this = TextureManager::current()->get(filename);
 }

Modified: trunk/windstille/src/display/texture.hpp
===================================================================
--- trunk/windstille/src/display/texture.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/texture.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -24,6 +24,8 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include <boost/shared_ptr.hpp>
+
+#include "util/pathname.hpp"
 
 class SoftwareSurface;
 class TextureImpl;
@@ -37,7 +39,7 @@
   explicit Texture();
 
   /** Load a texture from file */
-  explicit Texture(const std::string& filename);
+  explicit Texture(const Pathname& filename);
 
   /**
    * Upload an SoftwareSurface onto an OpenGL texture. The surface must have power

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "texture_manager.hpp"
+#include "display/texture_manager.hpp"
 
 #include <assert.h>
 #include <iostream>
@@ -52,7 +52,7 @@
 }
 
 Texture
-TextureManager::get(const std::string& filename)
+TextureManager::get(const Pathname& filename)
 {
   Textures::iterator i = textures.find(filename);
   if(i != textures.end())
@@ -73,7 +73,7 @@
       catch(std::exception& e) 
         {
           std::cerr << e.what() << std::endl;
-          return get("images/404.png");
+          return get(Pathname("images/404.png"));
         }
     }
 }

Modified: trunk/windstille/src/display/texture_manager.hpp
===================================================================
--- trunk/windstille/src/display/texture_manager.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/display/texture_manager.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -24,6 +24,8 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 
+#include "util/pathname.hpp"
+
 class Texture;
 
 /**
@@ -48,10 +50,10 @@
    * SurfaceManager for images with other dimensions.
    * Note: Texture is a refcounted class, store it with Ref<Texture>
    */
-  Texture get(const std::string& filename);
+  Texture get(const Pathname& filename);
 
 private:
-  typedef std::map<std::string, Texture> Textures;
+  typedef std::map<Pathname, Texture> Textures;
   Textures textures;
 };
 

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/editor/control_point.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -23,7 +23,7 @@
 ControlPointHandle
 ControlPoint::create(const Vector2f& pos)
 {
-  return ControlPointHandle(new ControlPoint(Surface("editor/handle.png"), pos));
+  return ControlPointHandle(new ControlPoint(Surface(Pathname("editor/handle.png")), pos));
 }
 
 ControlPoint::ControlPoint(const Surface& surface_, const Vector2f& pos_)

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -51,16 +51,16 @@
   reader.get("angle", angle);
   reader.get("hflip", hflip);
   reader.get("vflip", vflip);
-  surface = Surface(path);
-  software_surface = SoftwareSurface(path);
+  surface = Surface(Pathname(path));
+  software_surface = SoftwareSurface(Pathname(path));
 }
 
 DecalObjectModel::DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
                                    const std::string& path_, MapType type_)
   : ObjectModel("DecalObjectModel", rel_pos),
     path(path_),
-    surface(path_),
-    software_surface(path_),
+    surface(Pathname(path_)),
+    software_surface(Pathname(path_)),
     type(type_),
     scale(1.0f, 1.0f),
     angle(0.0f),

Modified: trunk/windstille/src/editor/decal_rotate_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -20,7 +20,7 @@
 #include "decal_rotate_control_point.hpp"
 
 DecalRotateControlPoint::DecalRotateControlPoint(DecalObjectModel* object_, float ctrl_angle_, const Vector2f& pos_)
-  : ControlPoint(Surface("editor/rotate_handle.png"), pos_),
+  : ControlPoint(Surface(Pathname("editor/rotate_handle.png")), pos_),
     object(object_),
     ctrl_angle(ctrl_angle_),
     orig_angle(object->get_angle()),

Modified: trunk/windstille/src/editor/decal_scale_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_scale_control_point.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/editor/decal_scale_control_point.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -21,7 +21,7 @@
 
 DecalScaleControlPoint::DecalScaleControlPoint(DecalObjectModel* object_, float ctrl_angle_, const Vector2f& pos_, 
                                                bool x_scale_, bool y_scale_)
-  : ControlPoint(Surface("editor/scale_handle.png"), pos_),
+  : ControlPoint(Surface(Pathname("editor/scale_handle.png")), pos_),
     object(object_),
     ctrl_angle(ctrl_angle_),
     orig_scale(object_->get_scale()),

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -168,7 +168,7 @@
           sc->set_render_mask(sc->get_render_mask() & ~SceneContext::LIGHTMAP);
         }
       
-      background_pattern = Texture("editor/background_layer.png");
+      background_pattern = Texture(Pathname("editor/background_layer.png"));
       background_pattern.set_wrap(GL_REPEAT);
 
       glViewport(0, 0, get_width(), get_height());

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -25,7 +25,7 @@
 
 LaserPointer::LaserPointer()
 {
-  noise = Texture("images/noise2.png");
+  noise = Texture(Pathname("images/noise2.png"));
   laserpointer = Sprite(Pathname("images/laserpointer.sprite"));
   laserpointer_light = Sprite(Pathname("images/laserpointer_light.sprite"));
   laserpointer_light.set_blend_func(GL_SRC_ALPHA, GL_ONE);

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -46,7 +46,7 @@
   for(int i = 50; i < 70 && i < int(heightfield1->size()); ++i)
     (*heightfield1)[i] += 0.0025f;
 
-  texture = Texture("images/textures/water.png");
+  texture = Texture(Pathname("images/textures/water.png"));
   texture.set_wrap(GL_REPEAT);
 }
 

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -28,7 +28,7 @@
   : nightvision(Pathname("images/nightvision.sprite"))
 {
   name = "nightvision";
-  noise = Texture("images/noise.png");
+  noise = Texture(Pathname("images/noise.png"));
   noise.set_wrap(GL_REPEAT);
   noise.set_filter(GL_LINEAR);
 }

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -220,7 +220,7 @@
 };
 
 Shockwave::Shockwave(FileReader& props)
-  : noise("images/noise3.png")
+  : noise(Pathname("images/noise3.png"))
 {
   props.get("pos", pos);
   

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -164,7 +164,7 @@
 
 DeformDrawer::DeformDrawer(FileReader& /*props*/)
   : framebuffer(GL_TEXTURE_RECTANGLE_ARB, 800, 600),
-    surface("images/particles/deform2.png")
+    surface(Pathname("images/particles/deform2.png"))
 {
   shader_program.attach(ShaderObject(GL_FRAGMENT_SHADER_ARB, "data/shader/particledeform.frag"));
   shader_program.link();

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -61,7 +61,7 @@
   props.get("blendfunc-src", blendfunc_src_str);
   props.get("blendfunc-dst", blendfunc_dst_str);
     
-  surface = SurfaceManager::current()->get(surface_file);
+  surface = SurfaceManager::current()->get(Pathname(surface_file));
 
   blendfunc_src  = string2blendfunc(blendfunc_src_str);
   blendfunc_dest = string2blendfunc(blendfunc_dst_str);

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -30,68 +30,69 @@
 
 SpriteData::SpriteData(const Pathname& pathname)
 {
-  std::string filename = pathname.get_physfs_path();
   if (pathname.exists())
+  {
+    const std::string ext = pathname.get_extension();
+
+    if (ext == "sprite")
     {
-      if (has_suffix(filename, ".sprite"))
-        {
-          FileReader reader = FileReader::parse(filename);
+      FileReader reader = FileReader::parse(pathname);
 
-          if(reader.get_name() != "sprite") {
-            std::ostringstream msg;
-            msg << "File '" << filename << "' is not a windstille sprite";
-            throw std::runtime_error(msg.str());
-          }
+      if(reader.get_name() != "sprite") {
+        std::ostringstream msg;
+        msg << "File " << pathname << " is not a windstille sprite";
+        throw std::runtime_error(msg.str());
+      }
     
-          std::string dir = dirname(filename);
-          parse(dir, reader);
-        }
-      else if (has_suffix(tolowercase(filename), ".png") || has_suffix(tolowercase(filename), ".jpg"))
-        {
-          if (PHYSFS_exists(filename.c_str()))
-            {
-              std::auto_ptr<SpriteAction> action(new SpriteAction());
-              action->name   = "default";
-              action->speed  = 1.0;
-              action->scale  = 1.0f;
-              action->offset = Vector2f(0, 0);
-              action->surfaces.push_back(Surface(filename));
-              actions.push_back(action.release());
-            }
-          else
-            {
-              throw std::runtime_error("Couldn't find '" + filename + "'");
-            }
-        }
-      else
-        {
-          throw std::runtime_error("Sprite filename has unknown suffix: '" + filename + "'");
-        }
+      std::string dir = dirname(pathname.get_physfs_path());
+      parse(dir, reader);
     }
-  else if (filename.length() > std::string(".sprite").length())
-    { // If sprite file is not found, we search for a file with the
-      // same name ending in .png
-      std::string pngfile = filename.substr(0, filename.length() - std::string(".sprite").length()) + ".png";
+    else if (ext == "png" || ext == "jpg")
+    {
+      std::auto_ptr<SpriteAction> action(new SpriteAction());
+      action->name   = "default";
+      action->speed  = 1.0;
+      action->scale  = 1.0f;
+      action->offset = Vector2f(0, 0);
+      action->surfaces.push_back(Surface(pathname));
+      actions.push_back(action.release());
+    }
+    else
+    {
+      std::ostringstream str;
+      str << "Sprite " << pathname << " has unknown suffix: '" << ext  << "'";
+      throw std::runtime_error(str.str());
+    }
+  }
+  else if (pathname.get_raw_path().length() > std::string(".sprite").length())
+  { // If sprite file is not found, we search for a file with the
+    // same name ending in .png
+    Pathname pngfile(pathname.get_raw_path().substr(0, pathname.get_raw_path().length() - std::string(".sprite").length()) + ".png",
+                     pathname.get_type());
 
-      if (PHYSFS_exists(pngfile.c_str()))
-        {
-          std::auto_ptr<SpriteAction> action(new SpriteAction);
-          action->name   = "default";
-          action->speed  = 1.0;
-          action->scale  = 1.0f;
-          action->offset = Vector2f(0, 0);
-          action->surfaces.push_back(Surface(pngfile));
-          actions.push_back(action.release());
-        }
-      else
-        {
-          throw std::runtime_error("Couldn't find '" + filename + "'");
-        }
+    if (pngfile.exists())
+    {
+      std::auto_ptr<SpriteAction> action(new SpriteAction);
+      action->name   = "default";
+      action->speed  = 1.0;
+      action->scale  = 1.0f;
+      action->offset = Vector2f(0, 0);
+      action->surfaces.push_back(Surface(pngfile));
+      actions.push_back(action.release());
     }
-  else
+    else
     {
-      throw std::runtime_error("Couldn't find '" + filename + "'");
+      std::ostringstream str;
+      str << "Couldn't find " << pngfile;
+      throw std::runtime_error(str.str());
     }
+  }
+  else
+  {
+    std::ostringstream str;
+    str << "Couldn't find " << pathname;
+    throw std::runtime_error(str.str());
+  }
 }
 
 SpriteData::~SpriteData()
@@ -132,7 +133,7 @@
 
       for(std::vector<std::string>::iterator file = image_files.begin(); file != image_files.end(); ++file)
         {
-          action->surfaces.push_back(SurfaceManager::current()->get(dir + "/" + *file));
+          action->surfaces.push_back(SurfaceManager::current()->get(Pathname(dir + "/" + *file)));
         }
     }
   else if(reader.get("image-grid", grid_reader)) 
@@ -148,7 +149,7 @@
       if(filename.empty() || x_size <= 0 || y_size <= 0)
         throw std::runtime_error("Invalid or too few data in image-grid");
       
-      SurfaceManager::current()->load_grid(dir + "/" + filename,
+      SurfaceManager::current()->load_grid(Pathname(dir + "/" + filename),
                                            action->surfaces, x_size, y_size);
     }
     

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -62,8 +62,8 @@
   /** Load a sprite from file or in-case the .sprite file isn't found
       search for a .png with the same name and use that as a simple
       one-file sprite */
-  Sprite(const Pathname& filename);
-  Sprite(const SpriteDataPtr data);
+  explicit Sprite(const Pathname& filename);
+  explicit Sprite(const SpriteDataPtr data);
   ~Sprite();
 
   void update(float delta);

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -121,7 +121,7 @@
       mesh.triangle_count = read_uint16_t(file);
       mesh.vertex_count   = read_uint16_t(file);
 
-      mesh.texture = TextureManager::current()->get(texturename);
+      mesh.texture = TextureManager::current()->get(Pathname(texturename));
 
       // read triangles
       mesh.vertex_indices.reserve(mesh.triangle_count * 3);

Modified: trunk/windstille/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -47,7 +47,7 @@
   typedef uint16_t PointID;
 
   Sprite3D();
-  Sprite3D(const Pathname& filename);
+  explicit Sprite3D(const Pathname& filename);
   ~Sprite3D();
 
   /**

Modified: trunk/windstille/src/tile/tile_description.cpp
===================================================================
--- trunk/windstille/src/tile/tile_description.cpp	2009-08-22 18:41:12 UTC (rev 3008)
+++ trunk/windstille/src/tile/tile_description.cpp	2009-08-22 19:14:26 UTC (rev 3009)
@@ -19,13 +19,14 @@
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
-#include "physfs/physfs_sdl.hpp"
+
 #include "app/globals.hpp"
 #include "display/software_surface.hpp"
-#include "tile.hpp"
-#include "tile_packer.hpp"
-#include "tile_factory.hpp"
-#include "tile_description.hpp"
+#include "physfs/physfs_sdl.hpp"
+#include "tile/tile.hpp"
+#include "tile/tile_description.hpp"
+#include "tile/tile_factory.hpp"
+#include "tile/tile_packer.hpp"
 
 TileDescription::TileDescription(FileReader& props)
   : width(0), height(0)
@@ -46,7 +47,8 @@
   if (debug)
     std::cout << "Loading tiles: " << filename << std::endl;
 
-  SoftwareSurface image(filename);
+  // FIXM: SoftwareSurface image(Pathname(filename)); doesn't work, as its handled as function declaration!?
+  SoftwareSurface image = SoftwareSurface(Pathname(filename));
 
   int num_tiles = width * height; //(image->w/TILE_RESOLUTION) * (image->h/TILE_RESOLUTION);
   if (int(colmap.size()) != num_tiles)



From grumbel at mail.berlios.de  Sat Aug 22 21:40:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 22 Aug 2009 21:40:38 +0200
Subject: [Windstille-commit] r3010 - in trunk/windstille/src: font scripting
Message-ID: <200908221940.n7MJecif022919@sheep.berlios.de>

Author: grumbel
Date: 2009-08-22 21:40:36 +0200 (Sat, 22 Aug 2009)
New Revision: 3010

Modified:
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/font/ttf_font.hpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Integrated Pathname() some more

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-08-22 19:14:26 UTC (rev 3009)
+++ trunk/windstille/src/font/fonts.cpp	2009-08-22 19:40:36 UTC (rev 3010)
@@ -19,15 +19,16 @@
 #include <assert.h>
 
 #include "app/globals.hpp"
-#include "border_font_effect.hpp"
-#include "fonts.hpp"
+#include "font/border_font_effect.hpp"
+#include "font/fonts.hpp"
+#include "util/pathname.hpp"
 
 Fonts* Fonts::s_current = 0;
 
 Fonts::Fonts()
-  : ttffont(new TTFFont("fonts/VeraMono.ttf", 14, BorderFontEffect(1, true))),
-    vera12(new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2, true))),
-    vera20(new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2, true)))
+  : ttffont(new TTFFont(Pathname("fonts/VeraMono.ttf"), 14, BorderFontEffect(1, true))),
+    vera12(new TTFFont(Pathname("fonts/Vera.ttf"),     12, BorderFontEffect(2, true))),
+    vera20(new TTFFont(Pathname("fonts/Vera.ttf"),     20, BorderFontEffect(2, true)))
 {
   assert(!s_current);
   s_current = this;

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-22 19:14:26 UTC (rev 3009)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-22 19:40:36 UTC (rev 3010)
@@ -62,14 +62,14 @@
 
 FT_Library TTFFontImpl::library;
 
-TTFFont::TTFFont(const std::string& filename, int size_, const FontEffect& effect)
+TTFFont::TTFFont(const Pathname& filename, int size_, const FontEffect& effect)
   : impl(new TTFFontImpl())
 {
   assert(size_ > 0);
 
   impl->size = size_;
 
-  IFileStream fin(filename);
+  IFileStream fin(filename.get_physfs_path());
   std::istreambuf_iterator<char> first(fin), last;
   std::vector<char> buffer(first, last); 
 
@@ -78,7 +78,9 @@
                          reinterpret_cast<FT_Byte*>(&*buffer.begin()), buffer.size(), 
                          0, &face))
     {
-      throw std::runtime_error("Couldn't load font: '" + filename + "'");
+      std::ostringstream str;
+      str << "Couldn't load font: " << filename;
+      throw std::runtime_error(str.str());
     }
   
   FT_Set_Pixel_Sizes(face, impl->size, impl->size);

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-08-22 19:14:26 UTC (rev 3009)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-08-22 19:40:36 UTC (rev 3010)
@@ -57,7 +57,7 @@
   static void deinit();
 
 public:
-  TTFFont(const std::string& file, int size, const FontEffect& effect = NoFontEffect());
+  TTFFont(const Pathname& file, int size, const FontEffect& effect = NoFontEffect());
   ~TTFFont();
 
   /** */

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-22 19:14:26 UTC (rev 3009)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-22 19:40:36 UTC (rev 3010)
@@ -306,7 +306,7 @@
 {
   try 
   {
-    Fonts::current()->ttffont.reset(new TTFFont("fonts/" + font, size));
+    Fonts::current()->ttffont.reset(new TTFFont(Pathname("fonts/" + font), size));
   }
   catch(std::exception& err) 
   {



From grumbel at mail.berlios.de  Sun Aug 23 14:50:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 14:50:45 +0200
Subject: [Windstille-commit] r3011 - in trunk/windstille/src: app display
	editor engine font gui hud input lisp objects particles
	physfs screen scripting sprite2d tile
Message-ID: <200908231250.n7NCojYN015974@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 14:50:41 +0200 (Sun, 23 Aug 2009)
New Revision: 3011

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/console.hpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/opengl_state.cpp
   trunk/windstille/src/display/opengl_state.hpp
   trunk/windstille/src/display/scene_context.hpp
   trunk/windstille/src/display/text_area.hpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/layer.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/font/ttf_font.hpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/group_component.hpp
   trunk/windstille/src/gui/gui_manager.cpp
   trunk/windstille/src/gui/gui_manager.hpp
   trunk/windstille/src/gui/text_view.cpp
   trunk/windstille/src/gui/text_view.hpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/pda.hpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager_sdl.hpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/objects/grenade.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/particle_system.hpp
   trunk/windstille/src/physfs/physfs_stream.cpp
   trunk/windstille/src/screen/armature_test.cpp
   trunk/windstille/src/screen/armature_test.hpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/navigation_test.hpp
   trunk/windstille/src/screen/particle_viewer.hpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/tile/tile_factory.cpp
Log:
Replaced some std::auto_ptr with boost::scoped_ptr

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/app/config.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -20,7 +20,7 @@
 
 #include <stdio.h>
 #include <boost/format.hpp>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <iostream>
 
 #include "app/windstille.hpp"

Modified: trunk/windstille/src/app/console.hpp
===================================================================
--- trunk/windstille/src/app/console.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/app/console.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_APP_CONSOLE_HPP
 #define HEADER_WINDSTILLE_APP_CONSOLE_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <vector>
 #include <sstream>
 
@@ -49,7 +49,7 @@
   Console (const Console&);
   Console& operator= (const Console&);
 
-  std::auto_ptr<ConsoleImpl> impl;
+  boost::scoped_ptr<ConsoleImpl> impl;
 };
 
 extern Console console;

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <boost/bind.hpp>
 
 #include "config.hpp"

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <boost/scoped_ptr.hpp>
 #include <assert.h>
 #include <iostream>
 #include <iosfwd>
@@ -542,13 +543,13 @@
   array->vertex(rect.left, rect.top);
 
   array->color(color);
-  array->vertex(rect.right, rect.top);  
+  array->vertex(rect.right, rect.top);
 
   array->color(color);
-  array->vertex(rect.right, rect.bottom);  
+  array->vertex(rect.right, rect.bottom);
 
   array->color(color);
-  array->vertex(rect.left, rect.bottom);  
+  array->vertex(rect.left, rect.bottom);
 
   draw(array);
 }

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -15,11 +15,13 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include "display/graphic_context_state.hpp"
+
 #include <math.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
+
 #include "display/scene_context.hpp"
-#include "graphic_context_state.hpp"
 
 class GraphicContextStateImpl
 {

Modified: trunk/windstille/src/display/opengl_state.cpp
===================================================================
--- trunk/windstille/src/display/opengl_state.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/opengl_state.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "opengl_state.hpp"
+#include "display/opengl_state.hpp"
 
 #include <assert.h>
 #include <map>

Modified: trunk/windstille/src/display/opengl_state.hpp
===================================================================
--- trunk/windstille/src/display/opengl_state.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/opengl_state.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -21,7 +21,7 @@
 
 #include <GL/glew.h>
 #include <GL/gl.h>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 
 class Framebuffer;
 class Texture;
@@ -103,7 +103,7 @@
    */
   void verify();
 private:
-  std::auto_ptr<OpenGLStateImpl> impl;
+  boost::scoped_ptr<OpenGLStateImpl> impl;
 
   OpenGLState (const OpenGLState&);
   OpenGLState& operator= (const OpenGLState&);

Modified: trunk/windstille/src/display/scene_context.hpp
===================================================================
--- trunk/windstille/src/display/scene_context.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/scene_context.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,9 +19,10 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SCENE_CONTEXT_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SCENE_CONTEXT_HPP
 
-#include <memory>
-#include "drawing_context.hpp"
+#include <boost/scoped_ptr.hpp>
 
+#include "display/drawing_context.hpp"
+
 class SceneContextImpl;
 
 /** The SceneContext maintains all the different drawing layers to
@@ -102,7 +103,7 @@
   void eval(DrawingRequest* request);
 
 private:
-  std::auto_ptr<SceneContextImpl> impl;
+  boost::scoped_ptr<SceneContextImpl> impl;
 
   SceneContext (const SceneContext&);
   SceneContext& operator= (const SceneContext&);

Modified: trunk/windstille/src/display/text_area.hpp
===================================================================
--- trunk/windstille/src/display/text_area.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/text_area.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_AREA_HPP
 #define HEADER_WINDSTILLE_DISPLAY_TEXT_AREA_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <string>
 #include "math/rect.hpp"
 
@@ -65,7 +65,7 @@
   void  set_scroll_offset(float s);
 
 private:
-  std::auto_ptr<TextAreaImpl> impl;
+  boost::scoped_ptr<TextAreaImpl> impl;
 };
 
 #endif

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -18,7 +18,7 @@
 
 #include <iostream>
 #include <stdexcept>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 
 #include "math/point.hpp"
 #include "display/software_surface.hpp"

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_EDITOR_WINDOW_HPP
 #define HEADER_WINDSTILLE_EDITOR_EDITOR_WINDOW_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <gtkmm/box.h>
 #include <gtkmm/statusbar.h>
 #include <gtkmm/textview.h>
@@ -84,10 +84,10 @@
   Glib::RefPtr<Gtk::ToggleAction> play_action;
   Glib::RefPtr<Gtk::ToggleAction> snap_action;
 
-  std::auto_ptr<SelectTool>   select_tool;
-  std::auto_ptr<NavgraphInsertTool> navgraph_insert_tool;
-  std::auto_ptr<NavgraphSelectTool> navgraph_select_tool;
-  std::auto_ptr<ZoomTool>     zoom_tool;
+  boost::scoped_ptr<SelectTool>   select_tool;
+  boost::scoped_ptr<NavgraphInsertTool> navgraph_insert_tool;
+  boost::scoped_ptr<NavgraphSelectTool> navgraph_select_tool;
+  boost::scoped_ptr<ZoomTool>     zoom_tool;
   Tool* current_tool;
   LayerWidget* layer_widget;
 

Modified: trunk/windstille/src/editor/layer.cpp
===================================================================
--- trunk/windstille/src/editor/layer.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/editor/layer.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -16,8 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "sector_model.hpp"
-#include "layer.hpp"
+#include "editor/layer.hpp"
+
+#include "editor/sector_model.hpp"
 
 Layer::Layer()
   : visible(true),

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_SECTOR_MODEL_HPP
 
 #include <set>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <gtkmm/liststore.h>
 #include <gdkmm/pixbuf.h>
 #include <vector>
@@ -67,7 +67,7 @@
 class SectorModel
 {
 private:
-  std::auto_ptr<NavigationGraph> nav_graph;
+  boost::scoped_ptr<NavigationGraph> nav_graph;
   Glib::RefPtr<Gtk::ListStore>   layer_tree;
   Color ambient_color;
   

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 #define HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <GL/glew.h>
 #include <GL/gl.h>
 
@@ -56,15 +56,15 @@
 private:
   EditorWindow& editor;
 
-  std::auto_ptr<UndoManager> undo_manager;
+  boost::scoped_ptr<UndoManager> undo_manager;
 
   std::string filename;
-  std::auto_ptr<SectorModel> sector_model;
+  boost::scoped_ptr<SectorModel> sector_model;
   std::vector<ControlPointHandle> control_points;
 
   GraphicContextState   state;
-  std::auto_ptr<SceneContext> sc;
-  std::auto_ptr<ScrollTool> scroll_tool;
+  boost::scoped_ptr<SceneContext> sc;
+  boost::scoped_ptr<ScrollTool> scroll_tool;
   SelectionHandle selection;
   DecalObjectModel::MapType map_type;
   Texture background_pattern;

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -55,15 +55,14 @@
 
 Sector::Sector(const Pathname& arg_filename)
   : filename(arg_filename),
-    player(0)    
+    collision_engine(new CollisionEngine()),
+    navigation_graph(new NavigationGraph()),
+    player(0)
 { 
   current_ = this;
 
   if (debug) std::cout << "Creating new Sector" << std::endl;
-
-  collision_engine = std::auto_ptr<CollisionEngine>(new CollisionEngine());
-  navigation_graph = std::auto_ptr<NavigationGraph>(new NavigationGraph());
-
+  
   interactive_tilemap = 0;
   interactivebackground_tilemap = 0;
 

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,10 +19,10 @@
 #ifndef HEADER_WINDSTILLE_ENGINE_SECTOR_HPP
 #define HEADER_WINDSTILLE_ENGINE_SECTOR_HPP
 
-#include <memory>
 #include <string>
 #include <vector>
 #include <boost/shared_ptr.hpp>
+#include <boost/scoped_ptr.hpp>
 
 #include "util/pathname.hpp"
 #include "display/color.hpp"
@@ -66,8 +66,8 @@
   TileMap* interactive_tilemap;
   TileMap* interactivebackground_tilemap;
 
-  std::auto_ptr<CollisionEngine> collision_engine;
-  std::auto_ptr<NavigationGraph> navigation_graph;
+  boost::scoped_ptr<CollisionEngine> collision_engine;
+  boost::scoped_ptr<NavigationGraph> navigation_graph;
 
   Player* player;
 

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -21,7 +21,7 @@
 
 #include <GL/glew.h>
 #include <GL/gl.h>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <string>
 
 #include "display/color.hpp"
@@ -79,7 +79,7 @@
   void draw_center(const Vector2f& pos, const std::string& str, const Color& color = Color(1.0f, 1.0f, 1.0f));
 
 private:
-  std::auto_ptr<TTFFontImpl> impl;
+  boost::scoped_ptr<TTFFontImpl> impl;
 };
 
 class TTFFontManager

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -67,7 +67,7 @@
 GroupComponent::pack(Component* component)
 {
   assert(child.get() == 0);
-  child = std::auto_ptr<Component>(component);
+  child.reset(component);
 
   child->set_screen_rect(get_child_rect());
   child->set_active(true);

Modified: trunk/windstille/src/gui/group_component.hpp
===================================================================
--- trunk/windstille/src/gui/group_component.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/gui/group_component.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_GUI_GROUP_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_GROUP_COMPONENT_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <string>
 #include "component.hpp"
 
@@ -30,7 +30,7 @@
 {
 private:
   std::string title;
-  std::auto_ptr<Component> child;
+  boost::scoped_ptr<Component> child;
 
 public:
   GroupComponent(const Rectf& rect, const std::string& title_, Component* parent);

Modified: trunk/windstille/src/gui/gui_manager.cpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/gui/gui_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -31,8 +31,8 @@
 namespace gui {
 
 GUIManager::GUIManager()
+ : root(new RootComponent(Rectf(0,0,800,600)))
 {
-  root = std::auto_ptr<RootComponent>(new RootComponent(Rectf(0,0,800,600)));
 }
 
 GUIManager::~GUIManager()

Modified: trunk/windstille/src/gui/gui_manager.hpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/gui/gui_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 #define HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include "screen/screen.hpp"
 
 namespace gui {
@@ -30,7 +30,7 @@
 class GUIManager : public Screen
 {
 private:
-  std::auto_ptr<RootComponent> root;
+  boost::scoped_ptr<RootComponent> root;
 
 public:
   GUIManager();

Modified: trunk/windstille/src/gui/text_view.cpp
===================================================================
--- trunk/windstille/src/gui/text_view.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/gui/text_view.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -16,9 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "gui/text_view.hpp"
+
 #include <iostream>
+
 #include "input/controller.hpp"
-#include "text_view.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/text_view.hpp
===================================================================
--- trunk/windstille/src/gui/text_view.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/gui/text_view.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_TEXT_VIEW_HPP
 
 #include "display/text_area.hpp"
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -17,7 +17,7 @@
 */
 
 #include <iostream>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include "input/input_manager.hpp"
 #include "display/display.hpp"
 #include "display/text_area.hpp"

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/hud/pda.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_HUD_PDA_HPP
 #define HEADER_WINDSTILLE_HUD_PDA_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include "sprite2d/sprite.hpp"
 #include "screen/screen.hpp"
 
@@ -51,8 +51,8 @@
   Vector2f  pos;
   Sprite    background;
 
-  std::auto_ptr<TextArea>  ui_area;
-  std::auto_ptr<TextArea>  text_area;
+  boost::scoped_ptr<TextArea>  ui_area;
+  boost::scoped_ptr<TextArea>  text_area;
 
   std::vector<DialogEntry> dialogs;
   std::vector<ObjectiveEntry> objectives;   

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -21,7 +21,7 @@
 #include <assert.h>
 #include <stdexcept>
 #include <sstream>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 
 #include "input_manager_sdl.hpp"
 #include "input_manager_impl.hpp"

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_SDL_HPP
 
 #include <SDL.h>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include "input_manager_impl.hpp"
 
 class FileReader;
@@ -142,7 +142,7 @@
 
   void parse_config(FileReader& reader);
 
-  std::auto_ptr<InputManagerSDLImpl> impl;
+  boost::scoped_ptr<InputManagerSDLImpl> impl;
 
 private:
   InputManagerSDL (const InputManagerSDL&);

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -16,7 +16,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <string.h>
 #include <sstream>
 #include <cassert>

Modified: trunk/windstille/src/objects/grenade.hpp
===================================================================
--- trunk/windstille/src/objects/grenade.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/objects/grenade.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -18,10 +18,11 @@
 #ifndef HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 #define HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 
+#include <boost/scoped_ptr.hpp>
+
 #include "engine/entity.hpp"
 #include "engine/physics.hpp"
 #include "sprite3d/sprite3d.hpp"
-#include <memory>
 
 class Grenade : public Entity
 {
@@ -36,7 +37,7 @@
 private:
   Sprite3D sprite;
   Physics physics;
-  std::auto_ptr<CollisionObject> c_object;
+  boost::scoped_ptr<CollisionObject> c_object;
 };
 
 #endif

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/objects/player.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -74,7 +74,7 @@
   z_pos = 100.0f;
 
   contact = 0;
-  weapon = std::auto_ptr<Weapon>(new Pistol());
+  weapon.reset(new Pistol());
   laser_pointer = ((Pistol*)weapon.get())->laser_pointer;
 }
 

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/objects/player.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,15 +19,14 @@
 #ifndef HEADER_WINDSTILLE_OBJECTS_PLAYER_HPP
 #define HEADER_WINDSTILLE_OBJECTS_PLAYER_HPP
 
-#include <memory>
-#include "sprite2d/sprite.hpp"
-#include "input/controller.hpp"
-#include "sprite3d/sprite3d.hpp"
-#include "sound/sound_source.hpp"
-#include "math/vector2f.hpp"
 #include "app/globals.hpp"
-#include "engine/entity.hpp"
 #include "display/surface.hpp"
+#include "engine/entity.hpp"
+#include "input/controller.hpp"
+#include "math/vector2f.hpp"
+#include "sound/sound_source.hpp"
+#include "sprite2d/sprite.hpp"
+#include "sprite3d/sprite3d.hpp"
 
 class Controller;
 class Contact;
@@ -38,7 +37,7 @@
 {
 private:
   Sprite3D sprite;
-  std::auto_ptr<SoundSource> sound_source;
+  //std::auto_ptr<SoundSource> sound_source;
 
   bool jumping;
   bool bomb_placed;
@@ -49,7 +48,7 @@
 
   LaserPointer* laser_pointer;
   Contact* contact;
-  std::auto_ptr<Weapon> weapon;
+  boost::scoped_ptr<Weapon> weapon;
 
 public:
   enum State

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -29,10 +29,9 @@
 #include "randomizer.hpp"
 
 ParticleSystem::ParticleSystem(FileReader& props)
+ : randomizer(new PointRandomizer())
 {
   // Init some defaults
-  randomizer = std::auto_ptr<Randomizer>(new PointRandomizer());
-
   x_pos      = 320.0f;
   y_pos      = 240.0f;
   z_pos      = 0;
@@ -211,9 +210,8 @@
 }
 
 ParticleSystem::ParticleSystem()
+ : randomizer(new PointRandomizer)
 {
-  randomizer = std::auto_ptr<Randomizer>(new PointRandomizer);
-
   x_pos      = 320.0f;
   y_pos      = 240.0f;
   z_pos      = 0;
@@ -246,7 +244,7 @@
 void
 ParticleSystem::set_drawer(Drawer* drawer_)
 {
-  drawer = std::auto_ptr<Drawer>(drawer_);
+  drawer.reset(drawer_);
 }
   
 void
@@ -356,26 +354,26 @@
 void
 ParticleSystem::set_point_distribution()
 {
-  randomizer = std::auto_ptr<Randomizer>(new PointRandomizer());
+  randomizer.reset(new PointRandomizer());
 }
 
 void
 ParticleSystem::set_line_distribution(float x1, float y1,
                                       float x2, float y2)
 {
-  randomizer = std::auto_ptr<Randomizer>(new LineRandomizer(x1, y1, x2, y2));
+  randomizer.reset(new LineRandomizer(x1, y1, x2, y2));
 }
 
 void
 ParticleSystem::set_circle_distribution(float radius)
 {
-  randomizer = std::auto_ptr<Randomizer>(new CircleRandomizer(radius));
+  randomizer.reset(new CircleRandomizer(radius));
 }
 
 void
 ParticleSystem::set_rect_distribution(const Rectf& rect)
 {
-  randomizer = std::auto_ptr<Randomizer>(new RectRandomizer(rect));
+  randomizer.reset(new RectRandomizer(rect));
 }
 
 void

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_PARTICLES_PARTICLE_SYSTEM_HPP
 #define HEADER_WINDSTILLE_PARTICLES_PARTICLE_SYSTEM_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <vector>
 
 #include "math/rect.hpp"
@@ -62,8 +62,8 @@
   float life_time;
 
   /** Places the particle in its initial position */
-  std::auto_ptr<Randomizer> randomizer;
-  std::auto_ptr<Drawer>     drawer;
+  boost::scoped_ptr<Randomizer> randomizer;
+  boost::scoped_ptr<Drawer>     drawer;
 
   float spawn_x;
   float spawn_y;

Modified: trunk/windstille/src/physfs/physfs_stream.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -28,7 +28,7 @@
     file = PHYSFS_openRead(filename.c_str());
     if(file == 0) {
         std::stringstream msg;
-        msg << "Couldn't open file '" << filename << "': "
+        msg << "IFileStreambuf: Couldn't open file '" << filename << "': "
             << PHYSFS_getLastError();
         throw std::runtime_error(msg.str());
     }
@@ -105,7 +105,7 @@
     file = PHYSFS_openWrite(filename.c_str());
     if(file == 0) {
         std::stringstream msg;
-        msg << "Couldn't open file '" << filename << "': "
+        msg << "OFileStreambuf: Couldn't open file '" << filename << "': "
             << PHYSFS_getLastError();
         throw std::runtime_error(msg.str());
     }

Modified: trunk/windstille/src/screen/armature_test.cpp
===================================================================
--- trunk/windstille/src/screen/armature_test.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/screen/armature_test.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -31,10 +31,10 @@
 ArmatureTest::ArmatureTest()
 {
   FileReader model_reader = FileReader::parse("armature/mesh.mesh");
-  model = std::auto_ptr<Model>(new Model(model_reader, "armature/"));
+  model.reset(new Model(model_reader, "armature/"));
 
   FileReader armature_reader = FileReader::parse("armature/armature.arm");
-  armature = std::auto_ptr<Armature>(new Armature(armature_reader));
+  armature.reset(new Armature(armature_reader));
 
   std::vector<std::string> file_lst;
   {

Modified: trunk/windstille/src/screen/armature_test.hpp
===================================================================
--- trunk/windstille/src/screen/armature_test.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/screen/armature_test.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_ARMATURE_TEST_HPP
 #define HEADER_WINDSTILLE_SCREEN_ARMATURE_TEST_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include "armature/armature.hpp"
 #include "armature/model.hpp"
 #include "screen.hpp"
@@ -28,8 +28,8 @@
 class ArmatureTest : public Screen
 {
 private:
-  std::auto_ptr<Model>    model;
-  std::auto_ptr<Armature> armature;
+  boost::scoped_ptr<Model>    model;
+  boost::scoped_ptr<Armature> armature;
   std::vector<Pose*> poses;
   
   int pose_idx;

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -36,10 +36,13 @@
     player(200,200),
     graph(new NavigationGraph())
 {
-  try {
+  try 
+  {
     FileReader reader = FileReader::parse("navigation.nav");
     graph->load(reader);
-  } catch(std::exception& err) {
+  }
+  catch(std::exception& err) 
+  {
     std::cout << "NavigationTest: " << err.what() << std::endl;
   }
 

Modified: trunk/windstille/src/screen/navigation_test.hpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/screen/navigation_test.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,8 +19,10 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_NAVIGATION_TEST_HPP
 #define HEADER_WINDSTILLE_SCREEN_NAVIGATION_TEST_HPP
 
+#include <boost/scoped_ptr.hpp>
+
 #include "navigation/navigation_graph.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 
 class NavigationGraph;
 class EdgePosition;
@@ -36,8 +38,8 @@
   Vector2f player;
   Vector2f old_player;
   
-  std::auto_ptr<NavigationGraph> graph;
-  std::auto_ptr<EdgePosition> connection;
+  boost::scoped_ptr<NavigationGraph> graph;
+  boost::scoped_ptr<EdgePosition> connection;
 
   EdgeHandle selected_edge;
   NodeHandle selected_node;

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_PARTICLE_VIEWER_HPP
 #define HEADER_WINDSTILLE_SCREEN_PARTICLE_VIEWER_HPP
 
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <boost/shared_ptr.hpp>
 #include "screen.hpp"
 #include "sprite2d/sprite.hpp"

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/scripting/util.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -19,7 +19,7 @@
 
 #include <iostream>
 #include <sstream>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <stdio.h>
 #include <iostream>
 

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -21,7 +21,7 @@
 
 #include <physfs.h>
 #include <iostream>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 #include <sstream>
 #include <stdexcept>
 #include "util/util.hpp"

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-22 19:40:36 UTC (rev 3010)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-23 12:50:41 UTC (rev 3011)
@@ -21,7 +21,7 @@
 #include <assert.h>
 #include <sstream>
 #include <iostream>
-#include <memory>
+#include <boost/scoped_ptr.hpp>
 
 #include "app/globals.hpp"
 #include "tile.hpp"



From grumbel at mail.berlios.de  Sun Aug 23 15:26:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 15:26:26 +0200
Subject: [Windstille-commit] r3012 - in trunk/windstille/src: app display
	editor engine font hud input objects screen sound sprite2d
	sprite3d tile util
Message-ID: <200908231326.n7NDQQsm020574@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 15:26:22 +0200 (Sun, 23 Aug 2009)
New Revision: 3012

Added:
   trunk/windstille/src/util/currenton.hpp
Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/display/opengl_window.cpp
   trunk/windstille/src/display/opengl_window.hpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/texture_manager.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/engine/camera.hpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/fonts.hpp
   trunk/windstille/src/hud/controller_help_window.hpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/conversation.hpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/dialog_manager.hpp
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/hud/speech_manager.hpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager.hpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/input_manager_sdl.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/game_session.hpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/screen/view.hpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/sound_manager.hpp
   trunk/windstille/src/sprite2d/manager.cpp
   trunk/windstille/src/sprite2d/manager.hpp
   trunk/windstille/src/sprite3d/manager.cpp
   trunk/windstille/src/sprite3d/manager.hpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_factory.hpp
Log:
Replaced manual current() handling with Currenton template mixin

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -53,16 +53,12 @@
 #include "util/system.hpp"
 #include "windstille_main.hpp"
 
-WindstilleMain* WindstilleMain::current_ = 0;
-
 WindstilleMain::WindstilleMain()
 {
-  current_ = this;
 }
 
 WindstilleMain::~WindstilleMain()
 {
-  current_ = 0;
 }
 
 int 

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -49,16 +49,12 @@
 
 #include <boost/scoped_ptr.hpp>
 
+#include "util/currenton.hpp"
 #include "screen/screen.hpp"
 
-class WindstilleMain
+class WindstilleMain : public Currenton<WindstilleMain>
 { 
-private:
-  static WindstilleMain* current_;
 public:
-  static WindstilleMain* current() { return current_; }
-
-public:
   WindstilleMain();
   ~WindstilleMain();
 

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -29,13 +29,8 @@
 #include "display/display.hpp"
 #include "app/config.hpp"
 
-OpenGLWindow* OpenGLWindow::s_current = 0;
-
 OpenGLWindow::OpenGLWindow()
 {
-  assert(!s_current);
-  s_current = this;
-
   atexit(SDL_Quit);
 
   SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 1); // vsync

Modified: trunk/windstille/src/display/opengl_window.hpp
===================================================================
--- trunk/windstille/src/display/opengl_window.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/display/opengl_window.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -22,14 +22,11 @@
 #include <SDL.h>
 #include <string>
 
-class OpenGLWindow
+#include "util/currenton.hpp"
+
+class OpenGLWindow : public Currenton<OpenGLWindow>
 {
 private:
-  static OpenGLWindow* s_current;
-public:
-  static OpenGLWindow* current() { return s_current; }
-
-private:
   SDL_Surface* m_window;
 
 public:

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -34,13 +34,10 @@
 #include "texture_packer.hpp"
 #include "util/util.hpp"
 
-SurfaceManager* SurfaceManager::current_ = 0;
 
 SurfaceManager::SurfaceManager()
   : texture_packer(new TexturePacker(Size(2048, 2048)))
 {
-  assert(current_ == 0);
-  current_ = this;
 }
 
 SurfaceManager::~SurfaceManager()
@@ -55,8 +52,6 @@
         }
     }
 #endif
-
-  current_ = 0;
 }
 
 Surface

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -25,7 +25,8 @@
 #include <map>
 
 #include "util/pathname.hpp"
-#include "texture.hpp"
+#include "util/currenton.hpp"
+#include "display/texture.hpp"
 
 class Surface;
 class TexturePacker;
@@ -33,14 +34,9 @@
 /**
  * This class keeps a list of loaded surfaces and manages loading new ones
  */
-class SurfaceManager
+class SurfaceManager : public Currenton<SurfaceManager>
 {
 private:
-  static SurfaceManager* current_; 
-public:
-  static SurfaceManager* current() { return current_; } 
-
-private:
   boost::scoped_ptr<TexturePacker> texture_packer;
   
   typedef std::map<Pathname, Surface> Surfaces;

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -31,12 +31,8 @@
 #include "software_surface.hpp"
 #include "physfs/physfs_sdl.hpp"
 
-TextureManager* TextureManager::s_current = 0;
-
 TextureManager::TextureManager()
 {
-  assert(!s_current);
-  s_current = this;
 }
 
 TextureManager::~TextureManager()

Modified: trunk/windstille/src/display/texture_manager.hpp
===================================================================
--- trunk/windstille/src/display/texture_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/display/texture_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -24,6 +24,7 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 
+#include "util/currenton.hpp"
 #include "util/pathname.hpp"
 
 class Texture;
@@ -31,14 +32,9 @@
 /**
  * This class manages a map of image files to OpenGL textures.
  */
-class TextureManager
+class TextureManager : public Currenton<TextureManager>
 {
-private:
-  static TextureManager* s_current; 
 public:
-  static TextureManager* current() { return s_current; }
-
-public:
   TextureManager();
   ~TextureManager();
 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -45,8 +45,6 @@
 
 #include "editor_window.hpp"
 
-EditorWindow* EditorWindow::current_ = 0;
-
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
   : ui_manager(Gtk::UIManager::create()),
     action_group(Gtk::ActionGroup::create()),
@@ -60,8 +58,6 @@
     zoom_tool(new ZoomTool()),
     current_tool(select_tool.get())
 {
-  current_ = this;
-
   set_title("Windstille Editor");
   set_default_size(1280, 800);
 
@@ -410,7 +406,6 @@
 
 EditorWindow::~EditorWindow()
 {
-  current_ = 0;
 }
 
 void

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -29,10 +29,11 @@
 #include <gtkmm/recentaction.h>
 #include <gtkmm/notebook.h>
 
-#include "selection.hpp"
-#include "minimap_widget.hpp"
-#include "object_selector.hpp"
-#include "layer_manager.hpp"
+#include "util/currenton.hpp"
+#include "editor/selection.hpp"
+#include "editor/minimap_widget.hpp"
+#include "editor/object_selector.hpp"
+#include "editor/layer_manager.hpp"
 
 class Tool;
 class WindstilleWidget;
@@ -42,14 +43,10 @@
 class NavgraphInsertTool;
 class NavgraphSelectTool;
 
-class EditorWindow : public Gtk::Window
+class EditorWindow : public Gtk::Window,
+                     public Currenton<EditorWindow>
 {
 private:
-  static EditorWindow* current_;
-public:
-  static EditorWindow* current() { return current_; }
-
-private:
   Gtk::VBox   vbox;
   Gtk::VBox   sidebar_vbox;
   Gtk::HBox   hbox;

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -22,8 +22,6 @@
 #include "display/display.hpp"
 #include "camera.hpp"
 
-Camera* Camera::current_ = 0;
-
 /**
  * Calculate the distance between two camera PathPoints, distance here
  * means not only the distance between the points itself, but also
@@ -65,7 +63,6 @@
   : pos(0, 0), zoom(1.0f)
 {
   path_pos = 0;
-  current_ = this;
   mode     = CAMERA_FOLLOW_PLAYER;
 }
 

Modified: trunk/windstille/src/engine/camera.hpp
===================================================================
--- trunk/windstille/src/engine/camera.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/engine/camera.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -19,12 +19,14 @@
 #ifndef HEADER_WINDSTILLE_ENGINE_CAMERA_HPP
 #define HEADER_WINDSTILLE_ENGINE_CAMERA_HPP
 
+#include "util/currenton.hpp"
+
 /** 
  * This class manages the virtual camera movement, it follows the
  * player, allows the player to watch around, might zoom out if
  * interesting stuff happens out of the screen and such
  */
-class Camera
+class Camera : public Currenton<Camera>
 {
 public:
   enum Mode { CAMERA_INACTIVE, CAMERA_FOLLOW_PLAYER, CAMERA_FOLLOW_PATH };
@@ -61,10 +63,7 @@
   std::vector<PathPoint> path;
   float path_pos;
 
-  static Camera* current_;
 public:
-  static Camera* current() { return current_; }
-
   Camera();
 
   void   update(float delta);

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -42,8 +42,6 @@
 // The table (works like a namespace here) where the game objects will appear
 static const char* OBJECTS_TABLE = "objects";
 
-ScriptManager* ScriptManager::current_ = 0;
-
 // FIXME: Replace this with sq_compilebufer()
 static SQInteger squirrel_read_char(SQUserPointer file)
 {
@@ -70,9 +68,6 @@
 
 ScriptManager::ScriptManager()
 {
-  assert(current_ == 0);
-  current_ = this;
-
   vm = sq_open(1024);
   if(vm == 0)
     {
@@ -129,7 +124,6 @@
   squirrel_vms.clear();
 
   sq_close(vm);
-  current_ = 0;
 }
 
 boost::shared_ptr<SquirrelThread>

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -26,6 +26,7 @@
 #include <iostream>
 #include <boost/shared_ptr.hpp>
 
+#include "util/currenton.hpp"
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
 
@@ -38,14 +39,9 @@
  * It contains functions for loading and starting script, keeps a list of
  * suspended scripts and receives wakeup events for them
  */
-class ScriptManager
+class ScriptManager : public Currenton<ScriptManager>
 {
-private:
-  static ScriptManager* current_;
 public:
-  static ScriptManager* current() { return current_; }
-
-public:
   enum WakeupEvent 
     {
       NO_EVENT,

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -51,15 +51,15 @@
 
 #include "sector.hpp"
 
-Sector* Sector::current_ = 0;
+//Sector* Sector::current_ = 0;
 
 Sector::Sector(const Pathname& arg_filename)
-  : filename(arg_filename),
-    collision_engine(new CollisionEngine()),
+  : collision_engine(new CollisionEngine()),
     navigation_graph(new NavigationGraph()),
+    filename(arg_filename),
     player(0)
 { 
-  current_ = this;
+  //current_ = this;
 
   if (debug) std::cout << "Creating new Sector" << std::endl;
   

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -25,6 +25,7 @@
 #include <boost/scoped_ptr.hpp>
 
 #include "util/pathname.hpp"
+#include "util/currenton.hpp"
 #include "display/color.hpp"
 
 class CollisionEngine;
@@ -39,14 +40,12 @@
 class TileMap;
 
 /** */
-class Sector
-{
-private: 
-  static Sector* current_;  
-public:
-  static Sector* current() { return current_; }
-  
+class Sector : public Currenton<Sector>
+{ 
 private:
+  boost::scoped_ptr<CollisionEngine> collision_engine;
+  boost::scoped_ptr<NavigationGraph> navigation_graph;
+
   Pathname filename;
   std::string name;
   std::string music;
@@ -66,9 +65,6 @@
   TileMap* interactive_tilemap;
   TileMap* interactivebackground_tilemap;
 
-  boost::scoped_ptr<CollisionEngine> collision_engine;
-  boost::scoped_ptr<NavigationGraph> navigation_graph;
-
   Player* player;
 
   void parse_file(const Pathname& filename);

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/font/fonts.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -23,15 +23,11 @@
 #include "font/fonts.hpp"
 #include "util/pathname.hpp"
 
-Fonts* Fonts::s_current = 0;
-
 Fonts::Fonts()
   : ttffont(new TTFFont(Pathname("fonts/VeraMono.ttf"), 14, BorderFontEffect(1, true))),
     vera12(new TTFFont(Pathname("fonts/Vera.ttf"),     12, BorderFontEffect(2, true))),
     vera20(new TTFFont(Pathname("fonts/Vera.ttf"),     20, BorderFontEffect(2, true)))
 {
-  assert(!s_current);
-  s_current = this;
 }
 
 Fonts::~Fonts()

Modified: trunk/windstille/src/font/fonts.hpp
===================================================================
--- trunk/windstille/src/font/fonts.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/font/fonts.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -21,16 +21,12 @@
 
 #include <boost/scoped_ptr.hpp>
 
-#include "ttf_font.hpp"
+#include "util/currenton.hpp"
+#include "font/ttf_font.hpp"
 
-class Fonts 
+class Fonts : public Currenton<Fonts>
 {
-private:
-  static Fonts* s_current;
 public:
-  static Fonts* current() { return s_current; }
-
-public:
   boost::scoped_ptr<TTFFont> ttffont;
   boost::scoped_ptr<TTFFont> vera12;
   boost::scoped_ptr<TTFFont> vera20;

Modified: trunk/windstille/src/hud/controller_help_window.hpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/controller_help_window.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -22,10 +22,13 @@
 #include "screen/screen.hpp"
 #include <boost/shared_ptr.hpp>
 
+#include "util/currenton.hpp"
+
 class ControllerHelpWindowImpl;
 
 /** */
-class ControllerHelpWindow : public Screen
+class ControllerHelpWindow : public Screen,
+                             public Currenton<ControllerHelpWindow>
 {
 private:
   void draw_button(const Vector2f& pos, bool pressed);
@@ -38,8 +41,6 @@
   void draw();
   void update(float delta, const Controller& controller);
 
-  static ControllerHelpWindow* current() { return current_; }
-
 private:
   boost::shared_ptr<ControllerHelpWindowImpl> impl;
   static ControllerHelpWindow* current_;

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -27,13 +27,10 @@
 #include "pda.hpp"
 #include "screen/game_session.hpp"
 
-Conversation* Conversation::current_ = 0;
-
 Conversation::Conversation()
   : pos(400, 300),
     time(0)
 {
-  current_ = this;
   active = false;
   selection = 0;
 }

Modified: trunk/windstille/src/hud/conversation.hpp
===================================================================
--- trunk/windstille/src/hud/conversation.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/conversation.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -21,11 +21,14 @@
 
 #include <vector>
 #include <string>
+
 #include "screen/screen.hpp"
+#include "util/currenton.hpp"
 
 /** Displays a list of text strings from which the user can select
     one, used to form multiple-choice dialogs */
-class Conversation : public Screen
+class Conversation : public Screen,
+                     public Currenton<Conversation>
 {
 private:
   Vector2f pos;
@@ -48,10 +51,7 @@
   typedef std::vector<Choice> Choices;
   Choices choices;
   
-  static Conversation* current_;
-public:
-  static Conversation* current() { assert(current_); return current_; }
-  
+public:  
   Conversation();
 
   void draw();

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -30,11 +30,8 @@
 #include "util/pathname.hpp"
 #include "app/config.hpp"
 
-DialogManager* DialogManager::current_ = 0;
-
 DialogManager::DialogManager()
 {
-  current_ = this;
 }
 
 DialogManager::~DialogManager()

Modified: trunk/windstille/src/hud/dialog_manager.hpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/dialog_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -22,22 +22,19 @@
 #include <boost/scoped_ptr.hpp>
 #include <vector>
 #include <string>
-#include "sprite2d/sprite.hpp"
+
 #include "app/globals.hpp"
 #include "screen/screen.hpp"
+#include "sprite2d/sprite.hpp"
+#include "util/currenton.hpp"
 
 class TextArea;
 
 /** */
-class DialogManager : public Screen
+class DialogManager : public Screen,
+                      public Currenton<DialogManager>
 {
 private:
-  static DialogManager* current_;
-
-public:
-  static DialogManager* current() { return current_; }
-
-private:
   void create_text();
   
   Sprite portrait;

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -21,8 +21,6 @@
 #include "font/fonts.hpp"
 #include "speech_manager.hpp"
 
-SpeechManager* SpeechManager::current_ = 0;
-
 class Speech 
 {
 public:
@@ -80,8 +78,6 @@
 SpeechManager::SpeechManager()
   : speech_id(1)
 {
-  assert(current_ == 0);
-  current_ = this;
 }
 
 SpeechManager::~SpeechManager()
@@ -89,8 +85,6 @@
   for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
     delete *i;
   speeches.clear();
-
-  current_ = 0;
 }
 
 int

Modified: trunk/windstille/src/hud/speech_manager.hpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/hud/speech_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -21,22 +21,19 @@
 
 #include <string>
 #include <vector>
+
 #include "math/vector2f.hpp"
 #include "display/color.hpp"
+#include "util/currenton.hpp"
 
 class Entity;
 class Speech;
 
 /** The SpeechManager displays speech text over characters or
     objects, similar to what you see in LucasArts games */
-class SpeechManager
+class SpeechManager : public Currenton<SpeechManager>
 {
 private:
-  static SpeechManager* current_;
-public:
-  static SpeechManager* current() { return current_; }
-
-private:
   typedef std::vector<Speech*> Speeches;
   Speeches speeches;
   int speech_id;

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -27,13 +27,9 @@
 #include "input_manager_impl.hpp"
 #include "input_manager.hpp"
 
-InputManager* InputManager::s_current = 0;
-
 InputManager::InputManager()
   : impl(new InputManagerSDL())
 {
-  assert(!s_current);
-  s_current = this;
 }
 
 InputManager::~InputManager()

Modified: trunk/windstille/src/input/input_manager.hpp
===================================================================
--- trunk/windstille/src/input/input_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/input/input_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -23,20 +23,16 @@
 #include <vector>
 #include <boost/scoped_ptr.hpp>
 
-#include "controller.hpp"
-#include "input_event.hpp"
+#include "input/controller.hpp"
+#include "input/input_event.hpp"
+#include "util/currenton.hpp"
 
 class InputManagerImpl;
 
 /** */
-class InputManager
+class InputManager : public Currenton<InputManager>
 {
-private:
-  static InputManager* s_current;
 public:
-  static InputManager* current() { return s_current; }
-
-public:
   InputManager();
   ~InputManager();
 

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -33,8 +33,6 @@
 #include "wiimote.hpp"
 #endif
 
-InputManagerSDL* InputManagerSDL::current_ = 0;
-
 const int dead_zone = 0;
 
 class InputManagerSDLImpl
@@ -229,8 +227,6 @@
 InputManagerSDL::InputManagerSDL()
   : impl(new InputManagerSDLImpl)
 {
-  current_ = this;
-
   for (int i = 0; i < SDLK_LAST; ++i) {
     char* key_name = SDL_GetKeyName(static_cast<SDLKey>(i));
     impl->keyidmapping[key_name] = static_cast<SDLKey>(i);

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -21,8 +21,10 @@
 
 #include <SDL.h>
 #include <boost/scoped_ptr.hpp>
-#include "input_manager_impl.hpp"
 
+#include "input/input_manager_impl.hpp"
+#include "util/currenton.hpp"
+
 class FileReader;
 class InputManagerSDLImpl;
 
@@ -92,14 +94,10 @@
 };
 
 /** */
-class InputManagerSDL : public InputManagerImpl
+class InputManagerSDL : public InputManagerImpl,
+                        public Currenton<InputManagerSDL>
 {
-private:
-  static InputManagerSDL* current_;
 public:
-  static InputManagerSDL* current() { return current_; }
-
-public:
   InputManagerSDL();
   virtual ~InputManagerSDL();
 

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/objects/player.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -43,13 +43,9 @@
 static const float WALK_SPEED = 128.0;
 static const float RUN_SPEED = 256.0;
 
-Player* Player::current_ = 0;
-
 Player::Player () 
  : state(STAND)
 {
-  current_ = this;
-
   sprite = Sprite3D(Pathname("models/characters/jane/jane.wsprite"));
   pos.x = 320;
   pos.y = 200;
@@ -80,7 +76,6 @@
 
 Player::~Player()
 {
-  current_ = 0;
 }
 
 void

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/objects/player.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -27,13 +27,15 @@
 #include "sound/sound_source.hpp"
 #include "sprite2d/sprite.hpp"
 #include "sprite3d/sprite3d.hpp"
+#include "util/currenton.hpp"
 
 class Controller;
 class Contact;
 class LaserPointer;
 class Weapon;
 
-class Player : public Entity
+class Player : public Entity,
+               public Currenton<Player>
 {
 private:
   Sprite3D sprite;
@@ -163,11 +165,6 @@
   void try_set_action(const std::string& name, float speed = 1.0);
 
   Direction get_direction() const;
-
-public:
-  static Player* current() { return current_; }
-private:
-  static Player* current_;
 };
 
 #endif

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -55,8 +55,6 @@
 #include "view.hpp"
 
 #include "game_session.hpp"
-
-GameSession* GameSession::current_ = 0; 
 
 class GameSessionImpl
 {
@@ -126,8 +124,6 @@
 GameSession::GameSession(const Pathname& arg_filename)
   : impl(new GameSessionImpl())
 {
-  current_ = this;
-
   impl->filename = arg_filename;
 
   if (debug) std::cout << "Creating new GameSession" << std::endl;
@@ -139,7 +135,6 @@
 
 GameSession::~GameSession()
 {
-  current_ = 0;
 }
 
 void

Modified: trunk/windstille/src/screen/game_session.hpp
===================================================================
--- trunk/windstille/src/screen/game_session.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/screen/game_session.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -26,8 +26,9 @@
 #include "app/globals.hpp"
 #include "display/scene_context.hpp"
 #include "hud/controller_help_window.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 #include "sprite2d/sprite.hpp"
+#include "util/currenton.hpp"
 
 class PDA;
 class EnergyBar;
@@ -41,16 +42,12 @@
 
 class GameSessionImpl;
 
-class GameSession : public Screen
+class GameSession : public Screen,
+                    public Currenton<GameSession>
 {
 public:
   enum ControlState { DIALOG, GAME, CONVERSATION };
-private:
-  static GameSession* current_; 
 
-public:
-  static GameSession* current() { return current_; }
-
   GameSession(const Pathname& arg_filename);
   virtual ~GameSession();
 

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/screen/view.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -24,14 +24,12 @@
 #include "input/input_manager.hpp"
 #include "view.hpp"
 
-View* View::current_ = 0;
 
 View::View()
   : state(Display::get_width(), Display::get_height()),
     zoom(1.0), 
     transform(0, 0)
 {
-  current_ = this;
 }
 
 void

Modified: trunk/windstille/src/screen/view.hpp
===================================================================
--- trunk/windstille/src/screen/view.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/screen/view.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -22,13 +22,14 @@
 #include "display/graphic_context_state.hpp"
 #include "engine/camera.hpp"
 #include "math/vector2f.hpp"
+#include "util/currenton.hpp"
 
 class Controller;
 class SceneContext;
 
 /** This class is the gui component which renders the world to the
     screen */
-class View
+class View : public Currenton<View>
 {
 private:
   GraphicContextState state;
@@ -50,11 +51,6 @@
 
   void draw(SceneContext& gc);
   void update(float delta);
-
-  static View* current() { return current_; }
-
-protected:
-  static View* current_;
 };
 
 #endif

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -29,7 +29,6 @@
 
 #include "sound_manager.hpp"
 
-SoundManager* SoundManager::current_ = 0;
 
 SoundManager::SoundManager()
   : device(0), 
@@ -37,9 +36,6 @@
     sound_enabled(false), 
     music_enabled(true)
 {
-  assert(current_ == 0);
-  current_ = this; 
-
   try 
     {
       device = alcOpenDevice(0);
@@ -98,8 +94,6 @@
     {
       alcCloseDevice(device);
     }
-
-  current_ = 0; 
 }
 
 ALuint

Modified: trunk/windstille/src/sound/sound_manager.hpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/sound/sound_manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -29,6 +29,7 @@
 #include <AL/al.h>
 
 #include "math/vector2f.hpp"
+#include "util/currenton.hpp"
 
 typedef void* SoundHandle;
 
@@ -36,7 +37,7 @@
 class SoundSource;
 class StreamSoundSource;
 
-class SoundManager
+class SoundManager : public Currenton<SoundManager>
 {
 public:
   SoundManager();
@@ -97,11 +98,6 @@
 
   bool music_enabled;
   std::string current_music;
-
-private:
-  static SoundManager* current_; 
-public:
-  static SoundManager* current() { return current_; } 
 };
 
 #endif

Modified: trunk/windstille/src/sprite2d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/sprite2d/manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -26,12 +26,8 @@
 #include "sprite2d/data.hpp"
 #include "sprite2d/sprite.hpp"
 
-SpriteManager* SpriteManager::s_current = 0;
-
 SpriteManager::SpriteManager()
 {
-  assert(!s_current);
-  s_current = this;
 }
 
 SpriteManager::~SpriteManager()

Modified: trunk/windstille/src/sprite2d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/sprite2d/manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -24,19 +24,16 @@
 #include <map>
 #include <boost/shared_ptr.hpp>
 
+#include "util/currenton.hpp"
+
 class Pathname;
 class SpriteData;
 
 typedef boost::shared_ptr<SpriteData> SpriteDataPtr;
 
-class SpriteManager
+class SpriteManager : public Currenton<SpriteManager>
 {
-private:
-  static SpriteManager* s_current;
 public:
-  static SpriteManager* current() { return s_current; }
-
-public:
   SpriteManager();
   ~SpriteManager();
 

Modified: trunk/windstille/src/sprite3d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/sprite3d/manager.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -23,12 +23,8 @@
 
 namespace sprite3d {
 
-Manager* Manager::s_current = 0;
-
 Manager::Manager()
 {
-  assert(!s_current);
-  s_current = this;
 }
 
 Manager::~Manager()

Modified: trunk/windstille/src/sprite3d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/sprite3d/manager.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -23,19 +23,15 @@
 #include <map>
 
 #include "util/pathname.hpp"
+#include "util/currenton.hpp"
 
 namespace sprite3d {
 
 class Data;
 
-class Manager
+class Manager : public Currenton<Manager>
 {
-private:
-  static Manager* s_current;
 public:
-  static Manager* current() { return s_current; }
-
-public:
   Manager();
   ~Manager();
 

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -34,8 +34,6 @@
 #include "display/texture.hpp"
 #include "physfs/physfs_sdl.hpp"
 
-TileFactory* TileFactory::current_ = 0;
-
 /** Check if the given region of the given image is fully transparent */
 bool surface_empty(const SoftwareSurface& image, int sx, int sy, int w, int h)
 { 
@@ -55,9 +53,6 @@
 
 TileFactory::TileFactory(const std::string& filename)
 {
-  assert(!current_);
-  current_ = this;
-
   packers.push_back(new TilePacker(1024, 1024));
   packers.push_back(new TilePacker(1024, 1024));
   color_packer     = 0;

Modified: trunk/windstille/src/tile/tile_factory.hpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/tile/tile_factory.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -21,13 +21,15 @@
 
 #include <map>
 #include <string>
-#include "tile_description.hpp"
 
+#include "tile/tile_description.hpp"
+#include "util/currenton.hpp"
+
 class Tile;
 class TilePacker;
 
 /** */
-class TileFactory
+class TileFactory : public Currenton<TileFactory>
 {
 private:
   typedef std::vector<Tile*> Tiles;
@@ -36,8 +38,6 @@
   TilePackers packers;
   int color_packer;
 
-  static TileFactory* current_;
-
   friend class TileDescription;
 
   std::vector<TileDescription*> descriptions;
@@ -63,9 +63,6 @@
    */
   void pack(int id, int colmap, const SoftwareSurface& image, const Rect& rect);
 
-  /** Access the default TileFactor*/
-  static TileFactory* current() { return current_; }
-
 private:
   void parse_tiles(FileReader& reader);
 };

Added: trunk/windstille/src/util/currenton.hpp
===================================================================
--- trunk/windstille/src/util/currenton.hpp	2009-08-23 12:50:41 UTC (rev 3011)
+++ trunk/windstille/src/util/currenton.hpp	2009-08-23 13:26:22 UTC (rev 3012)
@@ -0,0 +1,48 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_UTIL_CURRENTON_HPP
+#define HEADER_WINDSTILLE_UTIL_CURRENTON_HPP
+
+#include <assert.h>
+
+/** 
+ *   A 'Currenton' allows access to the currently active instance of a
+ *   class. It is kind of like a singleton, but without handling the
+ *   object construction itself or in other words its a glorified
+ *   global variable that points to the instance of a class.
+ */
+template<class C>
+class Currenton
+{
+private:
+  static C* s_current; 
+
+protected:
+  Currenton()  { assert(!s_current); s_current = static_cast<C*>(this); }
+  ~Currenton() { s_current = 0; }
+  
+public:
+  static C* current() { return s_current; }
+};
+
+template<class C> C* Currenton<C>::s_current = 0;
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/util/currenton.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Sun Aug 23 18:14:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 18:14:44 +0200
Subject: [Windstille-commit] r3013 - trunk/windstille
Message-ID: <200908231614.n7NGEig2018666@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 18:14:44 +0200 (Sun, 23 Aug 2009)
New Revision: 3013

Modified:
   trunk/windstille/SConscript
   trunk/windstille/SConstruct
Log:
Turned build process into a class

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-23 13:26:22 UTC (rev 3012)
+++ trunk/windstille/SConscript	2009-08-23 16:14:44 UTC (rev 3013)
@@ -15,8 +15,10 @@
 ##  You should have received a copy of the GNU General Public License
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-import glob
+import time
 
+start_time = time.time()
+
 CacheDir('cache')
 
 debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
@@ -94,176 +96,209 @@
     return output
 
 
-conf_env = Environment()
+class Project:
+    def __init__(self):
+        self.features = {
+            "64bit" : 0,
+            "cwiid" : 0
+            }
+        
 
-opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
-opts.Add('CPPPATH', 'Additional preprocessor paths')
-opts.Add('CPPFLAGS', 'Additional preprocessor flags')
-opts.Add('CPPDEFINES', 'defined constants')
-opts.Add('LIBPATH', 'Additional library paths')
-opts.Add('LIBS', 'Additional libraries')
-opts.Add('CCFLAGS', 'C Compiler flags')
-opts.Add('CXXFLAGS', 'C++ Compiler flags')
-opts.Add('LINKFLAGS', 'Linker Compiler flags')
-opts.Add('CC', 'C Compiler')
-opts.Add('CXX', 'C++ Compiler')  
-opts.Update(conf_env)
-opts.Save('options.cache', conf_env)
-Help(opts.GenerateHelpText(conf_env))
+    def build_all(self):
+        self.configure()
+        self.build_squirrel()
+        self.build_miniswig()
+        self.build_binreloc()
+        self.build_wstlib()
+        self.build_windstille()
+        self.build_windstille_editor()
+        self.build_windstille_data()
 
-# FIXME: Giving multiple CCFLAGS doesn't work since they have to be
-# broken down to a list
+    def configure(self):
+        conf_env = Environment()
 
-features = {
-    "64bit" : 0,
-    "cwiid" : 0
-    }
+        opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
+        opts.Add('CPPPATH', 'Additional preprocessor paths')
+        opts.Add('CPPFLAGS', 'Additional preprocessor flags')
+        opts.Add('CPPDEFINES', 'defined constants')
+        opts.Add('LIBPATH', 'Additional library paths')
+        opts.Add('LIBS', 'Additional libraries')
+        opts.Add('CCFLAGS', 'C Compiler flags')
+        opts.Add('CXXFLAGS', 'C++ Compiler flags')
+        opts.Add('LINKFLAGS', 'Linker Compiler flags')
+        opts.Add('CC', 'C Compiler')
+        opts.Add('CXX', 'C++ Compiler')  
+        opts.Update(conf_env)
+        opts.Save('options.cache', conf_env)
+        Help(opts.GenerateHelpText(conf_env))
 
-conf = Configure(conf_env, custom_tests = { 'Check32bit' : Check32bit,
-                                            'CheckYacc'  : CheckYacc,
-                                            'CheckLex'   : CheckLex})
-if conf.Check32bit() == "64bit":
-    # conf.env.Append(CXXFLAGS="-D_SQ64")
-    features["64bit"] = 1
+        # FIXME: Giving multiple CCFLAGS doesn't work since they have to be
+        # broken down to a list
 
-if conf.CheckLib('cwiid'):
-    features["cwiid"] = 1
+        conf = Configure(conf_env, custom_tests = { 'Check32bit' : Check32bit,
+                                                    'CheckYacc'  : CheckYacc,
+                                                    'CheckLex'   : CheckLex})
+        if conf.Check32bit() == "64bit":
+            # conf.env.Append(CXXFLAGS="-D_SQ64")
+            self.features["64bit"] = 1
 
-if not conf.CheckLex():
-    print "lex or flex not found, aborting."
-    Exit(1)
+        if conf.CheckLib('cwiid'):
+            self.features["cwiid"] = 1
 
-if not conf.CheckYacc():
-    print "yacc or bison not found, aborting."
-    Exit(1)
+        if not conf.CheckLex():
+            print "lex or flex not found, aborting."
+            Exit(1)
 
-conf_env = conf.Finish()
-
-squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],
-                           CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
+        if not conf.CheckYacc():
+            print "yacc or bison not found, aborting."
+            Exit(1)
 
-if features['64bit']:
-    squirrel_env.Append(CPPDEFINES = '_SQ64')
+        conf_env = conf.Finish()
 
-squirrel_env.Library('squirrel',
-                     Glob('external/SQUIRREL2/squirrel/*.cpp') +
-                     Glob('external/SQUIRREL2/sqstdlib/*.cpp'))
+    def build_squirrel(self):
+        squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],
+                                   CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
 
-
-miniswig_env = Environment(CPPPATH=['.', 'external/miniswig/'],
-                           CXXFILESUFFIX = ".cpp",
-                           YACCFLAGS=['-d', '--no-lines'])
+        if self.features['64bit']:
+            squirrel_env.Append(CPPDEFINES = '_SQ64')
 
-miniswig_bin = miniswig_env.Program('external/miniswig/miniswig',
-                                    ['external/miniswig/parser.yy',
-                                     'external/miniswig/lexer.ll',
-                                     'external/miniswig/create_docu.cpp',
-                                     'external/miniswig/xmlwriter.cpp',
-                                     'external/miniswig/create_wrapper.cpp',
-                                     'external/miniswig/main.cpp',
-                                     'external/miniswig/tree.cpp'])
+        self.squirrel_lib = squirrel_env.StaticLibrary('squirrel',
+                                                       Glob('external/SQUIRREL2/squirrel/*.cpp') +
+                                                       Glob('external/SQUIRREL2/sqstdlib/*.cpp'))
 
-env = Environment(MINISWIG='external/miniswig/miniswig')
 
-env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
-                        ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
-            ['src/scripting/interface.hpp',
-             'src/scripting/game_objects.hpp'])
+    def build_miniswig(self):
+        miniswig_env = Environment(CPPPATH=['.', 'external/miniswig/'],
+                                   CXXFILESUFFIX = ".cpp",
+                                   YACCFLAGS=['-d', '--no-lines'])
 
-env.Depends(env.Command(['src/scripting/wrapper.cpp', 'src/scripting/wrapper.hpp'], 'src/scripting/miniswig.tmp',
-                        ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
-            miniswig_bin)
-
+        miniswig_bin = miniswig_env.Program('external/miniswig/miniswig',
+                                            ['external/miniswig/parser.yy',
+                                             'external/miniswig/lexer.ll',
+                                             'external/miniswig/create_docu.cpp',
+                                             'external/miniswig/xmlwriter.cpp',
+                                             'external/miniswig/create_wrapper.cpp',
+                                             'external/miniswig/main.cpp',
+                                             'external/miniswig/tree.cpp'])
 
-binreloc_lib = StaticLibrary("binreloc", ["external/binreloc-2.0/binreloc.c"], CPPDEFINES=["ENABLE_BINRELOC"])
+        env = Environment(MINISWIG='external/miniswig/miniswig')
 
-wstlib_env    = Environment(CPPPATH=['src'], CXXFLAGS=debug_cxxflags)
-util_lib      = wstlib_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
-math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
-navgraph_lib  = wstlib_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
-particles_lib = wstlib_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
+        env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
+                                ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
+                    ['src/scripting/interface.hpp',
+                     'src/scripting/game_objects.hpp'])
 
-# libphysfs
-physfs_env = wstlib_env.Clone()
-physfs_env.ParseConfig('sdl-config --cflags --libs')
-physfs_lib = physfs_env.StaticLibrary('src/physfs', Glob('src/physfs/*.cpp'))
+        env.Depends(env.Command(['src/scripting/wrapper.cpp', 'src/scripting/wrapper.hpp'], 'src/scripting/miniswig.tmp',
+                                ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} "+
+                                 "--module windstille --select-namespace Scripting"]),
+                    miniswig_bin)
 
-# libdisplay
-display_env = wstlib_env.Clone()
-display_env.ParseConfig('sdl-config --cflags --libs')
-display_env.ParseConfig('freetype-config --libs --cflags')
-display_lib = display_env.StaticLibrary('display', 
-                                        Glob('src/font/*.cpp') +
-                                        Glob('src/display/*.cpp') +
-                                        Glob('src/sprite2d/*.cpp') +
-                                        Glob('src/sprite3d/*.cpp'))
-
-windstille_env = Environment(CXXFLAGS=debug_cxxflags,
-                  CPPPATH=['src', '.', 'external/SQUIRREL2/include/'],
-                  LIBPATH=['external/'],
-                  LIBS=[particles_lib, navgraph_lib, display_lib, physfs_lib, util_lib, math_lib,
-                        'GL', 'GLU', 'GLEW',
-                        'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',
-                        # FIXME: Add configure checks for exact boost library name
-                        'boost_signals-mt', 'boost_filesystem-mt'])
+    def build_binreloc(self):
+        self.binreloc_lib = StaticLibrary("binreloc", ["external/binreloc-2.0/binreloc.c"], CPPDEFINES=["ENABLE_BINRELOC"])
 
-windstille_env.ParseConfig('sdl-config --cflags --libs')
-windstille_env.ParseConfig('freetype-config --libs --cflags')
+    def build_wstlib(self):
+        wstlib_env    = Environment(CPPPATH=['src', 'external/binreloc-2.0/', "src/scripting/"],
+                                    CXXFLAGS=debug_cxxflags,
+                                    CPPDEFINES=["HAVE_BINRELOC"])
+        self.util_lib      = wstlib_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
+        self.math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
+        self.navgraph_lib  = wstlib_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
+        self.particles_lib = wstlib_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
+        
+        # libphysfs
+        physfs_env = wstlib_env.Clone()
+        physfs_env.ParseConfig('sdl-config --cflags --libs')
+        self.physfs_lib = physfs_env.StaticLibrary('src/physfs', Glob('src/physfs/*.cpp'))
 
-if features['64bit']:
-    windstille_env.Append(CPPDEFINES = '_SQ64')
+        # libdisplay
+        display_env = wstlib_env.Clone()
+        display_env.ParseConfig('sdl-config --cflags --libs')
+        display_env.ParseConfig('freetype-config --libs --cflags')
+        self.display_lib = display_env.StaticLibrary('display', 
+                                                     Glob('src/font/*.cpp') +
+                                                     Glob('src/display/*.cpp') +
+                                                     Glob('src/scenegraph/*.cpp') +
+                                                     Glob('src/sprite2d/*.cpp') +
+                                                     Glob('src/sprite3d/*.cpp'))
 
-if features['cwiid']:
-    windstille_env.Append(CPPDEFINES = 'HAVE_CWIID')
-    windstille_env.Append(LIBS = 'cwiid')
+    def build_windstille(self):
+        windstille_env = Environment(CXXFLAGS=debug_cxxflags,
+                                     CPPPATH=['src', '.', 'external/SQUIRREL2/include/', 'src/scripting/'],
+                                     CPPDEFINES=["HAVE_BINRELOC"],
+                                     LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, self.physfs_lib,
+                                           self.util_lib, self.math_lib,
+                                           self.binreloc_lib, self.squirrel_lib, 
+                                           'GL', 'GLU', 'GLEW',
+                                           'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',
+                                           # FIXME: Add configure checks for exact boost library name
+                                           'boost_signals-mt', 'boost_filesystem-mt'])
 
-windstille_env.Program('windstille',
-                       Glob('src/app/*.cpp') +
-                       Glob('src/armature/*.cpp') +
-                       Glob('src/collision/*.cpp') +
-                       Glob('src/engine/*.cpp') +
-                       Glob('src/gui/*.cpp') +
-                       Glob('src/hud/*.cpp') +
-                       Glob('src/input/*.cpp') +
-                       Glob('src/objects/*.cpp') +
-                       Glob('src/properties/*.cpp') +
-                       Glob('src/screen/*.cpp') +
-                       Glob('src/scripting/*.cpp') +
-                       Glob('src/sound/*.cpp') +
-                       Glob('src/tile/*.cpp'))
-
-editor_env = Environment(CPPPATH=['src'],
-                         CXXFLAGS=debug_cxxflags,
-                         LIBS = [particles_lib, navgraph_lib, display_lib, util_lib, physfs_lib, math_lib, binreloc_lib,
-                                 'GL', 'GLEW', 'SDL_image', 'physfs'])
+        windstille_env.ParseConfig('sdl-config --cflags --libs')
+        windstille_env.ParseConfig('freetype-config --libs --cflags')
 
-editor_env.ParseConfig('Magick++-config --libs --cppflags')
-editor_env.ParseConfig('sdl-config --cflags --libs')
-editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4')
-editor_env.ParseConfig('pkg-config --cflags --libs gtkglextmm-1.2')
-editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
-editor_env.ParseConfig('pkg-config --cflags --libs libpng')
+        if self.features['64bit']:
+            windstille_env.Append(CPPDEFINES = '_SQ64')
 
-editor_env.Program('windstille-editor', Glob('src/editor/*.cpp'))
-
-data_env = Environment()
+        if self.features['cwiid']:
+            windstille_env.Append(CPPDEFINES = 'HAVE_CWIID')
+            windstille_env.Append(LIBS = 'cwiid')
 
-data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
-                                                 src_suffix = ".xcf",
-                                                 suffix = ".png") })
+        windstille_env.Program('windstille',
+                               Glob('src/app/*.cpp') +
+                               Glob('src/armature/*.cpp') +
+                               Glob('src/collision/*.cpp') +
+                               Glob('src/engine/*.cpp') +
+                               Glob('src/gui/*.cpp') +
+                               Glob('src/hud/*.cpp') +
+                               Glob('src/input/*.cpp') +
+                               Glob('src/objects/*.cpp') +
+                               Glob('src/properties/*.cpp') +
+                               Glob('src/screen/*.cpp') +
+                               Glob('src/scripting/*.cpp') +
+                               Glob('src/sound/*.cpp') +
+                               Glob('src/tile/*.cpp'))
 
-for filename in Glob("data/images/decal/*.xcf"):
-    data_env.xcf2png(filename)
+    def build_windstille_editor(self):
+        editor_env = Environment(CPPPATH=['src'],
+                                 CPPDEFINES=["HAVE_BINRELOC"],
+                                 CXXFLAGS=debug_cxxflags,
+                                 LIBS = [self.particles_lib, self.navgraph_lib, self.display_lib,
+                                         self.util_lib, self.physfs_lib, self.math_lib, self.binreloc_lib,
+                                         'GL', 'GLEW', 'SDL_image', 'physfs', 'boost_filesystem-mt'])
 
-data_files = ["data/sounds/*.wav",
-              "data/sounds/*.ogg",
-              "data/fonts/*.ttf",
-              "data/images/*.png",
-              "data/images/*/*.png",
-              "data/images/*/*/*.png"]
+        editor_env.ParseConfig('Magick++-config --libs --cppflags')
+        editor_env.ParseConfig('sdl-config --cflags --libs')
+        editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4')
+        editor_env.ParseConfig('pkg-config --cflags --libs gtkglextmm-1.2')
+        editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
+        editor_env.ParseConfig('pkg-config --cflags --libs libpng')
 
-for pattern in data_files:
-    for filename in Glob(pattern):
-        File(filename)
+        editor_env.Program('windstille-editor', Glob('src/editor/*.cpp'))
+
+    def build_windstille_data(self):
+        data_env = Environment()
+
+        data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
+                                                         src_suffix = ".xcf",
+                                                         suffix = ".png") })
+
+        for filename in Glob("data/images/decal/*.xcf"):
+            data_env.xcf2png(filename)
+
+        data_files = ["data/sounds/*.wav",
+                      "data/sounds/*.ogg",
+                      "data/fonts/*.ttf",
+                      "data/images/*.png",
+                      "data/images/*/*.png",
+                      "data/images/*/*/*.png"]
+
+        for pattern in data_files:
+            for filename in Glob(pattern):
+                File(filename)
 
+project = Project()
+project.build_all()
+
+print "Time reading SConscript: %.2fsec" % (time.time() - start_time)
+
 # EOF #

Modified: trunk/windstille/SConstruct
===================================================================
--- trunk/windstille/SConstruct	2009-08-23 13:26:22 UTC (rev 3012)
+++ trunk/windstille/SConstruct	2009-08-23 16:14:44 UTC (rev 3013)
@@ -15,7 +15,7 @@
 ##  You should have received a copy of the GNU General Public License
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-SConscript('SConscript')
-# SConscript('SConscript', variant_dir='build')
+# SConscript('SConscript')
+SConscript('SConscript', variant_dir='build', duplicate=0)
 
 # EOF #



From grumbel at mail.berlios.de  Sun Aug 23 18:15:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 18:15:17 +0200
Subject: [Windstille-commit] r3014 - in trunk/windstille/src: . engine hud
	scenegraph screen util
Message-ID: <200908231615.n7NGFHcd018860@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 18:15:16 +0200 (Sun, 23 Aug 2009)
New Revision: 3014

Added:
   trunk/windstille/src/scenegraph/
   trunk/windstille/src/scenegraph/scene_graph.cpp
   trunk/windstille/src/scenegraph/scene_graph.hpp
Modified:
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/util/currenton.hpp
Log:
Added scenegraph, mostly empty dummy

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -47,6 +47,7 @@
 #include "objects/scriptable_object.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "scripting/squirrel_error.hpp"
+#include "scenegraph/scene_graph.hpp"
 #include "squirrel_thread.hpp"
 
 #include "sector.hpp"
@@ -56,6 +57,7 @@
 Sector::Sector(const Pathname& arg_filename)
   : collision_engine(new CollisionEngine()),
     navigation_graph(new NavigationGraph()),
+    scene_graph(new SceneGraph()),
     filename(arg_filename),
     player(0)
 { 

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -38,6 +38,7 @@
 class SpawnPoint;
 class SquirrelThread;
 class TileMap;
+class SceneGraph;
 
 /** */
 class Sector : public Currenton<Sector>
@@ -45,6 +46,7 @@
 private:
   boost::scoped_ptr<CollisionEngine> collision_engine;
   boost::scoped_ptr<NavigationGraph> navigation_graph;
+  boost::scoped_ptr<SceneGraph>      scene_graph;
 
   Pathname filename;
   std::string name;

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -92,7 +92,7 @@
 void
 InventoryImpl::draw()
 {
-  Vector2f pos = Vector2f(400, 300); // View::current()->screen_Player::currently->get_pos();
+  Vector2f pos = Vector2f(400, 300);
 
   int num_items = items.size();
   float step_angle = (2*M_PI) / num_items;

Added: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -0,0 +1,25 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "scene_graph.hpp"
+
+SceneGraph::SceneGraph()
+{
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/scene_graph.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/scenegraph/scene_graph.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -0,0 +1,42 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_HPP
+
+#include <boost/shared_ptr.hpp>
+
+class DrawingRequest;
+
+class SceneGraph
+{
+private:
+public:
+  SceneGraph();
+
+  void add_drawable(boost::shared_ptr<DrawingRequest> drawable);
+  void remove_drawable(boost::shared_ptr<DrawingRequest> drawable);
+
+private:
+  SceneGraph(const SceneGraph&);
+  SceneGraph& operator=(const SceneGraph&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/scene_graph.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/screen/view.cpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -17,13 +17,13 @@
 */
 
 #include <SDL.h>
+
 #include "display/display.hpp"
 #include "collision/collision_engine.hpp"
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
 #include "input/input_manager.hpp"
 #include "view.hpp"
-
 
 View::View()
   : state(Display::get_width(), Display::get_height()),

Modified: trunk/windstille/src/util/currenton.hpp
===================================================================
--- trunk/windstille/src/util/currenton.hpp	2009-08-23 16:14:44 UTC (rev 3013)
+++ trunk/windstille/src/util/currenton.hpp	2009-08-23 16:15:16 UTC (rev 3014)
@@ -23,9 +23,10 @@
 
 /** 
  *   A 'Currenton' allows access to the currently active instance of a
- *   class. It is kind of like a singleton, but without handling the
- *   object construction itself or in other words its a glorified
- *   global variable that points to the instance of a class.
+ *   class via the static current() function. It is kind of like a
+ *   singleton, but without handling the object construction itself or
+ *   in other words its a glorified global variable that points to the
+ *   current instance of a class.
  */
 template<class C>
 class Currenton



From grumbel at mail.berlios.de  Sun Aug 23 19:42:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 19:42:45 +0200
Subject: [Windstille-commit] r3015 - in trunk/windstille: . src/editor
Message-ID: <200908231742.n7NHgjaJ014054@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 19:42:44 +0200 (Sun, 23 Aug 2009)
New Revision: 3015

Modified:
   trunk/windstille/SConscript
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_rotate_control_point.cpp
   trunk/windstille/src/editor/decal_scale_control_point.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/minimap_widget.cpp
   trunk/windstille/src/editor/navgraph_insert_tool.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/particle_system_object_model.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/tool.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/zoom_tool.cpp
Log:
Made editor -W clean

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/SConscript	2009-08-23 17:42:44 UTC (rev 3015)
@@ -21,7 +21,7 @@
 
 CacheDir('cache')
 
-debug_cxxflags = ["-O0", "-g", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
+debug_cxxflags = ["-O0", "-g", "-W", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
 
 # YACC
 yacc_test_text = """

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/control_point.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -38,19 +38,19 @@
 
 
 void
-ControlPoint::on_move_start(GdkEventButton* event)
+ControlPoint::on_move_start(GdkEventButton* /*event*/)
 {
 }
 
 void
-ControlPoint::on_move_update(GdkEventMotion* event, const Vector2f& offset_)
+ControlPoint::on_move_update(GdkEventMotion* /*event*/, const Vector2f& offset_)
 {
   offset = offset_;
   std::cout << "on_move_update: " << offset << std::endl;
 }
 
 void
-ControlPoint::on_move_end(GdkEventButton* event, const Vector2f& offset_)
+ControlPoint::on_move_end(GdkEventButton* /*event*/, const Vector2f& offset_)
 {
   offset = offset_;
   offset = Vector2f();

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -55,7 +55,7 @@
   software_surface = SoftwareSurface(Pathname(path));
 }
 
-DecalObjectModel::DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
+DecalObjectModel::DecalObjectModel(const std::string& /*name*/, const Vector2f& rel_pos, 
                                    const std::string& path_, MapType type_)
   : ObjectModel("DecalObjectModel", rel_pos),
     path(path_),

Modified: trunk/windstille/src/editor/decal_rotate_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -29,7 +29,7 @@
 }
 
 void
-DecalRotateControlPoint::on_move_start(GdkEventMotion* event) 
+DecalRotateControlPoint::on_move_start(GdkEventMotion* /*event*/) 
 {
 }
 

Modified: trunk/windstille/src/editor/decal_scale_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_scale_control_point.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/decal_scale_control_point.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -30,12 +30,12 @@
 {}
 
 void
-DecalScaleControlPoint::on_move_start(GdkEventButton* event)
+DecalScaleControlPoint::on_move_start(GdkEventButton* /*event*/)
 { 
 }
 
 void
-DecalScaleControlPoint::on_move_update(GdkEventMotion* event, const Vector2f& offset_) 
+DecalScaleControlPoint::on_move_update(GdkEventMotion* /*event*/, const Vector2f& offset_) 
 {
   offset = offset_; 
 
@@ -63,7 +63,7 @@
 }
   
 void
-DecalScaleControlPoint::on_move_end(GdkEventButton* event, const Vector2f& offset_)
+DecalScaleControlPoint::on_move_end(GdkEventButton* /*event*/, const Vector2f& offset_)
 {
   on_move_update(0/*event*/, offset_);
 }

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -786,7 +786,7 @@
 }
 
 void
-EditorWindow::on_switch_page(GtkNotebookPage* page, guint page_num)
+EditorWindow::on_switch_page(GtkNotebookPage* /*page*/, guint /*page_num*/)
 {
   //std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;
 

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -156,7 +156,7 @@
 }
 
 void
-LayerManager::on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock)
+LayerManager::on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> /*auto_lock*/)
 {
   on_cursor_changed();
 }

Modified: trunk/windstille/src/editor/minimap_widget.cpp
===================================================================
--- trunk/windstille/src/editor/minimap_widget.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/minimap_widget.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -25,31 +25,31 @@
 }
 
 bool
-MinimapWidget::mouse_move(GdkEventMotion* event)
+MinimapWidget::mouse_move(GdkEventMotion* /*event*/)
 {
   return false;
 }
 
 bool
-MinimapWidget::mouse_down (GdkEventButton* event)
+MinimapWidget::mouse_down (GdkEventButton* /*event*/)
 {
   return false;
 }
 
 bool
-MinimapWidget::mouse_up(GdkEventButton* event)
+MinimapWidget::mouse_up(GdkEventButton* /*event*/)
 {
   return false;
 }
 
 bool
-MinimapWidget::scroll(GdkEventScroll* event)
+MinimapWidget::scroll(GdkEventScroll* /*event*/)
 {
   return false;
 }
 
 bool
-MinimapWidget::on_expose_event(GdkEventExpose* event)
+MinimapWidget::on_expose_event(GdkEventExpose* /*event*/)
 {
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 

Modified: trunk/windstille/src/editor/navgraph_insert_tool.cpp
===================================================================
--- trunk/windstille/src/editor/navgraph_insert_tool.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/navgraph_insert_tool.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -134,7 +134,7 @@
 }
 
 void
-NavgraphInsertTool::mouse_right_down(GdkEventButton* event, WindstilleWidget& wst)
+NavgraphInsertTool::mouse_right_down(GdkEventButton* /*event*/, WindstilleWidget& wst)
 {
   NavigationGraph& navgraph = *wst.get_sector_model()->get_nav_graph();
 

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/object_model.hpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -83,14 +83,14 @@
   virtual void draw_select(SceneContext& sc, bool highlight);
 
   virtual void draw(SceneContext& sc);
-  virtual void update(float delta) {}
+  virtual void update(float /*delta*/) {}
   virtual Rectf get_bounding_box() const = 0;
   virtual ObjectModelHandle clone() const =0;
 
   virtual void write(FileWriter& writer) const =0;
   virtual FileWriter& write_member(FileWriter& writer) const;
 
-  virtual void add_control_points(std::vector<ControlPointHandle>& control_points) {}
+  virtual void add_control_points(std::vector<ControlPointHandle>& /*control_points*/) {}
 };
 
 #endif

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -304,9 +304,9 @@
 }
 
 void
-ObjectSelector::on_drag_data_get(const Glib::RefPtr<Gdk::DragContext>& context, 
+ObjectSelector::on_drag_data_get(const Glib::RefPtr<Gdk::DragContext>& /*context*/,
                                  Gtk::SelectionData& selection_data, 
-                                 guint info, guint time)
+                                 guint /*info*/, guint /*time*/)
 {
   //std::cout << "ObjectSelector: on_drag_data_get" << std::endl;
 

Modified: trunk/windstille/src/editor/particle_system_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/particle_system_object_model.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/particle_system_object_model.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -55,7 +55,7 @@
 }
 
 void
-ParticleSystemObjectModel::write(FileWriter& writer) const
+ParticleSystemObjectModel::write(FileWriter& /*writer*/) const
 {
 }
 

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -517,7 +517,7 @@
 }
 
 void
-SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+SectorModel::on_row_changed(const Gtk::TreeModel::Path& /*path*/, const Gtk::TreeModel::iterator& iter)
 {
   //std::cout << "LayerManager:on_row_changed" << std::endl;
 
@@ -535,26 +535,26 @@
 }
 
 void
-SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
+SectorModel::on_row_deleted(const Gtk::TreeModel::Path& /*path*/)
 {
   //std::cout << "LayerManager:on_row_deleted" << std::endl;
   queue_draw();
 }
 
 void
-SectorModel::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+SectorModel::on_row_has_child_toggled(const Gtk::TreeModel::Path& /*path*/, const Gtk::TreeModel::iterator& /*iter*/)
 {
   //std::cout << "LayerManager:on_row_has_child_toggled" << std::endl;
 }
 
 void
-SectorModel::on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+SectorModel::on_row_inserted(const Gtk::TreeModel::Path& /*path*/, const Gtk::TreeModel::iterator& /*iter*/)
 {
   //std::cout << "LayerManager:on_row_inserted" << std::endl;
 }
 
 void
-SectorModel::on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order)
+SectorModel::on_rows_reordered(const Gtk::TreeModel::Path& /*path*/, const Gtk::TreeModel::iterator& /*iter*/, int* /*new_order*/)
 {
   //std::cout << "LayerManager:on_row_reordered" << std::endl;
 }

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -214,7 +214,7 @@
 }
 
 void
-SelectTool::mouse_right_down(GdkEventButton* event, WindstilleWidget& wst)
+SelectTool::mouse_right_down(GdkEventButton* event, WindstilleWidget& /*wst*/)
 {
   Gtk::Menu* menu = static_cast<Gtk::Menu*>(EditorWindow::current()->get_ui_manager()->get_widget("/PopupMenu"));
   menu->popup(event->button, event->time);

Modified: trunk/windstille/src/editor/tool.hpp
===================================================================
--- trunk/windstille/src/editor/tool.hpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/tool.hpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -34,9 +34,9 @@
   virtual void mouse_up(GdkEventButton* event, WindstilleWidget& wst) = 0;
   virtual void mouse_move(GdkEventMotion* event, WindstilleWidget& wst) = 0;
 
-  virtual void mouse_right_down(GdkEventButton* event, WindstilleWidget& wst) {}
+  virtual void mouse_right_down(GdkEventButton* /*event*/, WindstilleWidget& /*wst*/) {}
 
-  virtual void draw(SceneContext& sc) {}
+  virtual void draw(SceneContext& /*sc*/) {}
 
 private:
   Tool(const Tool&);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -184,7 +184,7 @@
 }
 
 bool
-WindstilleWidget::on_configure_event(GdkEventConfigure* event)
+WindstilleWidget::on_configure_event(GdkEventConfigure* /*event*/)
 {
   state.set_size(get_width(), get_height());
   Display::aspect_size.width  = get_width();
@@ -215,7 +215,7 @@
 }
 
 bool
-WindstilleWidget::on_expose_event(GdkEventExpose* event)
+WindstilleWidget::on_expose_event(GdkEventExpose* /*event*/)
 {
   //std::cout << "WindstilleWidget::on_expose()" << std::endl;
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
@@ -707,23 +707,23 @@
 }
 
 bool
-WindstilleWidget::key_release(GdkEventKey* event)
+WindstilleWidget::key_release(GdkEventKey* /*event*/)
 { // /usr/include/gtk-2.0/gdk/gdkkeysyms.h
   //std::cout << "KeyRelease: " << (int)event->keyval << std::endl;
   return true;
 }
 
 bool
-WindstilleWidget::on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time)
+WindstilleWidget::on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& /*context*/, int /*x*/, int /*y*/, guint /*time*/)
 {
   //std::cout << "WindstilleWidget: on_drag_drop: " << x << ", " << y << ": " << std::endl;
   return true;
 }
 
 void
-WindstilleWidget::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>& context,
+WindstilleWidget::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>& /*context*/,
                                         int x, int y, const Gtk::SelectionData& data,
-                                        guint info, guint time)
+                                        guint /*info*/, guint /*time*/)
 {
   //std::cout << "WindstilleWidget: on_drag_data_received: "
   //          << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
@@ -756,7 +756,7 @@
 }
 
 void
-WindstilleWidget::on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& context)
+WindstilleWidget::on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& /*context*/)
 {
   //std::cout << "WindstilleWidget: on_drag_finish()" << std::endl;
 }

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-08-23 16:15:16 UTC (rev 3014)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-08-23 17:42:44 UTC (rev 3015)
@@ -49,7 +49,7 @@
 }
 
 void
-ZoomTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
+ZoomTool::mouse_up(GdkEventButton* /*event*/, WindstilleWidget& wst)
 {
   if (mode == RECT_MODE)
     {
@@ -64,7 +64,7 @@
 }
 
 void
-ZoomTool::mouse_right_down(GdkEventButton* event, WindstilleWidget& wst)
+ZoomTool::mouse_right_down(GdkEventButton* /*event*/, WindstilleWidget& wst)
 {
   wst.on_zoom_out();
 }



From grumbel at mail.berlios.de  Sun Aug 23 20:01:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 20:01:21 +0200
Subject: [Windstille-commit] r3016 - in trunk/windstille/src: app display
	font math
Message-ID: <200908231801.n7NI1Le4015744@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 20:01:21 +0200 (Sun, 23 Aug 2009)
New Revision: 3016

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/math/quaternion.hpp
Log:
Some int/float conversion cleanup

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-23 17:42:44 UTC (rev 3015)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-23 18:01:21 UTC (rev 3016)
@@ -172,7 +172,7 @@
 WindstilleMain::init_modules()
 {
   if (debug) std::cout << "Initialising Fonts" << std::endl;
-  SoundManager::current()->set_master_volume(config.get_int("master-volume")/100.0f);
+  SoundManager::current()->set_master_volume(static_cast<float>(config.get_int("master-volume"))/100.0f);
   SoundManager::current()->enable_sound(config.get_bool("sound"));
   SoundManager::current()->enable_music(config.get_bool("music"));
 

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-23 17:42:44 UTC (rev 3015)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-23 18:01:21 UTC (rev 3016)
@@ -65,14 +65,14 @@
     state.bind_texture(texture);
     state.activate();
 
-    float u = Display::get_width()  / float(texture.get_width());
-    float v = Display::get_height() / float(texture.get_height());
+    float u = Display::get_width()  / static_cast<float>(texture.get_width());
+    float v = Display::get_height() / static_cast<float>(texture.get_height());
 
-    float u_start = -offset.x / float(texture.get_width());
-    float v_start = -offset.y / float(texture.get_height());
+    float u_start = -offset.x / static_cast<float>(texture.get_width());
+    float v_start = -offset.y / static_cast<float>(texture.get_height());
 
-    u -= offset.x / float(texture.get_width());
-    v -= offset.y / float(texture.get_height());
+    u -= offset.x / static_cast<float>(texture.get_width());
+    v -= offset.y / static_cast<float>(texture.get_height());
 
     glBegin(GL_QUADS);
     {

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-08-23 17:42:44 UTC (rev 3015)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-08-23 18:01:21 UTC (rev 3016)
@@ -98,7 +98,7 @@
               target_buf[target_pos + 0] = red;
               target_buf[target_pos + 1] = blue;
               target_buf[target_pos + 2] = green;
-              target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
+              target_buf[target_pos + 3] = static_cast<uint8_t>(std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255));
             }
       }
 
@@ -113,10 +113,10 @@
         
             int alpha = brush.buffer[brush_pos];
 
-            target_buf[target_pos + 0] = std::min((target_buf[target_pos + 0] * (255 - alpha) + alpha * 255)/255, 255);
-            target_buf[target_pos + 1] = std::min((target_buf[target_pos + 1] * (255 - alpha) + alpha * 255)/255, 255);
-            target_buf[target_pos + 2] = std::min((target_buf[target_pos + 2] * (255 - alpha) + alpha * 255)/255, 255);
-            target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
+            target_buf[target_pos + 0] = static_cast<uint8_t>(std::min((target_buf[target_pos + 0] * (255 - alpha) + alpha * 255)/255, 255));
+            target_buf[target_pos + 1] = static_cast<uint8_t>(std::min((target_buf[target_pos + 1] * (255 - alpha) + alpha * 255)/255, 255));
+            target_buf[target_pos + 2] = static_cast<uint8_t>(std::min((target_buf[target_pos + 2] * (255 - alpha) + alpha * 255)/255, 255));
+            target_buf[target_pos + 3] = static_cast<uint8_t>(std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255));
           }
     }
 }  

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-23 17:42:44 UTC (rev 3015)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-23 18:01:21 UTC (rev 3016)
@@ -126,10 +126,10 @@
                          effect.get_y_offset(-face->glyph->bitmap_top)),
                    Size(glyph_width, glyph_height));
 
-          Rectf uv(x_pos/float(pixelbuffer.get_width()),
-                   y_pos/float(pixelbuffer.get_height()),
-                   (x_pos + glyph_width)/float(pixelbuffer.get_width()),
-                   (y_pos + glyph_height)/float(pixelbuffer.get_height()));
+          Rectf uv(static_cast<float>(x_pos) / static_cast<float>(pixelbuffer.get_width()),
+                   static_cast<float>(y_pos) / static_cast<float>(pixelbuffer.get_height()),
+                   static_cast<float>(x_pos + glyph_width)/static_cast<float>(pixelbuffer.get_width()),
+                   static_cast<float>(y_pos + glyph_height)/static_cast<float>(pixelbuffer.get_height()));
       
           impl->characters.push_back(TTFCharacter(pos, uv,
                                                   face->glyph->advance.x >> 6));
@@ -173,8 +173,8 @@
 TTFFont::draw(const Vector2f& pos_, const std::string& str, const Color& color)
 {
   // FIXME: Little bit hacky to throw it just in
-  Vector2f pos(static_cast<int>(pos_.x),
-             static_cast<int>(pos_.y));
+  Vector2f pos(truncf(pos_.x),
+               truncf(pos_.y));
 
   OpenGLState state;
 
@@ -193,20 +193,20 @@
       const TTFCharacter& character = impl->characters[*i];
       
       glTexCoord2f(character.uv.left, character.uv.top);
-      glVertex2f(pos.x + character.pos.left + mx,
-                 pos.y + character.pos.top  + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.left) + mx,
+                 pos.y + static_cast<float>(character.pos.top)  + my);
 
       glTexCoord2f(character.uv.right, character.uv.top);
-      glVertex2f(pos.x + character.pos.right + mx, 
-                 pos.y + character.pos.top   + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.right) + mx, 
+                 pos.y + static_cast<float>(character.pos.top)   + my);
 
       glTexCoord2f(character.uv.right, character.uv.bottom);
-      glVertex2f(pos.x + character.pos.right  + mx, 
-                 pos.y + character.pos.bottom + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.right)  + mx, 
+                 pos.y + static_cast<float>(character.pos.bottom) + my);
 
       glTexCoord2f(character.uv.left, character.uv.bottom);
-      glVertex2f(pos.x + character.pos.left   + mx, 
-                 pos.y + character.pos.bottom + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.left)   + mx, 
+                 pos.y + static_cast<float>(character.pos.bottom) + my);
 
       pos.x += character.advance;       
     }

Modified: trunk/windstille/src/math/quaternion.hpp
===================================================================
--- trunk/windstille/src/math/quaternion.hpp	2009-08-23 17:42:44 UTC (rev 3015)
+++ trunk/windstille/src/math/quaternion.hpp	2009-08-23 18:01:21 UTC (rev 3016)
@@ -45,9 +45,9 @@
    */
   Quaternion(const Vector3& axis, float theta)
   {
-    w = cos(theta/2);
+    w = cosf(theta/2);
 
-    float s = sin(theta/2);
+    float s = sinf(theta/2);
     x = axis.x * s;
     y = axis.y * s;
     z = axis.z * s;



From grumbel at mail.berlios.de  Sun Aug 23 20:21:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 20:21:47 +0200
Subject: [Windstille-commit] r3017 - in trunk/windstille/src: math tile util
Message-ID: <200908231821.n7NILlTK017911@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 20:21:46 +0200 (Sun, 23 Aug 2009)
New Revision: 3017

Modified:
   trunk/windstille/src/math/line.hpp
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/math/point.hpp
   trunk/windstille/src/math/quaternion.cpp
   trunk/windstille/src/math/quaternion.hpp
   trunk/windstille/src/math/random.cpp
   trunk/windstille/src/math/rect.hpp
   trunk/windstille/src/math/size.hpp
   trunk/windstille/src/math/vector2f.cpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/util/pathname.hpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/math/line.hpp
===================================================================
--- trunk/windstille/src/math/line.hpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/line.hpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -29,7 +29,7 @@
   Vector2f p1;
   Vector2f p2;
 
-  Line() {}
+  Line() : p1(), p2() {}
   
   Line(const Vector2f& p1,
        const Vector2f& p2);  

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/matrix.cpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -195,17 +195,17 @@
 Matrix
 Matrix::rotate(float angle, float x, float y, float z)
 {
-  double len2 = x*x+y*y+z*z;
+  float len2 = x*x+y*y+z*z;
   if (len2 != 1.0)
     {
-      double len = sqrt(len2);
+      float len = sqrtf(len2);
       x /= len;
       y /= len;
       z /= len;
     }
 
-  double c = cos(angle*3.14159265/180);
-  double s = sin(angle*3.14159265/180);
+  float c = cosf(angle * 3.14159265f / 180.0f);
+  float s = sinf(angle * 3.14159265f / 180.0f);
 
   Matrix matrix = Matrix::identity();
   matrix[0]  = x*x*(1-c)+c;

Modified: trunk/windstille/src/math/point.hpp
===================================================================
--- trunk/windstille/src/math/point.hpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/point.hpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -47,95 +47,100 @@
 //- !header=core.h!
 class Point
 {
-// Construction:
+  // Construction:
 public:
-	//: Constructs a point.
-	//param x: Initial x value.
-	//param y: Initial y value.
-	//param p: Point to use for initial values.
-	Point()
-	{ return; }
+  //: Constructs a point.
+  //param x: Initial x value.
+  //param y: Initial y value.
+  //param p: Point to use for initial values.
+  Point()
+    : x(0), y(0)
+  {}
 
-	Point(int x, int y)
-	: x(x), y(y) { }
+  Point(int x, int y)
+    : x(x), 
+      y(y)
+  {}
 
-	Point(const Point &p)
-	{ x = p.x; y = p.y; }
+  Point(const Point &p)
+    : x(p.x),
+      y(p.y)
+  {}
 
-	explicit Point(const Vector2f& p);
+  explicit Point(const Vector2f& p);
 
-// Operations:
+  // Operations:
 public:
-	//: Return a rotated version of this point.
-	//param hotspot: The point around which to rotate.
-	//param angle: The amount of degrees to rotate by, clockwise.
-	Point rotate(
-		const Point &hotspot,
-		float angle) const
-	{
-		//Move the hotspot to 0,0
-		Point r(x - hotspot.x, y - hotspot.y);
+  //: Return a rotated version of this point.
+  //param hotspot: The point around which to rotate.
+  //param angle: The amount of degrees to rotate by, clockwise.
+  Point rotate(
+    const Point &hotspot,
+    float angle) const
+  {
+    //Move the hotspot to 0,0
+    Point r(x - hotspot.x, y - hotspot.y);
 		
-		//Do some Grumbel voodoo.
+    //Do some Grumbel voodoo.
 
-		// Because MSVC sucks ass wrt standards compliance, it gets it own special function calls
-		#ifdef _MSC_VER
-		const float c = (float) sqrt((float)r.x*(float)r.x + (float)r.y*(float)r.y);
-		const float nw = (float)(atan2((float)r.y, (float)r.x) + ((angle + 180) * math::pi / 180));
-		r.x = (int)((sin(1.5 * M_PI - nw) * c) + 0.5) + hotspot.x;
-		r.y = -(int)((sin(nw) * c) + 0.5) + hotspot.y;
-		#else
-		const float c = (float) std::sqrt((float)r.x*(float)r.x + (float)r.y*(float)r.y);
-		const float nw = (float)(std::atan2((float)r.y, (float)r.x) + ((angle + 180) * M_PI / 180));
- 		r.x = (int)((std::sin(1.5 * M_PI - nw) * c) + 0.5) + hotspot.x;
-		r.y = -(int)((std::sin(nw) * c) + 0.5) + hotspot.y;
-		#endif
+    // Because MSVC sucks ass wrt standards compliance, it gets it own special function calls
+#ifdef _MSC_VER
+    const float c = (float) sqrt((float)r.x*(float)r.x + (float)r.y*(float)r.y);
+    const float nw = (float)(atan2((float)r.y, (float)r.x) + ((angle + 180) * math::pi / 180));
+    r.x = (int)((sin(1.5 * M_PI - nw) * c) + 0.5) + hotspot.x;
+    r.y = -(int)((sin(nw) * c) + 0.5) + hotspot.y;
+#else
+    const float c = (float) std::sqrt((float)r.x*(float)r.x + (float)r.y*(float)r.y);
+    const float nw = (float)(std::atan2((float)r.y, (float)r.x) + ((angle + 180) * M_PI / 180));
+    r.x = (int)((std::sin(1.5 * M_PI - nw) * c) + 0.5) + hotspot.x;
+    r.y = -(int)((std::sin(nw) * c) + 0.5) + hotspot.y;
+#endif
 
-		return r;
-	}
+    return r;
+  }
 
-	//: Return the distance to another point.
-	//param Point &p: The other point.
-	int distance( const Point &p ) const
-	{
-		#ifdef _MSC_VER
-    	return int(sqrt(double((x-p.x)*(x-p.x) + (y-p.y)*(y-p.y))) + 0.5f);
-		#else
-    	return int(std::sqrt(double((x-p.x)*(x-p.x) + (y-p.y)*(y-p.y))) + 0.5f);
-		#endif
-	}
+  //: Return the distance to another point.
+  //param Point &p: The other point.
+  int distance( const Point &p ) const
+  {
+#ifdef _MSC_VER
+    return int(sqrt(double((x-p.x)*(x-p.x) + (y-p.y)*(y-p.y))) + 0.5f);
+#else
+    return int(std::sqrt(double((x-p.x)*(x-p.x) + (y-p.y)*(y-p.y))) + 0.5f);
+#endif
+  }
 	
-	//: Translate point.
-	Point &operator+=(const Point &p)
-	{ x += p.x; y += p.y; return *this; }
+  //: Translate point.
+  Point &operator+=(const Point &p)
+  { x += p.x; y += p.y; return *this; }
 
-	//: Translate point negatively.
-	Point &operator-=(const Point &p)
-	{ x -= p.x; y -= p.y; return *this; }
+  //: Translate point negatively.
+  Point &operator-=(const Point &p)
+  { x -= p.x; y -= p.y; return *this; }
 	
-	//: Point + Point operator.
-	Point operator+(const Point &p) const
-	{ return Point(x + p.x, y + p.y); }
+  //: Point + Point operator.
+  Point operator+(const Point &p) const
+  { return Point(x + p.x, y + p.y); }
 
-	//: Point - Point operator.
-	Point operator-(const Point &p) const
-	{ return Point(x - p.x, y - p.y); }
+  //: Point - Point operator.
+  Point operator-(const Point &p) const
+  { return Point(x - p.x, y - p.y); }
 
-	//: Point == Point operator (deep compare)
-	bool operator==(const Point &p) const
-	{ return (x == p.x) && (y == p.y); }
+  //: Point == Point operator (deep compare)
+  bool operator==(const Point &p) const
+  { return (x == p.x) && (y == p.y); }
 
-	//: Point != Point operator (deep compare)
-	bool operator!=(const Point &p) const
-	{ return (x != p.x) || (y != p.y); }
+  //: Point != Point operator (deep compare)
+  bool operator!=(const Point &p) const
+  { return (x != p.x) || (y != p.y); }
 
-// Attributes:
+  // Attributes:
 public:
-	//: X coordinate.
-	int x;
+  //: X coordinate.
+  int x;
 
-	//: Y coordinate.
-	int y;
+  //: Y coordinate.
+  int y;
 };
 
 inline Point::Point(const Vector2f& p)

Modified: trunk/windstille/src/math/quaternion.cpp
===================================================================
--- trunk/windstille/src/math/quaternion.cpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/quaternion.cpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -23,7 +23,7 @@
 float
 Quaternion::magnitude() const
 {
-  return sqrt(w*w + x*x + y*y + z*z);
+  return sqrtf(w*w + x*x + y*y + z*z);
 }
 
 void
@@ -83,7 +83,7 @@
    */
   float dot = dot_product(o);
 
-  const float DOT_THRESHOLD = 0.995;
+  const float DOT_THRESHOLD = 0.995f;
   if(dot > DOT_THRESHOLD) {
     // quaternions are too close, lineary interpolate them
     Quaternion result = *this + (o - *this)*t;
@@ -92,13 +92,13 @@
   }
   
   dot = clamp(dot, -1 ,1); // robustness
-  float theta_O = acos(dot);
+  float theta_O = acosf(dot);
   float theta = theta_O * t;
 
   Quaternion v2 = o - (*this * dot);
   v2.normalize();
 
-  return (*this * cos(theta)) + (v2 * sin(theta));
+  return (*this * cosf(theta)) + (v2 * sinf(theta));
 }
 
 /* EOF */

Modified: trunk/windstille/src/math/quaternion.hpp
===================================================================
--- trunk/windstille/src/math/quaternion.hpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/quaternion.hpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -44,10 +44,12 @@
    *  @param theta  the angle of rotation in radians
    */
   Quaternion(const Vector3& axis, float theta)
+    : w(cosf(theta/2)),
+      x(),
+      y(),
+      z()
   {
-    w = cosf(theta/2);
-
-    float s = sinf(theta/2);
+    float s = sinf(theta/2.0f);
     x = axis.x * s;
     y = axis.y * s;
     z = axis.z * s;

Modified: trunk/windstille/src/math/random.cpp
===================================================================
--- trunk/windstille/src/math/random.cpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/random.cpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -25,6 +25,7 @@
  */
 
 Random::Random(unsigned long s)
+  : mti(0)
 {
   mt[0]= s & 0xffffffffUL;
   for (mti=1; mti<N; mti++) {
@@ -109,7 +110,7 @@
 float
 Random::frand(float start, float end)
 {
-  return drand(start, end);
+  return static_cast<float>(drand(start, end));
 }
 
 float

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/rect.hpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -54,18 +54,35 @@
   //param point: Initial top-left position of rectangle.
   //param size: Initial size of rectangle.
   //param rect: Initial rectangle position and size.
-  Rect() { left = right = top = bottom = 0; }
+  Rect() 
+    : left(0),
+      top(0),
+      right(0),
+      bottom(0)
+  {}
 
   explicit Rect(const Rectf& rect);
 
   Rect(int new_left, int new_top, int new_right, int new_bottom)
-  { left = new_left; top = new_top; right = new_right; bottom = new_bottom; }
+    : left(new_left),
+      top(new_top),
+      right(new_right),
+      bottom(new_bottom)
+  {}
 
   Rect(const Point &p, const Size &size)
-  { left = p.x; top = p.y; right = left + size.width; bottom = top + size.height; }
+    : left(p.x),
+      top(p.y),
+      right(left + size.width),
+      bottom(top + size.height) 
+  {}
 
   Rect(const Rect &rect)
-  { left = rect.left; top = rect.top; right = rect.right; bottom = rect.bottom; }
+    : left(rect.left),
+      top(rect.top),
+      right(rect.right),
+      bottom(rect.bottom)
+  {}
 
   //: Rect += Rect operator.
   Rect &operator+=(const Rect &r)
@@ -214,7 +231,12 @@
   //param point: Initial top-left position of rectangle.
   //param size: Initial size of rectangle.
   //param rect: Initial rectangle position and size.
-  Rectf() { left = right = top = bottom = 0.0f; }
+  Rectf()
+    : left(0.0f),
+      top(0.0f),
+      right(0.0f),
+      bottom(0.0f)
+  {}
 
   Rectf(const Rect& rect)
     : left((float)rect.left), 
@@ -224,10 +246,18 @@
   {}
 
   Rectf(float new_left, float new_top, float new_right, float new_bottom)
-  { left = new_left; top = new_top; right = new_right; bottom = new_bottom; }
+    : left(new_left),
+      top(new_top),
+      right(new_right),
+      bottom(new_bottom)
+  {}
 
   Rectf(const Vector2f &p, const Sizef &size)
-  { left = p.x; top = p.y; right = left + size.width; bottom = top + size.height; }
+    : left(p.x),
+      top(p.y),
+      right(left + size.width),
+      bottom(top + size.height)
+  {}
 
   Rectf(const Vector2f& p1, const Vector2f& p2)
     :  left(p1.x),
@@ -237,7 +267,11 @@
   {}
 
   Rectf(const Rectf &rect)
-  { left = rect.left; top = rect.top; right = rect.right; bottom = rect.bottom; }
+    : left(rect.left),
+      top(rect.top),
+      right(rect.right),
+      bottom(rect.bottom)
+  {}
 
   //: Rect += Rect operator.
   Rectf &operator+=(const Rectf &r)

Modified: trunk/windstille/src/math/size.hpp
===================================================================
--- trunk/windstille/src/math/size.hpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/size.hpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -46,118 +46,129 @@
 //- !header=core.h!
 class Size
 {
-//! Construction:
+  //! Construction:
 public:
-	//: Constructs a size structure.
-	//param width: Initial width of size structure.
-	//param height: Initial height of size structure.
-	//param size: Size structure to construct this one from.
-	Size() 
-        : width(0), height(0) { }
+  //: Constructs a size structure.
+  //param width: Initial width of size structure.
+  //param height: Initial height of size structure.
+  //param size: Size structure to construct this one from.
+  Size() 
+    : width(0), height(0)
+  {}
 
-	Size(int width, int height)
-	: width(width), height(height) { }
+  Size(int width, int height)
+    : width(width), height(height) 
+  {}
 
-	Size(const Size &s)
-	{ width = s.width; height = s.height; }
+  Size(const Size &s)
+    : width(s.width),
+      height(s.height)
+  {}
 
-	explicit Size(const Sizef& s);
+  explicit Size(const Sizef& s);
 
-//! Attributes:
+  //! Attributes:
 public:
-	//: Size width.
-	int width;
+  //: Size width.
+  int width;
 
-	//: Size height.
-	int height;
+  //: Size height.
+  int height;
 
-//! Operations:
+  //! Operations:
 public:
-	//: Size += Size operator.
-	Size &operator+=(const Size &s)
-	{ width += s.width; height += s.height; return *this; }
+  //: Size += Size operator.
+  Size &operator+=(const Size &s)
+  { width += s.width; height += s.height; return *this; }
 
-	//: Size -= Size operator.
-	Size &operator-=(const Size &s)
-	{ width -= s.width; height -= s.height; return *this; }
+  //: Size -= Size operator.
+  Size &operator-=(const Size &s)
+  { width -= s.width; height -= s.height; return *this; }
 	
-	//: Size + Size operator.
-	Size operator+(const Size &s) const
-	{ return Size(width + s.width, height + s.height); }
+  //: Size + Size operator.
+  Size operator+(const Size &s) const
+  { return Size(width + s.width, height + s.height); }
 
-	//: Size - Size operator.
-	Size operator-(const Size &s) const
-	{ return Size(width - s.width, height - s.height); }
+  //: Size - Size operator.
+  Size operator-(const Size &s) const
+  { return Size(width - s.width, height - s.height); }
 
-	//: Size == Size operator (deep compare).
-	bool operator==(const Size &s) const
-	{ return (width == s.width) && (height == s.height); }
+  //: Size == Size operator (deep compare).
+  bool operator==(const Size &s) const
+  { return (width == s.width) && (height == s.height); }
 
-	//: Size != Size operator (deep compare).
-	bool operator!=(const Size &s) const
-	{ return (width != s.width) || (height != s.height); }
+  //: Size != Size operator (deep compare).
+  bool operator!=(const Size &s) const
+  { return (width != s.width) || (height != s.height); }
 };
 
 //: 2D (width,height) floating point size structure.
 class Sizef
 {
-//! Construction:
+  //! Construction:
 public:
-	//: Constructs a size structure.
-	//param width: Initial width of size structure.
-	//param height: Initial height of size structure.
-	//param size: Size structure to construct this one from.
-	Sizef() { return; }
+  //: Constructs a size structure.
+  //param width: Initial width of size structure.
+  //param height: Initial height of size structure.
+  //param size: Size structure to construct this one from.
+  Sizef() 
+    : width(0.0f),
+      height(0.0f)
+  {}
 
-	Sizef(const Size& s) 
-		: width((float)s.width),
-		  height((float)s.height)
-	{}
+  Sizef(const Size& s) 
+    : width(static_cast<float>(s.width)),
+      height(static_cast<float>(s.height))
+  {}
 
-	Sizef(float width, float height)
-	: width(width), height(height) { }
+  Sizef(float width, float height)
+    : width(width), 
+      height(height) 
+  {}
 
-	Sizef(const Sizef &s)
-	{ width = s.width; height = s.height; }
+  Sizef(const Sizef &s)
+    : width(s.width),
+      height(s.height)
+  {}
 
-//! Attributes:
+  //! Attributes:
 public:
-	//: Size width.
-	float width;
+  //: Size width.
+  float width;
 
-	//: Size height.
-	float height;
+  //: Size height.
+  float height;
 
-//! Operations:
+  //! Operations:
 public:
-	//: Size += Size operator.
-	Sizef &operator+=(const Sizef &s)
-	{ width += s.width; height += s.height; return *this; }
+  //: Size += Size operator.
+  Sizef &operator+=(const Sizef &s)
+  { width += s.width; height += s.height; return *this; }
 
-	//: Size -= Size operator.
-	Sizef &operator-=(const Sizef &s)
-	{ width -= s.width; height -= s.height; return *this; }
+  //: Size -= Size operator.
+  Sizef &operator-=(const Sizef &s)
+  { width -= s.width; height -= s.height; return *this; }
 	
-	//: Size + Size operator.
-	Sizef operator+(const Sizef &s) const
-	{ return Sizef(width + s.width, height + s.height); }
+  //: Size + Size operator.
+  Sizef operator+(const Sizef &s) const
+  { return Sizef(width + s.width, height + s.height); }
 
-	//: Size - Size operator.
-	Sizef operator-(const Sizef &s) const
-	{ return Sizef(width - s.width, height - s.height); }
+  //: Size - Size operator.
+  Sizef operator-(const Sizef &s) const
+  { return Sizef(width - s.width, height - s.height); }
 
-	//: Size == Size operator (deep compare).
-	bool operator==(const Sizef &s) const
-	{ return (width == s.width) && (height == s.height); }
+  //: Size == Size operator (deep compare).
+  bool operator==(const Sizef &s) const
+  { return (width == s.width) && (height == s.height); }
 
-	//: Size != Size operator (deep compare).
-	bool operator!=(const Size &s) const
-	{ return (width != s.width) || (height != s.height); }
+  //: Size != Size operator (deep compare).
+  bool operator!=(const Size &s) const
+  { return (width != s.width) || (height != s.height); }
 };
 
 inline Size::Size(const Sizef& s)
-	: width(static_cast<int>(s.width)),
-	  height(static_cast<int>(s.height))
+  : width(static_cast<int>(s.width)),
+    height(static_cast<int>(s.height))
 {}
 
 inline std::ostream& operator<<(std::ostream& s, const Size& size) 

Modified: trunk/windstille/src/math/vector2f.cpp
===================================================================
--- trunk/windstille/src/math/vector2f.cpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/math/vector2f.cpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -35,14 +35,14 @@
 float
 Vector2f::magnitude() const
 {
-  return sqrt(x*x + y*y);
+  return sqrtf(x*x + y*y);
 }
 
 Vector2f
 Vector2f::rotate(float angle) const
 {
-  return Vector2f(x * cos(angle) - y * sin(angle),
-                  x * sin(angle) + y * cos(angle));
+  return Vector2f(x * cosf(angle) - y * sinf(angle),
+                  x * sinf(angle) + y * cosf(angle));
 }
 
 Vector2f

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -225,10 +225,10 @@
   ///////////////////////////////////////////////
   
   // Ray position in Tile units
-  int x = static_cast<int>(pos.x / TILE_SIZE);
-  int y = static_cast<int>(pos.y / TILE_SIZE);
+  int x = static_cast<int>(pos.x / static_cast<float>(TILE_SIZE));
+  int y = static_cast<int>(pos.y / static_cast<float>(TILE_SIZE));
 
-  Vector2f direction(cos(angle) * 100.0f, sin(angle) * 100.0f);
+  Vector2f direction(cosf(angle) * 100.0f, sinf(angle) * 100.0f);
 
   int step_x = (direction.x > 0) ? 1 : -1;
   int step_y = (direction.y > 0) ? 1 : -1;

Modified: trunk/windstille/src/util/pathname.hpp
===================================================================
--- trunk/windstille/src/util/pathname.hpp	2009-08-23 18:01:21 UTC (rev 3016)
+++ trunk/windstille/src/util/pathname.hpp	2009-08-23 18:21:46 UTC (rev 3017)
@@ -76,7 +76,8 @@
   };
   
   Pathname()
-    : m_type(kEmpty)
+    : m_path(),
+      m_type(kEmpty)
   {}
 
   /** Create a Pathname object. 



From grumbel at mail.berlios.de  Sun Aug 23 21:04:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 21:04:23 +0200
Subject: [Windstille-commit] r3018 - in trunk/windstille/src: app collision
	display engine font input lisp math objects physfs util
Message-ID: <200908231904.n7NJ4Noe022030@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 21:04:21 +0200 (Sun, 23 Aug 2009)
New Revision: 3018

Modified:
   trunk/windstille/src/app/console.hpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/collision/collision_data.hpp
   trunk/windstille/src/collision/collision_test.hpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_parameters.hpp
   trunk/windstille/src/display/framebuffer.cpp
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/opengl_state.cpp
   trunk/windstille/src/display/software_surface.hpp
   trunk/windstille/src/display/surface_drawing_parameters.hpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/engine/game_object.hpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/input/input_manager_impl.hpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/lisp/writer.hpp
   trunk/windstille/src/math/quad.hpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/bomb.cpp
   trunk/windstille/src/physfs/physfs_stream.cpp
   trunk/windstille/src/physfs/physfs_stream.hpp
   trunk/windstille/src/util/currenton.hpp
   trunk/windstille/src/util/file_reader.hpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/app/console.hpp
===================================================================
--- trunk/windstille/src/app/console.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/app/console.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -46,10 +46,11 @@
   void execute(const std::string& str);
 
 private:
+  boost::scoped_ptr<ConsoleImpl> impl;
+
+private:
   Console (const Console&);
   Console& operator= (const Console&);
-
-  boost::scoped_ptr<ConsoleImpl> impl;
 };
 
 extern Console console;

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -119,10 +119,10 @@
     
   { // Construct Copyright box
     std::auto_ptr<gui::GroupComponent> text_group
-      (new gui::GroupComponent(Rectf(Vector2f(Display::get_width()/2 - 390.0f,
-                                              Display::get_height()  - 100.0f),
-                                     Size(800 - 20, 
-                                          100 - 10)),
+      (new gui::GroupComponent(Rectf(Vector2f(static_cast<float>(Display::get_width())/2.0f - 390.0f,
+                                              static_cast<float>(Display::get_height())     - 100.0f),
+                                     Sizef(800.0f - 20.0f, 
+                                           100.0f - 10.0f)),
                                "",
                                menu.get_root()));
 
@@ -535,28 +535,28 @@
 MenuManager::menu_master_volume(int i)
 {
   config.set_int("master-volume", i);
-  SoundManager::current()->set_master_volume((i/100.0f));
+  SoundManager::current()->set_master_volume(static_cast<float>(i)/100.0f);
 }
 
 void
 MenuManager::menu_music_volume(int i)
 {
   config.set_int("music-volume", i);
-  SoundManager::current()->set_music_volume((i/100.0f));
+  SoundManager::current()->set_music_volume(static_cast<float>(i)/100.0f);
 }
 
 void
 MenuManager::menu_voice_volume(int i)
 {
   config.set_int("voice-volume", i);
-  SoundManager::current()->set_voice_volume((i/100.0f));
+  SoundManager::current()->set_voice_volume(static_cast<float>(i)/100.0f);
 }
 
 void
 MenuManager::menu_sfx_volume(int i)
 {
   config.set_int("sfx-volume", i);
-  SoundManager::current()->set_sfx_volume((i/100.0f));
+  SoundManager::current()->set_sfx_volume(static_cast<float>(i)/100.0f);
 }
 
 /* EOF */

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -66,6 +66,10 @@
   void init_physfs(const char* argv0);
   void init_modules();
   void deinit_modules();
+
+private:
+  WindstilleMain (const WindstilleMain&);
+  WindstilleMain& operator= (const WindstilleMain&);
 };
 
 #endif

Modified: trunk/windstille/src/collision/collision_data.hpp
===================================================================
--- trunk/windstille/src/collision/collision_data.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/collision/collision_data.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -46,9 +46,13 @@
   CollisionObject* object2;
 
   CollisionData()
-  {
-    state    = NONE;
-    col_time = 0;
+    : state(NONE),
+      direction(),
+      delta(0.0f),
+      col_time(0.0f),
+      object1(0),
+      object2(0)
+  {  
   }
 
   CollisionData merge(const CollisionData &r);

Modified: trunk/windstille/src/collision/collision_test.hpp
===================================================================
--- trunk/windstille/src/collision/collision_test.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/collision/collision_test.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -32,8 +32,10 @@
   float t1;
 
   SweepResult()
+    : state(COL_NEVER),
+      t0(0.0f),
+      t1(0.0f)
   {
-    state=COL_NEVER;
   }
 
   bool collision(float delta) const

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/display.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -169,16 +169,16 @@
   glBegin(GL_QUAD_STRIP);
   for(int i = 0; i <= n; ++i)
     {
-      float x = sinf(i * (math::pi/2) / n) * radius;
-      float y = cosf(i * (math::pi/2) / n) * radius;
+      float x = sinf(static_cast<float>(i) * (math::pi/2.0f) / static_cast<float>(n)) * radius;
+      float y = cosf(static_cast<float>(i) * (math::pi/2.0f) / static_cast<float>(n)) * radius;
 
       glVertex2f(irect.left  - x, irect.top - y);
       glVertex2f(irect.right + x, irect.top - y);
     }
   for(int i = 0; i <= n; ++i)
     {
-      float x = cosf(i * (math::pi/2) / n) * radius;
-      float y = sinf(i * (math::pi/2) / n) * radius;
+      float x = cosf(static_cast<float>(i) * (math::pi/2.0f) / static_cast<float>(n)) * radius;
+      float y = sinf(static_cast<float>(i) * (math::pi/2.0f) / static_cast<float>(n)) * radius;
 
       glVertex2f(irect.left  - x, irect.bottom + y);
       glVertex2f(irect.right + x, irect.bottom + y);
@@ -211,31 +211,31 @@
   glBegin(GL_LINE_STRIP);
   for(int i = 0; i <= n; ++i)
     {
-      float x = sinf(i * (math::pi/2) / n) * radius;
-      float y = cosf(i * (math::pi/2) / n) * radius;
+      float x = sinf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
+      float y = cosf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
 
       glVertex2f(irect.left  - x, irect.top - y);
     }
   for(int i = 0; i <= n; ++i)
     {
-      float x = cosf(i * (math::pi/2) / n) * radius;
-      float y = sinf(i * (math::pi/2) / n) * radius;
+      float x = cosf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
+      float y = sinf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
 
       glVertex2f(irect.left  - x, irect.bottom + y);
     }
 
   for(int i = 0; i <= n; ++i)
     {
-      float x = sinf(i * (math::pi/2) / n) * radius;
-      float y = cosf(i * (math::pi/2) / n) * radius;
+      float x = sinf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
+      float y = cosf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
 
       glVertex2f(irect.right + x, irect.bottom + y);
     }
 
   for(int i = 0; i <= n; ++i)
     {
-      float x = cosf(i * (math::pi/2) / n) * radius;
-      float y = sinf(i * (math::pi/2) / n) * radius;
+      float x = cosf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
+      float y = sinf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
         
       glVertex2f(irect.right + x, irect.top - y);
     }
@@ -270,13 +270,13 @@
   state.color(color);
   state.activate();
 
-  float n = segments/4.0f;
+  float n = static_cast<float>(segments) / 4.0f;
   glBegin(GL_LINE_STRIP);
   glVertex2f(radius + pos.x, pos.y);
   for(int i = 1; i < segments; ++i)
     {
-      float x = cosf(i * (math::pi/2) / n) * radius;
-      float y = sinf(i * (math::pi/2) / n) * radius;
+      float x = cosf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
+      float y = sinf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
       
       glVertex2f(x + pos.x, y + pos.y);
     }

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -65,8 +65,8 @@
     state.bind_texture(texture);
     state.activate();
 
-    float u = Display::get_width()  / static_cast<float>(texture.get_width());
-    float v = Display::get_height() / static_cast<float>(texture.get_height());
+    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
+    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
 
     float u_start = -offset.x / static_cast<float>(texture.get_width());
     float v_start = -offset.y / static_cast<float>(texture.get_height());
@@ -80,13 +80,13 @@
       glVertex2f(0, 0);
     
       glTexCoord2f(u, v_start);
-      glVertex2f(Display::get_width(), 0);
+      glVertex2f(static_cast<float>(Display::get_width()), 0);
 
       glTexCoord2f(u, v);
-      glVertex2f(Display::get_width(), Display::get_height());
+      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
 
       glTexCoord2f(u_start, v);
-      glVertex2f(0,  Display::get_height());
+      glVertex2f(0,  static_cast<float>(Display::get_height()));
     }
     glEnd();
   }
@@ -348,17 +348,17 @@
 void
 DrawingContext::rotate(float angle, float x, float y, float z)
 {
-  double len2 = x*x+y*y+z*z;
+  float len2 = x*x+y*y+z*z;
   if (len2 != 1.0)
     {
-      double len = sqrt(len2);
+      float len = sqrtf(len2);
       x /= len;
       y /= len;
       z /= len;
     }
 
-  double c = cos(angle*3.14159265/180);
-  double s = sin(angle*3.14159265/180);
+  float c = cosf(angle*3.14159265f/180.0f);
+  float s = sinf(angle*3.14159265f/180.0f);
 
   Matrix matrix = Matrix::identity();
   matrix[0]  = x*x*(1-c)+c;

Modified: trunk/windstille/src/display/drawing_parameters.hpp
===================================================================
--- trunk/windstille/src/display/drawing_parameters.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/drawing_parameters.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -37,13 +37,11 @@
   Color   color;
 
   DrawingParameters()
-  {
-    blendfunc_src = GL_SRC_ALPHA;
-    blendfunc_dst = GL_ONE_MINUS_SRC_ALPHA;
+    : blendfunc_src(GL_SRC_ALPHA),
+      blendfunc_dst(GL_ONE_MINUS_SRC_ALPHA),
+      color(1.0f, 1.0f, 1.0f, 1.0f)
+  {}
 
-    color = Color(1.0f, 1.0f, 1.0f, 1.0f);
-  }
-
   DrawingParameters& set_color(const Color& c)
   { 
     color = c;

Modified: trunk/windstille/src/display/framebuffer.cpp
===================================================================
--- trunk/windstille/src/display/framebuffer.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/framebuffer.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -31,7 +31,8 @@
   RenderBuffer render_buffer;
   
   FramebufferImpl(GLenum target, int width, int height)
-    : texture(target, width, height),
+    : handle(0),
+      texture(target, width, height),
       render_buffer(GL_DEPTH_COMPONENT24, width, height)
   {
     glGenFramebuffersEXT(1, &handle);
@@ -58,6 +59,7 @@
 };
 
 Framebuffer::Framebuffer()
+  : impl()
 {
 }
 

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -32,16 +32,19 @@
   Vector2f offset;
   float zoom;
   float rotation;
+
+  GraphicContextStateImpl()
+    : width(1),
+      height(1),
+      offset(0.0f, 0.0f),
+      zoom(1.0f),
+      rotation(0)
+  {}
 };
 
 GraphicContextState::GraphicContextState()
   : impl(new GraphicContextStateImpl())
 {
-  impl->width  = 1;
-  impl->height = 1; 
-  impl->offset = Vector2f(0,0);
-  impl->zoom   = 1.0f;
-  impl->rotation = 0;
 }
 
 GraphicContextState::GraphicContextState(int w, int h)

Modified: trunk/windstille/src/display/opengl_state.cpp
===================================================================
--- trunk/windstille/src/display/opengl_state.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/opengl_state.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -50,7 +50,12 @@
   std::map<GLenum, bool> client_state;
 
   OpenGLStateImpl()
-    : was_activated(false)
+    : was_activated(false),
+      color(),
+      blend_sfactor(GL_SRC_ALPHA),
+      blend_dfactor(GL_ONE_MINUS_SRC_ALPHA),
+      state(),
+      client_state()
   {}
 };
 

Modified: trunk/windstille/src/display/software_surface.hpp
===================================================================
--- trunk/windstille/src/display/software_surface.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/software_surface.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -37,7 +37,7 @@
     RGBA
   };
 
-  SoftwareSurface() {}
+  SoftwareSurface() : impl() {}
   explicit SoftwareSurface(const Pathname& filename);
   SoftwareSurface(int width, int height, Format format = RGBA);
   ~SoftwareSurface();

Modified: trunk/windstille/src/display/surface_drawing_parameters.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_parameters.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/surface_drawing_parameters.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -46,21 +46,16 @@
   bool vflip;
 
   SurfaceDrawingParameters()
-  {
-    blendfunc_src = GL_SRC_ALPHA;
-    blendfunc_dst = GL_ONE_MINUS_SRC_ALPHA;
+    : blendfunc_src(GL_SRC_ALPHA),
+      blendfunc_dst(GL_ONE_MINUS_SRC_ALPHA),
+      pos(0, 0),
+      color(1.0f, 1.0f, 1.0f, 1.0f),
+      angle(0.0f),
+      scale(1.0f, 1.0f),
+      hflip(false),
+      vflip(false)
+  {}
 
-    pos = Vector2f(0, 0);
-    
-    color = Color(1.0f, 1.0f, 1.0f, 1.0f);
-  
-    angle = 0.0f;
-    scale    = Vector2f(1.0f, 1.0f);
-
-    hflip = false;
-    vflip = false;
-  }
-
   SurfaceDrawingParameters& set_scale(float s) 
   { 
     scale    = Vector2f(s, s); 

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -32,6 +32,7 @@
 #include "physfs/physfs_sdl.hpp"
 
 TextureManager::TextureManager()
+  : textures()
 {
 }
 

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -145,10 +145,10 @@
 void
 VertexArrayDrawingRequest::color(const Color& color)
 {
-  colors.push_back(static_cast<int>(color.r * 255));
-  colors.push_back(static_cast<int>(color.g * 255));
-  colors.push_back(static_cast<int>(color.b * 255));
-  colors.push_back(static_cast<int>(color.a * 255));
+  colors.push_back(static_cast<unsigned char>(color.r * 255));
+  colors.push_back(static_cast<unsigned char>(color.g * 255));
+  colors.push_back(static_cast<unsigned char>(color.b * 255));
+  colors.push_back(static_cast<unsigned char>(color.a * 255));
 }
 
 void

Modified: trunk/windstille/src/engine/game_object.hpp
===================================================================
--- trunk/windstille/src/engine/game_object.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/engine/game_object.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -48,7 +48,11 @@
   bool active;
 
 public:
-  GameObject() : remove_flag(false), active(true) {}
+  GameObject() 
+  : remove_flag(false), 
+    name(),
+    active(true)
+  {}
   virtual ~GameObject() {}
 
   /**
@@ -103,6 +107,10 @@
     
   static void set_world (Sector* w) { world = w; }
   Sector* get_world () const { return world; }
+
+private:
+  GameObject (const GameObject&);
+  GameObject& operator= (const GameObject&);
 };
 
 #endif

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -58,6 +58,12 @@
 
   /** OpenGL Texture which holds all the characters */
   Texture texture;
+
+  TTFFontImpl()
+    : characters(),
+      size(0),
+      texture()
+  {}
 };
 
 FT_Library TTFFontImpl::library;
@@ -208,7 +214,7 @@
       glVertex2f(pos.x + static_cast<float>(character.pos.left)   + mx, 
                  pos.y + static_cast<float>(character.pos.bottom) + my);
 
-      pos.x += character.advance;       
+      pos.x += static_cast<float>(character.advance);
     }
   glEnd();
 }
@@ -216,7 +222,7 @@
 void
 TTFFont::draw_center(const Vector2f& pos, const std::string& str, const Color& color)
 {
-  draw(Vector2f(pos.x - get_width(str)/2, pos.y), str, color);
+  draw(Vector2f(pos.x - static_cast<float>(get_width(str))/2.0f, pos.y), str, color);
 }
 
 int

Modified: trunk/windstille/src/input/input_manager_impl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/input/input_manager_impl.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -29,7 +29,7 @@
   Controller controller;
 
 public:
-  InputManagerImpl() {}
+  InputManagerImpl() : controller() {}
   virtual ~InputManagerImpl() {}
 
   virtual void load(const std::string& filename) =0;

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -54,6 +54,20 @@
   std::vector<SDL_Joystick*> joysticks;
 
   std::map<std::string, SDLKey> keyidmapping;
+
+  InputManagerSDLImpl()
+    : joystick_button_bindings(),
+      joystick_button_axis_bindings(),
+      joystick_axis_bindings(),
+      joystick_axis_button_bindings(),
+      keyboard_button_bindings(),
+      keyboard_axis_bindings(),
+      mouse_button_bindings(),
+      wiimote_button_bindings(),
+      wiimote_axis_bindings(),
+      joysticks(),
+      keyidmapping()
+  {}
 };
 
 std::string
@@ -376,7 +390,7 @@
         {
           if (abs(event.value) > dead_zone)
             {
-              add_axis_event(i->event, event.value/(i->invert?-32768.0f:32768.0f));
+              add_axis_event(i->event, event.value / (i->invert ? -32768.0f : 32768.0f));
             }
           else
             {
@@ -525,7 +539,7 @@
                            event.acc.y,
                            event.acc.z);
                  
-                  float roll = atan(event.acc.x/event.acc.z);
+                  float roll = atanf(static_cast<float>(event.acc.x / event.acc.z));
                   if (event.acc.z <= 0.0) {
                     roll += M_PI * ((event.acc.x > 0.0) ? 1 : -1);
                   }

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -39,13 +39,19 @@
 }
 
 Wiimote::Wiimote()
-  : m_wiimote(0),
+  : mutex(),
+    m_wiimote(0),
     m_rumble(false),
     m_led_state(0),
     m_nunchuk_btns(0),
     m_nunchuk_stick_x(0),
     m_nunchuk_stick_y(0),
-    m_buttons(0)
+    m_buttons(0),
+    wiimote_zero(),
+    wiimote_one(),
+    nunchuk_zero(),
+    nunchuk_one(),
+    events()
 {
   pthread_mutex_init(&mutex, NULL);
 
@@ -176,8 +182,8 @@
 Wiimote::set_led(int num, bool state)
 {
   assert(num >= 1 && num <= 4);
-
-  int new_led_state = m_led_state;
+  
+  unsigned char new_led_state = m_led_state;
   if (state)
     new_led_state |= (1 << (num-1));
   else // (!state)
@@ -314,9 +320,9 @@
   //printf("Acc Report: x=%d, y=%d, z=%d\n", msg.acc[0], msg.acc[1], msg.acc[2]);
 
   add_acc_event(0, 0, 
-                (msg.acc[0] - wiimote_zero.x) / float(wiimote_one.x - wiimote_zero.x),
-                (msg.acc[1] - wiimote_zero.y) / float(wiimote_one.y - wiimote_zero.y),
-                (msg.acc[2] - wiimote_zero.z) / float(wiimote_one.z - wiimote_zero.z));
+                (msg.acc[0] - wiimote_zero.x) / static_cast<float>(wiimote_one.x - wiimote_zero.x),
+                (msg.acc[1] - wiimote_zero.y) / static_cast<float>(wiimote_one.y - wiimote_zero.y),
+                (msg.acc[2] - wiimote_zero.z) / static_cast<float>(wiimote_one.z - wiimote_zero.z));
 }
 
 void

Modified: trunk/windstille/src/lisp/writer.hpp
===================================================================
--- trunk/windstille/src/lisp/writer.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/lisp/writer.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -25,36 +25,40 @@
 namespace lisp
 {
 
-  class Writer
-  {
-  public:
-    Writer(const std::string& filename);
-    Writer(std::ostream* out);
-    ~Writer();
+class Writer
+{
+public:
+  Writer(const std::string& filename);
+  Writer(std::ostream* out);
+  ~Writer();
 
-    void write_comment(const std::string& comment);
+  void write_comment(const std::string& comment);
 
-    void start_list(const std::string& listname);
+  void start_list(const std::string& listname);
 
-    void write_int(const std::string& name, int value);
-    void write_float(const std::string& name, float value);
-    void write_string(const std::string& name, const std::string& value,
-        bool translatable = false);
-    void write_bool(const std::string& name, bool value);
-    void write_int_vector(const std::string& name, const std::vector<int>& value);
-    void write_int_vector(const std::string& name, const std::vector<unsigned int>& value);
-    // add more write-functions when needed...
+  void write_int(const std::string& name, int value);
+  void write_float(const std::string& name, float value);
+  void write_string(const std::string& name, const std::string& value,
+                    bool translatable = false);
+  void write_bool(const std::string& name, bool value);
+  void write_int_vector(const std::string& name, const std::vector<int>& value);
+  void write_int_vector(const std::string& name, const std::vector<unsigned int>& value);
+  // add more write-functions when needed...
 
-    void end_list(const std::string& listname);
+  void end_list(const std::string& listname);
 
-  private:
-    void indent();
+private:
+  void indent();
 
-    std::ostream* out;
-    bool out_owned;
-    int indent_depth;
-    std::vector<std::string> lists;
-  };
+  std::ostream* out;
+  bool out_owned;
+  int indent_depth;
+  std::vector<std::string> lists;
+
+private:
+  Writer (const Writer&);
+  Writer& operator= (const Writer&);
+};
   
 } //namespace lisp
 

Modified: trunk/windstille/src/math/quad.hpp
===================================================================
--- trunk/windstille/src/math/quad.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/math/quad.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -35,6 +35,10 @@
   Vector2f p4;
 
   Quad()
+    : p1(),
+      p2(),
+      p3(),
+      p4()
   {}
 
   Quad(const Rectf& rect) 

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -22,9 +22,9 @@
 #include "background_gradient.hpp"
 
 BackgroundGradient::BackgroundGradient(FileReader& props)
+  : colors(),
+    z_pos(0.0f)
 {
-  z_pos = 0.0;
-
   props.get("z-pos",  z_pos);
   props.get("colors", colors);
   if (colors.size() % (3 + 4 + 4 + 2) != 0)
@@ -67,7 +67,8 @@
   Color topcolor(0.0f, 0.0f, 0.5f);
   Color bottomcolor(0.5f, 0.5f, 1.0f);
 
-  Rect rect(0, 0, Display::get_width(), Display::get_height());
+  Rectf rect(0.0f, 0.0f, 
+             static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
   VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, 
                                                                    sc.color().get_modelview());
 
@@ -76,33 +77,33 @@
 
   for(int i = 0; i < int(colors.size()); i += (3 + 4 + 4 + 2))
     {
-      float& start    = colors[i + 0];
-      float& midpoint = colors[i + 1];
-      float& end      = colors[i + 2];
-      Color color1(colors[i + 3], colors[i + 4], colors[i + 5], colors[i + 6]);
-      Color color2(colors[i + 7], colors[i + 8], colors[i + 9], colors[i + 10]);
-      Color midcolor((color1.r + color2.r)/2,
+      const float& start    = colors[i + 0];
+      const float& midpoint = colors[i + 1];
+      const float& end      = colors[i + 2];
+      const Color color1(colors[i + 3], colors[i + 4], colors[i + 5], colors[i + 6]);
+      const Color color2(colors[i + 7], colors[i + 8], colors[i + 9], colors[i + 10]);
+      const Color midcolor((color1.r + color2.r)/2,
                      (color1.g + color2.g)/2,
                      (color1.b + color2.b)/2,
                      (color1.a + color2.a)/2);
 
       array->color(color1);
-      array->vertex(rect.left, rect.top + start*rect.get_height());
+      array->vertex(rect.left, rect.top + start * rect.get_height());
 
       array->color(color1);
-      array->vertex(rect.right, rect.top + start*rect.get_height());
+      array->vertex(rect.right, rect.top + start * rect.get_height());
 
       array->color(midcolor);
-      array->vertex(rect.left, rect.top + midpoint*rect.get_height());
+      array->vertex(rect.left, rect.top + midpoint * rect.get_height());
 
       array->color(midcolor);
-      array->vertex(rect.right, rect.top + midpoint*rect.get_height());
+      array->vertex(rect.right, rect.top + midpoint * rect.get_height());
 
       array->color(color2);
-      array->vertex(rect.left, rect.top + end*rect.get_height());
+      array->vertex(rect.left, rect.top + end * rect.get_height());
 
       array->color(color2);
-      array->vertex(rect.right, rect.top + end*rect.get_height());  
+      array->vertex(rect.right, rect.top + end * rect.get_height());  
     }
 
   sc.color().draw(array);  

Modified: trunk/windstille/src/objects/bomb.cpp
===================================================================
--- trunk/windstille/src/objects/bomb.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/objects/bomb.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -26,7 +26,7 @@
     light(Pathname("images/bomblight.sprite")),
     highlight(Pathname("images/bombhighlight.sprite")),
     explolight(Pathname("images/explolight.sprite")),
-    pos(x, int(y/TILE_SIZE+1)*TILE_SIZE),
+    pos(x, static_cast<float>(int(y/TILE_SIZE+1)*TILE_SIZE)),
     count(2.0f),
     state(COUNTDOWN),
     exploded(false)

Modified: trunk/windstille/src/physfs/physfs_stream.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -24,6 +24,7 @@
 #include <sstream>
 
 IFileStreambuf::IFileStreambuf(const std::string& filename)
+: file(0)
 {
     file = PHYSFS_openRead(filename.c_str());
     if(file == 0) {
@@ -101,6 +102,7 @@
 //---------------------------------------------------------------------------
 
 OFileStreambuf::OFileStreambuf(const std::string& filename)
+  : file(0)
 {
     file = PHYSFS_openWrite(filename.c_str());
     if(file == 0) {

Modified: trunk/windstille/src/physfs/physfs_stream.hpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/physfs/physfs_stream.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -42,6 +42,10 @@
 private:
     PHYSFS_file* file;
     char buf[1024];
+
+private:
+  IFileStreambuf (const IFileStreambuf&);
+  IFileStreambuf& operator= (const IFileStreambuf&);
 };
 
 class OFileStreambuf : public std::streambuf
@@ -57,6 +61,10 @@
 private:
     PHYSFS_file* file;
     char buf[1024];
+
+private:
+  OFileStreambuf (const OFileStreambuf&);
+  OFileStreambuf& operator= (const OFileStreambuf&);
 };
 
 class IFileStream : public std::istream

Modified: trunk/windstille/src/util/currenton.hpp
===================================================================
--- trunk/windstille/src/util/currenton.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/util/currenton.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -36,7 +36,7 @@
 
 protected:
   Currenton()  { assert(!s_current); s_current = static_cast<C*>(this); }
-  ~Currenton() { s_current = 0; }
+  virtual ~Currenton() { s_current = 0; }
   
 public:
   static C* current() { return s_current; }

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-08-23 18:21:46 UTC (rev 3017)
+++ trunk/windstille/src/util/file_reader.hpp	2009-08-23 19:04:21 UTC (rev 3018)
@@ -39,6 +39,7 @@
 
   FileReader(boost::shared_ptr<FileReaderImpl> impl_);
   FileReader();
+  virtual ~FileReader() {}
 
   /** Name of the current section */
   std::string get_name() const;



From grumbel at mail.berlios.de  Sun Aug 23 21:28:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 21:28:25 +0200
Subject: [Windstille-commit] r3019 - in trunk/windstille/src: armature
	collision display screen sprite3d tile util
Message-ID: <200908231928.n7NJSPZw026766@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 21:28:24 +0200 (Sun, 23 Aug 2009)
New Revision: 3019

Modified:
   trunk/windstille/src/armature/armature.cpp
   trunk/windstille/src/armature/armature.hpp
   trunk/windstille/src/armature/model.cpp
   trunk/windstille/src/armature/pose.cpp
   trunk/windstille/src/armature/pose_bone.hpp
   trunk/windstille/src/collision/collision_object.hpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/opengl_window.cpp
   trunk/windstille/src/display/render_buffer.cpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/shader_object.cpp
   trunk/windstille/src/display/shader_program.cpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/screen/armature_test.cpp
   trunk/windstille/src/sprite3d/data.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/tile/tile_description.cpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/util/baby_xml.hpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/armature/armature.cpp
===================================================================
--- trunk/windstille/src/armature/armature.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/armature/armature.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -27,6 +27,9 @@
 #include "armature.hpp"
 
 Armature::Armature(FileReader& reader)
+  : name(),
+    bones(),
+    root_bone(0)
 {
   parse(reader);
 }

Modified: trunk/windstille/src/armature/armature.hpp
===================================================================
--- trunk/windstille/src/armature/armature.hpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/armature/armature.hpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -34,6 +34,7 @@
   Bones bones;
   
   Bone* root_bone;
+
 public:
   Armature(FileReader& reader);
   ~Armature();

Modified: trunk/windstille/src/armature/model.cpp
===================================================================
--- trunk/windstille/src/armature/model.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/armature/model.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -23,6 +23,8 @@
 #include "model.hpp"
 
 Model::Model(FileReader& reader, const std::string& path)
+  : name(),
+    meshes()
 {
   if (reader.get_name() != "windstille-model")
     throw std::runtime_error("Not a 'windstille-model' file, its '" + reader.get_name() + "'");

Modified: trunk/windstille/src/armature/pose.cpp
===================================================================
--- trunk/windstille/src/armature/pose.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/armature/pose.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -22,6 +22,8 @@
 #include "pose.hpp"
 
 Pose::Pose(FileReader& reader)
+  : name(),
+    bones()
 {
   if (reader.get_name() != "pose")
     {

Modified: trunk/windstille/src/armature/pose_bone.hpp
===================================================================
--- trunk/windstille/src/armature/pose_bone.hpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/armature/pose_bone.hpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -29,6 +29,12 @@
   std::string name;
   int         bone_id;
   Quaternion  quat;
+
+  PoseBone()
+    : name(),
+      bone_id(),
+      quat()
+  {}
 };
 
 #endif

Modified: trunk/windstille/src/collision/collision_object.hpp
===================================================================
--- trunk/windstille/src/collision/collision_object.hpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/collision/collision_object.hpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -129,6 +129,10 @@
   boost::signal<void (const CollisionData &)>& sig_collision() { return collision; }
 
   friend class CollisionEngine;
+
+private:
+  CollisionObject(const CollisionObject&);
+  CollisionObject& operator=(const CollisionObject&);
 };
 
 #endif

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -244,6 +244,8 @@
 };
 
 DrawingContext::DrawingContext()
+  : drawingrequests(),
+    modelview_stack()
 {
   modelview_stack.push_back(Matrix::identity());
 }

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -30,6 +30,7 @@
 #include "app/config.hpp"
 
 OpenGLWindow::OpenGLWindow()
+ : m_window(0)
 {
   atexit(SDL_Quit);
 

Modified: trunk/windstille/src/display/render_buffer.cpp
===================================================================
--- trunk/windstille/src/display/render_buffer.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/render_buffer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -27,6 +27,7 @@
   GLuint handle;
 
   RenderBufferImpl(GLenum format, int width, int height)
+    : handle(0)
   {
     glGenRenderbuffersEXT(1, &handle);
 

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -64,7 +64,11 @@
   Surface lightmap;
 
   SceneContextImpl() 
-    : render_mask(SceneContext::COLORMAP |
+    : color(),
+      light(),
+      highlight(),
+      control(),
+      render_mask(SceneContext::COLORMAP |
                   SceneContext::LIGHTMAP | 
                   SceneContext::HIGHLIGHTMAP | 
                   SceneContext::CONTROLMAP | 

Modified: trunk/windstille/src/display/shader_object.cpp
===================================================================
--- trunk/windstille/src/display/shader_object.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/shader_object.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -57,8 +57,8 @@
   GLhandleARB handle;
 
   ShaderObjectImpl(GLenum type)
+    : handle(glCreateShaderObjectARB(type))
   {
-    handle = glCreateShaderObjectARB(type);
   }
 
   ~ShaderObjectImpl()

Modified: trunk/windstille/src/display/shader_program.cpp
===================================================================
--- trunk/windstille/src/display/shader_program.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/shader_program.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -28,9 +28,9 @@
 public:
   GLhandleARB handle;
 
-  ShaderProgramImpl() {
-    handle = glCreateProgramObjectARB();
-  }
+  ShaderProgramImpl() 
+    : handle(glCreateProgramObjectARB())
+  {}
 
   ~ShaderProgramImpl() {
     glDeleteObjectARB(handle);

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/surface.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -43,13 +43,21 @@
    * The size of the Surface in pixels
    */
   Sizef size;
+
+  SurfaceImpl()
+    : texture(),
+      uv(),
+      size()
+  {}
 };
 
 Surface::Surface()
+  : impl()
 {
 }
 
 Surface::Surface(const Pathname& filename)
+  : impl()
 {
   // FIXME: a bit ugly, should move some of the surface_manager code over here
   *this = SurfaceManager::current()->get(filename);

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -51,6 +51,19 @@
   Vector2f cursor_pos;
   float scroll_offset;
   float max_scroll_offset;
+
+  TextAreaImpl()
+    : font(),
+      rect(),
+      passed_time(),
+      v_space(),
+      letter_by_letter(),
+      progress_complete(),
+      commands(),
+      cursor_pos(),
+      scroll_offset(),
+      max_scroll_offset()
+  {}
 };
 
 TextArea::TextArea(const Rectf& rect, bool letter_by_letter)

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -30,13 +30,15 @@
 private:
   Rect          rect;
   bool          used;
-  std::auto_ptr<TextureSpace> left;
-  std::auto_ptr<TextureSpace> right;
+  boost::scoped_ptr<TextureSpace> left;
+  boost::scoped_ptr<TextureSpace> right;
 
 public:
   TextureSpace(const Rect& rect_)
     : rect(rect_),
-      used(false)
+      used(false),
+      left(),
+      right()
   {}
 
   ~TextureSpace()

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -23,11 +23,15 @@
 
 VertexArrayDrawingRequest::VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, 
                                                      const Matrix& modelview_)
-  : DrawingRequest(pos_, z_pos_, modelview_)
+  : DrawingRequest(pos_, z_pos_, modelview_),
+    mode(GL_QUADS),
+    blend_sfactor(GL_SRC_ALPHA),
+    blend_dfactor(GL_ONE_MINUS_SRC_ALPHA),
+    texture(),
+    colors(),
+    texcoords(),
+    vertices()
 {
-  blend_sfactor = GL_SRC_ALPHA;
-  blend_dfactor = GL_ONE_MINUS_SRC_ALPHA;
-  mode = GL_QUADS;
 }
 
 int

Modified: trunk/windstille/src/screen/armature_test.cpp
===================================================================
--- trunk/windstille/src/screen/armature_test.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/screen/armature_test.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -29,6 +29,14 @@
 #include "armature_test.hpp"
 
 ArmatureTest::ArmatureTest()
+  : model(),
+    armature(),
+    poses(),
+    pose_idx(0),
+    time(0.0f),
+    xrot(0.0f),
+    yrot(0.0f),
+    zrot(0.0f)
 {
   FileReader model_reader = FileReader::parse("armature/mesh.mesh");
   model.reset(new Model(model_reader, "armature/"));

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -93,7 +93,7 @@
  */
 struct MeshVertices
 {
-  MeshVertices() {}
+  MeshVertices() : vertices() {}
   std::vector<float> vertices;
 };
 
@@ -107,6 +107,11 @@
 {
   std::string name;
   uint16_t    frame;
+
+  Marker()
+    : name(),
+      frame()
+  {}
 };
 
 /** 
@@ -116,7 +121,8 @@
 struct ActionFrame
 {
   ActionFrame()
-    : meshs(0)
+    : meshs(),
+      attachment_points()
   { }
   std::vector<MeshVertices> meshs;
   std::vector<AttachmentPointPosition> attachment_points;
@@ -128,7 +134,10 @@
 struct Action
 {
   Action()
-    : markers(0), frames(0)
+    : name(),
+      speed(),
+      markers(0), 
+      frames(0)
   { }
   std::string  name;
   float        speed;

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -38,13 +38,29 @@
 
 Sprite3D::Sprite3D()
   : data(0), 
-    actions_switched(false)
+    actions_switched(false),
+    frame1(),
+    frame2(),
+    blend_time(0.0f),
+    next_frame(),
+    next_action(),
+    abort_at_frame(),
+    blend_sfactor(GL_ONE),
+    blend_dfactor(GL_ZERO)
 {
 }
 
 Sprite3D::Sprite3D(const Pathname& filename)
   : data(sprite3d::Manager::current()->create_data(filename)),
-    actions_switched(false)
+    actions_switched(false),
+    frame1(),
+    frame2(),
+    blend_time(0.0f),
+    next_frame(),
+    next_action(),
+    abort_at_frame(),
+    blend_sfactor(GL_ONE),
+    blend_dfactor(GL_ZERO)
 {
   frame1.action         = &data->actions[0];
   frame1.frame          = 0;
@@ -54,10 +70,6 @@
   abort_at_frame.action = 0;
   next_frame.action     = 0;
   next_action.action    = 0;
-  blend_time            = 0.0;
-
-  blend_sfactor = GL_ONE;
-  blend_dfactor = GL_ZERO;
 }
 
 Sprite3D::~Sprite3D()

Modified: trunk/windstille/src/tile/tile_description.cpp
===================================================================
--- trunk/windstille/src/tile/tile_description.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/tile/tile_description.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -29,7 +29,8 @@
 #include "tile/tile_packer.hpp"
 
 TileDescription::TileDescription(FileReader& props)
-  : width(0), height(0)
+  : width(0), 
+    height(0)
 {
   props.get("ids",    ids);
   props.get("image",  filename);

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -37,6 +37,14 @@
 
   int width;
   int height;
+
+  TilePackerImpl()
+    : x_pos(),
+      y_pos(),
+      texture(),
+      width(),
+      height()
+  {}
 };
 
 TilePacker::TilePacker(int width, int height)

Modified: trunk/windstille/src/util/baby_xml.hpp
===================================================================
--- trunk/windstille/src/util/baby_xml.hpp	2009-08-23 19:04:21 UTC (rev 3018)
+++ trunk/windstille/src/util/baby_xml.hpp	2009-08-23 19:28:24 UTC (rev 3019)
@@ -42,8 +42,17 @@
     std::string content;
     Attributes attributes;
 
-    Node() : type(NONE) {}
-    Node(Type type_, const std::string& content_ = std::string()) : type(type_), content(content_) {}
+    Node() 
+      : type(NONE), 
+        content(), 
+        attributes() 
+    {}
+
+    Node(Type type_, const std::string& content_ = std::string()) 
+      : type(type_), 
+        content(content_),
+        attributes()
+    {}
   };
 
   typedef std::vector<Node> Nodes;



From grumbel at mail.berlios.de  Sun Aug 23 22:14:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 22:14:04 +0200
Subject: [Windstille-commit] r3020 - in trunk/windstille/src: display gui
	lisp navigation particles screen sprite2d sprite3d util
Message-ID: <200908232014.n7NKE4DP031320@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 22:14:02 +0200 (Sun, 23 Aug 2009)
New Revision: 3020

Modified:
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/gui/grid_component.hpp
   trunk/windstille/src/lisp/writer.cpp
   trunk/windstille/src/navigation/navigation_graph.cpp
   trunk/windstille/src/navigation/node.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/geometry_test.hpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite2d/data.hpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/data.hpp
   trunk/windstille/src/util/baby_xml.cpp
   trunk/windstille/src/util/baby_xml.hpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -36,7 +36,8 @@
 
 
 SurfaceManager::SurfaceManager()
-  : texture_packer(new TexturePacker(Size(2048, 2048)))
+  : texture_packer(new TexturePacker(Size(2048, 2048))),
+    surfaces()
 {
 }
 

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -64,6 +64,10 @@
       scroll_offset(),
       max_scroll_offset()
   {}
+
+private:
+  TextAreaImpl(const TextAreaImpl&);
+  TextAreaImpl& operator=(const TextAreaImpl&);
 };
 
 TextArea::TextArea(const Rectf& rect, bool letter_by_letter)

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/display/texture.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -39,6 +39,10 @@
   int    height;
 
   TextureImpl()
+    : target(0),
+      handle(0),
+      width(0),
+      height(0)
   {
     glGenTextures(1, &handle);
     assert_gl("creating texture handle."); 
@@ -51,10 +55,12 @@
 };
 
 Texture::Texture()
+  : impl()
 {
 }
 
 Texture::Texture(const Pathname& filename)
+  : impl()
 {
   *this = TextureManager::current()->get(filename);
 }

Modified: trunk/windstille/src/gui/grid_component.hpp
===================================================================
--- trunk/windstille/src/gui/grid_component.hpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/gui/grid_component.hpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -37,10 +37,18 @@
     Point parent;
 
     ComponentBox() 
-      : component(0), span(1, 1), parent(-1, -1) {}
+      : type(),
+        component(0), 
+        span(1, 1), 
+        parent(-1, -1) 
+    {}
 
     ComponentBox(Component* c, const Size& s, const Point& parent_ = Point(-1, -1))
-      : component(c), span(s), parent(parent_) {}
+      : type(),
+        component(c),
+        span(s),
+        parent(parent_) 
+    {}
 
     bool is_simple()  const { return (span.width == 1 && span.height == 1); }
     bool has_parent() const { return (parent.x != -1 || parent.y != -1); }

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -24,6 +24,10 @@
 {
 
 Writer::Writer(const std::string& filename)
+  : out(),
+    out_owned(),
+    indent_depth(),
+    lists()
 {
   out = new OFileStream(filename);
   out_owned = true;
@@ -31,6 +35,10 @@
 }
   
 Writer::Writer(std::ostream* newout)
+  : out(),
+    out_owned(),
+    indent_depth(),
+    lists()
 {
   out = newout;
   out_owned = false;

Modified: trunk/windstille/src/navigation/navigation_graph.cpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/navigation/navigation_graph.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -32,8 +32,9 @@
 #include "navigation_graph.hpp"
 
 NavigationGraph::NavigationGraph()
-{
-  
+  : nodes(),
+    edges()
+{  
 }
 
 NavigationGraph::~NavigationGraph()

Modified: trunk/windstille/src/navigation/node.cpp
===================================================================
--- trunk/windstille/src/navigation/node.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/navigation/node.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -20,7 +20,8 @@
 #include "node.hpp"
 
 Node::Node(const Vector2f& pos_)
-  : pos(pos_)
+  : pos(pos_),
+    edges()
     // FIXME: Do something with id
 {
 }

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -164,7 +164,8 @@
 
 DeformDrawer::DeformDrawer(FileReader& /*props*/)
   : framebuffer(GL_TEXTURE_RECTANGLE_ARB, 800, 600),
-    surface(Pathname("images/particles/deform2.png"))
+    surface(Pathname("images/particles/deform2.png")),
+    shader_program()
 {
   shader_program.attach(ShaderObject(GL_FRAGMENT_SHADER_ARB, "data/shader/particledeform.frag"));
   shader_program.link();

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -29,37 +29,28 @@
 #include "randomizer.hpp"
 
 ParticleSystem::ParticleSystem(FileReader& props)
- : randomizer(new PointRandomizer())
+  : particles(),
+    life_time(1.0f),
+    randomizer(new PointRandomizer()),
+    drawer(),
+    spawn_x(0),
+    spawn_y(0),
+    x_pos(320.0f),
+    y_pos(240.0f),
+    z_pos(0),
+    gravity_x(0.0f),
+    gravity_y(-10.0f),
+    cone_start(0),
+    cone_stop(2.0f * math::pi),
+    bunching(1.0f),
+    layer(SceneContext::COLORMAP),
+    size_start(1.0f),
+    size_stop(1.0f),
+    speed_start(100.0),
+    speed_stop(200.0f),
+    color_start(1.0f, 1.0f, 1.0f, 1.0f),
+    color_stop(   0,    0,    0,    0)
 {
-  // Init some defaults
-  x_pos      = 320.0f;
-  y_pos      = 240.0f;
-  z_pos      = 0;
-
-  spawn_x    = 0;
-  spawn_y    = 0;
-
-  life_time  = 1.0f;
-
-  bunching = 1.0f;
-
-  gravity_x = 0.0f;
-  gravity_y = -10.0f;
-
-  cone_start = 0;
-  cone_stop  = 2*M_PI;
-
-  size_start = 1.0f;
-  size_stop  = 1.0f;
-
-  speed_start = 100.0;
-  speed_stop  = 200.0f;
-
-  color_start = Color(1.0f, 1.0f, 1.0f, 1.0f);
-  color_stop  = Color(   0,    0,    0,    0);
-
-  layer = SceneContext::COLORMAP;
-
   float p_bunching = 1.0; 
   props.get("bunching", p_bunching);
   set_bunching(p_bunching);
@@ -210,30 +201,27 @@
 }
 
 ParticleSystem::ParticleSystem()
- : randomizer(new PointRandomizer)
+  : life_time(1.0f),
+    randomizer(new PointRandomizer()),
+    drawer(),
+    spawn_x(0),
+    spawn_y(0),
+    x_pos(320.0f),
+    y_pos(240.0f),
+    z_pos(0),
+    gravity_x(0.0f),
+    gravity_y(-10.0f),
+    cone_start(0),
+    cone_stop(2.0f * math::pi),
+    bunching(1.0f),
+    layer(SceneContext::COLORMAP),
+    size_start(1.0f),
+    size_stop(1.0f),
+    speed_start(100.0),
+    speed_stop(200.0f),
+    color_start(1.0f, 1.0f, 1.0f, 1.0f),
+    color_stop(   0,    0,    0,    0)
 {
-  x_pos      = 320.0f;
-  y_pos      = 240.0f;
-  z_pos      = 0;
-  life_time  = 1.0f;
-
-  bunching = 1.0f;
-
-  gravity_x = 0.0f;
-  gravity_y = -10.0f;
-
-  cone_start = 0;
-  cone_stop  = 2*M_PI;
-
-  size_start = 1.0f;
-  size_stop  = 1.0f;
-
-  speed_start = 100.0;
-  speed_stop  = 200.0f;
-
-  color_start = Color(1.0f, 1.0f, 1.0f, 1.0f);
-  color_stop  = Color(  0,   0,   0,   0);
-
   set_count(70);
 }
 

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -25,9 +25,9 @@
 #include "spark_drawer.hpp"
 
 SparkDrawer::SparkDrawer(FileReader& props)
+  : color(1.0f, 1.0f, 1.0f),
+    width(1.0f)    
 {
-  width = 1.0f;
-  color = Color(1.0f, 1.0f, 1.0f);
   props.get("color", color);
   props.get("width", width);
 }

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -24,9 +24,10 @@
 #include "surface_drawer.hpp"
 
 SurfaceDrawer::SurfaceDrawer(Surface surface_)
-  : surface(surface_)
+  : surface(surface_),
+    blendfunc_src(),
+    blendfunc_dest()
 {
-  
 }
 
 static GLenum string2blendfunc(const std::string& str)

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -29,18 +29,16 @@
 #include "display/display.hpp"
 
 GeometryTest::GeometryTest()
+  : line1(Vector2f(300, 300),
+          Vector2f(500, 300)),
+    line2(Vector2f(400, 200),
+          Vector2f(400, 400)),
+    cursor(line1.p1),
+    cursor2(line1.p2),
+    collision_point(),
+    point_count(0),
+    had_prev_collision(true)
 {
-  point_count = 0;
-  had_prev_collision = true;
-
-  line1 = Line(Vector2f(300, 300),
-               Vector2f(500, 300));
-
-  line2 = Line(Vector2f(400, 200),
-               Vector2f(400, 400));
-
-  cursor  = line1.p1;
-  cursor2 = line1.p2;
 }
 
 void

Modified: trunk/windstille/src/screen/geometry_test.hpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.hpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/geometry_test.hpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -27,14 +27,15 @@
 class GeometryTest : public Screen
 {
 private:
+  Line line1;
+  Line line2;
+
   Vector2f cursor;
   Vector2f cursor2;
   Vector2f collision_point;
 
   int point_count;
 
-  Line line1;
-  Line line2;
   bool had_prev_collision;
 
 public:

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -33,8 +33,14 @@
 
 NavigationTest::NavigationTest()
   : cursor(400, 300),
+    stick(),
     player(200,200),
-    graph(new NavigationGraph())
+    old_player(),
+    graph(new NavigationGraph()),
+    connection(),
+    selected_edge(),
+    selected_node(),
+    node_to_connect()
 {
   try 
   {
@@ -54,7 +60,6 @@
   graph->add_edge(node1, node2);
   //graph->add_edge(node2, node3);
   //graph->add_edge(node3, node4);
-  
 }
 
 void

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -36,8 +36,11 @@
 #include "gui/automap.hpp"
 
 ParticleViewer::ParticleViewer()
+  : sc(),
+    systems(),
+    background(Pathname("images/greychess.sprite")),
+    pos()
 {
-  background = Sprite(Pathname("images/greychess.sprite"));
 }
 
 ParticleViewer::~ParticleViewer()

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -39,17 +39,20 @@
 ScreenManager screen_manager; 
 
 ScreenManager::ScreenManager()
-  : time_counter(0),
+  : screens(),
+    screen_action(NONE),
+    screen_screen(),
+    overlay_screens(),
+    overlay_screen_action(NONE),
+    overlay_screen_screen(),
+    ticks(0),
+    time_counter(0),
     frame_counter(0),
     last_fps(0),
     overlap_delta(0),
     do_quit(false),
     show_controller_help_window(false)
 {
-  screen_action = NONE;
-  overlay_screen_action = NONE;
-
-  ticks = 0;
 }
 
 ScreenManager::~ScreenManager()

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -34,21 +34,41 @@
 #define DISPLAY_H 600
 
 Sprite2DView::Sprite2DView()
+  : sc(),
+    directory(),
+    shuffle_directory(),
+    mode(),
+    zoom(),
+    pos(),
+    width(),
+    height(),
+    aspect(),
+    index(),
+    sprite(),
+    new_sprite(),
+    fadein(),
+    scale(),
+    offset(),
+    display_time(),
+    show_thumbnail(),
+    ignore_delta(),
+    shuffle(),
+    auto_scroll()
 {
   auto_scroll = false;
   index = 0;
 
   for(std::vector<std::string>::iterator i = arg_files.begin(); i != arg_files.end(); ++i)
+  {
+    if (PHYSFS_isDirectory(i->c_str()))
+    { 
+      adddir(i->c_str());
+    }
+    else
     {
-      if (PHYSFS_isDirectory(i->c_str()))
-        { 
-          adddir(i->c_str());
-        }
-      else
-        {
-          directory.push_back(*i);
-        }
+      directory.push_back(*i);
     }
+  }
   
   shuffle_directory = directory;
   shuffle = false;
@@ -73,7 +93,6 @@
   next_image(0);
   sprite = new_sprite;
   new_sprite = Sprite();
-
 }
 
 void

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -28,6 +28,12 @@
 #include "sprite3dview.hpp"
 
 Sprite3DView::Sprite3DView()
+  : sc(),
+    sprite(),
+    actions(),
+    current_action(),
+    rotation(),
+    scale()
 {
   current_action = 0;
 

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -29,6 +29,7 @@
 #include "display/surface_manager.hpp"
 
 SpriteData::SpriteData(const Pathname& pathname)
+  : actions()
 {
   if (pathname.exists())
   {

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -38,6 +38,15 @@
   Vector2f    offset;
   float       scale;
   Surfaces    surfaces;
+
+public: 
+  SpriteAction()
+    : name(),
+      speed(),
+      offset(),
+      scale(),
+      surfaces()
+  {}
 };
 
 class SpriteData

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -30,10 +30,34 @@
 #include "util/util.hpp"
 
 Sprite::Sprite()
-{  
+  : data(),
+    current_action(0),
+    frame(0),
+    speed(0),
+    alpha(0),
+    pingpong(),
+    reverse(),
+    vflip(),
+    blend_sfactor(),
+    blend_dfactor(),
+    scale(),
+    color()
+{
 }
 
 Sprite::Sprite(const Pathname& filename)
+  : data(),
+    current_action(0),
+    frame(0),
+    speed(0),
+    alpha(0),
+    pingpong(),
+    reverse(),
+    vflip(),
+    blend_sfactor(),
+    blend_dfactor(),
+    scale(),
+    color()
 {
   data = SpriteManager::current()->create_data(filename);
 
@@ -51,7 +75,18 @@
 }
 
 Sprite::Sprite(const SpriteDataPtr data)
-  : data(data)
+  : data(data),
+    current_action(0),
+    frame(0),
+    speed(0),
+    alpha(0),
+    pingpong(),
+    reverse(),
+    vflip(),
+    blend_sfactor(),
+    blend_dfactor(),
+    scale(),
+    color()
 {
   current_action = data->actions[0];
   vflip = false;

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -84,6 +84,9 @@
 }
 
 Data::Data(const Pathname& filename)
+  : meshs(),
+    attachment_points(),
+    actions()
 {
   PHYSFS_file* file = PHYSFS_openRead(filename.get_physfs_path().c_str());
   if(!file) {

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -79,6 +79,15 @@
   std::vector<uint16_t> vertex_indices;
   std::vector<float>    tex_coords;
   std::vector<float>    normals;
+
+  Mesh()
+    : texture(),
+      vertex_count(),
+      triangle_count(),
+      vertex_indices(),
+      tex_coords(),
+      normals()
+  {}
 };
 
 /** Position of an AttachmentPoint */
@@ -86,6 +95,11 @@
 {
   Vector3    pos;  // x, y, z
   Quaternion quat; // w, x, y, z
+
+  AttachmentPointPosition()
+    : pos(),
+      quat()
+  {}
 };
 
 /**

Modified: trunk/windstille/src/util/baby_xml.cpp
===================================================================
--- trunk/windstille/src/util/baby_xml.cpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/util/baby_xml.cpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -259,9 +259,14 @@
         column_no += 1;
       }
   }
+
+private:
+  BabyXMLReader (const BabyXMLReader&);
+  BabyXMLReader& operator= (const BabyXMLReader&);
 };
 
 BabyXML::BabyXML(const std::string& text)
+  : nodes()
 {
   BabyXMLReader(text, this);
 }

Modified: trunk/windstille/src/util/baby_xml.hpp
===================================================================
--- trunk/windstille/src/util/baby_xml.hpp	2009-08-23 19:28:24 UTC (rev 3019)
+++ trunk/windstille/src/util/baby_xml.hpp	2009-08-23 20:14:02 UTC (rev 3020)
@@ -31,6 +31,11 @@
   {
     std::string name;
     std::string value;
+
+    Attribute()
+      : name(),
+        value()
+    {}
   };
 
   struct Node



From grumbel at mail.berlios.de  Sun Aug 23 22:25:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 22:25:53 +0200
Subject: [Windstille-commit] r3021 - in trunk/windstille/src: display lisp
	particles tile util
Message-ID: <200908232025.n7NKPrss032530@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 22:25:53 +0200 (Sun, 23 Aug 2009)
New Revision: 3021

Modified:
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/lisp/lexer.hpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/tile/tile.cpp
   trunk/windstille/src/tile/tile.hpp
   trunk/windstille/src/tile/tile_description.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/tile/tile_packer.hpp
   trunk/windstille/src/util/field.hpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -122,7 +122,8 @@
 };
 
 TexturePacker::TexturePacker(const Size& texture_size_)
-  : texture_size(texture_size_)
+  : texture_size(texture_size_),
+    textures()
 {
 }
 

Modified: trunk/windstille/src/lisp/lexer.hpp
===================================================================
--- trunk/windstille/src/lisp/lexer.hpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/lisp/lexer.hpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -60,6 +60,10 @@
   char* c;
   char token_string[MAX_TOKEN_LENGTH + 1];
   int token_length;
+
+private:
+  Lexer(const Lexer&);
+  Lexer& operator=(const Lexer&);
 };
 
 } // end of namespace lisp

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -201,7 +201,8 @@
 }
 
 ParticleSystem::ParticleSystem()
-  : life_time(1.0f),
+  : particles(),
+    life_time(1.0f),
     randomizer(new PointRandomizer()),
     drawer(),
     spawn_x(0),

Modified: trunk/windstille/src/tile/tile.cpp
===================================================================
--- trunk/windstille/src/tile/tile.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -21,10 +21,13 @@
 #include "tile.hpp"
 
 Tile::Tile(unsigned int arg_colmap)
-  : colmap(arg_colmap)
+  : id(),
+    packer(-1),
+    uv(),
+    texture(),
+    colmap(arg_colmap),
+    desc(0)
 {
-  packer = -1;
-  desc = 0;
 }
 
 /* EOF */

Modified: trunk/windstille/src/tile/tile.hpp
===================================================================
--- trunk/windstille/src/tile/tile.hpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile.hpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -62,6 +62,10 @@
   Tile(unsigned int arg_colmap);
 
   unsigned int get_colmap() const { return colmap; }
+
+private:
+  Tile(const Tile&);
+  Tile& operator=(const Tile&);
 };
 
 #endif

Modified: trunk/windstille/src/tile/tile_description.cpp
===================================================================
--- trunk/windstille/src/tile/tile_description.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile_description.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -29,8 +29,11 @@
 #include "tile/tile_packer.hpp"
 
 TileDescription::TileDescription(FileReader& props)
-  : width(0), 
-    height(0)
+ : ids(),
+   colmap(),
+   filename(),
+   width(0), 
+   height(0)
 {
   props.get("ids",    ids);
   props.get("image",  filename);

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -52,6 +52,10 @@
 }
 
 TileFactory::TileFactory(const std::string& filename)
+  : tiles(),
+    packers(),
+    color_packer(),
+    descriptions()
 {
   packers.push_back(new TilePacker(1024, 1024));
   packers.push_back(new TilePacker(1024, 1024));

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -29,6 +29,9 @@
 #include <inttypes.h>
 
 TileMap::TileMap(FileReader& props)
+  : field(),
+    z_pos(),
+    total_time()
 {
   int width = -1;
   int height = -1;

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -63,7 +63,6 @@
 
 TilePacker::~TilePacker()
 {
-  delete impl;
 }
 
 /** Pack a tile and return the position where it is placed in the

Modified: trunk/windstille/src/tile/tile_packer.hpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.hpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/tile/tile_packer.hpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -21,6 +21,8 @@
 
 #include <GL/glew.h>
 #include <GL/gl.h>
+#include <boost/scoped_ptr.hpp>
+
 #include "display/texture.hpp"
 #include "math/rect.hpp"
 
@@ -48,7 +50,11 @@
   Texture get_texture() const;
 
 private:
-  TilePackerImpl* impl;
+  boost::scoped_ptr<TilePackerImpl> impl;
+
+private:
+  TilePacker(const TilePacker&);
+  TilePacker& operator=(const TilePacker&);
 };
 
 #endif

Modified: trunk/windstille/src/util/field.hpp
===================================================================
--- trunk/windstille/src/util/field.hpp	2009-08-23 20:14:02 UTC (rev 3020)
+++ trunk/windstille/src/util/field.hpp	2009-08-23 20:25:53 UTC (rev 3021)
@@ -34,12 +34,16 @@
   typedef typename std::vector<T>::iterator iterator;
 
   Field()
-    : width(0), height(0)
+    : width(0),
+      height(0), 
+      vec()
   {
   }
 
   Field (int w, int h) 
-    : width (w), height (h), vec (width * height)
+    : width(w), 
+      height(h), 
+      vec(width * height)
   {
   }
 



From grumbel at mail.berlios.de  Sun Aug 23 23:18:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 23 Aug 2009 23:18:47 +0200
Subject: [Windstille-commit] r3022 - in trunk/windstille/src: gui sound
	sprite2d
Message-ID: <200908232118.n7NLIl8J006790@sheep.berlios.de>

Author: grumbel
Date: 2009-08-23 23:18:46 +0200 (Sun, 23 Aug 2009)
New Revision: 3022

Modified:
   trunk/windstille/src/gui/automap.cpp
   trunk/windstille/src/gui/button.cpp
   trunk/windstille/src/gui/component.cpp
   trunk/windstille/src/gui/grid_component.cpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/list_view.cpp
   trunk/windstille/src/gui/list_view.hpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/menu_item.hpp
   trunk/windstille/src/gui/root_component.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/gui/tab_component.hpp
   trunk/windstille/src/sound/sound_manager.hpp
   trunk/windstille/src/sound/sound_source.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/gui/automap.cpp
===================================================================
--- trunk/windstille/src/gui/automap.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/automap.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -27,13 +27,17 @@
 namespace gui {
 
 Automap::Automap(Component* parent)
-  : Component(parent)
+  : Component(parent),
+    surface(),
+    pos(),
+    zoom()
 {
   assert(0);
 }
 
 Automap::Automap(const Rectf& rect, Component* parent)
   : Component(rect, parent),
+    surface(),
     pos(0.0f, 0.0f),
     zoom(6.0f)
 {

Modified: trunk/windstille/src/gui/button.cpp
===================================================================
--- trunk/windstille/src/gui/button.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/button.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -25,7 +25,8 @@
 namespace gui {
 
 Button::Button(Component* parent)
-  : Component(parent)
+  : Component(parent),
+    label()
 {
   assert(0);
 }

Modified: trunk/windstille/src/gui/component.cpp
===================================================================
--- trunk/windstille/src/gui/component.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/component.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -22,7 +22,8 @@
 namespace gui {
 
 Component::Component(Component* parent)
-  : parent(parent),
+  : rect(),
+    parent(parent),
     active(false)
 {
 }

Modified: trunk/windstille/src/gui/grid_component.cpp
===================================================================
--- trunk/windstille/src/gui/grid_component.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/grid_component.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -24,7 +24,11 @@
 namespace gui {
 
 GridComponent::GridComponent(Component* parent)
-  : Component(parent)
+  : Component(parent),
+    grid(),
+    pos(),
+    child_active(),
+    padding()
 {
   assert(0);  
 }
@@ -53,82 +57,82 @@
 
   for(int y = 0; y < grid.get_height(); ++y)
     for(int x = 0; x < grid.get_width(); ++x)
+    {
+      if (grid(x, y).component && !grid(x, y).has_parent())
       {
-        if (grid(x, y).component && !grid(x, y).has_parent())
-          {
-            if (x == pos.x && y == pos.y)
-              Display::fill_rect(grid(x, y).component->get_screen_rect(), Color(1.0f, 1.0f, 1.0f, 0.5f));
+        if (x == pos.x && y == pos.y)
+          Display::fill_rect(grid(x, y).component->get_screen_rect(), Color(1.0f, 1.0f, 1.0f, 0.5f));
             
-            grid(x, y).component->draw();
-          }
+        grid(x, y).component->draw();
       }
+    }
 }
 
 void
 GridComponent::update(float delta, const Controller& controller)
 {
   if (child_active && !grid(pos.x, pos.y).component->is_active())
-    {
-      child_active = false;
-    }
+  {
+    child_active = false;
+  }
   else if (!child_active)
+  {
+    for(InputEventLst::const_iterator i = controller.get_events().begin(); 
+        i != controller.get_events().end(); 
+        ++i)
     {
-      for(InputEventLst::const_iterator i = controller.get_events().begin(); 
-          i != controller.get_events().end(); 
-          ++i)
+      if (i->type == BUTTON_EVENT && i->button.down)
+      {
+        if (i->button.name == OK_BUTTON)
         {
-          if (i->type == BUTTON_EVENT && i->button.down)
-            {
-              if (i->button.name == OK_BUTTON)
-                {
-                  child_active = true;
-                  grid(pos.x, pos.y).component->set_active(true);
-                }
-              else if (i->button.name == CANCEL_BUTTON)
-                {
-                  set_active(false);
-                }
-            }
-          else if (i->type == AXIS_EVENT)
-            {
-              if (i->axis.name == X_AXIS)
-                {
-                  if (i->axis.pos < 0)
-                    {
-                      move_left();
-                    }
-                  else if (i->axis.pos > 0)
-                    {
-                      move_right();
-                    }
-                }
-              else if (i->axis.name == Y_AXIS)
-                {
-                  if (i->axis.pos < 0)
-                    {
-                      move_down();
-                    }
-                  else if (i->axis.pos > 0)
-                    {
-                      move_up();
-                    }
-                }
-            }
+          child_active = true;
+          grid(pos.x, pos.y).component->set_active(true);
         }
+        else if (i->button.name == CANCEL_BUTTON)
+        {
+          set_active(false);
+        }
+      }
+      else if (i->type == AXIS_EVENT)
+      {
+        if (i->axis.name == X_AXIS)
+        {
+          if (i->axis.pos < 0)
+          {
+            move_left();
+          }
+          else if (i->axis.pos > 0)
+          {
+            move_right();
+          }
+        }
+        else if (i->axis.name == Y_AXIS)
+        {
+          if (i->axis.pos < 0)
+          {
+            move_down();
+          }
+          else if (i->axis.pos > 0)
+          {
+            move_up();
+          }
+        }
+      }
     }
+  }
 
   for(int y = 0; y < grid.get_height(); ++y)
     for(int x = 0; x < grid.get_width(); ++x)
+    {
+      if (grid(x, y).component && !grid(x, y).has_parent())
       {
-        if (grid(x, y).component && !grid(x, y).has_parent())
-          {
-            // give input to current compontent, empty input to the rest
-            if (child_active && pos.x == x && pos.y == y)
-              grid(x, y).component->update(delta, controller);
-            else
-              grid(x, y).component->update(delta, Controller());
-          }
+        // give input to current compontent, empty input to the rest
+        if (child_active && pos.x == x && pos.y == y)
+          grid(x, y).component->update(delta, controller);
+        else
+          grid(x, y).component->update(delta, Controller());
       }
+    }
 }
 
 void
@@ -200,33 +204,33 @@
   assert(y < grid.get_height());
 
   if (grid(x, y).component)
+  {
+    std::cout << "Warning component already at: " << x << ", " << y << ", ignoring" << std::endl;
+    delete component;
+  }
+  else
+  {
+    Rectf rect = get_screen_rect();
+
+    if (colspan == 1 && rowspan == 1)
     {
-      std::cout << "Warning component already at: " << x << ", " << y << ", ignoring" << std::endl;
-      delete component;
+      grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
     }
-  else
+    else
     {
-      Rectf rect = get_screen_rect();
-
-      if (colspan == 1 && rowspan == 1)
+      for(int iy = 0; iy < rowspan; ++iy)
+        for(int ix = 0; ix < colspan; ++ix)
         {
-          grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
+          grid(x + ix, y + iy) = ComponentBox(component, Size(0, 0), Point(x, y));
         }
-      else
-        {
-          for(int iy = 0; iy < rowspan; ++iy)
-            for(int ix = 0; ix < colspan; ++ix)
-              {
-                grid(x + ix, y + iy) = ComponentBox(component, Size(0, 0), Point(x, y));
-              }
-          grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
-        }
+      grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
+    }
 
-      component->set_screen_rect(Rectf(Vector2f(rect.left + x * (rect.get_width() /grid.get_width())  + padding,
-                                                rect.top  + y * (rect.get_height()/grid.get_height()) + padding),
-                                       Sizef((rect.get_width()/grid.get_width())   * colspan - 2*padding,
-                                             (rect.get_height()/grid.get_height()) * rowspan - 2*padding)));
-    }
+    component->set_screen_rect(Rectf(Vector2f(rect.left + x * (rect.get_width() /grid.get_width())  + padding,
+                                              rect.top  + y * (rect.get_height()/grid.get_height()) + padding),
+                                     Sizef((rect.get_width()/grid.get_width())   * colspan - 2*padding,
+                                           (rect.get_height()/grid.get_height()) * rowspan - 2*padding)));
+  }
 }
 
 void

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -26,7 +26,8 @@
 
 GroupComponent::GroupComponent(const Rectf& rect, const std::string& title_, Component* parent)
   : Component(rect, parent),
-    title(title_)
+    title(title_),
+    child()
 {
   
 }

Modified: trunk/windstille/src/gui/list_view.cpp
===================================================================
--- trunk/windstille/src/gui/list_view.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/list_view.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -24,9 +24,11 @@
 namespace gui {
 
 ListView::ListView(const Rectf& rect, Component* parent)
-  : Component(rect, parent)
+  : Component(rect, parent),
+    columns(),
+    items(),
+    current_item(0)
 {
-  current_item = 0;
 }
 
 ListView::~ListView()

Modified: trunk/windstille/src/gui/list_view.hpp
===================================================================
--- trunk/windstille/src/gui/list_view.hpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/list_view.hpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -32,6 +32,11 @@
   struct Column {
     std::string title;
     float       width;
+    
+    Column()
+      : title(),
+        width()
+    {}
   };
   
 public:
@@ -41,6 +46,7 @@
     Item(const std::string& el1, 
          const std::string& el2,
          const std::string& el3)
+      : columns()
     {
       columns.push_back(el1);
       columns.push_back(el2);

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/menu.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -30,6 +30,9 @@
 namespace gui {
 
 Menu::Menu(const std::string& name, const Rectf& rect, bool allow_cancel, Component* parent)
+  : manager(),
+    group(),
+    menu()
 {
   if (!parent)
     {

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -30,6 +30,7 @@
 
 MenuComponent::MenuComponent(const Rectf& rect, bool allow_cancel_, Component* parent)
   : Component(rect, parent),
+    items(),
     current_item(0),
     font(Fonts::current()->vera20.get()),
     allow_cancel(allow_cancel_),

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -38,28 +38,28 @@
   TTFFont* font = parent->get_font();
   
   if (is_active) 
-    {
-      Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f));
-      Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f));
-      font_color = Color(1.0f, 1.0f, 1.0f);
-      fade_timer = 2.0f;
-    } 
+  {
+    Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f));
+    Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f));
+    font_color = Color(1.0f, 1.0f, 1.0f);
+    fade_timer = 2.0f;
+  } 
   else 
+  {
+    if (fade_timer != 0.0f)
     {
-      if (fade_timer != 0.0f)
-        {
-          //Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f * fade_timer));
-          //Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f * fade_timer));
-          font_color = Color(0.75f + 0.25f * fade_timer, 
-                             0.75f + 0.25f * fade_timer, 
-                             0.75f + 0.25f * fade_timer, 
-                             1.0f);
-        }
-      else
-        {
-          font_color = Color(0.75f, 0.75f, 0.75f, 1.0f);
-        }
+      //Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f * fade_timer));
+      //Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f * fade_timer));
+      font_color = Color(0.75f + 0.25f * fade_timer, 
+                         0.75f + 0.25f * fade_timer, 
+                         0.75f + 0.25f * fade_timer, 
+                         1.0f);
     }
+    else
+    {
+      font_color = Color(0.75f, 0.75f, 0.75f, 1.0f);
+    }
+  }
 
   font->draw(Vector2f(rect.left + font->get_height(), rect.top + font->get_height()/2.0f + rect.get_height()/2.0f - 2.0f),
              label, font_color);
@@ -77,7 +77,9 @@
 EnumMenuItem::EnumMenuItem(MenuComponent* parent_, 
                            const std::string& label_, int index_)
   : MenuItem(parent_, label_),
-    index(index_)
+    index(index_),
+    labels(),
+    on_change()
 {
 }
 
@@ -121,16 +123,16 @@
   TTFFont* font = parent->get_font();
   Color font_color;
   if (is_active)
-    {
-      font_color = Color(1.0f, 1.0f, 1.0f);
-    }
+  {
+    font_color = Color(1.0f, 1.0f, 1.0f);
+  }
   else
-    {
-      font_color = Color(0.75f, 0.75f, 0.75f, 1.0f);
-    }
+  {
+    font_color = Color(0.75f, 0.75f, 0.75f, 1.0f);
+  }
 
   font->draw(Vector2f(rect.right - font->get_height() - font->get_width(labels[index].label),
-                    rect.top + font->get_height()/2.0f + rect.get_height()/2.0f - 2.0f),
+                      rect.top + font->get_height()/2.0f + rect.get_height()/2.0f - 2.0f),
              labels[index].label,
              font_color);
 }
@@ -142,7 +144,8 @@
     value(value_),
     min_value(min_value_),
     max_value(max_value_),
-    step(step_)
+    step(step_),
+    on_change()
 {  
 }
 
@@ -177,13 +180,13 @@
 
   Color color;
   if (is_active)
-    {
-      color = Color(1.0f, 1.0f, 1.0f);
-    }
+  {
+    color = Color(1.0f, 1.0f, 1.0f);
+  }
   else
-    {
-      color = Color(0.75f, 0.75f, 0.75f, 1.0f);
-    }
+  {
+    color = Color(0.75f, 0.75f, 0.75f, 1.0f);
+  }
 
   Display::fill_rounded_rect(Rectf(Vector2f(rect.right - 4 - total_width, rect.top + 4),
                                    Sizef(width, rect.get_height() - 8)), 
@@ -198,7 +201,8 @@
 }
 
 ButtonMenuItem::ButtonMenuItem(MenuComponent* parent_, const std::string& label_)
-  : MenuItem(parent_, label_)
+  : MenuItem(parent_, label_),
+    on_click()
 {
 }
 

Modified: trunk/windstille/src/gui/menu_item.hpp
===================================================================
--- trunk/windstille/src/gui/menu_item.hpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/menu_item.hpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -46,6 +46,10 @@
 
   virtual void draw(const Rectf& rect, bool is_active);
   virtual void update(float delta);
+  
+private:
+  MenuItem(const MenuItem&);
+  MenuItem& operator=(const MenuItem&);
 };
 
 class EnumMenuItem : public MenuItem 
@@ -54,6 +58,11 @@
   struct EnumValue {
     std::string label;
     int         value;
+
+    EnumValue()
+      : label(),
+        value()
+    {}
   };
   
   int index;

Modified: trunk/windstille/src/gui/root_component.cpp
===================================================================
--- trunk/windstille/src/gui/root_component.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/root_component.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -26,7 +26,8 @@
 
 RootComponent::RootComponent(const Rectf& rect)
   : Component(rect, 0),
-    focus(0)
+    focus(0),
+    children()
 {
   set_active(true);
 }

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -25,15 +25,18 @@
 namespace gui {
 
 TabComponent::TabComponent(Component* parent)
-  : Component(parent)
+  : Component(parent),
+    tabs(),
+    current_tab(0)
 {
   assert(0);
 }
 
 TabComponent::TabComponent(const Rectf& rect, Component* parent)
-  : Component(rect, parent)
+  : Component(rect, parent),
+    tabs(),
+    current_tab(0)
 {
-  current_tab = 0;
 }
 
 TabComponent::~TabComponent()

Modified: trunk/windstille/src/gui/tab_component.hpp
===================================================================
--- trunk/windstille/src/gui/tab_component.hpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/gui/tab_component.hpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -34,10 +34,30 @@
     std::string label;
     Component*  component;
 
-    Tab() : component(0) {}
+    Tab() 
+      : label(),
+        component(0) 
+    {}
     
     Tab(const std::string& label_, Component* c)
-      : label(label_), component(c) {}
+      : label(label_),
+        component(c) 
+    {}
+
+    Tab(const Tab& rhs)
+      : label(rhs.label),
+        component(rhs.component)
+    {}
+
+    Tab& operator=(const Tab& rhs)
+    {
+      if (this != &rhs)
+      {
+        label     = rhs.label;
+        component = rhs.component;
+      }
+      return *this;
+    }
   };
 
   typedef std::vector<Tab> Tabs;
@@ -54,6 +74,7 @@
   void update(float delta, const Controller& controller);
 
   void pack(const std::string& name, Component* component);
+
 private:
   TabComponent (const TabComponent&);
   TabComponent& operator= (const TabComponent&);

Modified: trunk/windstille/src/sound/sound_manager.hpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.hpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/sound/sound_manager.hpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -98,6 +98,10 @@
 
   bool music_enabled;
   std::string current_music;
+
+private:
+  SoundManager(const SoundManager&);
+  SoundManager& operator=(const SoundManager&);
 };
 
 #endif

Modified: trunk/windstille/src/sound/sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/sound_source.cpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/sound/sound_source.cpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -20,6 +20,7 @@
 #include "sound_manager.hpp"
 
 SoundSource::SoundSource()
+  : source()
 {
   alGenSources(1, &source);
   SoundManager::check_al_error("Couldn't create audio source: ");

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-23 20:25:53 UTC (rev 3021)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-23 21:18:46 UTC (rev 3022)
@@ -105,6 +105,10 @@
 
   /** true if the Sprite is valid and usable, false if not */
   operator bool() const;
+
+private:
+  Sprite(const Sprite&);
+  Sprite& operator=(const Sprite&);
 };
 
 #endif



From grumbel at mail.berlios.de  Mon Aug 24 00:09:08 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 00:09:08 +0200
Subject: [Windstille-commit] r3023 - in trunk/windstille/src: app armature
	engine lisp objects particles properties screen sound
	sprite2d sprite3d util
Message-ID: <200908232209.n7NM98fg013313@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 00:09:04 +0200 (Mon, 24 Aug 2009)
New Revision: 3023

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/armature/bone.cpp
   trunk/windstille/src/armature/ipo_curve.cpp
   trunk/windstille/src/armature/mesh.cpp
   trunk/windstille/src/armature/mesh.hpp
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/engine/physics.hpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/lisp/lexer.cpp
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/parser.hpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/box.hpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/elevator.hpp
   trunk/windstille/src/objects/pistol.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/objects/vrdummy.cpp
   trunk/windstille/src/objects/vrdummy.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/properties/property.hpp
   trunk/windstille/src/properties/property_set.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/sound/ogg_sound_file.cpp
   trunk/windstille/src/sound/ogg_sound_file.hpp
   trunk/windstille/src/sound/sound_file.hpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/sound/wav_sound_file.cpp
   trunk/windstille/src/sound/wav_sound_file.hpp
   trunk/windstille/src/sprite2d/manager.cpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
   trunk/windstille/src/sprite3d/manager.cpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/sprite3d/sprite3d.hpp
   trunk/windstille/src/util/command_line.cpp
   trunk/windstille/src/util/command_line.hpp
   trunk/windstille/src/util/command_line_generic.cpp
   trunk/windstille/src/util/command_line_generic.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/sexpr_file_reader.cpp
Log:
Cleanupd up some compiler warnings

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/app/console.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -73,6 +73,10 @@
 private:
   Console* console;
   char buf[1024];
+
+private:
+  ConsoleStreambuf (const ConsoleStreambuf&);
+  ConsoleStreambuf& operator= (const ConsoleStreambuf&);
 };
 
 //-------------------------------------------------------------------------------
@@ -103,16 +107,18 @@
   ConsoleEntry current_entry;
 
   ConsoleImpl(Console& console_)
-    : console(console_)
+    : console(console_),
+      x_pos(16.0f),
+      y_pos(600.0f - 16.0f),
+      buffer(),
+      command_line(),
+      active(false),
+      history(),
+      history_position(1),
+      cursor_pos(0),
+      scroll_offset(0),
+      current_entry()
   {
-    x_pos = 16.0f;
-    y_pos = 600.0f - 16.0f;
-
-    active = false;
-    history_position = 1; 
-
-    scroll_offset = 0;
-    cursor_pos  = 0;   
   }
 
   void draw();
@@ -132,17 +138,17 @@
     current_entry.display_time = 0;
 
     for (int i = 0; i < len; ++i)
+    {
+      if (buf[i] == '\n' || (current_entry.message.size() > 80 && buf[i] == ' ')) // primitive linebreak
       {
-        if (buf[i] == '\n' || (current_entry.message.size() > 80 && buf[i] == ' ')) // primitive linebreak
-          {
-            buffer.push_back(current_entry);
-            current_entry = ConsoleEntry();
-          }
-        else
-          {
-            current_entry.message += buf[i];
-          }
+        buffer.push_back(current_entry);
+        current_entry = ConsoleEntry();
       }
+      else
+      {
+        current_entry.message += buf[i];
+      }
+    }
   }
 };
 

Modified: trunk/windstille/src/armature/bone.cpp
===================================================================
--- trunk/windstille/src/armature/bone.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/armature/bone.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -19,7 +19,17 @@
 #include "bone.hpp"
 
 Bone::Bone()
-  : parent(0)
+  : name(),
+    children_names(),
+    parent_name(),
+    children(),
+    parent(0),
+    length(),
+    quat(),
+    offset(),
+    render_matrix(),
+    render_head(),
+    render_tail()
 {
 }
 

Modified: trunk/windstille/src/armature/ipo_curve.cpp
===================================================================
--- trunk/windstille/src/armature/ipo_curve.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/armature/ipo_curve.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -19,6 +19,7 @@
 #include "ipo_curve.hpp"
 
 IpoCurve::IpoCurve()
+  : points()
 {
 }
 

Modified: trunk/windstille/src/armature/mesh.cpp
===================================================================
--- trunk/windstille/src/armature/mesh.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/armature/mesh.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -27,7 +27,15 @@
 #include "mesh.hpp"
 
 Mesh::Mesh(FileReader& reader, const std::string& path)
-  : blend_sfactor(GL_ONE),
+  : name(),
+    vertices(),
+    normals(),
+    texcoords(),
+    triangles(),
+    groups(),
+    vertices_(),
+    texture(),
+    blend_sfactor(GL_ONE),
     blend_dfactor(GL_ZERO)
 {
   if (reader.get_name() != "mesh")

Modified: trunk/windstille/src/armature/mesh.hpp
===================================================================
--- trunk/windstille/src/armature/mesh.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/armature/mesh.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -36,6 +36,12 @@
   std::string bone_name;
   float       weight;
   std::vector<int> vertices;
+
+  VertexGroup()
+    : bone_name(),
+      weight(),
+      vertices()
+  {}
 };
 
 struct Vertex
@@ -50,6 +56,16 @@
   std::vector<float> weights;
   std::vector<std::string> bone_names;
   std::vector<Bone*> bones;
+
+  Vertex()
+    : pos(),
+      normal(),
+      texcoord(),
+      render_pos(),
+      weights(),
+      bone_names(),
+      bones()
+  {}
 };
 
 /** */

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -60,10 +60,11 @@
 }
 
 Camera::Camera()
-  : pos(0, 0), zoom(1.0f)
-{
-  path_pos = 0;
-  mode     = CAMERA_FOLLOW_PLAYER;
+  : mode(CAMERA_FOLLOW_PLAYER),
+    pos(0, 0), 
+    zoom(1.0f),
+    path_pos(0)
+{  
 }
 
 void

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -25,10 +25,12 @@
 #include "entity.hpp"
 
 Entity::Entity()
-  : velocity(0, 0),
-    useable(false)
+  : pos(),
+    velocity(0, 0),
+    useable(false),
+    use_verb(),
+    parent(0)
 {
-  parent = 0;
 }
 
 Entity::~Entity()

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -22,12 +22,13 @@
 #include "physics.hpp"
 
 Physics::Physics(Entity* entity)
-  : entity(entity)
+  : entity(entity),
+    mass(200.0),
+    bounciness(1.0),
+    force(),
+    air_friction(0.0),
+    contact_friction(0.0)
 {
-  mass = 200.0;
-  bounciness = 1.0;
-  air_friction = 0.0;
-  contact_friction = 0.0;
 }
 
 Physics::~Physics()

Modified: trunk/windstille/src/engine/physics.hpp
===================================================================
--- trunk/windstille/src/engine/physics.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/physics.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -48,6 +48,10 @@
   Vector2f force;
   float air_friction;
   float contact_friction;
+
+private:
+  Physics(const Physics&);
+  Physics& operator=(const Physics&);
 };
 
 #endif

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -55,6 +55,7 @@
       MAX_WAKEUP_EVENT_COUNT
     };
 
+#pragma GCC diagnostic warning "-Weffc++"
   struct WakeupData 
   {
     explicit WakeupData() : type(NO_EVENT) {}
@@ -94,6 +95,10 @@
   
   void expose_object_to_squirrel(boost::shared_ptr<GameObject> object);
   void remove_object_from_squirrel(boost::shared_ptr<GameObject> object);
+
+private:
+  ScriptManager(const ScriptManager&);
+  ScriptManager& operator=(const ScriptManager&);
 };
 
 #endif

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -59,8 +59,17 @@
     navigation_graph(new NavigationGraph()),
     scene_graph(new SceneGraph()),
     filename(arg_filename),
+    name(),
+    music(),
+    init_script(),
+    vm(),
+    objects(),
+    new_objects(),
+    ambient_light(),
+    interactive_tilemap(0),
+    interactivebackground_tilemap(0),
     player(0)
-{ 
+{
   //current_ = this;
 
   if (debug) std::cout << "Creating new Sector" << std::endl;

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -69,6 +69,7 @@
 
   Player* player;
 
+private:
   void parse_file(const Pathname& filename);
 
   void commit_adds();

Modified: trunk/windstille/src/lisp/lexer.cpp
===================================================================
--- trunk/windstille/src/lisp/lexer.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/lisp/lexer.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -29,7 +29,7 @@
 };
 
 Lexer::Lexer(std::istream& newstream)
-    : stream(newstream), eof(false), linenumber(0)
+  : stream(newstream), eof(false), linenumber(0), bufend(0), c(0), token_length(0)
 {
   try {
     // trigger a refill of the buffer

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -24,7 +24,8 @@
 {
     
 Lisp::Lisp(int val)
-  : type(TYPE_INT)
+  : type(TYPE_INT),
+    v()
 {
   v.int_ = val;
 }

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -35,6 +35,7 @@
 {
 public:
   ParseError(const Parser* parser, const std::string& message) throw()
+    : string()
   {
     std::ostringstream msg;
     msg << "Parse error in file '" << parser->filename << "' line "

Modified: trunk/windstille/src/lisp/parser.hpp
===================================================================
--- trunk/windstille/src/lisp/parser.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/lisp/parser.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -42,6 +42,10 @@
   std::string filename;
   Lexer* lexer;
   Lexer::TokenType token;
+
+private:
+  Parser(const Parser&);
+  Parser& operator=(const Parser&);
 };
 
 } // end of namespace lisp

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/box.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -27,6 +27,9 @@
 #include "sprite2d/manager.hpp"
 
 Box::Box(FileReader& props)
+  : sprite(),
+    colobj(0),
+    gravity()
 {
   gravity = 0.0f;
   float width  = 64.0f;

Modified: trunk/windstille/src/objects/box.hpp
===================================================================
--- trunk/windstille/src/objects/box.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/box.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -41,6 +41,10 @@
   void update(float delta);
 
   void draw(SceneContext& gc);
+
+private:
+  Box(const Box&);
+  Box& operator=(const Box&);
 };
 
 #endif

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/character.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -30,10 +30,11 @@
 #include <exception>
 
 Character::Character(FileReader& props)
+  : sprite(),
+    z_pos(100.0f)
 {
   set_useable(true);
   use_verb = "Talk";
-  z_pos = 100.0f;
 
   std::string sprite3d_filename = "models/characters/jane/jane.wsprite";
   std::string action_name;

Modified: trunk/windstille/src/objects/elevator.hpp
===================================================================
--- trunk/windstille/src/objects/elevator.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/elevator.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -29,12 +29,17 @@
   Sizef size;
   CollisionObject* colobject;
   Sprite sprite;
+
 public:
   Elevator(FileReader& props);
   ~Elevator();
 
   void draw(SceneContext& sc);
   void update(float delta);
+
+private:
+  Elevator(const Elevator&);
+  Elevator& operator=(const Elevator&);
 };
 
 #endif

Modified: trunk/windstille/src/objects/pistol.hpp
===================================================================
--- trunk/windstille/src/objects/pistol.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/pistol.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -40,6 +40,10 @@
   void update(float delta);
 
   void fire(bool enable);
+
+private:
+  Pistol(const Pistol&);
+  Pistol& operator=(const Pistol&);
 };
 
 #endif

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/player.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -44,7 +44,19 @@
 static const float RUN_SPEED = 256.0;
 
 Player::Player () 
- : state(STAND)
+  : sprite(),
+    jumping(),
+    bomb_placed(),
+    hit_count(),
+    energy(),
+    c_object(),
+    laser_pointer(),
+    contact(),
+    weapon(),
+    state(STAND),
+    jump_foot(),
+    reload_time(),
+    z_pos()
 {
   sprite = Sprite3D(Pathname("models/characters/jane/jane.wsprite"));
   pos.x = 320;

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/player.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -165,6 +165,10 @@
   void try_set_action(const std::string& name, float speed = 1.0);
 
   Direction get_direction() const;
+
+private:
+  Player(const Player&);
+  Player& operator=(const Player&);
 };
 
 #endif

Modified: trunk/windstille/src/objects/vrdummy.cpp
===================================================================
--- trunk/windstille/src/objects/vrdummy.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/vrdummy.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -20,6 +20,10 @@
 #include "vrdummy.hpp"
 
 VRDummy::VRDummy(FileReader& props)
+  : sprite(),
+    highlight(),
+    rotation(),
+    jump_time()
 {
   props.get("name", name);
   props.get("pos",  pos);

Modified: trunk/windstille/src/objects/vrdummy.hpp
===================================================================
--- trunk/windstille/src/objects/vrdummy.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/objects/vrdummy.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -32,6 +32,7 @@
 
   float rotation;
   float jump_time;
+
 public:
   VRDummy(FileReader& props);
   ~VRDummy();

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -53,6 +53,9 @@
 }
 
 SurfaceDrawer::SurfaceDrawer(FileReader& props)
+  : surface(),
+    blendfunc_src(),
+    blendfunc_dest()
 {
   std::string blendfunc_src_str = "src_alpha";
   std::string blendfunc_dst_str = "one_minus_src_alpha";

Modified: trunk/windstille/src/properties/property.hpp
===================================================================
--- trunk/windstille/src/properties/property.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/properties/property.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -52,7 +52,8 @@
   } value;
 
   PropertyImpl(Type type)
-    : Property(type)
+    : Property(type),
+      value()
   {}
 
 public:

Modified: trunk/windstille/src/properties/property_set.cpp
===================================================================
--- trunk/windstille/src/properties/property_set.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/properties/property_set.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -24,7 +24,8 @@
 
 PropertySet::PropertySet(const std::string& name_, PropertySet* parent_)
   : parent(parent_),
-    name(name_)
+    name(name_),
+    properties()
 {  
 }
 

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -96,6 +96,24 @@
   Screen* current_gui;
 
   GameSessionImpl() 
+    : sc(),
+      fadeout_value(),
+      fade_time(),
+      sector(),
+      view(),
+      filename(),
+      pause(),
+      cutscene_value(),
+      cutscene_mode(),
+      next_action(),
+      fade_state(),
+      fade_color(),
+      speech_manager(),
+      dialog_manager(),
+      conversation(),
+      inventory(),
+      pda(),
+      current_gui()
   {
     current_gui    = 0;
     cutscene_mode  = false;
@@ -119,6 +137,10 @@
   void update(float delta, const Controller& controller);
   
   void handle_event(const SDL_Event& event);
+
+private:
+  GameSessionImpl (const GameSessionImpl&);
+  GameSessionImpl& operator= (const GameSessionImpl&);
 };
 
 GameSession::GameSession(const Pathname& arg_filename)

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -24,8 +24,8 @@
 #include "app/menu_manager.hpp"
 
 TitleScreen::TitleScreen()
+  : background(Pathname("images/titlescreen.sprite"))
 {
-  background = Sprite(Pathname("images/titlescreen.sprite"));
   background.set_scale(std::max(float(Display::get_width())  / background.get_width(),
                                 float(Display::get_height()) / background.get_height()));
 }

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/screen/view.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -27,6 +27,7 @@
 
 View::View()
   : state(Display::get_width(), Display::get_height()),
+    camera(),
     zoom(1.0), 
     transform(0, 0)
 {

Modified: trunk/windstille/src/sound/ogg_sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/ogg_sound_file.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/ogg_sound_file.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -18,10 +18,10 @@
 
 #include "ogg_sound_file.hpp"
 
-OggSoundFile::OggSoundFile(PHYSFS_file* file)
+OggSoundFile::OggSoundFile(PHYSFS_file* file_)
+  : file(file_),
+    vorbis_file()
 {
-  this->file = file;
-
   ov_callbacks callbacks = { cb_read, cb_seek, cb_close, cb_tell };
   ov_open_callbacks(file, &vorbis_file, 0, 0, callbacks);
 

Modified: trunk/windstille/src/sound/ogg_sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/ogg_sound_file.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/ogg_sound_file.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -42,6 +42,10 @@
   
   PHYSFS_file* file;
   OggVorbis_File vorbis_file;
+
+private:
+  OggSoundFile(const OggSoundFile&);
+  OggSoundFile& operator=(const OggSoundFile&);
 };
 
 #endif

Modified: trunk/windstille/src/sound/sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/sound_file.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/sound_file.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -26,7 +26,12 @@
 class SoundFile
 {
 public:
-  SoundFile() {}
+  SoundFile() 
+    : channels(),
+      rate(),
+      bits_per_sample(),
+      size()
+  {}
   virtual ~SoundFile() {}
 
   virtual size_t read(void* buffer, size_t buffer_size) = 0;

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -34,7 +34,12 @@
   : device(0), 
     context(0), 
     sound_enabled(false), 
-    music_enabled(true)
+    buffers(),
+    sources(),
+    music_source(),
+    next_music_source(),
+    music_enabled(true),
+    current_music()
 {
   try 
     {

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -23,26 +23,29 @@
 #include "sound_file.hpp"
 
 StreamSoundSource::StreamSoundSource(std::auto_ptr<SoundFile> file_)
+  : file(file_),
+    format(),
+    fade_state(),
+    fade_start_ticks(),
+    fade_time()
 {
-  file = file_;
-
   alGenBuffers(STREAMFRAGMENTS, buffers);
   SoundManager::check_al_error("Couldn't allocate audio buffers: ");
 
   format = SoundManager::get_sample_format(file.get());
 
   try 
+  {
+    for(size_t i = 0; i < STREAMFRAGMENTS; ++i) 
     {
-      for(size_t i = 0; i < STREAMFRAGMENTS; ++i) 
-        {
-          fillBufferAndQueue(buffers[i]);
-        }
+      fillBufferAndQueue(buffers[i]);
     }
+  }
   catch(...) 
-    {
-      alDeleteBuffers(STREAMFRAGMENTS, buffers);
-      throw;
-    }
+  {
+    alDeleteBuffers(STREAMFRAGMENTS, buffers);
+    throw;
+  }
 }
 
 StreamSoundSource::~StreamSoundSource()

Modified: trunk/windstille/src/sound/wav_sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -40,10 +40,10 @@
   return result;
 }
 
-WavSoundFile::WavSoundFile(PHYSFS_file* file)
+WavSoundFile::WavSoundFile(PHYSFS_file* file_)
+  : file(file_),
+    datastart()
 {
-  this->file = file;
-
   char magic[4];
   if(PHYSFS_read(file, magic, sizeof(magic), 1) != 1)
     throw std::runtime_error("Couldn't read file magic (not a wave file)");

Modified: trunk/windstille/src/sound/wav_sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sound/wav_sound_file.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -35,6 +35,10 @@
   PHYSFS_file* file;
   
   PHYSFS_sint64 datastart;
+
+private:
+  WavSoundFile(const WavSoundFile&);
+  WavSoundFile& operator=(const WavSoundFile&);
 };
 
 #endif

Modified: trunk/windstille/src/sprite2d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sprite2d/manager.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -27,6 +27,7 @@
 #include "sprite2d/sprite.hpp"
 
 SpriteManager::SpriteManager()
+  : datas()
 {
 }
 

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -101,6 +101,43 @@
   blend_dfactor = GL_ONE_MINUS_SRC_ALPHA;
 }
 
+Sprite::Sprite(const Sprite& rhs)
+  : data(rhs.data),
+    current_action(rhs.current_action),
+    frame(rhs.frame),
+    speed(rhs.speed),
+    alpha(rhs.alpha),
+    pingpong(rhs.pingpong),
+    reverse(rhs.reverse),
+    vflip(rhs.vflip),
+    blend_sfactor(rhs.blend_sfactor),
+    blend_dfactor(rhs.blend_dfactor),
+    scale(rhs.scale),
+    color(rhs.color)
+{
+}
+
+Sprite&
+Sprite::operator=(const Sprite& rhs)
+{
+  if (this != &rhs)
+  {
+    data           = rhs.data;
+    current_action = rhs.current_action;
+    frame          = rhs.frame;
+    speed          = rhs.speed;
+    alpha          = rhs.alpha;
+    pingpong       = rhs.pingpong;
+    reverse        = rhs.reverse;
+    vflip          = rhs.vflip;
+    blend_sfactor  = rhs.blend_sfactor;
+    blend_dfactor  = rhs.blend_dfactor;
+    scale          = rhs.scale;
+    color          = rhs.color; 
+  }
+  return *this;
+}
+
 Sprite::~Sprite()
 {
 }

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -64,6 +64,8 @@
       one-file sprite */
   explicit Sprite(const Pathname& filename);
   explicit Sprite(const SpriteDataPtr data);
+  Sprite(const Sprite&);
+  Sprite& operator=(const Sprite&);
   ~Sprite();
 
   void update(float delta);
@@ -105,10 +107,6 @@
 
   /** true if the Sprite is valid and usable, false if not */
   operator bool() const;
-
-private:
-  Sprite(const Sprite&);
-  Sprite& operator=(const Sprite&);
 };
 
 #endif

Modified: trunk/windstille/src/sprite3d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sprite3d/manager.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -24,6 +24,7 @@
 namespace sprite3d {
 
 Manager::Manager()
+  : datas()
 {
 }
 

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -72,6 +72,39 @@
   next_action.action    = 0;
 }
 
+Sprite3D::Sprite3D(const Sprite3D& rhs)
+  : data(rhs.data),
+    actions_switched(rhs.actions_switched),
+    frame1(rhs.frame1),
+    frame2(rhs.frame2),
+    blend_time(rhs.blend_time),
+    next_frame(rhs.next_frame),
+    next_action(rhs.next_action),
+    abort_at_frame(rhs.abort_at_frame),
+    blend_sfactor(rhs.blend_sfactor),
+    blend_dfactor(rhs.blend_dfactor)
+{
+}
+
+Sprite3D&
+Sprite3D::operator=(const Sprite3D& rhs)
+{
+  if (this != &rhs)
+  {
+    data             = rhs.data;
+    actions_switched = rhs.actions_switched;
+    frame1           = rhs.frame1;
+    frame2           = rhs.frame2;
+    blend_time       = rhs.blend_time;
+    next_frame       = rhs.next_frame;
+    next_action      = rhs.next_action;
+    abort_at_frame   = rhs.abort_at_frame;
+    blend_sfactor    = rhs.blend_sfactor;
+    blend_dfactor    = rhs.blend_dfactor;
+  }
+  return *this;
+}
+
 Sprite3D::~Sprite3D()
 {
 }
@@ -266,6 +299,10 @@
   {
     sprite->draw(pos, modelview);
   }
+
+private:
+  Sprite3DDrawingRequest(const Sprite3DDrawingRequest&);
+  Sprite3DDrawingRequest& operator=(const Sprite3DDrawingRequest&);
 };
 
 void

Modified: trunk/windstille/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -48,6 +48,8 @@
 
   Sprite3D();
   explicit Sprite3D(const Pathname& filename);
+  Sprite3D(const Sprite3D&);
+  Sprite3D& operator=(const Sprite3D&);
   ~Sprite3D();
 
   /**
@@ -140,6 +142,7 @@
 
   void set_next_frame();
 
+private:
   const sprite3d::Data* data;
   bool actions_switched;
 

Modified: trunk/windstille/src/util/command_line.cpp
===================================================================
--- trunk/windstille/src/util/command_line.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/util/command_line.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -31,8 +31,8 @@
 #include "command_line_generic.hpp"
 
 CommandLine::CommandLine()
+  : impl(new CommandLine_Generic())
 {
-	impl = new CommandLine_Generic();
 }
 
 CommandLine::~CommandLine()

Modified: trunk/windstille/src/util/command_line.hpp
===================================================================
--- trunk/windstille/src/util/command_line.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/util/command_line.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -152,6 +152,10 @@
 //! Implementation:
 private:
 	CommandLine_Generic* impl;
+
+private:
+  CommandLine(const CommandLine&);
+  CommandLine& operator=(const CommandLine&);
 };
 
 #endif

Modified: trunk/windstille/src/util/command_line_generic.cpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/util/command_line_generic.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -40,6 +40,11 @@
 #endif
 
 CommandLine_Generic::CommandLine_Generic()
+  : help_indent(),
+    programm(),
+    options(),
+    parsed_options(),
+    current_option()
 {
   help_indent = 18;
 }

Modified: trunk/windstille/src/util/command_line_generic.hpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.hpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/util/command_line_generic.hpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -52,6 +52,14 @@
 		std::string long_option;
 		std::string argument;
 		bool visible;
+
+          Option()
+            : key(),
+              help(),
+              long_option(),
+              argument(),
+              visible()
+          {}
 	};
   
 	typedef std::vector<Option> Options;
@@ -61,6 +69,11 @@
 	{
 		int key;
 		std::string argument;
+
+          ParsedOption()
+            : key(),
+              argument()
+          {}
 	};
 
 	typedef std::vector<ParsedOption> ParsedOptions;

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -81,6 +81,7 @@
 }
 
 FileReader::FileReader()
+  : impl()
 {
 }
 

Modified: trunk/windstille/src/util/sexpr_file_reader.cpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-23 21:18:46 UTC (rev 3022)
+++ trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-23 22:09:04 UTC (rev 3023)
@@ -244,6 +244,9 @@
     return 0;
   } 
 
+private:
+  SExprFileReaderImpl(const SExprFileReaderImpl&);
+  SExprFileReaderImpl& operator=(const SExprFileReaderImpl&);
 };
 
 SExprFileReader::SExprFileReader(const lisp::Lisp* sexpr, bool delete_sexpr)



From grumbel at mail.berlios.de  Mon Aug 24 00:44:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 00:44:04 +0200
Subject: [Windstille-commit] r3024 - in trunk/windstille/src: app collision
	engine hud input lisp objects screen scripting
Message-ID: <200908232244.n7NMi4Ei030231@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 00:43:53 +0200 (Mon, 24 Aug 2009)
New Revision: 3024

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/collision/collision_object.cpp
   trunk/windstille/src/collision/stair_contact.cpp
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/hud/controller_help_window.hpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/controller_description.cpp
   trunk/windstille/src/input/controller_description.hpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/lisp/lisp.hpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/property_iterator.hpp
   trunk/windstille/src/objects/elevator.cpp
   trunk/windstille/src/objects/grenade.cpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/pistol.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/objects/swarm.hpp
   trunk/windstille/src/objects/test_object.cpp
   trunk/windstille/src/objects/test_object.hpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/scripting/squirrel_error.cpp
Log:
Cleanupd up some compiler warnings, should now be -Weffc++ clean

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/app/config.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -36,6 +36,7 @@
 Config config;
 
 Config::Config()
+  : config_values()
 {
   add(new ConfigValue<int> ("anti-aliasing",  _("Use NUMx Anti-Aliasing"), true, 0));
   add(new ConfigValue<bool>("fullscreen",     _("Use fullscreen"),         true, false));

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -29,6 +29,8 @@
  ***********************************************************************/
 
 CollisionEngine::CollisionEngine()
+  : objects(),
+    unstuck_velocity()
 {
   unstuck_velocity = 50.0f;
 }

Modified: trunk/windstille/src/collision/collision_object.cpp
===================================================================
--- trunk/windstille/src/collision/collision_object.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/collision/collision_object.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -29,7 +29,17 @@
  ***********************************************************************/
 
 CollisionObject::CollisionObject(GameObject* game_object, const Rectf& rect_)
-  : primitive(rect_)
+ : object_type(),
+   pos(),
+   velocity(),
+   game_object(),
+   collision(),
+   primitive(rect_),
+   tilemap(),
+   is_unstuckable(),
+   is_unstuck_movable(),
+   is_domains(),
+   check_domains()
 {
   object_type        = RECTANGLE;
   is_unstuckable     = true;
@@ -43,7 +53,17 @@
 }
 
 CollisionObject::CollisionObject(TileMap* tilemap_)
-  : tilemap(tilemap_)
+ : object_type(),
+   pos(),
+   velocity(),
+   game_object(),
+   collision(),
+   primitive(),
+   tilemap(tilemap_),
+   is_unstuckable(),
+   is_unstuck_movable(),
+   is_domains(),
+   check_domains() 
 {
   object_type        = TILEMAP;
   is_unstuckable     = true;

Modified: trunk/windstille/src/collision/stair_contact.cpp
===================================================================
--- trunk/windstille/src/collision/stair_contact.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/collision/stair_contact.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -22,7 +22,10 @@
 #include "stair_contact.hpp"
 
 StairContact::StairContact(TileMap* tilemap_, const Point& pos_)
-  : tilemap(tilemap_), pos(pos_), advancement(0.0f)
+  : tilemap(tilemap_), 
+    pos(pos_), 
+    advancement(0.0f),
+    tile_type()
 {
   unsigned int col = tilemap->get_pixel(pos.x, pos.y);
   if (!(col & TILE_STAIRS))

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -25,7 +25,8 @@
 #include "entity.hpp"
 
 Entity::Entity()
-  : pos(),
+  : done(),
+    pos(),
     velocity(0, 0),
     useable(false),
     use_verb(),

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -19,6 +19,9 @@
 #ifndef HEADER_WINDSTILLE_ENGINE_SCRIPT_MANAGER_HPP
 #define HEADER_WINDSTILLE_ENGINE_SCRIPT_MANAGER_HPP
 
+// unions aren't properly handled by -Weffc++, so we switch the warning off
+#pragma GCC diagnostic ignored "-Weffc++"
+
 #include <vector>
 #include <list>
 #include <map>
@@ -55,7 +58,6 @@
       MAX_WAKEUP_EVENT_COUNT
     };
 
-#pragma GCC diagnostic warning "-Weffc++"
   struct WakeupData 
   {
     explicit WakeupData() : type(NO_EVENT) {}

Modified: trunk/windstille/src/hud/controller_help_window.hpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/hud/controller_help_window.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -42,7 +42,6 @@
   void update(float delta, const Controller& controller);
 
 private:
-  boost::shared_ptr<ControllerHelpWindowImpl> impl;
   static ControllerHelpWindow* current_;
 };
 

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -51,6 +51,15 @@
   Items items;
   int current_item;
 
+  InventoryImpl()
+    : moving(),
+      add_angle(),
+      slot(),
+      slothighlight(),
+      items(),
+      current_item()
+  {}
+
   void update(float delta, const Controller& controller);
   void draw();
   

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/hud/pda.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -38,6 +38,11 @@
 
 PDA::PDA()
   : pos(100.0f, 100.0f),
+    background(),
+    ui_area(),
+    text_area(),
+    dialogs(),
+    objectives(),
     state(PDA_OBJECTIVES),
     old_state(PDA_NONE)
 { 

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/input/controller.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -23,9 +23,9 @@
 #include "controller.hpp"
 
 Controller::Controller()
+  : states(),
+    events(LAST_EVENT)// FIXME: need to mark states with type
 {
-  // FIXME: need to mark states with type
-  states.resize(LAST_EVENT);
 }
 
 float

Modified: trunk/windstille/src/input/controller_description.cpp
===================================================================
--- trunk/windstille/src/input/controller_description.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/input/controller_description.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -21,6 +21,8 @@
 
 
 ControllerDescription::ControllerDescription()
+  : str_to_event(),
+    id_to_event()
 {
 }
 

Modified: trunk/windstille/src/input/controller_description.hpp
===================================================================
--- trunk/windstille/src/input/controller_description.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/input/controller_description.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -28,6 +28,12 @@
   InputEventType type;
   int            id;
   std::string    name;
+
+  InputEventDefinition()
+    : type(),
+      id(),
+      name()
+  {}
 };
 
 /** */

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -27,7 +27,10 @@
 #include "input_configurator.hpp"
 
 InputConfigurator::InputConfigurator()
-  : wait_for_plus(false),
+  : items(),
+    wait_for_plus(false),
+    minus(),
+    out(),
     area(Rectf(120, 100,
                Display::get_width()  - 120, 
                Display::get_height() - 100), 

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -16,8 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <boost/format.hpp>
+
 #include <assert.h>
-#include <boost/format.hpp>
 #include <math.h>
 #include <iostream>
 #include <sstream>

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -24,8 +24,8 @@
 {
     
 Lisp::Lisp(int val)
-  : type(TYPE_INT),
-    v()
+  : v(),
+    type(TYPE_INT)    
 {
   v.int_ = val;
 }

Modified: trunk/windstille/src/lisp/lisp.hpp
===================================================================
--- trunk/windstille/src/lisp/lisp.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/lisp/lisp.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -17,6 +17,9 @@
 #ifndef __LISP_HPP__
 #define __LISP_HPP__
 
+// unions aren't properly handled by -Weffc++, so we switch the warning off
+#pragma GCC diagnostic ignored "-Weffc++"
+
 #include <string>
 #include <vector>
 #include <iostream>

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -55,7 +55,9 @@
 };
 
 Parser::Parser()
-  : lexer(0)
+  : filename(),
+    lexer(0),
+    token()
 {
 }
 

Modified: trunk/windstille/src/lisp/property_iterator.hpp
===================================================================
--- trunk/windstille/src/lisp/property_iterator.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/lisp/property_iterator.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -30,10 +30,12 @@
   {
     return &currentval;
   }
+
   T operator*() const
   {
     return currentval;
   }
+
   bool next() {
     bool res;
     do {

Modified: trunk/windstille/src/objects/elevator.cpp
===================================================================
--- trunk/windstille/src/objects/elevator.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/elevator.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -23,6 +23,9 @@
 #include "sprite2d/manager.hpp"
 
 Elevator::Elevator(FileReader& props)
+  : size(),
+    colobject(),
+    sprite()
 {
   std::string spritename;
 

Modified: trunk/windstille/src/objects/grenade.cpp
===================================================================
--- trunk/windstille/src/objects/grenade.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/grenade.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -22,9 +22,9 @@
 
 Grenade::Grenade()
   : sprite(Pathname("models/objects/grenade/grenade.wsprite")), 
-    physics(this)
+    physics(this),
+    c_object(new CollisionObject(this, Rectf(0, 0, 32, 32)))
 {
-  c_object.reset(new CollisionObject(this, Rectf(0, 0, 32, 32)));
   physics.register_collobj(*c_object);
 
   Sector::current()->get_collision_engine()->add(c_object.get());

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -25,13 +25,13 @@
   : sprite(Pathname("images/hedgehog.sprite")),
     die_sprite(Pathname("images/hedgehog_die1.sprite")),
     light(Pathname("images/hedgehog_light.sprite")),
-    highlight(Pathname("images/hedgehog_highlight.sprite"))
+    highlight(Pathname("images/hedgehog_highlight.sprite")),
+    direction_left(false),
+    state(WALKING)
 {
   props.get("name", name);
   props.get("pos",  pos);
     
-  direction_left = false;
-  state = WALKING;
   light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   highlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
 }

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -24,6 +24,11 @@
 #include "laser_pointer.hpp"
 
 LaserPointer::LaserPointer()
+ : noise(),
+   laserpointer(),
+   laserpointer_light(),
+   progress(),
+   angle()
 {
   noise = Texture(Pathname("images/noise2.png"));
   laserpointer = Sprite(Pathname("images/laserpointer.sprite"));

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -23,6 +23,12 @@
 #define SAMPLES 5
 
 Liquid::Liquid(FileReader& props)
+  : texture(),
+    t(),
+    heightfield_store1(),
+    heightfield_store2(),
+    heightfield1(),
+    heightfield2()
 {
   int width = 10;
   t = 0;

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -25,10 +25,10 @@
 #include "nightvision.hpp"
 
 Nightvision::Nightvision(FileReader& /*props*/)
-  : nightvision(Pathname("images/nightvision.sprite"))
+  : nightvision(Pathname("images/nightvision.sprite")),
+    noise(Pathname("images/noise.png"))
 {
   name = "nightvision";
-  noise = Texture(Pathname("images/noise.png"));
   noise.set_wrap(GL_REPEAT);
   noise.set_filter(GL_LINEAR);
 }

Modified: trunk/windstille/src/objects/pistol.cpp
===================================================================
--- trunk/windstille/src/objects/pistol.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/pistol.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -20,10 +20,9 @@
 #include "pistol.hpp"
 
 Pistol::Pistol()
-  : laser_pointer(0)
+  : sprite(Pathname("models/objects/pistol/pistol.wsprite")),
+    laser_pointer(new LaserPointer())
 {
-  laser_pointer = new LaserPointer();
-  sprite = Sprite3D(Pathname("models/objects/pistol/pistol.wsprite"));
 }
 
 Pistol::~Pistol()

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -220,7 +220,10 @@
 };
 
 Shockwave::Shockwave(FileReader& props)
-  : noise(Pathname("images/noise3.png"))
+  : pos(),
+    noise(Pathname("images/noise3.png")),
+    shader_program(),
+    radius()
 {
   props.get("pos", pos);
   

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -21,8 +21,14 @@
 #include "sprite2d/manager.hpp"
 
 SpiderMine::SpiderMine(FileReader& props)
-  : explode(Pathname("images/explosion.sprite")),
-    explode_light(Pathname("images/explolight.sprite"))
+  : sprite(),
+    explode(Pathname("images/explosion.sprite")),
+    explode_light(Pathname("images/explolight.sprite")),
+    initial_position(),
+    walk_speed(160),
+    jump_time(0.0),
+    state(WAIT),
+    exploded(false)
 {
   props.get("name", name);
   props.get("pos",  pos);
@@ -30,10 +36,6 @@
   sprite = Sprite(Pathname("images/spider_mine.sprite"));
   //sprite.set_scale(.5, .5);
   initial_position = pos;
-  walk_speed = 160;
-  exploded = false;
-  state = WAIT;
-  jump_time = 0.0;
 }
 
 SpiderMine::~SpiderMine()

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/swarm.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -28,6 +28,9 @@
 #include "swarm.hpp"
 
 Swarm::Swarm(FileReader& props)
+  : agents(),
+    target(),
+    turn_speed()
 {
   int count = 100;
   turn_speed = 7.0f;

Modified: trunk/windstille/src/objects/swarm.hpp
===================================================================
--- trunk/windstille/src/objects/swarm.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/swarm.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -30,6 +30,15 @@
   float  speed;
   float  max_speed;
   float  turn_speed;
+
+  SwarmAgent()
+    : pos(),
+      last_pos(),
+      angle(),
+      speed(),
+      max_speed(),
+      turn_speed()
+  {}
 };
 
 /** */
@@ -42,6 +51,7 @@
   Vector2f target;
 
   float turn_speed; 
+
 public:
   Swarm(FileReader& reader);
   

Modified: trunk/windstille/src/objects/test_object.cpp
===================================================================
--- trunk/windstille/src/objects/test_object.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/test_object.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -23,6 +23,9 @@
 #include "sprite3d/manager.hpp"
 
 TestObject::TestObject(FileReader& props)
+  : sprite(),
+    attached_sprites(),
+    pos()
 {
   pos = Vector2f(0, 0);
   std::string spritename;

Modified: trunk/windstille/src/objects/test_object.hpp
===================================================================
--- trunk/windstille/src/objects/test_object.hpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/objects/test_object.hpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -45,6 +45,11 @@
   struct AttachedSprite {
     Sprite3D sprite;
     Sprite3D::PointID attachpoint;
+
+    AttachedSprite()
+      : sprite(),
+        attachpoint()
+    {}
   };
   std::vector<AttachedSprite> attached_sprites;
   Vector2f pos;

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -19,6 +19,7 @@
 #include "screen/screen_manager.hpp"
 
 #include <boost/format.hpp>
+
 #include <boost/filesystem.hpp>
 #include <iostream>
 

Modified: trunk/windstille/src/scripting/squirrel_error.cpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-23 22:09:04 UTC (rev 3023)
+++ trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-23 22:43:53 UTC (rev 3024)
@@ -22,6 +22,7 @@
 namespace Scripting {
 
 SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message) throw()
+  : message()
 {
   std::ostringstream msg;
   msg << "Squirrel error: " << context << ": " << message << " (";
@@ -41,6 +42,7 @@
 }
 
 SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& message) throw()
+  : message()
 {
   std::ostringstream msg;
   msg << "Squirrel error: " << message << " (";



From grumbel at mail.berlios.de  Mon Aug 24 02:21:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 02:21:38 +0200
Subject: [Windstille-commit] r3025 - in trunk/windstille/src: app collision
	display engine gui hud input lisp math navigation particles
	screen sound sprite2d sprite3d tile util
Message-ID: <200908240021.n7O0LcY7016267@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 02:21:33 +0200 (Mon, 24 Aug 2009)
New Revision: 3025

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/display/color.hpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_request.hpp
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/opengl_state.cpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/software_surface.cpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/gui/list_view.cpp
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/lisp/property_iterator.hpp
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/math/point.hpp
   trunk/windstille/src/math/quaternion.hpp
   trunk/windstille/src/math/size.hpp
   trunk/windstille/src/math/vector3.hpp
   trunk/windstille/src/navigation/edge_position.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/randomizer.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/util/baby_xml.cpp
   trunk/windstille/src/util/response_curve.cpp
Log:
Cleaned up a bunch of float/int/double conversion warnings

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -364,8 +364,8 @@
   pos.y += size.height / 2.0f;
 
   // scale the coordinates
-  pos.x = pos.x * Display::get_width() / 800;
-  pos.y = pos.y * Display::get_height() / 600;
+  pos.x = pos.x * static_cast<float>(Display::get_width())  / 800.0f;
+  pos.y = pos.y * static_cast<float>(Display::get_height()) / 600.0f;
 
   // move pos back to top/left
   pos.x -= size.width  / 2.0f;
@@ -377,8 +377,8 @@
 Rectf
 MenuManager::create_centered_rect(float w, float h)
 {
-  return Rectf(Vector2f((Display::get_width()  - w)/2.0f,
-                        (Display::get_height() - h)/2.0f),
+  return Rectf(Vector2f((static_cast<float>(Display::get_width())  - w)/2.0f,
+                        (static_cast<float>(Display::get_height()) - h)/2.0f),
                Sizef(w, h));
 }
   

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -140,8 +140,8 @@
 
 int c_round(float f)
 {
-  int i=(int)f;
-  if(fabs(f-i)>0.5)
+  int i = static_cast<int>(f);
+  if(fabsf(f-i)>0.5)
     {
       if(i>0)
 	i++;
@@ -312,8 +312,8 @@
 			  r.object2 = *j;
 			  col_data = r;
 			  min_time = r.col_time;
-			  if (min_time > 0.0005)
-			    min_time -= 0.0005;
+			  if (min_time > 0.0005f)
+			    min_time -= 0.0005f;
 			}
 		    }
 		}
@@ -530,10 +530,10 @@
   int miny, maxy;
   int x, y;
 
-  minx = (int)(r.left   / TILE_SIZE);
-  maxx = (int)(r.right  / TILE_SIZE);
-  miny = (int)(r.top    / TILE_SIZE);
-  maxy = (int)(r.bottom / TILE_SIZE);
+  minx = static_cast<int>(r.left   / TILE_SIZE);
+  maxx = static_cast<int>(r.right  / TILE_SIZE);
+  miny = static_cast<int>(r.top    / TILE_SIZE);
+  maxy = static_cast<int>(r.bottom / TILE_SIZE);
 
   assert(maxy>=miny);
   assert(maxx>=minx);
@@ -556,10 +556,10 @@
   int miny, maxy;
   int x, y;
 
-  minx = (int)r.left   / TILE_SIZE;
-  maxx = (int)r.right  / TILE_SIZE;
-  miny = (int)r.top    / TILE_SIZE;
-  maxy = (int)r.bottom / TILE_SIZE;
+  minx = static_cast<int>(r.left   / TILE_SIZE);
+  maxx = static_cast<int>(r.right  / TILE_SIZE);
+  miny = static_cast<int>(r.top    / TILE_SIZE);
+  maxy = static_cast<int>(r.bottom / TILE_SIZE);
 
   for (y = std::max (0, miny); y <= std::min (maxy, tilemap->get_height() - 1); ++y)
     for (x = std::max (0, minx); x <= std::min (maxx, tilemap->get_width() - 1); ++x)

Modified: trunk/windstille/src/display/color.hpp
===================================================================
--- trunk/windstille/src/display/color.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/color.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -25,8 +25,8 @@
   Color()
     : r(0), g(0), b(0), a(1.0)
   { }
-  Color(float r, float g, float b, float a = 1.0)
-    : r(r), g(g), b(b), a(a)
+  Color(float r_, float g_, float b_, float a_ = 1.0)
+    : r(r_), g(g_), b(b_), a(a_)
   { }
 
   float r, g, b, a;

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/display.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -296,14 +296,14 @@
   state.color(color);
   state.activate();
 
-  float n = segments/4.0f;
+  float n = static_cast<float>(segments) / 4.0f;
   glBegin(GL_TRIANGLE_FAN);
   glVertex2f(pos.x, pos.y);
   glVertex2f(radius + pos.x, pos.y);
   for(int i = 1; i < segments; ++i)
     {
-      float x = cosf(i * (math::pi/2) / n) * radius;
-      float y = sinf(i * (math::pi/2) / n) * radius;
+      float x = cosf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
+      float y = sinf(static_cast<float>(i) * (math::pi/2) / static_cast<float>(n)) * radius;
       
       glVertex2f(x + pos.x, y + pos.y);
     }
@@ -322,7 +322,7 @@
     }
   else
     {
-      float step  = (2.0f * math::pi) / segments;
+      float step  = (2.0f * math::pi) / static_cast<float>(segments);
 
       if (start > end) 
         std::swap(start, end);
@@ -362,7 +362,7 @@
     }
   else
     {
-      float step  = (2.0f * math::pi) / segments;
+      float step  = (2.0f * math::pi) / static_cast<float>(segments);
 
       if (start > end) 
         std::swap(start, end);
@@ -410,13 +410,13 @@
   for(float x = start_x; x < Display::get_width(); x += size.width)
     {
       glVertex2f(x, 0);
-      glVertex2f(x, Display::get_height());
+      glVertex2f(x, static_cast<float>(Display::get_height()));
     }
 
   for(float y = start_y; y < Display::get_height(); y += size.height)
     {
       glVertex2f(0, y);
-      glVertex2f(Display::get_width(), y);
+      glVertex2f(static_cast<float>(Display::get_width()), y);
     }
 
   glEnd();  

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -188,9 +188,12 @@
   SurfaceDrawingParameters params;
 
 public:
-  SurfaceDrawingRequest(Surface surface, const SurfaceDrawingParameters& params, float z_pos_,
-                        const Matrix& modelview)
-    : DrawingRequest(pos, z_pos_, modelview), surface(surface), params(params)
+  SurfaceDrawingRequest(Surface surface_, const SurfaceDrawingParameters& params_,
+                        float z_pos_,
+                        const Matrix& modelview_)
+    : DrawingRequest(pos, z_pos_, modelview_), 
+      surface(surface_), 
+      params(params_)
   {}
 
   virtual ~SurfaceDrawingRequest()

Modified: trunk/windstille/src/display/drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/drawing_request.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/drawing_request.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -34,8 +34,8 @@
   Matrix  modelview;
 
 public:
-  DrawingRequest(const Vector2f& pos_, float z_pos = 0,  const Matrix& modelview_ = Matrix::identity())
-    : pos(pos_), z_pos(z_pos), modelview(modelview_)
+  DrawingRequest(const Vector2f& pos_, float z_pos_ = 0,  const Matrix& modelview_ = Matrix::identity())
+    : pos(pos_), z_pos(z_pos_), modelview(modelview_)
   {}
   virtual ~DrawingRequest() {}
   

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -69,9 +69,11 @@
 {
   sc.push_modelview();
 
-  sc.translate(impl->width/2, impl->height/2);
+  sc.translate(static_cast<float>(impl->width)  / 2.0f, 
+               static_cast<float>(impl->height) / 2.0f);
   sc.rotate(impl->rotation);
-  sc.translate(-impl->width/2, -impl->height/2);
+  sc.translate(static_cast<float>(-impl->width)  / 2.0f,
+               static_cast<float>(-impl->height) / 2.0f);
 
   sc.scale(get_zoom(), get_zoom());
   sc.translate(impl->offset.x, impl->offset.y);
@@ -88,15 +90,15 @@
 {
   return Rectf(Vector2f(-impl->offset.x,
                          -impl->offset.y),
-               Sizef(get_width()  / impl->zoom,
-                     get_height() / impl->zoom));
+               Sizef(static_cast<float>(get_width())  / impl->zoom,
+                     static_cast<float>(get_height()) / impl->zoom));
 }
-
+    
 void
 GraphicContextState::set_pos(const Vector2f& pos)
 {
-  impl->offset.x = -pos.x + (get_width()/2  / impl->zoom);
-  impl->offset.y = -pos.y + (get_height()/2 / impl->zoom);
+  impl->offset.x = -pos.x + (static_cast<float>(get_width())  / 2.0f / impl->zoom);
+  impl->offset.y = -pos.y + (static_cast<float>(get_height()) / 2.0f / impl->zoom);
 }
 
 Vector2f
@@ -108,8 +110,8 @@
 Vector2f
 GraphicContextState::get_pos() const
 {
-  return Vector2f(-impl->offset.x + (get_width()/2  / impl->zoom),
-                   -impl->offset.y + (get_height()/2  / impl->zoom));
+  return Vector2f(-impl->offset.x + (static_cast<float>(get_width())  / 2.0f / impl->zoom),
+                  -impl->offset.y + (static_cast<float>(get_height()) / 2.0f / impl->zoom));
 }
 
 void
@@ -147,33 +149,33 @@
   //std::cout << "Screen: " << screen_relation << " Zoom: " << rect_relation << std::endl;
   if (rect_relation < screen_relation) // take width, ignore height
     {
-      impl->zoom = get_width()/width; 
+      impl->zoom = static_cast<float>(get_width()) / width; 
     }
   else // take height, ignore width
     {
-      impl->zoom = get_height()/height;
+      impl->zoom = static_cast<float>(get_height()) / height;
     }
 
-  impl->offset.x = (get_width()  / (2*impl->zoom)) - center_x;
-  impl->offset.y = (get_height() / (2*impl->zoom)) - center_y;
+  impl->offset.x = (static_cast<float>(get_width())  / (2.0f * impl->zoom)) - center_x;
+  impl->offset.y = (static_cast<float>(get_height()) / (2.0f * impl->zoom)) - center_y;
 }
 
 Vector2f
 GraphicContextState::screen_to_world(const Vector2f& pos_)
 {
   Vector2f pos(pos_.x, pos_.y);
-  float sa = sin(-impl->rotation/180.0f*M_PI);
-  float ca = cos(-impl->rotation/180.0f*M_PI);
+  float sa = sinf(-impl->rotation / 180.0f * math::pi);
+  float ca = cosf(-impl->rotation / 180.0f * math::pi);
 
-  float dx = pos.x - impl->width/2;
-  float dy = pos.y - impl->height/2;
+  float dx = pos.x - static_cast<float>(impl->width)  / 2.0f;
+  float dy = pos.y - static_cast<float>(impl->height) / 2.0f;
 
-  pos.x = impl->width/2  + (ca * dx - sa * dy);
-  pos.y = impl->height/2 + (sa * dx + ca * dy);
+  pos.x = static_cast<float>(impl->width)  / 2.0f + (ca * dx - sa * dy);
+  pos.y = static_cast<float>(impl->height) / 2.0f + (sa * dx + ca * dy);
 
-  Vector2f p((float(pos.x) / impl->zoom) - impl->offset.x, 
-              (float(pos.y) / impl->zoom) - impl->offset.y);
-
+  Vector2f p((static_cast<float>(pos.x) / impl->zoom) - impl->offset.x, 
+             (static_cast<float>(pos.y) / impl->zoom) - impl->offset.y);
+  
   return p;
 }
 

Modified: trunk/windstille/src/display/opengl_state.cpp
===================================================================
--- trunk/windstille/src/display/opengl_state.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/opengl_state.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -220,9 +220,9 @@
 }
 
 void
-OpenGLState::color(const Color& color)
+OpenGLState::color(const Color& color_)
 {
-  impl->color = color;
+  impl->color = color_;
 }
 
 void
@@ -231,8 +231,8 @@
   // do nothing for now, should be implemented later on
   impl->was_activated = true;
 
-  OpenGLState* global = OpenGLState::global();
-  assert(global);
+  OpenGLState* global_state = OpenGLState::global();
+  assert(global_state);
 
   // always apply color since it might have got changed between a glBegin/glEnd
   glColor4f(impl->color.r, impl->color.g, impl->color.b, impl->color.a);
@@ -240,50 +240,50 @@
   for(std::map<GLenum, bool>::iterator i = impl->state.begin();
       i != impl->state.end(); ++i)
     {
-      if (global->get_state(i->first) != i->second)
+      if (global_state->get_state(i->first) != i->second)
         {
           if (i->second)
             glEnable(i->first);
           else
             glDisable(i->first);
 
-          global->set_state(i->first, i->second);
+          global_state->set_state(i->first, i->second);
         }
     }
 
   for(std::map<GLenum, bool>::iterator i = impl->client_state.begin();
       i != impl->client_state.end(); ++i)
     {
-      if (global->get_client_state(i->first) != i->second)
+      if (global_state->get_client_state(i->first) != i->second)
         {
           if (i->second)
             glEnableClientState(i->first);
           else
             glDisableClientState(i->first);
 
-          global->set_client_state(i->first, i->second);
+          global_state->set_client_state(i->first, i->second);
         }
     }
 
-  if (impl->blend_sfactor != global->impl->blend_sfactor ||
-      impl->blend_dfactor != global->impl->blend_dfactor)
+  if (impl->blend_sfactor != global_state->impl->blend_sfactor ||
+      impl->blend_dfactor != global_state->impl->blend_dfactor)
     {
       glBlendFunc(impl->blend_sfactor, impl->blend_dfactor);
 
-      global->impl->blend_sfactor = impl->blend_sfactor;
-      global->impl->blend_dfactor = impl->blend_dfactor;
+      global_state->impl->blend_sfactor = impl->blend_sfactor;
+      global_state->impl->blend_dfactor = impl->blend_dfactor;
     }
 
   for(int i = 0; i < MAX_TEXTURE_UNITS; ++i)
     {
-      if (impl->texture[i] != global->impl->texture[i])
+      if (impl->texture[i] != global_state->impl->texture[i])
         { 
           // FIXME: glActiveTexture() makes the game crash on Matrox
           // G450, without that line it works
           glActiveTexture(GL_TEXTURE0 + i);
           if (impl->texture[i])
             {
-              global->impl->texture[i] = impl->texture[i];
+              global_state->impl->texture[i] = impl->texture[i];
 
               switch (impl->texture[i].get_target())
                 {
@@ -317,7 +317,7 @@
               glDisable(GL_TEXTURE_RECTANGLE_ARB);
               glDisable(GL_TEXTURE_2D);
 
-              global->impl->texture[i] = impl->texture[i];
+              global_state->impl->texture[i] = impl->texture[i];
             }
         }
     }

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -187,8 +187,8 @@
 
 void draw_disc(int count)
 {
-  float radius = (count)*2.0f;
-  float minradius = 2.0f*count - 164.0f;
+  float radius = static_cast<float>(count) * 2.0f;
+  float minradius = 2.0f * static_cast<float>(count) - 164.0f;
   if (minradius < 0)
     minradius = 0;
   glClear(GL_DEPTH_BUFFER_BIT);
@@ -198,13 +198,13 @@
   glBegin(GL_QUADS);
   for (int i = 0; i < segments; ++i)
     {
-      float angel = (2*M_PI / segments);
+      float angel = 2.0f * math::pi / static_cast<float>(segments);
 
-      float x1 =  sin(angel*i)*radius;
-      float y1 = -cos(angel*i)*radius;
+      float x1 =  sinf(angel * static_cast<float>(i)) * radius;
+      float y1 = -cosf(angel * static_cast<float>(i)) * radius;
 
-      float x2 =  sin(angel*(i+1))*radius;
-      float y2 = -cos(angel*(i+1))*radius;
+      float x2 =  sinf(angel * static_cast<float>(i+1)) * radius;
+      float y2 = -cosf(angel * static_cast<float>(i+1)) * radius;
 
       glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
       glTexCoord2f(x1/512.0f+0.5f, y1/512.0f+0.5f);
@@ -213,13 +213,12 @@
       glTexCoord2f(x2/512.0f+0.5f, y2/512.0f+0.5f);
       glVertex3f(x2+256, y2+256, 0);
 
+      float x3 =  sinf(angel * static_cast<float>(i)) * minradius;
+      float y3 = -cosf(angel * static_cast<float>(i)) * minradius;
 
-      float x3 =  sin(angel*i)*minradius;
-      float y3 = -cos(angel*i)*minradius;
+      float x4 =  sinf(angel * static_cast<float>(i+1)) * minradius;
+      float y4 = -cosf(angel * static_cast<float>(i+1)) * minradius;
 
-      float x4 =  sin(angel*(i+1))*minradius;
-      float y4 = -cos(angel*(i+1))*minradius;
-
       glColor4f(1.0f, 1.0f, 1.0f, 0.0f);
       glTexCoord2f(x4/512.0f+0.5f, y4/512.0f+0.5f);
       glVertex3f(x4+256, y4+256, 0);
@@ -232,7 +231,9 @@
 void
 SceneContext::render_lightmap()
 {
-  Rect uv(0, 0, impl->framebuffers->lightmap.get_width(), impl->framebuffers->lightmap.get_height());
+  Rectf uv(0, 0,
+           static_cast<float>(impl->framebuffers->lightmap.get_width()), 
+           static_cast<float>(impl->framebuffers->lightmap.get_height()));
 
   OpenGLState state;
 
@@ -248,14 +249,14 @@
   glVertex2f(0, 0);
 
   glTexCoord2f(uv.right, uv.bottom);
-  glVertex2f(impl->framebuffers->lightmap.get_width() * LIGHTMAP_DIV, 0);
+  glVertex2f(static_cast<float>(impl->framebuffers->lightmap.get_width() * LIGHTMAP_DIV), 0.0f);
 
   glTexCoord2f(uv.right, uv.top);
-  glVertex2f(impl->framebuffers->lightmap.get_width() * LIGHTMAP_DIV,
-             impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV);
+  glVertex2f(static_cast<float>(impl->framebuffers->lightmap.get_width()  * LIGHTMAP_DIV),
+             static_cast<float>(impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV));
 
   glTexCoord2f(uv.left, uv.top);
-  glVertex2f(0, impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV);
+  glVertex2f(0.0f, static_cast<float>(impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV));
 
   glEnd();
 }
@@ -273,8 +274,8 @@
       glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
       glPushMatrix();
-      glTranslatef(0, Display::get_height()-(Display::get_height()/LIGHTMAP_DIV), 0);
-      glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
+      glTranslatef(0.0f, static_cast<float>(Display::get_height() - (Display::get_height() / LIGHTMAP_DIV)), 0.0f);
+      glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
       impl->light.render(*this);
       glPopMatrix();
 
@@ -313,9 +314,9 @@
       // Render the screen framebuffer to the actual screen 
       OpenGLState state;
 
-      Rectf uv(0.375, 0.375, 
-               impl->framebuffers->screen.get_width()  + 0.375,
-               impl->framebuffers->screen.get_height() + 0.375);
+      Rectf uv(0.375f, 0.375f, 
+               static_cast<float>(impl->framebuffers->screen.get_width())  + 0.375f,
+               static_cast<float>(impl->framebuffers->screen.get_height()) + 0.375f);
 
       if (impl->render_mask & BLURMAP)
         state.bind_texture(impl->framebuffers->screen.get_texture(), 0);
@@ -330,13 +331,13 @@
       glVertex2f(0, 0);
 
       glTexCoord2f(uv.right, uv.bottom);
-      glVertex2f(Display::get_width(), 0);
+      glVertex2f(static_cast<float>(Display::get_width()), 0);
 
       glTexCoord2f(uv.right, uv.top);
-      glVertex2f(Display::get_width(), Display::get_height());
+      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
 
       glTexCoord2f(uv.left, uv.top);
-      glVertex2f(0, Display::get_height());
+      glVertex2f(0.0f, static_cast<float>(Display::get_height()));
 
       glEnd();
     }
@@ -364,8 +365,8 @@
       glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
       glPushMatrix();
-      glTranslatef(0, Display::get_height() - (Display::get_height()/LIGHTMAP_DIV), 0);
-      glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
+      glTranslatef(0.0f, static_cast<float>(Display::get_height()) - static_cast<float>(Display::get_height()/LIGHTMAP_DIV), 0.0f);
+      glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
       impl->light.render(*this);
       glPopMatrix();
 
@@ -379,7 +380,8 @@
         glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
                             0, 0, 
                             0, 0, //Display::get_height() - impl->lightmap.get_height(),
-                            impl->lightmap.get_width(), impl->lightmap.get_height());
+                            static_cast<GLsizei>(impl->lightmap.get_width()), 
+                            static_cast<GLsizei>(impl->lightmap.get_height()));
       }
     }
 

Modified: trunk/windstille/src/display/software_surface.cpp
===================================================================
--- trunk/windstille/src/display/software_surface.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/software_surface.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -130,9 +130,9 @@
 void
 SoftwareSurface::blit(SoftwareSurface& dst, int x, int y) const
 {
-  SDL_Rect dst_rect;
-  dst_rect.x = x;
-  dst_rect.y = y;
+  SDL_Rect dst_rect; 
+  dst_rect.x = static_cast<Sint16>(x);
+  dst_rect.y = static_cast<Sint16>(y);
 
   SDL_BlitSurface(impl->surface, 0, dst.impl->surface, &dst_rect);
 }
@@ -141,14 +141,14 @@
 SoftwareSurface::blit(const Rect& src_rect_, SoftwareSurface& dst, int x, int y) const
 {
   SDL_Rect src_rect;
-  src_rect.x = src_rect_.left;
-  src_rect.y = src_rect_.top;
-  src_rect.w = src_rect_.get_width();
-  src_rect.h = src_rect_.get_height();
+  src_rect.x = static_cast<Sint16>(src_rect_.left);
+  src_rect.y = static_cast<Sint16>(src_rect_.top);
+  src_rect.w = static_cast<Sint16>(src_rect_.get_width());
+  src_rect.h = static_cast<Sint16>(src_rect_.get_height());
 
   SDL_Rect dst_rect;
-  dst_rect.x = x;
-  dst_rect.y = y;
+  dst_rect.x = static_cast<Sint16>(x);
+  dst_rect.y = static_cast<Sint16>(y);
   
   SDL_BlitSurface(impl->surface, &src_rect, dst.impl->surface, &dst_rect);
 }

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/surface.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -70,9 +70,9 @@
 
   // FIXME: rounding to power of two shouldn't be needed in OpenGL2.0 or later
   impl->texture = Texture(GL_TEXTURE_2D, math::round_to_power_of_two(width), math::round_to_power_of_two(height));
-  impl->uv      = Rectf(0, 0,
-                        impl->size.width  / impl->texture.get_width(),
-                        impl->size.height / impl->texture.get_height());
+  impl->uv      = Rectf(0.0f, 0.0f,
+                        impl->size.width  / static_cast<float>(impl->texture.get_width()),
+                        impl->size.height / static_cast<float>(impl->texture.get_height()));
 }
 
 Surface::Surface(Texture texture, const Rectf& uv, const Sizef& size)

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -90,7 +90,9 @@
               throw std::runtime_error(msg.str());
             }
         
-          Surface result(texture, Rectf(0, 0, maxu, maxv), Sizef(image.get_width(), image.get_height()));
+          Surface result(texture, Rectf(0.0f, 0.0f, maxu, maxv),
+                         Sizef(static_cast<float>(image.get_width()),
+                               static_cast<float>(image.get_height())));
           surfaces.insert(std::make_pair(filename, result));
           return result;
         }      
@@ -122,12 +124,15 @@
     {
       for(int x = 0; x <= image.get_width() - width + 1; x += width)
         {
-          float s_min_u = maxu * x / static_cast<float>(image.get_width());
-          float s_max_u = (maxu * (x + width)) / static_cast<float>(image.get_width());
-          float s_min_v = maxv * x / static_cast<float>(image.get_height());
-          float s_max_v = (maxv * (x + height)) / static_cast<float>(image.get_height());
+          float s_min_u = maxu * static_cast<float>(x) / static_cast<float>(image.get_width());
+          float s_min_v = maxv * static_cast<float>(x) / static_cast<float>(image.get_height());
+          float s_max_u = (maxu * (static_cast<float>(x + width)))  / static_cast<float>(image.get_width());
+          float s_max_v = (maxv * (static_cast<float>(x + height))) / static_cast<float>(image.get_height());
 
-          surfaces.push_back(Surface(texture, Rectf(s_min_u, s_min_v, s_max_u, s_max_v), Sizef(width, height)));
+          surfaces.push_back(Surface(texture, 
+                                     Rectf(s_min_u, s_min_v, s_max_u, s_max_v), 
+                                     Sizef(static_cast<float>(width),
+                                           static_cast<float>(height))));
         }
     }
 }

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -186,7 +186,9 @@
   state.activate();
 
   glPushMatrix();
-  glTranslatef(impl->rect.left, impl->rect.top + impl->font->get_height() - impl->scroll_offset, 0);
+  glTranslatef(impl->rect.left, 
+               impl->rect.top + static_cast<float>(impl->font->get_height()) - impl->scroll_offset, 
+               0.0f);
 
   // Voodoo to get non-blurry fonts
   float mx = -0.375;
@@ -266,9 +268,9 @@
             int word_width;
 
             if (is_small)
-              word_width = static_cast<int>(impl->font->get_width(i->content) * 0.6f);
+              word_width = static_cast<int>(static_cast<float>(impl->font->get_width(i->content)) * 0.6f);
             else if (is_large)
-              word_width = static_cast<int>(impl->font->get_width(i->content) * 2.0f);
+              word_width = static_cast<int>(static_cast<float>(impl->font->get_width(i->content)) * 2.0f);
             else
               word_width = impl->font->get_width(i->content);
           

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -194,9 +194,11 @@
       texture.put(surface, rect.left+1, rect.top+1);
 
       return Surface(texture,
-                     Rectf(float(rect.left+1)  / texture.get_width(), float(rect.top+1)    / texture.get_height(),
-                           float(rect.right-1) / texture.get_width(), float(rect.bottom-1) / texture.get_height()),
-                     Sizef(surface.get_width(), surface.get_height()));
+                     Rectf(static_cast<float>(rect.left+1)   / static_cast<float>(texture.get_width()),
+                           static_cast<float>(rect.top+1)    / static_cast<float>(texture.get_height()),
+                           static_cast<float>(rect.right-1)  / static_cast<float>(texture.get_width()), 
+                           static_cast<float>(rect.bottom-1) / static_cast<float>(texture.get_height())),
+                     Sizef(static_cast<float>(surface.get_width()), static_cast<float>(surface.get_height())));
     }
 }
 

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -147,12 +147,12 @@
 }
 
 void
-VertexArrayDrawingRequest::color(const Color& color)
+VertexArrayDrawingRequest::color(const Color& color_)
 {
-  colors.push_back(static_cast<unsigned char>(color.r * 255));
-  colors.push_back(static_cast<unsigned char>(color.g * 255));
-  colors.push_back(static_cast<unsigned char>(color.b * 255));
-  colors.push_back(static_cast<unsigned char>(color.a * 255));
+  colors.push_back(static_cast<unsigned char>(color_.r * 255));
+  colors.push_back(static_cast<unsigned char>(color_.g * 255));
+  colors.push_back(static_cast<unsigned char>(color_.b * 255));
+  colors.push_back(static_cast<unsigned char>(color_.a * 255));
 }
 
 void

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -29,7 +29,7 @@
 {
   std::istream* in = reinterpret_cast<std::istream*> (file);
 
-  char c = in->get();
+  char c = static_cast<char>(in->get());
 
   if (in->eof())
     return 0;

Modified: trunk/windstille/src/gui/list_view.cpp
===================================================================
--- trunk/windstille/src/gui/list_view.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/gui/list_view.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -41,7 +41,7 @@
   TTFFont* font = Fonts::current()->vera20.get();
 
   float x = rect.left;
-  float y = rect.top + font->get_height();
+  float y = rect.top + static_cast<float>(font->get_height());
   float padding = 10;
 
   for(int i = 0; i < int(columns.size()); ++i)
@@ -61,10 +61,10 @@
 
       if (j == current_item)
         Display::fill_rect(Rectf(x, y,
-                                 rect.right, y + font->get_height()), 
+                                 rect.right, y + static_cast<float>(font->get_height())), 
                            is_active() ? Color(0.5f, 0.5f, 1.0f, 0.8f) : Color(0.5f, 0.5f, 1.0f, 0.3f));
 
-      y += font->get_height();
+      y += static_cast<float>(font->get_height());
           
       for(int i = 0; i < int(items[j].columns.size()) && i < int(columns.size()); ++i)
         {

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -46,7 +46,7 @@
     seconds_passed(0.0f)
 {
   // FIXME: Calculate words by other means, this isn't good for long text
-  float words = 2 + text.size() / 5.0f;
+  float words = 2.0f + static_cast<float>(text.size()) / 5.0f;
   float words_per_minute = 150.0f;
   float words_per_second = words_per_minute / 60.0f;
 

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -31,9 +31,10 @@
     wait_for_plus(false),
     minus(),
     out(),
-    area(Rectf(120, 100,
-               Display::get_width()  - 120, 
-               Display::get_height() - 100), 
+    area(Rectf(120.0f,
+               100.0f,
+               static_cast<float>(Display::get_width())  - 120.0f,
+               static_cast<float>(Display::get_height()) - 100.0f), 
          false)
 {
   out << "Input Configurator\n"
@@ -79,9 +80,9 @@
 void
 InputConfigurator::draw()
 {
-  Rectf rect(100, 75,
-             Display::get_width()  - 100, 
-             Display::get_height() - 75);
+  Rectf rect(100.0f, 75.0f,
+             static_cast<float>(Display::get_width())  - 100.0f, 
+             static_cast<float>(Display::get_height()) - 75.0f);
 
   Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
   Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f)); 

Modified: trunk/windstille/src/lisp/property_iterator.hpp
===================================================================
--- trunk/windstille/src/lisp/property_iterator.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/lisp/property_iterator.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -8,8 +8,8 @@
 {
 
 struct ListEntry {
-  ListEntry(const lisp::Lisp* lisp)
-    : lisp(lisp), used(false)
+  ListEntry(const lisp::Lisp* lisp_)
+    : lisp(lisp_), used(false)
   {}
   
   const Lisp* lisp;

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/math/matrix.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -175,21 +175,21 @@
 Matrix
 Matrix::scale(float x, float y, float z)
 {
-  Matrix matrix = Matrix::identity();
-  matrix[0]  = x;
-  matrix[5]  = y;
-  matrix[10] = z;
-  return multiply(matrix);
+  Matrix m = Matrix::identity();
+  m[0]  = x;
+  m[5]  = y;
+  m[10] = z;
+  return multiply(m);
 }
 
 Matrix
 Matrix::translate(float x, float y, float z)
 {
-  Matrix matrix = Matrix::identity();
-  matrix[12] = x;
-  matrix[13] = y;
-  matrix[14] = z;
-  return multiply(matrix);
+  Matrix m = Matrix::identity();
+  m[12] = x;
+  m[13] = y;
+  m[14] = z;
+  return multiply(m);
 }
 
 Matrix

Modified: trunk/windstille/src/math/point.hpp
===================================================================
--- trunk/windstille/src/math/point.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/math/point.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -57,9 +57,9 @@
     : x(0), y(0)
   {}
 
-  Point(int x, int y)
-    : x(x), 
-      y(y)
+  Point(int x_, int y_)
+    : x(x_), 
+      y(y_)
   {}
 
   Point(const Point &p)

Modified: trunk/windstille/src/math/quaternion.hpp
===================================================================
--- trunk/windstille/src/math/quaternion.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/math/quaternion.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -35,8 +35,8 @@
     : w(0), x(0), y(0), z(0)
   {}
 
-  Quaternion(float w, float x, float y, float z)
-    : w(w), x(x), y(y), z(z)
+  Quaternion(float w_, float x_, float y_, float z_)
+    : w(w_), x(x_), y(y_), z(z_)
   {}
 
   /** Construct a Quaternion representing a rotation 

Modified: trunk/windstille/src/math/size.hpp
===================================================================
--- trunk/windstille/src/math/size.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/math/size.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -56,8 +56,8 @@
     : width(0), height(0)
   {}
 
-  Size(int width, int height)
-    : width(width), height(height) 
+  Size(int width_, int height_)
+    : width(width_), height(height_) 
   {}
 
   Size(const Size &s)
@@ -121,9 +121,9 @@
       height(static_cast<float>(s.height))
   {}
 
-  Sizef(float width, float height)
-    : width(width), 
-      height(height) 
+  Sizef(float width_, float height_)
+    : width(width_), 
+      height(height_) 
   {}
 
   Sizef(const Sizef &s)

Modified: trunk/windstille/src/math/vector3.hpp
===================================================================
--- trunk/windstille/src/math/vector3.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/math/vector3.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -36,8 +36,8 @@
     : x(0), y(0), z(0)
   {}
 
-  Vector3(float x, float y, float z)
-    : x(x), y(y), z(z)
+  Vector3(float x_, float y_, float z_)
+    : x(x_), y(y_), z(z_)
   {}
 
   bool operator== (const Vector3& o) const

Modified: trunk/windstille/src/navigation/edge_position.cpp
===================================================================
--- trunk/windstille/src/navigation/edge_position.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/navigation/edge_position.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -86,7 +86,7 @@
 
   Vector2f proj = adv.project(edge_v);
 
-  float angle = atan2(edge_v.y, edge_v.x) - atan2(proj.y, proj.x);
+  float angle = atan2f(edge_v.y, edge_v.x) - atan2f(proj.y, proj.x);
 
   // Check if we are going forward or backward
   float advf;

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -116,8 +116,8 @@
 
             if (i->angle != 0)
               {
-                float s = sinf(M_PI * i->angle/180.0f);
-                float c = cosf(M_PI * i->angle/180.0f);
+                float s = sinf(math::pi * i->angle/180.0f);
+                float c = cosf(math::pi * i->angle/180.0f);
                 x_rot = (width/2) * c - (height/2) * s;
                 y_rot = (width/2) * s + (height/2) * c;
               }

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -260,12 +260,12 @@
   // particle.x   += (parent ? parent->get_pos().x : 0) + x_pos + spawn_x;
   // particle.y   += (parent ? parent->get_pos().y : 0) + y_pos + spawn_y;
 
-  float direction = rnd.drand(cone_start, cone_stop);
-  float speed     = rnd.drand(speed_start, speed_stop);
-  particle.v_x    = cos(direction) * speed;
-  particle.v_y    = sin(direction) * speed;
+  float direction = rnd.frand(cone_start, cone_stop);
+  float speed     = rnd.frand(speed_start, speed_stop);
+  particle.v_x    = cosf(direction) * speed;
+  particle.v_y    = sinf(direction) * speed;
 
-  particle.angle = rnd.drand(360);
+  particle.angle = rnd.frand(360.0f);
 
   particle.t   = fmodf(particle.t, life_time);
 }
@@ -309,7 +309,7 @@
       for(Particles::size_type i = old_size; i < particles.size(); ++i)
         {
           spawn(particles[i]);
-          particles[i].t = life_time * bunching * float(i)/particles.size();
+          particles[i].t = life_time * bunching * static_cast<float>(i) / static_cast<float>(particles.size());
         }
     }
 }
@@ -368,8 +368,8 @@
 void
 ParticleSystem::set_cone(float start_angle, float stop_angle)
 {
-  cone_start = start_angle * M_PI/180.0f;
-  cone_stop  = stop_angle  * M_PI/180.0f;
+  cone_start = start_angle * math::pi/180.0f;
+  cone_stop  = stop_angle  * math::pi/180.0f;
 }
 
 void

Modified: trunk/windstille/src/particles/randomizer.hpp
===================================================================
--- trunk/windstille/src/particles/randomizer.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/particles/randomizer.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -44,8 +44,8 @@
     : rect(rect_) {}
  
   void set_pos(Particle& p) {
-    p.x = rnd.drand(rect.left, rect.right);
-    p.y = rnd.drand(rect.top,  rect.bottom);
+    p.x = rnd.frand(rect.left, rect.right);
+    p.y = rnd.frand(rect.top,  rect.bottom);
   }
 };
 
@@ -58,8 +58,8 @@
 
   void set_pos(Particle& p) {
     // FIXME: BROKEN!!!!!
-    p.x = rnd.drand(-radius, radius);
-    p.y = sqrt((radius*radius) - (p.x*p.x)) * rnd.drand(-1.0f, 1.0f);
+    p.x = rnd.frand(-radius, radius);
+    p.y = sqrtf((radius*radius) - (p.x*p.x)) * rnd.frand(-1.0f, 1.0f);
   }
 };
 
@@ -73,7 +73,7 @@
   {}
 
   void set_pos(Particle& p) {
-    float l = rnd.drand();
+    float l = rnd.frand();
     p.x = x1 + (x2-x1) * l;
     p.y = y1 + (y2-y1) * l;
   }

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -121,8 +121,8 @@
 
           if (i->angle != 0)
             {
-              float s = sin(M_PI * i->angle/180.0f);
-              float c = cos(M_PI * i->angle/180.0f);
+              float s = sinf(math::pi * i->angle/180.0f);
+              float c = cosf(math::pi * i->angle/180.0f);
               x_rot = (width/2) * c - (height/2) * s;
               y_rot = (width/2) * s + (height/2) * c;
             }

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -68,7 +68,7 @@
   sc.color().fill_screen(Color(0.5, 0.0, 0.5));
 
   sc.push_modelview();
-  sc.translate(Display::get_width()/2.0f, Display::get_height()/2.0f);
+  sc.translate(static_cast<float>(Display::get_width())/2.0f, static_cast<float>(Display::get_height())/2.0f);
   sc.scale(scale, scale);
 
   // Rotate
@@ -86,7 +86,7 @@
   sc.render();
   
   float x = 10.0f;
-  float y =  Fonts::current()->vera12->get_height() + 5.0f;
+  float y =  static_cast<float>(Fonts::current()->vera12->get_height()) + 5.0f;
   int line_height = Fonts::current()->vera12->get_height()+5;
 
   for(int i = 0; i < int(actions.size()); ++i)
@@ -99,11 +99,11 @@
                             actions[i], Color(0.7f, 0.7f, 0.7f));
 
 
-      y += line_height;
+      y += static_cast<float>(line_height);
       if (y > 580.0f)
         {
           x += 200.0f;
-          y =  Fonts::current()->vera12->get_height() + 5.0f;
+          y =  static_cast<float>(Fonts::current()->vera12->get_height()) + 5.0f;
         }
     }
 }

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -43,8 +43,8 @@
 void
 TitleScreen::draw()
 {
-  background.draw(Vector2f(Display::get_width() /2  - (background.get_width()  * background.get_scale()/2),
-                           Display::get_height()/2  - (background.get_height() * background.get_scale()/2)));
+  background.draw(Vector2f(Display::get_width()  / 2.0f - (background.get_width()  * background.get_scale() / 2.0f),
+                           Display::get_height() / 2.0f - (background.get_height() * background.get_scale() / 2.0f)));
 }
 
 void

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -86,7 +86,7 @@
       if (fade_state == FadingOn) 
         {
           unsigned int ticks = SDL_GetTicks();
-          float time = (ticks - fade_start_ticks) / 1000.0;
+          float time = static_cast<float>(ticks - fade_start_ticks) / 1000.0;
           if (time >= fade_time)
             {
               set_gain(1.0);

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -74,8 +74,8 @@
   blend_dfactor = GL_ONE_MINUS_SRC_ALPHA;
 }
 
-Sprite::Sprite(const SpriteDataPtr data)
-  : data(data),
+Sprite::Sprite(const SpriteDataPtr data_)
+  : data(data_),
     current_action(0),
     frame(0),
     speed(0),
@@ -149,8 +149,8 @@
   if(reverse)
     step = -step;
 
-  frame = fmodf(frame + current_action->surfaces.size() + step,
-                current_action->surfaces.size());
+  frame = fmodf(frame + static_cast<float>(current_action->surfaces.size()) + step,
+                static_cast<float>(current_action->surfaces.size()));
 }
 
 void
@@ -191,9 +191,9 @@
 }
 
 void
-Sprite::set_vflip(bool vflip)
+Sprite::set_vflip(bool vflip_)
 {
-  this->vflip = vflip;
+  vflip = vflip_;
 }
 
 bool
@@ -203,9 +203,9 @@
 }
 
 void
-Sprite::set_pingpong(bool pingpong)
+Sprite::set_pingpong(bool pingpong_)
 {
-  this->pingpong = pingpong;
+  pingpong = pingpong_;
 }
 
 bool
@@ -215,9 +215,9 @@
 }
 
 void
-Sprite::set_speed(float speed)
+Sprite::set_speed(float speed_)
 {
-  this->speed = speed;
+  speed = speed_;
 }
 
 float
@@ -229,7 +229,7 @@
 void
 Sprite::set_alpha(float alpha)
 {
-  this->color.a = alpha;
+  color.a = alpha;
 }
 
 float
@@ -311,16 +311,16 @@
   return blend_dfactor;
 }
 
-int
+float
 Sprite::get_width() const
 {
-  return current_action->surfaces[ static_cast<int> (frame) ].get_width();
+  return current_action->surfaces[ static_cast<int>(frame) ].get_width();
 }
 
-int
+float
 Sprite::get_height() const
 {
-  return current_action->surfaces[ static_cast<int> (frame) ].get_height();
+  return current_action->surfaces[ static_cast<int>(frame) ].get_height();
 }
 
 /* EOF */

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -102,8 +102,8 @@
 
   Vector2f get_offset() const;
 
-  int get_width() const;
-  int get_height() const;
+  float get_width() const;
+  float get_height() const;
 
   /** true if the Sprite is valid and usable, false if not */
   operator bool() const;

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -217,7 +217,7 @@
   if ((speed <  0.0f && frame1.speed >= 0.0f) ||
       (speed >= 0.0f && frame1.speed <  0.0f)) 
     {
-      blend_time = 1.0 - blend_time;
+      blend_time = 1.0f - blend_time;
       std::swap(frame1, frame2);
     }
 
@@ -290,9 +290,9 @@
   const Sprite3D* sprite;
 
 public:
-  Sprite3DDrawingRequest(const Sprite3D* sprite, const Vector2f& pos, float z_pos,
-                       const Matrix& modelview)
-    : DrawingRequest(pos, z_pos, modelview), sprite(sprite)
+  Sprite3DDrawingRequest(const Sprite3D* sprite, 
+                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite)
   {}
 
   void draw(const Texture& /*tmp_texture*/)
@@ -343,8 +343,9 @@
   if(frame1.speed < 0)
     time_delta = -time_delta;
   
-  while(blend_time + time_delta >= 1.0) {
-    delta -= (1.0 - blend_time) / (frame1.action->speed * frame1.speed);
+  while(blend_time + time_delta >= 1.0f)
+  {
+    delta -= (1.0f - blend_time) / (frame1.action->speed * frame1.speed);
     set_next_frame();
 
     time_delta = delta * frame1.action->speed * frame1.speed;

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -145,16 +145,16 @@
               }
             
             request->texcoord(tile->uv.left, tile->uv.top);
-            request->vertex(x * TILE_SIZE, y * TILE_SIZE);
+            request->vertex(static_cast<float>(x * TILE_SIZE), static_cast<float>(y * TILE_SIZE));
 
             request->texcoord(tile->uv.right, tile->uv.top);
-            request->vertex(x * TILE_SIZE + TILE_SIZE, y * TILE_SIZE);
-
+            request->vertex(static_cast<float>(x * TILE_SIZE + TILE_SIZE), static_cast<float>(y * TILE_SIZE));
+            
             request->texcoord(tile->uv.right, tile->uv.bottom);
-            request->vertex(x * TILE_SIZE + TILE_SIZE, y * TILE_SIZE + TILE_SIZE);
+            request->vertex(static_cast<float>(x * TILE_SIZE + TILE_SIZE), static_cast<float>(y * TILE_SIZE + TILE_SIZE));
             
             request->texcoord(tile->uv.left, tile->uv.bottom);
-            request->vertex(x * TILE_SIZE, y * TILE_SIZE + TILE_SIZE); 
+            request->vertex(static_cast<float>(x * TILE_SIZE), static_cast<float>(y * TILE_SIZE + TILE_SIZE)); 
           }
       }
 

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -76,16 +76,16 @@
   SoftwareSurface convert(w+2, h+2);
 
   SDL_Rect source_rect;
-  source_rect.x = x;
-  source_rect.y = y;
-  source_rect.w = w;
-  source_rect.h = h;
+  source_rect.x = static_cast<Sint16>(x);
+  source_rect.y = static_cast<Sint16>(y);
+  source_rect.w = static_cast<Sint16>(w);
+  source_rect.h = static_cast<Sint16>(h);
 
   SDL_Rect dest_rect;
-  dest_rect.x = 1;
-  dest_rect.y = 1;
-  dest_rect.w = w;
-  dest_rect.h = h;
+  dest_rect.x = static_cast<Sint16>(1);
+  dest_rect.y = static_cast<Sint16>(1);
+  dest_rect.w = static_cast<Sint16>(w);
+  dest_rect.h = static_cast<Sint16>(h);
 
   SDL_BlitSurface(image.get_surface(), &source_rect, convert.get_surface(), &dest_rect);
 
@@ -95,10 +95,10 @@
   
   assert_gl("updating tilepacker texture");
 
-  Rectf rect(Vector2f(static_cast<float>(impl->x_pos+1)/impl->width, 
-                    static_cast<float>(impl->y_pos+1)/impl->height), 
-             Sizef(static_cast<float>(TILE_RESOLUTION)/impl->width, 
-                   static_cast<float>(TILE_RESOLUTION)/impl->height));
+  Rectf rect(Vector2f(static_cast<float>(impl->x_pos + 1) / impl->width, 
+                      static_cast<float>(impl->y_pos + 1) / impl->height), 
+             Sizef(static_cast<float>(TILE_RESOLUTION) / impl->width, 
+                   static_cast<float>(TILE_RESOLUTION) / impl->height));
 
   // we move by TILE_RESOLUTION+1 to avoid tiles bleeding into each other
   // when blending

Modified: trunk/windstille/src/util/baby_xml.cpp
===================================================================
--- trunk/windstille/src/util/baby_xml.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/util/baby_xml.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -152,8 +152,8 @@
           } 
         else if (c == '&') 
           {
-            c += read_entity();
-          } 
+            c += read_entity(); // FIXME: This can't be right
+          }
         else 
           {
             incr_cursor();

Modified: trunk/windstille/src/util/response_curve.cpp
===================================================================
--- trunk/windstille/src/util/response_curve.cpp	2009-08-23 22:43:53 UTC (rev 3024)
+++ trunk/windstille/src/util/response_curve.cpp	2009-08-24 00:21:33 UTC (rev 3025)
@@ -46,11 +46,11 @@
       v = math::mid(i_min, v, i_max);
 
       int   bucket_count = samples.size() - 1;
-      float bucket_size  = (i_max - i_min) / bucket_count;
+      float bucket_size  = (i_max - i_min) / static_cast<float>(bucket_count);
       
       int bucket_index = int((v - i_min) / bucket_size);
 
-      float t = ((v - i_min) - (bucket_index * bucket_size)) / bucket_size;
+      float t = ((v - i_min) - (static_cast<float>(bucket_index) * bucket_size)) / bucket_size;
       
       return ((1.0f - t) * samples[bucket_index]) + (t * samples[bucket_index + 1]);
     }



From grumbel at mail.berlios.de  Mon Aug 24 02:27:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 02:27:48 +0200
Subject: [Windstille-commit] r3026 - in trunk/windstille/src: app collision
	screen
Message-ID: <200908240027.n7O0RmmF016986@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 02:27:47 +0200 (Mon, 24 Aug 2009)
New Revision: 3026

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/collision/stair_contact.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
Log:
Cleaned up a bunch of float/int/double conversion warnings

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-24 00:21:33 UTC (rev 3025)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-24 00:27:47 UTC (rev 3026)
@@ -470,11 +470,11 @@
       Color amb = Sector::current()->get_ambient_light();
 
       if (component == 0)
-        amb.r = i / 100.0f;
+        amb.r = static_cast<float>(i) / 100.0f;
       else if (component == 1)
-        amb.g = i / 100.0f;
+        amb.g = static_cast<float>(i) / 100.0f;
       else if (component == 2)
-        amb.b = i / 100.0f;
+        amb.b = static_cast<float>(i) / 100.0f;
 
       Sector::current()->set_ambient_light(amb);
     }
@@ -504,7 +504,7 @@
 void
 MenuManager::menu_gamma(int i)
 {
-  float gamma = i / 100.0f;
+  float gamma = static_cast<float>(i) / 100.0f;
   SDL_SetGamma(gamma, gamma, gamma);
 }
 

Modified: trunk/windstille/src/collision/stair_contact.cpp
===================================================================
--- trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 00:21:33 UTC (rev 3025)
+++ trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 00:27:47 UTC (rev 3026)
@@ -106,8 +106,8 @@
 StairContact::get_pos() const
 {
   if (tile_type & TILE_RIGHT)
-    return Vector2f(pos.x * 32 + 16 + 32 * advancement,
-                  pos.y * 32 + 16 + 32 * advancement);
+    return Vector2f(static_cast<float>(pos.x) * 32.0f + 16.0f + 32.0f * advancement,
+                    static_cast<float>(pos.y) * 32.0f + 16.0f + 32.0f * advancement);
   else // (tile_type & TILE_LEFT)
     return Vector2f(pos.x * 32 + 16 + 32 * advancement,
                   pos.y * 32 + 16 - 32 * advancement);

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-24 00:21:33 UTC (rev 3025)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-24 00:27:47 UTC (rev 3026)
@@ -79,24 +79,24 @@
 {
   sc.reset_modelview();
 
-  for(int y = -background.get_width(); 
-      y < Display::get_height() + background.get_height(); 
+  for(float y = -background.get_width(); 
+      y < static_cast<float>(Display::get_height()) + background.get_height(); 
       y += background.get_height())
     {
-      for(int x = -background.get_width(); 
-          x < Display::get_width() + background.get_width(); 
+      for(float x = -background.get_width(); 
+          x < static_cast<float>(Display::get_width()) + background.get_width(); 
           x += background.get_width())
         {
-          sc.color().draw(background, Vector2f(x + int(pos.x) % background.get_width(),
-                                               y + int(pos.y) % background.get_height()), -900);
+          sc.color().draw(background, Vector2f(x + fmodf(pos.x, background.get_width()),
+                                               y + fmodf(pos.y, background.get_height())), -900);
         }
     }
 
-  sc.translate(Display::get_width()/2 + pos.x, 
-               Display::get_height()/2 + pos.y);
-  sc.light().fill_screen(Color(0.4, 0.4, 0.4));
-  //sc.light().fill_screen(Color(1.0, 1.0, 1.0));
-  sc.color().fill_screen(Color(0.0, 0.0, 0.0));
+  sc.translate(static_cast<float>(Display::get_width())  / 2.0f + pos.x, 
+               static_cast<float>(Display::get_height()) / 2.0f + pos.y);
+  sc.light().fill_screen(Color(0.4f, 0.4f, 0.4f));
+  //sc.light().fill_screen(Color(1.0f, 1.0f, 1.0f));
+  sc.color().fill_screen(Color(0.0f, 0.0f, 0.0f));
 
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
     (*i)->draw(sc);



From grumbel at mail.berlios.de  Mon Aug 24 02:32:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 02:32:27 +0200
Subject: [Windstille-commit] r3027 - trunk/windstille/src/input
Message-ID: <200908240032.n7O0WRCt017472@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 02:32:26 +0200 (Mon, 24 Aug 2009)
New Revision: 3027

Modified:
   trunk/windstille/src/input/controller.cpp
Log:
Fixed mixup in initialization

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-08-24 00:27:47 UTC (rev 3026)
+++ trunk/windstille/src/input/controller.cpp	2009-08-24 00:32:26 UTC (rev 3027)
@@ -23,8 +23,8 @@
 #include "controller.hpp"
 
 Controller::Controller()
-  : states(),
-    events(LAST_EVENT)// FIXME: need to mark states with type
+  : states(LAST_EVENT),
+    events()// FIXME: need to mark states with type
 {
 }
 



From grumbel at mail.berlios.de  Mon Aug 24 02:32:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 02:32:43 +0200
Subject: [Windstille-commit] r3028 - trunk/windstille/src/math
Message-ID: <200908240032.n7O0Whp6017552@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 02:32:43 +0200 (Mon, 24 Aug 2009)
New Revision: 3028

Modified:
   trunk/windstille/src/math/random.cpp
Log:
Fixed float functions

Modified: trunk/windstille/src/math/random.cpp
===================================================================
--- trunk/windstille/src/math/random.cpp	2009-08-24 00:32:26 UTC (rev 3027)
+++ trunk/windstille/src/math/random.cpp	2009-08-24 00:32:43 UTC (rev 3028)
@@ -116,13 +116,13 @@
 float
 Random::frand(float range)
 {
-  return frand(range);
+  return static_cast<float>(drand(range));
 }
 
 float
 Random::frand()
 {
-  return frand();
+  return static_cast<float>(drand());
 }
 
 int



From grumbel at mail.berlios.de  Mon Aug 24 03:40:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 03:40:41 +0200
Subject: [Windstille-commit] r3029 - trunk/windstille/src/util
Message-ID: <200908240140.n7O1efPS000074@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 03:40:40 +0200 (Mon, 24 Aug 2009)
New Revision: 3029

Modified:
   trunk/windstille/src/util/baby_xml.cpp
Log:
Fixed mixup between 'c' and 'content'

Modified: trunk/windstille/src/util/baby_xml.cpp
===================================================================
--- trunk/windstille/src/util/baby_xml.cpp	2009-08-24 00:32:43 UTC (rev 3028)
+++ trunk/windstille/src/util/baby_xml.cpp	2009-08-24 01:40:40 UTC (rev 3029)
@@ -152,7 +152,7 @@
           } 
         else if (c == '&') 
           {
-            c += read_entity(); // FIXME: This can't be right
+            content += read_entity();
           }
         else 
           {
@@ -310,7 +310,7 @@
 
           for(std::vector<BabyXML::Attribute>::iterator j = i->attributes.begin(); j != i->attributes.end(); ++j)
             {
-              std::cout << " " << j->name << "=" << j->value;
+              std::cout << " " << j->name << "='" << j->value << "'";
             }
 
           std::cout << std::endl;



From grumbel at mail.berlios.de  Mon Aug 24 03:51:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 03:51:55 +0200
Subject: [Windstille-commit] r3030 - trunk/windstille
Message-ID: <200908240151.n7O1ptVi001149@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 03:51:54 +0200 (Mon, 24 Aug 2009)
New Revision: 3030

Modified:
   trunk/windstille/SConscript
Log:
Added test programs to build script

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-24 01:40:40 UTC (rev 3029)
+++ trunk/windstille/SConscript	2009-08-24 01:51:54 UTC (rev 3030)
@@ -21,7 +21,18 @@
 
 CacheDir('cache')
 
-debug_cxxflags = ["-O0", "-g", "-W", "-Wall", "-ansi", "-pedantic", "-Wnon-virtual-dtor", "-Werror"] # "-Wconversion",
+debug_cxxflags = [
+    "-O0",
+    "-g",
+    "-ansi", "-pedantic",
+    "-Wall",
+    "-Wextra",
+    "-Wnon-virtual-dtor",
+    "-Weffc++",
+    "-Wconversion",
+    #"-Wshadow",
+    #"-Werror",
+    ]
 
 # YACC
 yacc_test_text = """
@@ -113,6 +124,7 @@
         self.build_windstille()
         self.build_windstille_editor()
         self.build_windstille_data()
+        self.build_testapps()
 
     def configure(self):
         conf_env = Environment()
@@ -172,7 +184,7 @@
                                    CXXFILESUFFIX = ".cpp",
                                    YACCFLAGS=['-d', '--no-lines'])
 
-        miniswig_bin = miniswig_env.Program('external/miniswig/miniswig',
+        miniswig_bin = miniswig_env.Program('miniswig',
                                             ['external/miniswig/parser.yy',
                                              'external/miniswig/lexer.ll',
                                              'external/miniswig/create_docu.cpp',
@@ -181,7 +193,7 @@
                                              'external/miniswig/main.cpp',
                                              'external/miniswig/tree.cpp'])
 
-        env = Environment(MINISWIG='external/miniswig/miniswig')
+        env = Environment(MINISWIG=miniswig_bin)
 
         env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
                                 ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
@@ -189,7 +201,7 @@
                      'src/scripting/game_objects.hpp'])
 
         env.Depends(env.Command(['src/scripting/wrapper.cpp', 'src/scripting/wrapper.hpp'], 'src/scripting/miniswig.tmp',
-                                ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} "+
+                                ["$MINISWIG --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} "+
                                  "--module windstille --select-namespace Scripting"]),
                     miniswig_bin)
 
@@ -275,6 +287,15 @@
 
         editor_env.Program('windstille-editor', Glob('src/editor/*.cpp'))
 
+    def build_testapps(self):
+        env = Environment(OBJPREFIX="test__",
+                          CPPPATH=['src'],
+                          CXXFLAGS=debug_cxxflags,
+                          CPPDEFINES=["__TEST__"])
+        env.Program("test_babyxml", ["src/util/baby_xml.cpp"])
+        env.Program("test_response_curve", ["src/util/response_curve.cpp"])
+        env.Program("test_random", ["src/math/random.cpp"])
+
     def build_windstille_data(self):
         data_env = Environment()
 



From grumbel at mail.berlios.de  Mon Aug 24 04:08:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 04:08:51 +0200
Subject: [Windstille-commit] r3031 - trunk/windstille
Message-ID: <200908240208.n7O28pVi003453@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 04:08:50 +0200 (Mon, 24 Aug 2009)
New Revision: 3031

Modified:
   trunk/windstille/SConscript
Log:
Disable warnings for external libraries

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-24 01:51:54 UTC (rev 3030)
+++ trunk/windstille/SConscript	2009-08-24 02:08:50 UTC (rev 3031)
@@ -31,7 +31,7 @@
     "-Weffc++",
     "-Wconversion",
     #"-Wshadow",
-    #"-Werror",
+    "-Werror",
     ]
 
 # YACC
@@ -280,11 +280,13 @@
 
         editor_env.ParseConfig('Magick++-config --libs --cppflags')
         editor_env.ParseConfig('sdl-config --cflags --libs')
-        editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4')
-        editor_env.ParseConfig('pkg-config --cflags --libs gtkglextmm-1.2')
         editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
         editor_env.ParseConfig('pkg-config --cflags --libs libpng')
 
+        # Turn -I options into -isystem, so we don't get warnings from external libraries
+        editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 | sed "s/-I/-isystem/g"')
+        editor_env.ParseConfig('pkg-config --cflags --libs gtkglextmm-1.2 | sed "s/-I/-isystem/g"')
+
         editor_env.Program('windstille-editor', Glob('src/editor/*.cpp'))
 
     def build_testapps(self):



From grumbel at mail.berlios.de  Mon Aug 24 04:13:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 04:13:39 +0200
Subject: [Windstille-commit] r3032 - in trunk/windstille/src: app collision
	display editor engine hud input lisp objects util
Message-ID: <200908240213.n7O2Dd07004002@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 04:13:36 +0200 (Mon, 24 Aug 2009)
New Revision: 3032

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/collision/stair_contact.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/editor/undo_manager.cpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/lisp/getters.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/util/response_curve.cpp
   trunk/windstille/src/util/util.cpp
Log:
Cleaned up a bunch of float/int/double conversion warnings

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/app/console.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -56,7 +56,7 @@
       
     if(c != traits_type::eof()) {
       char str[1];
-      str[0] = c;
+      str[0] = static_cast<char>(c);
       console->add(str, 1);
     }
 
@@ -157,7 +157,7 @@
 void
 ConsoleImpl::draw()
 {
-  int y = y_pos;
+  int y = static_cast<int>(y_pos);
 
   if (active)
     y -= Fonts::current()->ttffont->get_height() + 2;
@@ -176,7 +176,8 @@
           if (buffer[i].display_time > 4.0f && !console.is_active())
             alpha = 1.0f - (buffer[i].display_time - 4.0f);
 
-          Fonts::current()->ttffont->draw(Vector2f(x_pos, y), buffer[i].message, Color(0.88f, 0.88f, 1.0f, alpha));
+          Fonts::current()->ttffont->draw(Vector2f(x_pos, static_cast<float>(y)), buffer[i].message, 
+                                          Color(0.88f, 0.88f, 1.0f, alpha));
         }
       y -= Fonts::current()->ttffont->get_height() + 2;
     }

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -169,7 +169,7 @@
   int ry = c_round (std::min (r.top, r.bottom)  / TILE_SIZE);
   
   float fw = r.right - r.left;
-  float fh = fabs (r.bottom   - r.top);
+  float fh = fabsf(r.bottom   - r.top);
   
   int rw = c_roundup (fw / TILE_SIZE);
   int rh = c_roundup (fh / TILE_SIZE);
@@ -205,7 +205,7 @@
     {
       dx = i->left - r.left / TILE_SIZE;
       dy = i->top  - r.top  / TILE_SIZE;
-      d = sqrt( dx * dx + dy * dy );
+      d = sqrtf( dx * dx + dy * dy );
       if (d < distance)
 	{
 	  distance=d;
@@ -694,7 +694,7 @@
 	  r.bottom += dy;
 
 	  if(last_zero && ct==0.0f)
-	    time += 0.0005;
+	    time += 0.0005f;
 	  else
 	    time += ct;
 	  last_zero=(ct==0.0f);

Modified: trunk/windstille/src/collision/stair_contact.cpp
===================================================================
--- trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -106,11 +106,15 @@
 StairContact::get_pos() const
 {
   if (tile_type & TILE_RIGHT)
+  {
     return Vector2f(static_cast<float>(pos.x) * 32.0f + 16.0f + 32.0f * advancement,
                     static_cast<float>(pos.y) * 32.0f + 16.0f + 32.0f * advancement);
+  }
   else // (tile_type & TILE_LEFT)
-    return Vector2f(pos.x * 32 + 16 + 32 * advancement,
-                  pos.y * 32 + 16 - 32 * advancement);
+  {
+    return Vector2f(static_cast<float>(pos.x) * 32.0f + 16.0f + 32.0f * advancement,
+                    static_cast<float>(pos.y) * 32.0f + 16.0f - 32.0f * advancement);
+  }
 }
 
 bool

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -301,11 +301,11 @@
                             break;
                           }
                         
-                        int x = x_pos;
-                        int y = y_pos;
-
+                        float x = static_cast<float>(x_pos);
+                        float y = static_cast<float>(y_pos);
+                        
                         if (sinus) // FIXME: this could actually work per vertex
-                          y += static_cast<int>(sin(impl->passed_time * 10.0f + x_pos / 15.0f) * 5.0f);
+                          y += sinf(impl->passed_time * 10.0f + static_cast<float>(x_pos) / 15.0f) * 5.0f;
 
                         if (*j == '.' || *j == '\n')
                           eat_time -= 0.50f;
@@ -315,8 +315,7 @@
                         const TTFCharacter& character = impl->font->get_character(*j);
                       
                         bool draw_it = (y_pos >= impl->scroll_offset && 
-                                        y_pos < impl->scroll_offset + impl->rect.get_height() 
-                                        - (impl->font->get_height()));
+                                        y_pos < impl->scroll_offset + impl->rect.get_height() - static_cast<float>(impl->font->get_height()));
                         if (is_small)
                           {
                             float scale = 0.6f;
@@ -324,23 +323,23 @@
                               {
                                 glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
                                 glTexCoord2f(character.uv.left, character.uv.top);
-                                glVertex2f(x + scale * character.pos.left + mx,
-                                           y + scale * (character.pos.top  + my));
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left) + mx,
+                                           y + scale * static_cast<float>(character.pos.top)  + my);
 
                                 glTexCoord2f(character.uv.right, character.uv.top);
-                                glVertex2f(x + scale * character.pos.right + mx, 
-                                           y + scale * (character.pos.top) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right) + mx, 
+                                           y + scale * static_cast<float>(character.pos.top)   + my);
 
                                 glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
                                 glTexCoord2f(character.uv.right, character.uv.bottom);
-                                glVertex2f(x + scale * character.pos.right  + mx, 
-                                           y + scale * (character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right)  + mx, 
+                                           y + scale * static_cast<float>(character.pos.bottom) + my);
 
                                 glTexCoord2f(character.uv.left, character.uv.bottom);
-                                glVertex2f(x + scale * character.pos.left   + mx, 
-                                           y + scale * (character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left)   + mx, 
+                                           y + scale * static_cast<float>(character.pos.bottom) + my);
                               }
-                            x_pos += static_cast<int>(scale * character.advance);
+                            x_pos += static_cast<int>(scale * static_cast<float>(character.advance));
                           }
                         else if (is_large)
                           {
@@ -349,23 +348,23 @@
                               {
                                 glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
                                 glTexCoord2f(character.uv.left, character.uv.top);
-                                glVertex2f(x + scale * character.pos.left + mx,
-                                           y + (character.pos.top  + my));
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left) + mx,
+                                           y + static_cast<float>(character.pos.top) + my);
 
                                 glTexCoord2f(character.uv.right, character.uv.top);
-                                glVertex2f(x + scale * character.pos.right + mx, 
-                                           y + (character.pos.top) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right) + mx, 
+                                           y + static_cast<float>(character.pos.top) + my);
 
                                 glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
                                 glTexCoord2f(character.uv.right, character.uv.bottom);
-                                glVertex2f(x + scale * character.pos.right  + mx, 
-                                           y + (character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right) + mx, 
+                                           y + static_cast<float>(character.pos.bottom) + my);
 
                                 glTexCoord2f(character.uv.left, character.uv.bottom);
-                                glVertex2f(x + scale * character.pos.left   + mx, 
-                                           y + (character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left) + mx, 
+                                           y + static_cast<float>(character.pos.bottom) + my);
                               }
-                            x_pos += static_cast<int>(scale * character.advance);
+                            x_pos += static_cast<int>(scale * static_cast<float>(character.advance));
                           }
                         else   
                           {
@@ -373,21 +372,21 @@
                               {
                                 glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
                                 glTexCoord2f(character.uv.left, character.uv.top);
-                                glVertex2f(x + character.pos.left + mx,
-                                           y + character.pos.top  + my);
+                                glVertex2f(x + static_cast<float>(character.pos.left) + mx,
+                                           y + static_cast<float>(character.pos.top)  + my);
 
                                 glTexCoord2f(character.uv.right, character.uv.top);
-                                glVertex2f(x + character.pos.right + mx, 
-                                           y + character.pos.top   + my);
+                                glVertex2f(x + static_cast<float>(character.pos.right) + mx, 
+                                           y + static_cast<float>(character.pos.top)   + my);
 
                                 glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
                                 glTexCoord2f(character.uv.right, character.uv.bottom);
-                                glVertex2f(x + character.pos.right  + mx, 
-                                           y + character.pos.bottom + my);
+                                glVertex2f(x + static_cast<float>(character.pos.right)  + mx, 
+                                           y + static_cast<float>(character.pos.bottom) + my);
 
                                 glTexCoord2f(character.uv.left, character.uv.bottom);
-                                glVertex2f(x + character.pos.left   + mx, 
-                                           y + character.pos.bottom + my);
+                                glVertex2f(x + static_cast<float>(character.pos.left)   + mx, 
+                                           y + static_cast<float>(character.pos.bottom) + my);
                               }
                             x_pos += character.advance;
                           }
@@ -400,7 +399,7 @@
 
   if (impl->max_scroll_offset == -1.0f)
     {
-      impl->max_scroll_offset = y_pos - impl->rect.get_height();
+      impl->max_scroll_offset = static_cast<float>(y_pos) - impl->rect.get_height();
       if (impl->max_scroll_offset < 0)
         impl->max_scroll_offset = 0;
     }
@@ -413,7 +412,8 @@
   glEnd();
   glPopMatrix();
 
-  impl->cursor_pos = Vector2f(x_pos + impl->rect.left, y_pos + impl->rect.top);
+  impl->cursor_pos = Vector2f(static_cast<float>(x_pos) + impl->rect.left, 
+                              static_cast<float>(y_pos) + impl->rect.top);
 }
 
 void

Modified: trunk/windstille/src/editor/undo_manager.cpp
===================================================================
--- trunk/windstille/src/editor/undo_manager.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/editor/undo_manager.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -19,6 +19,8 @@
 #include "undo_manager.hpp"
 
 UndoManager::UndoManager()
+  : undo_stack(),
+    redo_stack()
 {
 }
 

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -87,7 +87,7 @@
   std::cout << "bounce collision." << std::endl;
   Vector2f collision_vel = data.direction * (velocity() * data.direction);
 
-  velocity() -= collision_vel * (1.0 + bounciness);
+  velocity() -= collision_vel * (1.0f + bounciness);
   //force -= collision_vel * (1.0f + bounciness) * mass / data.delta;
 
   // TODO apply friction
@@ -97,7 +97,7 @@
 Physics::update(float delta)
 {
   // add gravity force (TODO make it configurable per Sector)
-  force += Vector2f(0, 9.81 * mass);
+  force += Vector2f(0, 9.81f * mass);
 
   //force -= velocity() * air_friction;
   

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -91,8 +91,8 @@
   Vector2f pos(Display::get_width()  - 350 - 16, 
                Display::get_height() - 200 - 16);
 
-  Display::fill_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9));
-  Display::draw_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  Display::fill_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9f));
+  Display::draw_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(1.0f, 1.0f, 1.0f,  0.5f));
 
   draw_stick(pos + Vector2f(50, 75),
              controller.get_button_state(LEFT_STICK_BUTTON),

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -126,7 +126,7 @@
   if (!active)
     return;
 
-  grow = fabs(sinf(time * 3.0f)) * 4.0f;
+  grow = fabsf(sinf(time * 3.0f)) * 4.0f;
 
   direction = Vector2f(controller.get_axis_state(X_AXIS),
                      controller.get_axis_state(Y_AXIS));
@@ -134,7 +134,7 @@
   if (fabs(controller.get_axis_state(X_AXIS)) > 0.3f ||
       fabs(controller.get_axis_state(Y_AXIS)) > 0.3f)
     {
-      float segment = 360.0f / choices.size();
+      float segment = 360.0f / static_cast<float>(choices.size());
       float angle = math::rad2deg(math::normalize_angle(atan2f(direction.y, direction.x) + M_PI/2 + math::deg2rad(segment/2.0f)));
 
       int new_selection = int(angle / segment);

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -107,7 +107,7 @@
     {
       const Vector2f& pos = text_area->get_cursor_pos();
       Rectf cursor(pos.x + 8, pos.y + 8, pos.x + 24, pos.y + 24);
-      Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, fabs(sin(SDL_GetTicks() / 1000.0f * M_PI * 3.0f))));
+      Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, fabsf(sin(SDL_GetTicks() / 1000.0f * M_PI * 3.0f))));
     }
 }
 

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -104,7 +104,7 @@
   Vector2f pos = Vector2f(400, 300);
 
   int num_items = items.size();
-  float step_angle = (2*M_PI) / num_items;
+  float step_angle = (2.0f * math::pi) / static_cast<float>(num_items);
 
   for(int i = 0; i < int(items.size()); ++i)
     {
@@ -140,7 +140,7 @@
 void
 InventoryImpl::update(float delta, const Controller& controller)
 {
-  float step_angle = (2*M_PI) / items.size();
+  float step_angle = (2.0f * math::pi) / static_cast<float>(items.size());
   if (fabsf(add_angle) > step_angle)
     {
       if (moving == 1)

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -542,11 +542,11 @@
                  
                   float roll = atanf(static_cast<float>(event.acc.x / event.acc.z));
                   if (event.acc.z <= 0.0) {
-                    roll += M_PI * ((event.acc.x > 0.0) ? 1 : -1);
+                    roll += math::pi * ((event.acc.x > 0.0f) ? 1 : -1);
                   }
                   roll *= -1;
 
-                  float pitch = atan(event.acc.y/event.acc.z*cos(roll));
+                  float pitch = atanf(event.acc.y / event.acc.z * cosf(roll));
 
                   add_axis_event(X2_AXIS, math::mid(-1.0f, -float(pitch / M_PI), 1.0f));
                   add_axis_event(Y2_AXIS, math::mid(-1.0f, -float(roll  / M_PI), 1.0f));

Modified: trunk/windstille/src/lisp/getters.cpp
===================================================================
--- trunk/windstille/src/lisp/getters.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/lisp/getters.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -14,7 +14,7 @@
 bool get(const Lisp* lisp, float& val)
 {
   if(lisp->get_type() == Lisp::TYPE_INT)
-    val = lisp->get_int();
+    val = static_cast<float>(lisp->get_int());
   else if(lisp->get_type() == Lisp::TYPE_FLOAT)
     val = lisp->get_float();
   else

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -45,7 +45,7 @@
   for(std::vector<float>::size_type i = 2; i < heightfield1->size()-2; ++i)
     {
       (*heightfield1)[i] = sin(i/float(heightfield1->size()) * 10.0f) * 0.5f
-        + sin(i/float(heightfield1->size()) * 5.0f) * .5f;
+        + sinf(i / static_cast<float>(heightfield1->size()) * 5.0f) * .5f;
       (*heightfield2)[i] = (*heightfield1)[i];
     }
 
@@ -76,18 +76,18 @@
         float c = 0.5f;
         if (i > 0)
           {
-            float angle = atan2(32.0f* ((*heightfield1)[i] - (*heightfield1)[i-1]), 3.2f);
+            float angle = atan2f(32.0f* ((*heightfield1)[i] - (*heightfield1)[i-1]), 3.2f);
             c = std::min(1.0f, std::max(0.5f, 8.0f * (angle/float(M_PI)) + 0.5f));
           }
 
         array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
         array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sin(t+i/10.0f)*0.2f);
+                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t+i/10.0f)*0.2f);
         array->vertex(i * 32.0f/SAMPLES, -32.0f * (*heightfield1)[i] + 8.0f);
 
         array->color(Color(c, c, 1.0f, 1.0f));
         array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i]) * texscale + sin(t+i/10.0f)*0.2f);
+                        (-32.0f * (*heightfield1)[i]) * texscale + sinf(t+i/10.0f)*0.2f);
         array->vertex(i * 32.0f/SAMPLES, -32.0f * (*heightfield1)[i]);
       }
 
@@ -103,13 +103,13 @@
     for(std::vector<float>::size_type i = 0; i < heightfield1->size(); ++i)
       {
         array->color(Color(0.0f, 0.0f, 0.5f, 0.7f));
-        array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
-                        (64.0f) * texscale + sin(t+i/10.0f)*0.2f);
+        array->texcoord((i * 32.0f/SAMPLES) * texscale + sinf(t + i/10.0f)*0.2f,
+                        (64.0f) * texscale + sinf(t+i/10.0f)*0.2f);
         array->vertex(i * 32.0f/SAMPLES, 64.0f);
 
         array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
         array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sin(t+i/10.0f)*0.2f);
+                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t+i/10.0f)*0.2f);
         array->vertex(i * 32.0f/SAMPLES, -32.0f * (*heightfield1)[i] + 8.0f);
       }
 

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -79,21 +79,21 @@
       
       if (0) // second noise level
         {
-          u = rnd.drand();
-          v = rnd.drand();
+          u = rnd.frand();
+          v = rnd.frand();
           float size = 4.0f;
 
           array->texcoord(u, v);
           array->vertex(0, 0, 1.0f);
 
           array->texcoord(u + size, v);
-          array->vertex(Display::get_width(), 0, 1.0f);
+          array->vertex(static_cast<float>(Display::get_width()), 0.0f, 1.0f);
 
           array->texcoord(u + size, v + size);
-          array->vertex(Display::get_width(), Display::get_height(), 1.0f);
+          array->vertex(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()), 1.0f);
 
           array->texcoord(u, v + size);
-          array->vertex(0, Display::get_height(), 1.0f);
+          array->vertex(0.0f, static_cast<float>(Display::get_height()), 1.0f);
         }
 
       sc.light().draw(array);

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -94,11 +94,11 @@
       {
         float angel = (2*M_PI / segments);
 
-        float x1 =  sin(angel*i)*radius;
-        float y1 = -cos(angel*i)*radius;
+        float x1 =  sinf(angel*i)*radius;
+        float y1 = -cosf(angel*i)*radius;
 
-        float x2 =  sin(angel*(i+1))*radius;
-        float y2 = -cos(angel*(i+1))*radius;
+        float x2 =  sinf(angel*(i+1))*radius;
+        float y2 = -cosf(angel*(i+1))*radius;
 
         glTexCoord2f(x1+256, (y1+256));
         glVertex3f(x1+256, y1+256, 0);
@@ -107,11 +107,11 @@
         glVertex3f(x2+256, y2+256, 0);
 
 
-        float x3 =  sin(angel*i)*minradius;
-        float y3 = -cos(angel*i)*minradius;
+        float x3 =  sinf(angel*i)*minradius;
+        float y3 = -cosf(angel*i)*minradius;
 
-        float x4 =  sin(angel*(i+1))*minradius;
-        float y4 = -cos(angel*(i+1))*minradius;
+        float x4 =  sinf(angel*(i+1))*minradius;
+        float y4 = -cosf(angel*(i+1))*minradius;
 
         glTexCoord2f(x4+256, (y4+256));
         glVertex3f(x4+256, y4+256, 0);
@@ -187,13 +187,13 @@
     glBegin(GL_QUADS);
     for (int i = 0; i < segments; ++i)
       {
-        float angel = (2*M_PI / segments);
+        float angel = 2.0f * math::pi / static_cast<float>(segments);
 
-        float x1 =  sin(angel*i)*radius;
-        float y1 = -cos(angel*i)*radius;
+        float x1 =  sinf(angel*i)*radius;
+        float y1 = -cosf(angel*i)*radius;
 
-        float x2 =  sin(angel*(i+1))*radius;
-        float y2 = -cos(angel*(i+1))*radius;
+        float x2 =  sinf(angel*(i+1))*radius;
+        float y2 = -cosf(angel*(i+1))*radius;
 
         glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
         glTexCoord2f(x1/512.0f+0.5f, y1/512.0f+0.5f);
@@ -203,11 +203,11 @@
         glVertex3f(x2+256, y2+256, 0);
 
 
-        float x3 =  sin(angel*i)*minradius;
-        float y3 = -cos(angel*i)*minradius;
+        float x3 =  sinf(angel*i)*minradius;
+        float y3 = -cosf(angel*i)*minradius;
 
-        float x4 =  sin(angel*(i+1))*minradius;
-        float y4 = -cos(angel*(i+1))*minradius;
+        float x4 =  sinf(angel*(i+1))*minradius;
+        float y4 = -cosf(angel*(i+1))*minradius;
 
         glColor4f(1.0f, 1.0f, 1.0f, 0.0f);
         glTexCoord2f(x4/512.0f+0.5f, y4/512.0f+0.5f);

Modified: trunk/windstille/src/util/response_curve.cpp
===================================================================
--- trunk/windstille/src/util/response_curve.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/util/response_curve.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -58,6 +58,7 @@
 
 #ifdef __TEST__
 #include <iostream>
+#include <stdlib.h>
 
 int main(int argc, char** argv)
 {
@@ -74,7 +75,7 @@
 
       ResponseCurve curve(0.0f, 1.0f, samples_vec);
 
-      std::cout << curve.get(atof(argv[1])) << std::endl;
+      std::cout << curve.get(static_cast<float>(atof(argv[1]))) << std::endl;
     }
   return 0;
 }

Modified: trunk/windstille/src/util/util.cpp
===================================================================
--- trunk/windstille/src/util/util.cpp	2009-08-24 02:08:50 UTC (rev 3031)
+++ trunk/windstille/src/util/util.cpp	2009-08-24 02:13:36 UTC (rev 3032)
@@ -42,7 +42,7 @@
   std::ifstream in(filename.c_str());
   while (true)
     {
-      char c = in.get();
+      char c = static_cast<char>(in.get());
       if (!in.good())
         break;
       str += c;
@@ -61,7 +61,7 @@
 {
   std::string out;
   for(std::string::const_iterator i = str.begin();  i != str.end(); ++i)
-    out += tolower(*i);
+    out += static_cast<char>(tolower(*i));
   return out;
 }
 



From grumbel at mail.berlios.de  Mon Aug 24 04:43:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 04:43:44 +0200
Subject: [Windstille-commit] r3033 - in trunk/windstille/src: collision
	editor engine gui hud input objects physfs screen sound tile
Message-ID: <200908240243.n7O2hi3w009702@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 04:43:41 +0200 (Mon, 24 Aug 2009)
New Revision: 3033

Modified:
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/decal_rotate_control_point.hpp
   trunk/windstille/src/editor/decal_scale_control_point.hpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/physfs/physfs_sdl.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/tile/tile_packer.cpp
Log:
Cleaned up a bunch of float/int/double conversion warnings

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -141,7 +141,7 @@
 int c_round(float f)
 {
   int i = static_cast<int>(f);
-  if(fabsf(f-i)>0.5)
+  if(fabsf(f-static_cast<float>(i)) > 0.5f)
     {
       if(i>0)
 	i++;
@@ -157,7 +157,7 @@
   for (x=l; x<=l+w; x++)
     for (y=t; y<=t+h; y++)
       {
-	if (tilemap->is_ground( x * TILE_SIZE, y * TILE_SIZE))
+	if (tilemap->is_ground(static_cast<float>(x * TILE_SIZE), static_cast<float>(y * TILE_SIZE)))
 	  return false;
       }
   return true;

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/editor/control_point.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -28,7 +28,8 @@
 
 ControlPoint::ControlPoint(const Surface& surface_, const Vector2f& pos_)
   : surface(surface_),
-    pos(pos_)
+    pos(pos_),
+    offset()
 {
 }
 

Modified: trunk/windstille/src/editor/decal_rotate_control_point.hpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.hpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/editor/decal_rotate_control_point.hpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -38,6 +38,10 @@
   void on_move_end(GdkEventMotion* event, const Vector2f& offset_);
 
   void draw(SceneContext& sc);
+
+private:
+  DecalRotateControlPoint (const DecalRotateControlPoint&);
+  DecalRotateControlPoint& operator= (const DecalRotateControlPoint&);
 };
 
 #endif

Modified: trunk/windstille/src/editor/decal_scale_control_point.hpp
===================================================================
--- trunk/windstille/src/editor/decal_scale_control_point.hpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/editor/decal_scale_control_point.hpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -41,6 +41,10 @@
   void on_move_end(GdkEventButton* event, const Vector2f& offset_);
 
   void draw(SceneContext& sc);
+
+private:
+  DecalScaleControlPoint (const DecalScaleControlPoint&);
+  DecalScaleControlPoint& operator= (const DecalScaleControlPoint&);
 };
 
 #endif

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -47,7 +47,7 @@
 {
   std::istream* in = reinterpret_cast<std::istream*> (file);
 
-  char c = in->get();
+  char c = static_cast<char>(in->get());
 
   if (in->eof())
     return 0;

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -39,7 +39,7 @@
 void
 GroupComponent::draw()
 {
-  Display::fill_rounded_rect(rect, 5.0f, Color(0.0f, 0.0f, 0.0f, 0.7));
+  Display::fill_rounded_rect(rect, 5.0f, Color(0.0f, 0.0f, 0.0f, 0.7f));
   Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
   if (!title.empty())

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -141,7 +141,7 @@
 
   int padding = 6;
   component->set_screen_rect(Rectf(rect.left + padding,
-                                   rect.top  + padding + Fonts::current()->vera20->get_height() + 10,
+                                   rect.top  + padding + Fonts::current()->vera20->get_height() + 10.0f,
                                    rect.right  - padding,
                                    rect.bottom - padding
                                    ));

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -50,7 +50,7 @@
 ControllerHelpWindow::draw_stick(const Vector2f& pos, bool pressed, float x, float y)
 {
   Size size(75, 75);
-  Rectf rect(pos - Vector2f(size.width, size.height)/2, size);
+  Rectf rect(pos - Vector2f(static_cast<float>(size.width), static_cast<float>(size.height)) / 2.0f, size);
 
   Display::fill_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
   //Display::draw_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
@@ -88,8 +88,8 @@
 {
   const Controller& controller = InputManager::current()->get_controller();
 
-  Vector2f pos(Display::get_width()  - 350 - 16, 
-               Display::get_height() - 200 - 16);
+  Vector2f pos(static_cast<float>(Display::get_width())  - 350.0f - 16.0f, 
+               static_cast<float>(Display::get_height()) - 200.0f - 16.0f);
 
   Display::fill_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9f));
   Display::draw_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(1.0f, 1.0f, 1.0f,  0.5f));

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -135,7 +135,7 @@
       fabs(controller.get_axis_state(Y_AXIS)) > 0.3f)
     {
       float segment = 360.0f / static_cast<float>(choices.size());
-      float angle = math::rad2deg(math::normalize_angle(atan2f(direction.y, direction.x) + M_PI/2 + math::deg2rad(segment/2.0f)));
+      float angle = math::rad2deg(math::normalize_angle(atan2f(direction.y, direction.x) + math::pi/2.0f + math::deg2rad(segment/2.0f)));
 
       int new_selection = int(angle / segment);
       new_selection = math::mid(0, new_selection, int(choices.size()));

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -107,7 +107,7 @@
     {
       const Vector2f& pos = text_area->get_cursor_pos();
       Rectf cursor(pos.x + 8, pos.y + 8, pos.x + 24, pos.y + 24);
-      Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, fabsf(sin(SDL_GetTicks() / 1000.0f * M_PI * 3.0f))));
+      Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, fabsf(sinf(SDL_GetTicks() / 1000.0f * math::pi * 3.0f))));
     }
 }
 

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -108,8 +108,8 @@
 
   for(int i = 0; i < int(items.size()); ++i)
     {
-      const InventoryItem& item = items[(i+current_item)%items.size()];
-      Vector2f draw_pos = pos + Vector2f(128, 0).rotate(step_angle * i - M_PI/2 + add_angle);
+      const InventoryItem& item = items[(i+current_item) % items.size()];
+      Vector2f draw_pos = pos + Vector2f(128.0f, 0.0f).rotate(step_angle * i - math::pi/2.0f + add_angle);
 
       if (i == 0 && moving == 0)
         {

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -391,7 +391,7 @@
         {
           if (abs(event.value) > dead_zone)
             {
-              add_axis_event(i->event, event.value / (i->invert ? -32768.0f : 32768.0f));
+              add_axis_event(i->event, static_cast<float>(event.value) / (i->invert ? -32768.0f : 32768.0f));
             }
           else
             {
@@ -542,7 +542,7 @@
                  
                   float roll = atanf(static_cast<float>(event.acc.x / event.acc.z));
                   if (event.acc.z <= 0.0) {
-                    roll += math::pi * ((event.acc.x > 0.0f) ? 1 : -1);
+                    roll += math::pi * ((event.acc.x > 0.0f) ? 1.0f : -1.0f);
                   }
                   roll *= -1;
 

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -73,7 +73,7 @@
   int x = static_cast<int>(pos.x / TILE_SIZE);
   int y = static_cast<int>(pos.y / TILE_SIZE);
 
-  Vector2f direction(cos(angle) * 100.0f, sin(angle) * 100.0f);
+  Vector2f direction(cosf(angle) * 100.0f, sinf(angle) * 100.0f);
 
   int step_x = (direction.x > 0) ? 1 : -1;
   int step_y = (direction.y > 0) ? 1 : -1;

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -44,7 +44,7 @@
   
   for(std::vector<float>::size_type i = 2; i < heightfield1->size()-2; ++i)
     {
-      (*heightfield1)[i] = sin(i/float(heightfield1->size()) * 10.0f) * 0.5f
+      (*heightfield1)[i] = sinf(i/static_cast<float>(heightfield1->size()) * 10.0f) * 0.5f
         + sinf(i / static_cast<float>(heightfield1->size()) * 5.0f) * .5f;
       (*heightfield2)[i] = (*heightfield1)[i];
     }
@@ -81,14 +81,14 @@
           }
 
         array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
-        array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
+        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f)*0.2f,
                         (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f/SAMPLES, -32.0f * (*heightfield1)[i] + 8.0f);
+        array->vertex(i * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
 
         array->color(Color(c, c, 1.0f, 1.0f));
-        array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
+        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f)*0.2f,
                         (-32.0f * (*heightfield1)[i]) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f/SAMPLES, -32.0f * (*heightfield1)[i]);
+        array->vertex(i * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i]);
       }
 
     sc.color().draw(array);
@@ -103,14 +103,14 @@
     for(std::vector<float>::size_type i = 0; i < heightfield1->size(); ++i)
       {
         array->color(Color(0.0f, 0.0f, 0.5f, 0.7f));
-        array->texcoord((i * 32.0f/SAMPLES) * texscale + sinf(t + i/10.0f)*0.2f,
+        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f)*0.2f,
                         (64.0f) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f/SAMPLES, 64.0f);
+        array->vertex(i * 32.0f/static_cast<float>(SAMPLES), 64.0f);
 
         array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
-        array->texcoord((i * 32.0f/SAMPLES) * texscale + sin(t + i/10.0f)*0.2f,
+        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f) * 0.2f,
                         (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f/SAMPLES, -32.0f * (*heightfield1)[i] + 8.0f);
+        array->vertex(i * 32.0f/static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
       }
 
     sc.color().draw(array);

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -60,22 +60,22 @@
       array->set_texture(noise);
       array->set_blend_func(GL_DST_COLOR, GL_ZERO);
 
-      float u = rnd.drand()/0.5f;
-      float v = rnd.drand()/0.5f;
-      float w = 4.0f/6.0f;
-      float h = 3.0f/6.0f;
+      float u = rnd.frand() / 0.5f;
+      float v = rnd.frand() / 0.5f;
+      float w = 4.0f / 6.0f;
+      float h = 3.0f / 6.0f;
 
       array->texcoord(u, v);
       array->vertex(0, 0);
 
       array->texcoord(u + w, v);
-      array->vertex(Display::get_width(), 0);
+      array->vertex(static_cast<float>(Display::get_width()), 0);
 
       array->texcoord(u + w, v + h);
-      array->vertex(Display::get_width(), Display::get_height());
+      array->vertex(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
 
       array->texcoord(u, v + h);
-      array->vertex(0, Display::get_height());
+      array->vertex(0, static_cast<float>(Display::get_height()));
       
       if (0) // second noise level
         {

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -158,8 +158,8 @@
   float propx = 0;
   float propy = 0;
   
-  float adx = fabs(dx);
-  float ady = fabs(dy);
+  float adx = fabsf(dx);
+  float ady = fabsf(dy);
   
   //we can't divide by 0 because we return above if !dx and !dy
   if (dx < 0)
@@ -179,8 +179,8 @@
   velocity.y += dvy;
     
   //don't accelerate past max speed
-  float max_vx = fabs(target_speed * propx);
-  float max_vy = fabs(target_speed * propy);
+  float max_vx = fabsf(target_speed * propx);
+  float max_vy = fabsf(target_speed * propy);
   
   if (velocity.x > max_vx)
     velocity.x = max_vx;

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -80,8 +80,8 @@
     state.bind_texture(screen_texture, 0);
     state.activate();
 
-    float radius = (count)*2.0f + 20.0f; // enlarge radius by 20.0f to handle texture displacement 
-    float minradius = 2.0f*count - 164.0f;
+    float radius = static_cast<float>(count)*2.0f + 20.0f; // enlarge radius by 20.0f to handle texture displacement 
+    float minradius = 2.0f * static_cast<float>(count) - 164.0f;
     if (minradius < 0)
       minradius = 0;
 
@@ -92,7 +92,7 @@
     glBegin(GL_QUADS);
     for (int i = 0; i < segments; ++i)
       {
-        float angel = (2*M_PI / segments);
+        float angel = 2.0f * math::pi / static_cast<float>(segments);
 
         float x1 =  sinf(angel*i)*radius;
         float y1 = -cosf(angel*i)*radius;

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -45,17 +45,20 @@
 void
 SpiderMine::update(float delta)
 {   
-  if (state == EXPLODE) {
+  if (state == EXPLODE) 
+  {
     explode.update(delta);
     if (explode.is_finished())
       remove();
-  } else {
+  } 
+  else 
+  {
     search_for_player(delta);
     
     if (on_ground()) {
       if (velocity.y > 0) {
         velocity.y = 0;
-        pos.y = int(pos.y / TILE_SIZE) * TILE_SIZE + TILE_SIZE - 1;
+        pos.y = int(pos.y / static_cast<float>(TILE_SIZE)) * static_cast<float>(TILE_SIZE) + static_cast<float>(TILE_SIZE) - 1.0f;
       }
 
     } else {

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/objects/swarm.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -47,7 +47,7 @@
       i->pos.x = pos.x + rnd.frand(-100, 100);
       i->pos.y = pos.y + rnd.frand(-100, 100);
 
-      i->angle = rnd.frand(-M_PI, M_PI);
+      i->angle = rnd.frand(-math::pi, math::pi);
       i->speed = rnd.frand(50.0f, 200.0f);
 
       i->max_speed = rnd.frand(100.0f, 200.0f);

Modified: trunk/windstille/src/physfs/physfs_sdl.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -57,7 +57,7 @@
 {
     PHYSFS_file* file = (PHYSFS_file*) context->hidden.unknown.data1;
 
-    int res = PHYSFS_read(file, ptr, size, maxnum);
+    int res = static_cast<PHYSFS_sint64>(PHYSFS_read(file, ptr, size, maxnum));
     return res;
 }
 

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -191,7 +191,8 @@
   if (pause)
     {
       if ((SDL_GetTicks() / 1000) % 2)
-        Fonts::current()->vera20->draw(Vector2f(Display::get_width()/2.0f, Display::get_height()/2.0f), 
+        Fonts::current()->vera20->draw(Vector2f(static_cast<float>(Display::get_width())  / 2.0f,
+                                                static_cast<float>(Display::get_height()) / 2.0f), 
                                        "Pause");
     }
 }

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -76,7 +76,7 @@
   {
     /// Amount of time the world moves forward each update(), this is
     /// independed of the number of frames and always constant
-    static const float step = .001;
+    static const float step = 0.001f;
 
     Uint32 now = SDL_GetTicks();
     float delta = static_cast<float>(now - ticks) / 1000.0f + overlap_delta;
@@ -327,15 +327,15 @@
 {
   if(time_counter > 1) 
     {
-      last_fps = int(frame_counter / time_counter);
+      last_fps = int(static_cast<float>(frame_counter) / time_counter);
 
-      time_counter  = fmodf(time_counter, 1.0);
+      time_counter  = fmodf(static_cast<float>(time_counter), 1.0f);
       frame_counter = 0;
     }
   
   std::ostringstream out;
   out << "FPS: " << last_fps;
-  Fonts::current()->ttffont->draw(Vector2f(Display::get_width() - 100, 30), out.str());
+  Fonts::current()->ttffont->draw(Vector2f(static_cast<float>(Display::get_width()) - 100.0f, 30.0f), out.str());
 }
 
 void

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -339,7 +339,7 @@
       delta = 0.0f;
     }
   
-  display_time += delta * 0.5;
+  display_time += delta * 0.5f;
 
   switch(mode) {
   case SLIDESHOW:

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -43,8 +43,8 @@
 void
 TitleScreen::draw()
 {
-  background.draw(Vector2f(Display::get_width()  / 2.0f - (background.get_width()  * background.get_scale() / 2.0f),
-                           Display::get_height() / 2.0f - (background.get_height() * background.get_scale() / 2.0f)));
+  background.draw(Vector2f(static_cast<float>(Display::get_width())  / 2.0f - (background.get_width()  * background.get_scale() / 2.0f),
+                           static_cast<float>(Display::get_height()) / 2.0f - (background.get_height() * background.get_scale() / 2.0f)));
 }
 
 void

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -86,7 +86,7 @@
       if (fade_state == FadingOn) 
         {
           unsigned int ticks = SDL_GetTicks();
-          float time = static_cast<float>(ticks - fade_start_ticks) / 1000.0;
+          float time = static_cast<float>(ticks - fade_start_ticks) / 1000.0f;
           if (time >= fade_time)
             {
               set_gain(1.0);
@@ -100,7 +100,7 @@
       else if (fade_state == FadingOff) 
         {
           unsigned int ticks = SDL_GetTicks();
-          float time = (ticks - fade_start_ticks) / 1000.0;
+          float time = (ticks - fade_start_ticks) / 1000.0f;
 
           if (time >= fade_time) 
             {

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -211,13 +211,18 @@
 static float find_max(float pos, float v)
 {
   if (v == 0) 
+  {
     return 0;
+  }
   else if (v < 0)
-    return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
+  {
+    return fmodf(fmodf(pos, static_cast<float>(TILE_SIZE)) + static_cast<float>(TILE_SIZE), static_cast<float>(TILE_SIZE)) / fabsf(v);
+  }
   else // if (v > 0)
-    {
-      return fmodf(fmodf(-pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
-    }
+  {
+    return fmodf(fmodf(-pos, static_cast<float>(TILE_SIZE) + static_cast<float>(TILE_SIZE)),
+                 static_cast<float>(TILE_SIZE)) / v;
+  }
 }
 
 Vector2f
@@ -239,8 +244,8 @@
   float tMaxX = find_max(pos.x, direction.x);
   float tMaxY = find_max(pos.y, direction.y);
 
-  float tDeltaX = (direction.x == 0) ? 0 : fabsf(TILE_SIZE / direction.x);
-  float tDeltaY = (direction.y == 0) ? 0 : fabsf(TILE_SIZE / direction.y);
+  float tDeltaX = (direction.x == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.x);
+  float tDeltaY = (direction.y == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.y);
 
   float t = 0;
 

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 02:13:36 UTC (rev 3032)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 02:43:41 UTC (rev 3033)
@@ -95,10 +95,10 @@
   
   assert_gl("updating tilepacker texture");
 
-  Rectf rect(Vector2f(static_cast<float>(impl->x_pos + 1) / impl->width, 
-                      static_cast<float>(impl->y_pos + 1) / impl->height), 
-             Sizef(static_cast<float>(TILE_RESOLUTION) / impl->width, 
-                   static_cast<float>(TILE_RESOLUTION) / impl->height));
+  Rectf rect(Vector2f(static_cast<float>(impl->x_pos + 1) / static_cast<float>(impl->width), 
+                      static_cast<float>(impl->y_pos + 1) / static_cast<float>(impl->height)), 
+             Sizef(static_cast<float>(TILE_RESOLUTION) / static_cast<float>(impl->width), 
+                   static_cast<float>(TILE_RESOLUTION) / static_cast<float>(impl->height)));
 
   // we move by TILE_RESOLUTION+1 to avoid tiles bleeding into each other
   // when blending



From grumbel at mail.berlios.de  Mon Aug 24 04:50:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 04:50:48 +0200
Subject: [Windstille-commit] r3034 - in trunk/windstille/src: objects sound
Message-ID: <200908240250.n7O2omJV012137@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 04:50:48 +0200 (Mon, 24 Aug 2009)
New Revision: 3034

Modified:
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
Log:
Cleaned up a bunch of float/int/double conversion warnings

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-24 02:43:41 UTC (rev 3033)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-24 02:50:48 UTC (rev 3034)
@@ -44,8 +44,8 @@
   
   for(std::vector<float>::size_type i = 2; i < heightfield1->size()-2; ++i)
     {
-      (*heightfield1)[i] = sinf(i/static_cast<float>(heightfield1->size()) * 10.0f) * 0.5f
-        + sinf(i / static_cast<float>(heightfield1->size()) * 5.0f) * .5f;
+      (*heightfield1)[i] = sinf(static_cast<float>(i) / static_cast<float>(heightfield1->size()) * 10.0f) * 0.5f
+        + sinf(static_cast<float>(i) / static_cast<float>(heightfield1->size()) * 5.0f) * .5f;
       (*heightfield2)[i] = (*heightfield1)[i];
     }
 
@@ -81,14 +81,14 @@
           }
 
         array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
-        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
+        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
+                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
+        array->vertex(static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
 
         array->color(Color(c, c, 1.0f, 1.0f));
-        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i]) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i]);
+        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
+                        (-32.0f * (*heightfield1)[i]) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
+        array->vertex(static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i]);
       }
 
     sc.color().draw(array);
@@ -103,14 +103,14 @@
     for(std::vector<float>::size_type i = 0; i < heightfield1->size(); ++i)
       {
         array->color(Color(0.0f, 0.0f, 0.5f, 0.7f));
-        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f)*0.2f,
-                        (64.0f) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f/static_cast<float>(SAMPLES), 64.0f);
+        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
+                        (64.0f) * texscale + sinf(t+static_cast<float>(i)/10.0f)*0.2f);
+        array->vertex(static_cast<float>(i) * 32.0f/static_cast<float>(SAMPLES), 64.0f);
 
         array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
-        array->texcoord((i * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + i/10.0f) * 0.2f,
-                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t+i/10.0f)*0.2f);
-        array->vertex(i * 32.0f/static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
+        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f) * 0.2f,
+                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
+        array->vertex(static_cast<float>(i) * 32.0f/static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
       }
 
     sc.color().draw(array);

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-24 02:43:41 UTC (rev 3033)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-24 02:50:48 UTC (rev 3034)
@@ -116,8 +116,8 @@
                                      float(Display::get_height()) / nightvision.get_height()));
 
       sc.highlight().draw(nightvision, 
-                          Vector2f(Display::get_width() /2  - (nightvision.get_width()  * nightvision.get_scale()/2),
-                                   Display::get_height()/2  - (nightvision.get_height() * nightvision.get_scale()/2)),
+                          Vector2f(static_cast<float>(Display::get_width()) / 2.0f - (nightvision.get_width()  * nightvision.get_scale() / 2.0f),
+                                   static_cast<float>(Display::get_height())/ 2.0f - (nightvision.get_height() * nightvision.get_scale() / 2.0f)),
                           10000);
       sc.highlight().pop_modelview();
     }

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 02:43:41 UTC (rev 3033)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 02:50:48 UTC (rev 3034)
@@ -100,7 +100,7 @@
       else if (fade_state == FadingOff) 
         {
           unsigned int ticks = SDL_GetTicks();
-          float time = (ticks - fade_start_ticks) / 1000.0f;
+          float time = static_cast<float>(ticks - fade_start_ticks) / 1000.0f;
 
           if (time >= fade_time) 
             {



From grumbel at mail.berlios.de  Mon Aug 24 13:59:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 13:59:10 +0200
Subject: [Windstille-commit] r3035 - in trunk/windstille/src: collision
	engine gui hud input objects physfs
Message-ID: <200908241159.n7OBxAUG024503@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 13:59:04 +0200 (Mon, 24 Aug 2009)
New Revision: 3035

Modified:
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/gui/grid_component.cpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/slider.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/objects/bomb.cpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/physfs/physfs_sdl.cpp
Log:
Cleaned up a bunch of float/int/double conversion warnings (should be all for the windstille part, editor still to come)

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -165,14 +165,14 @@
 
 Rectf get_next_free_rect(TileMap *tilemap, const Rectf &r)
 {
-  int rx = c_round (r.left / TILE_SIZE);
-  int ry = c_round (std::min (r.top, r.bottom)  / TILE_SIZE);
+  int rx = c_round(r.left / static_cast<float>(TILE_SIZE));
+  int ry = c_round(std::min (r.top, r.bottom)  / static_cast<float>(TILE_SIZE));
   
   float fw = r.right - r.left;
   float fh = fabsf(r.bottom   - r.top);
   
-  int rw = c_roundup (fw / TILE_SIZE);
-  int rh = c_roundup (fh / TILE_SIZE);
+  int rw = c_roundup (fw / static_cast<float>(TILE_SIZE));
+  int rh = c_roundup (fh / static_cast<float>(TILE_SIZE));
 
   std::vector<Rectf> rects;
 
@@ -203,8 +203,8 @@
   Rectf nr;
   for (std::vector<Rectf>::iterator i = rects.begin(); i != rects.end(); ++i)
     {
-      dx = i->left - r.left / TILE_SIZE;
-      dy = i->top  - r.top  / TILE_SIZE;
+      dx = i->left - r.left / static_cast<float>(TILE_SIZE);
+      dy = i->top  - r.top  / static_cast<float>(TILE_SIZE);
       d = sqrtf( dx * dx + dy * dy );
       if (d < distance)
 	{
@@ -232,8 +232,8 @@
 
   Rectf target = get_next_free_rect(a.tilemap, rb);
   
-  target.left   *= TILE_SIZE;
-  target.top    *= TILE_SIZE;
+  target.left   *= static_cast<float>(TILE_SIZE);
+  target.top    *= static_cast<float>(TILE_SIZE);
   target.right  = target.left + (rb.right - rb.left);
   target.bottom = target.top  + (rb.top - rb.bottom);
 
@@ -241,13 +241,13 @@
 
   if(target.top < rb.top)
     {
-      float add = c_roundup (target.bottom / TILE_SIZE) * TILE_SIZE - target.bottom;
+      float add = static_cast<float>(c_roundup(target.bottom / static_cast<float>(TILE_SIZE))) * static_cast<float>(TILE_SIZE) - target.bottom;
       target.top    += add;
       target.bottom += add;
     }
   if(target.left < rb.left)
     {
-      float add = c_roundup (target.right / TILE_SIZE) * TILE_SIZE - target.right;
+      float add = static_cast<float>(c_roundup(target.right / static_cast<float>(TILE_SIZE))) * static_cast<float>(TILE_SIZE) - target.right;
       target.left  += add;
       target.right += add;
     }
@@ -530,10 +530,10 @@
   int miny, maxy;
   int x, y;
 
-  minx = static_cast<int>(r.left   / TILE_SIZE);
-  maxx = static_cast<int>(r.right  / TILE_SIZE);
-  miny = static_cast<int>(r.top    / TILE_SIZE);
-  maxy = static_cast<int>(r.bottom / TILE_SIZE);
+  minx = static_cast<int>(r.left   / static_cast<float>(TILE_SIZE));
+  maxx = static_cast<int>(r.right  / static_cast<float>(TILE_SIZE));
+  miny = static_cast<int>(r.top    / static_cast<float>(TILE_SIZE));
+  maxy = static_cast<int>(r.bottom / static_cast<float>(TILE_SIZE));
 
   assert(maxy>=miny);
   assert(maxx>=minx);
@@ -541,7 +541,7 @@
   for (y = std::max (0, miny); y <= std::min (maxy, tilemap->get_height() - 1); ++y)
     for (x = std::max (0, minx); x <= std::min (maxx, tilemap->get_width() - 1); ++x)
       {
-	if(tilemap->is_ground (x * TILE_SIZE, y * TILE_SIZE ))
+	if(tilemap->is_ground (static_cast<float>(x * TILE_SIZE), static_cast<float>(y * TILE_SIZE) ))
 	  {
 	    return true;
 	  }
@@ -556,17 +556,20 @@
   int miny, maxy;
   int x, y;
 
-  minx = static_cast<int>(r.left   / TILE_SIZE);
-  maxx = static_cast<int>(r.right  / TILE_SIZE);
-  miny = static_cast<int>(r.top    / TILE_SIZE);
-  maxy = static_cast<int>(r.bottom / TILE_SIZE);
+  minx = static_cast<int>(r.left   / static_cast<float>(TILE_SIZE));
+  maxx = static_cast<int>(r.right  / static_cast<float>(TILE_SIZE));
+  miny = static_cast<int>(r.top    / static_cast<float>(TILE_SIZE));
+  maxy = static_cast<int>(r.bottom / static_cast<float>(TILE_SIZE));
 
   for (y = std::max (0, miny); y <= std::min (maxy, tilemap->get_height() - 1); ++y)
     for (x = std::max (0, minx); x <= std::min (maxx, tilemap->get_width() - 1); ++x)
       {
-	if(tilemap->is_ground (x * TILE_SIZE, y * TILE_SIZE ) == is_ground)
+	if(tilemap->is_ground (static_cast<float>(x * TILE_SIZE), static_cast<float>(y * TILE_SIZE) ) == is_ground)
 	  {
-	    rect_list.push_back (Rectf (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE));
+	    rect_list.push_back (Rectf (static_cast<float>(x * TILE_SIZE), 
+                                        static_cast<float>(y * TILE_SIZE), 
+                                        static_cast<float>(TILE_SIZE), 
+                                        static_cast<float>(TILE_SIZE)));
 	  }
       }
   return rect_list;
@@ -640,27 +643,27 @@
 
       if(first_time)
 	{
-	  next_x = get_integer(*x / TILE_SIZE,vel.x) * TILE_SIZE;
-	  next_y = get_integer(*y / TILE_SIZE,vel.y) * TILE_SIZE;
+	  next_x = get_integer(static_cast<float>(*x) / static_cast<float>(TILE_SIZE), vel.x) * TILE_SIZE;
+	  next_y = get_integer(static_cast<float>(*y) / static_cast<float>(TILE_SIZE), vel.y) * TILE_SIZE;
 	  first_time = false;
 	}
       else
 	{
-	  next_x = get_next_integer ((*x / TILE_SIZE), vel.x) * TILE_SIZE;
-	  next_y = get_next_integer ((*y / TILE_SIZE), vel.y) * TILE_SIZE;
+	  next_x = get_next_integer ((static_cast<float>(*x) / static_cast<float>(TILE_SIZE)), vel.x) * TILE_SIZE;
+          next_y = get_next_integer ((static_cast<float>(*y) / static_cast<float>(TILE_SIZE)), vel.y) * TILE_SIZE;
 
 	 
-	  assert ( next_x * c_sign(vel.x) > *x * c_sign(vel.x) || vel.x == 0.0f);
-	  assert ( next_y * c_sign(vel.y) > *y * c_sign(vel.y) || vel.y == 0.0f);
+	  assert ( static_cast<float>(next_x) * static_cast<float>(c_sign(vel.x)) > *x * static_cast<float>(c_sign(vel.x)) || vel.x == 0.0f);
+          assert ( static_cast<float>(next_y) * static_cast<float>(c_sign(vel.y)) > *y * static_cast<float>(c_sign(vel.y)) || vel.y == 0.0f);
 	}
 
       if (vel.x != 0.0f)
-	tx = (next_x - *x) / vel.x;
+	tx = (static_cast<float>(next_x) - *x) / vel.x;
       else
 	tx = 10000.0f;
 
       if (vel.y != 0.0f)
-	ty = (next_y - *y) / vel.y;
+	ty = (static_cast<float>(next_y) - *y) / vel.y;
       else
 	ty = 10000.0f;
 
@@ -704,13 +707,13 @@
 	  
 	  if (tx < ty)
 	    {
-	      tmp.left  += c_sign(vel.x);
-	      tmp.right += c_sign(vel.x);
+	      tmp.left  += static_cast<float>(c_sign(vel.x));
+              tmp.right += static_cast<float>(c_sign(vel.x));
 	    }
 	  else
 	    {
-	      tmp.top    += c_sign(vel.y);
-	      tmp.bottom += c_sign(vel.y);
+	      tmp.top    += static_cast<float>(c_sign(vel.y));
+	      tmp.bottom += static_cast<float>(c_sign(vel.y));
 	    }
 
 	  // check collision with tilemap
@@ -721,9 +724,9 @@
 	      result.col_time = time;
 	      
 	      if (tx < ty)
-		result.direction=Vector2f(c_sign (vel.x), 0);
+		result.direction = Vector2f(static_cast<float>(c_sign(vel.x)), 0.0f);
 	      else
-		result.direction=Vector2f(0, c_sign (vel.y));
+		result.direction = Vector2f(0, static_cast<float>(c_sign(vel.y)));
 	      return result;
 	    }
 	}

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -78,8 +78,8 @@
 
     case CAMERA_FOLLOW_PLAYER:
       {
-        int hscroll_threshold = 100;
-        int vscroll_threshold = 150;
+        float hscroll_threshold = 100.0f;
+        float vscroll_threshold  = 150.0f;
 
         Vector2f tpos = Player::current()->get_pos();
 
@@ -95,11 +95,11 @@
         else if (dist < -vscroll_threshold)
           pos.y = tpos.y + vscroll_threshold;
 
-        float start_x = Display::get_width()/2;
-        float end_x   = Sector::current()->get_width() - Display::get_width()/2;
+        float start_x = static_cast<float>(Display::get_width()) / 2.0f;
+        float end_x   = static_cast<float>(Sector::current()->get_width()) - static_cast<float>(Display::get_width()) / 2.0f;
 
-        float start_y = Display::get_height()/2;
-        float end_y   = Sector::current()->get_height() - Display::get_height()/2;
+        float start_y = static_cast<float>(Display::get_height()) / 2.0f;
+        float end_y   = static_cast<float>(Sector::current()->get_height()) - static_cast<float>(Display::get_height()) / 2.0f;
 
         if (pos.x < start_x)
           pos.x = start_x;

Modified: trunk/windstille/src/gui/grid_component.cpp
===================================================================
--- trunk/windstille/src/gui/grid_component.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/grid_component.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -226,10 +226,10 @@
       grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
     }
 
-    component->set_screen_rect(Rectf(Vector2f(rect.left + x * (rect.get_width() /grid.get_width())  + padding,
-                                              rect.top  + y * (rect.get_height()/grid.get_height()) + padding),
-                                     Sizef((rect.get_width()/grid.get_width())   * colspan - 2*padding,
-                                           (rect.get_height()/grid.get_height()) * rowspan - 2*padding)));
+    component->set_screen_rect(Rectf(Vector2f(rect.left + static_cast<float>(x) * (rect.get_width()  / static_cast<float>(grid.get_width()))  + padding,
+                                              rect.top  + static_cast<float>(y) * (rect.get_height() / static_cast<float>(grid.get_height())) + padding),
+                                     Sizef((rect.get_width()  / static_cast<float>(grid.get_width()))  * static_cast<float>(colspan) - 2.0f * padding,
+                                           (rect.get_height() / static_cast<float>(grid.get_height())) * static_cast<float>(rowspan) - 2.0f * padding)));
   }
 }
 

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -45,11 +45,12 @@
   if (!title.empty())
     {
       TTFFont* font = Fonts::current()->vera20.get();
-      font->draw_center(Vector2f(rect.left + rect.get_width()/2, rect.top + font->get_height() + 5), 
+      font->draw_center(Vector2f(rect.left + static_cast<float>(rect.get_width()) / 2.0f,
+                                 rect.top  + static_cast<float>(font->get_height()) + 5.0f),
                         title, Color(1.0f, 1.0f, 1.0f));
 
-      Display::fill_rect(Rectf(rect.left  + 8, rect.top + font->get_height() + 16,
-                               rect.right - 8, rect.top + font->get_height() + 18),
+      Display::fill_rect(Rectf(rect.left  + 8.0f, rect.top + static_cast<float>(font->get_height()) + 16.0f,
+                               rect.right - 8.0f, rect.top + static_cast<float>(font->get_height()) + 18.0f),
                          Color(1.0f, 1.0f, 1.0f, 0.5f));
     }
 
@@ -77,10 +78,10 @@
 Rectf
 GroupComponent::get_child_rect() const
 {
-  int padding = 6;
+  float padding = 6.0f;
 
   return Rectf(rect.left   + padding,
-               rect.top    + padding + (title.empty() ? 0 : Fonts::current()->vera20->get_height() + 18),
+               rect.top    + padding + (title.empty() ? 0.0f : static_cast<float>(Fonts::current()->vera20->get_height()) + 18.0f),
                rect.right  - padding,
                rect.bottom - padding);
 }

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/menu.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -103,7 +103,7 @@
                     (rect.top + rect.bottom) / 2.0f);
 
     Sizef size(menu->get_prefered_width(), 
-               menu->get_prefered_height() + (group->has_title() ? Fonts::current()->vera20->get_height() + 18 : 0.0f));
+               menu->get_prefered_height() + (group->has_title() ? static_cast<float>(Fonts::current()->vera20->get_height()) + 18.0f : 0.0f));
 
     group->set_screen_rect(Rectf(Vector2f(center.x - size.width/2.0f,
                                           center.y - size.height/2.0f),

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -69,14 +69,14 @@
     { // we can only display a subset of items and have to scroll
       for(int i = 0; i < num_displayable_items; ++i)
         {
-          items[i+scroll_offset]->draw(Rectf(rect.left, rect.top + i * step + 2.0f, 
-                                             rect.right - 32, rect.top + (i+1) * step - 2.0f), 
+          items[i+scroll_offset]->draw(Rectf(rect.left, rect.top + static_cast<float>(i) * step + 2.0f, 
+                                             rect.right - 32.0f, rect.top + static_cast<float>(i+1) * step - 2.0f), 
                                        is_active() && (int(i+scroll_offset) == current_item));
         }
       
       // draw scrollbar
-      float scrollbar_height = (rect.get_height()-4.0f) * num_displayable_items / items.size();
-      float scrollbar_incr   = (rect.get_height()-4.0f) * scroll_offset / items.size();
+      float scrollbar_height = (rect.get_height() - 4.0f) * static_cast<float>(num_displayable_items) / static_cast<float>(items.size());
+      float scrollbar_incr   = (rect.get_height() - 4.0f) * static_cast<float>(scroll_offset) / static_cast<float>(items.size());
 
       Display::fill_rounded_rect(Rectf(rect.right - 24, rect.top + 2.0f + scrollbar_incr,
                                        rect.right - 2,  rect.top + 2.0f + scrollbar_incr + scrollbar_height),
@@ -92,8 +92,8 @@
     { // all items fit on the screen
       for(Items::size_type i = 0; i < items.size(); ++i)
         {
-          items[i]->draw(Rectf(rect.left, rect.top + i * step + 2.0f, 
-                               rect.right, rect.top + (i+1) * step - 2.0f), 
+          items[i]->draw(Rectf(rect.left, rect.top + static_cast<float>(i) * step + 2.0f, 
+                               rect.right, rect.top + static_cast<float>(i+1) * step - 2.0f), 
                          is_active() && (int(i) == current_item));
         }
     }
@@ -206,20 +206,20 @@
 float
 MenuComponent::get_prefered_height() const
 {
-  return item_height() * std::min(10, int(items.size())) + 12.0f;
+  return item_height() * static_cast<float>(std::min(10, int(items.size()))) + 12.0f;
 }
 
 float
 MenuComponent::calc_height()
 {
-  return items.size() * item_height();
+  return static_cast<float>(items.size()) * item_height();
 }
 
 float
 MenuComponent::item_height() const
 {
   float spacing = 10.0f;
-  return font->get_height() + spacing*2.0f;
+  return static_cast<float>(font->get_height()) + spacing * 2.0f;
 }
 
 void 

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -61,7 +61,8 @@
     }
   }
 
-  font->draw(Vector2f(rect.left + font->get_height(), rect.top + font->get_height()/2.0f + rect.get_height()/2.0f - 2.0f),
+  font->draw(Vector2f(rect.left + static_cast<float>(font->get_height()),
+                      rect.top + static_cast<float>(font->get_height())/2.0f + rect.get_height() / 2.0f - 2.0f),
              label, font_color);
 }
 
@@ -131,8 +132,8 @@
     font_color = Color(0.75f, 0.75f, 0.75f, 1.0f);
   }
 
-  font->draw(Vector2f(rect.right - font->get_height() - font->get_width(labels[index].label),
-                      rect.top + font->get_height()/2.0f + rect.get_height()/2.0f - 2.0f),
+  font->draw(Vector2f(rect.right - static_cast<float>(font->get_height())      - static_cast<float>(font->get_width(labels[index].label)),
+                      rect.top   + static_cast<float>(font->get_height())/2.0f + static_cast<float>(rect.get_height())/2.0f - 2.0f),
              labels[index].label,
              font_color);
 }
@@ -175,9 +176,9 @@
 SliderMenuItem::draw(const Rectf& rect, bool is_active)
 {
   MenuItem::draw(rect, is_active);
-  int total_width = 200;
-  int width = total_width * value / (max_value - min_value);
-
+  float total_width = 200.0f;
+  float width = total_width * static_cast<float>(value) / static_cast<float>(max_value - min_value);
+  
   Color color;
   if (is_active)
   {
@@ -188,13 +189,13 @@
     color = Color(0.75f, 0.75f, 0.75f, 1.0f);
   }
 
-  Display::fill_rounded_rect(Rectf(Vector2f(rect.right - 4 - total_width, rect.top + 4),
+  Display::fill_rounded_rect(Rectf(Vector2f(rect.right - 4.0f - total_width, rect.top + 4.0f),
                                    Sizef(width, rect.get_height() - 8)), 
                              5.0f,
                              Color(0.75f*color.r, 0.75f*color.g, 0.75f*color.b, color.a));
 
 
-  Display::draw_rounded_rect(Rectf(Vector2f(rect.right - 4 - total_width, rect.top + 4),
+  Display::draw_rounded_rect(Rectf(Vector2f(rect.right - 4.0f - total_width, rect.top + 4.0f),
                                    Sizef(total_width, rect.get_height() - 8)), 
                              5.0f,
                              color);

Modified: trunk/windstille/src/gui/slider.cpp
===================================================================
--- trunk/windstille/src/gui/slider.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/slider.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -68,10 +68,10 @@
   Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
   Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
   
-  int width = 30;
-  Rectf slider_rect(Vector2f(rect.left + (rect.get_width()-width) * ((pos-min)/float(max - min)),
-                             rect.top + 2),
-                    Sizef(width, rect.get_height()-4));
+  float width = 30.0f;
+  Rectf slider_rect(Vector2f(rect.left + (rect.get_width()-width) * (static_cast<float>(pos-min)/static_cast<float>(max - min)),
+                             rect.top + 2.0f),
+                    Sizef(width, rect.get_height() - 4.0f));
   if (is_active())
     {
       Display::fill_rect(slider_rect, Color(1.0f, 1.0f, 1.0f, 0.5f));

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -48,12 +48,12 @@
 {
   if (tabs.empty()) return;
 
-  float tab_width = rect.get_width()/tabs.size();
+  float tab_width = rect.get_width() / static_cast<float>(tabs.size());
   for(int i = 0; i != int(tabs.size()); ++i)
     {
-      Rectf tab_rect(Vector2f(rect.left + tab_width * i + 10,
-                            rect.top),
-                     Sizef(tab_width - 20, Fonts::current()->vera20->get_height() + 6));
+      Rectf tab_rect(Vector2f(rect.left + tab_width * static_cast<float>(i) + 10.0f,
+                              rect.top),
+                     Sizef(tab_width - 20.0f, static_cast<float>(Fonts::current()->vera20->get_height()) + 6.0f));
 
       if (i == current_tab)
         Display::fill_rounded_rect(tab_rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
@@ -62,8 +62,8 @@
 
       Display::draw_rounded_rect(tab_rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
-      Fonts::current()->vera20->draw_center(Vector2f(rect.left + tab_width * i + tab_width/2,
-                                                     rect.top + Fonts::current()->vera20->get_height()),
+      Fonts::current()->vera20->draw_center(Vector2f(rect.left + tab_width * static_cast<float>(i) + tab_width/2,
+                                                     rect.top + static_cast<float>(Fonts::current()->vera20->get_height())),
                                             tabs[i].label,
                                             tabs[current_tab].component->is_active()
                                             ? Color(1.0f, 1.0f, 1.0f, 0.5f) 
@@ -139,9 +139,9 @@
 {
   tabs.push_back(Tab(name, component));
 
-  int padding = 6;
+  float padding = 6.0f;
   component->set_screen_rect(Rectf(rect.left + padding,
-                                   rect.top  + padding + Fonts::current()->vera20->get_height() + 10.0f,
+                                   rect.top  + padding + static_cast<float>(Fonts::current()->vera20->get_height()) + 10.0f,
                                    rect.right  - padding,
                                    rect.bottom - padding
                                    ));

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -65,22 +65,22 @@
   
   Display::fill_circle(pos, 42.0f, Color(0.5f, 0.5f, 0.5f, 0.75f), 24);
 
-  float segment = 360.0f / choices.size();
+  float segment = 360.0f / static_cast<float>(choices.size());
 
   for(int i = 0; i < (int)choices.size(); ++i)
     { // FIXME:
       Vector2f offset(0.0f, 1.0f);
-      offset = offset.rotate(math::deg2rad(segment*i) - math::pi/2);
+      offset = offset.rotate(math::deg2rad(segment * static_cast<float>(i)) - math::pi/2.0f);
 
-      float start = -segment/2 - 90.0f + segment*i;
-      float end   = -segment/2 - 90.0f + segment*(i+1);
+      float start = -segment / 2.0f - 90.0f + segment * static_cast<float>(i);
+      float end   = -segment / 2.0f - 90.0f + segment * static_cast<float>(i+1);
       
       float distance = 160.0f;
 
       Vector2f textpos = pos + Vector2f(0, 16.0f);
       // FIXME: Doesn't handle multi line text
-      Sizef size(Fonts::current()->vera20->get_width(choices[i].topic) + 40.0f,
-                 Fonts::current()->vera20->get_height() + 25.0f);
+      Sizef size(static_cast<float>(Fonts::current()->vera20->get_width(choices[i].topic)) + 40.0f,
+                 static_cast<float>(Fonts::current()->vera20->get_height()) + 25.0f);
       Rectf  rect(textpos + distance * offset - Vector2f(size.width/2, size.height - 15), size);
 
       if (i == selection)
@@ -94,7 +94,7 @@
                                                          textpos.y + distance * offset.y), 
                                                 choices[i].topic, Color(1.0f, 1.0f, 0.0f));
           
-          Fonts::current()->vera20->draw_center(Vector2f(400.0f, Display::get_height() - 32.0f),
+          Fonts::current()->vera20->draw_center(Vector2f(400.0f, static_cast<float>(Display::get_height()) - 32.0f),
                                                 choices[i].text, Color(1.0f, 1.0f, 1.0f));
           Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 0.0f));
         }

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -73,17 +73,17 @@
   if(alignment & LEFT) {
     pos.x = outer_border_x;
   } else if(alignment & RIGHT) {
-    pos.x = Display::get_width() - dialog_width - outer_border_x;
+    pos.x = static_cast<float>(Display::get_width() - dialog_width - outer_border_x);
   } else {
-    pos.x = (Display::get_width() - dialog_width) / 2;
+    pos.x = static_cast<float>((Display::get_width() - dialog_width) / 2);
   }
 
   if(alignment & TOP) {
-    pos.y = outer_border_y;
+    pos.y = static_cast<float>(outer_border_y);
   } else if(alignment & BOTTOM) {
-    pos.y = Display::get_height() - dialog_height - outer_border_y;
+    pos.y = static_cast<float>(Display::get_height() - dialog_height - outer_border_y);
   } else {
-    pos.y = (Display::get_height() - dialog_height) / 2;
+    pos.y = static_cast<float>((Display::get_height() - dialog_height) / 2);
   }
 
   if (!caption) {
@@ -107,7 +107,8 @@
     {
       const Vector2f& pos = text_area->get_cursor_pos();
       Rectf cursor(pos.x + 8, pos.y + 8, pos.x + 24, pos.y + 24);
-      Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, fabsf(sinf(SDL_GetTicks() / 1000.0f * math::pi * 3.0f))));
+      Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, 
+                                       fabsf(sinf(static_cast<float>(SDL_GetTicks()) / 1000.0f * math::pi * 3.0f))));
     }
 }
 

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -109,7 +109,7 @@
   for(int i = 0; i < int(items.size()); ++i)
     {
       const InventoryItem& item = items[(i+current_item) % items.size()];
-      Vector2f draw_pos = pos + Vector2f(128.0f, 0.0f).rotate(step_angle * i - math::pi/2.0f + add_angle);
+      Vector2f draw_pos = pos + Vector2f(128.0f, 0.0f).rotate(step_angle * static_cast<float>(i) - math::pi/2.0f + add_angle);
 
       if (i == 0 && moving == 0)
         {

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -183,13 +183,13 @@
 {
   assert(num >= 1 && num <= 4);
   
-  unsigned char new_led_state = m_led_state;
+  unsigned int new_led_state = m_led_state;
   if (state)
-    new_led_state |= (1 << (num-1));
+    new_led_state |= (1u << (num-1));
   else // (!state)
-    new_led_state &= ~(1 << (num-1));
+    new_led_state &= ~(1u << (num-1));
 
-  set_led(new_led_state);
+  set_led(static_cast<unsigned char>(new_led_state));
 }
 
 void
@@ -295,7 +295,7 @@
 {
 #define CHECK_BTN(btn, num) if (changes & btn) add_button_event(0, num, m_buttons & btn)
 
-  uint16_t changes = m_buttons ^ msg.buttons;
+  uint16_t changes = static_cast<uint16_t>(m_buttons ^ msg.buttons);
   m_buttons = msg.buttons;
  
   CHECK_BTN(CWIID_BTN_A, 0);
@@ -320,9 +320,9 @@
   //printf("Acc Report: x=%d, y=%d, z=%d\n", msg.acc[0], msg.acc[1], msg.acc[2]);
 
   add_acc_event(0, 0, 
-                (msg.acc[0] - wiimote_zero.x) / static_cast<float>(wiimote_one.x - wiimote_zero.x),
-                (msg.acc[1] - wiimote_zero.y) / static_cast<float>(wiimote_one.y - wiimote_zero.y),
-                (msg.acc[2] - wiimote_zero.z) / static_cast<float>(wiimote_one.z - wiimote_zero.z));
+                static_cast<float>(msg.acc[0] - wiimote_zero.x) / static_cast<float>(wiimote_one.x - wiimote_zero.x),
+                static_cast<float>(msg.acc[1] - wiimote_zero.y) / static_cast<float>(wiimote_one.y - wiimote_zero.y),
+                static_cast<float>(msg.acc[2] - wiimote_zero.z) / static_cast<float>(wiimote_one.z - wiimote_zero.z));
 }
 
 void
@@ -345,11 +345,11 @@
 {
   if (value < center)
     {
-      return math::mid(-1.0f, -(center - value) / float(center - min), 1.0f);
+      return math::mid(-1.0f, -static_cast<float>(center - value) / static_cast<float>(center - min), 1.0f);
     }
   else if (value > center)
     {
-      return math::mid(-1.0f, (value - center) / float(max - center), 1.0f);
+      return math::mid(-1.0f, static_cast<float>(value - center) / static_cast<float>(max - center), 1.0f);
     }
   else 
     {
@@ -360,7 +360,7 @@
 void
 Wiimote::on_nunchuck(const cwiid_nunchuk_mesg& msg)
 {
-  uint8_t changes = m_nunchuk_btns ^ msg.buttons;
+  uint8_t changes = static_cast<uint8_t>(m_nunchuk_btns ^ msg.buttons);
   m_nunchuk_btns  = msg.buttons;
 
 #define CHECK_NCK_BTN(btn, num) if (changes & btn) add_button_event(0, num, m_nunchuk_btns & btn)
@@ -386,9 +386,9 @@
     }
 
   add_acc_event(0, 1, 
-                (msg.acc[0] - nunchuk_zero.x) / float(nunchuk_one.x - nunchuk_zero.x),
-                (msg.acc[1] - nunchuk_zero.y) / float(nunchuk_one.y - nunchuk_zero.y),
-                (msg.acc[2] - nunchuk_zero.z) / float(nunchuk_one.z - nunchuk_zero.z));
+                static_cast<float>(msg.acc[0] - nunchuk_zero.x) / static_cast<float>(nunchuk_one.x - nunchuk_zero.x),
+                static_cast<float>(msg.acc[1] - nunchuk_zero.y) / static_cast<float>(nunchuk_one.y - nunchuk_zero.y),
+                static_cast<float>(msg.acc[2] - nunchuk_zero.z) / static_cast<float>(nunchuk_one.z - nunchuk_zero.z));
   if (0)
     printf("Nunchuk Report: btns=%.2X stick=(%3d,%3d) (%5.2f, %5.2f) acc.x=%d acc.y=%d acc.z=%d\n", 
            msg.buttons,

Modified: trunk/windstille/src/objects/bomb.cpp
===================================================================
--- trunk/windstille/src/objects/bomb.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/objects/bomb.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -26,7 +26,7 @@
     light(Pathname("images/bomblight.sprite")),
     highlight(Pathname("images/bombhighlight.sprite")),
     explolight(Pathname("images/explolight.sprite")),
-    pos(x, static_cast<float>(int(y/TILE_SIZE+1)*TILE_SIZE)),
+    pos(static_cast<float>(x), static_cast<float>((y / TILE_SIZE + 1) * TILE_SIZE)),
     count(2.0f),
     state(COUNTDOWN),
     exploded(false)

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <math.h>
+
 #include "app/globals.hpp"
 #include "player.hpp"
 #include "engine/sector.hpp"
@@ -78,15 +80,15 @@
       if (on_ground())
         {
           was_on_ground = true;
-          if (velocity.y > 0)
+          if (velocity.y > 0.0f)
             {
-              velocity.y = 0;
-              pos.y = int(pos.y / TILE_SIZE) * TILE_SIZE + TILE_SIZE - 1;
+              velocity.y = 0.0f;
+              pos.y = truncf(pos.y / static_cast<float>(TILE_SIZE)) * static_cast<float>(TILE_SIZE) + static_cast<float>(TILE_SIZE) - 1.0f;
             }
           if (direction_left)
-            velocity.x = -32;
+            velocity.x = -32.0f;
           else
-            velocity.x = 32;
+            velocity.x = 32.0f;
         }
       else
         {

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -53,11 +53,11 @@
     }
   else if (v < 0)
     {
-      return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
+      return fmodf(fmodf(pos, static_cast<float>(TILE_SIZE)) + static_cast<float>(TILE_SIZE), static_cast<float>(TILE_SIZE))/fabsf(v);
     }
   else // if (v > 0)
     {
-      return fmodf(fmodf(-pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
+      return fmodf(fmodf(-pos, static_cast<float>(TILE_SIZE)) + static_cast<float>(TILE_SIZE), static_cast<float>(TILE_SIZE))/v;
     }
 }
 
@@ -70,8 +70,8 @@
   Vector2f target; // = Sector::current()->get_collision_engine()->raycast(pos, angle);
 
   // Ray position in Tile units
-  int x = static_cast<int>(pos.x / TILE_SIZE);
-  int y = static_cast<int>(pos.y / TILE_SIZE);
+  int x = static_cast<int>(pos.x / static_cast<float>(TILE_SIZE));
+  int y = static_cast<int>(pos.y / static_cast<float>(TILE_SIZE));
 
   Vector2f direction(cosf(angle) * 100.0f, sinf(angle) * 100.0f);
 
@@ -81,8 +81,8 @@
   float tMaxX = find_max(pos.x, direction.x);
   float tMaxY = find_max(pos.y, direction.y);
 
-  float tDeltaX = (direction.x == 0) ? 0 : fabsf(TILE_SIZE / direction.x);
-  float tDeltaY = (direction.y == 0) ? 0 : fabsf(TILE_SIZE / direction.y);
+  float tDeltaX = (direction.x == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.x);
+  float tDeltaY = (direction.y == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.y);
 
   float t = 0;
 

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -94,11 +94,11 @@
       {
         float angel = 2.0f * math::pi / static_cast<float>(segments);
 
-        float x1 =  sinf(angel*i)*radius;
-        float y1 = -cosf(angel*i)*radius;
+        float x1 =  sinf(angel*static_cast<float>(i))*radius;
+        float y1 = -cosf(angel*static_cast<float>(i))*radius;
 
-        float x2 =  sinf(angel*(i+1))*radius;
-        float y2 = -cosf(angel*(i+1))*radius;
+        float x2 =  sinf(angel*(static_cast<float>(i)+1))*radius;
+        float y2 = -cosf(angel*(static_cast<float>(i)+1))*radius;
 
         glTexCoord2f(x1+256, (y1+256));
         glVertex3f(x1+256, y1+256, 0);
@@ -107,11 +107,11 @@
         glVertex3f(x2+256, y2+256, 0);
 
 
-        float x3 =  sinf(angel*i)*minradius;
-        float y3 = -cosf(angel*i)*minradius;
+        float x3 =  sinf(angel*static_cast<float>(i))*minradius;
+        float y3 = -cosf(angel*static_cast<float>(i))*minradius;
 
-        float x4 =  sinf(angel*(i+1))*minradius;
-        float y4 = -cosf(angel*(i+1))*minradius;
+        float x4 =  sinf(angel*(static_cast<float>(i)+1))*minradius;
+        float y4 = -cosf(angel*(static_cast<float>(i)+1))*minradius;
 
         glTexCoord2f(x4+256, (y4+256));
         glVertex3f(x4+256, y4+256, 0);
@@ -177,8 +177,8 @@
 
   void draw_disc(int count)
   {
-    float radius = (count)*2.0f;
-    float minradius = 2.0f*count - 164.0f;
+    float radius = static_cast<float>(count)*2.0f;
+    float minradius = 2.0f * static_cast<float>(count) - 164.0f;
     if (minradius < 0)
       minradius = 0;
 
@@ -189,11 +189,11 @@
       {
         float angel = 2.0f * math::pi / static_cast<float>(segments);
 
-        float x1 =  sinf(angel*i)*radius;
-        float y1 = -cosf(angel*i)*radius;
+        float x1 =  sinf(angel*static_cast<float>(i))*radius;
+        float y1 = -cosf(angel*static_cast<float>(i))*radius;
 
-        float x2 =  sinf(angel*(i+1))*radius;
-        float y2 = -cosf(angel*(i+1))*radius;
+        float x2 =  sinf(angel*(static_cast<float>(i)+1))*radius;
+        float y2 = -cosf(angel*(static_cast<float>(i)+1))*radius;
 
         glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
         glTexCoord2f(x1/512.0f+0.5f, y1/512.0f+0.5f);
@@ -203,11 +203,11 @@
         glVertex3f(x2+256, y2+256, 0);
 
 
-        float x3 =  sinf(angel*i)*minradius;
-        float y3 = -cosf(angel*i)*minradius;
+        float x3 =  sinf(angel*static_cast<float>(i))*minradius;
+        float y3 = -cosf(angel*static_cast<float>(i))*minradius;
 
-        float x4 =  sinf(angel*(i+1))*minradius;
-        float y4 = -cosf(angel*(i+1))*minradius;
+        float x4 =  sinf(angel*(static_cast<float>(i)+1))*minradius;
+        float y4 = -cosf(angel*(static_cast<float>(i)+1))*minradius;
 
         glColor4f(1.0f, 1.0f, 1.0f, 0.0f);
         glTexCoord2f(x4/512.0f+0.5f, y4/512.0f+0.5f);

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -58,7 +58,7 @@
     if (on_ground()) {
       if (velocity.y > 0) {
         velocity.y = 0;
-        pos.y = int(pos.y / static_cast<float>(TILE_SIZE)) * static_cast<float>(TILE_SIZE) + static_cast<float>(TILE_SIZE) - 1.0f;
+        pos.y = truncf(pos.y / static_cast<float>(TILE_SIZE)) * static_cast<float>(TILE_SIZE) + static_cast<float>(TILE_SIZE) - 1.0f;
       }
 
     } else {

Modified: trunk/windstille/src/physfs/physfs_sdl.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-24 02:50:48 UTC (rev 3034)
+++ trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-24 11:59:04 UTC (rev 3035)
@@ -57,7 +57,7 @@
 {
     PHYSFS_file* file = (PHYSFS_file*) context->hidden.unknown.data1;
 
-    int res = static_cast<PHYSFS_sint64>(PHYSFS_read(file, ptr, size, maxnum));
+    int res = static_cast<int>(PHYSFS_read(file, ptr, size, maxnum));
     return res;
 }
 



From grumbel at mail.berlios.de  Mon Aug 24 14:27:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 14:27:34 +0200
Subject: [Windstille-commit] r3036 - trunk/windstille/src/editor
Message-ID: <200908241227.n7OCRY6F032199@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 14:27:31 +0200 (Mon, 24 Aug 2009)
New Revision: 3036

Modified:
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_rotate_control_point.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/group_command.hpp
   trunk/windstille/src/editor/layer.cpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/navgraph_insert_tool.cpp
   trunk/windstille/src/editor/navgraph_select_tool.cpp
   trunk/windstille/src/editor/node_selection.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/particle_system_object_model.cpp
   trunk/windstille/src/editor/scroll_tool.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_mask.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/zoom_tool.cpp
Log:
Fixed remaining compiler warnings, whole Windstille should now be -Weffc++ clean

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -37,6 +37,10 @@
 
 DecalObjectModel::DecalObjectModel(const FileReader& reader)
   : ObjectModel(reader),
+    path(),
+    surface(),
+    software_surface(),
+    type(),
     scale(1.0f, 1.0f),
     angle(0.0f),
     hflip(false),

Modified: trunk/windstille/src/editor/decal_rotate_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -49,7 +49,7 @@
   if (event->state & GDK_CONTROL_MASK)
     {
       float steps = 16.0f;
-      new_angle = roundf((new_angle / (2*M_PI)) * steps) / steps * 2*M_PI;
+      new_angle = roundf((new_angle / (2.0f * math::pi)) * steps) / steps * 2.0f * math::pi;
     }
 
   object->set_angle(new_angle);

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -16,6 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+// /usr/include/gtkmm-2.4/gtkmm/recentmanager.h causes warning, so we have to disable -Weffc++
+#pragma GCC diagnostic ignored "-Weffc++"
+
 #include <fstream>
 #include <iostream>
 #include <gdkmm/pixbuf.h>
@@ -46,17 +49,41 @@
 #include "editor_window.hpp"
 
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
-  : ui_manager(Gtk::UIManager::create()),
+  : vbox(),
+    sidebar_vbox(),
+    hbox(),
+    hpaned(),
+    vpaned(),
+    status(),
+    ui_manager(Gtk::UIManager::create()),
     action_group(Gtk::ActionGroup::create()),
+    share_list(),
     glconfig(glconfig_),
+    notebook(),
     object_selector(*this),
     layer_manager(*this),
     minimap_widget(glconfig_),
+    select_tool_action(),
+    navgraph_insert_tool_action(),
+    navgraph_select_tool_action(),
+    zoom_tool_action(),
+    toggle_color_layer(),
+    toggle_light_layer(),
+    toggle_highlight_layer(),
+    toggle_control_layer(),
+    background_layer(),
+    visible_layer(),
+    grid_layer(),
+    play_action(),
+    snap_action(),
     select_tool(new SelectTool()),
     navgraph_insert_tool(new NavgraphInsertTool()),
     navgraph_select_tool(new NavgraphSelectTool()),
     zoom_tool(new ZoomTool()),
-    current_tool(select_tool.get())
+    current_tool(select_tool.get()),
+    layer_widget(),
+    timeout_connection(),
+    clipboard()
 {
   set_title("Windstille Editor");
   set_default_size(1280, 800);

Modified: trunk/windstille/src/editor/group_command.hpp
===================================================================
--- trunk/windstille/src/editor/group_command.hpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/group_command.hpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -29,7 +29,7 @@
   Commands cmds;
 
 public:
-  GroupCommand() {}
+  GroupCommand() : cmds() {}
 
   void add(CommandHandle cmd) {
     cmds.push_back(cmd);

Modified: trunk/windstille/src/editor/layer.cpp
===================================================================
--- trunk/windstille/src/editor/layer.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/layer.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -21,7 +21,9 @@
 #include "editor/sector_model.hpp"
 
 Layer::Layer()
-  : visible(true),
+  : objects(),
+    name(),
+    visible(true),
     locked(false)
 {
 }

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -30,7 +30,10 @@
 
 LayerManager::LayerManager(EditorWindow& editor_)
   : editor(editor_),
-    label("Layer Manager", Gtk::ALIGN_LEFT)
+    label("Layer Manager", Gtk::ALIGN_LEFT),
+    scrolled(),
+    treeview(),
+    auto_lock()
 {
   treeview.set_headers_clickable();
   treeview.set_headers_visible(true);

Modified: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -24,7 +24,9 @@
 #include "layer_widget.hpp"
 
 LayerWidget::LayerWidget()
-  : table(2, 9, false)
+  : table(2, 9, false),
+    buttons(),
+    signal_layer_toggle()
 {
   int layer_number = 0;
   for(int y = 0; y < 2; ++y)

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/main.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -26,6 +26,7 @@
 #include <gtkglmm.h>
 #include <physfs.h>
 
+#include "util/system.hpp"
 #include "sprite2d/manager.hpp"
 #include "display/texture_manager.hpp"
 #include "editor_window.hpp"
@@ -36,6 +37,9 @@
 {
   try 
     {
+      Pathname::set_datadir(System::find_default_datadir());
+      Pathname::set_userdir(System::find_default_userdir());
+
       Gtk::Main kit(&argc, &argv);
       Gtk::GL::init(&argc, &argv);
 

Modified: trunk/windstille/src/editor/navgraph_insert_tool.cpp
===================================================================
--- trunk/windstille/src/editor/navgraph_insert_tool.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/navgraph_insert_tool.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -26,14 +26,19 @@
 #include "navgraph_insert_tool.hpp"
 
 NavgraphInsertTool::NavgraphInsertTool()
-  : mode(NO_MODE)
+  : mouse_pos(),
+    mode(NO_MODE),
+    last_node(),
+    connection_node(),
+    mouse_over_node(),
+    mouse_over_edge()
 {
 }
 
 void
 NavgraphInsertTool::mouse_down (GdkEventButton* event, WindstilleWidget& wst)
 {
-  mouse_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  mouse_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
   NavigationGraph& navgraph = *wst.get_sector_model()->get_nav_graph();
 
   NodeHandle node = navgraph.find_closest_node(mouse_pos, 16.0f); // FIXME: Radius should scale with zoom
@@ -87,7 +92,7 @@
 NavgraphInsertTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
   NavigationGraph& navgraph = *wst.get_sector_model()->get_nav_graph();
-  mouse_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  mouse_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
 
   {
     NodeHandle new_mouse_over_node = navgraph.find_closest_node(mouse_pos, 16.0f); // FIXME: Radius should scale with zoom
@@ -118,7 +123,7 @@
 void
 NavgraphInsertTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
-  mouse_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  mouse_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
   //NavigationGraph& navgraph = *wst.get_sector_model()->get_nav_graph();
 
   switch(mode)

Modified: trunk/windstille/src/editor/navgraph_select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/navgraph_select_tool.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/navgraph_select_tool.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -24,6 +24,10 @@
 #include "navgraph_select_tool.hpp"
 
 NavgraphSelectTool::NavgraphSelectTool()
+  : click_pos(),
+    rect(),
+    mode(),
+    selection()
 {
 }
 
@@ -34,7 +38,7 @@
 void
 NavgraphSelectTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
-  click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  click_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
   NavigationGraph& navgraph = *wst.get_sector_model()->get_nav_graph();
 
   NodeHandle node = navgraph.find_closest_node(click_pos, 16.0f); // FIXME: Radius should scale with zoom
@@ -65,7 +69,7 @@
 void
 NavgraphSelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
-  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
 
   switch(mode)
     {
@@ -91,7 +95,7 @@
 void
 NavgraphSelectTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
-  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
   NavigationGraph& navgraph = *wst.get_sector_model()->get_nav_graph();
 
   switch(mode)

Modified: trunk/windstille/src/editor/node_selection.cpp
===================================================================
--- trunk/windstille/src/editor/node_selection.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/node_selection.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -19,6 +19,7 @@
 #include "node_selection.hpp"
 
 NodeSelection::NodeSelection()
+  : nodes()
 {
 }
 

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/object_model.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -27,18 +27,24 @@
 
 ObjectModel::ObjectModel(const std::string& name_, const Vector2f& rel_pos_)
   : name(name_),
-    rel_pos(rel_pos_)
+    rel_pos(rel_pos_),
+    select_mask(),
+    parent_ptr()
 {
 }
 
 ObjectModel::ObjectModel(const FileReader& reader)
+  : name(),
+    rel_pos(),
+    select_mask(),
+    parent_ptr()
 {
   reader.get("name", name);
   reader.get("pos",  rel_pos);
   
   int mask = 1;
   reader.get("select-mask", mask);
-  select_mask = SelectMask(mask);
+  select_mask = SelectMask(static_cast<uint16_t>(mask));
 }
 
 ObjectModel::~ObjectModel()
@@ -191,10 +197,10 @@
   // Reset offset to zero, since it might not be
   SnapData snap;
 
-  float left_dist   = fabs(rect.left - in.right);
-  float right_dist  = fabs(rect.right - in.left);
-  float top_dist    = fabs(rect.top - in.bottom);
-  float bottom_dist = fabs(rect.bottom - in.top);
+  float left_dist   = fabsf(rect.left - in.right);
+  float right_dist  = fabsf(rect.right - in.left);
+  float top_dist    = fabsf(rect.top - in.bottom);
+  float bottom_dist = fabsf(rect.bottom - in.top);
   float x_dist = std::min(left_dist, right_dist);
   float y_dist = std::min(top_dist, bottom_dist);
 

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -47,7 +47,12 @@
 private:
   static ObjectSelector::Columns* instance_;
 
-  Columns() {
+  Columns() 
+    : url(),
+      pathname(),
+      icon(),
+      filter_mask()
+  {
     add(pathname); 
     add(url);
     add(icon);
@@ -60,6 +65,12 @@
 ObjectSelector::ObjectSelector(EditorWindow& editor_)
   : editor(editor_),
     label("Object Selector", Gtk::ALIGN_LEFT),
+    scrolled(),
+    iconview(),
+    list_store(),
+    list_filter(),
+    filter_box(),
+    filter_entries(),
     filter_mask(OBJECT_GROUP_ALL)
 {
 #if 0
@@ -93,9 +104,9 @@
   filter_entries.push_back(ComboBoxEntry("Particle Systems", OBJECT_GROUP_PARTICLESYSTEM));
 
   for(std::vector<ComboBoxEntry>::const_iterator i = filter_entries.begin(); i != filter_entries.end(); ++i)
-    {
-      filter_box.append_text(i->name);
-    }
+  {
+    filter_box.append_text(i->name);
+  }
 
   filter_box.set_active(0);
   filter_box.signal_changed().connect(sigc::mem_fun(*this, &ObjectSelector::on_filter_changed));
@@ -295,8 +306,8 @@
       Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(iconpath);
       if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
         {
-          pixbuf = pixbuf->scale_simple(std::max(4, int(pixbuf->get_width()  * wst->get_state().get_zoom())),
-                                        std::max(4, int(pixbuf->get_height() * wst->get_state().get_zoom())),
+          pixbuf = pixbuf->scale_simple(std::max(4, int(static_cast<float>(pixbuf->get_width())  * wst->get_state().get_zoom())),
+                                        std::max(4, int(static_cast<float>(pixbuf->get_height()) * wst->get_state().get_zoom())),
                                         Gdk::INTERP_TILES);
         }
       context->set_icon(pixbuf, pixbuf->get_width()/2, pixbuf->get_height()/2);

Modified: trunk/windstille/src/editor/particle_system_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/particle_system_object_model.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/particle_system_object_model.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -20,7 +20,8 @@
 #include "particle_system_object_model.hpp"
 
 ParticleSystemObjectModel::ParticleSystemObjectModel(const Vector2f& pos)
-  : ObjectModel("ParticleSystem", pos)
+  : ObjectModel("ParticleSystem", pos),
+    systems()
 {
 }
 

Modified: trunk/windstille/src/editor/scroll_tool.cpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/scroll_tool.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -21,7 +21,9 @@
 #include "scroll_tool.hpp"
 
 ScrollTool::ScrollTool()
-  : mode(NO_MODE)
+  : orig_state(),
+    orig_click(),
+    mode(NO_MODE)
 {
 }
 
@@ -29,7 +31,7 @@
 ScrollTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
   orig_state = wst.get_state().clone();
-  orig_click = orig_state.screen_to_world(Vector2f(event->x, event->y));
+  orig_click = orig_state.screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
   mode = SCROLLING;
   wst.queue_draw();
 }
@@ -39,7 +41,7 @@
 {
   if (mode == SCROLLING)
     {
-      Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(event->x, event->y));
+      Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
       wst.get_state().set_pos(orig_state.get_pos() + offset);
       wst.queue_draw();
     }
@@ -50,7 +52,7 @@
 {
   if (mode == SCROLLING)
     {
-      Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(event->x, event->y));
+      Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
       wst.get_state().set_pos(orig_state.get_pos() + offset);
       mode = NO_MODE;
       wst.queue_draw();

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -36,7 +36,9 @@
 LayerManagerColumns* LayerManagerColumns::instance_ = 0;
 
 SectorModel::SectorModel()
- : nav_graph(new NavigationGraph())
+  : nav_graph(new NavigationGraph()),
+    layer_tree(),
+    ambient_color()
 {
   layer_tree = Gtk::ListStore::create(LayerManagerColumns::instance());
 

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -55,7 +55,13 @@
   Gtk::TreeModelColumn<LayerHandle>                layer;
 
 private:
-  LayerManagerColumns() {
+  LayerManagerColumns() 
+    : type_icon(),
+      name(),
+      visible(),
+      locked(),
+      layer()
+  {
     add(type_icon); 
     add(name); 
     add(visible); 

Modified: trunk/windstille/src/editor/select_mask.hpp
===================================================================
--- trunk/windstille/src/editor/select_mask.hpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/select_mask.hpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -42,11 +42,11 @@
   {
     if (enable)
       {
-        mask = mask | (1<<layer);
+        mask = static_cast<uint16_t>(mask | (1u<<layer));
       }
     else
       {
-        mask = mask & (~(1<<layer));
+        mask = static_cast<uint16_t>(mask & (~(1u<<layer)));
       }
   }
 

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -28,8 +28,12 @@
 static const int MOVE_THRESHOLD = 16.0f;
 
 SelectTool::SelectTool()
-  : mode(NO_MODE)
-    
+ : click_pos(),
+   rect(),
+   selection(),
+   ctrl_point(),
+   start_time(),
+   mode(NO_MODE)    
 {
 }
 
@@ -37,7 +41,7 @@
 SelectTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
   start_time = event->time;
-  click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  click_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
 
   ctrl_point = wst.get_control_point(click_pos);
   if (ctrl_point)
@@ -124,7 +128,7 @@
 void
 SelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
-  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
 
   if (mode == CONTROL_DRAG_MODE)
     {
@@ -165,7 +169,7 @@
 void
 SelectTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
-  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
 
   // Select objects
   if (mode == CONTROL_DRAG_MODE)

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/selection.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -27,7 +27,11 @@
 #include "selection.hpp"
 
 Selection::Selection()
-  : moving(false)
+  : objects(),
+    object_orig_poss(),
+    non_moveable_objects(),
+    moving(false),
+    signal_changed()
 {
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -47,9 +47,15 @@
                                    const Glib::RefPtr<const Gdk::GL::Context>& share_list)
   : editor(editor_),
     undo_manager(new UndoManager()),
+    filename(),
     sector_model(new SectorModel()),
+    control_points(),
+    state(),
+    sc(),
     scroll_tool(new ScrollTool()),
+    selection(),
     map_type(DecalObjectModel::COLORMAP),
+    background_pattern(),
     draw_background_pattern(true),
     select_mask(1),
     draw_only_active_layers(true),
@@ -729,7 +735,7 @@
   //          << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
   
   ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
-                                                      state.screen_to_world(Vector2f(x, y)),
+                                                      state.screen_to_world(Vector2f(static_cast<float>(x), static_cast<float>(y))),
                                                       data.get_data_as_string().substr(5), 
                                                       map_type);
 
@@ -764,21 +770,23 @@
 void
 WindstilleWidget::on_zoom_in()
 {
-  state.set_zoom(Vector2f(get_width()/2, get_height()/2), state.get_zoom() * 1.25f);
+  state.set_zoom(Vector2f(static_cast<float>(get_width())/2.0f, static_cast<float>(get_height())/2.0f), state.get_zoom() * 1.25f);
   queue_draw();
 }
 
 void
 WindstilleWidget::on_zoom_out()
 {
-  state.set_zoom(Vector2f(get_width()/2, get_height()/2), state.get_zoom() * (1.0f/1.25f));
+  state.set_zoom(Vector2f(static_cast<float>(get_width())/2.0f, static_cast<float>(get_height())/2.0f), state.get_zoom() * (1.0f/1.25f));
   queue_draw();
 }
 
 void
 WindstilleWidget::on_zoom_100()
 {
-  state.set_zoom(Vector2f(get_width()/2, get_height()/2), 1.0f);
+  state.set_zoom(Vector2f(static_cast<float>(get_width())  / 2.0f, 
+                          static_cast<float>(get_height()) / 2.0f),
+                 1.0f);
   queue_draw();
 }
 

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-08-24 11:59:04 UTC (rev 3035)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-08-24 12:27:31 UTC (rev 3036)
@@ -21,7 +21,9 @@
 #include "zoom_tool.hpp"
 
 ZoomTool::ZoomTool()
-  : mode(NO_MODE)
+  : click_pos(),
+    mouse_pos(),
+    mode(NO_MODE)
 {
 }
 
@@ -30,7 +32,7 @@
 {
   if (mode == NO_MODE)
     {
-      mouse_pos = click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+      mouse_pos = click_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
 
       mode = RECT_MODE;
 
@@ -43,7 +45,7 @@
 {
   if (mode == RECT_MODE)
     {
-      mouse_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+      mouse_pos = wst.get_state().screen_to_world(Vector2f(static_cast<float>(event->x), static_cast<float>(event->y)));
       wst.queue_draw();
     }
 }



From grumbel at mail.berlios.de  Mon Aug 24 17:45:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 17:45:17 +0200
Subject: [Windstille-commit] r3037 - trunk/windstille/src/particles
Message-ID: <200908241545.n7OFjH4G031786@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 17:45:16 +0200 (Mon, 24 Aug 2009)
New Revision: 3037

Modified:
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/particle_system.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
Log:
Removed some member variables from the public area

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 12:27:31 UTC (rev 3036)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 15:45:16 UTC (rev 3037)
@@ -99,13 +99,14 @@
         if (i->t != -1.0f)
           {
             float p = 1.0f - psys.get_progress(i->t);
-            Color color(psys.color_start.r * p + psys.color_stop.r * (1.0f - p),
-                        psys.color_start.g * p + psys.color_stop.g * (1.0f - p),
-                        psys.color_start.b * p + psys.color_stop.b * (1.0f - p),
-                        psys.color_start.a * p + psys.color_stop.a * (1.0f - p));
+            Color color(psys.get_color_start().r * p + psys.get_color_stop().r * (1.0f - p),
+                        psys.get_color_start().g * p + psys.get_color_stop().g * (1.0f - p),
+                        psys.get_color_start().b * p + psys.get_color_stop().b * (1.0f - p),
+                        psys.get_color_start().a * p + psys.get_color_stop().a * (1.0f - p));
 
             // scale
-            float scale  = psys.size_start + psys.get_progress(i->t)*(psys.size_stop - psys.size_start);
+            float scale  = psys.get_size_start() + 
+              psys.get_progress(i->t) * (psys.get_size_stop() - psys.get_size_start());
           
             float width  = surface.get_width()  * scale;
             float height = surface.get_height() * scale;

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-08-24 12:27:31 UTC (rev 3036)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-08-24 15:45:16 UTC (rev 3037)
@@ -83,16 +83,15 @@
   /** Type of layer to which this particle system gets drawn */
   unsigned int layer;
 
-public:
   float size_start;
   float size_stop;
-private:
+
   float speed_start;
   float speed_stop;
 
-public:
   Color color_start;
   Color color_stop;
+
 private:
   void spawn(Particle& particle);
 
@@ -176,6 +175,12 @@
   iterator begin() { return particles.begin(); }
   iterator end()   { return particles.end(); }
 
+  float get_size_start() const { return size_start; }
+  float get_size_stop()  const { return size_stop; }
+
+  const Color& get_color_start() const { return color_start; }
+  const Color& get_color_stop()  const { return color_stop;  }
+
   float get_x_pos() { return x_pos; }
   float get_y_pos() { return y_pos; } 
   float get_z_pos() { return z_pos; } 

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-24 12:27:31 UTC (rev 3036)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-24 15:45:16 UTC (rev 3037)
@@ -104,13 +104,14 @@
       if (i->t != -1.0f)
         {
           float p = 1.0f - psys.get_progress(i->t);
-          Color color(psys.color_start.r * p + psys.color_stop.r * (1.0f - p),
-                      psys.color_start.g * p + psys.color_stop.g * (1.0f - p),
-                      psys.color_start.b * p + psys.color_stop.b * (1.0f - p),
-                      psys.color_start.a * p + psys.color_stop.a * (1.0f - p));
+          Color color(psys.get_color_start().r * p + psys.get_color_stop().r * (1.0f - p),
+                      psys.get_color_start().g * p + psys.get_color_stop().g * (1.0f - p),
+                      psys.get_color_start().b * p + psys.get_color_stop().b * (1.0f - p),
+                      psys.get_color_start().a * p + psys.get_color_stop().a * (1.0f - p));
 
           // scale
-          float scale  = psys.size_start + psys.get_progress(i->t)*(psys.size_stop - psys.size_start);
+          float scale  = psys.get_size_start() + 
+            psys.get_progress(i->t) * (psys.get_size_stop() - psys.get_size_start());
           
           float width  = surface.get_width()  * scale;
           float height = surface.get_height() * scale;



From grumbel at mail.berlios.de  Mon Aug 24 17:46:42 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 17:46:42 +0200
Subject: [Windstille-commit] r3038 - trunk/windstille
Message-ID: <200908241546.n7OFkguS031937@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 17:46:39 +0200 (Mon, 24 Aug 2009)
New Revision: 3038

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-24 15:45:16 UTC (rev 3037)
+++ trunk/windstille/TODO	2009-08-24 15:46:39 UTC (rev 3038)
@@ -15,6 +15,17 @@
 
 Microsoft compiler don't have inttypes.h, need to write a replacement header
 
+Logging
+=======
+
+* implement logging and make it useful
+
+  * log when a file is loaded (Surface, Font, Level, etc.)
+ 
+  * log when a sector is changed
+
+  * include a timestemp in the log
+
 Scripting
 =========
 
@@ -197,6 +208,9 @@
 Miscellaneous
 =============
 
+* automatically detect the file type provided on the command line and
+  launch the correct viewer
+
 * figure out how to enable mipmapping into the tile and surface packer
 
 * View class could be done away, as it doesn't have any clear purpose
@@ -365,6 +379,11 @@
 OpenGL
 ======
 
+* OpenGL 2.0 supports non-power-of-two textures with mipmaps, that
+  should be used instead of the texture packer
+
+* mipmapping needs to be enabled
+
 * check for features before using them:
 
 glewInit();
@@ -529,6 +548,8 @@
 Editor
 ======
 
+* add some command  line options to the editor (--datadir, --userdir, etc.)
+
 * Fix screenshot support (very crashy/buggy on different screensizes and stuff (padding error?))
 
 * unify delete/remove/erase a bit
@@ -868,6 +889,23 @@
 
 * write a script that builds cross compile environment with mingw on Ubuntu
 
+* optimize SConscript, currently takes 10.5sec to run, which is
+  ridiculously slow
+  
+  * using variant_dir increases the build time from 9.5 to 10.5 seconds
+
+  * Decider() has no noticable impact on build times
+
+  * Cachedir() has no noticable negative impact on build times
+
+  * reading the SConscript itself takes around 1.5 seconds, can be cut
+    down to 0.8 seconds by removing the browsing of data files
+
+  * build_windstille_editor() takes 7 seconds 
+
+  * build_windstille() takes 3 seconds 
+
+  * building just the external libraries takes just 0.7sec in total
 
 Code Cleanup
 ============



From grumbel at mail.berlios.de  Mon Aug 24 18:33:05 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 18:33:05 +0200
Subject: [Windstille-commit] r3039 - trunk/windstille/src/app
Message-ID: <200908241633.n7OGX5bn006667@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 18:33:04 +0200 (Mon, 24 Aug 2009)
New Revision: 3039

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
removed some unneeded if() checks

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-24 15:46:39 UTC (rev 3038)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-24 16:33:04 UTC (rev 3039)
@@ -127,28 +127,19 @@
     if (file_type == "wsprite")
     {
       std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
-
-      if (!filename.empty())
-        sprite3dview->set_model(filename);
-
-      // Launching Sprite3DView instead of game
+      sprite3dview->set_model(filename);
       screen_manager.push_screen(sprite3dview.release());
     }
     else if (file_type == "sprite" || file_type == "png" || file_type == "jpg")
     {
       std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
-
-      if (!filename.empty())
-        sprite2dview->set_sprite(filename);
-
-      // Launching Sprite2DView instead of game
+      sprite2dview->set_sprite(filename);
       screen_manager.push_screen(sprite2dview.release());
     }
     else if (file_type == "particles")
     {
       ParticleViewer* particle_viewer = new ParticleViewer();
-      if (!filename.empty())
-        particle_viewer->load(filename);
+      particle_viewer->load(filename);
       screen_manager.push_screen(particle_viewer);
     }
     else if (file_type == "wst")



From grumbel at mail.berlios.de  Mon Aug 24 21:30:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 21:30:46 +0200
Subject: [Windstille-commit] r3040 - in trunk/windstille/src: app input
Message-ID: <200908241930.n7OJUkHv012825@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 21:30:45 +0200 (Mon, 24 Aug 2009)
New Revision: 3040

Modified:
   trunk/windstille/src/app/controller_def.cpp
   trunk/windstille/src/app/controller_def.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/input/controller_description.hpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/input/input_configurator.hpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager.hpp
   trunk/windstille/src/input/input_manager_impl.hpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/input_manager_sdl.hpp
Log:
Cleaned up the management of ControllerDescription

Modified: trunk/windstille/src/app/controller_def.cpp
===================================================================
--- trunk/windstille/src/app/controller_def.cpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/app/controller_def.cpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -18,6 +18,44 @@
 
 #include "controller_def.hpp"
 
-ControllerDescription controller_description;
+WindstilleControllerDescription::WindstilleControllerDescription()
+{
+  // DPad
+  add_button("menu-up-button",    MENU_UP_BUTTON);
+  add_button("menu-down-button",  MENU_DOWN_BUTTON);
+  add_button("menu-left-button",  MENU_LEFT_BUTTON);
+  add_button("menu-right-button", MENU_RIGHT_BUTTON);
 
+  // Face Button
+  add_button("primary-button",    PRIMARY_BUTTON);
+  add_button("secondary-button",  SECONDARY_BUTTON);
+  add_button("tertiary-button",   TERTIARY_BUTTON);
+  add_button("quaternary-button", QUATERNARY_BUTTON);
+
+  // Stick Buttons
+  add_button("left-stick-button",  LEFT_STICK_BUTTON);
+  add_button("right-stick-button", RIGHT_STICK_BUTTON);
+
+  // Shoulder Button
+  add_button("left-shoulder-button",  LEFT_SHOULDER_BUTTON);
+  add_button("right-shoulder-button", RIGHT_SHOULDER_BUTTON);
+
+  // Back/Start
+  add_button("select-button",    SELECT_BUTTON);
+  add_button("start-button",     START_BUTTON);
+  add_button("debug-button",     DEBUG_BUTTON);
+
+  add_axis("left-trigger-axis",  LEFT_TRIGGER_AXIS);
+  add_axis("right-trigger-axis", RIGHT_TRIGGER_AXIS);
+
+  add_axis("x-axis", X_AXIS);
+  add_axis("y-axis", Y_AXIS);
+
+  add_axis("x2-axis", X2_AXIS);
+  add_axis("y2-axis", Y2_AXIS);
+
+  add_ball("mouse-motion-x", MOUSE_MOTION_X);
+  add_ball("mouse-motion-y", MOUSE_MOTION_Y);
+}
+
 /* EOF */

Modified: trunk/windstille/src/app/controller_def.hpp
===================================================================
--- trunk/windstille/src/app/controller_def.hpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/app/controller_def.hpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -21,6 +21,7 @@
 
 #include <map>
 #include <string>
+
 #include "input/input_event.hpp"
 #include "input/controller_description.hpp"
 
@@ -82,7 +83,11 @@
 #define INVENTORY_BUTTON   LEFT_SHOULDER_BUTTON
 #define AIM_BUTTON         RIGHT_SHOULDER_BUTTON
 
-extern ControllerDescription controller_description;
+class WindstilleControllerDescription : public ControllerDescription
+{
+public:
+  WindstilleControllerDescription();
+};
 
 #endif
 

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -88,7 +88,8 @@
       SpriteManager     sprite_manager;
       sprite3d::Manager sprite3d_manager;
       ScriptManager     script_manager;
-      InputManager      input_manager;
+      WindstilleControllerDescription controller_description;
+      InputManager      input_manager(controller_description);
       TileFactory       tile_factory("tiles.scm");
 
       init_modules();
@@ -168,47 +169,7 @@
   SoundManager::current()->enable_music(config.get_bool("music"));
 
   ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
-
-  { // Fill controller_description with data
     
-    // DPad
-    controller_description.add_button("menu-up-button",    MENU_UP_BUTTON);
-    controller_description.add_button("menu-down-button",  MENU_DOWN_BUTTON);
-    controller_description.add_button("menu-left-button",  MENU_LEFT_BUTTON);
-    controller_description.add_button("menu-right-button", MENU_RIGHT_BUTTON);
-
-    // Face Button
-    controller_description.add_button("primary-button",    PRIMARY_BUTTON);
-    controller_description.add_button("secondary-button",  SECONDARY_BUTTON);
-    controller_description.add_button("tertiary-button",   TERTIARY_BUTTON);
-    controller_description.add_button("quaternary-button", QUATERNARY_BUTTON);
-
-    // Stick Buttons
-    controller_description.add_button("left-stick-button",  LEFT_STICK_BUTTON);
-    controller_description.add_button("right-stick-button", RIGHT_STICK_BUTTON);
-
-    // Shoulder Button
-    controller_description.add_button("left-shoulder-button",  LEFT_SHOULDER_BUTTON);
-    controller_description.add_button("right-shoulder-button", RIGHT_SHOULDER_BUTTON);
-
-    // Back/Start
-    controller_description.add_button("select-button",    SELECT_BUTTON);
-    controller_description.add_button("start-button",     START_BUTTON);
-    controller_description.add_button("debug-button",     DEBUG_BUTTON);
-
-    controller_description.add_axis("left-trigger-axis",  LEFT_TRIGGER_AXIS);
-    controller_description.add_axis("right-trigger-axis", RIGHT_TRIGGER_AXIS);
-
-    controller_description.add_axis("x-axis", X_AXIS);
-    controller_description.add_axis("y-axis", Y_AXIS);
-
-    controller_description.add_axis("x2-axis", X2_AXIS);
-    controller_description.add_axis("y2-axis", Y2_AXIS);
-
-    controller_description.add_ball("mouse-motion-x", MOUSE_MOTION_X);
-    controller_description.add_ball("mouse-motion-y", MOUSE_MOTION_Y);
-  }
-    
   {     
     if (config.get<std::string>("primary-controller-file").is_set())
       InputManager::current()->load(config.get<std::string>("primary-controller-file").get());

Modified: trunk/windstille/src/input/controller_description.hpp
===================================================================
--- trunk/windstille/src/input/controller_description.hpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/controller_description.hpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -21,6 +21,7 @@
 
 #include <map>
 #include <string>
+
 #include "input_event.hpp"
 
 struct InputEventDefinition 
@@ -45,7 +46,7 @@
 
 public:
   ControllerDescription();
-  ~ControllerDescription();
+  virtual ~ControllerDescription();
 
   void add_button(const std::string& name, int id);
   void add_axis  (const std::string& name, int id); 

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -16,15 +16,18 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "input/input_configurator.hpp"
+
 #include <iostream>
 #include <stdexcept>
+
 #include "display/display.hpp"
 #include "math/rect.hpp"
 #include "app/controller_def.hpp"
 #include "font/fonts.hpp"
 #include "screen/screen_manager.hpp"
 #include "input/input_manager_sdl.hpp"
-#include "input_configurator.hpp"
+#include "input/input_manager.hpp"
 
 InputConfigurator::InputConfigurator()
   : items(),
@@ -104,11 +107,15 @@
       
       if (item.mode == ConfigureItem::CONFIGURE_AXIS)
         {
-          out << "Configuring " << controller_description.get_definition(item.event_id).name << ": " << std::endl;
+          out << "Configuring " 
+              << InputManager::current()->get_controller_description().get_definition(item.event_id).name
+              << ": " << std::endl;
         }
       else if (item.mode == ConfigureItem::CONFIGURE_BUTTON)
         {
-          out << "Configuring " << controller_description.get_definition(item.event_id).name << ": " << std::endl;
+          out << "Configuring " 
+              << InputManager::current()->get_controller_description().get_definition(item.event_id).name 
+              << ": " << std::endl;
         }
     }
 

Modified: trunk/windstille/src/input/input_configurator.hpp
===================================================================
--- trunk/windstille/src/input/input_configurator.hpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_configurator.hpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -20,6 +20,8 @@
 #define HEADER_WINDSTILLE_INPUT_INPUT_CONFIGURATOR_HPP
 
 #include <sstream>
+#include <vector>
+
 #include "screen/screen.hpp"
 #include "display/text_area.hpp"
 

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -27,8 +27,8 @@
 #include "input_manager_impl.hpp"
 #include "input_manager.hpp"
 
-InputManager::InputManager()
-  : impl(new InputManagerSDL())
+InputManager::InputManager(const ControllerDescription& controller_description)
+  : impl(new InputManagerSDL(controller_description))
 {
 }
 
@@ -49,8 +49,15 @@
   impl->update(delta);
 }
 
+const ControllerDescription&
+InputManager::get_controller_description() const
+{
+  assert(impl);
+  return impl->get_controller_description();
+}
+
 const Controller&
-InputManager::get_controller()
+InputManager::get_controller() const
 {
   assert(impl);
   return impl->get_controller();

Modified: trunk/windstille/src/input/input_manager.hpp
===================================================================
--- trunk/windstille/src/input/input_manager.hpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_manager.hpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -33,14 +33,15 @@
 class InputManager : public Currenton<InputManager>
 {
 public:
-  InputManager();
+  InputManager(const ControllerDescription& controller_description);
   ~InputManager();
 
   /** Load configuration file \a filename */
   void load(const std::string& filename);
 
   void update(float delta);
-  const Controller& get_controller();
+  const ControllerDescription& get_controller_description() const;
+  const Controller& get_controller() const;
   void clear();
 
 private:

Modified: trunk/windstille/src/input/input_manager_impl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.hpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_manager_impl.hpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -26,15 +26,20 @@
 class InputManagerImpl
 {
 protected:
+  ControllerDescription controller_description;
   Controller controller;
 
 public:
-  InputManagerImpl() : controller() {}
+  InputManagerImpl(const ControllerDescription& controller_description_) 
+    : controller_description(controller_description_),
+      controller() 
+  {}
   virtual ~InputManagerImpl() {}
 
   virtual void load(const std::string& filename) =0;
   virtual void update(float delta) =0;
   
+  const ControllerDescription& get_controller_description() const { return controller_description; }
   const Controller& get_controller() const;
   void clear();
 

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -239,8 +239,9 @@
     }
 }
 
-InputManagerSDL::InputManagerSDL()
-  : impl(new InputManagerSDLImpl)
+InputManagerSDL::InputManagerSDL(const ControllerDescription& controller_description)
+  : InputManagerImpl(controller_description),
+    impl(new InputManagerSDLImpl)
 {
   for (int i = 0; i < SDLK_LAST; ++i) {
     char* key_name = SDL_GetKeyName(static_cast<SDLKey>(i));

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-24 16:33:04 UTC (rev 3039)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-24 19:30:45 UTC (rev 3040)
@@ -98,7 +98,7 @@
                         public Currenton<InputManagerSDL>
 {
 public:
-  InputManagerSDL();
+  InputManagerSDL(const ControllerDescription& controller_description);
   virtual ~InputManagerSDL();
 
   void load(const std::string& filename);



From grumbel at mail.berlios.de  Mon Aug 24 21:41:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 21:41:21 +0200
Subject: [Windstille-commit] r3041 - in trunk/windstille/src: app display
Message-ID: <200908241941.n7OJfLOC013618@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 21:41:21 +0200 (Mon, 24 Aug 2009)
New Revision: 3041

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/display/opengl_window.cpp
Log:
Moved atexit(SDL_Quit) to main()

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-24 19:30:45 UTC (rev 3040)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-24 19:41:21 UTC (rev 3041)
@@ -163,7 +163,6 @@
 void
 WindstilleMain::init_modules()
 {
-  if (debug) std::cout << "Initialising Fonts" << std::endl;
   SoundManager::current()->set_master_volume(static_cast<float>(config.get_int("master-volume"))/100.0f);
   SoundManager::current()->enable_sound(config.get_bool("sound"));
   SoundManager::current()->enable_music(config.get_bool("music"));
@@ -192,13 +191,16 @@
 #endif
 
   if (SDL_Init(flags) < 0)
-    {
-      std::stringstream msg;
-      msg << "Couldn't initialize SDL: " << SDL_GetError();
-      throw std::runtime_error(msg.str());
-    }
-
-  SDL_EnableUNICODE(1);
+  {
+    std::stringstream msg;
+    msg << "Couldn't initialize SDL: " << SDL_GetError();
+    throw std::runtime_error(msg.str());
+  }
+  else
+  {
+    atexit(SDL_Quit);
+    SDL_EnableUNICODE(1);
+  }
 }
 
 void

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-24 19:30:45 UTC (rev 3040)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-24 19:41:21 UTC (rev 3041)
@@ -32,8 +32,6 @@
 OpenGLWindow::OpenGLWindow()
  : m_window(0)
 {
-  atexit(SDL_Quit);
-
   SDL_GL_SetAttribute(SDL_GL_SWAP_CONTROL, 1); // vsync
   SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
   SDL_GL_SetAttribute(SDL_GL_RED_SIZE,   5);



From grumbel at mail.berlios.de  Mon Aug 24 22:03:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 22:03:22 +0200
Subject: [Windstille-commit] r3042 - trunk/windstille/src/screen
Message-ID: <200908242003.n7OK3MEc016231@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 22:03:22 +0200 (Mon, 24 Aug 2009)
New Revision: 3042

Modified:
   trunk/windstille/src/screen/game_session.cpp
Log:
Removed a bunch of unused includes

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-24 19:41:21 UTC (rev 3041)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-24 20:03:22 UTC (rev 3042)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "screen/game_session.hpp"
+
 #include <math.h>
 #include <sstream>
 #include <stdarg.h>
@@ -24,15 +26,8 @@
 #include <sqstdio.h> 
 #include <sqstdaux.h> 
 
-#include "app/console.hpp"
 #include "app/menu_manager.hpp"
-#include "app/windstille_main.hpp"
-#include "collision/collision_engine.hpp"
 #include "display/display.hpp"
-#include "display/scene_context.hpp"
-#include "display/surface.hpp"
-#include "display/surface_manager.hpp"
-#include "engine/game_object.hpp"
 #include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
 #include "font/fonts.hpp"
@@ -41,20 +36,11 @@
 #include "hud/inventory.hpp"
 #include "hud/pda.hpp"
 #include "hud/speech_manager.hpp"
-#include "input/input_manager.hpp"
+#include "input/controller.hpp"
 #include "objects/player.hpp"
-#include "objects/test_object.hpp"
-#include "particles/particle_system.hpp"
-#include "particles/spark_drawer.hpp"
-#include "particles/surface_drawer.hpp"
-#include "screen_manager.hpp"
-#include "scripting/util.hpp"
-#include "scripting/wrapper.hpp"
+#include "screen/screen_manager.hpp"
+#include "screen/view.hpp"
 #include "sound/sound_manager.hpp"
-#include "tile/tile_map.hpp"
-#include "view.hpp"
-
-#include "game_session.hpp"
 
 class GameSessionImpl
 {



From grumbel at mail.berlios.de  Mon Aug 24 23:50:42 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 23:50:42 +0200
Subject: [Windstille-commit] r3043 - in trunk/windstille/src: app armature
	collision display editor engine font gui hud input lisp math
	navigation objects particles physfs properties screen
	scripting sound sprite2d sprite3d tile util
Message-ID: <200908242150.n7OLogXB028645@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 23:50:34 +0200 (Mon, 24 Aug 2009)
New Revision: 3043

Added:
   trunk/windstille/src/editor/property_dialog.cpp
   trunk/windstille/src/editor/property_dialog.hpp
Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/app/globals.cpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/armature/armature.cpp
   trunk/windstille/src/armature/mesh.cpp
   trunk/windstille/src/armature/model.cpp
   trunk/windstille/src/armature/pose.cpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/collision/collision_object.cpp
   trunk/windstille/src/collision/stair_contact.cpp
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/framebuffer.cpp
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/opengl_state.cpp
   trunk/windstille/src/display/opengl_window.cpp
   trunk/windstille/src/display/render_buffer.cpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/shader_object.cpp
   trunk/windstille/src/display/shader_program.cpp
   trunk/windstille/src/display/software_surface.cpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/game_object.cpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/no_font_effect.cpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/gui/button.cpp
   trunk/windstille/src/gui/component.cpp
   trunk/windstille/src/gui/grid_component.cpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/gui_manager.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/root_component.cpp
   trunk/windstille/src/gui/slider.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/gui/text_view.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager_impl.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/lisp/lexer.cpp
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/properties.cpp
   trunk/windstille/src/lisp/writer.cpp
   trunk/windstille/src/math/line.cpp
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/math/quaternion.cpp
   trunk/windstille/src/math/rect.cpp
   trunk/windstille/src/navigation/edge_position.cpp
   trunk/windstille/src/navigation/navigation_graph.cpp
   trunk/windstille/src/navigation/node.cpp
   trunk/windstille/src/navigation/properties.cpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/bomb.cpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/elevator.cpp
   trunk/windstille/src/objects/grenade.hpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/objects/test_object.cpp
   trunk/windstille/src/objects/trigger.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/physfs/physfs_stream.cpp
   trunk/windstille/src/properties/properties.cpp
   trunk/windstille/src/properties/property.cpp
   trunk/windstille/src/properties/property_set.cpp
   trunk/windstille/src/screen/armature_test.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/screen.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/scripting/game_objects.cpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/scripting/wrapper.cpp
   trunk/windstille/src/sound/sound_file.cpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/wav_sound_file.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite2d/manager.cpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/manager.cpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/tile/tile.cpp
   trunk/windstille/src/tile/tile_description.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/util/baby_xml.cpp
   trunk/windstille/src/util/command_line.cpp
   trunk/windstille/src/util/command_line_generic.cpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/getter.cpp
   trunk/windstille/src/util/pathname.cpp
   trunk/windstille/src/util/response_curve.cpp
   trunk/windstille/src/util/sexpr_file_reader.cpp
   trunk/windstille/src/util/util.cpp
Log:
Radical cleanup of unneeded includes, performed mostly automatically, so might introduce a few bugs with other compilers

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/app/config.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,13 +18,9 @@
 
 #include "app/config.hpp"
 
-#include <stdio.h>
 #include <boost/format.hpp>
-#include <boost/scoped_ptr.hpp>
-#include <iostream>
 
 #include "app/windstille.hpp"
-#include "util/pathname.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "util/command_line.hpp"
 #include "globals.hpp"

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/app/console.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,18 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "app/console.hpp"
-
-#include <assert.h>
-
-#include "util/pathname.hpp"
 #include "display/display.hpp"
 #include "engine/script_manager.hpp"
 #include "font/fonts.hpp"
 #include "input/input_manager.hpp"
-#include "math/rect.hpp"
 #include "screen/game_session.hpp"
-#include "scripting/util.hpp"
 
 Console console;
 

Modified: trunk/windstille/src/app/globals.cpp
===================================================================
--- trunk/windstille/src/app/globals.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/app/globals.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "globals.hpp"
 
 int TILE_SIZE       = 32;
 int TILE_RESOLUTION = 64;

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,24 +16,19 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <boost/scoped_ptr.hpp>
 #include <boost/bind.hpp>
 
 #include "config.hpp"
 #include "sound/sound_manager.hpp"
-#include "console.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
 #include "screen/game_session.hpp"
 #include "gui/group_component.hpp"
-#include "gui/gui_manager.hpp"
-#include "gui/menu_component.hpp"
 #include "gui/root_component.hpp"
 #include "gui/text_view.hpp"
 #include "screen/particle_viewer.hpp"
 #include "screen/screen_manager.hpp"
 #include "engine/sector.hpp"
-#include "sprite3d/manager.hpp"
 #include "screen/sprite3dview.hpp"
 #include "screen/geometry_test.hpp"
 #include "screen/armature_test.hpp"

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,40 +16,25 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "SDL.h"
-
-#include "windstille.hpp"
-
-#include <boost/scoped_array.hpp>
 #include <boost/filesystem.hpp>
-#include <stdio.h>
 #include <physfs.h>
 
 #include "config.hpp"
-#include "display/display.hpp"
-#include "display/opengl_state.hpp"
 #include "display/opengl_window.hpp"
 #include "display/surface_manager.hpp"
 #include "display/texture_manager.hpp"
 #include "engine/script_manager.hpp"
-#include "engine/sector.hpp"
 #include "font/fonts.hpp"
-#include "font/ttf_font.hpp"
-#include "globals.hpp"
 #include "input/input_manager.hpp"
 #include "screen/game_session.hpp"
 #include "screen/particle_viewer.hpp"
-#include "screen/screen.hpp"
 #include "screen/screen_manager.hpp"
 #include "screen/sprite2dview.hpp"
 #include "screen/sprite3dview.hpp"
 #include "screen/title_screen.hpp"
 #include "sound/sound_manager.hpp"
-#include "sprite2d/manager.hpp"
 #include "sprite3d/manager.hpp"
 #include "tile/tile_factory.hpp"
-#include "util/util.hpp"
-#include "util/pathname.hpp"
 #include "util/system.hpp"
 #include "windstille_main.hpp"
 

Modified: trunk/windstille/src/armature/armature.cpp
===================================================================
--- trunk/windstille/src/armature/armature.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/armature/armature.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,13 +17,10 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
-#include <iostream>
 #include <stdexcept>
 #include "display/opengl_state.hpp"
 #include "display/display.hpp"
 #include "pose.hpp"
-#include "math/vector3.hpp"
 #include "armature.hpp"
 
 Armature::Armature(FileReader& reader)

Modified: trunk/windstille/src/armature/mesh.cpp
===================================================================
--- trunk/windstille/src/armature/mesh.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/armature/mesh.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,13 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
-#include <stdexcept>
-#include <iostream>
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "display/texture_manager.hpp"
-#include "util/file_reader.hpp"
 #include "armature.hpp"
 #include "mesh.hpp"
 

Modified: trunk/windstille/src/armature/model.cpp
===================================================================
--- trunk/windstille/src/armature/model.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/armature/model.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <stdexcept>
 #include "util/file_reader.hpp"
 #include "mesh.hpp"

Modified: trunk/windstille/src/armature/pose.cpp
===================================================================
--- trunk/windstille/src/armature/pose.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/armature/pose.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <stdexcept>
 #include "util/file_reader.hpp"
 #include "pose.hpp"

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,7 +19,6 @@
 
 #include "collision_test.hpp"
 #include "collision_engine.hpp"
-#include "app/globals.hpp"
 #include "tile/tile_map.hpp"
 
 std::vector<Rectf> tilemap_collision_list(TileMap *tilemap, const Rectf &r, bool is_ground);

Modified: trunk/windstille/src/collision/collision_object.cpp
===================================================================
--- trunk/windstille/src/collision/collision_object.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/collision/collision_object.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,12 +17,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
+#include "collision/collision_object.hpp"
 
 #include "display/drawing_context.hpp"
-#include "display/display.hpp"
-#include "collision_object.hpp"
-#include "collision_engine.hpp"
 
 /***********************************************************************
  * CollisionObject

Modified: trunk/windstille/src/collision/stair_contact.cpp
===================================================================
--- trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"
 #include "stair_contact.hpp"

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/blitter.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,13 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <assert.h>
-#include <iostream>
-#include <algorithm>
-#include <stdint.h>
 
 #include "display/software_surface.hpp"
-#include "blitter.hpp"
 
 void generate_border(const SoftwareSurface& surface,
                      int x_pos, int y_pos, int width, int height)

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/display.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,19 +18,12 @@
 
 #include "display/display.hpp"
 
-#include <assert.h>
 #include <boost/scoped_array.hpp>
 #include <png.h>
-#include <math.h>
 #include <errno.h>
 #include <fstream>
-#include <stdexcept>
 
-#include "app/config.hpp"
-#include "math/math.hpp"
 #include "display/opengl_state.hpp"
-#include "util/util.hpp"
-#include "util/pathname.hpp"
 
 Size              Display::aspect_size;
 std::vector<Rect> Display::cliprects;

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,24 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <boost/scoped_ptr.hpp>
-#include <assert.h>
-#include <iostream>
-#include <iosfwd>
 #include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "math/vector3.hpp"
 #include "display/display.hpp"
 #include "display/opengl_state.hpp"
 #include "display/scene_context.hpp"
-#include "display/surface.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/drawing_parameters.hpp"
 #include "display/vertex_array_drawing_request.hpp"
-#include "drawing_context.hpp"
 #include "font/fonts.hpp"
-#include "math/quad.hpp"
 #include "sprite2d/sprite.hpp"
 
 struct DrawingRequestsSorter

Modified: trunk/windstille/src/display/framebuffer.cpp
===================================================================
--- trunk/windstille/src/display/framebuffer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/framebuffer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,9 +17,7 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include "util/util.hpp"
-#include "texture.hpp"
 #include "render_buffer.hpp"
 #include "framebuffer.hpp"
 

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,9 +17,7 @@
 
 #include "display/graphic_context_state.hpp"
 
-#include <math.h>
 #include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "display/scene_context.hpp"
 

Modified: trunk/windstille/src/display/opengl_state.cpp
===================================================================
--- trunk/windstille/src/display/opengl_state.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/opengl_state.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,13 +18,10 @@
 
 #include "display/opengl_state.hpp"
 
-#include <assert.h>
-#include <map>
 #include <iostream>
+
 #include "texture.hpp"
-#include "color.hpp"
-#include "app/globals.hpp"
-#include "display/display.hpp"
+#include "display/color.hpp"
 #include "util/util.hpp"
 
 #define MAX_TEXTURE_UNITS 4

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,13 +18,10 @@
 
 #include "display/opengl_window.hpp"
 
-#include <assert.h>
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include <SDL/SDL_image.h>
 
 #include "util/util.hpp" 
-#include "util/pathname.hpp"
 #include "display/opengl_state.hpp"
 #include "display/display.hpp"
 #include "app/config.hpp"

Modified: trunk/windstille/src/display/render_buffer.cpp
===================================================================
--- trunk/windstille/src/display/render_buffer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/render_buffer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "render_buffer.hpp"
 

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,19 +17,11 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
-#include <assert.h>
-#include <iostream>
-#include <boost/scoped_ptr.hpp>
 
-#include "util/util.hpp"
 #include "display/display.hpp"
 #include "display/surface.hpp"
 #include "display/opengl_state.hpp"
 
-#include "shader_program.hpp"
-#include "shader_object.hpp"
-#include "framebuffer.hpp"
 #include "scene_context.hpp"
 
 // The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP

Modified: trunk/windstille/src/display/shader_object.cpp
===================================================================
--- trunk/windstille/src/display/shader_object.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/shader_object.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,8 +17,6 @@
 */
 
 #include <iostream>
-#include <stdio.h>
-#include <stdlib.h>
 
 #include "util/util.hpp"
 #include "shader_object.hpp"

Modified: trunk/windstille/src/display/shader_program.cpp
===================================================================
--- trunk/windstille/src/display/shader_program.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/shader_program.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include <iostream>
-#include <stdio.h>
 
 #include "shader_object.hpp"
 #include "util/util.hpp"

Modified: trunk/windstille/src/display/software_surface.cpp
===================================================================
--- trunk/windstille/src/display/software_surface.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/software_surface.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,14 +19,11 @@
 #include <boost/scoped_array.hpp>
 #include <png.h>
 #include <errno.h>
-#include <iostream>
 #include <sstream>
 #include <stdexcept>
 #include <SDL_image.h>
 
-#include "util/pathname.hpp"
 #include "math/rect.hpp"
-#include "physfs/physfs_sdl.hpp"
 #include "software_surface.hpp"
 
 class SoftwareSurfaceImpl

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/surface.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,11 +18,9 @@
 
 #include "display/surface.hpp"
 
-#include <iostream>
 
 #include "display/opengl_state.hpp"
 #include "math/quad.hpp"
-#include "math/vector2f.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/surface_manager.hpp"
 

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,21 +18,11 @@
 
 #include "surface_manager.hpp"
 
-#include <iostream>
 #include <sstream>
 #include <stdexcept>
-#include <GL/glew.h>
-#include <GL/gl.h>
 
-#include "app/globals.hpp"
-#include "math/math.hpp"
-#include "physfs/physfs_sdl.hpp"
 #include "software_surface.hpp"
-#include "surface.hpp"
-#include "texture.hpp"
-#include "texture_manager.hpp"
 #include "texture_packer.hpp"
-#include "util/util.hpp"
 
 
 SurfaceManager::SurfaceManager()

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,14 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
-#include <iostream>
 #include "display/opengl_state.hpp"
-#include "font/ttf_font.hpp"
-#include "text_area.hpp"
+#include "display/text_area.hpp"
 #include "util/baby_xml.hpp"
 #include "font/fonts.hpp"
-#include "text_area.hpp"
 #include "display.hpp"
 
 struct TextAreaCommand 

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/texture.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,10 +19,6 @@
 
 #include "display/texture.hpp"
 
-#include <stdexcept>
-#include <iostream>
-#include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "math/rect.hpp"
 #include "display/software_surface.hpp"

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,18 +18,9 @@
 
 #include "display/texture_manager.hpp"
 
-#include <assert.h>
-#include <iostream>
-#include <sstream>
-#include <stdexcept>
-#include <GL/glew.h>
-#include <GL/gl.h>
 
-#include "util/util.hpp"
-#include "app/globals.hpp"
 #include "texture.hpp"
 #include "software_surface.hpp"
-#include "physfs/physfs_sdl.hpp"
 
 TextureManager::TextureManager()
   : textures()

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,11 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <stdexcept>
 #include <boost/scoped_ptr.hpp>
 
-#include "math/point.hpp"
 #include "display/software_surface.hpp"
 
 #include "texture_packer.hpp"

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 
 #include "display/opengl_state.hpp"
 #include "vertex_array_drawing_request.hpp"

Added: trunk/windstille/src/editor/property_dialog.cpp
===================================================================
--- trunk/windstille/src/editor/property_dialog.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/editor/property_dialog.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -0,0 +1,45 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "editor/property_dialog.hpp"
+
+PropertyDialog::PropertyDialog(Properties& /*properties*/)
+{
+#if 0
+  std::vector<std::string> props = properties.get_properties();
+  for(std::vector<std::string>::iterator i = props.begin(); i != props.end(); ++i)
+    {
+      Property& prop = properties.get_property(*i);
+      if (prop.get_type() == "int")
+        {
+          new Gtk::Label(*i);
+          new Gtk::TextEntry();
+        }
+      else if (prop.get_type() == "float")
+        {
+        }
+    }
+#endif 
+}
+
+PropertyDialog::~PropertyDialog()
+{
+}
+    
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/property_dialog.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/property_dialog.hpp
===================================================================
--- trunk/windstille/src/editor/property_dialog.hpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/editor/property_dialog.hpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -0,0 +1,40 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_PROPERTY_DIALOG_HPP
+#define HEADER_WINDSTILLE_EDITOR_PROPERTY_DIALOG_HPP
+
+#include <gtkmm/dialog.h>
+
+#include "properties/properties.hpp"
+
+class PropertyDialog : public Gtk::Dialog
+{
+private:
+public:
+  PropertyDialog(Properties& properties);
+  ~PropertyDialog();
+  
+private:
+  PropertyDialog(const PropertyDialog&);
+  PropertyDialog& operator=(const PropertyDialog&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/property_dialog.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,10 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include "properties/property_set.hpp"
-#include "properties/property.hpp"
-#include "app/globals.hpp"
 #include "sector.hpp"
 #include "tile/tile_map.hpp"
 #include "entity.hpp"

Modified: trunk/windstille/src/engine/game_object.cpp
===================================================================
--- trunk/windstille/src/engine/game_object.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/engine/game_object.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include "engine/game_object.hpp"
-#include "sector.hpp"
 
 Sector* GameObject::world;
 

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include <boost/bind.hpp>
-#include <iostream>
 
 #include "physics.hpp"
 

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,20 +19,12 @@
 #include "script_manager.hpp"
 
 #include <stdarg.h>
-#include <stdexcept>
-#include <sstream>
-#include <fstream>
-#include <sqstdio.h>
 #include <sqstdaux.h>
-#include <sqstdblob.h>
-#include <sqstdsystem.h>
 #include <sqstdmath.h>
 #include <sqstdstring.h>
 
 #include "squirrel_thread.hpp"
 #include "app/console.hpp"
-#include "scripting/wrapper.hpp"
-#include "scripting/util.hpp"
 #include "scripting/game_objects.hpp"
 #include "scripting/squirrel_error.hpp"
 #include "physfs/physfs_stream.hpp"

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,24 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
-#include <sstream>
-#include <stdexcept>
-#include "util/sexpr_file_reader.hpp"
-#include "app/globals.hpp"
-#include "display/scene_context.hpp"
 #include "objects/background_gradient.hpp"
 #include "tile/tile_map.hpp"
-#include "engine/game_object.hpp"
 #include "objects/player.hpp"
 #include "objects/trigger.hpp"
 #include "objects/test_object.hpp"
 #include "objects/vrdummy.hpp"
 #include "sound/sound_manager.hpp"
-#include "script_manager.hpp"
 #include "collision/collision_engine.hpp"
-#include "particles/particle_system.hpp"
-#include "objects/test_object.hpp"
 #include "objects/elevator.hpp"
 #include "objects/nightvision.hpp"
 #include "objects/character.hpp"
@@ -46,11 +36,9 @@
 #include "objects/box.hpp"
 #include "objects/scriptable_object.hpp"
 #include "navigation/navigation_graph.hpp"
-#include "scripting/squirrel_error.hpp"
 #include "scenegraph/scene_graph.hpp"
 #include "squirrel_thread.hpp"
 
-#include "sector.hpp"
 
 //Sector* Sector::current_ = 0;
 

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,9 +19,7 @@
 #include "squirrel_thread.hpp"
 
 #include "app/globals.hpp"
-#include "scripting/util.hpp"
 #include "scripting/squirrel_error.hpp"
-#include "scripting/game_objects.hpp"
 
 using Scripting::SquirrelError;
 

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <algorithm>
 #include "display/software_surface.hpp"
 #include "border_font_effect.hpp"
 

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/font/fonts.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,12 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 
-#include "app/globals.hpp"
 #include "font/border_font_effect.hpp"
 #include "font/fonts.hpp"
-#include "util/pathname.hpp"
 
 Fonts::Fonts()
   : ttffont(new TTFFont(Pathname("fonts/VeraMono.ttf"), 14, BorderFontEffect(1, true))),

Modified: trunk/windstille/src/font/no_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/font/no_font_effect.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "display/blitter.hpp"
 #include "display/software_surface.hpp"
 #include "no_font_effect.hpp"
 

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,23 +16,17 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include <vector>
 #include <stdexcept>
 #include <sstream>
 
 #include <ft2build.h>
-#include FT_FREETYPE_H
-#include FT_GLYPH_H
 
 #include "display/blitter.hpp"
 #include "display/opengl_state.hpp"
 #include "display/software_surface.hpp"
-#include "display/texture_manager.hpp"
-#include "font_effect.hpp"
 #include "physfs/physfs_stream.hpp"
 #include "ttf_font.hpp"
-#include "util/util.hpp"
 
 TTFCharacter::TTFCharacter(const Rect& pos_,
                            const Rectf& uv_, 

Modified: trunk/windstille/src/gui/button.cpp
===================================================================
--- trunk/windstille/src/gui/button.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/button.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include "display/display.hpp"
 #include "font/fonts.hpp"
 #include "input/controller.hpp"

Modified: trunk/windstille/src/gui/component.cpp
===================================================================
--- trunk/windstille/src/gui/component.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/component.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include "component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/grid_component.cpp
===================================================================
--- trunk/windstille/src/gui/grid_component.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/grid_component.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include "display/display.hpp"
 #include "input/controller.hpp"
 #include "grid_component.hpp"

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,9 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include "display/display.hpp"
-#include "display/color.hpp"
 #include "font/fonts.hpp"
 #include "group_component.hpp"
 

Modified: trunk/windstille/src/gui/gui_manager.cpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/gui_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,16 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "input/controller.hpp"
-#include "button.hpp"
-#include "slider.hpp"
 #include "root_component.hpp"
 #include "screen/screen_manager.hpp"
-#include "grid_component.hpp"
-#include "tab_component.hpp"
-#include "list_view.hpp"
-#include "text_view.hpp"
-#include "automap.hpp"
 #include "gui_manager.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/menu.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,8 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
-#include "component.hpp"
 #include "root_component.hpp"
 #include "gui_manager.hpp"
 #include "menu_item.hpp"
@@ -25,7 +23,6 @@
 #include "group_component.hpp"
 #include "screen/screen_manager.hpp"
 #include "menu.hpp"
-#include "font/fonts.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,15 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <algorithm>
-#include <iostream>
 #include "sound/sound_manager.hpp"
 #include "input/controller.hpp"
 #include "menu_component.hpp"
 #include "gui/tab_component.hpp"
 #include "display/display.hpp"
 #include "menu_item.hpp"
-#include "math/math.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "sound/sound_manager.hpp"
 #include "display/display.hpp"
-#include "font/ttf_font.hpp"
 #include "menu_component.hpp"
 
 #include "menu_item.hpp"

Modified: trunk/windstille/src/gui/root_component.cpp
===================================================================
--- trunk/windstille/src/gui/root_component.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/root_component.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <algorithm>
 #include "app/console.hpp"
 #include "input/controller.hpp"

Modified: trunk/windstille/src/gui/slider.cpp
===================================================================
--- trunk/windstille/src/gui/slider.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/slider.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "input/controller.hpp"
 #include "display/display.hpp"
-#include "display/color.hpp"
 #include "slider.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include "input/controller.hpp"
 #include "font/fonts.hpp"
 #include "display/display.hpp"

Modified: trunk/windstille/src/gui/text_view.cpp
===================================================================
--- trunk/windstille/src/gui/text_view.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/gui/text_view.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "gui/text_view.hpp"
 
-#include <iostream>
 
 #include "input/controller.hpp"
 

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,12 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
-#include <boost/scoped_ptr.hpp>
 #include "input/input_manager.hpp"
 #include "display/display.hpp"
-#include "display/text_area.hpp"
-#include "font/fonts.hpp"
 #include "controller_help_window.hpp"
 
 ControllerHelpWindow* ControllerHelpWindow::current_ = 0;

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,11 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "math/math.hpp"
 #include "input/controller.hpp"
-#include "input/input_manager.hpp"
 #include "font/fonts.hpp"
-#include "math/rect.hpp"
 #include "engine/script_manager.hpp"
 #include "display/display.hpp"
 #include "conversation.hpp"
@@ -129,7 +126,7 @@
   grow = fabsf(sinf(time * 3.0f)) * 4.0f;
 
   direction = Vector2f(controller.get_axis_state(X_AXIS),
-                     controller.get_axis_state(Y_AXIS));
+                       controller.get_axis_state(Y_AXIS));
 
   if (fabs(controller.get_axis_state(X_AXIS)) > 0.3f ||
       fabs(controller.get_axis_state(Y_AXIS)) > 0.3f)

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,17 +18,13 @@
 
 #include "hud/dialog_manager.hpp"
 
-#include <iostream>
 
 #include "font/fonts.hpp"
 #include "screen/game_session.hpp"
 #include "input/controller.hpp"
-#include "input/input_manager.hpp"
 #include "engine/script_manager.hpp"
 #include "display/text_area.hpp"
 #include "display/display.hpp"
-#include "util/pathname.hpp"
-#include "app/config.hpp"
 
 DialogManager::DialogManager()
 {

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,15 +18,10 @@
 
 #include "hud/inventory.hpp"
 
-#include <iostream>
-#include <vector>
 
 #include "font/fonts.hpp"
 #include "input/controller.hpp"
-#include "input/input_manager.hpp"
 #include "screen/game_session.hpp"
-#include "sprite2d/sprite.hpp"
-#include "util/pathname.hpp"
 
 class InventoryItem
 {

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/input/controller.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,7 +19,6 @@
 
 #include <math.h>
 #include <assert.h>
-#include "app/controller_def.hpp"
 #include "controller.hpp"
 
 Controller::Controller()

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,12 +18,8 @@
 
 #include "input/input_configurator.hpp"
 
-#include <iostream>
-#include <stdexcept>
 
 #include "display/display.hpp"
-#include "math/rect.hpp"
-#include "app/controller_def.hpp"
 #include "font/fonts.hpp"
 #include "screen/screen_manager.hpp"
 #include "input/input_manager_sdl.hpp"

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,15 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
-#include <iostream>
-#include <assert.h>
-#include <stdexcept>
-#include <sstream>
-#include <boost/scoped_ptr.hpp>
 
 #include "input_manager_sdl.hpp"
-#include "input_manager_impl.hpp"
 #include "input_manager.hpp"
 
 InputManager::InputManager(const ControllerDescription& controller_description)

Modified: trunk/windstille/src/input/input_manager_impl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/input/input_manager_impl.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <math.h>
 #include "input_manager_impl.hpp"
 
 void

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,17 +18,10 @@
 
 #include <boost/format.hpp>
 
-#include <assert.h>
-#include <math.h>
-#include <iostream>
 #include <sstream>
-#include <stdexcept>
-#include <stdio.h>
-#include <vector>
 #include "math/math.hpp"
 #include "app/config.hpp"
 #include "util/file_reader.hpp"
-#include "app/controller_def.hpp"
 #include "input_manager_sdl.hpp"
 #ifdef HAVE_CWIID
 #include "wiimote.hpp"

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,8 +17,6 @@
 */
 
 #include <iostream>
-#include <assert.h>
-#include <pthread.h>
 #include "math/math.hpp"
 #include "wiimote.hpp"
 

Modified: trunk/windstille/src/lisp/lexer.cpp
===================================================================
--- trunk/windstille/src/lisp/lexer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/lisp/lexer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 
 #include <sstream>
 #include <stdexcept>
-#include <iostream>
 #include <string.h>
 #include "lexer.hpp"
 

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <string.h>
-#include <assert.h>
 #include "lisp.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,11 +18,6 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <string.h>
-#include <sstream>
-#include <cassert>
-#include <iostream>
-#include <string>
-#include <exception>
 
 #include "physfs/physfs_stream.hpp"
 #include "parser.hpp"

Modified: trunk/windstille/src/lisp/properties.cpp
===================================================================
--- trunk/windstille/src/lisp/properties.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/lisp/properties.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -1,5 +1,4 @@
 
-#include "lisp.hpp"
 #include "properties.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -15,7 +15,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <iostream>
 
 #include "writer.hpp"
 #include "physfs/physfs_stream.hpp"

Modified: trunk/windstille/src/math/line.cpp
===================================================================
--- trunk/windstille/src/math/line.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/math/line.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include "line.hpp"
 
 Line::Line(const Vector2f& p1_,

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/math/matrix.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -29,11 +29,9 @@
 
 #include <assert.h>
 #include <string.h>
-#include <iostream>
 #include <iomanip>
 #include <math.h>
 #include "vector3.hpp"
-#include "matrix.hpp"
 
 /////////////////////////////////////////////////////////////////////////////
 // Matrix construction:

Modified: trunk/windstille/src/math/quaternion.cpp
===================================================================
--- trunk/windstille/src/math/quaternion.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/math/quaternion.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "quaternion.hpp"
 
-#include <math.h>
 
 float
 Quaternion::magnitude() const

Modified: trunk/windstille/src/math/rect.cpp
===================================================================
--- trunk/windstille/src/math/rect.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/math/rect.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -27,8 +27,6 @@
 **    (if your name is missing here, please add it)
 */
 
-#include <ostream>
-#include <cmath>
 
 #include "rect.hpp"
 

Modified: trunk/windstille/src/navigation/edge_position.cpp
===================================================================
--- trunk/windstille/src/navigation/edge_position.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/navigation/edge_position.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,7 +19,6 @@
 #include "edge.hpp"
 #include "node.hpp"
 #include "display/display.hpp"
-#include "edge_position.hpp"
 
 EdgePosition::EdgePosition()
   : edge(0),

Modified: trunk/windstille/src/navigation/navigation_graph.cpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/navigation/navigation_graph.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,15 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <iomanip>
-#include <map>
-#include <algorithm>
 
-#include "math/rect.hpp"
 #include "display/display.hpp"
 #include "edge.hpp"
-#include "edge_position.hpp"
 #include "node.hpp"
 #include "util/file_reader.hpp"
 #include "util/file_writer.hpp"

Modified: trunk/windstille/src/navigation/node.cpp
===================================================================
--- trunk/windstille/src/navigation/node.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/navigation/node.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <algorithm>
 #include "node.hpp"
 
 Node::Node(const Vector2f& pos_)

Modified: trunk/windstille/src/navigation/properties.cpp
===================================================================
--- trunk/windstille/src/navigation/properties.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/navigation/properties.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "properties.hpp"
 
 
 

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include "display/vertex_array_drawing_request.hpp"
 #include "display/display.hpp"
 #include "background_gradient.hpp"

Modified: trunk/windstille/src/objects/bomb.cpp
===================================================================
--- trunk/windstille/src/objects/bomb.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/bomb.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include "app/globals.hpp"
-#include "engine/sector.hpp"
 #include "bomb.hpp"
 
 Bomb::Bomb(int x, int y)

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/box.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,15 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <stdexcept>
 #include <boost/bind.hpp>
 #include "box.hpp"
-#include "app/globals.hpp"
 #include "collision/collision_engine.hpp"
-#include "math/vector2f.hpp"
-#include "tile/tile_map.hpp"
-#include "math/random.hpp"
-#include "sprite2d/manager.hpp"
 
 Box::Box(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/character.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,18 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "character.hpp"
+#include "objects/character.hpp"
+
 #include "engine/sector.hpp"
-#include "screen/game_session.hpp"
-#include "scripting/wrapper.interface.hpp"
-#include "hud/dialog_manager.hpp"
 #include "engine/script_manager.hpp"
-#include "physfs/physfs_stream.hpp"
 #include "app/console.hpp"
-#include "sprite3d/manager.hpp"
-#include "util/util.hpp"
 
-#include <exception>
 
 Character::Character(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/objects/elevator.cpp
===================================================================
--- trunk/windstille/src/objects/elevator.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/elevator.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,11 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <stdexcept>
 #include "elevator.hpp"
 #include "engine/sector.hpp"
 #include "collision/collision_engine.hpp"
-#include "sprite2d/manager.hpp"
 
 Elevator::Elevator(FileReader& props)
   : size(),

Modified: trunk/windstille/src/objects/grenade.hpp
===================================================================
--- trunk/windstille/src/objects/grenade.hpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/grenade.hpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -15,6 +15,7 @@
 **  You should have received a copy of the GNU General Public License
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
+
 #ifndef HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 #define HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,11 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <math.h>
 
-#include "app/globals.hpp"
 #include "player.hpp"
-#include "engine/sector.hpp"
 #include "hedgehog.hpp"
 
 Hedgehog::Hedgehog(FileReader& props)

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "display/vertex_array_drawing_request.hpp"
 #include "objects/player.hpp"
-#include "collision/collision_engine.hpp"
 #include "engine/sector.hpp"
 #include "tile/tile_map.hpp"
 #include "laser_pointer.hpp"

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include "display/vertex_array_drawing_request.hpp"
-#include "math/random.hpp"
 #include "liquid.hpp"
 
 #define SAMPLES 5

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,12 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "app/globals.hpp"
 #include "math/random.hpp"
-#include "math/matrix.hpp"
 #include "display/vertex_array_drawing_request.hpp"
 #include "display/display.hpp"
-#include "display/texture_manager.hpp"
 #include "nightvision.hpp"
 
 Nightvision::Nightvision(FileReader& /*props*/)

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/player.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,24 +18,14 @@
 
 #include <boost/bind.hpp>
 
-#include "app/console.hpp"
-#include "app/controller_def.hpp"
-#include "app/globals.hpp"
 #include "collision/collision_engine.hpp"
 #include "collision/stair_contact.hpp"
-#include "display/surface_manager.hpp"
 #include "engine/sector.hpp"
 #include "grenade.hpp"
-#include "hud/pda.hpp"
-#include "input/controller.hpp"
 #include "laser_pointer.hpp"
-#include "objects/bomb.hpp"
-#include "particles/particle_system.hpp"
 #include "pistol.hpp"
 #include "player.hpp"
 #include "screen/game_session.hpp"
-#include "sound/sound_manager.hpp"
-#include "sprite3d/manager.hpp"
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"
 

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -21,7 +21,6 @@
 #include "engine/sector.hpp"
 #include "app/globals.hpp"
 #include "scriptable_object.hpp"
-#include "sprite2d/manager.hpp"
 
 ScriptableObject::ScriptableObject(FileReader& props)
   : z_pos(50),

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,9 +17,6 @@
 */
 
 #include "display/opengl_state.hpp"
-#include "display/drawing_request.hpp"
-#include "display/texture.hpp"
-#include "display/shader_program.hpp"
 #include "display/shader_object.hpp"
 #include "shockwave.hpp"
 

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "spider_mine.hpp"
 #include "player.hpp"
-#include "sprite2d/manager.hpp"
 
 SpiderMine::SpiderMine(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/swarm.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,12 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "app/globals.hpp"
 #include "display/vertex_array_drawing_request.hpp"
-#include "engine/sector.hpp"
-#include "math/math.hpp"
 #include "math/random.hpp"
-#include "player.hpp"
 #include "screen/game_session.hpp"
 #include "screen/view.hpp"
 

Modified: trunk/windstille/src/objects/test_object.cpp
===================================================================
--- trunk/windstille/src/objects/test_object.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/test_object.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,11 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <stdexcept>
 
 #include "test_object.hpp"
-#include "sprite3d/manager.hpp"
 
 TestObject::TestObject(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/objects/trigger.cpp
===================================================================
--- trunk/windstille/src/objects/trigger.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/objects/trigger.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,12 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <stdexcept>
-#include <list>
 #include "engine/sector.hpp"
 #include "trigger.hpp"
 #include "objects/player.hpp"
-#include "engine/script_manager.hpp"
 
 Trigger::Trigger(FileReader& props)
   : triggered(false), one_time_trigger(false)

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,12 +17,10 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "display/display.hpp"
 #include "display/shader_object.hpp"
 #include "particle_system.hpp"
-#include "display/drawing_request.hpp"
 #include "display/opengl_state.hpp"
 #include "deform_drawer.hpp"
 

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,12 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <math.h>
-#include <iostream>
 #include "particle_system.hpp"
 #include "display/scene_context.hpp"
-#include "math/vector2f.hpp"
-#include "display/color.hpp"
 #include "util/file_reader.hpp"
 #include "spark_drawer.hpp"
 #include "deform_drawer.hpp"

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,10 +18,8 @@
 
 #include "display/drawing_context.hpp"
 #include "util/file_reader.hpp"
-#include "display/drawing_request.hpp"
 #include "display/vertex_array_drawing_request.hpp"
 #include "particle_system.hpp"
-#include "display/color.hpp"
 #include "spark_drawer.hpp"
 
 SparkDrawer::SparkDrawer(FileReader& props)

Modified: trunk/windstille/src/physfs/physfs_stream.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,8 +18,6 @@
 
 #include "physfs_stream.hpp"
 
-#include <assert.h>
-#include <physfs.h>
 #include <stdexcept>
 #include <sstream>
 

Modified: trunk/windstille/src/properties/properties.cpp
===================================================================
--- trunk/windstille/src/properties/properties.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/properties/properties.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,7 +19,6 @@
 #include <sstream>
 #include <stdexcept>
 
-#include "property.hpp"
 #include "property_set.hpp"
 #include "properties.hpp"
 

Modified: trunk/windstille/src/properties/property.cpp
===================================================================
--- trunk/windstille/src/properties/property.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/properties/property.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "property.hpp"
 
 
 

Modified: trunk/windstille/src/properties/property_set.cpp
===================================================================
--- trunk/windstille/src/properties/property_set.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/properties/property_set.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,7 +19,6 @@
 #include <sstream>
 #include <stdexcept>
 
-#include "property.hpp"
 #include "property_set.hpp"
 
 PropertySet::PropertySet(const std::string& name_, PropertySet* parent_)

Modified: trunk/windstille/src/screen/armature_test.cpp
===================================================================
--- trunk/windstille/src/screen/armature_test.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/armature_test.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,15 +17,11 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include <physfs.h>
 
 #include "input/controller.hpp"
-#include "display/display.hpp"
 #include "screen_manager.hpp"
-#include "display/display.hpp"
 #include "armature/pose.hpp"
-#include "armature/model.hpp"
 #include "armature_test.hpp"
 
 ArmatureTest::ArmatureTest()

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,13 +18,7 @@
 
 #include "screen/game_session.hpp"
 
-#include <math.h>
-#include <sstream>
-#include <stdarg.h>
 
-#include <squirrel.h> 
-#include <sqstdio.h> 
-#include <sqstdaux.h> 
 
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
@@ -36,7 +30,6 @@
 #include "hud/inventory.hpp"
 #include "hud/pda.hpp"
 #include "hud/speech_manager.hpp"
-#include "input/controller.hpp"
 #include "objects/player.hpp"
 #include "screen/screen_manager.hpp"
 #include "screen/view.hpp"

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,14 +17,9 @@
 */
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include "geometry_test.hpp"
-#include "math/rect.hpp"
 #include "app/console.hpp"
-#include "math/size.hpp"
-#include "app/controller_def.hpp"
 #include "input/controller.hpp"
-#include "screen_manager.hpp"
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,18 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
-#include <iostream>
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include "util/sexpr_file_reader.hpp"
 #include "input/controller.hpp"
 #include "display/display.hpp"
-#include "screen_manager.hpp"
 #include "app/menu_manager.hpp"
-#include "navigation/navigation_graph.hpp"
 #include "navigation/node.hpp"
-#include "navigation/edge_position.hpp"
 #include "navigation/edge.hpp"
 #include "navigation_test.hpp"
 

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,23 +17,12 @@
 */
 
 #include "app/menu_manager.hpp"
-#include "gui/gui_manager.hpp"
 #include "input/controller.hpp"
 #include "screen/particle_viewer.hpp"
-#include "screen_manager.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "display/display.hpp"
 
 // Components
-#include "gui/button.hpp"
-#include "gui/label.hpp"
-#include "gui/slider.hpp"
-#include "gui/root_component.hpp"
-#include "gui/grid_component.hpp"
-#include "gui/tab_component.hpp"
-#include "gui/list_view.hpp"
-#include "gui/text_view.hpp"
-#include "gui/automap.hpp"
 
 ParticleViewer::ParticleViewer()
   : sc(),

Modified: trunk/windstille/src/screen/screen.cpp
===================================================================
--- trunk/windstille/src/screen/screen.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/screen.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,19 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <math.h>
-#include <iostream>
 
-#include "display/display.hpp"
-#include "app/windstille_main.hpp"
-#include "screen.hpp"
-#include "font/fonts.hpp"
-#include "app/globals.hpp"
-#include "app/console.hpp"
-#include "app/config.hpp"
-#include "input/input_manager.hpp"
-#include "input/input_manager_sdl.hpp"
-#include "sound/sound_manager.hpp"
+#include "screen/screen.hpp"
 
 Screen::Screen()
 {

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -20,22 +20,16 @@
 
 #include <boost/format.hpp>
 
-#include <boost/filesystem.hpp>
-#include <iostream>
 
 #include "app/config.hpp"
-#include "app/globals.hpp"
 #include "display/display.hpp"
 #include "display/opengl_window.hpp"
 #include "font/fonts.hpp"
-#include "hud/controller_help_window.hpp"
 #include "input/input_configurator.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "screen/game_session.hpp"
-#include "screen/screen.hpp"
 #include "sound/sound_manager.hpp"
-#include "util/pathname.hpp"
 
 ScreenManager screen_manager; 
 

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,13 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
-#include <algorithm>
 #include <physfs.h>
 
-#include "display/display.hpp"
-#include "sprite2d/manager.hpp"
-#include "math/math.hpp"
 #include "app/console.hpp"
 #include "input/controller.hpp"
 #include "display/surface_manager.hpp"

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,15 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 
-#include "app/console.hpp"
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
-#include "font/ttf_font.hpp"
 #include "input/controller.hpp"
-#include "screen_manager.hpp"
 #include "sprite3dview.hpp"
 
 Sprite3DView::Sprite3DView()

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include "screen/title_screen.hpp"
 
-#include <iostream>
 
 #include "display/display.hpp"
 #include "app/menu_manager.hpp"

Modified: trunk/windstille/src/scripting/game_objects.cpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/scripting/game_objects.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,10 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "wrapper.interface.hpp"
-#include "engine/entity.hpp"
+#include "scripting/game_objects.hpp"
+
 #include "engine/sector.hpp"
-#include "game_objects.hpp"
+#include "engine/game_object.hpp"
 
 namespace Scripting {
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,27 +17,20 @@
 */
 
 #include "wrapper.interface.hpp"
-#include "interface.hpp"
 
-#include <vector>
-#include <assert.h>
 
 #include "app/config.hpp"
-#include "display/display.hpp"
 #include "display/opengl_window.hpp"
 #include "engine/camera.hpp"
-#include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
 #include "engine/squirrel_thread.hpp"
 #include "font/fonts.hpp"
-#include "hud/controller_help_window.hpp"
 #include "hud/conversation.hpp"
 #include "hud/dialog_manager.hpp"
 #include "hud/pda.hpp"
 #include "hud/speech_manager.hpp"
 #include "screen/game_session.hpp"
 #include "sound/sound_manager.hpp"
-#include "util.hpp"
 #include "util/sexpr_file_reader.hpp"
 
 namespace Scripting

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/scripting/util.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,14 +17,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
-#include <sstream>
 #include <boost/scoped_ptr.hpp>
-#include <stdio.h>
-#include <iostream>
 
-#include <assert.h>
-#include "lisp/lisp.hpp"
 #include "lisp/parser.hpp"
 #include "lisp/properties.hpp"
 #include "lisp/writer.hpp"

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -3,15 +3,7 @@
  *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
-#include <config.h>
 
-#include <new>
-#include <assert.h>
-#include <string>
-#include <sstream>
-#include <squirrel.h>
-#include "squirrel_error.hpp"
-#include "wrapper.interface.hpp"
 
 namespace Scripting
 {

Modified: trunk/windstille/src/sound/sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/sound_file.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sound/sound_file.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,21 +18,14 @@
 
 /** Used SDL_mixer and glest source as reference */
 
-#include "sound_file.hpp"
 
 #include <string.h>
-#include <stdio.h>
-#include <stdint.h>
-#include <algorithm>
 #include <stdexcept>
 #include <sstream>
-#include <assert.h>
-#include <physfs.h>
 
 #include "ogg_sound_file.hpp"
 #include "wav_sound_file.hpp"
 
-#include <fstream>
 
 std::auto_ptr<SoundFile>
 SoundFile::load(const std::string& filename)

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,14 +17,10 @@
 */
 
 #include <boost/scoped_array.hpp>
-#include <assert.h>
 #include <stdexcept>
-#include <iostream>
 #include <sstream>
-#include <memory>
 
 #include "sound_file.hpp"
-#include "sound_source.hpp"
 #include "stream_sound_source.hpp"
 
 #include "sound_manager.hpp"

Modified: trunk/windstille/src/sound/wav_sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,7 +17,6 @@
 */
 
 #include <string.h>
-#include <stdint.h>
 #include <stdexcept>
 
 #include "wav_sound_file.hpp"

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,13 +19,6 @@
 
 #include "sprite2d/data.hpp"
 
-#include <physfs.h>
-#include <iostream>
-#include <boost/scoped_ptr.hpp>
-#include <sstream>
-#include <stdexcept>
-#include "util/util.hpp"
-#include "display/surface.hpp"
 #include "display/surface_manager.hpp"
 
 SpriteData::SpriteData(const Pathname& pathname)

Modified: trunk/windstille/src/sprite2d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sprite2d/manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,12 +19,8 @@
 
 #include "sprite2d/manager.hpp"
 
-#include <iostream>
-#include <assert.h>
 
-#include "util/pathname.hpp"
 #include "sprite2d/data.hpp"
-#include "sprite2d/sprite.hpp"
 
 SpriteManager::SpriteManager()
   : datas()

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,15 +19,8 @@
 
 #include "sprite2d/sprite.hpp"
 
-#include <math.h>
-#include <GL/gl.h>
-#include "display/drawing_request.hpp"
-#include "display/scene_context.hpp"
 #include "sprite2d/data.hpp"
-#include "sprite2d/manager.hpp"
 #include "display/surface_drawing_parameters.hpp"
-#include "display/color.hpp"
-#include "util/util.hpp"
 
 Sprite::Sprite()
   : data(),

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,17 +19,10 @@
 #include "sprite3d/data.hpp"
 
 #include <boost/scoped_array.hpp>
-#include <iostream>
 #include <physfs.h>
-#include <string.h>
-#include <sstream>
-#include <stdexcept>
 
 #include "util/util.hpp"
-#include "util/pathname.hpp"
-#include "app/globals.hpp"
 #include "display/texture_manager.hpp"
-#include "display/texture.hpp"
 
 namespace sprite3d {
 

Modified: trunk/windstille/src/sprite3d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sprite3d/manager.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,7 +19,6 @@
 #include "sprite3d/manager.hpp"
 
 #include "sprite3d/data.hpp"
-#include "sprite3d/sprite3d.hpp"
 
 namespace sprite3d {
 

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -19,20 +19,10 @@
 #include "sprite3d/sprite3d.hpp"
 
 #include <boost/scoped_array.hpp>
-#include <assert.h>
-#include <vector>
-#include <stdint.h>
-#include <sstream>
-#include <stdexcept>
-#include <physfs.h>
 
-#include "display/drawing_request.hpp"
-#include "display/scene_context.hpp"
-#include "app/globals.hpp"
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "sprite3d/manager.hpp"
-#include "sprite3d/data.hpp"
 
 using namespace sprite3d;
 

Modified: trunk/windstille/src/tile/tile.cpp
===================================================================
--- trunk/windstille/src/tile/tile.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/tile/tile.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,8 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
-#include "app/globals.hpp"
 #include "tile.hpp"
 
 Tile::Tile(unsigned int arg_colmap)

Modified: trunk/windstille/src/tile/tile_description.cpp
===================================================================
--- trunk/windstille/src/tile/tile_description.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/tile/tile_description.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,17 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <iostream>
 #include <sstream>
 #include <stdexcept>
 
 #include "app/globals.hpp"
 #include "display/software_surface.hpp"
-#include "physfs/physfs_sdl.hpp"
-#include "tile/tile.hpp"
-#include "tile/tile_description.hpp"
+#include "math/rect.hpp"
 #include "tile/tile_factory.hpp"
-#include "tile/tile_packer.hpp"
 
 TileDescription::TileDescription(FileReader& props)
  : ids(),

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,23 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <string>
-#include <sstream>
-#include <assert.h>
-#include <sstream>
-#include <iostream>
-#include <boost/scoped_ptr.hpp>
 
-#include "app/globals.hpp"
 #include "tile.hpp"
 #include "tile_packer.hpp"
 #include "tile_factory.hpp"
-#include "tile_description.hpp"
 #include "util/sexpr_file_reader.hpp"
-#include "display/surface_manager.hpp"
 #include "display/software_surface.hpp"
-#include "display/texture.hpp"
-#include "physfs/physfs_sdl.hpp"
 
 /** Check if the given region of the given image is fully transparent */
 bool surface_empty(const SoftwareSurface& image, int sx, int sy, int w, int h)

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,17 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "tile/tile_map.hpp"
+
 #include <sstream>
 #include <stdexcept>
 #include <physfs.h>
-#include "tile_map.hpp"
-#include "tile.hpp"
-#include "tile_factory.hpp"
-#include "app/globals.hpp"
+
+#include "tile/tile.hpp"
+#include "tile/tile_factory.hpp"
 #include "screen/view.hpp"
 #include "display/vertex_array_drawing_request.hpp"
-#include "collision/collision_engine.hpp"
-#include <inttypes.h>
 
 TileMap::TileMap(FileReader& props)
   : field(),

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,10 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include <GL/glew.h>
-#include <GL/gl.h>
-#include "display/texture.hpp"
 #include "app/globals.hpp"
 #include "tile_packer.hpp"
 #include "util/util.hpp"

Modified: trunk/windstille/src/util/baby_xml.cpp
===================================================================
--- trunk/windstille/src/util/baby_xml.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/baby_xml.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,7 +18,6 @@
 
 #include <sstream>
 #include <stdexcept>
-#include <iostream>
 #include "baby_xml.hpp"
 
 class BabyXMLReader
@@ -283,7 +282,6 @@
 }
 
 #ifdef __TEST__
-// g++ -Wall -Werror -O2 -g -o baby_xml baby_xml.cpp -D__TEST__ 
 #include <iostream>
 
 int main(int argc, char** argv)

Modified: trunk/windstille/src/util/command_line.cpp
===================================================================
--- trunk/windstille/src/util/command_line.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/command_line.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -27,7 +27,6 @@
 **    (if your name is missing here, please add it)
 */
 
-#include "command_line.hpp"
 #include "command_line_generic.hpp"
 
 CommandLine::CommandLine()

Modified: trunk/windstille/src/util/command_line_generic.cpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/command_line_generic.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -30,7 +30,6 @@
 #include <iomanip>
 #include <iostream>
 #include <stdexcept>
-#include <stdio.h>
 
 #include "command_line_generic.hpp"
 

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "file_reader.hpp"
 
 #include <fstream>
 

Modified: trunk/windstille/src/util/getter.cpp
===================================================================
--- trunk/windstille/src/util/getter.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/getter.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -17,12 +17,9 @@
 */
 
 #include "math/vector2f.hpp"
-#include "math/vector3.hpp"
 #include "math/quaternion.hpp"
-#include "math/matrix.hpp"
 #include "display/color.hpp"
 #include "file_reader.hpp"
-#include "getter.hpp"
 
 bool get(const FileReader& reader, const char* name, Vector2f&  value)
 {

Modified: trunk/windstille/src/util/pathname.cpp
===================================================================
--- trunk/windstille/src/util/pathname.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/pathname.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -18,8 +18,6 @@
 
 #include "util/pathname.hpp"
 
-#include <assert.h>
-#include <iostream>
 #include <sstream>
 #include <boost/filesystem.hpp>
 

Modified: trunk/windstille/src/util/response_curve.cpp
===================================================================
--- trunk/windstille/src/util/response_curve.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/response_curve.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,8 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
-#include <iostream>
 #include "math/math.hpp"
 #include "response_curve.hpp"
 

Modified: trunk/windstille/src/util/sexpr_file_reader.cpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,16 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <assert.h>
 #include <string.h>
-#include <stdint.h>
 
-#include "lisp/parser.hpp"
 #include "lisp/getters.hpp"
-#include "display/color.hpp"
-#include "math/size.hpp"
-#include "math/vector2f.hpp"
-#include "math/vector3.hpp"
 #include "file_reader_impl.hpp"
 #include "sexpr_file_reader.hpp"
 

Modified: trunk/windstille/src/util/util.cpp
===================================================================
--- trunk/windstille/src/util/util.cpp	2009-08-24 20:03:22 UTC (rev 3042)
+++ trunk/windstille/src/util/util.cpp	2009-08-24 21:50:34 UTC (rev 3043)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "util.hpp"
 #include <fstream>
 
 std::string dirname(const std::string& filename)



From grumbel at mail.berlios.de  Mon Aug 24 23:52:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 23:52:17 +0200
Subject: [Windstille-commit] r3044 - trunk/windstille
Message-ID: <200908242152.n7OLqHu9028848@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 23:52:17 +0200 (Mon, 24 Aug 2009)
New Revision: 3044

Added:
   trunk/windstille/CODINGSTYLE
Log:
Some additions and cleanup to the CODINGSTYLE document

Added: trunk/windstille/CODINGSTYLE
===================================================================
--- trunk/windstille/CODINGSTYLE	2009-08-24 21:50:34 UTC (rev 3043)
+++ trunk/windstille/CODINGSTYLE	2009-08-24 21:52:17 UTC (rev 3044)
@@ -0,0 +1,138 @@
+Windstille Coding Style
+=======================
+
+[ Note: Not all current code follows these rules, but that might be
+  fixed in the future. Also don't follow these rules blindly, use your
+  brain in situation where divergence might provide an advantage. ]
+
+
+Indention
+=========
+
+* indent with two spaces
+
+* never use tabs
+
+* the used indention style can be reproduced with (might vary in
+  details):
+
+   astyle --style=ansi -s2 -S 
+
+* always have a new line before an opening braked, i.e. write:
+
+  if (foobar)
+  {
+   ...
+  }
+
+  not:
+
+  if (foobar) {
+   ...
+  }
+
+
+Naming
+======
+
+* s_ prefix for static variables
+
+* g_ prefix for global variables
+
+* class names are CamelCase
+
+* variables are lower_case
+
+* filenames are all lower_case
+
+
+Includes
+========
+
+* all #include directives are written relative to "src/", so write:
+
+  #include "app/windstille_main.hpp"
+
+  not:
+
+  #include "windstille_main.hpp"
+  #include "../app/windstille_main.hpp"
+  ...
+
+
+Exceptions
+==========
+
+* we use exceptions
+
+* (almost) always write an else clause to an if that throws or returns, i.e.:
+
+  if (error)
+  {
+    throw std::runtime_error(...);
+  }
+  else
+  {
+    // do something else
+  }
+
+* use std::runtime_error() and friends for errors
+
+
+Pointer and Memory Allocation
+=============================
+
+* use boost::scoped_ptr, boost::scoped_array, std::auto_ptr,
+  boost::shared_ptr, never manually delete or delete[]
+
+* prefer boost::scoped_ptr over std::auto_ptr
+
+* use RAII whenever possible
+
+* if a class isn't supposed to be copied by value, make assignment and
+  copy constructor private (maybe we should write our own class for
+  that or use boost::noncopyable):
+
+  private:
+    YourClass (const YourClass&);
+    YourClass& operator= (const YourClass&);
+
+
+Warnings
+========
+
+* all code must be at least -ansi -pedantic -Wall clean, we use
+  -Werror for development
+
+
+Other Stuff
+===========
+
+* we do not use macros in places where a template or inline function would do
+
+* we use float, not double
+
+* always use C++ style casts, never use C style casts
+
+* never write:
+  
+  int x, y;
+  
+  always use:
+
+  int x;
+  int y;
+
+* end all files with an /* EOF */ comment (use comment style
+  appropriate to your language)
+
+* "svn commit" early and often, do not wait till your changes have
+  turned into a huge unverifiable mess, do not keep your work private
+
+* the Google C++ Style Guide provides a good reference for style
+  decisions not covered in this document:
+
+  http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml
+
+
+# EOF #



From grumbel at mail.berlios.de  Mon Aug 24 23:54:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 23:54:32 +0200
Subject: [Windstille-commit] r3045 - trunk/windstille
Message-ID: <200908242154.n7OLsWaM029149@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 23:54:32 +0200 (Mon, 24 Aug 2009)
New Revision: 3045

Modified:
   trunk/windstille/SConscript
Log:
Use -isystem instead of -I for library includes to speed up scons, turn on some more warnings

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-24 21:52:17 UTC (rev 3044)
+++ trunk/windstille/SConscript	2009-08-24 21:54:32 UTC (rev 3045)
@@ -24,15 +24,20 @@
 debug_cxxflags = [
     "-O0",
     "-g",
-    "-ansi", "-pedantic",
+    "-ansi",
+    "-pedantic",
     "-Wall",
     "-Wextra",
     "-Wnon-virtual-dtor",
     "-Weffc++",
     "-Wconversion",
+    "-Werror",
     #"-Wshadow",
-    "-Werror",
+    #"-Wunreachable-code",
+    #"-Winline",
     ]
+
+windstille_cxxflags = debug_cxxflags
 
 # YACC
 yacc_test_text = """
@@ -112,8 +117,7 @@
         self.features = {
             "64bit" : 0,
             "cwiid" : 0
-            }
-        
+            }        
 
     def build_all(self):
         self.configure()
@@ -125,7 +129,7 @@
         self.build_windstille_editor()
         self.build_windstille_data()
         self.build_testapps()
-
+        
     def configure(self):
         conf_env = Environment()
 
@@ -210,7 +214,7 @@
 
     def build_wstlib(self):
         wstlib_env    = Environment(CPPPATH=['src', 'external/binreloc-2.0/', "src/scripting/"],
-                                    CXXFLAGS=debug_cxxflags,
+                                    CXXFLAGS=windstille_cxxflags,
                                     CPPDEFINES=["HAVE_BINRELOC"])
         self.util_lib      = wstlib_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
         self.math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
@@ -219,13 +223,13 @@
         
         # libphysfs
         physfs_env = wstlib_env.Clone()
-        physfs_env.ParseConfig('sdl-config --cflags --libs')
+        physfs_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
         self.physfs_lib = physfs_env.StaticLibrary('src/physfs', Glob('src/physfs/*.cpp'))
 
         # libdisplay
         display_env = wstlib_env.Clone()
-        display_env.ParseConfig('sdl-config --cflags --libs')
-        display_env.ParseConfig('freetype-config --libs --cflags')
+        display_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
+        display_env.ParseConfig('freetype-config --libs --cflags | sed "s/-I/-isystem/g"')
         self.display_lib = display_env.StaticLibrary('display', 
                                                      Glob('src/font/*.cpp') +
                                                      Glob('src/display/*.cpp') +
@@ -234,7 +238,7 @@
                                                      Glob('src/sprite3d/*.cpp'))
 
     def build_windstille(self):
-        windstille_env = Environment(CXXFLAGS=debug_cxxflags,
+        windstille_env = Environment(CXXFLAGS=windstille_cxxflags,
                                      CPPPATH=['src', '.', 'external/SQUIRREL2/include/', 'src/scripting/'],
                                      CPPDEFINES=["HAVE_BINRELOC"],
                                      LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, self.physfs_lib,
@@ -245,8 +249,8 @@
                                            # FIXME: Add configure checks for exact boost library name
                                            'boost_signals-mt', 'boost_filesystem-mt'])
 
-        windstille_env.ParseConfig('sdl-config --cflags --libs')
-        windstille_env.ParseConfig('freetype-config --libs --cflags')
+        windstille_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
+        windstille_env.ParseConfig('freetype-config --libs --cflags | sed "s/-I/-isystem/g"')
 
         if self.features['64bit']:
             windstille_env.Append(CPPDEFINES = '_SQ64')
@@ -273,15 +277,15 @@
     def build_windstille_editor(self):
         editor_env = Environment(CPPPATH=['src'],
                                  CPPDEFINES=["HAVE_BINRELOC"],
-                                 CXXFLAGS=debug_cxxflags,
+                                 CXXFLAGS=windstille_cxxflags,
                                  LIBS = [self.particles_lib, self.navgraph_lib, self.display_lib,
                                          self.util_lib, self.physfs_lib, self.math_lib, self.binreloc_lib,
                                          'GL', 'GLEW', 'SDL_image', 'physfs', 'boost_filesystem-mt'])
 
-        editor_env.ParseConfig('Magick++-config --libs --cppflags')
-        editor_env.ParseConfig('sdl-config --cflags --libs')
-        editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
-        editor_env.ParseConfig('pkg-config --cflags --libs libpng')
+        editor_env.ParseConfig('Magick++-config --libs --cppflags | sed "s/-I/-isystem/g"')
+        editor_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
+        editor_env.ParseConfig('pkg-config --cflags --libs libcurl | sed "s/-I/-isystem/g"')
+        editor_env.ParseConfig('pkg-config --cflags --libs libpng | sed "s/-I/-isystem/g"')
 
         # Turn -I options into -isystem, so we don't get warnings from external libraries
         editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 | sed "s/-I/-isystem/g"')
@@ -292,7 +296,7 @@
     def build_testapps(self):
         env = Environment(OBJPREFIX="test__",
                           CPPPATH=['src'],
-                          CXXFLAGS=debug_cxxflags,
+                          CXXFLAGS=windstille_cxxflags,
                           CPPDEFINES=["__TEST__"])
         env.Program("test_babyxml", ["src/util/baby_xml.cpp"])
         env.Program("test_response_curve", ["src/util/response_curve.cpp"])



From grumbel at mail.berlios.de  Mon Aug 24 23:54:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 23:54:53 +0200
Subject: [Windstille-commit] r3046 - trunk/windstille/src/objects
Message-ID: <200908242154.n7OLsr0Y029202@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 23:54:53 +0200 (Mon, 24 Aug 2009)
New Revision: 3046

Modified:
   trunk/windstille/src/objects/trigger.cpp
Log:
-Weffc++ cleaness

Modified: trunk/windstille/src/objects/trigger.cpp
===================================================================
--- trunk/windstille/src/objects/trigger.cpp	2009-08-24 21:54:32 UTC (rev 3045)
+++ trunk/windstille/src/objects/trigger.cpp	2009-08-24 21:54:53 UTC (rev 3046)
@@ -21,7 +21,11 @@
 #include "objects/player.hpp"
 
 Trigger::Trigger(FileReader& props)
-  : triggered(false), one_time_trigger(false)
+  : area(),
+    callback(),
+    triggered(false), 
+    last_trigger(),
+    one_time_trigger(false)
 {
   float x = -1;
   float y = -1;



From grumbel at mail.berlios.de  Mon Aug 24 23:57:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 24 Aug 2009 23:57:56 +0200
Subject: [Windstille-commit] r3047 - trunk/windstille
Message-ID: <200908242157.n7OLvuI2029616@sheep.berlios.de>

Author: grumbel
Date: 2009-08-24 23:57:56 +0200 (Mon, 24 Aug 2009)
New Revision: 3047

Modified:
   trunk/windstille/
Log:
Some svn:ignore


Property changes on: trunk/windstille
___________________________________________________________________
Name: svn:ignore
   - cache
config.log
custom.py
options.cache
.sconf_temp
.sconsign.dblite
windstille
windstille-editor

   + build
cache
config.log
custom.py
old
options.cache
.sconf_temp
.sconsign.dblite
windstille
windstille-editor




From grumbel at mail.berlios.de  Tue Aug 25 01:21:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 01:21:27 +0200
Subject: [Windstille-commit] r3048 - trunk/windstille
Message-ID: <200908242321.n7ONLR5G025430@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 01:21:24 +0200 (Tue, 25 Aug 2009)
New Revision: 3048

Modified:
   trunk/windstille/SConscript
Log:
Use $CXX instead of cpp

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-24 21:57:56 UTC (rev 3047)
+++ trunk/windstille/SConscript	2009-08-24 23:21:24 UTC (rev 3048)
@@ -200,7 +200,7 @@
         env = Environment(MINISWIG=miniswig_bin)
 
         env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
-                                ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
+                                ["$CXX -E -Isrc/ -x c -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
                     ['src/scripting/interface.hpp',
                      'src/scripting/game_objects.hpp'])
 



From grumbel at mail.berlios.de  Tue Aug 25 01:22:30 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 01:22:30 +0200
Subject: [Windstille-commit] r3049 - in trunk/windstille/src: app armature
	collision display editor engine font gui hud input lisp math
	navigation objects particles physfs properties scenegraph
	screen scripting sound sprite2d tile util
Message-ID: <200908242322.n7ONMUl1027264@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 01:22:11 +0200 (Tue, 25 Aug 2009)
New Revision: 3049

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/controller_def.cpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/armature/armature.cpp
   trunk/windstille/src/armature/armature.hpp
   trunk/windstille/src/armature/bone.cpp
   trunk/windstille/src/armature/ipo_curve.cpp
   trunk/windstille/src/armature/mesh.cpp
   trunk/windstille/src/armature/model.cpp
   trunk/windstille/src/armature/pose.cpp
   trunk/windstille/src/armature/pose.hpp
   trunk/windstille/src/collision/collision_data.cpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/collision/collision_engine.hpp
   trunk/windstille/src/collision/collision_object.hpp
   trunk/windstille/src/collision/collision_test.cpp
   trunk/windstille/src/collision/stair_contact.cpp
   trunk/windstille/src/collision/stair_contact.hpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/display/drawing_parameters.hpp
   trunk/windstille/src/display/drawing_request.hpp
   trunk/windstille/src/display/framebuffer.cpp
   trunk/windstille/src/display/framebuffer.hpp
   trunk/windstille/src/display/opengl_state.cpp
   trunk/windstille/src/display/render_buffer.cpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/shader_object.cpp
   trunk/windstille/src/display/shader_program.cpp
   trunk/windstille/src/display/software_surface.cpp
   trunk/windstille/src/display/surface.hpp
   trunk/windstille/src/display/surface_drawing_parameters.hpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.hpp
   trunk/windstille/src/editor/about_window.cpp
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/decal_rotate_control_point.cpp
   trunk/windstille/src/editor/decal_rotate_control_point.hpp
   trunk/windstille/src/editor/decal_scale_control_point.cpp
   trunk/windstille/src/editor/decal_scale_control_point.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/functor_command.hpp
   trunk/windstille/src/editor/group_command.hpp
   trunk/windstille/src/editor/layer.hpp
   trunk/windstille/src/editor/layer_commands.hpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/layer_widget.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/minimap_widget.cpp
   trunk/windstille/src/editor/navgraph_insert_tool.cpp
   trunk/windstille/src/editor/navgraph_insert_tool.hpp
   trunk/windstille/src/editor/navgraph_select_tool.cpp
   trunk/windstille/src/editor/navgraph_select_tool.hpp
   trunk/windstille/src/editor/node_selection.cpp
   trunk/windstille/src/editor/object_commands.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/object_model_factory.cpp
   trunk/windstille/src/editor/object_model_factory.hpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/particle_system_object_model.cpp
   trunk/windstille/src/editor/particle_system_object_model.hpp
   trunk/windstille/src/editor/scroll_tool.cpp
   trunk/windstille/src/editor/scroll_tool.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
   trunk/windstille/src/editor/sprite_object_model.cpp
   trunk/windstille/src/editor/sprite_object_model.hpp
   trunk/windstille/src/editor/undo_manager.cpp
   trunk/windstille/src/editor/undo_manager.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/editor/zoom_tool.cpp
   trunk/windstille/src/editor/zoom_tool.hpp
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/engine/physics.hpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/border_font_effect.hpp
   trunk/windstille/src/font/no_font_effect.cpp
   trunk/windstille/src/font/no_font_effect.hpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/font/ttf_font.hpp
   trunk/windstille/src/gui/automap.cpp
   trunk/windstille/src/gui/automap.hpp
   trunk/windstille/src/gui/button.cpp
   trunk/windstille/src/gui/button.hpp
   trunk/windstille/src/gui/component.cpp
   trunk/windstille/src/gui/grid_component.cpp
   trunk/windstille/src/gui/grid_component.hpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/group_component.hpp
   trunk/windstille/src/gui/gui_manager.cpp
   trunk/windstille/src/gui/label.cpp
   trunk/windstille/src/gui/label.hpp
   trunk/windstille/src/gui/list_view.cpp
   trunk/windstille/src/gui/list_view.hpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_component.hpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/root_component.cpp
   trunk/windstille/src/gui/root_component.hpp
   trunk/windstille/src/gui/slider.cpp
   trunk/windstille/src/gui/slider.hpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/gui/tab_component.hpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/controller.hpp
   trunk/windstille/src/input/controller_description.cpp
   trunk/windstille/src/input/controller_description.hpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager_impl.cpp
   trunk/windstille/src/input/input_manager_impl.hpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/input/wiimote.hpp
   trunk/windstille/src/lisp/getters.cpp
   trunk/windstille/src/lisp/getters.hpp
   trunk/windstille/src/lisp/lexer.cpp
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/parser.hpp
   trunk/windstille/src/lisp/properties.cpp
   trunk/windstille/src/lisp/properties.hpp
   trunk/windstille/src/lisp/writer.cpp
   trunk/windstille/src/math/line.cpp
   trunk/windstille/src/math/origin.hpp
   trunk/windstille/src/math/quad.hpp
   trunk/windstille/src/math/quaternion.cpp
   trunk/windstille/src/math/quaternion.hpp
   trunk/windstille/src/math/random.cpp
   trunk/windstille/src/math/rect.cpp
   trunk/windstille/src/navigation/edge.cpp
   trunk/windstille/src/navigation/edge.hpp
   trunk/windstille/src/navigation/edge_position.cpp
   trunk/windstille/src/navigation/navigation_graph.cpp
   trunk/windstille/src/navigation/node.cpp
   trunk/windstille/src/navigation/node.hpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/bomb.cpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/elevator.cpp
   trunk/windstille/src/objects/grenade.cpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/nightvision.hpp
   trunk/windstille/src/objects/pistol.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/objects/test_object.cpp
   trunk/windstille/src/objects/trigger.cpp
   trunk/windstille/src/objects/vrdummy.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/deform_drawer.hpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/particle_system.hpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/particles/spark_drawer.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.hpp
   trunk/windstille/src/physfs/physfs_sdl.cpp
   trunk/windstille/src/physfs/physfs_stream.cpp
   trunk/windstille/src/properties/properties.cpp
   trunk/windstille/src/properties/property_set.cpp
   trunk/windstille/src/properties/property_set.hpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
   trunk/windstille/src/screen/armature_test.cpp
   trunk/windstille/src/screen/armature_test.hpp
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/geometry_test.hpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
   trunk/windstille/src/screen/sprite2dview.hpp
   trunk/windstille/src/screen/sprite3dview.hpp
   trunk/windstille/src/screen/title_screen.hpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/squirrel_error.cpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/scripting/wrapper.interface.hpp
   trunk/windstille/src/sound/ogg_sound_file.cpp
   trunk/windstille/src/sound/ogg_sound_file.hpp
   trunk/windstille/src/sound/sound_file.cpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/sound_source.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/sound/stream_sound_source.hpp
   trunk/windstille/src/sound/wav_sound_file.cpp
   trunk/windstille/src/sound/wav_sound_file.hpp
   trunk/windstille/src/sprite2d/sprite.hpp
   trunk/windstille/src/tile/tile.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/util/baby_xml.cpp
   trunk/windstille/src/util/command_line.cpp
   trunk/windstille/src/util/command_line_generic.cpp
   trunk/windstille/src/util/command_line_generic.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_writer.cpp
   trunk/windstille/src/util/getter.cpp
   trunk/windstille/src/util/getter.hpp
   trunk/windstille/src/util/response_curve.cpp
   trunk/windstille/src/util/sexpr_file_reader.cpp
   trunk/windstille/src/util/sexpr_file_reader.hpp
Log:
Use proper DIR/FILENAME path in all includes instead of just FILENAME

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/app/config.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include "app/windstille.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "util/command_line.hpp"
-#include "globals.hpp"
+#include "app/globals.hpp"
 
 #define _(A) A
 

Modified: trunk/windstille/src/app/controller_def.cpp
===================================================================
--- trunk/windstille/src/app/controller_def.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/app/controller_def.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "controller_def.hpp"
+#include "app/controller_def.hpp"
 
 WindstilleControllerDescription::WindstilleControllerDescription()
 {

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,31 +16,32 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "app/menu_manager.hpp"
+
 #include <boost/bind.hpp>
 
-#include "config.hpp"
-#include "sound/sound_manager.hpp"
+#include "app/config.hpp"
 #include "display/display.hpp"
+#include "display/opengl_window.hpp"
+#include "engine/sector.hpp"
 #include "font/fonts.hpp"
-#include "screen/game_session.hpp"
 #include "gui/group_component.hpp"
+#include "gui/menu_item.hpp"
 #include "gui/root_component.hpp"
 #include "gui/text_view.hpp"
+#include "screen/armature_test.hpp"
+#include "screen/game_session.hpp"
+#include "screen/geometry_test.hpp"
+#include "screen/navigation_test.hpp"
 #include "screen/particle_viewer.hpp"
 #include "screen/screen_manager.hpp"
-#include "engine/sector.hpp"
 #include "screen/sprite3dview.hpp"
-#include "screen/geometry_test.hpp"
-#include "screen/armature_test.hpp"
-#include "screen/navigation_test.hpp"
-#include "gui/menu_item.hpp"
-#include "display/opengl_window.hpp"
+#include "sound/sound_manager.hpp"
 #ifdef HAVE_CWIID
-#include "input/wiimote.hpp"
+#  include "input/wiimote.hpp"
 #endif
+#include "app/windstille.hpp"
 #include "gui/menu.hpp"
-#include "app/windstille.hpp"
-#include "menu_manager.hpp"
 
 void
 MenuManager::display_option_menu()

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include <boost/filesystem.hpp>
 #include <physfs.h>
 
-#include "config.hpp"
+#include "app/config.hpp"
 #include "display/opengl_window.hpp"
 #include "display/surface_manager.hpp"
 #include "display/texture_manager.hpp"
@@ -36,7 +36,7 @@
 #include "sprite3d/manager.hpp"
 #include "tile/tile_factory.hpp"
 #include "util/system.hpp"
-#include "windstille_main.hpp"
+#include "app/windstille_main.hpp"
 
 WindstilleMain::WindstilleMain()
 {

Modified: trunk/windstille/src/armature/armature.cpp
===================================================================
--- trunk/windstille/src/armature/armature.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/armature.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #include <stdexcept>
 #include "display/opengl_state.hpp"
 #include "display/display.hpp"
-#include "pose.hpp"
-#include "armature.hpp"
+#include "armature/pose.hpp"
+#include "armature/armature.hpp"
 
 Armature::Armature(FileReader& reader)
   : name(),

Modified: trunk/windstille/src/armature/armature.hpp
===================================================================
--- trunk/windstille/src/armature/armature.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/armature.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_ARMATURE_ARMATURE_HPP
 
 #include <vector>
-#include "bone.hpp"
+#include "armature/bone.hpp"
 #include "util/file_reader.hpp"
 
 class Pose;

Modified: trunk/windstille/src/armature/bone.cpp
===================================================================
--- trunk/windstille/src/armature/bone.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/bone.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "bone.hpp"
+#include "armature/bone.hpp"
 
 Bone::Bone()
   : name(),

Modified: trunk/windstille/src/armature/ipo_curve.cpp
===================================================================
--- trunk/windstille/src/armature/ipo_curve.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/ipo_curve.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "ipo_curve.hpp"
+#include "armature/ipo_curve.hpp"
 
 IpoCurve::IpoCurve()
   : points()

Modified: trunk/windstille/src/armature/mesh.cpp
===================================================================
--- trunk/windstille/src/armature/mesh.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/mesh.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "display/texture_manager.hpp"
-#include "armature.hpp"
-#include "mesh.hpp"
+#include "armature/armature.hpp"
+#include "armature/mesh.hpp"
 
 Mesh::Mesh(FileReader& reader, const std::string& path)
   : name(),

Modified: trunk/windstille/src/armature/model.cpp
===================================================================
--- trunk/windstille/src/armature/model.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,8 +18,8 @@
 
 #include <stdexcept>
 #include "util/file_reader.hpp"
-#include "mesh.hpp"
-#include "model.hpp"
+#include "armature/mesh.hpp"
+#include "armature/model.hpp"
 
 Model::Model(FileReader& reader, const std::string& path)
   : name(),

Modified: trunk/windstille/src/armature/pose.cpp
===================================================================
--- trunk/windstille/src/armature/pose.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/pose.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <stdexcept>
 #include "util/file_reader.hpp"
-#include "pose.hpp"
+#include "armature/pose.hpp"
 
 Pose::Pose(FileReader& reader)
   : name(),

Modified: trunk/windstille/src/armature/pose.hpp
===================================================================
--- trunk/windstille/src/armature/pose.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/armature/pose.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <string>
 #include <vector>
 
-#include "pose_bone.hpp"
+#include "armature/pose_bone.hpp"
 
 class FileReader;
 

Modified: trunk/windstille/src/collision/collision_data.cpp
===================================================================
--- trunk/windstille/src/collision/collision_data.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/collision_data.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "collision_data.hpp"
+#include "collision/collision_data.hpp"
 
 CollisionData
 CollisionData::merge(const CollisionData &r)

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,8 +17,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "collision_test.hpp"
-#include "collision_engine.hpp"
+#include "collision/collision_test.hpp"
+#include "collision/collision_engine.hpp"
 #include "tile/tile_map.hpp"
 
 std::vector<Rectf> tilemap_collision_list(TileMap *tilemap, const Rectf &r, bool is_ground);

Modified: trunk/windstille/src/collision/collision_engine.hpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/collision_engine.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #ifndef HEADER_WINDSTILLE_COLLISION_COLLISION_ENGINE_HPP
 #define HEADER_WINDSTILLE_COLLISION_COLLISION_ENGINE_HPP
 
-#include "collision_object.hpp"
+#include "collision/collision_object.hpp"
 
 class DrawingContext;
 

Modified: trunk/windstille/src/collision/collision_object.hpp
===================================================================
--- trunk/windstille/src/collision/collision_object.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/collision_object.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include <boost/signals.hpp>
 #include "math/vector2f.hpp"
 #include "math/rect.hpp"
-#include "collision_data.hpp"
+#include "collision/collision_data.hpp"
 
 class DrawingContext;
 class TileMap;

Modified: trunk/windstille/src/collision/collision_test.cpp
===================================================================
--- trunk/windstille/src/collision/collision_test.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/collision_test.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "collision_test.hpp"
+#include "collision/collision_test.hpp"
 #include <assert.h>
 
 SweepResult simple_sweep_1d(float a, float aw, float av,

Modified: trunk/windstille/src/collision/stair_contact.cpp
===================================================================
--- trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/stair_contact.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"
-#include "stair_contact.hpp"
+#include "collision/stair_contact.hpp"
 
 StairContact::StairContact(TileMap* tilemap_, const Point& pos_)
   : tilemap(tilemap_), 

Modified: trunk/windstille/src/collision/stair_contact.hpp
===================================================================
--- trunk/windstille/src/collision/stair_contact.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/collision/stair_contact.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_COLLISION_STAIR_CONTACT_HPP
 #define HEADER_WINDSTILLE_COLLISION_STAIR_CONTACT_HPP
 
-#include "contact.hpp"
+#include "collision/contact.hpp"
 
 class TileMap;
 

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/display.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -25,7 +25,7 @@
 #include "math/rect.hpp"
 #include "math/quad.hpp"
 #include "math/line.hpp"
-#include "color.hpp"
+#include "display/color.hpp"
 #include "display/framebuffer.hpp"
 
 class Pathname;

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,8 +23,8 @@
 #include "math/matrix.hpp"
 #include "math/rect.hpp"
 #include <vector>
-#include "color.hpp"
-#include "drawing_request.hpp"
+#include "display/color.hpp"
+#include "display/drawing_request.hpp"
 
 class Texture;
 class Surface;

Modified: trunk/windstille/src/display/drawing_parameters.hpp
===================================================================
--- trunk/windstille/src/display/drawing_parameters.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/drawing_parameters.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 
-#include "color.hpp"
+#include "display/color.hpp"
 
 /** Helper class which holds all the parameters that you can tweak
     when you want to draw a Quad */

Modified: trunk/windstille/src/display/drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/drawing_request.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/drawing_request.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include "math/vector2f.hpp"
 #include "math/rect.hpp"
 #include "math/matrix.hpp"
-#include "texture.hpp"
+#include "display/texture.hpp"
 
 /** 
  */

Modified: trunk/windstille/src/display/framebuffer.cpp
===================================================================
--- trunk/windstille/src/display/framebuffer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/framebuffer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,8 +18,8 @@
 
 #include <GL/glew.h>
 #include "util/util.hpp"
-#include "render_buffer.hpp"
-#include "framebuffer.hpp"
+#include "display/render_buffer.hpp"
+#include "display/framebuffer.hpp"
 
 class FramebufferImpl
 {

Modified: trunk/windstille/src/display/framebuffer.hpp
===================================================================
--- trunk/windstille/src/display/framebuffer.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/framebuffer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_FRAMEBUFFER_HPP
 #define HEADER_WINDSTILLE_DISPLAY_FRAMEBUFFER_HPP
 
-#include "texture.hpp"
+#include "display/texture.hpp"
 
 class FramebufferImpl;
 

Modified: trunk/windstille/src/display/opengl_state.cpp
===================================================================
--- trunk/windstille/src/display/opengl_state.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/opengl_state.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 
 #include <iostream>
 
-#include "texture.hpp"
+#include "display/texture.hpp"
 #include "display/color.hpp"
 #include "util/util.hpp"
 

Modified: trunk/windstille/src/display/render_buffer.cpp
===================================================================
--- trunk/windstille/src/display/render_buffer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/render_buffer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <GL/glew.h>
 
-#include "render_buffer.hpp"
+#include "display/render_buffer.hpp"
 
 class RenderBufferImpl
 {

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include "display/surface.hpp"
 #include "display/opengl_state.hpp"
 
-#include "scene_context.hpp"
+#include "display/scene_context.hpp"
 
 // The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
 #define LIGHTMAP_DIV 4

Modified: trunk/windstille/src/display/shader_object.cpp
===================================================================
--- trunk/windstille/src/display/shader_object.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/shader_object.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include <iostream>
 
 #include "util/util.hpp"
-#include "shader_object.hpp"
+#include "display/shader_object.hpp"
 
 /** Read a file, user must free() the returned pointer */
 static GLchar* load_file(const char* filename)

Modified: trunk/windstille/src/display/shader_program.cpp
===================================================================
--- trunk/windstille/src/display/shader_program.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/shader_program.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,9 +18,9 @@
 
 #include <iostream>
 
-#include "shader_object.hpp"
+#include "display/shader_object.hpp"
 #include "util/util.hpp"
-#include "shader_program.hpp"
+#include "display/shader_program.hpp"
 
 class ShaderProgramImpl
 {

Modified: trunk/windstille/src/display/software_surface.cpp
===================================================================
--- trunk/windstille/src/display/software_surface.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/software_surface.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -24,7 +24,7 @@
 #include <SDL_image.h>
 
 #include "math/rect.hpp"
-#include "software_surface.hpp"
+#include "display/software_surface.hpp"
 
 class SoftwareSurfaceImpl
 {

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/surface.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -25,7 +25,7 @@
 #include "util/pathname.hpp"
 #include "math/rect.hpp"
 #include "math/size.hpp"
-#include "texture.hpp"
+#include "display/texture.hpp"
 
 class SurfaceDrawingParameters;
 class SurfaceImpl;

Modified: trunk/windstille/src/display/surface_drawing_parameters.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_parameters.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/surface_drawing_parameters.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include "math/vector2f.hpp"
-#include "color.hpp"
+#include "display/color.hpp"
 
 /** Helper class which holds all the parameters that you can tweak
     when you want to draw a Surface */

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,13 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "surface_manager.hpp"
+#include "display/surface_manager.hpp"
 
 #include <sstream>
 #include <stdexcept>
 
-#include "software_surface.hpp"
-#include "texture_packer.hpp"
+#include "display/software_surface.hpp"
+#include "display/texture_packer.hpp"
 
 
 SurfaceManager::SurfaceManager()

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #include "display/text_area.hpp"
 #include "util/baby_xml.hpp"
 #include "font/fonts.hpp"
-#include "display.hpp"
+#include "display/display.hpp"
 
 struct TextAreaCommand 
 {

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #include "display/texture_manager.hpp"
 
 
-#include "texture.hpp"
-#include "software_surface.hpp"
+#include "display/texture.hpp"
+#include "display/software_surface.hpp"
 
 TextureManager::TextureManager()
   : textures()

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include "display/software_surface.hpp"
 
-#include "texture_packer.hpp"
+#include "display/texture_packer.hpp"
 
 class TextureSpace
 {

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 
 #include "display/opengl_state.hpp"
-#include "vertex_array_drawing_request.hpp"
+#include "display/vertex_array_drawing_request.hpp"
 
 VertexArrayDrawingRequest::VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, 
                                                      const Matrix& modelview_)

Modified: trunk/windstille/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,10 +20,10 @@
 #define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
 
 #include <vector>
-#include "color.hpp"
+#include "display/color.hpp"
 #include "math/matrix.hpp"
 #include "display/texture.hpp"
-#include "drawing_request.hpp"
+#include "display/drawing_request.hpp"
 
 /** */
 class VertexArrayDrawingRequest : public DrawingRequest

Modified: trunk/windstille/src/editor/about_window.cpp
===================================================================
--- trunk/windstille/src/editor/about_window.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/about_window.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include <gtkmm/stock.h>
-#include "about_window.hpp"
+#include "editor/about_window.hpp"
 
 AboutWindow::AboutWindow()
 {

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/control_point.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <iostream>
 #include "display/scene_context.hpp"
-#include "control_point.hpp"
+#include "editor/control_point.hpp"
 
 ControlPointHandle
 ControlPoint::create(const Vector2f& pos)

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,10 +23,10 @@
 #include "display/drawing_parameters.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
-#include "decal_scale_control_point.hpp"
-#include "decal_rotate_control_point.hpp"
+#include "editor/decal_scale_control_point.hpp"
+#include "editor/decal_rotate_control_point.hpp"
 
-#include "decal_object_model.hpp"
+#include "editor/decal_object_model.hpp"
 
 ObjectModelHandle
 DecalObjectModel::create(const std::string& name, const Vector2f& pos,

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,10 +20,10 @@
 #define HEADER_WINDSTILLE_EDITOR_DECAL_OBJECT_MODEL_HPP
 
 #include "math/quad.hpp"
-#include "control_point.hpp"
+#include "editor/control_point.hpp"
 #include "display/surface.hpp"
 #include "display/software_surface.hpp"
-#include "object_model.hpp"
+#include "editor/object_model.hpp"
 
 class DecalObjectModel : public ObjectModel
 {

Modified: trunk/windstille/src/editor/decal_rotate_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/decal_rotate_control_point.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "display/scene_context.hpp"
-#include "decal_rotate_control_point.hpp"
+#include "editor/decal_rotate_control_point.hpp"
 
 DecalRotateControlPoint::DecalRotateControlPoint(DecalObjectModel* object_, float ctrl_angle_, const Vector2f& pos_)
   : ControlPoint(Surface(Pathname("editor/rotate_handle.png")), pos_),

Modified: trunk/windstille/src/editor/decal_rotate_control_point.hpp
===================================================================
--- trunk/windstille/src/editor/decal_rotate_control_point.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/decal_rotate_control_point.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_DECAL_ROTATE_CONTROL_POINT_HPP
 #define HEADER_WINDSTILLE_EDITOR_DECAL_ROTATE_CONTROL_POINT_HPP
 
-#include "decal_object_model.hpp"
-#include "control_point.hpp"
+#include "editor/decal_object_model.hpp"
+#include "editor/control_point.hpp"
 
 class DecalRotateControlPoint : public ControlPoint
 {

Modified: trunk/windstille/src/editor/decal_scale_control_point.cpp
===================================================================
--- trunk/windstille/src/editor/decal_scale_control_point.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/decal_scale_control_point.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "display/scene_context.hpp"
-#include "decal_scale_control_point.hpp"
+#include "editor/decal_scale_control_point.hpp"
 
 DecalScaleControlPoint::DecalScaleControlPoint(DecalObjectModel* object_, float ctrl_angle_, const Vector2f& pos_, 
                                                bool x_scale_, bool y_scale_)

Modified: trunk/windstille/src/editor/decal_scale_control_point.hpp
===================================================================
--- trunk/windstille/src/editor/decal_scale_control_point.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/decal_scale_control_point.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #define HEADER_WINDSTILLE_EDITOR_DECAL_SCALE_CONTROL_POINT_HPP
 
 #include "math/vector2f.hpp"
-#include "control_point.hpp"
-#include "decal_object_model.hpp"
+#include "editor/control_point.hpp"
+#include "editor/decal_object_model.hpp"
 
 class DecalScaleControlPoint : public ControlPoint
 {

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -33,20 +33,20 @@
 #include <gtkmm/stock.h>
 #include <gtkmm/separatortoolitem.h>
 
-#include "layer_commands.hpp"
-#include "undo_manager.hpp"
+#include "editor/layer_commands.hpp"
+#include "editor/undo_manager.hpp"
 #include "display/scene_context.hpp"
-#include "windstille_widget.hpp"
-#include "about_window.hpp"
-#include "editor_window.hpp"
-#include "zoom_tool.hpp"
-#include "select_tool.hpp"
-#include "navgraph_insert_tool.hpp"
-#include "navgraph_select_tool.hpp"
-#include "sector_model.hpp"
-#include "layer_widget.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/about_window.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/zoom_tool.hpp"
+#include "editor/select_tool.hpp"
+#include "editor/navgraph_insert_tool.hpp"
+#include "editor/navgraph_select_tool.hpp"
+#include "editor/sector_model.hpp"
+#include "editor/layer_widget.hpp"
 
-#include "editor_window.hpp"
+#include "editor/editor_window.hpp"
 
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
   : vbox(),

Modified: trunk/windstille/src/editor/functor_command.hpp
===================================================================
--- trunk/windstille/src/editor/functor_command.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/functor_command.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <boost/function.hpp>
 
-#include "command.hpp"
+#include "editor/command.hpp"
 
 class FunctorCommand : public Command
 {

Modified: trunk/windstille/src/editor/group_command.hpp
===================================================================
--- trunk/windstille/src/editor/group_command.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/group_command.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_GROUP_COMMAND_HPP
 
 #include <vector>
-#include "command.hpp"
+#include "editor/command.hpp"
 
 class GroupCommand : public Command
 {

Modified: trunk/windstille/src/editor/layer.hpp
===================================================================
--- trunk/windstille/src/editor/layer.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/layer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -25,8 +25,8 @@
 #include <string>
 #include <gtkmm/treemodel.h>
 
-#include "selection.hpp"
-#include "object_model.hpp"
+#include "editor/selection.hpp"
+#include "editor/object_model.hpp"
 
 class Layer;
 typedef boost::shared_ptr<Layer> LayerHandle;

Modified: trunk/windstille/src/editor/layer_commands.hpp
===================================================================
--- trunk/windstille/src/editor/layer_commands.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/layer_commands.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,9 +19,9 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_LAYER_COMMANDS_HPP
 #define HEADER_WINDSTILLE_EDITOR_LAYER_COMMANDS_HPP
 
-#include "layer.hpp"
-#include "command.hpp"
-#include "sector_model.hpp"
+#include "editor/layer.hpp"
+#include "editor/command.hpp"
+#include "editor/sector_model.hpp"
 
 class LayerAddCommand : public Command
 {

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -24,9 +24,9 @@
 #include <gtkmm/treeview.h>
 #include <gtkmm/treemodelcolumn.h>
 
-#include "editor_window.hpp"
-#include "sector_model.hpp"
-#include "layer_manager.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/sector_model.hpp"
+#include "editor/layer_manager.hpp"
 
 LayerManager::LayerManager(EditorWindow& editor_)
   : editor(editor_),

Modified: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #include <gtkmm/togglebutton.h>
 #include <gtkmm/separator.h>
 
-#include "select_mask.hpp"
-#include "layer_widget.hpp"
+#include "editor/select_mask.hpp"
+#include "editor/layer_widget.hpp"
 
 LayerWidget::LayerWidget()
   : table(2, 9, false),

Modified: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <gtkmm/toolitem.h>
 #include <gtkmm/table.h>
 
-#include "select_mask.hpp"
+#include "editor/select_mask.hpp"
 
 class LayerWidget : public Gtk::ToolItem
 {

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/main.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -29,8 +29,8 @@
 #include "util/system.hpp"
 #include "sprite2d/manager.hpp"
 #include "display/texture_manager.hpp"
-#include "editor_window.hpp"
-#include "main.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/main.hpp"
 
 int
 WindstilleEditor::main(int argc, char** argv)

Modified: trunk/windstille/src/editor/minimap_widget.cpp
===================================================================
--- trunk/windstille/src/editor/minimap_widget.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/minimap_widget.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "minimap_widget.hpp"
+#include "editor/minimap_widget.hpp"
 
 MinimapWidget::MinimapWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig)
 {

Modified: trunk/windstille/src/editor/navgraph_insert_tool.cpp
===================================================================
--- trunk/windstille/src/editor/navgraph_insert_tool.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/navgraph_insert_tool.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,14 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "sector_model.hpp"
+#include "editor/sector_model.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "navigation/node.hpp"
 #include "navigation/edge.hpp"
-#include "windstille_widget.hpp"
-#include "editor_window.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/editor_window.hpp"
 
-#include "navgraph_insert_tool.hpp"
+#include "editor/navgraph_insert_tool.hpp"
 
 NavgraphInsertTool::NavgraphInsertTool()
   : mouse_pos(),

Modified: trunk/windstille/src/editor/navgraph_insert_tool.hpp
===================================================================
--- trunk/windstille/src/editor/navgraph_insert_tool.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/navgraph_insert_tool.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <set>
 
 #include "math/rect.hpp"
-#include "tool.hpp"
+#include "editor/tool.hpp"
 #include "navigation/navigation_graph.hpp"
 
 class NavgraphInsertTool : public Tool

Modified: trunk/windstille/src/editor/navgraph_select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/navgraph_select_tool.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/navgraph_select_tool.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,12 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "sector_model.hpp"
+#include "editor/sector_model.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "navigation/node.hpp"
-#include "windstille_widget.hpp"
+#include "editor/windstille_widget.hpp"
 
-#include "navgraph_select_tool.hpp"
+#include "editor/navgraph_select_tool.hpp"
 
 NavgraphSelectTool::NavgraphSelectTool()
   : click_pos(),

Modified: trunk/windstille/src/editor/navgraph_select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/navgraph_select_tool.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/navgraph_select_tool.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <set>
 
 #include "math/rect.hpp"
-#include "tool.hpp"
+#include "editor/tool.hpp"
 #include "navigation/navigation_graph.hpp"
 
 class NavgraphSelectTool : public Tool

Modified: trunk/windstille/src/editor/node_selection.cpp
===================================================================
--- trunk/windstille/src/editor/node_selection.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/node_selection.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "node_selection.hpp"
+#include "editor/node_selection.hpp"
 
 NodeSelection::NodeSelection()
   : nodes()

Modified: trunk/windstille/src/editor/object_commands.hpp
===================================================================
--- trunk/windstille/src/editor/object_commands.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/object_commands.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,9 +21,9 @@
 
 #include <boost/function.hpp>
 
-#include "layer.hpp"
-#include "object_model.hpp"
-#include "command.hpp"
+#include "editor/layer.hpp"
+#include "editor/object_model.hpp"
+#include "editor/command.hpp"
 
 class ObjectRemoveCommand : public Command
 {

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/object_model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,11 +19,11 @@
 #include <iostream>
 #include <sstream>
 
-#include "editor_window.hpp"
+#include "editor/editor_window.hpp"
 #include "util/file_reader.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
-#include "object_model.hpp"
+#include "editor/object_model.hpp"
 
 ObjectModel::ObjectModel(const std::string& name_, const Vector2f& rel_pos_)
   : name(name_),

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/object_model.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,12 +23,12 @@
 #include <boost/weak_ptr.hpp>
 #include <string>
 
-#include "select_mask.hpp"
+#include "editor/select_mask.hpp"
 #include "util/file_writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
 #include "editor/control_point.hpp"
-#include "snap_data.hpp"
+#include "editor/snap_data.hpp"
 
 class ObjectModel;
 class FileReader;

Modified: trunk/windstille/src/editor/object_model_factory.cpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/object_model_factory.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #include <stdexcept>
 
 #include "util/file_reader.hpp"
-#include "decal_object_model.hpp"
-#include "object_model_factory.hpp"
+#include "editor/decal_object_model.hpp"
+#include "editor/object_model_factory.hpp"
 
 ObjectModelHandle
 ObjectModelFactory::create(const FileReader& reader)

Modified: trunk/windstille/src/editor/object_model_factory.hpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/object_model_factory.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTOR_HPP
 #define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTOR_HPP
 
-#include "object_model.hpp"
+#include "editor/object_model.hpp"
 
 class FileReader;
 

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -25,9 +25,9 @@
 #include <gtkmm/toolbar.h>
 #include <gtkmm/treemodelcolumn.h>
 
-#include "windstille_widget.hpp"
-#include "editor_window.hpp"
-#include "object_selector.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/object_selector.hpp"
 
 class ObjectSelector::Columns : public Gtk::TreeModel::ColumnRecord
 {

Modified: trunk/windstille/src/editor/particle_system_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/particle_system_object_model.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/particle_system_object_model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "particles/particle_system.hpp"
-#include "particle_system_object_model.hpp"
+#include "editor/particle_system_object_model.hpp"
 
 ParticleSystemObjectModel::ParticleSystemObjectModel(const Vector2f& pos)
   : ObjectModel("ParticleSystem", pos),

Modified: trunk/windstille/src/editor/particle_system_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/particle_system_object_model.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/particle_system_object_model.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_PARTICLE_SYSTEM_OBJECT_MODEL_HPP
 #define HEADER_PARTICLE_SYSTEM_OBJECT_MODEL_HPP
 
-#include "object_model.hpp"
+#include "editor/object_model.hpp"
 
 class ParticleSystem;
 

Modified: trunk/windstille/src/editor/scroll_tool.cpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/scroll_tool.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,8 +17,8 @@
 */
 
 #include "math/vector2f.hpp"
-#include "windstille_widget.hpp"
-#include "scroll_tool.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/scroll_tool.hpp"
 
 ScrollTool::ScrollTool()
   : orig_state(),

Modified: trunk/windstille/src/editor/scroll_tool.hpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/scroll_tool.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_SCROLL_TOOL_HPP
 
 #include "display/graphic_context_state.hpp"
-#include "tool.hpp"
+#include "editor/tool.hpp"
 
 /** */
 class ScrollTool : public Tool

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -25,13 +25,13 @@
 #include "navigation/navigation_graph.hpp"
 #include "navigation/edge.hpp"
 #include "navigation/node.hpp"
-#include "editor_window.hpp"
-#include "windstille_widget.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/windstille_widget.hpp"
 #include "util/file_reader.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface.hpp"
-#include "object_model_factory.hpp"
-#include "sector_model.hpp"
+#include "editor/object_model_factory.hpp"
+#include "editor/sector_model.hpp"
 
 LayerManagerColumns* LayerManagerColumns::instance_ = 0;
 

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -26,9 +26,9 @@
 #include <vector>
 
 #include "display/color.hpp"
-#include "layer.hpp"
-#include "selection.hpp"
-#include "object_model.hpp"
+#include "editor/layer.hpp"
+#include "editor/selection.hpp"
+#include "editor/object_model.hpp"
 #include "math/vector2f.hpp"
 
 class NavigationGraph;

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,10 +19,10 @@
 #include <gtkmm/menu.h>
 
 #include "display/scene_context.hpp"
-#include "sector_model.hpp"
-#include "windstille_widget.hpp"
-#include "editor_window.hpp"
-#include "select_tool.hpp"
+#include "editor/sector_model.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/select_tool.hpp"
 
 static const uint32_t MOVE_TIMEOUT = 100;
 static const int MOVE_THRESHOLD = 16.0f;

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,8 +22,8 @@
 #include <stdint.h>
 
 #include "math/rect.hpp"
-#include "object_model.hpp"
-#include "tool.hpp"
+#include "editor/object_model.hpp"
+#include "editor/tool.hpp"
 
 class SelectTool : public Tool
 {

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/selection.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,12 +19,12 @@
 #include <iostream>
 #include <boost/bind.hpp>
 
-#include "undo_manager.hpp"
-#include "group_command.hpp"
-#include "functor_command.hpp"
-#include "windstille_widget.hpp"
-#include "editor_window.hpp"
-#include "selection.hpp"
+#include "editor/undo_manager.hpp"
+#include "editor/group_command.hpp"
+#include "editor/functor_command.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/selection.hpp"
 
 Selection::Selection()
   : objects(),

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/selection.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,8 +23,8 @@
 #include <set>
 #include <boost/shared_ptr.hpp>
 
-#include "control_point.hpp"
-#include "object_model.hpp"
+#include "editor/control_point.hpp"
+#include "editor/object_model.hpp"
 
 class Selection;
 class WindstilleWidget;

Modified: trunk/windstille/src/editor/sprite_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/sprite_object_model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "util/pathname.hpp"
 #include "display/scene_context.hpp"
-#include "sprite_object_model.hpp"
+#include "editor/sprite_object_model.hpp"
 
 SpriteObjectModel::SpriteObjectModel(const std::string& name_, const Vector2f& rel_pos_,
                                      const std::string& path_)

Modified: trunk/windstille/src/editor/sprite_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/sprite_object_model.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_SPRITE_OBJECT_MODEL_HPP
 
 #include "sprite2d/sprite.hpp"
-#include "object_model.hpp"
+#include "editor/object_model.hpp"
 
 class SpriteObjectModel : public ObjectModel
 {

Modified: trunk/windstille/src/editor/undo_manager.cpp
===================================================================
--- trunk/windstille/src/editor/undo_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/undo_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "undo_manager.hpp"
+#include "editor/undo_manager.hpp"
 
 UndoManager::UndoManager()
   : undo_stack(),

Modified: trunk/windstille/src/editor/undo_manager.hpp
===================================================================
--- trunk/windstille/src/editor/undo_manager.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/undo_manager.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_UNDO_MANAGER_HPP
 
 #include <vector>
-#include "command.hpp"
+#include "editor/command.hpp"
 
 class UndoManager
 {

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -29,16 +29,16 @@
 #include "display/opengl_state.hpp"
 #include "display/surface.hpp"
 #include "util/pathname.hpp"
-#include "editor_window.hpp"
-#include "scroll_tool.hpp"
-#include "sector_model.hpp"
-#include "undo_manager.hpp"
-#include "group_command.hpp"
-#include "object_commands.hpp"
-#include "functor_command.hpp"
+#include "editor/editor_window.hpp"
+#include "editor/scroll_tool.hpp"
+#include "editor/sector_model.hpp"
+#include "editor/undo_manager.hpp"
+#include "editor/group_command.hpp"
+#include "editor/object_commands.hpp"
+#include "editor/functor_command.hpp"
 
-#include "sprite_object_model.hpp"
-#include "windstille_widget.hpp"
+#include "editor/sprite_object_model.hpp"
+#include "editor/windstille_widget.hpp"
 
 bool lib_init = false;
 

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -34,12 +34,12 @@
 #include "display/scene_context.hpp"
 #include "display/texture.hpp"
 #include "math/vector2f.hpp"
-#include "control_point.hpp"
-#include "decal_object_model.hpp"
-#include "selection.hpp"
-#include "select_mask.hpp"
-#include "layer.hpp"
-#include "command.hpp"
+#include "editor/control_point.hpp"
+#include "editor/decal_object_model.hpp"
+#include "editor/selection.hpp"
+#include "editor/select_mask.hpp"
+#include "editor/layer.hpp"
+#include "editor/command.hpp"
 
 class Tool;
 class UndoManager;

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,8 +17,8 @@
 */
 
 #include "display/scene_context.hpp"
-#include "windstille_widget.hpp"
-#include "zoom_tool.hpp"
+#include "editor/windstille_widget.hpp"
+#include "editor/zoom_tool.hpp"
 
 ZoomTool::ZoomTool()
   : click_pos(),

Modified: trunk/windstille/src/editor/zoom_tool.hpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/editor/zoom_tool.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_ZOOM_TOOL_HPP
 
 #include "math/rect.hpp"
-#include "tool.hpp"
+#include "editor/tool.hpp"
 
 class ZoomTool : public Tool
 {

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,10 +17,10 @@
 */
 
 #include "objects/player.hpp"
-#include "sector.hpp"
-#include "script_manager.hpp"
+#include "engine/sector.hpp"
+#include "engine/script_manager.hpp"
 #include "display/display.hpp"
-#include "camera.hpp"
+#include "engine/camera.hpp"
 
 /**
  * Calculate the distance between two camera PathPoints, distance here

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,9 +17,9 @@
 */
 
 #include "properties/property_set.hpp"
-#include "sector.hpp"
+#include "engine/sector.hpp"
 #include "tile/tile_map.hpp"
-#include "entity.hpp"
+#include "engine/entity.hpp"
 
 Entity::Entity()
   : done(),

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <boost/bind.hpp>
 
-#include "physics.hpp"
+#include "engine/physics.hpp"
 
 Physics::Physics(Entity* entity)
   : entity(entity),

Modified: trunk/windstille/src/engine/physics.hpp
===================================================================
--- trunk/windstille/src/engine/physics.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/physics.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_ENGINE_PHYSICS_HPP
 
 #include "collision/collision_data.hpp"
-#include "entity.hpp"
+#include "engine/entity.hpp"
 
 class Physics
 {

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,14 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "script_manager.hpp"
+#include "engine/script_manager.hpp"
 
 #include <stdarg.h>
 #include <sqstdaux.h>
 #include <sqstdmath.h>
 #include <sqstdstring.h>
 
-#include "squirrel_thread.hpp"
+#include "engine/squirrel_thread.hpp"
 #include "app/console.hpp"
 #include "scripting/game_objects.hpp"
 #include "scripting/squirrel_error.hpp"

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -37,7 +37,7 @@
 #include "objects/scriptable_object.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "scenegraph/scene_graph.hpp"
-#include "squirrel_thread.hpp"
+#include "engine/squirrel_thread.hpp"
 
 
 //Sector* Sector::current_ = 0;

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "squirrel_thread.hpp"
+#include "engine/squirrel_thread.hpp"
 
 #include "app/globals.hpp"
 #include "scripting/squirrel_error.hpp"

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <string>
 #include <squirrel.h>
 
-#include "script_manager.hpp"
+#include "engine/script_manager.hpp"
 
 class SquirrelThread
 {

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "display/software_surface.hpp"
-#include "border_font_effect.hpp"
+#include "font/border_font_effect.hpp"
 
 BorderFontEffect::BorderFontEffect(int size_, bool outline_)
   : size(size_),

Modified: trunk/windstille/src/font/border_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/font/border_font_effect.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_FONT_BORDER_FONT_EFFECT_HPP
 #define HEADER_WINDSTILLE_FONT_BORDER_FONT_EFFECT_HPP
 
-#include "font_effect.hpp"
+#include "font/font_effect.hpp"
 
 /** */
 class BorderFontEffect : public FontEffect

Modified: trunk/windstille/src/font/no_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/font/no_font_effect.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "display/software_surface.hpp"
-#include "no_font_effect.hpp"
+#include "font/no_font_effect.hpp"
 
 void
 NoFontEffect::blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const

Modified: trunk/windstille/src/font/no_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/font/no_font_effect.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_FONT_NO_FONT_EFFECT_HPP
 #define HEADER_WINDSTILLE_FONT_NO_FONT_EFFECT_HPP
 
-#include "font_effect.hpp"
+#include "font/font_effect.hpp"
 
 class NoFontEffect : public FontEffect
 {

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -26,7 +26,7 @@
 #include "display/opengl_state.hpp"
 #include "display/software_surface.hpp"
 #include "physfs/physfs_stream.hpp"
-#include "ttf_font.hpp"
+#include "font/ttf_font.hpp"
 
 TTFCharacter::TTFCharacter(const Rect& pos_,
                            const Rectf& uv_, 

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -27,7 +27,7 @@
 #include "display/color.hpp"
 #include "display/texture.hpp"
 #include "math/rect.hpp"
-#include "no_font_effect.hpp"
+#include "font/no_font_effect.hpp"
 
 class FontEffect;
 class TTFFontImpl;

Modified: trunk/windstille/src/gui/automap.cpp
===================================================================
--- trunk/windstille/src/gui/automap.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/automap.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include "tile/tile_map.hpp"
 #include "display/display.hpp"
 #include "display/software_surface.hpp"
-#include "automap.hpp"
+#include "gui/automap.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/automap.hpp
===================================================================
--- trunk/windstille/src/gui/automap.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/automap.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_AUTOMAP_HPP
 
 #include "display/surface.hpp"
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/button.cpp
===================================================================
--- trunk/windstille/src/gui/button.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/button.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include "display/display.hpp"
 #include "font/fonts.hpp"
 #include "input/controller.hpp"
-#include "button.hpp"
+#include "gui/button.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/button.hpp
===================================================================
--- trunk/windstille/src/gui/button.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/button.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_BUTTON_HPP
 
 #include <string>
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/component.cpp
===================================================================
--- trunk/windstille/src/gui/component.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/grid_component.cpp
===================================================================
--- trunk/windstille/src/gui/grid_component.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/grid_component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "display/display.hpp"
 #include "input/controller.hpp"
-#include "grid_component.hpp"
+#include "gui/grid_component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/grid_component.hpp
===================================================================
--- trunk/windstille/src/gui/grid_component.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/grid_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_GRID_COMPONENT_HPP
 
 #include "util/field.hpp"
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "display/display.hpp"
 #include "font/fonts.hpp"
-#include "group_component.hpp"
+#include "gui/group_component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/group_component.hpp
===================================================================
--- trunk/windstille/src/gui/group_component.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/group_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <string>
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/gui_manager.cpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/gui_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,9 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "root_component.hpp"
+#include "gui/root_component.hpp"
 #include "screen/screen_manager.hpp"
-#include "gui_manager.hpp"
+#include "gui/gui_manager.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/label.cpp
===================================================================
--- trunk/windstille/src/gui/label.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/label.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "font/fonts.hpp"
-#include "label.hpp"
+#include "gui/label.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/label.hpp
===================================================================
--- trunk/windstille/src/gui/label.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/label.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_LABEL_HPP
 
 #include <string>
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/list_view.cpp
===================================================================
--- trunk/windstille/src/gui/list_view.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/list_view.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include "display/display.hpp"
 #include "input/controller.hpp"
 #include "font/fonts.hpp"
-#include "list_view.hpp"
+#include "gui/list_view.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/list_view.hpp
===================================================================
--- trunk/windstille/src/gui/list_view.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/list_view.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <vector>
 #include <string>
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui { 
 

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/menu.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,13 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "root_component.hpp"
-#include "gui_manager.hpp"
-#include "menu_item.hpp"
-#include "menu_component.hpp"
-#include "group_component.hpp"
+#include "gui/root_component.hpp"
+#include "gui/gui_manager.hpp"
+#include "gui/menu_item.hpp"
+#include "gui/menu_component.hpp"
+#include "gui/group_component.hpp"
 #include "screen/screen_manager.hpp"
-#include "menu.hpp"
+#include "gui/menu.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,10 +18,10 @@
 
 #include "sound/sound_manager.hpp"
 #include "input/controller.hpp"
-#include "menu_component.hpp"
+#include "gui/menu_component.hpp"
 #include "gui/tab_component.hpp"
 #include "display/display.hpp"
-#include "menu_item.hpp"
+#include "gui/menu_item.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/menu_component.hpp
===================================================================
--- trunk/windstille/src/gui/menu_component.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/menu_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <string>
 #include <vector>
 #include "font/fonts.hpp"
-#include "component.hpp"
+#include "gui/component.hpp"
 
 class TTFFont;
 

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,9 +18,9 @@
 
 #include "sound/sound_manager.hpp"
 #include "display/display.hpp"
-#include "menu_component.hpp"
+#include "gui/menu_component.hpp"
 
-#include "menu_item.hpp"
+#include "gui/menu_item.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/root_component.cpp
===================================================================
--- trunk/windstille/src/gui/root_component.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/root_component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include <algorithm>
 #include "app/console.hpp"
 #include "input/controller.hpp"
-#include "root_component.hpp"
+#include "gui/root_component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/root_component.hpp
===================================================================
--- trunk/windstille/src/gui/root_component.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/root_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_ROOT_COMPONENT_HPP
 
 #include <vector>
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/slider.cpp
===================================================================
--- trunk/windstille/src/gui/slider.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/slider.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "input/controller.hpp"
 #include "display/display.hpp"
-#include "slider.hpp"
+#include "gui/slider.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/slider.hpp
===================================================================
--- trunk/windstille/src/gui/slider.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/slider.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_GUI_SLIDER_HPP
 #define HEADER_WINDSTILLE_GUI_SLIDER_HPP
 
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include "input/controller.hpp"
 #include "font/fonts.hpp"
 #include "display/display.hpp"
-#include "tab_component.hpp"
+#include "gui/tab_component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/tab_component.hpp
===================================================================
--- trunk/windstille/src/gui/tab_component.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/gui/tab_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <string>
 #include <vector>
-#include "component.hpp"
+#include "gui/component.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "input/input_manager.hpp"
 #include "display/display.hpp"
-#include "controller_help_window.hpp"
+#include "hud/controller_help_window.hpp"
 
 ControllerHelpWindow* ControllerHelpWindow::current_ = 0;
 

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/hud/conversation.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #include "font/fonts.hpp"
 #include "engine/script_manager.hpp"
 #include "display/display.hpp"
-#include "conversation.hpp"
-#include "pda.hpp"
+#include "hud/conversation.hpp"
+#include "hud/pda.hpp"
 #include "screen/game_session.hpp"
 
 Conversation::Conversation()

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/hud/pda.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 #include "display/display.hpp"
 #include "display/text_area.hpp"
 #include "font/fonts.hpp"
-#include "pda.hpp"
+#include "hud/pda.hpp"
 
 DialogEntry::DialogEntry(const std::string& arg_character, const std::string& arg_text)
   : character(arg_character),

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include "engine/entity.hpp"
 #include "engine/script_manager.hpp"
 #include "font/fonts.hpp"
-#include "speech_manager.hpp"
+#include "hud/speech_manager.hpp"
 
 class Speech 
 {

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/controller.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 
 #include <math.h>
 #include <assert.h>
-#include "controller.hpp"
+#include "input/controller.hpp"
 
 Controller::Controller()
   : states(LAST_EVENT),

Modified: trunk/windstille/src/input/controller.hpp
===================================================================
--- trunk/windstille/src/input/controller.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/controller.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <vector>
 #include "app/controller_def.hpp"
-#include "input_event.hpp"
+#include "input/input_event.hpp"
 
 /** The Controller class presents the current state of the controller
     and the input events that occurred on the controller since the

Modified: trunk/windstille/src/input/controller_description.cpp
===================================================================
--- trunk/windstille/src/input/controller_description.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/controller_description.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include <stdexcept>
-#include "controller_description.hpp"
+#include "input/controller_description.hpp"
 
 
 ControllerDescription::ControllerDescription()

Modified: trunk/windstille/src/input/controller_description.hpp
===================================================================
--- trunk/windstille/src/input/controller_description.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/controller_description.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <map>
 #include <string>
 
-#include "input_event.hpp"
+#include "input/input_event.hpp"
 
 struct InputEventDefinition 
 {

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,8 +17,8 @@
 */
 
 
-#include "input_manager_sdl.hpp"
-#include "input_manager.hpp"
+#include "input/input_manager_sdl.hpp"
+#include "input/input_manager.hpp"
 
 InputManager::InputManager(const ControllerDescription& controller_description)
   : impl(new InputManagerSDL(controller_description))

Modified: trunk/windstille/src/input/input_manager_impl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/input_manager_impl.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "input_manager_impl.hpp"
+#include "input/input_manager_impl.hpp"
 
 void
 InputManagerImpl::add_axis_event(int name, float pos)

Modified: trunk/windstille/src/input/input_manager_impl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/input_manager_impl.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #ifndef HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_IMPL_HPP
 #define HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_IMPL_HPP
 
-#include "controller.hpp"
-#include "input_event.hpp"
+#include "input/controller.hpp"
+#include "input/input_event.hpp"
 
 /** */
 class InputManagerImpl

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,9 +22,9 @@
 #include "math/math.hpp"
 #include "app/config.hpp"
 #include "util/file_reader.hpp"
-#include "input_manager_sdl.hpp"
+#include "input/input_manager_sdl.hpp"
 #ifdef HAVE_CWIID
-#include "wiimote.hpp"
+#include "input/wiimote.hpp"
 #endif
 
 const int dead_zone = 0;

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <iostream>
 #include "math/math.hpp"
-#include "wiimote.hpp"
+#include "input/wiimote.hpp"
 
 Wiimote* wiimote = 0;
 

Modified: trunk/windstille/src/input/wiimote.hpp
===================================================================
--- trunk/windstille/src/input/wiimote.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/input/wiimote.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #ifdef HAVE_CWIID
 
 #include <vector>
-#include "cwiid.h"
+#include <cwiid.h>
 
 struct WiimoteButtonEvent
 {

Modified: trunk/windstille/src/lisp/getters.cpp
===================================================================
--- trunk/windstille/src/lisp/getters.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/getters.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -1,4 +1,4 @@
-#include "getters.hpp"
+#include "lisp/getters.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/getters.hpp
===================================================================
--- trunk/windstille/src/lisp/getters.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/getters.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -12,7 +12,7 @@
 #ifndef __GETTERS_HPP__
 #define __GETTERS_HPP__
 
-#include "lisp.hpp"
+#include "lisp/lisp.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/lexer.cpp
===================================================================
--- trunk/windstille/src/lisp/lexer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/lexer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 #include <sstream>
 #include <stdexcept>
 #include <string.h>
-#include "lexer.hpp"
+#include "lisp/lexer.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <string.h>
-#include "lisp.hpp"
+#include "lisp/lisp.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #include <string.h>
 
 #include "physfs/physfs_stream.hpp"
-#include "parser.hpp"
-#include "lisp.hpp"
+#include "lisp/parser.hpp"
+#include "lisp/lisp.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/parser.hpp
===================================================================
--- trunk/windstille/src/lisp/parser.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/parser.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 #define __LISPPARSER_H__
 
 #include <string>
-#include "lexer.hpp"
+#include "lisp/lexer.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/properties.cpp
===================================================================
--- trunk/windstille/src/lisp/properties.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/properties.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -1,5 +1,5 @@
 
-#include "properties.hpp"
+#include "lisp/properties.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/properties.hpp
===================================================================
--- trunk/windstille/src/lisp/properties.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/properties.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -2,8 +2,8 @@
 #define __PROPERTIES_HPP__
 
 #include <vector>
-#include "getters.hpp"
-#include "property_iterator.hpp"
+#include "lisp/getters.hpp"
+#include "lisp/property_iterator.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 
-#include "writer.hpp"
+#include "lisp/writer.hpp"
 #include "physfs/physfs_stream.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/math/line.cpp
===================================================================
--- trunk/windstille/src/math/line.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/line.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "line.hpp"
+#include "math/line.hpp"
 
 Line::Line(const Vector2f& p1_,
            const Vector2f& p2_)

Modified: trunk/windstille/src/math/origin.hpp
===================================================================
--- trunk/windstille/src/math/origin.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/origin.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -33,8 +33,8 @@
 #ifndef HEADER_MATH_ORIGIN_HPP
 #define HEADER_MATH_ORIGIN_HPP
 
-#include "size.hpp"
-#include "point.hpp"
+#include "math/size.hpp"
+#include "math/point.hpp"
 #include "vector2f.hpp"
 
 namespace origin {

Modified: trunk/windstille/src/math/quad.hpp
===================================================================
--- trunk/windstille/src/math/quad.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/quad.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,9 +21,9 @@
 
 #include <math.h>
 
-#include "math.hpp"
+#include "math/math.hpp"
 #include "vector2f.hpp"
-#include "rect.hpp"
+#include "math/rect.hpp"
 
 class Quad
 {

Modified: trunk/windstille/src/math/quaternion.cpp
===================================================================
--- trunk/windstille/src/math/quaternion.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/quaternion.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "quaternion.hpp"
+#include "math/quaternion.hpp"
 
 
 float

Modified: trunk/windstille/src/math/quaternion.hpp
===================================================================
--- trunk/windstille/src/math/quaternion.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/quaternion.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <math.h>
 #include "vector3.hpp"
-#include "matrix.hpp"
+#include "math/matrix.hpp"
 
 class Quaternion
 {

Modified: trunk/windstille/src/math/random.cpp
===================================================================
--- trunk/windstille/src/math/random.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/random.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "random.hpp"
+#include "math/random.hpp"
 
 /* This file is based on:
  * A C-program for MT19937, with initialization improved 2002/1/26.

Modified: trunk/windstille/src/math/rect.cpp
===================================================================
--- trunk/windstille/src/math/rect.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/math/rect.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -28,7 +28,7 @@
 */
 
 
-#include "rect.hpp"
+#include "math/rect.hpp"
 
 #define cl_min(a,b) ((a < b) ? a : b)
 #define cl_max(a,b) ((a > b) ? a : b)

Modified: trunk/windstille/src/navigation/edge.cpp
===================================================================
--- trunk/windstille/src/navigation/edge.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/navigation/edge.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,8 +17,8 @@
 */
 
 #include <assert.h>
-#include "node.hpp"
-#include "edge.hpp"
+#include "navigation/node.hpp"
+#include "navigation/edge.hpp"
 
 Edge::Edge(Node* node1_, Node* node2_, Properties props_)
   : node1(node1_), 

Modified: trunk/windstille/src/navigation/edge.hpp
===================================================================
--- trunk/windstille/src/navigation/edge.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/navigation/edge.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include "math/line.hpp"
 #include "math/vector2f.hpp"
-#include "properties.hpp"
+#include "navigation/properties.hpp"
 
 class Node;
 

Modified: trunk/windstille/src/navigation/edge_position.cpp
===================================================================
--- trunk/windstille/src/navigation/edge_position.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/navigation/edge_position.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "edge.hpp"
-#include "node.hpp"
+#include "navigation/edge.hpp"
+#include "navigation/node.hpp"
 #include "display/display.hpp"
 
 EdgePosition::EdgePosition()

Modified: trunk/windstille/src/navigation/navigation_graph.cpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/navigation/navigation_graph.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,12 +19,12 @@
 #include <iomanip>
 
 #include "display/display.hpp"
-#include "edge.hpp"
-#include "node.hpp"
+#include "navigation/edge.hpp"
+#include "navigation/node.hpp"
 #include "util/file_reader.hpp"
 #include "util/file_writer.hpp"
 
-#include "navigation_graph.hpp"
+#include "navigation/navigation_graph.hpp"
 
 NavigationGraph::NavigationGraph()
   : nodes(),

Modified: trunk/windstille/src/navigation/node.cpp
===================================================================
--- trunk/windstille/src/navigation/node.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/navigation/node.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "node.hpp"
+#include "navigation/node.hpp"
 
 Node::Node(const Vector2f& pos_)
   : pos(pos_),

Modified: trunk/windstille/src/navigation/node.hpp
===================================================================
--- trunk/windstille/src/navigation/node.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/navigation/node.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <vector>
 #include "math/vector2f.hpp"
 
-#include "edge_position.hpp"
+#include "navigation/edge_position.hpp"
 
 /** */
 class Node

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,9 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "objects/background_gradient.hpp"
+
 #include "display/vertex_array_drawing_request.hpp"
 #include "display/display.hpp"
-#include "background_gradient.hpp"
 
 BackgroundGradient::BackgroundGradient(FileReader& props)
   : colors(),

Modified: trunk/windstille/src/objects/bomb.cpp
===================================================================
--- trunk/windstille/src/objects/bomb.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/bomb.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "app/globals.hpp"
-#include "bomb.hpp"
+#include "objects/bomb.hpp"
 
 Bomb::Bomb(int x, int y)
   : sprite(Pathname("images/bomb.sprite")),

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/box.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include <boost/bind.hpp>
-#include "box.hpp"
+#include "objects/box.hpp"
 #include "collision/collision_engine.hpp"
 
 Box::Box(FileReader& props)

Modified: trunk/windstille/src/objects/elevator.cpp
===================================================================
--- trunk/windstille/src/objects/elevator.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/elevator.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "elevator.hpp"
+#include "objects/elevator.hpp"
 #include "engine/sector.hpp"
 #include "collision/collision_engine.hpp"
 

Modified: trunk/windstille/src/objects/grenade.cpp
===================================================================
--- trunk/windstille/src/objects/grenade.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/grenade.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "engine/sector.hpp"
 #include "collision/collision_engine.hpp"
-#include "grenade.hpp"
+#include "objects/grenade.hpp"
 
 Grenade::Grenade()
   : sprite(Pathname("models/objects/grenade/grenade.wsprite")), 

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,8 +17,8 @@
 */
 
 
-#include "player.hpp"
-#include "hedgehog.hpp"
+#include "objects/player.hpp"
+#include "objects/hedgehog.hpp"
 
 Hedgehog::Hedgehog(FileReader& props)
   : sprite(Pathname("images/hedgehog.sprite")),

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
 #include "tile/tile_map.hpp"
-#include "laser_pointer.hpp"
+#include "objects/laser_pointer.hpp"
 
 LaserPointer::LaserPointer()
  : noise(),

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "display/vertex_array_drawing_request.hpp"
-#include "liquid.hpp"
+#include "objects/liquid.hpp"
 
 #define SAMPLES 5
 

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,10 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "objects/nightvision.hpp"
+
+#include "display/display.hpp"
+#include "display/vertex_array_drawing_request.hpp"
 #include "math/random.hpp"
-#include "display/vertex_array_drawing_request.hpp"
-#include "display/display.hpp"
-#include "nightvision.hpp"
 
 Nightvision::Nightvision(FileReader& /*props*/)
   : nightvision(Pathname("images/nightvision.sprite")),

Modified: trunk/windstille/src/objects/nightvision.hpp
===================================================================
--- trunk/windstille/src/objects/nightvision.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/nightvision.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #define HEADER_WINDSTILLE_OBJECTS_NIGHTVISION_HPP
 
 #include "display/texture.hpp"
+#include "engine/game_object.hpp"
 #include "sprite2d/sprite.hpp"
-#include "engine/game_object.hpp"
 
 // FIXME: shouldn't really be a game object, but makes testing easier
 class Nightvision : public GameObject

Modified: trunk/windstille/src/objects/pistol.cpp
===================================================================
--- trunk/windstille/src/objects/pistol.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/pistol.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "laser_pointer.hpp"
-#include "pistol.hpp"
+#include "objects/laser_pointer.hpp"
+#include "objects/pistol.hpp"
 
 Pistol::Pistol()
   : sprite(Pathname("models/objects/pistol/pistol.wsprite")),

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/player.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,10 +21,10 @@
 #include "collision/collision_engine.hpp"
 #include "collision/stair_contact.hpp"
 #include "engine/sector.hpp"
-#include "grenade.hpp"
-#include "laser_pointer.hpp"
-#include "pistol.hpp"
-#include "player.hpp"
+#include "objects/grenade.hpp"
+#include "objects/laser_pointer.hpp"
+#include "objects/pistol.hpp"
+#include "objects/player.hpp"
 #include "screen/game_session.hpp"
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
 #include "app/globals.hpp"
-#include "scriptable_object.hpp"
+#include "objects/scriptable_object.hpp"
 
 ScriptableObject::ScriptableObject(FileReader& props)
   : z_pos(50),

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include "display/opengl_state.hpp"
 #include "display/shader_object.hpp"
-#include "shockwave.hpp"
+#include "objects/shockwave.hpp"
 
 class ShockwaveDrawingRequest : public DrawingRequest
 {

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "spider_mine.hpp"
-#include "player.hpp"
+#include "objects/spider_mine.hpp"
+#include "objects/player.hpp"
 
 SpiderMine::SpiderMine(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/swarm.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 #include "screen/game_session.hpp"
 #include "screen/view.hpp"
 
-#include "swarm.hpp"
+#include "objects/swarm.hpp"
 
 Swarm::Swarm(FileReader& props)
   : agents(),

Modified: trunk/windstille/src/objects/test_object.cpp
===================================================================
--- trunk/windstille/src/objects/test_object.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/test_object.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <stdexcept>
 
-#include "test_object.hpp"
+#include "objects/test_object.hpp"
 
 TestObject::TestObject(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/objects/trigger.cpp
===================================================================
--- trunk/windstille/src/objects/trigger.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/trigger.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,8 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "objects/trigger.hpp"
+
 #include "engine/sector.hpp"
-#include "trigger.hpp"
 #include "objects/player.hpp"
 
 Trigger::Trigger(FileReader& props)

Modified: trunk/windstille/src/objects/vrdummy.cpp
===================================================================
--- trunk/windstille/src/objects/vrdummy.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/objects/vrdummy.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "math/random.hpp"
-#include "vrdummy.hpp"
+#include "objects/vrdummy.hpp"
 
 VRDummy::VRDummy(FileReader& props)
   : sprite(),

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,9 +20,9 @@
 
 #include "display/display.hpp"
 #include "display/shader_object.hpp"
-#include "particle_system.hpp"
+#include "particles/particle_system.hpp"
 #include "display/opengl_state.hpp"
-#include "deform_drawer.hpp"
+#include "particles/deform_drawer.hpp"
 
 class DeformDrawerRequest : public DrawingRequest
 {

Modified: trunk/windstille/src/particles/deform_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/deform_drawer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include "display/shader_program.hpp"
 #include "display/framebuffer.hpp"
 #include "display/drawing_context.hpp"
-#include "drawer.hpp"
+#include "particles/drawer.hpp"
 
 class SceneContext;
 class ParticleSystem;

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,13 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "particle_system.hpp"
+#include "particles/particle_system.hpp"
 #include "display/scene_context.hpp"
 #include "util/file_reader.hpp"
-#include "spark_drawer.hpp"
-#include "deform_drawer.hpp"
-#include "surface_drawer.hpp"
-#include "randomizer.hpp"
+#include "particles/spark_drawer.hpp"
+#include "particles/deform_drawer.hpp"
+#include "particles/surface_drawer.hpp"
+#include "particles/randomizer.hpp"
 
 ParticleSystem::ParticleSystem(FileReader& props)
   : particles(),

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -24,7 +24,7 @@
 
 #include "math/rect.hpp"
 #include "display/color.hpp"
-#include "drawer.hpp"
+#include "particles/drawer.hpp"
 
 class FileReader;
 class SceneContext;

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #include "display/drawing_context.hpp"
 #include "util/file_reader.hpp"
 #include "display/vertex_array_drawing_request.hpp"
-#include "particle_system.hpp"
-#include "spark_drawer.hpp"
+#include "particles/particle_system.hpp"
+#include "particles/spark_drawer.hpp"
 
 SparkDrawer::SparkDrawer(FileReader& props)
   : color(1.0f, 1.0f, 1.0f),

Modified: trunk/windstille/src/particles/spark_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/spark_drawer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_PARTICLES_SPARK_DRAWER_HPP
 #define HEADER_WINDSTILLE_PARTICLES_SPARK_DRAWER_HPP
 
-#include "drawer.hpp"
+#include "particles/drawer.hpp"
 
 class SceneContext;
 class ParticleSystem;

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,10 +18,10 @@
 
 #include "util/file_reader.cpp"
 #include "display/vertex_array_drawing_request.hpp"
-#include "particle_system.hpp"
+#include "particles/particle_system.hpp"
 #include "display/surface_manager.hpp"
 #include "display/drawing_context.hpp"
-#include "surface_drawer.hpp"
+#include "particles/surface_drawer.hpp"
 
 SurfaceDrawer::SurfaceDrawer(Surface surface_)
   : surface(surface_),

Modified: trunk/windstille/src/particles/surface_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/particles/surface_drawer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_PARTICLES_SURFACE_DRAWER_HPP
 
 #include "display/surface.hpp"
-#include "drawer.hpp"
+#include "particles/drawer.hpp"
 
 class SurfaceDrawer : public Drawer
 {

Modified: trunk/windstille/src/physfs/physfs_sdl.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/physfs/physfs_sdl.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
 
-#include "physfs_sdl.hpp"
+#include "physfs/physfs_sdl.hpp"
 
 #include <physfs.h>
 

Modified: trunk/windstille/src/physfs/physfs_stream.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */
 
-#include "physfs_stream.hpp"
+#include "physfs/physfs_stream.hpp"
 
 #include <stdexcept>
 #include <sstream>

Modified: trunk/windstille/src/properties/properties.cpp
===================================================================
--- trunk/windstille/src/properties/properties.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/properties/properties.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #include <sstream>
 #include <stdexcept>
 
-#include "property_set.hpp"
-#include "properties.hpp"
+#include "properties/property_set.hpp"
+#include "properties/properties.hpp"
 
 Properties::Properties(PropertySet* pset_, void* object_)
   : pset(pset_),

Modified: trunk/windstille/src/properties/property_set.cpp
===================================================================
--- trunk/windstille/src/properties/property_set.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/properties/property_set.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include <sstream>
 #include <stdexcept>
 
-#include "property_set.hpp"
+#include "properties/property_set.hpp"
 
 PropertySet::PropertySet(const std::string& name_, PropertySet* parent_)
   : parent(parent_),

Modified: trunk/windstille/src/properties/property_set.hpp
===================================================================
--- trunk/windstille/src/properties/property_set.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/properties/property_set.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include <map>
 #include <string>
 
-#include "property.hpp"
+#include "properties/property.hpp"
 
 class PropertySet
 {

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "scene_graph.hpp"
+#include "scenegraph/scene_graph.hpp"
 
 SceneGraph::SceneGraph()
 {

Modified: trunk/windstille/src/screen/armature_test.cpp
===================================================================
--- trunk/windstille/src/screen/armature_test.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/armature_test.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,9 +20,9 @@
 #include <physfs.h>
 
 #include "input/controller.hpp"
-#include "screen_manager.hpp"
+#include "screen/screen_manager.hpp"
 #include "armature/pose.hpp"
-#include "armature_test.hpp"
+#include "screen/armature_test.hpp"
 
 ArmatureTest::ArmatureTest()
   : model(),

Modified: trunk/windstille/src/screen/armature_test.hpp
===================================================================
--- trunk/windstille/src/screen/armature_test.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/armature_test.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -22,7 +22,7 @@
 #include <boost/scoped_ptr.hpp>
 #include "armature/armature.hpp"
 #include "armature/model.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 
 /** */
 class ArmatureTest : public Screen

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include <GL/glew.h>
-#include "geometry_test.hpp"
+#include "screen/geometry_test.hpp"
 #include "app/console.hpp"
 #include "input/controller.hpp"
 #include "app/menu_manager.hpp"

Modified: trunk/windstille/src/screen/geometry_test.hpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/geometry_test.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_GEOMETRY_TEST_HPP
 #define HEADER_WINDSTILLE_SCREEN_GEOMETRY_TEST_HPP
 
-#include "screen.hpp"
+#include "screen/screen.hpp"
 #include "math/vector2f.hpp"
 #include "math/line.hpp"
 

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include "app/menu_manager.hpp"
 #include "navigation/node.hpp"
 #include "navigation/edge.hpp"
-#include "navigation_test.hpp"
+#include "screen/navigation_test.hpp"
 
 NavigationTest::NavigationTest()
   : cursor(400, 300),

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <boost/shared_ptr.hpp>
-#include "screen.hpp"
+#include "screen/screen.hpp"
 #include "sprite2d/sprite.hpp"
 #include "gui/gui_manager.hpp"
 #include "display/scene_context.hpp"

Modified: trunk/windstille/src/screen/sprite2dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/sprite2dview.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include "display/scene_context.hpp"
 #include "sprite2d/sprite.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 
 /**
  * A simple class to view 3d sprites and their different actions,

Modified: trunk/windstille/src/screen/sprite3dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/sprite3dview.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include "display/scene_context.hpp"
 #include "sprite3d/sprite3d.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 
 /**
  * A simple class to view 3d sprites and their different actions,

Modified: trunk/windstille/src/screen/title_screen.hpp
===================================================================
--- trunk/windstille/src/screen/title_screen.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/title_screen.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_SCREEN_TITLE_SCREEN_HPP
 
 #include "sprite2d/sprite.hpp"
-#include "screen.hpp"
+#include "screen/screen.hpp"
 
 /** */
 class TitleScreen : public Screen

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/screen/view.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
 #include "input/input_manager.hpp"
-#include "view.hpp"
+#include "screen/view.hpp"
 
 View::View()
   : state(Display::get_width(), Display::get_height()),

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "wrapper.interface.hpp"
+#include "scripting/wrapper.interface.hpp"
 
 
 #include "app/config.hpp"

Modified: trunk/windstille/src/scripting/squirrel_error.cpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "squirrel_error.hpp"
+#include "scripting/squirrel_error.hpp"
 #include <sstream>
 
 namespace Scripting {

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/scripting/util.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include "lisp/properties.hpp"
 #include "lisp/writer.hpp"
 
-#include "util.hpp"
+#include "scripting/util.hpp"
 
 namespace Scripting {
 

Modified: trunk/windstille/src/scripting/wrapper.interface.hpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.interface.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/scripting/wrapper.interface.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 
 // All functions that shall get exported to the scripting interface
 // have to be included here
-#include "interface.hpp"
-#include "game_objects.hpp"
+#include "scripting/interface.hpp"
+#include "scripting/game_objects.hpp"
 
 /* EOF */

Modified: trunk/windstille/src/sound/ogg_sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/ogg_sound_file.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/ogg_sound_file.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "ogg_sound_file.hpp"
+#include "sound/ogg_sound_file.hpp"
 
 OggSoundFile::OggSoundFile(PHYSFS_file* file_)
   : file(file_),

Modified: trunk/windstille/src/sound/ogg_sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/ogg_sound_file.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/ogg_sound_file.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,7 +23,7 @@
 #include <vorbis/vorbisfile.h>
 #include <physfs.h>
 
-#include "sound_file.hpp"
+#include "sound/sound_file.hpp"
 
 class OggSoundFile : public SoundFile
 {

Modified: trunk/windstille/src/sound/sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/sound_file.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/sound_file.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -23,8 +23,8 @@
 #include <stdexcept>
 #include <sstream>
 
-#include "ogg_sound_file.hpp"
-#include "wav_sound_file.hpp"
+#include "sound/ogg_sound_file.hpp"
+#include "sound/wav_sound_file.hpp"
 
 
 std::auto_ptr<SoundFile>

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,10 +20,10 @@
 #include <stdexcept>
 #include <sstream>
 
-#include "sound_file.hpp"
-#include "stream_sound_source.hpp"
+#include "sound/sound_file.hpp"
+#include "sound/stream_sound_source.hpp"
 
-#include "sound_manager.hpp"
+#include "sound/sound_manager.hpp"
 
 
 SoundManager::SoundManager()

Modified: trunk/windstille/src/sound/sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/sound_source.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/sound_source.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "sound_source.hpp"
-#include "sound_manager.hpp"
+#include "sound/sound_source.hpp"
+#include "sound/sound_manager.hpp"
 
 SoundSource::SoundSource()
   : source()

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,9 +18,9 @@
 
 #include <SDL.h>
 #include <boost/scoped_array.hpp>
-#include "stream_sound_source.hpp"
-#include "sound_manager.hpp"
-#include "sound_file.hpp"
+#include "sound/stream_sound_source.hpp"
+#include "sound/sound_manager.hpp"
+#include "sound/sound_file.hpp"
 
 StreamSoundSource::StreamSoundSource(std::auto_ptr<SoundFile> file_)
   : file(file_),

Modified: trunk/windstille/src/sound/stream_sound_source.hpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/stream_sound_source.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -21,7 +21,7 @@
 
 #include <memory>
 #include <stdio.h>
-#include "sound_source.hpp"
+#include "sound/sound_source.hpp"
 
 class SoundFile;
 

Modified: trunk/windstille/src/sound/wav_sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include <string.h>
 #include <stdexcept>
 
-#include "wav_sound_file.hpp"
+#include "sound/wav_sound_file.hpp"
 
 static inline uint32_t read32LE(PHYSFS_file* file)
 {

Modified: trunk/windstille/src/sound/wav_sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sound/wav_sound_file.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,7 +20,7 @@
 #define HEADER_WINDSTILLE_SOUND_WAV_SOUND_FILE_HPP
 
 #include <physfs.h>
-#include "sound_file.hpp"
+#include "sound/sound_file.hpp"
 
 class WavSoundFile : public SoundFile
 {

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -29,7 +29,7 @@
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
 #include "math/matrix.hpp"
-#include "manager.hpp"
+#include "sprite2d/manager.hpp"
 
 class DrawingContext;
 class Color;

Modified: trunk/windstille/src/tile/tile.cpp
===================================================================
--- trunk/windstille/src/tile/tile.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/tile/tile.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "tile.hpp"
+#include "tile/tile.hpp"
 
 Tile::Tile(unsigned int arg_colmap)
   : id(),

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,9 +17,9 @@
 */
 
 
-#include "tile.hpp"
-#include "tile_packer.hpp"
-#include "tile_factory.hpp"
+#include "tile/tile.hpp"
+#include "tile/tile_packer.hpp"
+#include "tile/tile_factory.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "display/software_surface.hpp"
 

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <GL/glew.h>
 #include "app/globals.hpp"
-#include "tile_packer.hpp"
+#include "tile/tile_packer.hpp"
 #include "util/util.hpp"
 #include "display/blitter.hpp"
 #include "display/software_surface.hpp"

Modified: trunk/windstille/src/util/baby_xml.cpp
===================================================================
--- trunk/windstille/src/util/baby_xml.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/baby_xml.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -18,7 +18,7 @@
 
 #include <sstream>
 #include <stdexcept>
-#include "baby_xml.hpp"
+#include "util/baby_xml.hpp"
 
 class BabyXMLReader
 {

Modified: trunk/windstille/src/util/command_line.cpp
===================================================================
--- trunk/windstille/src/util/command_line.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/command_line.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -27,7 +27,7 @@
 **    (if your name is missing here, please add it)
 */
 
-#include "command_line_generic.hpp"
+#include "util/command_line_generic.hpp"
 
 CommandLine::CommandLine()
   : impl(new CommandLine_Generic())

Modified: trunk/windstille/src/util/command_line_generic.cpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/command_line_generic.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -31,7 +31,7 @@
 #include <iostream>
 #include <stdexcept>
 
-#include "command_line_generic.hpp"
+#include "util/command_line_generic.hpp"
 
 
 #ifdef WIN32

Modified: trunk/windstille/src/util/command_line_generic.hpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/command_line_generic.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -36,7 +36,7 @@
 
 #include <string>
 #include <vector>
-#include "command_line.hpp"
+#include "util/command_line.hpp"
 
 class CommandLine_Generic
 {

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -20,8 +20,8 @@
 #include <fstream>
 
 #include "lisp/parser.hpp"
-#include "sexpr_file_reader.hpp"
-#include "file_reader_impl.hpp"
+#include "util/sexpr_file_reader.hpp"
+#include "util/file_reader_impl.hpp"
 
 FileReader
 FileReader::parse(const Pathname& filename)

Modified: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/file_writer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include <sstream>
 #include "display/color.hpp"
 #include "math/vector2f.hpp"
-#include "file_writer.hpp"
+#include "util/file_writer.hpp"
 
 FileWriter::FileWriter(std::ostream& out_)
   : out(out_),

Modified: trunk/windstille/src/util/getter.cpp
===================================================================
--- trunk/windstille/src/util/getter.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/getter.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #include "math/vector2f.hpp"
 #include "math/quaternion.hpp"
 #include "display/color.hpp"
-#include "file_reader.hpp"
+#include "util/file_reader.hpp"
 
 bool get(const FileReader& reader, const char* name, Vector2f&  value)
 {

Modified: trunk/windstille/src/util/getter.hpp
===================================================================
--- trunk/windstille/src/util/getter.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/getter.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_UTIL_GETTER_HPP
 #define HEADER_WINDSTILLE_UTIL_GETTER_HPP
 
-#include "file_reader.hpp"
+#include "util/file_reader.hpp"
 
 class FileReader;
 class Quaternion;

Modified: trunk/windstille/src/util/response_curve.cpp
===================================================================
--- trunk/windstille/src/util/response_curve.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/response_curve.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -17,7 +17,7 @@
 */
 
 #include "math/math.hpp"
-#include "response_curve.hpp"
+#include "util/response_curve.hpp"
 
 ResponseCurve::ResponseCurve(float i_min_, float i_max_, const std::vector<float>& samples_)
   : i_min(i_min_),

Modified: trunk/windstille/src/util/sexpr_file_reader.cpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,8 +19,8 @@
 #include <string.h>
 
 #include "lisp/getters.hpp"
-#include "file_reader_impl.hpp"
-#include "sexpr_file_reader.hpp"
+#include "util/file_reader_impl.hpp"
+#include "util/sexpr_file_reader.hpp"
 
 class SExprFileReaderImpl: public FileReaderImpl
 {

Modified: trunk/windstille/src/util/sexpr_file_reader.hpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.hpp	2009-08-24 23:21:24 UTC (rev 3048)
+++ trunk/windstille/src/util/sexpr_file_reader.hpp	2009-08-24 23:22:11 UTC (rev 3049)
@@ -19,7 +19,7 @@
 #ifndef HEADER_WINDSTILLE_UTIL_SEXPR_FILE_READER_HPP
 #define HEADER_WINDSTILLE_UTIL_SEXPR_FILE_READER_HPP
 
-#include "file_reader.hpp"
+#include "util/file_reader.hpp"
 #include "lisp/lisp.hpp"
 
 class SExprFileReader : public FileReader



From grumbel at mail.berlios.de  Tue Aug 25 01:25:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 01:25:39 +0200
Subject: [Windstille-commit] r3050 - in trunk/windstille/src: app armature
	collision display editor engine gui hud input lisp math
	navigation objects screen sound sprite2d sprite3d tile util
Message-ID: <200908242325.n7ONPdod031981@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 01:25:33 +0200 (Tue, 25 Aug 2009)
New Revision: 3050

Modified:
   trunk/windstille/src/app/config.hpp
   trunk/windstille/src/armature/armature.cpp
   trunk/windstille/src/armature/armature.hpp
   trunk/windstille/src/armature/bone.hpp
   trunk/windstille/src/armature/mesh.hpp
   trunk/windstille/src/armature/model.cpp
   trunk/windstille/src/armature/pose.cpp
   trunk/windstille/src/armature/pose_bone.hpp
   trunk/windstille/src/collision/collision_data.hpp
   trunk/windstille/src/collision/collision_object.hpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/display/framebuffer.cpp
   trunk/windstille/src/display/surface_drawing_parameters.hpp
   trunk/windstille/src/display/text_area.hpp
   trunk/windstille/src/display/vertex_array_drawing_request.hpp
   trunk/windstille/src/editor/about_window.cpp
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/group_command.hpp
   trunk/windstille/src/editor/undo_manager.hpp
   trunk/windstille/src/engine/game_object.hpp
   trunk/windstille/src/gui/button.hpp
   trunk/windstille/src/gui/group_component.hpp
   trunk/windstille/src/gui/gui_manager.hpp
   trunk/windstille/src/gui/label.hpp
   trunk/windstille/src/gui/list_view.hpp
   trunk/windstille/src/gui/menu_component.hpp
   trunk/windstille/src/gui/menu_item.hpp
   trunk/windstille/src/gui/root_component.cpp
   trunk/windstille/src/gui/root_component.hpp
   trunk/windstille/src/gui/tab_component.hpp
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/pda.hpp
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/controller.hpp
   trunk/windstille/src/input/controller_description.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/lisp/lexer.cpp
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/lisp/parser.hpp
   trunk/windstille/src/lisp/properties.hpp
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/math/point.hpp
   trunk/windstille/src/math/quaternion.hpp
   trunk/windstille/src/math/vector2f.cpp
   trunk/windstille/src/math/vector3.hpp
   trunk/windstille/src/navigation/edge.cpp
   trunk/windstille/src/navigation/navigation_graph.hpp
   trunk/windstille/src/navigation/node.hpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/liquid.hpp
   trunk/windstille/src/objects/scriptable_object.hpp
   trunk/windstille/src/objects/test_object.hpp
   trunk/windstille/src/objects/trigger.hpp
   trunk/windstille/src/screen/armature_test.hpp
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
   trunk/windstille/src/sound/sound_source.hpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/sound/stream_sound_source.hpp
   trunk/windstille/src/sound/wav_sound_file.hpp
   trunk/windstille/src/sprite2d/data.hpp
   trunk/windstille/src/sprite3d/data.hpp
   trunk/windstille/src/sprite3d/sprite3d.hpp
   trunk/windstille/src/tile/tile.hpp
   trunk/windstille/src/tile/tile_description.hpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/util/baby_xml.cpp
   trunk/windstille/src/util/command_line_generic.hpp
   trunk/windstille/src/util/file_writer.cpp
Log:
Inserted a newline between system includes and local ones

Modified: trunk/windstille/src/app/config.hpp
===================================================================
--- trunk/windstille/src/app/config.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/app/config.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -23,6 +23,7 @@
 #include <string>
 #include <typeinfo>
 #include <stdexcept>
+
 #include "lisp/writer.hpp"
 
 class ConfigValueBase

Modified: trunk/windstille/src/armature/armature.cpp
===================================================================
--- trunk/windstille/src/armature/armature.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/armature.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -18,6 +18,7 @@
 
 #include <GL/glew.h>
 #include <stdexcept>
+
 #include "display/opengl_state.hpp"
 #include "display/display.hpp"
 #include "armature/pose.hpp"

Modified: trunk/windstille/src/armature/armature.hpp
===================================================================
--- trunk/windstille/src/armature/armature.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/armature.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_ARMATURE_ARMATURE_HPP
 
 #include <vector>
+
 #include "armature/bone.hpp"
 #include "util/file_reader.hpp"
 

Modified: trunk/windstille/src/armature/bone.hpp
===================================================================
--- trunk/windstille/src/armature/bone.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/bone.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <string>
 #include <vector>
+
 #include "math/quaternion.hpp"
 #include "math/vector3.hpp"
 #include "math/matrix.hpp"

Modified: trunk/windstille/src/armature/mesh.hpp
===================================================================
--- trunk/windstille/src/armature/mesh.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/mesh.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -23,6 +23,7 @@
 #include <GL/gl.h>
 #include <string>
 #include <vector>
+
 #include "math/vector2f.hpp"
 #include "math/vector3.hpp"
 #include "display/texture.hpp"

Modified: trunk/windstille/src/armature/model.cpp
===================================================================
--- trunk/windstille/src/armature/model.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/model.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <stdexcept>
+
 #include "util/file_reader.hpp"
 #include "armature/mesh.hpp"
 #include "armature/model.hpp"

Modified: trunk/windstille/src/armature/pose.cpp
===================================================================
--- trunk/windstille/src/armature/pose.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/pose.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <stdexcept>
+
 #include "util/file_reader.hpp"
 #include "armature/pose.hpp"
 

Modified: trunk/windstille/src/armature/pose_bone.hpp
===================================================================
--- trunk/windstille/src/armature/pose_bone.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/armature/pose_bone.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_ARMATURE_POSE_BONE_HPP
 
 #include <string>
+
 #include "math/quaternion.hpp"
 
 /** */

Modified: trunk/windstille/src/collision/collision_data.hpp
===================================================================
--- trunk/windstille/src/collision/collision_data.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/collision/collision_data.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 #define HEADER_WINDSTILLE_COLLISION_COLLISION_DATA_HPP
 
 #include <iostream>
+
 #include "math/vector2f.hpp"
 
 class CollisionObject;

Modified: trunk/windstille/src/collision/collision_object.hpp
===================================================================
--- trunk/windstille/src/collision/collision_object.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/collision/collision_object.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 #define HEADER_WINDSTILLE_COLLISION_COLLISION_OBJECT_HPP
 
 #include <boost/signals.hpp>
+
 #include "math/vector2f.hpp"
 #include "math/rect.hpp"
 #include "collision/collision_data.hpp"

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -23,6 +23,7 @@
 #include "math/matrix.hpp"
 #include "math/rect.hpp"
 #include <vector>
+
 #include "display/color.hpp"
 #include "display/drawing_request.hpp"
 

Modified: trunk/windstille/src/display/framebuffer.cpp
===================================================================
--- trunk/windstille/src/display/framebuffer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/display/framebuffer.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <GL/glew.h>
+
 #include "util/util.hpp"
 #include "display/render_buffer.hpp"
 #include "display/framebuffer.hpp"

Modified: trunk/windstille/src/display/surface_drawing_parameters.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_parameters.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/display/surface_drawing_parameters.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <GL/glew.h>
 #include <GL/gl.h>
+
 #include "math/vector2f.hpp"
 #include "display/color.hpp"
 

Modified: trunk/windstille/src/display/text_area.hpp
===================================================================
--- trunk/windstille/src/display/text_area.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/display/text_area.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <string>
+
 #include "math/rect.hpp"
 
 class TTFFont;

Modified: trunk/windstille/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
 
 #include <vector>
+
 #include "display/color.hpp"
 #include "math/matrix.hpp"
 #include "display/texture.hpp"

Modified: trunk/windstille/src/editor/about_window.cpp
===================================================================
--- trunk/windstille/src/editor/about_window.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/editor/about_window.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <gtkmm/stock.h>
+
 #include "editor/about_window.hpp"
 
 AboutWindow::AboutWindow()

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/editor/control_point.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <iostream>
+
 #include "display/scene_context.hpp"
 #include "editor/control_point.hpp"
 

Modified: trunk/windstille/src/editor/group_command.hpp
===================================================================
--- trunk/windstille/src/editor/group_command.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/editor/group_command.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_GROUP_COMMAND_HPP
 
 #include <vector>
+
 #include "editor/command.hpp"
 
 class GroupCommand : public Command

Modified: trunk/windstille/src/editor/undo_manager.hpp
===================================================================
--- trunk/windstille/src/editor/undo_manager.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/editor/undo_manager.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_UNDO_MANAGER_HPP
 
 #include <vector>
+
 #include "editor/command.hpp"
 
 class UndoManager

Modified: trunk/windstille/src/engine/game_object.hpp
===================================================================
--- trunk/windstille/src/engine/game_object.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/engine/game_object.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_ENGINE_GAME_OBJECT_HPP
 
 #include <string>
+
 #include "util/file_reader.hpp"
 #include "display/scene_context.hpp"
 

Modified: trunk/windstille/src/gui/button.hpp
===================================================================
--- trunk/windstille/src/gui/button.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/button.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_BUTTON_HPP
 
 #include <string>
+
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/group_component.hpp
===================================================================
--- trunk/windstille/src/gui/group_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/group_component.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <string>
+
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/gui_manager.hpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/gui_manager.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 
 #include <boost/scoped_ptr.hpp>
+
 #include "screen/screen.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/label.hpp
===================================================================
--- trunk/windstille/src/gui/label.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/label.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_LABEL_HPP
 
 #include <string>
+
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/list_view.hpp
===================================================================
--- trunk/windstille/src/gui/list_view.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/list_view.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <vector>
 #include <string>
+
 #include "gui/component.hpp"
 
 namespace gui { 

Modified: trunk/windstille/src/gui/menu_component.hpp
===================================================================
--- trunk/windstille/src/gui/menu_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/menu_component.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <string>
 #include <vector>
+
 #include "font/fonts.hpp"
 #include "gui/component.hpp"
 

Modified: trunk/windstille/src/gui/menu_item.hpp
===================================================================
--- trunk/windstille/src/gui/menu_item.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/menu_item.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -22,6 +22,7 @@
 #include <boost/signal.hpp>
 #include <string>
 #include <vector>
+
 #include "math/rect.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/root_component.cpp
===================================================================
--- trunk/windstille/src/gui/root_component.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/root_component.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <algorithm>
+
 #include "app/console.hpp"
 #include "input/controller.hpp"
 #include "gui/root_component.hpp"

Modified: trunk/windstille/src/gui/root_component.hpp
===================================================================
--- trunk/windstille/src/gui/root_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/root_component.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_ROOT_COMPONENT_HPP
 
 #include <vector>
+
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/tab_component.hpp
===================================================================
--- trunk/windstille/src/gui/tab_component.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/gui/tab_component.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <string>
 #include <vector>
+
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/hud/pda.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <sstream>
+
 #include "input/input_manager.hpp"
 #include "display/display.hpp"
 #include "display/text_area.hpp"

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/hud/pda.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_HUD_PDA_HPP
 
 #include <boost/scoped_ptr.hpp>
+
 #include "sprite2d/sprite.hpp"
 #include "screen/screen.hpp"
 

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/controller.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -19,6 +19,7 @@
 
 #include <math.h>
 #include <assert.h>
+
 #include "input/controller.hpp"
 
 Controller::Controller()

Modified: trunk/windstille/src/input/controller.hpp
===================================================================
--- trunk/windstille/src/input/controller.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/controller.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_INPUT_CONTROLLER_HPP
 
 #include <vector>
+
 #include "app/controller_def.hpp"
 #include "input/input_event.hpp"
 

Modified: trunk/windstille/src/input/controller_description.cpp
===================================================================
--- trunk/windstille/src/input/controller_description.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/controller_description.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <stdexcept>
+
 #include "input/controller_description.hpp"
 
 

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -19,12 +19,13 @@
 #include <boost/format.hpp>
 
 #include <sstream>
+
 #include "math/math.hpp"
 #include "app/config.hpp"
 #include "util/file_reader.hpp"
-#include "input/input_manager_sdl.hpp"
+#include "input_manager_sdl.hpp"
 #ifdef HAVE_CWIID
-#include "input/wiimote.hpp"
+#include "wiimote.hpp"
 #endif
 
 const int dead_zone = 0;

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <iostream>
+
 #include "math/math.hpp"
 #include "input/wiimote.hpp"
 

Modified: trunk/windstille/src/lisp/lexer.cpp
===================================================================
--- trunk/windstille/src/lisp/lexer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/lisp/lexer.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -18,6 +18,7 @@
 #include <sstream>
 #include <stdexcept>
 #include <string.h>
+
 #include "lisp/lexer.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <string.h>
+
 #include "lisp/lisp.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/lisp/parser.hpp
===================================================================
--- trunk/windstille/src/lisp/parser.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/lisp/parser.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -18,6 +18,7 @@
 #define __LISPPARSER_H__
 
 #include <string>
+
 #include "lisp/lexer.hpp"
 
 namespace lisp

Modified: trunk/windstille/src/lisp/properties.hpp
===================================================================
--- trunk/windstille/src/lisp/properties.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/lisp/properties.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -2,6 +2,7 @@
 #define __PROPERTIES_HPP__
 
 #include <vector>
+
 #include "lisp/getters.hpp"
 #include "lisp/property_iterator.hpp"
 

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/math/matrix.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -31,6 +31,7 @@
 #include <string.h>
 #include <iomanip>
 #include <math.h>
+
 #include "vector3.hpp"
 
 /////////////////////////////////////////////////////////////////////////////

Modified: trunk/windstille/src/math/point.hpp
===================================================================
--- trunk/windstille/src/math/point.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/math/point.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -38,6 +38,7 @@
 #endif
 
 #include <cmath>
+
 #include "vector2f.hpp"
 
 class Vector2f;

Modified: trunk/windstille/src/math/quaternion.hpp
===================================================================
--- trunk/windstille/src/math/quaternion.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/math/quaternion.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define __QUATERNION_HPP__
 
 #include <math.h>
+
 #include "vector3.hpp"
 #include "math/matrix.hpp"
 

Modified: trunk/windstille/src/math/vector2f.cpp
===================================================================
--- trunk/windstille/src/math/vector2f.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/math/vector2f.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 
 #include <cmath>
 #include <iostream>
+
 #include "math/vector2f.hpp"
 
 void

Modified: trunk/windstille/src/math/vector3.hpp
===================================================================
--- trunk/windstille/src/math/vector3.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/math/vector3.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define __VECTOR3_HPP__
 
 #include <iostream>
+
 #include "math/matrix.hpp"
 
 /**

Modified: trunk/windstille/src/navigation/edge.cpp
===================================================================
--- trunk/windstille/src/navigation/edge.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/navigation/edge.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <assert.h>
+
 #include "navigation/node.hpp"
 #include "navigation/edge.hpp"
 

Modified: trunk/windstille/src/navigation/navigation_graph.hpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/navigation/navigation_graph.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <iosfwd>
 #include <vector>
+
 #include "math/line.hpp"
 
 class Rectf;

Modified: trunk/windstille/src/navigation/node.hpp
===================================================================
--- trunk/windstille/src/navigation/node.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/navigation/node.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_NAVIGATION_NODE_HPP
 
 #include <vector>
+
 #include "math/vector2f.hpp"
 
 #include "navigation/edge_position.hpp"

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/objects/box.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <boost/bind.hpp>
+
 #include "objects/box.hpp"
 #include "collision/collision_engine.hpp"
 

Modified: trunk/windstille/src/objects/liquid.hpp
===================================================================
--- trunk/windstille/src/objects/liquid.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/objects/liquid.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_OBJECTS_LIQUID_HPP
 
 #include <vector>
+
 #include "engine/entity.hpp"
 
 class Liquid : public Entity

Modified: trunk/windstille/src/objects/scriptable_object.hpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/objects/scriptable_object.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 #define HEADER_WINDSTILLE_OBJECTS_SCRIPTABLE_OBJECT_HPP
 
 #include <string>
+
 #include "engine/entity.hpp"
 #include "sprite2d/sprite.hpp"
 

Modified: trunk/windstille/src/objects/test_object.hpp
===================================================================
--- trunk/windstille/src/objects/test_object.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/objects/test_object.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_OBJECTS_TEST_OBJECT_HPP
 
 #include <vector>
+
 #include "engine/game_object.hpp"
 #include "sprite3d/sprite3d.hpp"
 #include "math/vector2f.hpp"

Modified: trunk/windstille/src/objects/trigger.hpp
===================================================================
--- trunk/windstille/src/objects/trigger.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/objects/trigger.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_OBJECTS_TRIGGER_HPP
 
 #include <vector>
+
 #include "engine/game_object.hpp"
 
 /** */

Modified: trunk/windstille/src/screen/armature_test.hpp
===================================================================
--- trunk/windstille/src/screen/armature_test.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/screen/armature_test.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_SCREEN_ARMATURE_TEST_HPP
 
 #include <boost/scoped_ptr.hpp>
+
 #include "armature/armature.hpp"
 #include "armature/model.hpp"
 #include "screen/screen.hpp"

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <GL/glew.h>
+
 #include "screen/geometry_test.hpp"
 #include "app/console.hpp"
 #include "input/controller.hpp"

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <GL/glew.h>
+
 #include "util/sexpr_file_reader.hpp"
 #include "input/controller.hpp"
 #include "display/display.hpp"

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <boost/shared_ptr.hpp>
+
 #include "screen/screen.hpp"
 #include "sprite2d/sprite.hpp"
 #include "gui/gui_manager.hpp"

Modified: trunk/windstille/src/sound/sound_source.hpp
===================================================================
--- trunk/windstille/src/sound/sound_source.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sound/sound_source.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_SOUND_SOUND_SOURCE_HPP
 
 #include <AL/al.h>
+
 #include "math/vector2f.hpp"
 
 class SoundSource

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -18,6 +18,7 @@
 
 #include <SDL.h>
 #include <boost/scoped_array.hpp>
+
 #include "sound/stream_sound_source.hpp"
 #include "sound/sound_manager.hpp"
 #include "sound/sound_file.hpp"

Modified: trunk/windstille/src/sound/stream_sound_source.hpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sound/stream_sound_source.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <memory>
 #include <stdio.h>
+
 #include "sound/sound_source.hpp"
 
 class SoundFile;

Modified: trunk/windstille/src/sound/wav_sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sound/wav_sound_file.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_SOUND_WAV_SOUND_FILE_HPP
 
 #include <physfs.h>
+
 #include "sound/sound_file.hpp"
 
 class WavSoundFile : public SoundFile

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -24,6 +24,7 @@
 #include <vector>
 #include <GL/glew.h>
 #include <GL/gl.h>
+
 #include "util/util.hpp"
 #include "util/file_reader.hpp"
 #include "math/vector2f.hpp"

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -24,6 +24,7 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include <vector>
+
 #include "display/texture.hpp"
 #include "math/vector3.hpp"
 #include "math/quaternion.hpp"

Modified: trunk/windstille/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <string>
 #include <stdint.h>
+
 #include "engine/game_object.hpp"
 #include "display/scene_context.hpp"
 #include "math/vector2f.hpp"

Modified: trunk/windstille/src/tile/tile.hpp
===================================================================
--- trunk/windstille/src/tile/tile.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/tile/tile.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -22,6 +22,7 @@
 #include <assert.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
+
 #include "display/texture.hpp"
 #include "math/rect.hpp"
 

Modified: trunk/windstille/src/tile/tile_description.hpp
===================================================================
--- trunk/windstille/src/tile/tile_description.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/tile/tile_description.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -21,6 +21,7 @@
 
 #include <vector>
 #include <string>
+
 #include "util/file_reader.hpp"
 
 class TileFactory;

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <GL/glew.h>
+
 #include "app/globals.hpp"
 #include "tile/tile_packer.hpp"
 #include "util/util.hpp"

Modified: trunk/windstille/src/util/baby_xml.cpp
===================================================================
--- trunk/windstille/src/util/baby_xml.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/util/baby_xml.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -18,6 +18,7 @@
 
 #include <sstream>
 #include <stdexcept>
+
 #include "util/baby_xml.hpp"
 
 class BabyXMLReader

Modified: trunk/windstille/src/util/command_line_generic.hpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/util/command_line_generic.hpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -36,6 +36,7 @@
 
 #include <string>
 #include <vector>
+
 #include "util/command_line.hpp"
 
 class CommandLine_Generic

Modified: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/util/file_writer.cpp	2009-08-24 23:25:33 UTC (rev 3050)
@@ -17,6 +17,7 @@
 */
 
 #include <sstream>
+
 #include "display/color.hpp"
 #include "math/vector2f.hpp"
 #include "util/file_writer.hpp"



From grumbel at mail.berlios.de  Tue Aug 25 01:29:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 01:29:56 +0200
Subject: [Windstille-commit] r3051 - in trunk/windstille/src: armature
	engine objects
Message-ID: <200908242329.n7ONTuqF010707@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 01:29:54 +0200 (Tue, 25 Aug 2009)
New Revision: 3051

Modified:
   trunk/windstille/src/armature/armature.cpp
   trunk/windstille/src/armature/pose.cpp
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/engine/camera.hpp
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/player.cpp
Log:
Some more include cleanup

Modified: trunk/windstille/src/armature/armature.cpp
===================================================================
--- trunk/windstille/src/armature/armature.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/armature/armature.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,13 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "armature/armature.hpp"
+
 #include <GL/glew.h>
 #include <stdexcept>
 
 #include "display/opengl_state.hpp"
 #include "display/display.hpp"
 #include "armature/pose.hpp"
-#include "armature/armature.hpp"
 
 Armature::Armature(FileReader& reader)
   : name(),

Modified: trunk/windstille/src/armature/pose.cpp
===================================================================
--- trunk/windstille/src/armature/pose.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/armature/pose.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,10 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "armature/pose.hpp"
+
 #include <stdexcept>
 
 #include "util/file_reader.hpp"
-#include "armature/pose.hpp"
 
 Pose::Pose(FileReader& reader)
   : name(),

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,11 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "engine/camera.hpp"
+
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
 #include "engine/script_manager.hpp"
 #include "display/display.hpp"
-#include "engine/camera.hpp"
 
 /**
  * Calculate the distance between two camera PathPoints, distance here

Modified: trunk/windstille/src/engine/camera.hpp
===================================================================
--- trunk/windstille/src/engine/camera.hpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/engine/camera.hpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -19,6 +19,9 @@
 #ifndef HEADER_WINDSTILLE_ENGINE_CAMERA_HPP
 #define HEADER_WINDSTILLE_ENGINE_CAMERA_HPP
 
+#include <vector>
+
+#include "math/vector2f.hpp"
 #include "util/currenton.hpp"
 
 /** 

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,10 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "engine/entity.hpp"
+
 #include "properties/property_set.hpp"
 #include "engine/sector.hpp"
 #include "tile/tile_map.hpp"
-#include "engine/entity.hpp"
 
 Entity::Entity()
   : done(),

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,10 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "engine/physics.hpp"
+
 #include <boost/bind.hpp>
 
-#include "engine/physics.hpp"
-
 Physics::Physics(Entity* entity)
   : entity(entity),
     mass(200.0),

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "engine/sector.hpp"
+
 #include "objects/background_gradient.hpp"
 #include "tile/tile_map.hpp"
 #include "objects/player.hpp"
@@ -38,9 +40,6 @@
 #include "navigation/navigation_graph.hpp"
 #include "scenegraph/scene_graph.hpp"
 #include "engine/squirrel_thread.hpp"
-
-
-//Sector* Sector::current_ = 0;
 
 Sector::Sector(const Pathname& arg_filename)
   : collision_engine(new CollisionEngine()),

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/objects/box.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,9 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "objects/box.hpp"
+
 #include <boost/bind.hpp>
 
-#include "objects/box.hpp"
 #include "collision/collision_engine.hpp"
 
 Box::Box(FileReader& props)

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-24 23:25:33 UTC (rev 3050)
+++ trunk/windstille/src/objects/player.cpp	2009-08-24 23:29:54 UTC (rev 3051)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "objects/player.hpp"
+
 #include <boost/bind.hpp>
 
 #include "collision/collision_engine.hpp"
@@ -24,7 +26,6 @@
 #include "objects/grenade.hpp"
 #include "objects/laser_pointer.hpp"
 #include "objects/pistol.hpp"
-#include "objects/player.hpp"
 #include "screen/game_session.hpp"
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"



From grumbel at mail.berlios.de  Tue Aug 25 01:32:40 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 01:32:40 +0200
Subject: [Windstille-commit] r3052 - in trunk/windstille/src: input particles
Message-ID: <200908242332.n7ONWeRk020453@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 01:32:39 +0200 (Tue, 25 Aug 2009)
New Revision: 3052

Modified:
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/input/wiimote.hpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/deform_drawer.hpp
Log:
Some more include cleanup

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-08-24 23:29:54 UTC (rev 3051)
+++ trunk/windstille/src/input/controller.cpp	2009-08-24 23:32:39 UTC (rev 3052)
@@ -17,11 +17,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "input/controller.hpp"
+
 #include <math.h>
 #include <assert.h>
 
-#include "input/controller.hpp"
-
 Controller::Controller()
   : states(LAST_EVENT),
     events()// FIXME: need to mark states with type

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-24 23:29:54 UTC (rev 3051)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-24 23:32:39 UTC (rev 3052)
@@ -16,10 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "input/wiimote.hpp"
+
 #include <iostream>
 
 #include "math/math.hpp"
-#include "input/wiimote.hpp"
 
 Wiimote* wiimote = 0;
 

Modified: trunk/windstille/src/input/wiimote.hpp
===================================================================
--- trunk/windstille/src/input/wiimote.hpp	2009-08-24 23:29:54 UTC (rev 3051)
+++ trunk/windstille/src/input/wiimote.hpp	2009-08-24 23:32:39 UTC (rev 3052)
@@ -22,6 +22,7 @@
 #ifdef HAVE_CWIID
 
 #include <vector>
+#include <pthread.h>
 #include <cwiid.h>
 
 struct WiimoteButtonEvent

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 23:29:54 UTC (rev 3051)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-24 23:32:39 UTC (rev 3052)
@@ -16,13 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "particles/deform_drawer.hpp"
+
 #include <GL/glew.h>
 
 #include "display/display.hpp"
 #include "display/shader_object.hpp"
 #include "particles/particle_system.hpp"
 #include "display/opengl_state.hpp"
-#include "particles/deform_drawer.hpp"
 
 class DeformDrawerRequest : public DrawingRequest
 {

Modified: trunk/windstille/src/particles/deform_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.hpp	2009-08-24 23:29:54 UTC (rev 3051)
+++ trunk/windstille/src/particles/deform_drawer.hpp	2009-08-24 23:32:39 UTC (rev 3052)
@@ -25,6 +25,7 @@
 #include "display/drawing_context.hpp"
 #include "particles/drawer.hpp"
 
+class FileReader;
 class SceneContext;
 class ParticleSystem;
 



From grumbel at mail.berlios.de  Tue Aug 25 03:27:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 03:27:23 +0200
Subject: [Windstille-commit] r3053 - in trunk/windstille/src: app armature
	collision display editor engine font gui hud input lisp math
	navigation objects physfs properties screen scripting sound
	sprite2d sprite3d tile util
Message-ID: <200908250127.n7P1RNa1003894@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 03:27:17 +0200 (Tue, 25 Aug 2009)
New Revision: 3053

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/config.hpp
   trunk/windstille/src/app/console.hpp
   trunk/windstille/src/app/controller_def.hpp
   trunk/windstille/src/app/globals.hpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/armature/armature.hpp
   trunk/windstille/src/armature/bone.hpp
   trunk/windstille/src/armature/mesh.cpp
   trunk/windstille/src/armature/mesh.hpp
   trunk/windstille/src/armature/pose.hpp
   trunk/windstille/src/collision/collision_object.cpp
   trunk/windstille/src/collision/collision_object.hpp
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/display/opengl_state.hpp
   trunk/windstille/src/display/opengl_window.hpp
   trunk/windstille/src/display/render_buffer.hpp
   trunk/windstille/src/display/shader_object.cpp
   trunk/windstille/src/display/software_surface.hpp
   trunk/windstille/src/display/surface.hpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.hpp
   trunk/windstille/src/editor/about_window.hpp
   trunk/windstille/src/editor/layer.hpp
   trunk/windstille/src/editor/layer_manager.hpp
   trunk/windstille/src/editor/layer_widget.hpp
   trunk/windstille/src/editor/minimap_widget.hpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/zoom_tool.cpp
   trunk/windstille/src/engine/entity.hpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/font/fonts.hpp
   trunk/windstille/src/gui/button.hpp
   trunk/windstille/src/gui/group_component.hpp
   trunk/windstille/src/gui/label.hpp
   trunk/windstille/src/gui/list_view.hpp
   trunk/windstille/src/gui/menu.hpp
   trunk/windstille/src/gui/menu_component.hpp
   trunk/windstille/src/gui/menu_item.hpp
   trunk/windstille/src/gui/tab_component.hpp
   trunk/windstille/src/hud/controller_help_window.hpp
   trunk/windstille/src/hud/conversation.hpp
   trunk/windstille/src/hud/dialog_manager.hpp
   trunk/windstille/src/hud/pda.hpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/lisp/lisp.hpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/properties.hpp
   trunk/windstille/src/lisp/writer.hpp
   trunk/windstille/src/math/matrix.hpp
   trunk/windstille/src/math/origin.hpp
   trunk/windstille/src/math/quaternion.hpp
   trunk/windstille/src/math/rect.hpp
   trunk/windstille/src/navigation/navigation_graph.hpp
   trunk/windstille/src/navigation/properties.hpp
   trunk/windstille/src/objects/elevator.hpp
   trunk/windstille/src/objects/grenade.hpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/objects/shockwave.hpp
   trunk/windstille/src/physfs/physfs_stream.hpp
   trunk/windstille/src/properties/properties.hpp
   trunk/windstille/src/properties/property.hpp
   trunk/windstille/src/properties/property_set.hpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/sprite3dview.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/sound/ogg_sound_file.hpp
   trunk/windstille/src/sound/sound_file.hpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite2d/data.hpp
   trunk/windstille/src/sprite2d/manager.hpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/sprite3d/data.hpp
   trunk/windstille/src/sprite3d/manager.hpp
   trunk/windstille/src/tile/tile.hpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_factory.hpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/util/baby_xml.hpp
   trunk/windstille/src/util/command_line_generic.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_writer.hpp
   trunk/windstille/src/util/pathname.hpp
   trunk/windstille/src/util/sexpr_file_reader.hpp
   trunk/windstille/src/util/util.hpp
Log:
Radical cleanup of unneeded includes, performed mostly automatically, so might introduce a few bugs with other compilers

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/config.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,6 +18,7 @@
 
 #include "app/config.hpp"
 
+#include <iostream>
 #include <boost/format.hpp>
 
 #include "app/windstille.hpp"

Modified: trunk/windstille/src/app/config.hpp
===================================================================
--- trunk/windstille/src/app/config.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/config.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,8 +20,6 @@
 #define HEADER_WINDSTILLE_APP_CONFIG_HPP
 
 #include <map>
-#include <string>
-#include <typeinfo>
 #include <stdexcept>
 
 #include "lisp/writer.hpp"

Modified: trunk/windstille/src/app/console.hpp
===================================================================
--- trunk/windstille/src/app/console.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/console.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,8 +20,7 @@
 #define HEADER_WINDSTILLE_APP_CONSOLE_HPP
 
 #include <boost/scoped_ptr.hpp>
-#include <vector>
-#include <sstream>
+#include <ostream>
 
 class ConsoleImpl;
 

Modified: trunk/windstille/src/app/controller_def.hpp
===================================================================
--- trunk/windstille/src/app/controller_def.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/controller_def.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,10 +19,7 @@
 #ifndef HEADER_WINDSTILLE_APP_CONTROLLER_DEF_HPP
 #define HEADER_WINDSTILLE_APP_CONTROLLER_DEF_HPP
 
-#include <map>
-#include <string>
 
-#include "input/input_event.hpp"
 #include "input/controller_description.hpp"
 
 enum InputEventName

Modified: trunk/windstille/src/app/globals.hpp
===================================================================
--- trunk/windstille/src/app/globals.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/globals.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_APP_GLOBALS_HPP
 #define HEADER_WINDSTILLE_APP_GLOBALS_HPP
 
-#include <string>
 
 typedef enum { WEST, EAST} Direction;
 

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_APP_MENU_MANAGER_HPP
 #define HEADER_WINDSTILLE_APP_MENU_MANAGER_HPP
 
-#include <vector>
 
 #include "math/rect.hpp"
 

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <sstream>
 #include <boost/filesystem.hpp>
 #include <physfs.h>
 

Modified: trunk/windstille/src/armature/armature.hpp
===================================================================
--- trunk/windstille/src/armature/armature.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/armature/armature.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_ARMATURE_ARMATURE_HPP
 #define HEADER_WINDSTILLE_ARMATURE_ARMATURE_HPP
 
-#include <vector>
 
 #include "armature/bone.hpp"
 #include "util/file_reader.hpp"

Modified: trunk/windstille/src/armature/bone.hpp
===================================================================
--- trunk/windstille/src/armature/bone.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/armature/bone.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,12 +19,9 @@
 #ifndef HEADER_WINDSTILLE_ARMATURE_BONE_HPP
 #define HEADER_WINDSTILLE_ARMATURE_BONE_HPP
 
-#include <string>
 #include <vector>
 
 #include "math/quaternion.hpp"
-#include "math/vector3.hpp"
-#include "math/matrix.hpp"
 
 /** */
 class Bone

Modified: trunk/windstille/src/armature/mesh.cpp
===================================================================
--- trunk/windstille/src/armature/mesh.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/armature/mesh.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,11 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "armature/mesh.hpp"
+
+#include <stdexcept>
+
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "display/texture_manager.hpp"
 #include "armature/armature.hpp"
-#include "armature/mesh.hpp"
 
 Mesh::Mesh(FileReader& reader, const std::string& path)
   : name(),

Modified: trunk/windstille/src/armature/mesh.hpp
===================================================================
--- trunk/windstille/src/armature/mesh.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/armature/mesh.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,6 @@
 #define HEADER_WINDSTILLE_ARMATURE_MESH_HPP
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include <string>
 #include <vector>
 

Modified: trunk/windstille/src/armature/pose.hpp
===================================================================
--- trunk/windstille/src/armature/pose.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/armature/pose.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_ARMATURE_POSE_HPP
 #define HEADER_WINDSTILLE_ARMATURE_POSE_HPP
 
-#include <string>
 #include <vector>
 
 #include "armature/pose_bone.hpp"

Modified: trunk/windstille/src/collision/collision_object.cpp
===================================================================
--- trunk/windstille/src/collision/collision_object.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/collision/collision_object.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,6 +19,7 @@
 
 #include "collision/collision_object.hpp"
 
+#include "display/color.hpp"
 #include "display/drawing_context.hpp"
 
 /***********************************************************************

Modified: trunk/windstille/src/collision/collision_object.hpp
===================================================================
--- trunk/windstille/src/collision/collision_object.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/collision/collision_object.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,7 +22,6 @@
 
 #include <boost/signals.hpp>
 
-#include "math/vector2f.hpp"
 #include "math/rect.hpp"
 #include "collision/collision_data.hpp"
 

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/blitter.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -17,7 +17,10 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include "blitter.hpp"
 
+#include <string.h>
+
 #include "display/software_surface.hpp"
 
 void generate_border(const SoftwareSurface& surface,

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/display.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -21,8 +21,6 @@
 
 #include <vector>
 
-#include "math/size.hpp"
-#include "math/rect.hpp"
 #include "math/quad.hpp"
 #include "math/line.hpp"
 #include "display/color.hpp"

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "display/drawing_context.hpp"
+
 #include <GL/glew.h>
 
 #include "math/vector3.hpp"

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,12 +19,8 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_DRAWING_CONTEXT_HPP
 #define HEADER_WINDSTILLE_DISPLAY_DRAWING_CONTEXT_HPP
 
-#include "math/vector2f.hpp"
-#include "math/matrix.hpp"
-#include "math/rect.hpp"
 #include <vector>
 
-#include "display/color.hpp"
 #include "display/drawing_request.hpp"
 
 class Texture;
@@ -35,6 +31,7 @@
 class Sprite;
 class Quad;
 class Line;
+class Color;
 
 /** The DrawingContext collects all DrawingRequests and allows you to
     flush them all down to the graphics card in one run, this has the

Modified: trunk/windstille/src/display/opengl_state.hpp
===================================================================
--- trunk/windstille/src/display/opengl_state.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/opengl_state.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,6 @@
 #define HEADER_WINDSTILLE_DISPLAY_OPENGL_STATE_HPP
 
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include <boost/scoped_ptr.hpp>
 
 class Framebuffer;

Modified: trunk/windstille/src/display/opengl_window.hpp
===================================================================
--- trunk/windstille/src/display/opengl_window.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/opengl_window.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,6 @@
 #define HEADER_WINDSTILLE_DISPLAY_OPENGL_WINDOW_HPP
 
 #include <SDL.h>
-#include <string>
 
 #include "util/currenton.hpp"
 

Modified: trunk/windstille/src/display/render_buffer.hpp
===================================================================
--- trunk/windstille/src/display/render_buffer.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/render_buffer.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_RENDER_BUFFER_HPP
 #define HEADER_WINDSTILLE_DISPLAY_RENDER_BUFFER_HPP
 
-#include <GL/gl.h>
 #include <boost/shared_ptr.hpp>
 
 class RenderBufferImpl;

Modified: trunk/windstille/src/display/shader_object.cpp
===================================================================
--- trunk/windstille/src/display/shader_object.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/shader_object.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,10 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "display/shader_object.hpp"
+
 #include <iostream>
 
 #include "util/util.hpp"
-#include "display/shader_object.hpp"
 
 /** Read a file, user must free() the returned pointer */
 static GLchar* load_file(const char* filename)

Modified: trunk/windstille/src/display/software_surface.hpp
===================================================================
--- trunk/windstille/src/display/software_surface.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/software_surface.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,12 +19,13 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SOFTWARE_SURFACE_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SOFTWARE_SURFACE_HPP
 
-#include "SDL.h"
 #include <boost/shared_ptr.hpp>
-#include <string>
 
 #include "util/pathname.hpp"
 #include "math/size.hpp"
+
+typedef struct SDL_Surface SDL_Surface;
+
 
 class Rect;
 class SoftwareSurfaceImpl;

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/surface.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,12 +19,8 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SURFACE_HPP
 
-#include <string>
-#include <boost/shared_ptr.hpp>
 
-#include "util/pathname.hpp"
 #include "math/rect.hpp"
-#include "math/size.hpp"
 #include "display/texture.hpp"
 
 class SurfaceDrawingParameters;

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/texture.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,6 +19,7 @@
 
 #include "display/texture.hpp"
 
+#include <stdexcept>
 
 #include "math/rect.hpp"
 #include "display/software_surface.hpp"

Modified: trunk/windstille/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,8 +22,6 @@
 #include <vector>
 
 #include "display/color.hpp"
-#include "math/matrix.hpp"
-#include "display/texture.hpp"
 #include "display/drawing_request.hpp"
 
 /** */

Modified: trunk/windstille/src/editor/about_window.hpp
===================================================================
--- trunk/windstille/src/editor/about_window.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/about_window.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,9 +20,6 @@
 #define HEADER_WINDSTILLE_EDITOR_ABOUT_WINDOW_HPP
 
 #include <gtkmm/aboutdialog.h>
-#include <gtkmm/box.h>
-#include <gtkmm/textview.h>
-#include <gtkmm/button.h>
 
 class AboutWindow : public Gtk::AboutDialog
 {

Modified: trunk/windstille/src/editor/layer.hpp
===================================================================
--- trunk/windstille/src/editor/layer.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/layer.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,14 +19,9 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_LAYER_HPP
 #define HEADER_WINDSTILLE_EDITOR_LAYER_HPP
 
-#include <boost/shared_ptr.hpp>
-#include <list>
-#include <set>
-#include <string>
 #include <gtkmm/treemodel.h>
 
 #include "editor/selection.hpp"
-#include "editor/object_model.hpp"
 
 class Layer;
 typedef boost::shared_ptr<Layer> LayerHandle;

Modified: trunk/windstille/src/editor/layer_manager.hpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/layer_manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,13 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_LAYER_MANAGER_HPP
 #define HEADER_WINDSTILLE_EDITOR_LAYER_MANAGER_HPP
 
-#include <gtkmm/treeview.h>
-#include <gtkmm/scrolledwindow.h>
-#include <gtkmm/label.h>
-#include <gtkmm/box.h>
 #include <gtkmm/uimanager.h>
-#include <gtkmm/treemodel.h>
-#include <gtkmm/actiongroup.h>
 
 class SectorModel;
 class EditorWindow;

Modified: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,7 +22,6 @@
 #include <gtkmm/toolitem.h>
 #include <gtkmm/table.h>
 
-#include "editor/select_mask.hpp"
 
 class LayerWidget : public Gtk::ToolItem
 {

Modified: trunk/windstille/src/editor/minimap_widget.hpp
===================================================================
--- trunk/windstille/src/editor/minimap_widget.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/minimap_widget.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,8 +20,6 @@
 #define HEADER_WINDSTILLE_EDITOR_MINIMAP_WIDGET_HPP
 
 #include <gtkglmm.h>
-#include <gdkmm/dragcontext.h>
-#include <gtkmm/gl/widget.h>
 
 /** Minimap Widget, 
  */

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/object_model.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,14 +19,10 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_HPP
 #define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_HPP
 
-#include <boost/shared_ptr.hpp>
 #include <boost/weak_ptr.hpp>
-#include <string>
 
 #include "editor/select_mask.hpp"
 #include "util/file_writer.hpp"
-#include "display/surface.hpp"
-#include "math/vector2f.hpp"
 #include "editor/control_point.hpp"
 #include "editor/snap_data.hpp"
 

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,9 +16,11 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "editor/zoom_tool.hpp"
+
 #include "display/scene_context.hpp"
+#include "display/color.hpp"
 #include "editor/windstille_widget.hpp"
-#include "editor/zoom_tool.hpp"
 
 ZoomTool::ZoomTool()
   : click_pos(),

Modified: trunk/windstille/src/engine/entity.hpp
===================================================================
--- trunk/windstille/src/engine/entity.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/engine/entity.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,9 +22,7 @@
 #include <boost/signal.hpp>
 
 #include "properties/properties.hpp"
-#include "collision/collision_object.hpp"
 #include "engine/game_object.hpp"
-#include "math/vector2f.hpp"
 
 /** A GameObject which has a position and some other properties which
     are shared among all/most things in the world */

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,6 +20,8 @@
 
 #include <boost/bind.hpp>
 
+#include "collision/collision_object.hpp"
+
 Physics::Physics(Entity* entity)
   : entity(entity),
     mass(200.0),

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
 #define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
 
-#include <string>
-#include <squirrel.h>
 
 #include "engine/script_manager.hpp"
 

Modified: trunk/windstille/src/font/fonts.hpp
===================================================================
--- trunk/windstille/src/font/fonts.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/font/fonts.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_FONT_FONTS_HPP
 #define HEADER_WINDSTILLE_FONT_FONTS_HPP
 
-#include <boost/scoped_ptr.hpp>
 
 #include "util/currenton.hpp"
 #include "font/ttf_font.hpp"

Modified: trunk/windstille/src/gui/button.hpp
===================================================================
--- trunk/windstille/src/gui/button.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/button.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_BUTTON_HPP
 #define HEADER_WINDSTILLE_GUI_BUTTON_HPP
 
-#include <string>
 
 #include "gui/component.hpp"
 

Modified: trunk/windstille/src/gui/group_component.hpp
===================================================================
--- trunk/windstille/src/gui/group_component.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/group_component.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_GROUP_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_GROUP_COMPONENT_HPP
 
-#include <boost/scoped_ptr.hpp>
-#include <string>
 
 #include "gui/component.hpp"
 

Modified: trunk/windstille/src/gui/label.hpp
===================================================================
--- trunk/windstille/src/gui/label.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/label.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_LABEL_HPP
 #define HEADER_WINDSTILLE_GUI_LABEL_HPP
 
-#include <string>
 
 #include "gui/component.hpp"
 

Modified: trunk/windstille/src/gui/list_view.hpp
===================================================================
--- trunk/windstille/src/gui/list_view.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/list_view.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,9 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_LIST_VIEW_HPP
 #define HEADER_WINDSTILLE_GUI_LIST_VIEW_HPP
 
-#include <vector>
-#include <string>
-
 #include "gui/component.hpp"
 
 namespace gui { 

Modified: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/menu.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_MENU_HPP
 #define HEADER_WINDSTILLE_GUI_MENU_HPP
 
-#include <memory>
-
 namespace gui {
 
 class GUIManager;

Modified: trunk/windstille/src/gui/menu_component.hpp
===================================================================
--- trunk/windstille/src/gui/menu_component.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/menu_component.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_MENU_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_MENU_COMPONENT_HPP
 
-#include <string>
-#include <vector>
 
 #include "font/fonts.hpp"
 #include "gui/component.hpp"

Modified: trunk/windstille/src/gui/menu_item.hpp
===================================================================
--- trunk/windstille/src/gui/menu_item.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/menu_item.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,10 +20,7 @@
 #define HEADER_WINDSTILLE_GUI_MENU_ITEM_HPP
 
 #include <boost/signal.hpp>
-#include <string>
-#include <vector>
 
-#include "math/rect.hpp"
 
 namespace gui {
 

Modified: trunk/windstille/src/gui/tab_component.hpp
===================================================================
--- trunk/windstille/src/gui/tab_component.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/gui/tab_component.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_TAB_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_TAB_COMPONENT_HPP
 
-#include <string>
-#include <vector>
 
 #include "gui/component.hpp"
 

Modified: trunk/windstille/src/hud/controller_help_window.hpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/hud/controller_help_window.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,6 @@
 #define HEADER_WINDSTILLE_HUD_CONTROLLER_HELP_WINDOW_HPP
 
 #include "screen/screen.hpp"
-#include <boost/shared_ptr.hpp>
 
 #include "util/currenton.hpp"
 

Modified: trunk/windstille/src/hud/conversation.hpp
===================================================================
--- trunk/windstille/src/hud/conversation.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/hud/conversation.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,11 +19,8 @@
 #ifndef HEADER_WINDSTILLE_HUD_CONVERSATION_HPP
 #define HEADER_WINDSTILLE_HUD_CONVERSATION_HPP
 
-#include <vector>
-#include <string>
 
 #include "screen/screen.hpp"
-#include "util/currenton.hpp"
 
 /** Displays a list of text strings from which the user can select
     one, used to form multiple-choice dialogs */

Modified: trunk/windstille/src/hud/dialog_manager.hpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/hud/dialog_manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -21,12 +21,9 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <vector>
-#include <string>
 
-#include "app/globals.hpp"
 #include "screen/screen.hpp"
 #include "sprite2d/sprite.hpp"
-#include "util/currenton.hpp"
 
 class TextArea;
 

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/hud/pda.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_HUD_PDA_HPP
 #define HEADER_WINDSTILLE_HUD_PDA_HPP
 
-#include <boost/scoped_ptr.hpp>
 
 #include "sprite2d/sprite.hpp"
 #include "screen/screen.hpp"

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -17,7 +17,7 @@
 */
 
 #include <boost/format.hpp>
-
+#include <iostream>
 #include <sstream>
 
 #include "math/math.hpp"
@@ -25,7 +25,7 @@
 #include "util/file_reader.hpp"
 #include "input_manager_sdl.hpp"
 #ifdef HAVE_CWIID
-#include "wiimote.hpp"
+#  include "wiimote.hpp"
 #endif
 
 const int dead_zone = 0;

Modified: trunk/windstille/src/lisp/lisp.hpp
===================================================================
--- trunk/windstille/src/lisp/lisp.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/lisp/lisp.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,10 +20,8 @@
 // unions aren't properly handled by -Weffc++, so we switch the warning off
 #pragma GCC diagnostic ignored "-Weffc++"
 
-#include <string>
 #include <vector>
 #include <iostream>
-#include <sstream>
 #include <stdexcept>
 #include <assert.h>
 

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,12 +16,14 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include "lisp/parser.hpp"
+
 #include <boost/scoped_ptr.hpp>
+#include <sstream>
 #include <string.h>
 
+#include "lisp/lisp.hpp"
 #include "physfs/physfs_stream.hpp"
-#include "lisp/parser.hpp"
-#include "lisp/lisp.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/properties.hpp
===================================================================
--- trunk/windstille/src/lisp/properties.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/lisp/properties.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -1,7 +1,6 @@
 #ifndef __PROPERTIES_HPP__
 #define __PROPERTIES_HPP__
 
-#include <vector>
 
 #include "lisp/getters.hpp"
 #include "lisp/property_iterator.hpp"

Modified: trunk/windstille/src/lisp/writer.hpp
===================================================================
--- trunk/windstille/src/lisp/writer.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/lisp/writer.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,7 +18,6 @@
 #ifndef SUPERTUX_LISPWRITER_H
 #define SUPERTUX_LISPWRITER_H
 
-#include <iostream>
 #include <string>
 #include <vector>
 

Modified: trunk/windstille/src/math/matrix.hpp
===================================================================
--- trunk/windstille/src/math/matrix.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/math/matrix.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -30,7 +30,6 @@
 #ifndef HEADER_MATH_MATRIX_HPP
 #define HEADER_MATH_MATRIX_HPP
 
-#include <iosfwd>
 
 class Vector3;
 

Modified: trunk/windstille/src/math/origin.hpp
===================================================================
--- trunk/windstille/src/math/origin.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/math/origin.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -35,7 +35,6 @@
 
 #include "math/size.hpp"
 #include "math/point.hpp"
-#include "vector2f.hpp"
 
 namespace origin {
 

Modified: trunk/windstille/src/math/quaternion.hpp
===================================================================
--- trunk/windstille/src/math/quaternion.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/math/quaternion.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,7 +22,6 @@
 #include <math.h>
 
 #include "vector3.hpp"
-#include "math/matrix.hpp"
 
 class Quaternion
 {

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/math/rect.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -30,11 +30,8 @@
 #ifndef __MATH_RECT_HPP__
 #define __MATH_RECT_HPP__
 
-#include <iosfwd>
 
 #include "math/origin.hpp"
-#include "math/vector2f.hpp"
-#include "math/size.hpp"
 #include "math/math.hpp"
 
 class Rectf;

Modified: trunk/windstille/src/navigation/navigation_graph.hpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/navigation/navigation_graph.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,14 +22,15 @@
 #include <iosfwd>
 #include <vector>
 
-#include "math/line.hpp"
 
-class Rectf;
-class Node;
+class Vector2f;
+class Edge;
+class EdgePosition;
 class FileReader;
 class FileWriter;
-class Edge;
-class EdgePosition;
+class Line;
+class Node;
+class Rectf;
 
 template<typename Data>
 class PointerHandle

Modified: trunk/windstille/src/navigation/properties.hpp
===================================================================
--- trunk/windstille/src/navigation/properties.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/navigation/properties.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_NAVIGATION_PROPERTIES_HPP
 #define HEADER_WINDSTILLE_NAVIGATION_PROPERTIES_HPP
 
-#include <inttypes.h>
 
 enum {
   WALKABLE = (1<<0),

Modified: trunk/windstille/src/objects/elevator.hpp
===================================================================
--- trunk/windstille/src/objects/elevator.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/objects/elevator.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -22,7 +22,8 @@
 #include "engine/entity.hpp"
 #include "sprite2d/sprite.hpp"
 
-/** */
+class CollisionObject;
+
 class Elevator : public Entity
 {
 private:

Modified: trunk/windstille/src/objects/grenade.hpp
===================================================================
--- trunk/windstille/src/objects/grenade.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/objects/grenade.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,9 +19,7 @@
 #ifndef HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 #define HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 
-#include <boost/scoped_ptr.hpp>
 
-#include "engine/entity.hpp"
 #include "engine/physics.hpp"
 #include "sprite3d/sprite3d.hpp"
 

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/objects/player.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -32,6 +32,8 @@
 class Controller;
 class Contact;
 class LaserPointer;
+class CollisionObject;
+class CollisionData;
 class Weapon;
 
 class Player : public Entity,

Modified: trunk/windstille/src/objects/shockwave.hpp
===================================================================
--- trunk/windstille/src/objects/shockwave.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/objects/shockwave.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,6 @@
 #define HEADER_WINDSTILLE_OBJECTS_SHOCKWAVE_HPP
 
 #include "display/shader_program.hpp"
-#include "display/texture.hpp"
 #include "engine/game_object.hpp"
 
 /** */

Modified: trunk/windstille/src/physfs/physfs_stream.hpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/physfs/physfs_stream.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,10 +18,7 @@
 #ifndef __PHYSFSSTREAM_HPP__
 #define __PHYSFSSTREAM_HPP__
 
-#include <stdio.h>
 #include <physfs.h>
-#include <string>
-#include <streambuf>
 #include <iostream>
 
 /** This class implements a C++ streambuf object for physfs files.

Modified: trunk/windstille/src/properties/properties.hpp
===================================================================
--- trunk/windstille/src/properties/properties.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/properties/properties.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_PROPERTIES_PROPERTIES_HPP
 #define HEADER_WINDSTILLE_PROPERTIES_PROPERTIES_HPP
 
-#include <vector>
-#include <string>
 
 class PropertySet;
 class Property;

Modified: trunk/windstille/src/properties/property.hpp
===================================================================
--- trunk/windstille/src/properties/property.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/properties/property.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_PROPERTIES_PROPERTY_HPP
 #define HEADER_WINDSTILLE_PROPERTIES_PROPERTY_HPP
 
-#include <string>
 
 class Property
 {

Modified: trunk/windstille/src/properties/property_set.hpp
===================================================================
--- trunk/windstille/src/properties/property_set.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/properties/property_set.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -21,7 +21,6 @@
 
 #include <vector>
 #include <map>
-#include <string>
 
 #include "properties/property.hpp"
 

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,13 +16,15 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "screen/particle_viewer.hpp"
+
+#include <stdexcept>
+#include <sstream>
+
 #include "app/menu_manager.hpp"
+#include "display/display.hpp"
 #include "input/controller.hpp"
-#include "screen/particle_viewer.hpp"
 #include "util/sexpr_file_reader.hpp"
-#include "display/display.hpp"
-
-// Components
 
 ParticleViewer::ParticleViewer()
   : sc(),
@@ -45,7 +47,8 @@
   systems.clear();
   
   FileReader root_reader = FileReader::parse(filename);
-  if(root_reader.get_name() != "particle-systems") {
+  if(root_reader.get_name() != "particle-systems") 
+  {
     std::ostringstream msg;
     msg << "'" << filename << "' is not a particle-system file";
     throw std::runtime_error(msg.str());

Modified: trunk/windstille/src/screen/sprite3dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/screen/sprite3dview.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_SPRITE3DVIEW_HPP
 #define HEADER_WINDSTILLE_SCREEN_SPRITE3DVIEW_HPP
 
-#include "display/scene_context.hpp"
 #include "sprite3d/sprite3d.hpp"
 #include "screen/screen.hpp"
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,7 +18,7 @@
 
 #include "scripting/wrapper.interface.hpp"
 
-
+#include "lisp/lisp.hpp"
 #include "app/config.hpp"
 #include "display/opengl_window.hpp"
 #include "engine/camera.hpp"

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/scripting/util.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,6 +18,7 @@
 */
 
 #include <boost/scoped_ptr.hpp>
+#include <sstream>
 
 #include "lisp/parser.hpp"
 #include "lisp/properties.hpp"

Modified: trunk/windstille/src/sound/ogg_sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/ogg_sound_file.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sound/ogg_sound_file.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_SOUND_OGG_SOUND_FILE_HPP
 #define HEADER_WINDSTILLE_SOUND_OGG_SOUND_FILE_HPP
 
-#include <vorbis/codec.h>
 #include <vorbis/vorbisfile.h>
 #include <physfs.h>
 

Modified: trunk/windstille/src/sound/sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/sound_file.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sound/sound_file.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,8 +20,7 @@
 #define HEADER_WINDSTILLE_SOUND_SOUND_FILE_HPP
 
 #include <memory>
-#include <stdio.h>
-#include <iostream>
+#include <string>
 
 class SoundFile
 {

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,6 +18,7 @@
 
 #include <boost/scoped_array.hpp>
 #include <stdexcept>
+#include <iostream>
 #include <sstream>
 
 #include "sound/sound_file.hpp"

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,10 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "sound/stream_sound_source.hpp"
+
 #include <SDL.h>
+#include <iostream>
 #include <boost/scoped_array.hpp>
 
-#include "sound/stream_sound_source.hpp"
 #include "sound/sound_manager.hpp"
 #include "sound/sound_file.hpp"
 

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,6 +19,8 @@
 
 #include "sprite2d/data.hpp"
 
+#include <stdexcept>
+
 #include "display/surface_manager.hpp"
 
 SpriteData::SpriteData(const Pathname& pathname)

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,14 +20,10 @@
 #ifndef HEADER_WINDSTILLE_SPRITE2D_DATA_HPP
 #define HEADER_WINDSTILLE_SPRITE2D_DATA_HPP
 
-#include <string>
-#include <vector>
 #include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "util/util.hpp"
 #include "util/file_reader.hpp"
-#include "math/vector2f.hpp"
 #include "display/surface.hpp"
 
 struct SpriteAction

Modified: trunk/windstille/src/sprite2d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite2d/manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,6 @@
 #ifndef HEADER_WINDSTILLE_SPRITE2D_MANAGER_HPP
 #define HEADER_WINDSTILLE_SPRITE2D_MANAGER_HPP
 
-#include <string>
 #include <map>
 #include <boost/shared_ptr.hpp>
 

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,6 +19,8 @@
 
 #include "sprite2d/sprite.hpp"
 
+#include <stdexcept>
+
 #include "sprite2d/data.hpp"
 #include "display/surface_drawing_parameters.hpp"
 

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,15 +20,10 @@
 #ifndef HEADER_WINDSTILLE_SPRITE2D_SPRITE_HPP
 #define HEADER_WINDSTILLE_SPRITE2D_SPRITE_HPP
 
-#include <string>
 #include <GL/glew.h>
-#include <GL/gl.h>
 
-#include "util/pathname.hpp"
 #include "display/color.hpp"
 #include "display/surface.hpp"
-#include "math/vector2f.hpp"
-#include "math/matrix.hpp"
 #include "sprite2d/manager.hpp"
 
 class DrawingContext;

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,6 +20,7 @@
 
 #include <boost/scoped_array.hpp>
 #include <physfs.h>
+#include <stdexcept>
 
 #include "util/util.hpp"
 #include "display/texture_manager.hpp"

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,14 +19,10 @@
 #ifndef HEADER_WINDSTILLE_SPRITE3D_DATA_HPP
 #define HEADER_WINDSTILLE_SPRITE3D_DATA_HPP
 
-#include <stdint.h>
-#include <string>
 #include <GL/glew.h>
-#include <GL/gl.h>
 #include <vector>
 
 #include "display/texture.hpp"
-#include "math/vector3.hpp"
 #include "math/quaternion.hpp"
 
 class Pathname;

Modified: trunk/windstille/src/sprite3d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/sprite3d/manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_SPRITE3D_MANAGER_HPP
 #define HEADER_WINDSTILLE_SPRITE3D_MANAGER_HPP
 
-#include <string>
-#include <map>
 
 #include "util/pathname.hpp"
 #include "util/currenton.hpp"

Modified: trunk/windstille/src/tile/tile.hpp
===================================================================
--- trunk/windstille/src/tile/tile.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/tile/tile.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,9 +19,7 @@
 #ifndef HEADER_WINDSTILLE_TILE_TILE_HPP
 #define HEADER_WINDSTILLE_TILE_TILE_HPP
 
-#include <assert.h>
 #include <GL/glew.h>
-#include <GL/gl.h>
 
 #include "display/texture.hpp"
 #include "math/rect.hpp"

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,10 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "tile/tile_factory.hpp"
 
+#include <stdexcept>
+#include <sstream>
+
 #include "tile/tile.hpp"
 #include "tile/tile_packer.hpp"
-#include "tile/tile_factory.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "display/software_surface.hpp"
 

Modified: trunk/windstille/src/tile/tile_factory.hpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/tile/tile_factory.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -27,6 +27,8 @@
 
 class Tile;
 class TilePacker;
+class SoftwareSurface;
+class Rect;
 
 /** */
 class TileFactory : public Currenton<TileFactory>

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -17,6 +17,7 @@
 */
 
 #include <GL/glew.h>
+#include <SDL.h>
 
 #include "app/globals.hpp"
 #include "tile/tile_packer.hpp"

Modified: trunk/windstille/src/util/baby_xml.hpp
===================================================================
--- trunk/windstille/src/util/baby_xml.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/baby_xml.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_UTIL_BABY_XML_HPP
 #define HEADER_WINDSTILLE_UTIL_BABY_XML_HPP
 
-#include <string>
 #include <vector>
 
 /** Parser for a flat XML-like tag soup, it doesn't support recursive

Modified: trunk/windstille/src/util/command_line_generic.hpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/command_line_generic.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -34,8 +34,6 @@
 #pragma once
 #endif
 
-#include <string>
-#include <vector>
 
 #include "util/command_line.hpp"
 

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -16,12 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "util/file_reader.hpp"
 
+#include <sstream>
 #include <fstream>
+#include <stdexcept>
 
+#include "lisp/lisp.hpp"
 #include "lisp/parser.hpp"
+#include "util/file_reader_impl.hpp"
 #include "util/sexpr_file_reader.hpp"
-#include "util/file_reader_impl.hpp"
 
 FileReader
 FileReader::parse(const Pathname& filename)

Modified: trunk/windstille/src/util/file_writer.hpp
===================================================================
--- trunk/windstille/src/util/file_writer.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/file_writer.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -18,9 +18,6 @@
 
 #ifndef HEADER_WINDSTILLE_UTIL_FILE_WRITER_HPP
 #define HEADER_WINDSTILLE_UTIL_FILE_WRITER_HPP
-
-#include <ostream>
-#include <string>
 
 class Color;
 class Vector2f;

Modified: trunk/windstille/src/util/pathname.hpp
===================================================================
--- trunk/windstille/src/util/pathname.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/pathname.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_UTIL_PATHNAME_HPP
 #define HEADER_WINDSTILLE_UTIL_PATHNAME_HPP
 
-#include <iosfwd>
 #include <string>
 #include <map>
 

Modified: trunk/windstille/src/util/sexpr_file_reader.hpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/sexpr_file_reader.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -20,7 +20,10 @@
 #define HEADER_WINDSTILLE_UTIL_SEXPR_FILE_READER_HPP
 
 #include "util/file_reader.hpp"
-#include "lisp/lisp.hpp"
+
+namespace lisp {
+class Lisp;
+} // namespace lisp
 
 class SExprFileReader : public FileReader
 {

Modified: trunk/windstille/src/util/util.hpp
===================================================================
--- trunk/windstille/src/util/util.hpp	2009-08-24 23:32:39 UTC (rev 3052)
+++ trunk/windstille/src/util/util.hpp	2009-08-25 01:27:17 UTC (rev 3053)
@@ -19,12 +19,7 @@
 #ifndef HEADER_WINDSTILLE_UTIL_UTIL_HPP
 #define HEADER_WINDSTILLE_UTIL_UTIL_HPP
 
-#include <string>
-#include <stdexcept>
 #include <sstream>
-#include <GL/glew.h>
-#include <GL/gl.h>
-#include <GL/glu.h>
 
 std::string dirname(const std::string& filename);
 std::string basename(const std::string& filename);



From grumbel at mail.berlios.de  Tue Aug 25 03:30:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 03:30:48 +0200
Subject: [Windstille-commit] r3054 - in trunk/windstille/src: app armature
	collision display editor engine font gui hud input lisp math
	navigation objects properties screen scripting sound sprite2d
	sprite3d util
Message-ID: <200908250130.n7P1UmTx004141@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 03:30:45 +0200 (Tue, 25 Aug 2009)
New Revision: 3054

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/controller_def.hpp
   trunk/windstille/src/app/globals.cpp
   trunk/windstille/src/app/globals.hpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/armature/armature.hpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface.hpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/engine/game_object.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/fonts.hpp
   trunk/windstille/src/gui/button.hpp
   trunk/windstille/src/gui/group_component.hpp
   trunk/windstille/src/gui/label.hpp
   trunk/windstille/src/gui/menu_component.hpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/menu_item.hpp
   trunk/windstille/src/gui/tab_component.hpp
   trunk/windstille/src/gui/text_view.cpp
   trunk/windstille/src/hud/conversation.hpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/hud/pda.hpp
   trunk/windstille/src/input/controller_description.cpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/lisp/properties.hpp
   trunk/windstille/src/lisp/writer.cpp
   trunk/windstille/src/math/matrix.hpp
   trunk/windstille/src/math/origin.hpp
   trunk/windstille/src/math/quaternion.cpp
   trunk/windstille/src/math/rect.cpp
   trunk/windstille/src/math/rect.hpp
   trunk/windstille/src/navigation/properties.cpp
   trunk/windstille/src/navigation/properties.hpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/grenade.hpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/scriptable_object.hpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/properties/property.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/screen.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/scripting/game_objects.cpp
   trunk/windstille/src/scripting/wrapper.cpp
   trunk/windstille/src/sound/sound_file.cpp
   trunk/windstille/src/sprite2d/manager.cpp
   trunk/windstille/src/sprite3d/manager.hpp
   trunk/windstille/src/util/command_line_generic.cpp
   trunk/windstille/src/util/command_line_generic.hpp
   trunk/windstille/src/util/file_reader_impl.hpp
Log:
Removed some unneeded newlines

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/app/config.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -439,6 +439,5 @@
   writer.write_string(get_name(), data);
 }
 
-
 /* EOF */
 

Modified: trunk/windstille/src/app/controller_def.hpp
===================================================================
--- trunk/windstille/src/app/controller_def.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/app/controller_def.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_APP_CONTROLLER_DEF_HPP
 #define HEADER_WINDSTILLE_APP_CONTROLLER_DEF_HPP
 
-
 #include "input/controller_description.hpp"
 
 enum InputEventName

Modified: trunk/windstille/src/app/globals.cpp
===================================================================
--- trunk/windstille/src/app/globals.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/app/globals.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 int TILE_SIZE       = 32;
 int TILE_RESOLUTION = 64;
 

Modified: trunk/windstille/src/app/globals.hpp
===================================================================
--- trunk/windstille/src/app/globals.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/app/globals.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_APP_GLOBALS_HPP
 #define HEADER_WINDSTILLE_APP_GLOBALS_HPP
 
-
 typedef enum { WEST, EAST} Direction;
 
 extern int TILE_SIZE;

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_APP_MENU_MANAGER_HPP
 #define HEADER_WINDSTILLE_APP_MENU_MANAGER_HPP
 
-
 #include "math/rect.hpp"
 
 class Pathname;

Modified: trunk/windstille/src/armature/armature.hpp
===================================================================
--- trunk/windstille/src/armature/armature.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/armature/armature.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_ARMATURE_ARMATURE_HPP
 #define HEADER_WINDSTILLE_ARMATURE_ARMATURE_HPP
 
-
 #include "armature/bone.hpp"
 #include "util/file_reader.hpp"
 

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -336,7 +336,6 @@
       frame-=min_time;
       min_time=0;
 
-
       // check tries
       --max_tries;
       if (max_tries == 0)
@@ -490,7 +489,6 @@
     }
 }
 
-
 int get_next_integer(float f, float direction)
 {
   int result;
@@ -610,8 +608,6 @@
       return result;
     }
 
-
-
   float time=0.0f;
   
   float *x, *y;         // current position

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/display/display.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -150,7 +150,6 @@
               rect.right   - radius,
               rect.bottom  - radius);
 
-
   OpenGLState state;
 
   state.enable(GL_BLEND);

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -176,7 +176,6 @@
   impl->control.reset_modelview();
 }
 
-
 void draw_disc(int count)
 {
   float radius = static_cast<float>(count) * 2.0f;
@@ -283,7 +282,6 @@
       Display::pop_framebuffer();
     }
 
-
   if (impl->render_mask & LIGHTMAP)
     { // Renders the lightmap to the screen
       Display::push_framebuffer(impl->framebuffers->screen);
@@ -384,7 +382,6 @@
       impl->color.render(*this);
     }
 
-
   if (impl->render_mask & LIGHTMAP)
     { // Renders the lightmap to the screen     
       OpenGLState state;

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/display/surface.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "display/surface.hpp"
 
-
 #include "display/opengl_state.hpp"
 #include "math/quad.hpp"
 #include "display/surface_drawing_parameters.hpp"

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/display/surface.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SURFACE_HPP
 
-
 #include "math/rect.hpp"
 #include "display/texture.hpp"
 

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "display/texture_manager.hpp"
 
-
 #include "display/texture.hpp"
 #include "display/software_surface.hpp"
 

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #include "display/opengl_state.hpp"
 #include "display/vertex_array_drawing_request.hpp"
 

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/editor/control_point.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -38,7 +38,6 @@
 {
 }
 
-
 void
 ControlPoint::on_move_start(GdkEventButton* /*event*/)
 {

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -613,7 +613,6 @@
           dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
           dialog.add_button(Gtk::Stock::SAVE,   Gtk::RESPONSE_OK);
 
-
  
           dialog.set_current_folder("/tmp/");
 

Modified: trunk/windstille/src/engine/game_object.cpp
===================================================================
--- trunk/windstille/src/engine/game_object.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/engine/game_object.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -20,5 +20,4 @@
 
 Sector* GameObject::world;
 
-
 /* EOF */

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
 #define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
 
-
 #include "engine/script_manager.hpp"
 
 class SquirrelThread

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/font/fonts.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #include "font/border_font_effect.hpp"
 #include "font/fonts.hpp"
 

Modified: trunk/windstille/src/font/fonts.hpp
===================================================================
--- trunk/windstille/src/font/fonts.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/font/fonts.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_FONT_FONTS_HPP
 #define HEADER_WINDSTILLE_FONT_FONTS_HPP
 
-
 #include "util/currenton.hpp"
 #include "font/ttf_font.hpp"
 

Modified: trunk/windstille/src/gui/button.hpp
===================================================================
--- trunk/windstille/src/gui/button.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/button.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_BUTTON_HPP
 #define HEADER_WINDSTILLE_GUI_BUTTON_HPP
 
-
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/group_component.hpp
===================================================================
--- trunk/windstille/src/gui/group_component.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/group_component.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_GROUP_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_GROUP_COMPONENT_HPP
 
-
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/label.hpp
===================================================================
--- trunk/windstille/src/gui/label.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/label.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_LABEL_HPP
 #define HEADER_WINDSTILLE_GUI_LABEL_HPP
 
-
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/menu_component.hpp
===================================================================
--- trunk/windstille/src/gui/menu_component.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/menu_component.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_MENU_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_MENU_COMPONENT_HPP
 
-
 #include "font/fonts.hpp"
 #include "gui/component.hpp"
 

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -193,7 +193,6 @@
                              5.0f,
                              Color(0.75f*color.r, 0.75f*color.g, 0.75f*color.b, color.a));
 
-
   Display::draw_rounded_rect(Rectf(Vector2f(rect.right - 4.0f - total_width, rect.top + 4.0f),
                                    Sizef(total_width, rect.get_height() - 8)), 
                              5.0f,

Modified: trunk/windstille/src/gui/menu_item.hpp
===================================================================
--- trunk/windstille/src/gui/menu_item.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/menu_item.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -21,7 +21,6 @@
 
 #include <boost/signal.hpp>
 
-
 namespace gui {
 
 class MenuComponent;

Modified: trunk/windstille/src/gui/tab_component.hpp
===================================================================
--- trunk/windstille/src/gui/tab_component.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/tab_component.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_GUI_TAB_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_TAB_COMPONENT_HPP
 
-
 #include "gui/component.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/gui/text_view.cpp
===================================================================
--- trunk/windstille/src/gui/text_view.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/gui/text_view.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "gui/text_view.hpp"
 
-
 #include "input/controller.hpp"
 
 namespace gui {

Modified: trunk/windstille/src/hud/conversation.hpp
===================================================================
--- trunk/windstille/src/hud/conversation.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/hud/conversation.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_HUD_CONVERSATION_HPP
 #define HEADER_WINDSTILLE_HUD_CONVERSATION_HPP
 
-
 #include "screen/screen.hpp"
 
 /** Displays a list of text strings from which the user can select

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "hud/dialog_manager.hpp"
 
-
 #include "font/fonts.hpp"
 #include "screen/game_session.hpp"
 #include "input/controller.hpp"

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "hud/inventory.hpp"
 
-
 #include "font/fonts.hpp"
 #include "input/controller.hpp"
 #include "screen/game_session.hpp"

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/hud/pda.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_HUD_PDA_HPP
 #define HEADER_WINDSTILLE_HUD_PDA_HPP
 
-
 #include "sprite2d/sprite.hpp"
 #include "screen/screen.hpp"
 

Modified: trunk/windstille/src/input/controller_description.cpp
===================================================================
--- trunk/windstille/src/input/controller_description.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/input/controller_description.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -20,7 +20,6 @@
 
 #include "input/controller_description.hpp"
 
-
 ControllerDescription::ControllerDescription()
   : str_to_event(),
     id_to_event()

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "input/input_configurator.hpp"
 
-
 #include "display/display.hpp"
 #include "font/fonts.hpp"
 #include "screen/screen_manager.hpp"

Modified: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #include "input/input_manager_sdl.hpp"
 #include "input/input_manager.hpp"
 

Modified: trunk/windstille/src/lisp/properties.hpp
===================================================================
--- trunk/windstille/src/lisp/properties.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/lisp/properties.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -1,7 +1,6 @@
 #ifndef __PROPERTIES_HPP__
 #define __PROPERTIES_HPP__
 
-
 #include "lisp/getters.hpp"
 #include "lisp/property_iterator.hpp"
 

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -15,7 +15,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-
 #include "lisp/writer.hpp"
 #include "physfs/physfs_stream.hpp"
 

Modified: trunk/windstille/src/math/matrix.hpp
===================================================================
--- trunk/windstille/src/math/matrix.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/math/matrix.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -30,7 +30,6 @@
 #ifndef HEADER_MATH_MATRIX_HPP
 #define HEADER_MATH_MATRIX_HPP
 
-
 class Vector3;
 
 //: 4x4 Matrix.

Modified: trunk/windstille/src/math/origin.hpp
===================================================================
--- trunk/windstille/src/math/origin.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/math/origin.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -58,7 +58,6 @@
 
 typedef origin::Origin Origin;
 
-
 //: Returns the anchor point for the origin within the dimensions of the size structure.
 //- !group=Display/Display 2D!
 //- !header=display.h!

Modified: trunk/windstille/src/math/quaternion.cpp
===================================================================
--- trunk/windstille/src/math/quaternion.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/math/quaternion.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "math/quaternion.hpp"
 
-
 float
 Quaternion::magnitude() const
 {

Modified: trunk/windstille/src/math/rect.cpp
===================================================================
--- trunk/windstille/src/math/rect.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/math/rect.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -27,7 +27,6 @@
 **    (if your name is missing here, please add it)
 */
 
-
 #include "math/rect.hpp"
 
 #define cl_min(a,b) ((a < b) ? a : b)

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/math/rect.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -30,7 +30,6 @@
 #ifndef __MATH_RECT_HPP__
 #define __MATH_RECT_HPP__
 
-
 #include "math/origin.hpp"
 #include "math/math.hpp"
 

Modified: trunk/windstille/src/navigation/properties.cpp
===================================================================
--- trunk/windstille/src/navigation/properties.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/navigation/properties.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,5 +18,4 @@
 
 
 
-
 /* EOF */

Modified: trunk/windstille/src/navigation/properties.hpp
===================================================================
--- trunk/windstille/src/navigation/properties.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/navigation/properties.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_NAVIGATION_PROPERTIES_HPP
 #define HEADER_WINDSTILLE_NAVIGATION_PROPERTIES_HPP
 
-
 enum {
   WALKABLE = (1<<0),
   WALL     = (1<<1),

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/character.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -22,7 +22,6 @@
 #include "engine/script_manager.hpp"
 #include "app/console.hpp"
 
-
 Character::Character(FileReader& props)
   : sprite(),
     z_pos(100.0f)

Modified: trunk/windstille/src/objects/grenade.hpp
===================================================================
--- trunk/windstille/src/objects/grenade.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/grenade.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 #define HEADER_WINDSTILLE_OBJECTS_GRENADE_HPP
 
-
 #include "engine/physics.hpp"
 #include "sprite3d/sprite3d.hpp"
 

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #include "objects/player.hpp"
 #include "objects/hedgehog.hpp"
 

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/player.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -346,7 +346,6 @@
   return 0;  
 }
 
-
 void
 Player::update_stand(const Controller& controller)
 { 

Modified: trunk/windstille/src/objects/scriptable_object.hpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/scriptable_object.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #ifndef HEADER_WINDSTILLE_OBJECTS_SCRIPTABLE_OBJECT_HPP
 #define HEADER_WINDSTILLE_OBJECTS_SCRIPTABLE_OBJECT_HPP
 

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -103,7 +103,6 @@
         glTexCoord2f(x2+256, (y2+256));
         glVertex3f(x2+256, y2+256, 0);
 
-
         float x3 =  sinf(angel*static_cast<float>(i))*minradius;
         float y3 = -cosf(angel*static_cast<float>(i))*minradius;
 
@@ -199,7 +198,6 @@
         glTexCoord2f(x2/512.0f+0.5f, y2/512.0f+0.5f);
         glVertex3f(x2+256, y2+256, 0);
 
-
         float x3 =  sinf(angel*static_cast<float>(i))*minradius;
         float y3 = -cosf(angel*static_cast<float>(i))*minradius;
 

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -157,5 +157,4 @@
   state = EXPLODE;
 }
 
-
 /* EOF */

Modified: trunk/windstille/src/properties/property.cpp
===================================================================
--- trunk/windstille/src/properties/property.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/properties/property.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,5 +18,4 @@
 
 
 
-
 /* EOF */

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #include "screen/game_session.hpp"
 
 
-
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 #include "engine/script_manager.hpp"
@@ -390,7 +389,6 @@
                   console << "Toggled blurmap: " << ((sc.get_render_mask() & SceneContext::BLURMAP) > 0) << std::endl;
                   break;
 
-
                 case SDLK_c:
                   if (debug) {
                     collision_debug = !collision_debug;

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -95,7 +95,6 @@
         point_count = 0;
     }
 
-
   if (point_count == 0)
     {
       line1.p1 = cursor;

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -102,7 +102,6 @@
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
     (*i)->update(delta);
 
-
   pos.x -= controller.get_axis_state(X_AXIS) * delta * 400.0f;
   pos.y -= controller.get_axis_state(Y_AXIS) * delta * 400.0f;
 

Modified: trunk/windstille/src/screen/screen.cpp
===================================================================
--- trunk/windstille/src/screen/screen.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/screen.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #include "screen/screen.hpp"
 
 Screen::Screen()

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -20,7 +20,6 @@
 
 #include <boost/format.hpp>
 
-
 #include "app/config.hpp"
 #include "display/display.hpp"
 #include "display/opengl_window.hpp"

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -84,7 +84,6 @@
   show_thumbnail = false;
   ignore_delta = false;
 
-
   next_image(0);
   sprite = new_sprite;
   new_sprite = Sprite();

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -16,7 +16,6 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
@@ -94,7 +93,6 @@
         Fonts::current()->vera12->draw(Vector2f(x, y),
                             actions[i], Color(0.7f, 0.7f, 0.7f));
 
-
       y += static_cast<float>(line_height);
       if (y > 580.0f)
         {

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 #include "screen/title_screen.hpp"
 
-
 #include "display/display.hpp"
 #include "app/menu_manager.hpp"
 

Modified: trunk/windstille/src/scripting/game_objects.cpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/scripting/game_objects.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -118,4 +118,3 @@
 
 /* EOF */
 
-

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -4,7 +4,6 @@
  * DO NOT CHANGE
  */
 
-
 namespace Scripting
 {
 namespace Wrapper

Modified: trunk/windstille/src/sound/sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/sound_file.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/sound/sound_file.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -18,7 +18,6 @@
 
 /** Used SDL_mixer and glest source as reference */
 
-
 #include <string.h>
 #include <stdexcept>
 #include <sstream>
@@ -26,7 +25,6 @@
 #include "sound/ogg_sound_file.hpp"
 #include "sound/wav_sound_file.hpp"
 
-
 std::auto_ptr<SoundFile>
 SoundFile::load(const std::string& filename)
 {

Modified: trunk/windstille/src/sprite2d/manager.cpp
===================================================================
--- trunk/windstille/src/sprite2d/manager.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/sprite2d/manager.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 
 #include "sprite2d/manager.hpp"
 
-
 #include "sprite2d/data.hpp"
 
 SpriteManager::SpriteManager()

Modified: trunk/windstille/src/sprite3d/manager.hpp
===================================================================
--- trunk/windstille/src/sprite3d/manager.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/sprite3d/manager.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -19,7 +19,6 @@
 #ifndef HEADER_WINDSTILLE_SPRITE3D_MANAGER_HPP
 #define HEADER_WINDSTILLE_SPRITE3D_MANAGER_HPP
 
-
 #include "util/pathname.hpp"
 #include "util/currenton.hpp"
 

Modified: trunk/windstille/src/util/command_line_generic.cpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.cpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/util/command_line_generic.cpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -33,7 +33,6 @@
 
 #include "util/command_line_generic.hpp"
 
-
 #ifdef WIN32
 #define snprintf _snprintf
 #endif

Modified: trunk/windstille/src/util/command_line_generic.hpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/util/command_line_generic.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -34,7 +34,6 @@
 #pragma once
 #endif
 
-
 #include "util/command_line.hpp"
 
 class CommandLine_Generic

Modified: trunk/windstille/src/util/file_reader_impl.hpp
===================================================================
--- trunk/windstille/src/util/file_reader_impl.hpp	2009-08-25 01:27:17 UTC (rev 3053)
+++ trunk/windstille/src/util/file_reader_impl.hpp	2009-08-25 01:30:45 UTC (rev 3054)
@@ -54,7 +54,6 @@
   virtual std::vector<std::string> get_section_names() const =0;
 };
 
-
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Tue Aug 25 03:34:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 03:34:13 +0200
Subject: [Windstille-commit] r3055 - trunk/windstille/src/screen
Message-ID: <200908250134.n7P1YDxp004320@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 03:34:12 +0200 (Tue, 25 Aug 2009)
New Revision: 3055

Modified:
   trunk/windstille/src/screen/game_session.cpp
Log:
Replaced auto_ptr with scoped_ptr

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-25 01:30:45 UTC (rev 3054)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-25 01:34:12 UTC (rev 3055)
@@ -18,7 +18,6 @@
 
 #include "screen/game_session.hpp"
 
-
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 #include "engine/script_manager.hpp"
@@ -41,7 +40,7 @@
 
   float fadeout_value;
   float fade_time;
-  std::auto_ptr<Sector> sector;
+  boost::scoped_ptr<Sector> sector;
   View    view;
 
   Pathname filename;
@@ -340,7 +339,7 @@
 void
 GameSession::set_sector(const Pathname& /* FIXME: huh? */)
 {
-  impl->sector = std::auto_ptr<Sector>(new Sector(impl->filename));
+  impl->sector.reset(new Sector(impl->filename));
  
   GameObject::set_world(impl->sector.get());
 



From grumbel at mail.berlios.de  Tue Aug 25 03:35:18 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 03:35:18 +0200
Subject: [Windstille-commit] r3056 - in trunk/windstille/src: navigation
	properties
Message-ID: <200908250135.n7P1ZInA004403@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 03:35:18 +0200 (Tue, 25 Aug 2009)
New Revision: 3056

Modified:
   trunk/windstille/src/navigation/properties.cpp
   trunk/windstille/src/properties/property.cpp
Log:
Removed some unneeded newlines

Modified: trunk/windstille/src/navigation/properties.cpp
===================================================================
--- trunk/windstille/src/navigation/properties.cpp	2009-08-25 01:34:12 UTC (rev 3055)
+++ trunk/windstille/src/navigation/properties.cpp	2009-08-25 01:35:18 UTC (rev 3056)
@@ -17,5 +17,4 @@
 */
 
 
-
 /* EOF */

Modified: trunk/windstille/src/properties/property.cpp
===================================================================
--- trunk/windstille/src/properties/property.cpp	2009-08-25 01:34:12 UTC (rev 3055)
+++ trunk/windstille/src/properties/property.cpp	2009-08-25 01:35:18 UTC (rev 3056)
@@ -17,5 +17,4 @@
 */
 
 
-
 /* EOF */



From grumbel at mail.berlios.de  Tue Aug 25 03:40:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 03:40:03 +0200
Subject: [Windstille-commit] r3057 - trunk/windstille
Message-ID: <200908250140.n7P1e3lP004536@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 03:40:02 +0200 (Tue, 25 Aug 2009)
New Revision: 3057

Modified:
   trunk/windstille/SConscript
Log:
Minor cleanup

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-25 01:35:18 UTC (rev 3056)
+++ trunk/windstille/SConscript	2009-08-25 01:40:02 UTC (rev 3057)
@@ -131,8 +131,13 @@
         self.build_testapps()
         
     def configure(self):
-        conf_env = Environment()
+        env = Environment()
 
+        # FIXME: None of the options are used, as only self.features
+        # makes it across function calls
+        
+        # FIXME: Giving multiple CCFLAGS doesn't work since they have to be
+        # broken down to a list
         opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
         opts.Add('CPPPATH', 'Additional preprocessor paths')
         opts.Add('CPPFLAGS', 'Additional preprocessor flags')
@@ -144,16 +149,13 @@
         opts.Add('LINKFLAGS', 'Linker Compiler flags')
         opts.Add('CC', 'C Compiler')
         opts.Add('CXX', 'C++ Compiler')  
-        opts.Update(conf_env)
-        opts.Save('options.cache', conf_env)
-        Help(opts.GenerateHelpText(conf_env))
+        opts.Update(env)
+        opts.Save('options.cache', env)
+        Help(opts.GenerateHelpText(env))
 
-        # FIXME: Giving multiple CCFLAGS doesn't work since they have to be
-        # broken down to a list
-
-        conf = Configure(conf_env, custom_tests = { 'Check32bit' : Check32bit,
-                                                    'CheckYacc'  : CheckYacc,
-                                                    'CheckLex'   : CheckLex})
+        conf = Configure(env, custom_tests = { 'Check32bit' : Check32bit,
+                                               'CheckYacc'  : CheckYacc,
+                                               'CheckLex'   : CheckLex})
         if conf.Check32bit() == "64bit":
             # conf.env.Append(CXXFLAGS="-D_SQ64")
             self.features["64bit"] = 1
@@ -169,7 +171,7 @@
             print "yacc or bison not found, aborting."
             Exit(1)
 
-        conf_env = conf.Finish()
+        env = conf.Finish()
 
     def build_squirrel(self):
         squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],



From grumbel at mail.berlios.de  Tue Aug 25 04:28:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 04:28:22 +0200
Subject: [Windstille-commit] r3058 - in trunk/windstille/src: app hud input
	screen
Message-ID: <200908250228.n7P2SM6I008994@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 04:28:19 +0200 (Tue, 25 Aug 2009)
New Revision: 3058

Added:
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager.hpp
Removed:
   trunk/windstille/src/input/input_manager.cpp
   trunk/windstille/src/input/input_manager.hpp
   trunk/windstille/src/input/input_manager_impl.cpp
   trunk/windstille/src/input/input_manager_impl.hpp
Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/input_manager_sdl.hpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/view.cpp
Log:
Replaced InputManager with just InputManagerSDL, saving an unneeded layer of indirection

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/app/console.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -19,7 +19,7 @@
 #include "display/display.hpp"
 #include "engine/script_manager.hpp"
 #include "font/fonts.hpp"
-#include "input/input_manager.hpp"
+#include "input/input_manager_sdl.hpp"
 #include "screen/game_session.hpp"
 
 Console console;
@@ -200,7 +200,7 @@
 
   if (active)
     {
-      InputEventLst events = InputManager::current()->get_controller().get_events();
+      InputEventLst events = InputManagerSDL::current()->get_controller().get_events();
   
       for (InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
         {
@@ -541,7 +541,7 @@
 Console::activate()
 {
   // Get rid of all input events so that we don't double press
-  InputManager::current()->clear();
+  InputManagerSDL::current()->clear();
   impl->active = true;
 
   SDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY, SDL_DEFAULT_REPEAT_INTERVAL);

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -26,7 +26,7 @@
 #include "display/texture_manager.hpp"
 #include "engine/script_manager.hpp"
 #include "font/fonts.hpp"
-#include "input/input_manager.hpp"
+#include "input/input_manager_sdl.hpp"
 #include "screen/game_session.hpp"
 #include "screen/particle_viewer.hpp"
 #include "screen/screen_manager.hpp"
@@ -75,7 +75,7 @@
       sprite3d::Manager sprite3d_manager;
       ScriptManager     script_manager;
       WindstilleControllerDescription controller_description;
-      InputManager      input_manager(controller_description);
+      InputManagerSDL   input_manager(controller_description);
       TileFactory       tile_factory("tiles.scm");
 
       init_modules();
@@ -157,12 +157,12 @@
     
   {     
     if (config.get<std::string>("primary-controller-file").is_set())
-      InputManager::current()->load(config.get<std::string>("primary-controller-file").get());
+      InputManagerSDL::current()->load(config.get<std::string>("primary-controller-file").get());
     else
-      InputManager::current()->load("controller/keyboard.scm");
+      InputManagerSDL::current()->load("controller/keyboard.scm");
 
     if (config.get<std::string>("secondary-controller-file").is_set())
-      InputManager::current()->load(config.get<std::string>("secondary-controller-file").get());
+      InputManagerSDL::current()->load(config.get<std::string>("secondary-controller-file").get());
   }
 }
 

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "input/input_manager.hpp"
+#include "input/input_manager_sdl.hpp"
 #include "display/display.hpp"
 #include "hud/controller_help_window.hpp"
 
@@ -82,7 +82,7 @@
 void
 ControllerHelpWindow::draw()
 {
-  const Controller& controller = InputManager::current()->get_controller();
+  const Controller& controller = InputManagerSDL::current()->get_controller();
 
   Vector2f pos(static_cast<float>(Display::get_width())  - 350.0f - 16.0f, 
                static_cast<float>(Display::get_height()) - 200.0f - 16.0f);

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -103,13 +103,13 @@
       if (item.mode == ConfigureItem::CONFIGURE_AXIS)
         {
           out << "Configuring " 
-              << InputManager::current()->get_controller_description().get_definition(item.event_id).name
+              << InputManagerSDL::current()->get_controller_description().get_definition(item.event_id).name
               << ": " << std::endl;
         }
       else if (item.mode == ConfigureItem::CONFIGURE_BUTTON)
         {
           out << "Configuring " 
-              << InputManager::current()->get_controller_description().get_definition(item.event_id).name 
+              << InputManagerSDL::current()->get_controller_description().get_definition(item.event_id).name 
               << ": " << std::endl;
         }
     }

Deleted: trunk/windstille/src/input/input_manager.cpp
===================================================================
--- trunk/windstille/src/input/input_manager.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -1,64 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "input/input_manager_sdl.hpp"
-#include "input/input_manager.hpp"
-
-InputManager::InputManager(const ControllerDescription& controller_description)
-  : impl(new InputManagerSDL(controller_description))
-{
-}
-
-InputManager::~InputManager()
-{
-}
-
-void
-InputManager::load(const std::string& filename)
-{
-  impl->load(filename);
-}
-
-void
-InputManager::update(float delta)
-{
-  assert(impl);
-  impl->update(delta);
-}
-
-const ControllerDescription&
-InputManager::get_controller_description() const
-{
-  assert(impl);
-  return impl->get_controller_description();
-}
-
-const Controller&
-InputManager::get_controller() const
-{
-  assert(impl);
-  return impl->get_controller();
-}
-
-void
-InputManager::clear()
-{
-  impl->clear();
-}
-
-/* EOF */

Copied: trunk/windstille/src/input/input_manager.cpp (from rev 3049, trunk/windstille/src/input/input_manager_impl.cpp)
===================================================================
--- trunk/windstille/src/input/input_manager_impl.cpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/input_manager.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -0,0 +1,83 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "input/input_manager.hpp"
+
+void
+InputManager::add_axis_event(int name, float pos)
+{
+  InputEvent event;
+
+  event.type = AXIS_EVENT;
+  event.axis.name = name;
+  event.axis.pos  = pos;
+
+  controller.add_event(event);
+  controller.set_axis_state(name, pos);
+}
+
+void
+InputManager::add_ball_event  (int name, float pos)
+{
+  InputEvent event;
+
+  event.type = BALL_EVENT;
+  event.axis.name = name;
+  event.axis.pos  = pos;
+
+  controller.add_event(event);
+  controller.set_ball_state(name, pos);  
+}
+
+void
+InputManager::add_button_event(int name, bool down)
+{
+  InputEvent event;
+
+  event.type = BUTTON_EVENT;
+  event.button.name = name;
+  event.button.down = down;
+
+  controller.add_event(event);
+  controller.set_button_state(name, down);
+}
+
+void
+InputManager::add_keyboard_event(int , KeyboardEvent::KeyType key_type, int code)
+{
+  InputEvent event;
+  event.type = KEYBOARD_EVENT;
+  event.keyboard.key_type = key_type;
+  event.keyboard.code     = code;
+
+  controller.add_event(event);
+}
+
+void
+InputManager::clear()
+{
+  controller.clear();
+}
+
+const Controller&
+InputManager::get_controller() const
+{
+  return controller;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/input/input_manager.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/windstille/src/input/input_manager.hpp
===================================================================
--- trunk/windstille/src/input/input_manager.hpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_manager.hpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -1,56 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_HPP
-#define HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_HPP
-
-#include <string>
-#include <vector>
-#include <boost/scoped_ptr.hpp>
-
-#include "input/controller.hpp"
-#include "input/input_event.hpp"
-#include "util/currenton.hpp"
-
-class InputManagerImpl;
-
-/** */
-class InputManager : public Currenton<InputManager>
-{
-public:
-  InputManager(const ControllerDescription& controller_description);
-  ~InputManager();
-
-  /** Load configuration file \a filename */
-  void load(const std::string& filename);
-
-  void update(float delta);
-  const ControllerDescription& get_controller_description() const;
-  const Controller& get_controller() const;
-  void clear();
-
-private:
-  boost::scoped_ptr<InputManagerImpl> impl;
-
-  InputManager(const InputManager&);
-  InputManager& operator=(const InputManager&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/input/input_manager.hpp (from rev 3049, trunk/windstille/src/input/input_manager_impl.hpp)
===================================================================
--- trunk/windstille/src/input/input_manager_impl.hpp	2009-08-24 23:22:11 UTC (rev 3049)
+++ trunk/windstille/src/input/input_manager.hpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -0,0 +1,58 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_HPP
+#define HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_HPP
+
+#include "input/controller.hpp"
+#include "input/input_event.hpp"
+#include "util/currenton.hpp"
+
+class InputManager
+{
+protected:
+  ControllerDescription controller_description;
+  Controller controller;
+
+public:
+  InputManager(const ControllerDescription& controller_description_) 
+    : controller_description(controller_description_),
+      controller() 
+  {}
+  virtual ~InputManager() {}
+
+  virtual void load(const std::string& filename) =0;
+  virtual void update(float delta) =0;
+  
+  const ControllerDescription& get_controller_description() const { return controller_description; }
+  const Controller& get_controller() const;
+  void clear();
+
+  virtual void add_axis_event  (int name, float pos);
+  virtual void add_ball_event  (int name, float pos);
+  virtual void add_button_event(int name, bool down);
+  virtual void add_keyboard_event(int name, KeyboardEvent::KeyType key_type, int code);
+
+private:
+  InputManager(const InputManager&);
+  InputManager& operator=(const InputManager&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/input/input_manager.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/windstille/src/input/input_manager_impl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_manager_impl.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -1,83 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "input/input_manager_impl.hpp"
-
-void
-InputManagerImpl::add_axis_event(int name, float pos)
-{
-  InputEvent event;
-
-  event.type = AXIS_EVENT;
-  event.axis.name = name;
-  event.axis.pos  = pos;
-
-  controller.add_event(event);
-  controller.set_axis_state(name, pos);
-}
-
-void
-InputManagerImpl::add_ball_event  (int name, float pos)
-{
-  InputEvent event;
-
-  event.type = BALL_EVENT;
-  event.axis.name = name;
-  event.axis.pos  = pos;
-
-  controller.add_event(event);
-  controller.set_ball_state(name, pos);  
-}
-
-void
-InputManagerImpl::add_button_event(int name, bool down)
-{
-  InputEvent event;
-
-  event.type = BUTTON_EVENT;
-  event.button.name = name;
-  event.button.down = down;
-
-  controller.add_event(event);
-  controller.set_button_state(name, down);
-}
-
-void
-InputManagerImpl::add_keyboard_event(int , KeyboardEvent::KeyType key_type, int code)
-{
-  InputEvent event;
-  event.type = KEYBOARD_EVENT;
-  event.keyboard.key_type = key_type;
-  event.keyboard.code     = code;
-
-  controller.add_event(event);
-}
-
-void
-InputManagerImpl::clear()
-{
-  controller.clear();
-}
-
-const Controller&
-InputManagerImpl::get_controller() const
-{
-  return controller;
-}
-
-/* EOF */

Deleted: trunk/windstille/src/input/input_manager_impl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.hpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_manager_impl.hpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -1,57 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_IMPL_HPP
-#define HEADER_WINDSTILLE_INPUT_INPUT_MANAGER_IMPL_HPP
-
-#include "input/controller.hpp"
-#include "input/input_event.hpp"
-
-/** */
-class InputManagerImpl
-{
-protected:
-  ControllerDescription controller_description;
-  Controller controller;
-
-public:
-  InputManagerImpl(const ControllerDescription& controller_description_) 
-    : controller_description(controller_description_),
-      controller() 
-  {}
-  virtual ~InputManagerImpl() {}
-
-  virtual void load(const std::string& filename) =0;
-  virtual void update(float delta) =0;
-  
-  const ControllerDescription& get_controller_description() const { return controller_description; }
-  const Controller& get_controller() const;
-  void clear();
-
-  virtual void add_axis_event  (int name, float pos);
-  virtual void add_ball_event  (int name, float pos);
-  virtual void add_button_event(int name, bool down);
-  virtual void add_keyboard_event(int name, KeyboardEvent::KeyType key_type, int code);
-private:
-  InputManagerImpl(const InputManagerImpl&);
-  InputManagerImpl& operator=(const InputManagerImpl&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -234,7 +234,7 @@
 }
 
 InputManagerSDL::InputManagerSDL(const ControllerDescription& controller_description)
-  : InputManagerImpl(controller_description),
+  : InputManager(controller_description),
     impl(new InputManagerSDLImpl)
 {
   for (int i = 0; i < SDLK_LAST; ++i) {
@@ -758,7 +758,7 @@
         }
     }
 
-  InputManagerImpl::add_axis_event(name, pos);
+  InputManager::add_axis_event(name, pos);
 }
 
 /* EOF */

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -22,7 +22,7 @@
 #include <SDL.h>
 #include <boost/scoped_ptr.hpp>
 
-#include "input/input_manager_impl.hpp"
+#include "input/input_manager.hpp"
 #include "util/currenton.hpp"
 
 class FileReader;
@@ -94,7 +94,7 @@
 };
 
 /** */
-class InputManagerSDL : public InputManagerImpl,
+class InputManagerSDL : public InputManager,
                         public Currenton<InputManagerSDL>
 {
 public:
@@ -127,7 +127,7 @@
 
   void on_event(const SDL_Event& event);
 
-  void add_axis_event  (int name, float pos);
+  void add_axis_event(int name, float pos);
 
 private:
   void on_key_event(const SDL_KeyboardEvent& key);

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -79,17 +79,17 @@
 
     while (delta > step)
     {
-      InputManager::current()->update(delta);
+      InputManagerSDL::current()->update(delta);
 
       console.update(step);
       if (!console.is_active())
       {
         if (!overlay_screens.empty())
-          overlay_screens.back()->update(step, InputManager::current()->get_controller());
+          overlay_screens.back()->update(step, InputManagerSDL::current()->get_controller());
         else if (!screens.empty())
-          screens.back()->update(step, InputManager::current()->get_controller());
+          screens.back()->update(step, InputManagerSDL::current()->get_controller());
       }
-      InputManager::current()->clear();
+      InputManagerSDL::current()->clear();
   
       delta -= step;
     }

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-25 01:40:02 UTC (rev 3057)
+++ trunk/windstille/src/screen/view.cpp	2009-08-25 02:28:19 UTC (rev 3058)
@@ -18,11 +18,11 @@
 
 #include <SDL.h>
 
+#include "collision/collision_engine.hpp"
 #include "display/display.hpp"
-#include "collision/collision_engine.hpp"
+#include "engine/sector.hpp"
+#include "input/input_manager_sdl.hpp"
 #include "objects/player.hpp"
-#include "engine/sector.hpp"
-#include "input/input_manager.hpp"
 #include "screen/view.hpp"
 
 View::View()
@@ -71,7 +71,7 @@
   if (keystate[SDLK_KP_MINUS])
     zoom *= 1.0f - delta;
 
-  const Controller& controller = InputManager::current()->get_controller();
+  const Controller& controller = InputManagerSDL::current()->get_controller();
 
   if (controller.get_button_state(DEBUG_BUTTON))
     {



From grumbel at mail.berlios.de  Tue Aug 25 04:32:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 04:32:04 +0200
Subject: [Windstille-commit] r3059 - trunk/windstille/src/screen
Message-ID: <200908250232.n7P2W4pd010624@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 04:32:04 +0200 (Tue, 25 Aug 2009)
New Revision: 3059

Modified:
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Added ControllerHelpWindow back in

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 02:28:19 UTC (rev 3058)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 02:32:04 UTC (rev 3059)
@@ -62,7 +62,7 @@
 
   ticks = SDL_GetTicks();
 
-  //controller_help_window = new ControllerHelpWindow();
+  controller_help_window.reset(new ControllerHelpWindow());
   apply_pending_actions();
 
   while (!do_quit && !screens.empty())
@@ -117,8 +117,8 @@
   if (!overlay_screens.empty())
     overlay_screens.back()->draw();
 
-  // if (show_controller_help_window)
-  //   controller_help_window.draw();
+  if (show_controller_help_window)
+     controller_help_window->draw();
 
   console.draw();
 

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-08-25 02:28:19 UTC (rev 3058)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-08-25 02:32:04 UTC (rev 3059)
@@ -20,9 +20,11 @@
 #define HEADER_WINDSTILLE_SCREEN_SCREEN_MANAGER_HPP
 
 #include <boost/shared_ptr.hpp>
+#include <boost/scoped_ptr.hpp>
 #include <vector>
 
 class Screen;
+class ControllerHelpWindow;
 
 /**
  *  The ScreenManager handles overlays like Option Menus, Main Menus
@@ -50,6 +52,7 @@
   float overlap_delta;
   bool  do_quit;
   bool  show_controller_help_window;
+  boost::scoped_ptr<ControllerHelpWindow> controller_help_window;
 
   void apply_pending_actions();
   void draw();



From grumbel at mail.berlios.de  Tue Aug 25 04:39:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 04:39:39 +0200
Subject: [Windstille-commit] r3060 - in trunk/windstille/src: app gui input
	screen
Message-ID: <200908250239.n7P2ddtT012547@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 04:39:38 +0200 (Tue, 25 Aug 2009)
New Revision: 3060

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/gui/gui_manager.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/input/input_configurator.cpp
   trunk/windstille/src/screen/armature_test.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Turned ScreenManager into a Currenton

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -77,7 +77,7 @@
     .add_pair(0, "off")
     .add_pair(1, "on");
 
-  menu.add_enum("Controller Debug", screen_manager.get_show_controller_debug(),
+  menu.add_enum("Controller Debug", ScreenManager::current()->get_show_controller_debug(),
                 boost::bind(&MenuManager::menu_controller_debug, _1))
     .add_pair(0, "off")
     .add_pair(1, "on");
@@ -305,7 +305,7 @@
   
   group->pack(text.release());
   manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  ScreenManager::current()->push_overlay(manager.release());
 }
 
 void
@@ -347,7 +347,7 @@
 
   group->pack(text.release());
   manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  ScreenManager::current()->push_overlay(manager.release());
 }
 
 Rectf
@@ -388,8 +388,8 @@
   sprite3dview->set_model(filename);
 
   // Launching Sprite3DView instead of game
-  screen_manager.push_screen(sprite3dview.release());
-  screen_manager.clear_overlay();
+  ScreenManager::current()->push_screen(sprite3dview.release());
+  ScreenManager::current()->clear_overlay();
 }
 
 void
@@ -398,31 +398,31 @@
   std::auto_ptr<ParticleViewer> particle_viewer(new ParticleViewer());
   particle_viewer->load(filename);
 
-  screen_manager.push_screen(particle_viewer.release());
-  screen_manager.clear_overlay();
+  ScreenManager::current()->push_screen(particle_viewer.release());
+  ScreenManager::current()->clear_overlay();
 }
 
 void
 MenuManager::menu_start_game()
 {
-  screen_manager.push_screen(new GameSession(Pathname("levels/newformat2.wst")));
-  screen_manager.pop_overlay();
+  ScreenManager::current()->push_screen(new GameSession(Pathname("levels/newformat2.wst")));
+  ScreenManager::current()->pop_overlay();
 }
 
 void
 MenuManager::menu_quit()
 {
   //GameSession::current()->quit();
-  screen_manager.pop_overlay();
-  screen_manager.quit();
+  ScreenManager::current()->pop_overlay();
+  ScreenManager::current()->quit();
 }
 
 void
 MenuManager::menu_start_scenario(const Pathname& scenario)
 {
   std::cout << "Starting: " << scenario << std::endl;
-  screen_manager.push_screen(new GameSession(scenario));
-  screen_manager.clear_overlay();
+  ScreenManager::current()->push_screen(new GameSession(scenario));
+  ScreenManager::current()->clear_overlay();
 }
 
 void
@@ -441,21 +441,21 @@
 void
 MenuManager::menu_controller_debug(int i)
 {
-  screen_manager.show_controller_debug(i);
+  ScreenManager::current()->show_controller_debug(i);
 }
 
 void
 MenuManager::menu_continue()
 {
-  screen_manager.pop_overlay();
+  ScreenManager::current()->pop_overlay();
 }
 
 void
 MenuManager::menu_exit()
 {
   // FIXME: Make this return to the title screen
-  screen_manager.pop_overlay();
-  screen_manager.pop_screen(); 
+  ScreenManager::current()->pop_overlay();
+  ScreenManager::current()->pop_screen(); 
 }
 
 void
@@ -479,22 +479,22 @@
 void
 MenuManager::menu_show_geometry_test()
 {
-  screen_manager.push_screen(new GeometryTest());
-  screen_manager.clear_overlay();  
+  ScreenManager::current()->push_screen(new GeometryTest());
+  ScreenManager::current()->clear_overlay();  
 }
 
 void
 MenuManager::menu_show_armature_test()
 {
-  screen_manager.push_screen(new ArmatureTest());
-  screen_manager.clear_overlay();  
+  ScreenManager::current()->push_screen(new ArmatureTest());
+  ScreenManager::current()->clear_overlay();  
 }
 
 void
 MenuManager::menu_show_navigation_test()
 {
-  screen_manager.push_screen(new NavigationTest());
-  screen_manager.clear_overlay();  
+  ScreenManager::current()->push_screen(new NavigationTest());
+  ScreenManager::current()->clear_overlay();  
 }
 
 void

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -76,6 +76,7 @@
       ScriptManager     script_manager;
       WindstilleControllerDescription controller_description;
       InputManagerSDL   input_manager(controller_description);
+      ScreenManager     screen_manager;
       TileFactory       tile_factory("tiles.scm");
 
       init_modules();
@@ -115,23 +116,23 @@
     {
       std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
       sprite3dview->set_model(filename);
-      screen_manager.push_screen(sprite3dview.release());
+      ScreenManager::current()->push_screen(sprite3dview.release());
     }
     else if (file_type == "sprite" || file_type == "png" || file_type == "jpg")
     {
       std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
       sprite2dview->set_sprite(filename);
-      screen_manager.push_screen(sprite2dview.release());
+      ScreenManager::current()->push_screen(sprite2dview.release());
     }
     else if (file_type == "particles")
     {
       ParticleViewer* particle_viewer = new ParticleViewer();
       particle_viewer->load(filename);
-      screen_manager.push_screen(particle_viewer);
+      ScreenManager::current()->push_screen(particle_viewer);
     }
     else if (file_type == "wst")
     {
-      screen_manager.push_screen(new GameSession(filename));
+      ScreenManager::current()->push_screen(new GameSession(filename));
     }
     else
     {
@@ -140,10 +141,10 @@
   }
   else
   {
-    screen_manager.push_screen(new TitleScreen());
+    ScreenManager::current()->push_screen(new TitleScreen());
   }
   
-  screen_manager.run();
+  ScreenManager::current()->run();
 }
 
 void

Modified: trunk/windstille/src/gui/gui_manager.cpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/gui/gui_manager.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -45,7 +45,7 @@
   if (!root->is_active())
     {
       //FIXME: This doesn't work when GUI isn't an overlay
-      screen_manager.pop_overlay();
+      ScreenManager::current()->pop_overlay();
     }
 }
 

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/gui/menu.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -111,7 +111,7 @@
 
   group->pack(menu.release());
   manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  ScreenManager::current()->push_overlay(manager.release());
 }
 
 } // namespace gui

Modified: trunk/windstille/src/input/input_configurator.cpp
===================================================================
--- trunk/windstille/src/input/input_configurator.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/input/input_configurator.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -139,7 +139,7 @@
   if (items.empty())
     {
       std::cout << "InputConfigurator: done" << std::endl;
-      screen_manager.pop_overlay();
+      ScreenManager::current()->pop_overlay();
       return; 
     }
   
@@ -226,7 +226,7 @@
       if (event.key.keysym.sym == SDLK_ESCAPE)
         {
           std::cout << "InputConfigurator: abort" << std::endl;
-          screen_manager.pop_overlay();
+          ScreenManager::current()->pop_overlay();
           //next_item();
         }
       else if (event.key.keysym.sym == SDLK_RETURN)

Modified: trunk/windstille/src/screen/armature_test.cpp
===================================================================
--- trunk/windstille/src/screen/armature_test.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/screen/armature_test.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -105,7 +105,7 @@
   if (controller.button_was_pressed(ESCAPE_BUTTON) ||
       controller.button_was_pressed(PAUSE_BUTTON))
     {
-      screen_manager.pop_screen();
+      ScreenManager::current()->pop_screen();
     }
 
   if (controller.button_was_pressed(PRIMARY_BUTTON))

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -244,7 +244,7 @@
                   break;
 
                 case QUIT_ACTION:
-                  screen_manager.quit();
+                  ScreenManager::current()->quit();
                   break;
 
                 default:

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -30,7 +30,6 @@
 #include "screen/game_session.hpp"
 #include "sound/sound_manager.hpp"
 
-ScreenManager screen_manager; 
 
 ScreenManager::ScreenManager()
   : screens(),

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-08-25 02:32:04 UTC (rev 3059)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-08-25 02:39:38 UTC (rev 3060)
@@ -23,6 +23,8 @@
 #include <boost/scoped_ptr.hpp>
 #include <vector>
 
+#include "util/currenton.hpp"
+
 class Screen;
 class ControllerHelpWindow;
 
@@ -30,7 +32,7 @@
  *  The ScreenManager handles overlays like Option Menus, Main Menus
  *  and such
  */
-class ScreenManager
+class ScreenManager : public Currenton<ScreenManager>
 {
 private:
   enum ScreenAction { NONE, POP_SCREEN, PUSH_SCREEN, CLEAR_SCREENS };
@@ -92,8 +94,6 @@
   ScreenManager& operator= (const ScreenManager&);
 };
 
-extern ScreenManager screen_manager; 
-
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Tue Aug 25 04:40:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 04:40:47 +0200
Subject: [Windstille-commit] r3061 - trunk/windstille/src/display
Message-ID: <200908250240.n7P2elkk012634@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 04:40:47 +0200 (Tue, 25 Aug 2009)
New Revision: 3061

Modified:
   trunk/windstille/src/display/texture_manager.hpp
Log:
Removed obsolete extern declaration

Modified: trunk/windstille/src/display/texture_manager.hpp
===================================================================
--- trunk/windstille/src/display/texture_manager.hpp	2009-08-25 02:39:38 UTC (rev 3060)
+++ trunk/windstille/src/display/texture_manager.hpp	2009-08-25 02:40:47 UTC (rev 3061)
@@ -53,8 +53,6 @@
   Textures textures;
 };
 
-extern TextureManager* texture_manager;
-
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Tue Aug 25 04:47:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 04:47:39 +0200
Subject: [Windstille-commit] r3062 - in trunk/windstille/src: app objects
Message-ID: <200908250247.n7P2ldHn012974@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 04:47:38 +0200 (Tue, 25 Aug 2009)
New Revision: 3062

Modified:
   trunk/windstille/src/app/globals.cpp
   trunk/windstille/src/app/globals.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
Log:
Cleaned up globals.?pp a bit

Modified: trunk/windstille/src/app/globals.cpp
===================================================================
--- trunk/windstille/src/app/globals.cpp	2009-08-25 02:40:47 UTC (rev 3061)
+++ trunk/windstille/src/app/globals.cpp	2009-08-25 02:47:38 UTC (rev 3062)
@@ -16,18 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-int TILE_SIZE       = 32;
-int TILE_RESOLUTION = 64;
-
 float game_time = 0.0f;
 
 float game_speed = 1.0f;
+
 #ifdef DEBUG
 bool debug = true;
 #else
 bool debug = false;
 #endif
+
 bool collision_debug = false;
-bool sound_disabled  = false;
 
 /* EOF */

Modified: trunk/windstille/src/app/globals.hpp
===================================================================
--- trunk/windstille/src/app/globals.hpp	2009-08-25 02:40:47 UTC (rev 3061)
+++ trunk/windstille/src/app/globals.hpp	2009-08-25 02:47:38 UTC (rev 3062)
@@ -19,11 +19,9 @@
 #ifndef HEADER_WINDSTILLE_APP_GLOBALS_HPP
 #define HEADER_WINDSTILLE_APP_GLOBALS_HPP
 
-typedef enum { WEST, EAST} Direction;
+const int TILE_SIZE       = 32;
+const int TILE_RESOLUTION = 64;
 
-extern int TILE_SIZE;
-extern int TILE_RESOLUTION;
-
 const float GRAVITY = 1500;
 
 /**
@@ -37,8 +35,6 @@
 extern bool debug;
 extern bool collision_debug;
 
-enum GameMainState { RUN_GAME, LOAD_MENU, LOAD_GAME_SESSION, QUIT_GAME };
-
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-25 02:40:47 UTC (rev 3061)
+++ trunk/windstille/src/objects/player.cpp	2009-08-25 02:47:38 UTC (rev 3062)
@@ -751,7 +751,7 @@
     }
 }
 
-Direction
+Player::Direction
 Player::get_direction() const
 {
   return sprite.get_rot() ? EAST : WEST;

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-25 02:40:47 UTC (rev 3061)
+++ trunk/windstille/src/objects/player.hpp	2009-08-25 02:47:38 UTC (rev 3062)
@@ -87,6 +87,8 @@
   };
   Foot jump_foot;
   
+  enum Direction { WEST, EAST };
+
   double reload_time;
   float  z_pos;
 



From grumbel at mail.berlios.de  Tue Aug 25 04:49:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 04:49:38 +0200
Subject: [Windstille-commit] r3063 - trunk/windstille/src/app
Message-ID: <200908250249.n7P2ncDP013052@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 04:49:37 +0200 (Tue, 25 Aug 2009)
New Revision: 3063

Modified:
   trunk/windstille/src/app/windstille_main.hpp
Log:
Removed unused stuff

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-08-25 02:47:38 UTC (rev 3062)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-08-25 02:49:37 UTC (rev 3063)
@@ -47,12 +47,7 @@
 #ifndef HEADER_WINDSTILLE_APP_WINDSTILLE_MAIN_HPP
 #define HEADER_WINDSTILLE_APP_WINDSTILLE_MAIN_HPP
 
-#include <boost/scoped_ptr.hpp>
-
-#include "util/currenton.hpp"
-#include "screen/screen.hpp"
-
-class WindstilleMain : public Currenton<WindstilleMain>
+class WindstilleMain
 { 
 public:
   WindstilleMain();



From grumbel at mail.berlios.de  Tue Aug 25 13:25:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 13:25:19 +0200
Subject: [Windstille-commit] r3064 - in trunk/windstille/src: app engine gui
	objects screen scripting
Message-ID: <200908251125.n7PBPJ2a008811@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 13:25:14 +0200 (Tue, 25 Aug 2009)
New Revision: 3064

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/app/console.hpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/gui/root_component.cpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Use Currenton for console instead of having it as global variable

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/app/console.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -16,14 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "app/console.hpp"
+
+#include <ostream>
+
 #include "display/display.hpp"
 #include "engine/script_manager.hpp"
 #include "font/fonts.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "screen/game_session.hpp"
 
-Console console;
-
 class ConsoleStreambuf : public std::streambuf
 {
 public:
@@ -79,6 +81,8 @@
 public:
   Console& console;
 
+  std::ostream ostream;
+
   struct ConsoleEntry {
     std::string message;
     float display_time;
@@ -101,6 +105,7 @@
 
   ConsoleImpl(Console& console_)
     : console(console_),
+      ostream(new ConsoleStreambuf(&console)),
       x_pos(16.0f),
       y_pos(600.0f - 16.0f),
       buffer(),
@@ -313,10 +318,10 @@
 void
 ConsoleImpl::maybe_newline()
 {
-  console << std::flush;
+  ConsoleLog << std::flush;
   if (!current_entry.message.empty())
     {
-      console << std::endl;
+      ConsoleLog << std::endl;
     }
 }
 
@@ -340,7 +345,7 @@
         }
       else
         {
-          console << "Unknown key type for element" << std::endl;
+          ConsoleLog << "Unknown key type for element" << std::endl;
         }
                               
       sq_pop(v,2); //pops key and val before the nex iteration
@@ -413,12 +418,12 @@
     }
   else 
     {
-      console << "> " << command_line << std::endl;
+      ConsoleLog << "> " << command_line << std::endl;
       for(std::vector<std::string>::iterator i = completions.begin(); i != completions.end(); ++i)
         {
-          console << *i << " ";
+          ConsoleLog << *i << " ";
         }
-      console << std::endl;
+      ConsoleLog << std::endl;
 
       command_line = find_longest_prefix(completions);
       cursor_pos = command_line.size();
@@ -434,7 +439,7 @@
       history_position = history.size();
     }
                       
-  console << "> " << command_line << std::endl;
+  ConsoleLog << "> " << command_line << std::endl;
 
   if (command_line == "quit" || command_line == "exit")
     {
@@ -442,7 +447,7 @@
     }
   else if (command_line == "help")
     {
-      console << "This is a script console, can enter stuff in here that will then be evaluated.\n"
+      ConsoleLog << "This is a script console, can enter stuff in here that will then be evaluated.\n"
               << "Type 'quit' to exit the console." << std::endl;
     }
   else if (command_line == "reset")
@@ -454,7 +459,7 @@
       HSQUIRRELVM v = ScriptManager::current()->get_vm();
 
       int size = sq_getsize(v, -1);
-      console << size << " elements on the root table" << std::endl;
+      ConsoleLog << size << " elements on the root table" << std::endl;
 
       sq_pushroottable(v);
 
@@ -466,11 +471,11 @@
           const SQChar *s;
           if (SQ_SUCCEEDED(sq_getstring(v,-2, &s)))
             {
-              console << s << " -> " << Scripting::squirrel2string(v, -1) << std::endl;
+              ConsoleLog << s << " -> " << Scripting::squirrel2string(v, -1) << std::endl;
             }
           else
             {
-              console << "Unknown key type for element" << std::endl;
+              ConsoleLog << "Unknown key type for element" << std::endl;
             }
                               
           sq_pop(v,2); //pops key and val before the nex iteration
@@ -509,7 +514,7 @@
             {
               // FIXME: This does only work when somebody is doing a 'return', i.e. almost never
               if (sq_gettype(vm, -1) != OT_NULL)
-                console << Scripting::squirrel2string(vm, -1) << std::endl;
+                ConsoleLog << Scripting::squirrel2string(vm, -1) << std::endl;
               // else
               //   console << "(null)" << std::endl;
             }
@@ -528,8 +533,7 @@
 //-------------------------------------------------------------------------------
 
 Console::Console()
-  : std::ostream(new ConsoleStreambuf(this)),
-    impl(new ConsoleImpl(*this))
+  : impl(new ConsoleImpl(*this))
 {
 }
 
@@ -537,6 +541,12 @@
 {
 }
 
+std::ostream&
+Console::get_ostream() const
+{
+  return impl->ostream;
+}
+
 void
 Console::activate()
 {

Modified: trunk/windstille/src/app/console.hpp
===================================================================
--- trunk/windstille/src/app/console.hpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/app/console.hpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -20,16 +20,20 @@
 #define HEADER_WINDSTILLE_APP_CONSOLE_HPP
 
 #include <boost/scoped_ptr.hpp>
-#include <ostream>
+#include <iosfwd>
 
+#include "util/currenton.hpp"
+
 class ConsoleImpl;
 
-class Console : public std::ostream
+class Console : public Currenton<Console>
 {
 public:
   Console();
   ~Console();
 
+  std::ostream& get_ostream() const; 
+
   void draw();
   void update(float delta);
 
@@ -40,7 +44,7 @@
   void scroll(int lines);
 
   void add(char* buf, int len);
-  
+
   /** execute the given string */
   void execute(const std::string& str);
 
@@ -52,7 +56,7 @@
   Console& operator= (const Console&);
 };
 
-extern Console console;
+#define ConsoleLog Console::current()->get_ostream()
 
 #endif
 

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -511,18 +511,18 @@
   if (wiimote && !wiimote->is_connected())
     {
       // FIXME: This never appears on screen due to timeout
-      console << "Trying to connect Wiimote: Press buttons 1 and 2 to connect" << std::endl;
+      ConsoleLog << "Trying to connect Wiimote: Press buttons 1 and 2 to connect" << std::endl;
 
       wiimote->connect();
 
       if (wiimote->is_connected())
-        console << "Wiimote connected" << std::endl;
+        ConsoleLog << "Wiimote connected" << std::endl;
       else
-        console << "Wiimote connection failed" << std::endl;
+        ConsoleLog << "Wiimote connection failed" << std::endl;
     }
   else
     {
-      console << "Wiimote already is connected" << std::endl;
+      ConsoleLog << "Wiimote already is connected" << std::endl;
     }
 #endif
 }

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -21,6 +21,7 @@
 #include <physfs.h>
 
 #include "app/config.hpp"
+#include "app/console.hpp"
 #include "display/opengl_window.hpp"
 #include "display/surface_manager.hpp"
 #include "display/texture_manager.hpp"
@@ -68,6 +69,7 @@
       OpenGLWindow      window;
       TTFFontManager    ttffont_manager;
       Fonts             fonts;
+      Console           console;
       SoundManager      sound_manager;
       TextureManager    texture_manager;
       SurfaceManager    surface_manager;

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -53,7 +53,7 @@
   va_list arglist; 
   va_start(arglist, str); 
   vsprintf(buf, str, arglist);
-  console << (char*)buf;
+  ConsoleLog << (char*)buf;
   puts(buf);
   va_end(arglist); 
 }

Modified: trunk/windstille/src/gui/root_component.cpp
===================================================================
--- trunk/windstille/src/gui/root_component.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/gui/root_component.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -87,7 +87,7 @@
     }
   else
     {
-      console << "Error: Need to add_child() first befor calling set_focus()" << std::endl;
+      ConsoleLog << "Error: Need to add_child() first befor calling set_focus()" << std::endl;
     }
 }
 

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/objects/character.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -64,11 +64,13 @@
 Character::use()
 {
   try 
-    {
-      ScriptManager::current()->run_script_file(Sector::current()->get_directory() + name + ".nut");
-    } catch (std::exception& e) {
-      console << e.what() << std::endl;
-    }
+  {
+    ScriptManager::current()->run_script_file(Sector::current()->get_directory() + name + ".nut");
+  } 
+  catch (std::exception& e) 
+  {
+    ConsoleLog << e.what() << std::endl;
+  }
 }
 
 /* EOF */

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -120,7 +120,7 @@
         }
       catch (std::exception& e) 
         {
-          console << e.what() << std::endl;
+          ConsoleLog << e.what() << std::endl;
         }
     }
 }

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -365,33 +365,33 @@
               {
                 case SDLK_1:
                   sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
-                  console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
+                  ConsoleLog << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
                   break;
 
                 case SDLK_2:
                   sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
-                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
+                  ConsoleLog << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
                   break;
       
                 case SDLK_3:
                   sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
-                  console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
+                  ConsoleLog << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
                   break;      
   
                 case SDLK_4:
                   sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
-                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
+                  ConsoleLog << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
                   break;
 
                 case SDLK_5:
                   sc.set_render_mask(sc.get_render_mask() ^ SceneContext::BLURMAP);
-                  console << "Toggled blurmap: " << ((sc.get_render_mask() & SceneContext::BLURMAP) > 0) << std::endl;
+                  ConsoleLog << "Toggled blurmap: " << ((sc.get_render_mask() & SceneContext::BLURMAP) > 0) << std::endl;
                   break;
 
                 case SDLK_c:
                   if (debug) {
                     collision_debug = !collision_debug;
-                    console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
+                    ConsoleLog << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
                   }
                   break;
 
@@ -409,7 +409,7 @@
         {
           Vector2f real_pos = GameSession::current()->get_view()->screen_to_world(Vector2f(event.button.x,
                                                                                            event.button.y));      
-          console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
+          ConsoleLog << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
         }
         break;
     }

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -109,13 +109,13 @@
   if (line1.intersect(line2, collision_point))
     {
       if (!had_prev_collision)
-        console << "Collision" << std::endl;
+        ConsoleLog << "Collision" << std::endl;
       had_prev_collision = true;
     }
   else
     {
       if (had_prev_collision)
-        console << "No Collision" << std::endl;
+        ConsoleLog << "No Collision" << std::endl;
       had_prev_collision = false;
       collision_point = Vector2f(32, 32);
     }

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -80,8 +80,8 @@
     {
       InputManagerSDL::current()->update(delta);
 
-      console.update(step);
-      if (!console.is_active())
+      Console::current()->update(step);
+      if (!Console::current()->is_active())
       {
         if (!overlay_screens.empty())
           overlay_screens.back()->update(step, InputManagerSDL::current()->get_controller());
@@ -119,7 +119,7 @@
   if (show_controller_help_window)
      controller_help_window->draw();
 
-  console.draw();
+  Console::current()->draw();
 
   if (config.get_bool("show-fps"))
     draw_fps();
@@ -262,12 +262,12 @@
                         } while(filename.exists());
 
                         Display::save_screenshot(filename);
-                        console << "Writing screenshot to: '" << filename << "'" << std::endl;
+                        ConsoleLog << "Writing screenshot to: '" << filename << "'" << std::endl;
                       }
                       break;
               
                     default:
-                      if (!console.is_active())
+                      if (!Console::current()->is_active())
                         {
                           if (!overlay_screens.empty())
                             overlay_screens.back()->handle_event(event);
@@ -278,9 +278,9 @@
                   }
               }
               
-            if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
+            if (!Console::current()->is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
               {
-                console.activate();
+                Console::current()->activate();
               }
             else
               {

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -279,7 +279,7 @@
       ignore_delta = true;
       fadein = 0.0f;
       prepare_sprite(new_sprite);
-      console << index << ": " << directory[index] << std::endl;
+      ConsoleLog << index << ": " << directory[index] << std::endl;
     }
 
   SpriteManager::current()->cleanup();

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-25 02:49:37 UTC (rev 3063)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-25 11:25:14 UTC (rev 3064)
@@ -217,7 +217,7 @@
   for(std::vector<boost::shared_ptr< ::GameObject > >::const_iterator i = objects.begin(); i != objects.end(); ++i)
   {
     if (!(*i)->get_name().empty())
-      console << (*i)->get_name() << std::endl;
+      ConsoleLog << (*i)->get_name() << std::endl;
   }
 }
 
@@ -264,14 +264,14 @@
 
 SQInteger display(HSQUIRRELVM v)
 {
-  console << squirrel2string(v, -1);
+  ConsoleLog << squirrel2string(v, -1);
   sq_pop(v, 1);
   return 0;
 }
 
 SQInteger println(HSQUIRRELVM v)
 {
-  console << squirrel2string(v, -1) << std::endl;
+  ConsoleLog << squirrel2string(v, -1) << std::endl;
   sq_pop(v, 1);
   return 0;
 }
@@ -280,7 +280,7 @@
 {
   SQInteger top = sq_gettop(v);
   for(int i = 1; i <= top; ++i)
-    console << i << " " << squirrel2string(v, i) << std::endl;
+    ConsoleLog << i << " " << squirrel2string(v, i) << std::endl;
 
   return 0;
 }
@@ -303,7 +303,7 @@
   }
   catch(std::exception& err) 
   {
-    console << err.what() << std::endl;
+    ConsoleLog << err.what() << std::endl;
   }
 }
 
@@ -319,7 +319,7 @@
 
 void show_config()
 {
-  config.debug_print(console);
+  config.debug_print(ConsoleLog);
 }
 
 void cutscene_begin()
@@ -403,11 +403,11 @@
 
   for(std::vector<lisp::Lisp*>::iterator i = entries.begin(); i != entries.end(); ++i)
   {
-    console << (i - entries.begin()) << ": ";
+    ConsoleLog << (i - entries.begin()) << ": ";
     std::stringstream str;
     (*i)->print(str);
-    console << str.str();
-    console << std::endl;
+    ConsoleLog << str.str();
+    ConsoleLog << std::endl;
   }
    
   return 0;



From grumbel at mail.berlios.de  Tue Aug 25 13:59:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 13:59:12 +0200
Subject: [Windstille-commit] r3065 - in trunk/windstille/src: app display
	editor engine font lisp navigation scripting sound sprite3d
	tile util
Message-ID: <200908251159.n7PBxCud031167@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 13:59:10 +0200 (Tue, 25 Aug 2009)
New Revision: 3065

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/shader_object.cpp
   trunk/windstille/src/display/shader_program.cpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/display/texture_packer.cpp
   trunk/windstille/src/editor/select_mask.hpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/navigation/properties.hpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/sound/wav_sound_file.cpp
   trunk/windstille/src/sprite3d/data.hpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/util/command_line_generic.cpp
   trunk/windstille/src/util/sexpr_file_reader.cpp
Log:
Added a few stdint.h and stdio.h to make g++-4.4 happy

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/app/config.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -20,6 +20,7 @@
 
 #include <iostream>
 #include <boost/format.hpp>
+#include <stdio.h>
 
 #include "app/windstille.hpp"
 #include "util/sexpr_file_reader.hpp"

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/display/blitter.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -19,6 +19,7 @@
 
 #include "blitter.hpp"
 
+#include <stdint.h>
 #include <string.h>
 
 #include "display/software_surface.hpp"

Modified: trunk/windstille/src/display/shader_object.cpp
===================================================================
--- trunk/windstille/src/display/shader_object.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/display/shader_object.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -18,6 +18,7 @@
 
 #include "display/shader_object.hpp"
 
+#include <stdio.h>
 #include <iostream>
 
 #include "util/util.hpp"

Modified: trunk/windstille/src/display/shader_program.cpp
===================================================================
--- trunk/windstille/src/display/shader_program.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/display/shader_program.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -65,7 +65,7 @@
   loc = glGetUniformLocationARB(impl->handle, name);
 
   if (loc == -1)
-    printf("No such uniform named \"%s\"\n", name);
+    std::cout << "No such uniform named \"%s\"\n" << name << std::endl;
 
   assert_gl("ShaderProgram::get_uniform_location()");
 

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/display/texture.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -19,6 +19,7 @@
 
 #include "display/texture.hpp"
 
+#include <stdint.h>
 #include <stdexcept>
 
 #include "math/rect.hpp"

Modified: trunk/windstille/src/display/texture_packer.cpp
===================================================================
--- trunk/windstille/src/display/texture_packer.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/display/texture_packer.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -17,6 +17,7 @@
 */
 
 #include <stdexcept>
+#include <stdio.h>
 #include <boost/scoped_ptr.hpp>
 
 #include "display/software_surface.hpp"

Modified: trunk/windstille/src/editor/select_mask.hpp
===================================================================
--- trunk/windstille/src/editor/select_mask.hpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/editor/select_mask.hpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -18,6 +18,8 @@
 
 #ifndef HEADER_WINDSTILLE_EDITOR_SELECT_MASK_HPP
 #define HEADER_WINDSTILLE_EDITOR_SELECT_MASK_HPP
+
+#include <stdint.h>
 
 class SelectMask
 {

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -19,6 +19,7 @@
 #include "engine/script_manager.hpp"
 
 #include <stdarg.h>
+#include <stdio.h>
 #include <sqstdaux.h>
 #include <sqstdmath.h>
 #include <sqstdstring.h>

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <stdint.h>
+
 #include "display/software_surface.hpp"
 #include "font/border_font_effect.hpp"
 

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <stdint.h>
 #include <vector>
 #include <stdexcept>
 #include <sstream>

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -20,6 +20,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <sstream>
+#include <stdio.h>
 #include <string.h>
 
 #include "lisp/lisp.hpp"

Modified: trunk/windstille/src/navigation/properties.hpp
===================================================================
--- trunk/windstille/src/navigation/properties.hpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/navigation/properties.hpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -19,6 +19,8 @@
 #ifndef HEADER_WINDSTILLE_NAVIGATION_PROPERTIES_HPP
 #define HEADER_WINDSTILLE_NAVIGATION_PROPERTIES_HPP
 
+#include <stdint.h>
+
 enum {
   WALKABLE = (1<<0),
   WALL     = (1<<1),

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/scripting/util.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -19,6 +19,7 @@
 
 #include <boost/scoped_ptr.hpp>
 #include <sstream>
+#include <stdio.h>
 
 #include "lisp/parser.hpp"
 #include "lisp/properties.hpp"

Modified: trunk/windstille/src/sound/wav_sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/sound/wav_sound_file.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -18,6 +18,8 @@
 
 #include <string.h>
 #include <stdexcept>
+#include <stdio.h>
+#include <stdint.h>
 
 #include "sound/wav_sound_file.hpp"
 

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -21,6 +21,7 @@
 
 #include <GL/glew.h>
 #include <vector>
+#include <stdint.h>
 
 #include "display/texture.hpp"
 #include "math/quaternion.hpp"

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -20,6 +20,8 @@
 
 #include <sstream>
 #include <stdexcept>
+#include <stdio.h>
+#include <stdint.h>
 #include <physfs.h>
 
 #include "tile/tile.hpp"

Modified: trunk/windstille/src/util/command_line_generic.cpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/util/command_line_generic.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -28,6 +28,7 @@
 */
 
 #include <iomanip>
+#include <stdio.h>
 #include <iostream>
 #include <stdexcept>
 

Modified: trunk/windstille/src/util/sexpr_file_reader.cpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-25 11:25:14 UTC (rev 3064)
+++ trunk/windstille/src/util/sexpr_file_reader.cpp	2009-08-25 11:59:10 UTC (rev 3065)
@@ -17,6 +17,7 @@
 */
 
 #include <string.h>
+#include <stdint.h>
 
 #include "lisp/getters.hpp"
 #include "util/file_reader_impl.hpp"



From grumbel at mail.berlios.de  Tue Aug 25 14:02:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 14:02:44 +0200
Subject: [Windstille-commit] r3066 - trunk/windstille
Message-ID: <200908251202.n7PC2ibX031633@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 14:02:42 +0200 (Tue, 25 Aug 2009)
New Revision: 3066

Modified:
   trunk/windstille/SConscript
Log:
Clone() Environments from a parent environment so that CXX can be set

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-25 11:59:10 UTC (rev 3065)
+++ trunk/windstille/SConscript	2009-08-25 12:02:42 UTC (rev 3066)
@@ -16,6 +16,7 @@
 ##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 import time
+import os
 
 start_time = time.time()
 
@@ -36,8 +37,6 @@
     #"-Wunreachable-code",
     #"-Winline",
     ]
-
-windstille_cxxflags = debug_cxxflags
 
 # YACC
 yacc_test_text = """
@@ -114,13 +113,17 @@
 
 class Project:
     def __init__(self):
+        self.cxx = 'g++-4.4'
+        self.cxxflags = debug_cxxflags
+        
         self.features = {
             "64bit" : 0,
             "cwiid" : 0
             }        
 
     def build_all(self):
-        self.configure()
+        if not GetOption('clean'):
+            self.configure()
         self.build_squirrel()
         self.build_miniswig()
         self.build_binreloc()
@@ -131,7 +134,7 @@
         self.build_testapps()
         
     def configure(self):
-        env = Environment()
+        self.env = Environment(CXXFLAGS=self.cxxflags)
 
         # FIXME: None of the options are used, as only self.features
         # makes it across function calls
@@ -149,13 +152,22 @@
         opts.Add('LINKFLAGS', 'Linker Compiler flags')
         opts.Add('CC', 'C Compiler')
         opts.Add('CXX', 'C++ Compiler')  
-        opts.Update(env)
-        opts.Save('options.cache', env)
-        Help(opts.GenerateHelpText(env))
+        opts.Update(self.env)
+        opts.Save('options.cache', self.env)
+        Help(opts.GenerateHelpText(self.env))
 
-        conf = Configure(env, custom_tests = { 'Check32bit' : Check32bit,
-                                               'CheckYacc'  : CheckYacc,
-                                               'CheckLex'   : CheckLex})
+        conf = Configure(self.env, custom_tests = { 'Check32bit' : Check32bit,
+                                                    'CheckYacc'  : CheckYacc,
+                                                    'CheckLex'   : CheckLex})
+
+        # conf.CheckCXX()
+
+        if 'CXX' in os.environ:
+            conf.env.Replace(CXX = os.environ['CXX'])
+        elif self.cxx:
+            conf.env.Replace(CXX=self.cxx)
+        print("Using compiler " + conf.env['CXX'])
+        
         if conf.Check32bit() == "64bit":
             # conf.env.Append(CXXFLAGS="-D_SQ64")
             self.features["64bit"] = 1
@@ -171,11 +183,12 @@
             print "yacc or bison not found, aborting."
             Exit(1)
 
-        env = conf.Finish()
+        self.env = conf.Finish()
 
     def build_squirrel(self):
-        squirrel_env = Environment(CPPPATH  = ['external/SQUIRREL2/include'],
-                                   CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
+        squirrel_env = Environment()
+        squirrel_env.Append(CPPPATH  = ['external/SQUIRREL2/include'],
+                            CXXFLAGS = ["-fno-rtti", "-g", "-DDEBUG"])
 
         if self.features['64bit']:
             squirrel_env.Append(CPPDEFINES = '_SQ64')
@@ -186,9 +199,10 @@
 
 
     def build_miniswig(self):
-        miniswig_env = Environment(CPPPATH=['.', 'external/miniswig/'],
-                                   CXXFILESUFFIX = ".cpp",
-                                   YACCFLAGS=['-d', '--no-lines'])
+        miniswig_env = self.env.Clone()
+        miniswig_env.Append(CPPPATH=['.', 'external/miniswig/'],
+                            CXXFILESUFFIX = ".cpp",
+                            YACCFLAGS=['-d', '--no-lines'])
 
         miniswig_bin = miniswig_env.Program('miniswig',
                                             ['external/miniswig/parser.yy',
@@ -199,7 +213,8 @@
                                              'external/miniswig/main.cpp',
                                              'external/miniswig/tree.cpp'])
 
-        env = Environment(MINISWIG=miniswig_bin)
+        env = self.env.Clone()
+        env.Append(MINISWIG=miniswig_bin)
 
         env.Depends(env.Command('src/scripting/miniswig.tmp', 'src/scripting/wrapper.interface.hpp',
                                 ["$CXX -E -Isrc/ -x c -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
@@ -215,9 +230,9 @@
         self.binreloc_lib = StaticLibrary("binreloc", ["external/binreloc-2.0/binreloc.c"], CPPDEFINES=["ENABLE_BINRELOC"])
 
     def build_wstlib(self):
-        wstlib_env    = Environment(CPPPATH=['src', 'external/binreloc-2.0/', "src/scripting/"],
-                                    CXXFLAGS=windstille_cxxflags,
-                                    CPPDEFINES=["HAVE_BINRELOC"])
+        wstlib_env    = self.env.Clone()
+        wstlib_env.Append(CPPPATH=['src', 'external/binreloc-2.0/', "src/scripting/"],
+                          CPPDEFINES=["HAVE_BINRELOC"])
         self.util_lib      = wstlib_env.StaticLibrary('util', Glob('src/lisp/*.cpp') + Glob('src/util/*.cpp'))
         self.math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
         self.navgraph_lib  = wstlib_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
@@ -240,16 +255,16 @@
                                                      Glob('src/sprite3d/*.cpp'))
 
     def build_windstille(self):
-        windstille_env = Environment(CXXFLAGS=windstille_cxxflags,
-                                     CPPPATH=['src', '.', 'external/SQUIRREL2/include/', 'src/scripting/'],
-                                     CPPDEFINES=["HAVE_BINRELOC"],
-                                     LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, self.physfs_lib,
-                                           self.util_lib, self.math_lib,
-                                           self.binreloc_lib, self.squirrel_lib, 
-                                           'GL', 'GLU', 'GLEW',
-                                           'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',
-                                           # FIXME: Add configure checks for exact boost library name
-                                           'boost_signals-mt', 'boost_filesystem-mt'])
+        windstille_env = self.env.Clone()
+        windstille_env.Append(CPPPATH=['src', '.', 'external/SQUIRREL2/include/', 'src/scripting/'],
+                              CPPDEFINES=["HAVE_BINRELOC"],
+                              LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, self.physfs_lib,
+                                    self.util_lib, self.math_lib,
+                                    self.binreloc_lib, self.squirrel_lib, 
+                                    'GL', 'GLU', 'GLEW',
+                                    'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',
+                                    # FIXME: Add configure checks for exact boost library name
+                                    'boost_signals-mt', 'boost_filesystem-mt'])
 
         windstille_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
         windstille_env.ParseConfig('freetype-config --libs --cflags | sed "s/-I/-isystem/g"')
@@ -277,12 +292,12 @@
                                Glob('src/tile/*.cpp'))
 
     def build_windstille_editor(self):
-        editor_env = Environment(CPPPATH=['src'],
-                                 CPPDEFINES=["HAVE_BINRELOC"],
-                                 CXXFLAGS=windstille_cxxflags,
-                                 LIBS = [self.particles_lib, self.navgraph_lib, self.display_lib,
-                                         self.util_lib, self.physfs_lib, self.math_lib, self.binreloc_lib,
-                                         'GL', 'GLEW', 'SDL_image', 'physfs', 'boost_filesystem-mt'])
+        editor_env = self.env.Clone()
+        editor_env.Append(CPPPATH=['src'],
+                          CPPDEFINES=["HAVE_BINRELOC"],
+                          LIBS = [self.particles_lib, self.navgraph_lib, self.display_lib,
+                                  self.util_lib, self.physfs_lib, self.math_lib, self.binreloc_lib,
+                                  'GL', 'GLEW', 'SDL_image', 'physfs', 'boost_filesystem-mt'])
 
         editor_env.ParseConfig('Magick++-config --libs --cppflags | sed "s/-I/-isystem/g"')
         editor_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
@@ -296,17 +311,17 @@
         editor_env.Program('windstille-editor', Glob('src/editor/*.cpp'))
 
     def build_testapps(self):
-        env = Environment(OBJPREFIX="test__",
-                          CPPPATH=['src'],
-                          CXXFLAGS=windstille_cxxflags,
-                          CPPDEFINES=["__TEST__"])
+        env = self.env.Clone()
+        env.Append(OBJPREFIX="test__",
+                   CPPPATH=['src'],
+                   CPPDEFINES=["__TEST__"])
         env.Program("test_babyxml", ["src/util/baby_xml.cpp"])
         env.Program("test_response_curve", ["src/util/response_curve.cpp"])
         env.Program("test_random", ["src/math/random.cpp"])
 
     def build_windstille_data(self):
-        data_env = Environment()
-
+        data_env = self.env.Clone()
+        
         data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
                                                          src_suffix = ".xcf",
                                                          suffix = ".png") })



From grumbel at mail.berlios.de  Tue Aug 25 14:18:36 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 14:18:36 +0200
Subject: [Windstille-commit] r3067 - trunk/windstille
Message-ID: <200908251218.n7PCIa2a000816@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 14:18:36 +0200 (Tue, 25 Aug 2009)
New Revision: 3067

Modified:
   trunk/windstille/SConscript
Log:
Properly set CXXFLAGS in Configure step

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-25 12:02:42 UTC (rev 3066)
+++ trunk/windstille/SConscript	2009-08-25 12:18:36 UTC (rev 3067)
@@ -134,7 +134,7 @@
         self.build_testapps()
         
     def configure(self):
-        self.env = Environment(CXXFLAGS=self.cxxflags)
+        self.env = Environment()
 
         # FIXME: None of the options are used, as only self.features
         # makes it across function calls
@@ -162,6 +162,9 @@
 
         # conf.CheckCXX()
 
+        if self.cxxflags:
+            conf.env.Append(CXXFLAGS=self.cxxflags)
+
         if 'CXX' in os.environ:
             conf.env.Replace(CXX = os.environ['CXX'])
         elif self.cxx:



From grumbel at mail.berlios.de  Tue Aug 25 14:19:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 14:19:47 +0200
Subject: [Windstille-commit] r3068 - trunk/windstille
Message-ID: <200908251219.n7PCJluf002136@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 14:19:46 +0200 (Tue, 25 Aug 2009)
New Revision: 3068

Modified:
   trunk/windstille/SConscript
Log:
Miniswig is external, so don't use Windstille CXXFLAGS for it

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-25 12:18:36 UTC (rev 3067)
+++ trunk/windstille/SConscript	2009-08-25 12:19:46 UTC (rev 3068)
@@ -202,7 +202,7 @@
 
 
     def build_miniswig(self):
-        miniswig_env = self.env.Clone()
+        miniswig_env = Environment()
         miniswig_env.Append(CPPPATH=['.', 'external/miniswig/'],
                             CXXFILESUFFIX = ".cpp",
                             YACCFLAGS=['-d', '--no-lines'])



From grumbel at mail.berlios.de  Tue Aug 25 15:43:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 15:43:28 +0200
Subject: [Windstille-commit] r3069 - in trunk/windstille/src: app armature
	collision display editor engine gui hud input lisp math
	objects particles physfs properties screen scripting sprite2d
	sprite3d
Message-ID: <200908251343.n7PDhSsb013320@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 15:43:24 +0200 (Tue, 25 Aug 2009)
New Revision: 3069

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/armature/armature.cpp
   trunk/windstille/src/collision/collision_engine.cpp
   trunk/windstille/src/collision/collision_object.cpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/selection.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/physics.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/gui/automap.cpp
   trunk/windstille/src/gui/button.cpp
   trunk/windstille/src/gui/component.cpp
   trunk/windstille/src/gui/grid_component.cpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/list_view.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/root_component.cpp
   trunk/windstille/src/gui/slider.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/gui/text_view.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/lisp/property_iterator.hpp
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/objects/grenade.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/test_object.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/particle_system.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/physfs/physfs_stream.cpp
   trunk/windstille/src/properties/property.hpp
   trunk/windstille/src/properties/property_set.cpp
   trunk/windstille/src/properties/property_set.hpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/scripting/squirrel_error.cpp
   trunk/windstille/src/sprite2d/sprite.cpp
   trunk/windstille/src/sprite2d/sprite.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
Log:
Fixed a bunch of -Wshadow warnings

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/app/console.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -498,7 +498,6 @@
   std::string str = str_; //"return (" + str_ + ")";
 
   int i = str.length();
-  const char* buffer = str.c_str();
 
   HSQUIRRELVM vm = ScriptManager::current()->get_vm();
 
@@ -507,7 +506,7 @@
 
   try 
     {
-      if(SQ_SUCCEEDED(sq_compilebuffer(vm, buffer, i, _SC("interactive console"), SQTrue)))
+      if(SQ_SUCCEEDED(sq_compilebuffer(vm, str.c_str(), i, _SC("interactive console"), SQTrue)))
         {
           sq_pushroottable(vm);
           if(SQ_SUCCEEDED(sq_call(vm, 1, 1/*retval*/, true))) 

Modified: trunk/windstille/src/armature/armature.cpp
===================================================================
--- trunk/windstille/src/armature/armature.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/armature/armature.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -110,14 +110,14 @@
 }
 
 Bone*
-Armature::get_bone(const std::string& name)
+Armature::get_bone(const std::string& name_)
 {
   for(Bones::iterator i = bones.begin(); i != bones.end(); ++i)
     {
-      if ((*i)->name == name)
+      if ((*i)->name == name_)
         return *i;
     }
-  std::cout << "Error: Bone: '" << name << "' not found" << std::endl;
+  std::cout << "Error: Bone: '" << name_ << "' not found" << std::endl;
   return 0;
 }
 

Modified: trunk/windstille/src/collision/collision_engine.cpp
===================================================================
--- trunk/windstille/src/collision/collision_engine.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/collision/collision_engine.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -240,15 +240,16 @@
 
   if(target.top < rb.top)
     {
-      float add = static_cast<float>(c_roundup(target.bottom / static_cast<float>(TILE_SIZE))) * static_cast<float>(TILE_SIZE) - target.bottom;
-      target.top    += add;
-      target.bottom += add;
+      float v = static_cast<float>(c_roundup(target.bottom / static_cast<float>(TILE_SIZE)))
+        * static_cast<float>(TILE_SIZE) - target.bottom;
+      target.top    += v;
+      target.bottom += v;
     }
   if(target.left < rb.left)
     {
-      float add = static_cast<float>(c_roundup(target.right / static_cast<float>(TILE_SIZE))) * static_cast<float>(TILE_SIZE) - target.right;
-      target.left  += add;
-      target.right += add;
+      float v = static_cast<float>(c_roundup(target.right / static_cast<float>(TILE_SIZE))) * static_cast<float>(TILE_SIZE) - target.right;
+      target.left  += v;
+      target.right += v;
     }
 
   b.pos = Vector2f(target.left-b.primitive.left, target.top-b.primitive.top);

Modified: trunk/windstille/src/collision/collision_object.cpp
===================================================================
--- trunk/windstille/src/collision/collision_object.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/collision/collision_object.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -26,28 +26,19 @@
  * CollisionObject
  ***********************************************************************/
 
-CollisionObject::CollisionObject(GameObject* game_object, const Rectf& rect_)
- : object_type(),
-   pos(),
-   velocity(),
-   game_object(),
+CollisionObject::CollisionObject(GameObject* game_object_, const Rectf& rect_)
+ : object_type(RECTANGLE),
+   pos(0,0),
+   velocity(0,0),
+   game_object(game_object_),
    collision(),
    primitive(rect_),
    tilemap(),
-   is_unstuckable(),
-   is_unstuck_movable(),
-   is_domains(),
-   check_domains()
+   is_unstuckable(true),
+   is_unstuck_movable(true),
+   is_domains(DOMAIN_PLAYER  | DOMAIN_ENEMY),
+   check_domains(DOMAIN_TILEMAP | DOMAIN_PLAYER | DOMAIN_ENEMY)
 {
-  object_type        = RECTANGLE;
-  is_unstuckable     = true;
-  is_unstuck_movable = true;
-  velocity           = Vector2f(0,0);
-  pos                = Vector2f(0,0);
-  game_object        = game_object;
-
-  is_domains    = DOMAIN_PLAYER  | DOMAIN_ENEMY;
-  check_domains = DOMAIN_TILEMAP | DOMAIN_PLAYER | DOMAIN_ENEMY;
 }
 
 CollisionObject::CollisionObject(TileMap* tilemap_)

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -91,7 +91,7 @@
 
 void
 SurfaceManager::load_grid(const Pathname& filename,
-                          std::vector<Surface>& surfaces,
+                          std::vector<Surface>& out_surfaces,
                           int width, int height)
 {
   SoftwareSurface image(filename);
@@ -119,10 +119,10 @@
           float s_max_u = (maxu * (static_cast<float>(x + width)))  / static_cast<float>(image.get_width());
           float s_max_v = (maxv * (static_cast<float>(x + height))) / static_cast<float>(image.get_height());
 
-          surfaces.push_back(Surface(texture, 
-                                     Rectf(s_min_u, s_min_v, s_max_u, s_max_v), 
-                                     Sizef(static_cast<float>(width),
-                                           static_cast<float>(height))));
+          out_surfaces.push_back(Surface(texture, 
+                                         Rectf(s_min_u, s_min_v, s_max_u, s_max_v), 
+                                         Sizef(static_cast<float>(width),
+                                               static_cast<float>(height))));
         }
     }
 }

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -59,9 +59,9 @@
   software_surface = SoftwareSurface(Pathname(path));
 }
 
-DecalObjectModel::DecalObjectModel(const std::string& /*name*/, const Vector2f& rel_pos, 
+DecalObjectModel::DecalObjectModel(const std::string& /*name*/, const Vector2f& rel_pos_, 
                                    const std::string& path_, MapType type_)
-  : ObjectModel("DecalObjectModel", rel_pos),
+  : ObjectModel("DecalObjectModel", rel_pos_),
     path(path_),
     surface(Pathname(path_)),
     software_surface(Pathname(path_)),

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -859,13 +859,13 @@
 }
 
 void
-EditorWindow::on_layer_toggle(int layer, bool status)
+EditorWindow::on_layer_toggle(int layer, bool status_)
 {
   //std::cout << "EditorWindow::on_layer_toggle(" << layer << ", " << status << ")" << std::endl;
 
   if (WindstilleWidget* wst = get_windstille_widget())
     {
-      wst->get_select_mask().set(layer, status);
+      wst->get_select_mask().set(layer, status_);
       wst->queue_draw();
     }
 }

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -129,18 +129,18 @@
 {
   if (auto_lock->get_active())
     {
-      Gtk::TreeModel::Path path;
+      Gtk::TreeModel::Path path_;
       Gtk::TreeViewColumn* focus_column;
-      treeview.get_cursor(path, focus_column);
+      treeview.get_cursor(path_, focus_column);
       
-      if (!path.gobj())
+      if (!path_.gobj())
         {
           std::cout << "LayerManager::on_cursor_changed(): Error: Couldn't get path" << std::endl;
         }
       else
         {
           //std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
-          Gtk::TreeModel::iterator it = treeview.get_model()->get_iter(path);
+          Gtk::TreeModel::iterator it = treeview.get_model()->get_iter(path_);
           if (it)
             {
               EditorWindow::current()->on_lock_all(true);

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -161,14 +161,14 @@
 ObjectSelector::add_decal(const Glib::RefPtr<Gdk::Pixbuf>& icon,
                           const std::string& pathname,
                           const std::string& url,
-                          uint32_t filter)
+                          uint32_t filter_)
 {
   Gtk::ListStore::iterator it = list_store->append();
 
   (*it)[Columns::instance().pathname]    = pathname;
   (*it)[Columns::instance().url]         = url;
   (*it)[Columns::instance().icon]        = icon;
-  (*it)[Columns::instance().filter_mask] = filter;
+  (*it)[Columns::instance().filter_mask] = filter_;
 }
 
 static bool has_suffix(const std::string& str, const std::string& suffix)
@@ -186,7 +186,7 @@
 }
 
 void
-ObjectSelector::add_decals_from_directory(const std::string& pathname, uint32_t filter)
+ObjectSelector::add_decals_from_directory(const std::string& pathname, uint32_t filter_)
 {
   std::vector<Glib::ustring> images;
 
@@ -195,9 +195,9 @@
     {
       if (has_suffix(*i, ".png"))
         {
-          Glib::ustring path = pathname;
-          path += *i;
-          images.push_back(path);
+          Glib::ustring path_ = pathname;
+          path_ += *i;
+          images.push_back(path_);
         }
     }
 
@@ -253,7 +253,7 @@
 
       add_decal(icon, *i, 
                 "file:///home/ingo/projects/windstille/trunk/windstille/" + *i, 
-                filter);
+                filter_);
     }
 }
 
@@ -291,8 +291,8 @@
       i != selection.end();
       ++i)
     {
-      Gtk::TreeModel::Path path = list_filter->convert_path_to_child_path(*i);
-      Gtk::ListStore::iterator it = list_store->get_iter(path);
+      Gtk::TreeModel::Path path_ = list_filter->convert_path_to_child_path(*i);
+      Gtk::ListStore::iterator it = list_store->get_iter(path_);
 
       iconpath = (*it)[Columns::instance().pathname];
     }
@@ -327,8 +327,8 @@
       i != selection.end();
       ++i)
     {
-      Gtk::TreeModel::Path path = list_filter->convert_path_to_child_path(*i);
-      Gtk::ListStore::iterator it = list_store->get_iter(path);
+      Gtk::TreeModel::Path path_ = list_filter->convert_path_to_child_path(*i);
+      Gtk::ListStore::iterator it = list_store->get_iter(path_);
 
       if (selection_data.get_target() == "application/x-windstille-decal")
         {

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/editor/selection.hpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -55,8 +55,8 @@
   ~Selection();
 
   template<class Iter>
-  void add(Iter begin, Iter end) {
-    for(Iter i = begin; i != end; ++i)
+  void add(Iter begin_, Iter end_) {
+    for(Iter i = begin_; i != end_; ++i)
       {
         add(*i);
       }

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -580,13 +580,13 @@
 }
 
 bool
-WindstilleWidget::scroll(GdkEventScroll* event)
+WindstilleWidget::scroll(GdkEventScroll* event_)
 {
-  if (event->direction == GDK_SCROLL_UP)
+  if (event_->direction == GDK_SCROLL_UP)
     {
       //viewer->get_state().zoom(1.1f, Vector2i(event->x, event->y));
     }
-  else if (event->direction == GDK_SCROLL_DOWN)
+  else if (event_->direction == GDK_SCROLL_DOWN)
     {
       //viewer->get_state().zoom(1.0f/1.1f, Vector2i(event->x, event->y));
     }
@@ -594,25 +594,25 @@
 }
 
 bool
-WindstilleWidget::mouse_down(GdkEventButton* event)
+WindstilleWidget::mouse_down(GdkEventButton* event_)
 {
   grab_focus();
 
-  //std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
+  //std::cout << "Button Press: " << event_->x << ", " << event_->y << " - " << event_->button << std::endl;
 
-  if (event->button == 1)
+  if (event_->button == 1)
     { // Tool
-      EditorWindow::current()->get_current_tool()->mouse_down(event, *this);
+      EditorWindow::current()->get_current_tool()->mouse_down(event_, *this);
       return true;
     }
-  else if (event->button == 2)
+  else if (event_->button == 2)
     { // Scroll
-      scroll_tool->mouse_down(event, *this);
+      scroll_tool->mouse_down(event_, *this);
       return true;
     }
-  else if (event->button == 3)
+  else if (event_->button == 3)
     { // Context Menu
-      EditorWindow::current()->get_current_tool()->mouse_right_down(event, *this);
+      EditorWindow::current()->get_current_tool()->mouse_right_down(event_, *this);
       return true;
     }
   else
@@ -622,29 +622,29 @@
 }
 
 bool
-WindstilleWidget::mouse_move(GdkEventMotion* event)
+WindstilleWidget::mouse_move(GdkEventMotion* event_)
 {
-  //std::cout << "Motion: " << event->x << ", " << event->y << std::endl;
+  //std::cout << "Motion: " << event_->x << ", " << event_->y << std::endl;
   
-  EditorWindow::current()->get_current_tool()->mouse_move(event, *this);
-  scroll_tool->mouse_move(event, *this);
+  EditorWindow::current()->get_current_tool()->mouse_move(event_, *this);
+  scroll_tool->mouse_move(event_, *this);
   
   return true;
 }
 
 bool
-WindstilleWidget::mouse_up(GdkEventButton* event)
+WindstilleWidget::mouse_up(GdkEventButton* event_)
 {
-  //std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
-  //viewer->on_mouse_button_up(Vector2i(event->x, event->y), event->button);
-  if (event->button == 1)
+  //std::cout << "Button Release: " << event_->x << ", " << event_->y << " - " << event_->button << std::endl;
+  //viewer->on_mouse_button_up(Vector2i(event_->x, event_->y), event_->button);
+  if (event_->button == 1)
     {
-      EditorWindow::current()->get_current_tool()->mouse_up(event, *this);
+      EditorWindow::current()->get_current_tool()->mouse_up(event_, *this);
       queue_draw();
     }
-  else if (event->button == 2)
+  else if (event_->button == 2)
     {
-      scroll_tool->mouse_up(event, *this);
+      scroll_tool->mouse_up(event_, *this);
       queue_draw();
     }
 
@@ -652,11 +652,11 @@
 }
 
 bool
-WindstilleWidget::key_press(GdkEventKey* event)
+WindstilleWidget::key_press(GdkEventKey* event_)
 {
-  //std::cout << event->keyval << " keypress " << state.get_pos() << std::endl;
+  //std::cout << event_->keyval << " keypress " << state.get_pos() << std::endl;
 
-  switch(event->keyval)
+  switch(event_->keyval)
     {
       case GDK_1:
         map_type = DecalObjectModel::COLORMAP;
@@ -713,9 +713,9 @@
 }
 
 bool
-WindstilleWidget::key_release(GdkEventKey* /*event*/)
+WindstilleWidget::key_release(GdkEventKey* /*event_*/)
 { // /usr/include/gtk-2.0/gdk/gdkkeysyms.h
-  //std::cout << "KeyRelease: " << (int)event->keyval << std::endl;
+  //std::cout << "KeyRelease: " << (int)event_->keyval << std::endl;
   return true;
 }
 
@@ -746,18 +746,18 @@
   else
     object->set_select_mask(select_mask);
 
-  Gtk::TreeModel::Path path;
+  Gtk::TreeModel::Path path_;
   Gtk::TreeViewColumn* focus_column;
 
-  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path_, focus_column);
 
-  if (!path.gobj())
+  if (!path_.gobj())
     {
       std::cout << "WindstilleWidget::on_drag_data_received(): Error: Couldn't get path" << std::endl;
     }
   else
     {
-      execute(CommandHandle(new ObjectAddCommand(sector_model->get_layer(path), object)));
+      execute(CommandHandle(new ObjectAddCommand(sector_model->get_layer(path_), object)));
     }
 }
 
@@ -807,36 +807,36 @@
 LayerHandle
 WindstilleWidget::get_current_layer()
 {
-  Gtk::TreeModel::Path path;
+  Gtk::TreeModel::Path path_;
   Gtk::TreeViewColumn* focus_column;
-  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path_, focus_column);
 
-  if (!path.gobj())
+  if (!path_.gobj())
     {
       std::cout << "WindstilleWidget::get_current_layer(): Error: Couldn't get path" << std::endl;
       return LayerHandle();
     }
   else
     {
-      return sector_model->get_layer(path);  
+      return sector_model->get_layer(path_);  
     }
 }
 
 Gtk::TreeModel::Path
 WindstilleWidget::get_current_layer_path()
 {
-  Gtk::TreeModel::Path path;
+  Gtk::TreeModel::Path path_;
   Gtk::TreeViewColumn* focus_column;
-  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path_, focus_column);
 
-  if (!path.gobj())
+  if (!path_.gobj())
     {
       std::cout << "WindstilleWidget::get_current_layer_path(): Error: Couldn't get path" << std::endl;
       return Gtk::TreeModel::Path();
     }
   else
     {
-      return path;
+      return path_;
      }
 }
 
@@ -879,13 +879,13 @@
 }
 
 void
-WindstilleWidget::save_screenshot(const std::string& filename)
+WindstilleWidget::save_screenshot(const std::string& filename_)
 {
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (glwindow->gl_begin(get_gl_context()))
     {
-      Display::save_screenshot(Pathname(filename, Pathname::kSysPath));
+      Display::save_screenshot(Pathname(filename_, Pathname::kSysPath));
       glwindow->gl_end();
     }
 }

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -37,9 +37,9 @@
 }
 
 void
-Entity::set_pos(Vector2f pos)
+Entity::set_pos(Vector2f pos_)
 {
-  this->pos = pos;
+  pos = pos_;
 }
 
 bool

Modified: trunk/windstille/src/engine/physics.cpp
===================================================================
--- trunk/windstille/src/engine/physics.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/engine/physics.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -22,8 +22,8 @@
 
 #include "collision/collision_object.hpp"
 
-Physics::Physics(Entity* entity)
-  : entity(entity),
+Physics::Physics(Entity* entity_)
+  : entity(entity_),
     mass(200.0),
     bounciness(1.0),
     force(),

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -83,14 +83,14 @@
 }
 
 void
-Sector::parse_file(const Pathname& filename)
+Sector::parse_file(const Pathname& filename_)
 {
-  if (debug) std::cout << "Sector:parse_file '" << filename << "'" << std::endl;
+  if (debug) std::cout << "Sector:parse_file '" << filename_ << "'" << std::endl;
   
-  FileReader reader = FileReader::parse(filename);
+  FileReader reader = FileReader::parse(filename_);
   if(reader.get_name() != "windstille-sector") {
     std::ostringstream msg;
-    msg << "'" << filename << "' is not a windstille-sector file";
+    msg << "'" << filename_ << "' is not a windstille-sector file";
     throw std::runtime_error(msg.str());
   }
   
@@ -254,11 +254,11 @@
 }
 
 GameObject*
-Sector::get_object(const std::string& name) const
+Sector::get_object(const std::string& name_) const
 {
   for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i) 
     {
-      if ((*i)->get_name() == name)
+      if ((*i)->get_name() == name_)
         {
           return i->get();
         }
@@ -313,21 +313,21 @@
 }
 
 void
-Sector::call_script_function(const std::string& name)
+Sector::call_script_function(const std::string& name_)
 {
   if (!vm.get())
     {
-      throw std::runtime_error("Sector::call_script_function(): Can't call function '" + name + "' without a init script");
+      throw std::runtime_error("Sector::call_script_function(): Can't call function '" + name_ + "' without a init script");
     }
   else
     {
       if (!vm->is_idle())
         {
-          throw std::runtime_error("Sector::call_script_function(): VM must be idle to call  '" + name + "'");
+          throw std::runtime_error("Sector::call_script_function(): VM must be idle to call  '" + name_ + "'");
         }
       else
         {
-          vm->call(name);
+          vm->call(name_);
         }
     }
 }

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -64,8 +64,8 @@
     }
 }
 
-SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm, bool isolated_)
-  : parent_vm(parent_vm),
+SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm_, bool isolated_)
+  : parent_vm(parent_vm_),
     isolated(isolated_),
     thread(0),
     filename("<unset>"),

Modified: trunk/windstille/src/gui/automap.cpp
===================================================================
--- trunk/windstille/src/gui/automap.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/automap.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -26,8 +26,8 @@
 
 namespace gui {
 
-Automap::Automap(Component* parent)
-  : Component(parent),
+Automap::Automap(Component* parent_)
+  : Component(parent_),
     surface(),
     pos(),
     zoom()
@@ -35,8 +35,8 @@
   assert(0);
 }
 
-Automap::Automap(const Rectf& rect, Component* parent)
-  : Component(rect, parent),
+Automap::Automap(const Rectf& rect_, Component* parent_)
+  : Component(rect_, parent_),
     surface(),
     pos(0.0f, 0.0f),
     zoom(6.0f)

Modified: trunk/windstille/src/gui/button.cpp
===================================================================
--- trunk/windstille/src/gui/button.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/button.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -23,15 +23,15 @@
 
 namespace gui {
 
-Button::Button(Component* parent)
-  : Component(parent),
+Button::Button(Component* parent_)
+  : Component(parent_),
     label()
 {
   assert(0);
 }
 
-Button::Button(const std::string& label_, Component* parent)
-  : Component(Rectf(), parent),
+Button::Button(const std::string& label_, Component* parent_)
+  : Component(Rectf(), parent_),
     label(label_)
 {
 }

Modified: trunk/windstille/src/gui/component.cpp
===================================================================
--- trunk/windstille/src/gui/component.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/component.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -20,9 +20,9 @@
 
 namespace gui {
 
-Component::Component(Component* parent)
+Component::Component(Component* parent_)
   : rect(),
-    parent(parent),
+    parent(parent_),
     active(false)
 {
 }

Modified: trunk/windstille/src/gui/grid_component.cpp
===================================================================
--- trunk/windstille/src/gui/grid_component.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/grid_component.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -22,8 +22,8 @@
 
 namespace gui {
 
-GridComponent::GridComponent(Component* parent)
-  : Component(parent),
+GridComponent::GridComponent(Component* parent_)
+  : Component(parent_),
     grid(),
     pos(),
     child_active(),
@@ -32,8 +32,8 @@
   assert(0);  
 }
 
-GridComponent::GridComponent(const Rectf& rect, int weight, int height, Component* parent)
-  : Component(rect, parent),
+GridComponent::GridComponent(const Rectf& rect_, int weight, int height, Component* parent_)
+  : Component(rect_, parent_),
     grid(weight, height),
     pos(0, 0),
     child_active(false),
@@ -209,7 +209,7 @@
   }
   else
   {
-    Rectf rect = get_screen_rect();
+    Rectf rect_ = get_screen_rect();
 
     if (colspan == 1 && rowspan == 1)
     {
@@ -225,10 +225,10 @@
       grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
     }
 
-    component->set_screen_rect(Rectf(Vector2f(rect.left + static_cast<float>(x) * (rect.get_width()  / static_cast<float>(grid.get_width()))  + padding,
-                                              rect.top  + static_cast<float>(y) * (rect.get_height() / static_cast<float>(grid.get_height())) + padding),
-                                     Sizef((rect.get_width()  / static_cast<float>(grid.get_width()))  * static_cast<float>(colspan) - 2.0f * padding,
-                                           (rect.get_height() / static_cast<float>(grid.get_height())) * static_cast<float>(rowspan) - 2.0f * padding)));
+    component->set_screen_rect(Rectf(Vector2f(rect_.left + static_cast<float>(x) * (rect_.get_width()  / static_cast<float>(grid.get_width()))  + padding,
+                                              rect_.top  + static_cast<float>(y) * (rect_.get_height() / static_cast<float>(grid.get_height())) + padding),
+                                     Sizef((rect_.get_width()  / static_cast<float>(grid.get_width()))  * static_cast<float>(colspan) - 2.0f * padding,
+                                           (rect_.get_height() / static_cast<float>(grid.get_height())) * static_cast<float>(rowspan) - 2.0f * padding)));
   }
 }
 

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/group_component.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -22,8 +22,8 @@
 
 namespace gui {
 
-GroupComponent::GroupComponent(const Rectf& rect, const std::string& title_, Component* parent)
-  : Component(rect, parent),
+GroupComponent::GroupComponent(const Rectf& rect_, const std::string& title_, Component* parent_)
+  : Component(rect_, parent_),
     title(title_),
     child()
 {

Modified: trunk/windstille/src/gui/list_view.cpp
===================================================================
--- trunk/windstille/src/gui/list_view.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/list_view.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -23,8 +23,8 @@
 
 namespace gui {
 
-ListView::ListView(const Rectf& rect, Component* parent)
-  : Component(rect, parent),
+ListView::ListView(const Rectf& rect_, Component* parent_)
+  : Component(rect_, parent_),
     columns(),
     items(),
     current_item(0)

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -25,8 +25,8 @@
 
 namespace gui {
 
-MenuComponent::MenuComponent(const Rectf& rect, bool allow_cancel_, Component* parent)
-  : Component(rect, parent),
+MenuComponent::MenuComponent(const Rectf& rect_, bool allow_cancel_, Component* parent_)
+  : Component(rect_, parent_),
     items(),
     current_item(0),
     font(Fonts::current()->vera20.get()),
@@ -236,9 +236,9 @@
 }
 
 void
-MenuComponent::set_screen_rect(const Rectf& rect)
+MenuComponent::set_screen_rect(const Rectf& rect_)
 {
-  num_displayable_items = static_cast<int>(rect.get_height() / item_height());  
+  num_displayable_items = static_cast<int>(rect_.get_height() / item_height());  
 
   if (num_displayable_items < int(items.size()))
     {
@@ -252,7 +252,7 @@
     }
 
   
-  Component::set_screen_rect(rect);
+  Component::set_screen_rect(rect_);
 }
 
 } // namespace gui

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -84,11 +84,11 @@
 }
 
 EnumMenuItem&
-EnumMenuItem::add_pair(int value, const std::string& label)
+EnumMenuItem::add_pair(int value_, const std::string& label_)
 {
   EnumValue enum_value;
-  enum_value.value = value;
-  enum_value.label = label;
+  enum_value.value = value_;
+  enum_value.label = label_;
   labels.push_back(enum_value);
 
   return *this;

Modified: trunk/windstille/src/gui/root_component.cpp
===================================================================
--- trunk/windstille/src/gui/root_component.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/root_component.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -24,8 +24,8 @@
 
 namespace gui {
 
-RootComponent::RootComponent(const Rectf& rect)
-  : Component(rect, 0),
+RootComponent::RootComponent(const Rectf& rect_)
+  : Component(rect_, 0),
     focus(0),
     children()
 {

Modified: trunk/windstille/src/gui/slider.cpp
===================================================================
--- trunk/windstille/src/gui/slider.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/slider.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -22,8 +22,8 @@
 
 namespace gui {
 
-Slider::Slider(Component* parent)
-  : Component(parent),
+Slider::Slider(Component* parent_)
+  : Component(parent_),
     min(0),
     max(100),
     step(10),

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -23,16 +23,16 @@
 
 namespace gui {
 
-TabComponent::TabComponent(Component* parent)
-  : Component(parent),
+TabComponent::TabComponent(Component* parent_)
+  : Component(parent_),
     tabs(),
     current_tab(0)
 {
   assert(0);
 }
 
-TabComponent::TabComponent(const Rectf& rect, Component* parent)
-  : Component(rect, parent),
+TabComponent::TabComponent(const Rectf& rect_, Component* parent_)
+  : Component(rect_, parent_),
     tabs(),
     current_tab(0)
 {

Modified: trunk/windstille/src/gui/text_view.cpp
===================================================================
--- trunk/windstille/src/gui/text_view.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/gui/text_view.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -22,9 +22,9 @@
 
 namespace gui {
 
-TextView::TextView(const Rectf& rect, Component* component)
-  : Component(rect, component),
-    text_area(rect, false)
+TextView::TextView(const Rectf& rect_, Component* component_)
+  : Component(rect_, component_),
+    text_area(rect_, false)
 {
 }
 
@@ -62,10 +62,10 @@
 }
 
 void
-TextView::set_screen_rect(const Rectf& rect)
+TextView::set_screen_rect(const Rectf& rect_)
 {
-  Component::set_screen_rect(rect);
-  text_area.set_rect(rect.grow(-16.0f, -4.0f));
+  Component::set_screen_rect(rect_);
+  text_area.set_rect(rect_.grow(-16.0f, -4.0f));
 }
 
 void

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -100,8 +100,8 @@
 
   if (text_area->is_progress_complete())
     {
-      const Vector2f& pos = text_area->get_cursor_pos();
-      Rectf cursor(pos.x + 8, pos.y + 8, pos.x + 24, pos.y + 24);
+      const Vector2f& pos_ = text_area->get_cursor_pos();
+      Rectf cursor(pos_.x + 8, pos_.y + 8, pos_.x + 24, pos_.y + 24);
       Display::fill_rect(cursor, Color(1.0, 1.0, 1.0, 
                                        fabsf(sinf(static_cast<float>(SDL_GetTicks()) / 1000.0f * math::pi * 3.0f))));
     }

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/hud/inventory.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -28,8 +28,8 @@
   std::string name;
   Sprite sprite;
   
-  InventoryItem(const std::string& name, const std::string& filename)
-    : name(name), sprite(Pathname(filename))
+  InventoryItem(const std::string& name_, const std::string& filename_)
+    : name(name_), sprite(Pathname(filename_))
   {
   }
 };

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -233,8 +233,8 @@
     }
 }
 
-InputManagerSDL::InputManagerSDL(const ControllerDescription& controller_description)
-  : InputManager(controller_description),
+InputManagerSDL::InputManagerSDL(const ControllerDescription& controller_description_)
+  : InputManager(controller_description_),
     impl(new InputManagerSDLImpl)
 {
   for (int i = 0; i < SDLK_LAST; ++i) {

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/input/wiimote.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -436,41 +436,41 @@
 }
 
 void
-Wiimote::mesg(cwiid_wiimote_t* /*w*/, int mesg_count, union cwiid_mesg mesg[])
+Wiimote::mesg(cwiid_wiimote_t* /*w*/, int mesg_count, union cwiid_mesg msg[])
 {
   pthread_mutex_lock(&mutex);
 
   //std::cout << "StatusCallback: " << w << " " << mesg_count << std::endl;
   for (int i=0; i < mesg_count; i++)
     {
-      switch (mesg[i].type) 
+      switch (msg[i].type) 
         {
         case CWIID_MESG_STATUS:
-          wiimote->on_status(mesg[i].status_mesg);
+          wiimote->on_status(msg[i].status_mesg);
           break;
 
         case CWIID_MESG_BTN:
-          wiimote->on_button(mesg[i].btn_mesg);
+          wiimote->on_button(msg[i].btn_mesg);
           break;
 
         case CWIID_MESG_ACC:
-          wiimote->on_acc(mesg[i].acc_mesg);
+          wiimote->on_acc(msg[i].acc_mesg);
           break;
 
         case CWIID_MESG_IR:
-          wiimote->on_ir(mesg[i].ir_mesg);
+          wiimote->on_ir(msg[i].ir_mesg);
           break;
 
         case CWIID_MESG_NUNCHUK:
-          wiimote->on_nunchuck(mesg[i].nunchuk_mesg);
+          wiimote->on_nunchuck(msg[i].nunchuk_mesg);
           break;
 
         case CWIID_MESG_CLASSIC:
-          wiimote->on_classic(mesg[i].classic_mesg);
+          wiimote->on_classic(msg[i].classic_mesg);
           break;
 
         case CWIID_MESG_ERROR:
-          wiimote->on_error(mesg[i].error_mesg);
+          wiimote->on_error(msg[i].error_mesg);
           break;
 
         default:

Modified: trunk/windstille/src/lisp/property_iterator.hpp
===================================================================
--- trunk/windstille/src/lisp/property_iterator.hpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/lisp/property_iterator.hpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -60,8 +60,8 @@
 private:
   friend class Properties;
 
-  PropertyIterator(PropertyMap::iterator begin, PropertyMap::iterator end)
-    : i(begin), end(end)
+  PropertyIterator(PropertyMap::iterator begin_, PropertyMap::iterator end_)
+    : i(begin_), end(end_)
   {
   }
     

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/math/matrix.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -206,20 +206,20 @@
   float c = cosf(angle * 3.14159265f / 180.0f);
   float s = sinf(angle * 3.14159265f / 180.0f);
 
-  Matrix matrix = Matrix::identity();
-  matrix[0]  = x*x*(1-c)+c;
-  matrix[1]  = y*x*(1-c)+z*s;
-  matrix[2]  = x*z*(1-c)-y*s;
+  Matrix m = Matrix::identity();
+  m[0]  = x*x*(1-c)+c;
+  m[1]  = y*x*(1-c)+z*s;
+  m[2]  = x*z*(1-c)-y*s;
 
-  matrix[4]  = x*y*(1-c)-z*s;
-  matrix[5]  = y*y*(1-c)+c;
-  matrix[6]  = y*z*(1-c)+x*s;
+  m[4]  = x*y*(1-c)-z*s;
+  m[5]  = y*y*(1-c)+c;
+  m[6]  = y*z*(1-c)+x*s;
 
-  matrix[8]  = x*z*(1-c)+y*s;
-  matrix[9]  = y*z*(1-c)-x*s;
-  matrix[10] = z*z*(1-c)+c;
+  m[8]  = x*z*(1-c)+y*s;
+  m[9]  = y*z*(1-c)-x*s;
+  m[10] = z*z*(1-c)+c;
 
-  return multiply(matrix);
+  return multiply(m);
 }
 // http://www.cvl.iis.u-tokyo.ac.jp/~miyazaki/tech/teche23.html
 // http://gpwiki.org/index.php/MathGem:Fast_Matrix_Inversion

Modified: trunk/windstille/src/objects/grenade.cpp
===================================================================
--- trunk/windstille/src/objects/grenade.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/objects/grenade.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -50,9 +50,9 @@
 }
 
 void
-Grenade::set_velocity(const Vector2f& velocity)
+Grenade::set_velocity(const Vector2f& velocity_)
 {
-  this->velocity = velocity;
+  velocity = velocity_;
 }
 
 /* EOF */

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/objects/player.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -31,7 +31,7 @@
 #include "tile/tile_map.hpp"
 
 static const int MAX_ENERGY = 16;
-static const float WALK_SPEED = 128.0;
+static const float WALK_SPEED = 100.0;
 static const float RUN_SPEED = 256.0;
 
 Player::Player () 
@@ -91,7 +91,7 @@
                                Color(1.0f, 0.0f, 0.0f, 0.5f), 10000.0f);
     }
 
-  sprite.draw(sc.color(), pos, z_pos);
+  sprite.draw(sc.color(), pos + Vector2f(0.0f, 1.0f), z_pos);
 
   Entity* obj = find_useable_entity();
   if (obj)
@@ -758,10 +758,10 @@
 }
 
 void
-Player::try_set_action(const std::string& name, float speed)
+Player::try_set_action(const std::string& name_, float speed)
 {
-  if (sprite.get_action() != name)
-    sprite.set_action(name, speed);
+  if (sprite.get_action() != name_)
+    sprite.set_action(name_, speed);
 }
 
 int
@@ -812,10 +812,10 @@
 }
 
 void 
-Player::set_pos(Vector2f pos)
+Player::set_pos(Vector2f pos_)
 {
-  Entity::set_pos(pos);
-  c_object->set_pos(pos);
+  Entity::set_pos(pos_);
+  c_object->set_pos(pos_);
 }
 
 /* EOF */

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -27,12 +27,12 @@
   ShaderProgram shader_program;
   float radius;
 
-  ShockwaveDrawingRequest(const Vector2f& pos, 
+  ShockwaveDrawingRequest(const Vector2f& pos_, 
                           const Texture&       noise_,
                           const ShaderProgram& shader_program_,
                           float r,
                           const Matrix& modelview_) 
-    : DrawingRequest(pos, 500.0f, modelview_),
+    : DrawingRequest(pos_, 500.0f, modelview_),
       noise(noise_),
       shader_program(shader_program_),
       radius(r)
@@ -60,16 +60,16 @@
 
     { // Apply modelview matrix to texture matrix so that we can
       // give texcoords as screencords
-      GLdouble modelview[16];
+      GLdouble m[16];
       glMatrixMode(GL_MODELVIEW);
-      glGetDoublev(GL_MODELVIEW_MATRIX, modelview);
+      glGetDoublev(GL_MODELVIEW_MATRIX, m);
       glMatrixMode(GL_TEXTURE);
       glLoadIdentity();
       glTranslatef(0, 599, 0);
       glScalef(1, -1, 1);
-      glMultMatrixd(modelview);
+      glMultMatrixd(m);
 
-      //glLoadMatrixd(modelview);
+      //glLoadMatrixd(m);
     }
 
     int count = int(radius);
@@ -77,7 +77,7 @@
     state.bind_texture(screen_texture, 0);
     state.activate();
 
-    float radius = static_cast<float>(count)*2.0f + 20.0f; // enlarge radius by 20.0f to handle texture displacement 
+    float rad = static_cast<float>(count)*2.0f + 20.0f; // enlarge radius by 20.0f to handle texture displacement 
     float minradius = 2.0f * static_cast<float>(count) - 164.0f;
     if (minradius < 0)
       minradius = 0;
@@ -91,11 +91,11 @@
       {
         float angel = 2.0f * math::pi / static_cast<float>(segments);
 
-        float x1 =  sinf(angel*static_cast<float>(i))*radius;
-        float y1 = -cosf(angel*static_cast<float>(i))*radius;
+        float x1 =  sinf(angel*static_cast<float>(i))*rad;
+        float y1 = -cosf(angel*static_cast<float>(i))*rad;
 
-        float x2 =  sinf(angel*(static_cast<float>(i)+1))*radius;
-        float y2 = -cosf(angel*(static_cast<float>(i)+1))*radius;
+        float x2 =  sinf(angel*(static_cast<float>(i)+1))*rad;
+        float y2 = -cosf(angel*(static_cast<float>(i)+1))*rad;
 
         glTexCoord2f(x1+256, (y1+256));
         glVertex3f(x1+256, y1+256, 0);
@@ -173,7 +173,7 @@
 
   void draw_disc(int count)
   {
-    float radius = static_cast<float>(count)*2.0f;
+    float rad = static_cast<float>(count)*2.0f;
     float minradius = 2.0f * static_cast<float>(count) - 164.0f;
     if (minradius < 0)
       minradius = 0;
@@ -185,11 +185,11 @@
       {
         float angel = 2.0f * math::pi / static_cast<float>(segments);
 
-        float x1 =  sinf(angel*static_cast<float>(i))*radius;
-        float y1 = -cosf(angel*static_cast<float>(i))*radius;
+        float x1 =  sinf(angel*static_cast<float>(i))*rad;
+        float y1 = -cosf(angel*static_cast<float>(i))*rad;
 
-        float x2 =  sinf(angel*(static_cast<float>(i)+1))*radius;
-        float y2 = -cosf(angel*(static_cast<float>(i)+1))*radius;
+        float x2 =  sinf(angel*(static_cast<float>(i)+1))*rad;
+        float y2 = -cosf(angel*(static_cast<float>(i)+1))*rad;
 
         glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
         glTexCoord2f(x1/512.0f+0.5f, y1/512.0f+0.5f);

Modified: trunk/windstille/src/objects/test_object.cpp
===================================================================
--- trunk/windstille/src/objects/test_object.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/objects/test_object.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -89,9 +89,9 @@
 }
 
 void
-TestObject::set_pos(const Vector2f& pos)
+TestObject::set_pos(const Vector2f& pos_)
 {
-  this->pos = pos;
+  pos = pos_;
 }
 
 void

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -33,10 +33,10 @@
   ParticleSystem&   psys;
   ShaderProgram&    shader_program;
 
-  DeformDrawerRequest(const Vector2f& pos_, float z_pos,  const Matrix& modelview_,
+  DeformDrawerRequest(const Vector2f& pos_, float z_pos_,  const Matrix& modelview_,
                       Framebuffer& framebuffer_, Surface& surface_, ParticleSystem& psys_,
                       ShaderProgram& shader_program_)
-    : DrawingRequest(pos_, z_pos, modelview_),
+    : DrawingRequest(pos_, z_pos_, modelview_),
       framebuffer(framebuffer_), surface(surface_), psys(psys_), 
       shader_program(shader_program_)
   {}

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -83,10 +83,6 @@
   if (props.get("size", p_size))
     set_size(p_size.x, p_size.y);
 
-  Vector2f p_aspect;
-  if (props.get("aspect", p_aspect))
-    set_aspect(p_aspect.x, p_aspect.y);
-
   props.get("color-begin", color_start);
   props.get("color-end",   color_stop);
   
@@ -389,20 +385,13 @@
 }
 
 void
-ParticleSystem::set_aspect(float from, float to)
+ParticleSystem::set_color(const Color& color_start_, const Color& color_end_)
 {
-  (void) from;
-  (void) to;
+  color_start = color_start_;
+  color_stop  = color_end_;
 }
 
 void
-ParticleSystem::set_color(const Color& start, const Color& end)
-{
-  color_start = start;
-  color_stop  = end;
-}
-
-void
 ParticleSystem::set_fade_color(const Color& color)
 {
   color_stop = color;

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -159,9 +159,6 @@
       along their lifetime */
   void set_size  (float from, float to);
 
-  /** set the aspect ratio from which they will start and end */
-  void set_aspect(float from, float to);
-
   /** Set the color at which the particles will start */
   void set_color(const Color& start, const Color& end);
 

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -76,16 +76,16 @@
 }
   
 void
-SurfaceDrawer::set_texture(Surface surface)
+SurfaceDrawer::set_texture(Surface surface_)
 {
-  this->surface = surface;
+  surface = surface_;
 }
 
 void
-SurfaceDrawer::set_blendfuncs(GLenum blendfunc_src, GLenum blendfunc_dest)
+SurfaceDrawer::set_blendfuncs(GLenum blendfunc_src_, GLenum blendfunc_dest_)
 {
-  this->blendfunc_src  = blendfunc_src;
-  this->blendfunc_dest = blendfunc_dest;
+  blendfunc_src  = blendfunc_src_;
+  blendfunc_dest = blendfunc_dest_;
 }
 
 void

Modified: trunk/windstille/src/physfs/physfs_stream.cpp
===================================================================
--- trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/physfs/physfs_stream.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -126,13 +126,14 @@
         return 0;
 
     size_t size = pptr() - pbase();
+
     PHYSFS_sint64 res = PHYSFS_write(file, pbase(), 1, size);
     if(res <= 0)
-        return traits_type::eof();
-    
+      return traits_type::eof();
+
     if(c != traits_type::eof()) {
-        PHYSFS_sint64 res = PHYSFS_write(file, &c, 1, 1);
-        if(res <= 0)
+        PHYSFS_sint64 r = PHYSFS_write(file, &c, 1, 1);
+        if(r <= 0)
             return traits_type::eof();
     }
 

Modified: trunk/windstille/src/properties/property.hpp
===================================================================
--- trunk/windstille/src/properties/property.hpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/properties/property.hpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -50,8 +50,8 @@
     float C::*float_value;
   } value;
 
-  PropertyImpl(Type type)
-    : Property(type),
+  PropertyImpl(Type type_)
+    : Property(type_),
       value()
   {}
 

Modified: trunk/windstille/src/properties/property_set.cpp
===================================================================
--- trunk/windstille/src/properties/property_set.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/properties/property_set.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -37,13 +37,13 @@
 }
   
 void
-PropertySet::add(const std::string& name, Property* property)
+PropertySet::add(const std::string& name_, Property* property)
 {
-  Property*& i = properties[name];
+  Property*& i = properties[name_];
   if (i)
     {
       std::ostringstream str;
-      str << "PropertySet::add: Name conflict: '" << name << "' already used";
+      str << "PropertySet::add: Name conflict: '" << name_ << "' already used";
       throw std::runtime_error(str.str());
     }
   else
@@ -53,13 +53,13 @@
 }
 
 Property*
-PropertySet::get(const std::string& name) const
+PropertySet::get(const std::string& name_) const
 {
-  std::map<std::string, Property*>::const_iterator i = properties.find(name);
+  std::map<std::string, Property*>::const_iterator i = properties.find(name_);
   if (i == properties.end())
     {
       if (parent)
-        return parent->get(name);
+        return parent->get(name_);
       else
         return 0;
     }

Modified: trunk/windstille/src/properties/property_set.hpp
===================================================================
--- trunk/windstille/src/properties/property_set.hpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/properties/property_set.hpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -40,18 +40,18 @@
   void add(const std::string& name, Property* property);
 
   template<class C>
-  void add_int(const std::string& name, bool C::*ptr)
+  void add_int(const std::string& name_, bool C::*ptr)
   { 
-    add(name, PropertyImpl<C>::create_int(ptr));
+    add(name_, PropertyImpl<C>::create_int(ptr));
   }
 
   template<class C>
-  void add_bool(const std::string& name, bool C::*ptr)
+  void add_bool(const std::string& name_, bool C::*ptr)
   { 
-    add(name, PropertyImpl<C>::create_bool(ptr));
+    add(name_, PropertyImpl<C>::create_bool(ptr));
   }
 
-  Property* get(const std::string& name) const;
+  Property* get(const std::string& name_) const;
 
   void get_properties(std::vector<std::string>& lst) const;
 

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -139,30 +139,30 @@
         {
           Sprite small = sprite;
           small.set_alpha(1.0f);
-          float width  = small.get_width();
-          float height = small.get_height();
-          float scale;
-          if (width > height)
+          float w  = small.get_width();
+          float h = small.get_height();
+          float s;
+          if (w > h)
             {
-              scale = 125.0f / width;
+              s = 125.0f / w;
 
-              width  *= scale;
-              height *= scale;
-              small.set_scale(scale);
+              w  *= s;
+              h *= s;
+              small.set_scale(s);
 
-              small.draw(Vector2f(DISPLAY_W - width,
-                                  DISPLAY_H - height));
+              small.draw(Vector2f(DISPLAY_W - w,
+                                  DISPLAY_H - h));
             }
           else
             {
-              scale = 125.0f / height;
+              s = 125.0f / h;
 
-              width  *= scale;
-              height *= scale;
-              small.set_scale(scale);
+              w  *= s;
+              h *= s;
+              small.set_scale(s);
 
-              small.draw(Vector2f(DISPLAY_W - width,
-                                DISPLAY_H - height));
+              small.draw(Vector2f(DISPLAY_W - w,
+                                DISPLAY_H - h));
             }
         }        
       break;
@@ -185,10 +185,10 @@
 
       if (aspect > 4.0/3.0)
         { // expand vertical
-          float scale = DISPLAY_H/height;
-          width  *= scale;
-          height *= scale;
-          sprite.set_scale(scale);
+          float s = DISPLAY_H/height;
+          width  *= s;
+          height *= s;
+          sprite.set_scale(s);
 
           if (offset - (width - DISPLAY_W) > 0)
             {
@@ -206,10 +206,10 @@
         }
       else
         { // expand horizontal
-          float scale = 800.0f/width;
-          width  *= scale;
-          height *= scale;
-          sprite.set_scale(scale);
+          float s = 800.0f/width;
+          width  *= s;
+          height *= s;
+          sprite.set_scale(s);
 
           if (offset - (height - DISPLAY_H) > 0)
             {
@@ -287,25 +287,25 @@
 }
 
 void
-Sprite2DView::prepare_sprite(Sprite& sprite)
+Sprite2DView::prepare_sprite(Sprite& sprite_)
 {
-  float width  = sprite.get_width();
-  float height = sprite.get_height();
-  float aspect = width/height;
+  float w = sprite_.get_width();
+  float h = sprite_.get_height();
+  float a = w/h;
 
-  if (aspect > 4.0/3.0)
+  if (a > 4.0/3.0)
     { // expand vertical
-      float scale = DISPLAY_H/height;
-      width  *= scale;
-      height *= scale;
-      sprite.set_scale(scale);
+      float s = DISPLAY_H/h;
+      w *= s;
+      h *= s;
+      sprite_.set_scale(s);
     }
   else
     { // expand horizontal
-      float scale = DISPLAY_W/width;
-      width  *= scale;
-      height *= scale;
-      sprite.set_scale(scale);
+      float s = DISPLAY_W/w;
+      w *= s;
+      h *= s;
+      sprite_.set_scale(s);
     }  
 }
 

Modified: trunk/windstille/src/scripting/squirrel_error.cpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -21,11 +21,11 @@
 
 namespace Scripting {
 
-SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message) throw()
+SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message_) throw()
   : message()
 {
   std::ostringstream msg;
-  msg << "Squirrel error: " << context << ": " << message << " (";
+  msg << "Squirrel error: " << context << ": " << message_ << " (";
   const char* lasterr;
   sq_getlasterror(v);
   if(sq_gettype(v, -1) != OT_STRING)
@@ -38,14 +38,14 @@
   }
   sq_pop(v, 1);
   msg << lasterr << ")";
-  this->message = msg.str();
+  message = msg.str();
 }
 
-SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& message) throw()
+SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& message_) throw()
   : message()
 {
   std::ostringstream msg;
-  msg << "Squirrel error: " << message << " (";
+  msg << "Squirrel error: " << message_ << " (";
   const char* lasterr;
   sq_getlasterror(v);
   if(sq_gettype(v, -1) != OT_STRING)
@@ -58,7 +58,7 @@
   }
   sq_pop(v, 1);
   msg << lasterr << ")";
-  this->message = msg.str();
+  message = msg.str();
 }
 
 SquirrelError::~SquirrelError() throw()

Modified: trunk/windstille/src/sprite2d/sprite.cpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/sprite2d/sprite.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -29,7 +29,6 @@
     current_action(0),
     frame(0),
     speed(0),
-    alpha(0),
     pingpong(),
     reverse(),
     vflip(),
@@ -45,7 +44,6 @@
     current_action(0),
     frame(0),
     speed(0),
-    alpha(0),
     pingpong(),
     reverse(),
     vflip(),
@@ -62,7 +60,6 @@
   speed    = 1.0;
   pingpong = false;
   reverse  = false;
-  alpha    = 0.0;
   scale = current_action->scale;
   color    = Color(1.0f, 1.0f, 1.0f);
   blend_sfactor = GL_SRC_ALPHA;
@@ -74,7 +71,6 @@
     current_action(0),
     frame(0),
     speed(0),
-    alpha(0),
     pingpong(),
     reverse(),
     vflip(),
@@ -89,7 +85,6 @@
   speed = 1.0;
   pingpong = false;
   reverse = false;
-  alpha = 0.0;
   scale = current_action->scale;
   color    = Color(1.0f, 1.0f, 1.0f);
   blend_sfactor = GL_SRC_ALPHA;
@@ -101,7 +96,6 @@
     current_action(rhs.current_action),
     frame(rhs.frame),
     speed(rhs.speed),
-    alpha(rhs.alpha),
     pingpong(rhs.pingpong),
     reverse(rhs.reverse),
     vflip(rhs.vflip),
@@ -121,7 +115,6 @@
     current_action = rhs.current_action;
     frame          = rhs.frame;
     speed          = rhs.speed;
-    alpha          = rhs.alpha;
     pingpong       = rhs.pingpong;
     reverse        = rhs.reverse;
     vflip          = rhs.vflip;
@@ -164,7 +157,6 @@
           speed    = 1.0;
           frame    = 0;
           vflip    = false;
-          alpha    = 0.0;
           scale    = current_action->scale;
           color    = Color(1.0f, 1.0f, 1.0f);
           blend_sfactor = GL_SRC_ALPHA;
@@ -230,7 +222,7 @@
 float
 Sprite::get_alpha() const
 {
-  return alpha;
+  return color.a;
 }
 
 Surface
@@ -248,8 +240,6 @@
 void
 Sprite::draw(const Vector2f& pos) const
 {
-  // FIXME: Sprite needs to get a whole list with possible parameters
-  // (color, blendfunc, ...), not just alpha
   Surface surface = current_action->surfaces[ static_cast<int> (frame) ];
   surface.draw(SurfaceDrawingParameters()
                .set_pos(pos + (current_action->offset * scale))

Modified: trunk/windstille/src/sprite2d/sprite.hpp
===================================================================
--- trunk/windstille/src/sprite2d/sprite.hpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/sprite2d/sprite.hpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -41,7 +41,6 @@
 
   float frame;
   float speed;
-  float alpha;
 
   bool   pingpong;
   bool   reverse;

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-25 12:19:46 UTC (rev 3068)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-25 13:43:24 UTC (rev 3069)
@@ -280,9 +280,9 @@
   const Sprite3D* sprite;
 
 public:
-  Sprite3DDrawingRequest(const Sprite3D* sprite, 
+  Sprite3DDrawingRequest(const Sprite3D* sprite_, 
                          const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite)
+    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite_)
   {}
 
   void draw(const Texture& /*tmp_texture*/)



From grumbel at mail.berlios.de  Tue Aug 25 17:03:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 17:03:51 +0200
Subject: [Windstille-commit] r3070 - in trunk/windstille: . src/editor
Message-ID: <200908251503.n7PF3p46019474@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 17:03:51 +0200 (Tue, 25 Aug 2009)
New Revision: 3070

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/main.cpp
Log:
Added basic command line parsing to the editor

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-25 13:43:24 UTC (rev 3069)
+++ trunk/windstille/TODO	2009-08-25 15:03:51 UTC (rev 3070)
@@ -548,8 +548,6 @@
 Editor
 ======
 
-* add some command  line options to the editor (--datadir, --userdir, etc.)
-
 * Fix screenshot support (very crashy/buggy on different screensizes and stuff (padding error?))
 
 * unify delete/remove/erase a bit

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-08-25 13:43:24 UTC (rev 3069)
+++ trunk/windstille/src/editor/main.cpp	2009-08-25 15:03:51 UTC (rev 3070)
@@ -27,6 +27,7 @@
 #include <physfs.h>
 
 #include "util/system.hpp"
+#include "util/command_line.hpp"
 #include "sprite2d/manager.hpp"
 #include "display/texture_manager.hpp"
 #include "editor/editor_window.hpp"
@@ -36,64 +37,95 @@
 WindstilleEditor::main(int argc, char** argv)
 {
   try 
+  {
+    std::string datadir;
+    std::vector<std::string> rest_args;
+    
+    CommandLine argp;
+    argp.set_help_indent(24);
+    argp.add_usage ("[LEVELFILE]");
+    argp.add_doc   ("Windstille Level Editor");
+    argp.add_option('h', "help",       "", "Print this help");
+    argp.add_option('d', "datadir", "DIR", "Fetch game data from DIR");
+    
+    argp.parse_args(argc, argv);
+
+    while (argp.next())
     {
-      Pathname::set_datadir(System::find_default_datadir());
-      Pathname::set_userdir(System::find_default_userdir());
+      switch (argp.get_key())
+      {
+        case 'd':
+          datadir = argp.get_argument();
+          break;
 
-      Gtk::Main kit(&argc, &argv);
-      Gtk::GL::init(&argc, &argv);
+        case 'h':
+          argp.print_help();
+          exit(EXIT_SUCCESS);
+          break;
 
-      if (!PHYSFS_init(argv[0]))
-        {
-          std::ostringstream msg;
-          msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
-          throw std::runtime_error(msg.str());
-        }
+        case CommandLine::REST_ARG:
+          rest_args.push_back(argp.get_argument());
+          break;
+      }
+    }
+    
+    Pathname::set_datadir(datadir.empty() ? System::find_default_datadir() : datadir);
+    Pathname::set_userdir(System::find_default_userdir());
+
+    Gtk::Main kit(&argc, &argv);
+    Gtk::GL::init(&argc, &argv);
+
+    if (!PHYSFS_init(argv[0]))
+    {
+      std::ostringstream msg;
+      msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
+      throw std::runtime_error(msg.str());
+    }
   
-      PHYSFS_addToSearchPath("data/", 0);
+    PHYSFS_addToSearchPath(Pathname::get_datadir().c_str(), 0);
       
-      Glib::RefPtr<const Gdk::GL::Config> 
-        glconfig = Gdk::GL::Config::create(/* FIXME: Using RGBA instead of RGB to make Display::save_screenshot work*/
-                                           Gdk::GL::MODE_RGBA | 
-                                           //Gdk::GL::MODE_DEPTH);
-                                           Gdk::GL::MODE_DOUBLE);
-      if (!glconfig)
-        {
-          throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
-        }
+    Glib::RefPtr<const Gdk::GL::Config> 
+      glconfig = Gdk::GL::Config::create(/* FIXME: Using RGBA instead of RGB to make Display::save_screenshot work*/
+        Gdk::GL::MODE_RGBA | 
+        //Gdk::GL::MODE_DEPTH);
+        Gdk::GL::MODE_DOUBLE);
+    if (!glconfig)
+    {
+      throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
+    }
 
-      SpriteManager  sprite2d_manager;
-      TextureManager texture_manager;
+    SpriteManager  sprite2d_manager;
+    TextureManager texture_manager;
 
-      Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
-      icon_theme->append_search_path("data/editor/");
+    Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
+    icon_theme->append_search_path("data/editor/");
       
-      EditorWindow window(glconfig);
-      window.show_all();
-      window.show_minimap(false);
+    EditorWindow window(glconfig);
+    window.show_all();
+    window.show_minimap(false);
 
-      if (argc == 1)
-        {
-          window.on_new();
-        }
-      else
-        {
-          for(int i = 1; i < argc; ++i)
-            {
-              window.load_file(argv[i]);
-            }
-        }
-      
-      Gtk::Main::run(window);
+    if (rest_args.empty())
+    {
+      window.on_new();
     }
-  catch(Glib::Exception& err)
+    else
     {
-      std::cout << "Glib::Exception: " << err.what() << std::endl;
+      for(std::vector<std::string>::iterator i = rest_args.begin(); i != rest_args.end(); ++i)
+      {
+        window.load_file(*i);
+      }
     }
+      
+    Gtk::Main::run(window);
+  }
+  catch(Glib::Exception& err)
+  {
+    std::cout << "Glib::Exception: " << err.what() << std::endl;
+  }
   catch(std::exception& err)
-    {
-      std::cout << "std::exception: " << err.what() << std::endl;
-    }
+  {
+    std::cout << "std::exception: " << err.what() << std::endl;
+  }
   return 0;
 }
 



From grumbel at mail.berlios.de  Tue Aug 25 23:00:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 25 Aug 2009 23:00:03 +0200
Subject: [Windstille-commit] r3071 - in trunk/windstille/src: display engine
	objects scenegraph sprite3d
Message-ID: <200908252100.n7PL03BD010385@sheep.berlios.de>

Author: grumbel
Date: 2009-08-25 23:00:01 +0200 (Tue, 25 Aug 2009)
New Revision: 3071

Added:
   trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
   trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp
Modified:
   trunk/windstille/src/display/drawing_request.hpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
   trunk/windstille/src/scenegraph/scene_graph.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
Log:
Draw player via SceneGraph

Modified: trunk/windstille/src/display/drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/drawing_request.hpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/display/drawing_request.hpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -24,14 +24,12 @@
 #include "math/matrix.hpp"
 #include "display/texture.hpp"
 
-/** 
- */
 class DrawingRequest
 {
 protected:
-  Vector2f  pos;
-  float   z_pos;
-  Matrix  modelview;
+  Vector2f pos;
+  float    z_pos;
+  Matrix   modelview;
 
 public:
   DrawingRequest(const Vector2f& pos_, float z_pos_ = 0,  const Matrix& modelview_ = Matrix::identity())

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -415,7 +415,7 @@
   if (impl->render_mask & HIGHLIGHTMAP)
     {
       impl->highlight.render(*this);
-    }  
+    }
 
   if (impl->render_mask & CONTROLMAP)
     impl->control.render(*this);
@@ -424,8 +424,7 @@
   impl->color.clear();
   impl->light.clear();
   impl->highlight.clear();
-  impl->control.clear();
-  
+  impl->control.clear(); 
 }
 
 void

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -39,6 +39,7 @@
 #include "objects/scriptable_object.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "scenegraph/scene_graph.hpp"
+#include "scenegraph/scene_graph_drawing_request.hpp"
 #include "engine/squirrel_thread.hpp"
 
 Sector::Sector(const Pathname& arg_filename)
@@ -193,6 +194,8 @@
       if ((*i)->is_active())
         (*i)->draw(sc);
     }
+
+  sc.color().draw(new SceneGraphDrawingRequest(*scene_graph, sc.color().get_modelview()));
 }
 
 void Sector::commit_adds()

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -104,6 +104,7 @@
   void add_object(FileReader& reader);
 
   CollisionEngine* get_collision_engine() const { return collision_engine.get(); }
+  SceneGraph& get_scene_graph() const { return *scene_graph; }
 
   GameObject* get_object(const std::string& name) const;
 

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/objects/player.cpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -29,6 +29,8 @@
 #include "screen/game_session.hpp"
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"
+#include "scenegraph/scene_graph.hpp"
+#include "sprite3d/sprite3d_drawing_request.hpp"
 
 static const int MAX_ENERGY = 16;
 static const float WALK_SPEED = 100.0;
@@ -36,6 +38,7 @@
 
 Player::Player () 
   : sprite(),
+    m_drawable(),
     jumping(),
     bomb_placed(),
     hit_count(),
@@ -75,6 +78,9 @@
   contact = 0;
   weapon.reset(new Pistol());
   laser_pointer = ((Pistol*)weapon.get())->laser_pointer;
+
+  m_drawable.reset(new Sprite3DDrawingRequest(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
+  Sector::current()->get_scene_graph().add_drawable(m_drawable);
 }
 
 Player::~Player()
@@ -228,6 +234,8 @@
   c_object->set_velocity (velocity);
 
   pos = c_object->get_pos();
+
+  m_drawable->set_pos(pos + Vector2f(10,10));
 }
 
 void

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/objects/player.hpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -35,12 +35,15 @@
 class CollisionObject;
 class CollisionData;
 class Weapon;
+class Sprite3DDrawingRequest;
 
 class Player : public Entity,
                public Currenton<Player>
 {
 private:
   Sprite3D sprite;
+
+  boost::shared_ptr<Sprite3DDrawingRequest> m_drawable;
   //std::auto_ptr<SoundSource> sound_source;
 
   bool jumping;

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -18,8 +18,32 @@
 
 #include "scenegraph/scene_graph.hpp"
 
+#include "display/drawing_request.hpp"
+
 SceneGraph::SceneGraph()
+  : m_drawing_requests()
 {
 }
 
+void
+SceneGraph::add_drawable(boost::shared_ptr<DrawingRequest> drawable)
+{
+  m_drawing_requests.push_back(drawable);
+}
+
+void
+SceneGraph::remove_drawable(boost::shared_ptr<DrawingRequest> /*drawable*/)
+{
+  // FIXME: implement me
+}
+
+void
+SceneGraph::draw(const Texture& tmp_texture)
+{
+  for(DrawingRequests::iterator i = m_drawing_requests.begin(); i != m_drawing_requests.end(); ++i)
+  {
+    (*i)->draw(tmp_texture);
+  }
+}
+
 /* EOF */

Modified: trunk/windstille/src/scenegraph/scene_graph.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -20,18 +20,25 @@
 #define HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_HPP
 
 #include <boost/shared_ptr.hpp>
+#include <vector>
 
 class DrawingRequest;
+class Texture;
 
 class SceneGraph
 {
 private:
+  typedef std::vector<boost::shared_ptr<DrawingRequest> > DrawingRequests;
+  DrawingRequests m_drawing_requests;
+
 public:
   SceneGraph();
 
   void add_drawable(boost::shared_ptr<DrawingRequest> drawable);
   void remove_drawable(boost::shared_ptr<DrawingRequest> drawable);
 
+  void draw(const Texture& tmp_texture);
+
 private:
   SceneGraph(const SceneGraph&);
   SceneGraph& operator=(const SceneGraph&);

Added: trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -0,0 +1,49 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_SCENE_GRAPH_DRAWING_REQUEST_HPP
+#define HEADER_SCENE_GRAPH_DRAWING_REQUEST_HPP
+
+#include "scenegraph/scene_graph.hpp"
+#include "display/drawing_request.hpp"
+
+class SceneGraphDrawingRequest : public DrawingRequest
+{
+private:
+  SceneGraph& m_sg;
+
+public:
+  SceneGraphDrawingRequest(SceneGraph& sg, const Matrix& modelview_)
+    : DrawingRequest(Vector2f(), 1000, modelview_),
+      m_sg(sg)
+  {}
+
+  void draw(const Texture& tmp_texture)
+  {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    m_sg.draw(tmp_texture);
+
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -23,6 +23,7 @@
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "sprite3d/manager.hpp"
+#include "sprite3d/sprite3d_drawing_request.hpp"
 
 using namespace sprite3d;
 
@@ -274,27 +275,6 @@
   return result;
 }
 
-class Sprite3DDrawingRequest : public DrawingRequest
-{
-private:
-  const Sprite3D* sprite;
-
-public:
-  Sprite3DDrawingRequest(const Sprite3D* sprite_, 
-                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite_)
-  {}
-
-  void draw(const Texture& /*tmp_texture*/)
-  {
-    sprite->draw(pos, modelview);
-  }
-
-private:
-  Sprite3DDrawingRequest(const Sprite3DDrawingRequest&);
-  Sprite3DDrawingRequest& operator=(const Sprite3DDrawingRequest&);
-};
-
 void
 Sprite3D::set_next_frame()
 {

Added: trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp	2009-08-25 15:03:51 UTC (rev 3070)
+++ trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp	2009-08-25 21:00:01 UTC (rev 3071)
@@ -0,0 +1,53 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+
+#include "sprite3d/sprite3d.hpp"
+#include "display/drawing_request.hpp"
+
+class Sprite3DDrawingRequest : public DrawingRequest
+{
+private:
+  const Sprite3D* sprite;
+
+public:
+  Sprite3DDrawingRequest(const Sprite3D* sprite_, 
+                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite_)
+  {}
+
+  void draw(const Texture& /*tmp_texture*/)
+  {
+    sprite->draw(pos, modelview);
+  }
+
+  void set_pos(const Vector2f& pos_)
+  {
+    pos = pos_;
+  }
+
+private:
+  Sprite3DDrawingRequest(const Sprite3DDrawingRequest&);
+  Sprite3DDrawingRequest& operator=(const Sprite3DDrawingRequest&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Wed Aug 26 01:42:00 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 01:42:00 +0200
Subject: [Windstille-commit] r3072 - trunk/windstille/src/objects
Message-ID: <200908252342.n7PNg0JQ009461@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 01:41:59 +0200 (Wed, 26 Aug 2009)
New Revision: 3072

Modified:
   trunk/windstille/src/objects/player.cpp
Log:
Disabled non-scenegraph player

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-25 21:00:01 UTC (rev 3071)
+++ trunk/windstille/src/objects/player.cpp	2009-08-25 23:41:59 UTC (rev 3072)
@@ -97,7 +97,7 @@
                                Color(1.0f, 0.0f, 0.0f, 0.5f), 10000.0f);
     }
 
-  sprite.draw(sc.color(), pos + Vector2f(0.0f, 1.0f), z_pos);
+  //sprite.draw(sc.color(), pos + Vector2f(0.0f, 1.0f), z_pos);
 
   Entity* obj = find_useable_entity();
   if (obj)
@@ -235,7 +235,7 @@
 
   pos = c_object->get_pos();
 
-  m_drawable->set_pos(pos + Vector2f(10,10));
+  m_drawable->set_pos(pos);
 }
 
 void



From grumbel at mail.berlios.de  Wed Aug 26 16:08:52 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 16:08:52 +0200
Subject: [Windstille-commit] r3073 - in trunk/windstille: . src/util
Message-ID: <200908261408.n7QE8qAQ001738@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 16:08:52 +0200 (Wed, 26 Aug 2009)
New Revision: 3073

Modified:
   trunk/windstille/SConscript
   trunk/windstille/src/util/pathname.cpp
   trunk/windstille/src/util/pathname.hpp
Log:
Added a few more functions to Pathname along with a test case

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-25 23:41:59 UTC (rev 3072)
+++ trunk/windstille/SConscript	2009-08-26 14:08:52 UTC (rev 3073)
@@ -33,9 +33,9 @@
     "-Weffc++",
     "-Wconversion",
     "-Werror",
-    #"-Wshadow",
+    "-Wshadow",
+    "-Winline",
     #"-Wunreachable-code",
-    #"-Winline",
     ]
 
 # YACC
@@ -321,6 +321,7 @@
         env.Program("test_babyxml", ["src/util/baby_xml.cpp"])
         env.Program("test_response_curve", ["src/util/response_curve.cpp"])
         env.Program("test_random", ["src/math/random.cpp"])
+        env.Program("test_pathname", ["src/util/pathname.cpp"], LIBS=['boost_filesystem-mt'])
 
     def build_windstille_data(self):
         data_env = self.env.Clone()

Modified: trunk/windstille/src/util/pathname.cpp
===================================================================
--- trunk/windstille/src/util/pathname.cpp	2009-08-25 23:41:59 UTC (rev 3072)
+++ trunk/windstille/src/util/pathname.cpp	2009-08-26 14:08:52 UTC (rev 3073)
@@ -193,6 +193,65 @@
     m_type < rhs.m_type;
 }
 
+Pathname
+Pathname::get_dirname() const
+{
+  std::string::size_type i = m_path.rfind('/');
+  if (i == std::string::npos)
+  {
+    return Pathname("", m_type);
+  }
+  else
+  {
+    return Pathname(m_path.substr(0, i+1), m_type);
+  }
+}
+
+Pathname
+Pathname::get_basename() const
+{
+  std::string::size_type i = m_path.rfind('/');
+  if (i == std::string::npos)
+  {
+    return *this;
+  }
+  else
+  {
+    return Pathname(m_path.substr(i+1), m_type);
+  }
+}
+
+Pathname&
+Pathname::append_text(const std::string& path)
+{
+  m_path += path;
+  return *this;
+}
+
+Pathname&
+Pathname::append_path(const std::string& path)
+{
+  if ( !m_path.empty() && m_path[m_path.size()-1] != '/' )
+  {
+    m_path += '/';
+    m_path += path;
+  }
+  else
+  {
+    m_path += path;
+  }
+
+  return *this;
+}
+
+bool
+Pathname::operator==(const Pathname& rhs) const
+{
+  return
+    m_path == rhs.m_path && 
+    m_type == rhs.m_type;
+}
+
 std::ostream& operator<<(std::ostream& s, const Pathname& path)
 {
   switch(path.get_type())
@@ -215,4 +274,29 @@
   }
 }
 
+#ifdef __TEST__
+#include <iostream>
+
+int main(int argc, char** argv)
+{
+  if (argc == 1)
+  {
+    
+  }
+  else
+  {
+    for(int i = 1; i < argc; ++i)
+    {
+      Pathname pathname(argv[i], Pathname::kSysPath);
+      std::cout << "syspath: " << pathname.get_sys_path() << std::endl;
+      std::cout << "basename: " << pathname.get_basename() << std::endl;
+      std::cout << "dirname:  " << pathname.get_dirname() << std::endl;
+      std::cout << std::endl;
+    }
+  }
+
+  return 0;
+}
+#endif
+
 /* EOF */

Modified: trunk/windstille/src/util/pathname.hpp
===================================================================
--- trunk/windstille/src/util/pathname.hpp	2009-08-25 23:41:59 UTC (rev 3072)
+++ trunk/windstille/src/util/pathname.hpp	2009-08-26 14:08:52 UTC (rev 3073)
@@ -96,6 +96,16 @@
 
   bool exists() const;
 
+  Pathname get_dirname() const;
+  Pathname get_basename() const;
+  
+  /** Appends the given path segment to Pathname, adding a '/'
+   *  inbetween when needed */
+  Pathname& append_path(const std::string& path);
+
+  /** Appends text to the end of the path, not adding a '/' inbetween */
+  Pathname& append_text(const std::string& path);
+
   /**
    *  Convert the given path and type to a string that points to the
    *  native filesystem path and which can be used in fopen(),
@@ -116,6 +126,8 @@
 
   bool operator<(const Pathname& rhs) const;
 
+  bool operator==(const Pathname& rhs) const;
+
 private:
   std::string m_path;
   PathType    m_type;



From grumbel at mail.berlios.de  Wed Aug 26 16:20:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 16:20:45 +0200
Subject: [Windstille-commit] r3074 - trunk/windstille
Message-ID: <200908261420.n7QEKjBg002927@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 16:20:43 +0200 (Wed, 26 Aug 2009)
New Revision: 3074

Modified:
   trunk/windstille/SConscript
Log:
Fixed a few issues with ordering

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-26 14:08:52 UTC (rev 3073)
+++ trunk/windstille/SConscript	2009-08-26 14:20:43 UTC (rev 3074)
@@ -122,8 +122,11 @@
             }        
 
     def build_all(self):
+        self.env = Environment()
+
         if not GetOption('clean'):
             self.configure()
+        
         self.build_squirrel()
         self.build_miniswig()
         self.build_binreloc()
@@ -134,8 +137,6 @@
         self.build_testapps()
         
     def configure(self):
-        self.env = Environment()
-
         # FIXME: None of the options are used, as only self.features
         # makes it across function calls
         
@@ -261,8 +262,8 @@
         windstille_env = self.env.Clone()
         windstille_env.Append(CPPPATH=['src', '.', 'external/SQUIRREL2/include/', 'src/scripting/'],
                               CPPDEFINES=["HAVE_BINRELOC"],
-                              LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, self.physfs_lib,
-                                    self.util_lib, self.math_lib,
+                              LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, 
+                                    self.util_lib, self.math_lib, self.physfs_lib,
                                     self.binreloc_lib, self.squirrel_lib, 
                                     'GL', 'GLU', 'GLEW',
                                     'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',



From grumbel at mail.berlios.de  Wed Aug 26 16:21:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 16:21:19 +0200
Subject: [Windstille-commit] r3075 - trunk/windstille/src/display
Message-ID: <200908261421.n7QELJLO002968@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 16:21:18 +0200 (Wed, 26 Aug 2009)
New Revision: 3075

Modified:
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.hpp
Log:
Added clean() to VertexArrayDrawingRequest

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-26 14:20:43 UTC (rev 3074)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-26 14:21:18 UTC (rev 3075)
@@ -39,6 +39,14 @@
 }
 
 void
+VertexArrayDrawingRequest::clear()
+{
+  colors.clear();
+  texcoords.clear();
+  vertices.clear();
+}
+
+void
 VertexArrayDrawingRequest::draw(const Texture& /*tmp_texture*/)
 {
   draw(0, num_vertices());

Modified: trunk/windstille/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-26 14:20:43 UTC (rev 3074)
+++ trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-26 14:21:18 UTC (rev 3075)
@@ -59,6 +59,8 @@
 
   int num_vertices() const;
 
+  void clear();
+
   void set_mode(GLenum mode_);
   void set_texture(Texture texture);
   void set_blend_func(GLenum sfactor, GLenum dfactor);



From grumbel at mail.berlios.de  Wed Aug 26 16:28:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 16:28:22 +0200
Subject: [Windstille-commit] r3076 - in trunk/windstille/src: app engine
	font objects screen scripting sprite2d sprite3d
Message-ID: <200908261428.n7QESMXV003502@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 16:28:19 +0200 (Wed, 26 Aug 2009)
New Revision: 3076

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/screen/view.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/squirrel_error.cpp
   trunk/windstille/src/scripting/squirrel_error.hpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite2d/data.hpp
   trunk/windstille/src/sprite3d/data.cpp
Log:
Added some more Pathname usage

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -156,7 +156,7 @@
   SoundManager::current()->enable_sound(config.get_bool("sound"));
   SoundManager::current()->enable_music(config.get_bool("music"));
 
-  ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
+  ScriptManager::current()->run_script_file(Pathname("scripts/windstille.nut"), true);
     
   {     
     if (config.get<std::string>("primary-controller-file").is_set())

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -23,6 +23,7 @@
 #include <sqstdaux.h>
 #include <sqstdmath.h>
 #include <sqstdstring.h>
+#include <fstream>
 
 #include "engine/squirrel_thread.hpp"
 #include "app/console.hpp"
@@ -128,16 +129,16 @@
 }
 
 boost::shared_ptr<SquirrelThread>
-ScriptManager::run_script_file(const std::string& filename, bool global)
+ScriptManager::run_script_file(const Pathname& filename, bool global)
 {
-  IFileStream in(filename);
+  std::ifstream in(filename.get_sys_path().c_str());
 
   if (global)
     {
       // Scripts run in the global namespace must not suspend
 
       // Compile the script and push it on the stack
-      if(sq_compile(vm, squirrel_read_char, &in, filename.c_str(), true) < 0)
+      if (sq_compile(vm, squirrel_read_char, &in, filename.get_sys_path().c_str(), true) < 0)
         throw SquirrelError(vm, "Couldn't parse script");
 
       // Set 'this' environment
@@ -146,7 +147,9 @@
       // Execute the script
       if (SQ_FAILED(sq_call(vm, 1, false, true)))
         {
-          throw SquirrelError(vm, "SquirrelThread::run(): " + filename + ": Couldn't start script");
+          std::ostringstream str;
+          str << "SquirrelThread::run(): " << filename << ": Couldn't start script";
+          throw SquirrelError(vm, str.str());
         }
       else
         {
@@ -154,7 +157,9 @@
 
           if (sq_getvmstate(vm) != SQ_VMSTATE_IDLE)
             {
-              throw std::runtime_error("ScriptManager::run_script(): '" + filename + "': global scripts must not suspend");
+              std::ostringstream str;
+              str << "ScriptManager::run_script(): '" << filename << "': global scripts must not suspend";
+              throw std::runtime_error(str.str());
             }
 
           return boost::shared_ptr<SquirrelThread>();
@@ -184,7 +189,9 @@
             }
           else
             {
-              throw std::runtime_error(filename + ": ScriptManager::run_script(): Script must be idle to be 'run()'");
+              std::ostringstream str;
+              str << filename << ": ScriptManager::run_script(): Script must be idle to be 'run()'";
+              throw std::runtime_error(str.str());
             }
         }
       else

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -35,6 +35,7 @@
 
 class SquirrelThread;
 class GameObject;
+class Pathname;
 
 /**
  * This class is responsible for managing all running squirrel threads
@@ -85,7 +86,7 @@
   void update();
 
   /** Load script from \a filename and runs it */
-  boost::shared_ptr<SquirrelThread> run_script_file(const std::string& filename, bool global = false);
+  boost::shared_ptr<SquirrelThread> run_script_file(const Pathname& filename, bool global = false);
   boost::shared_ptr<SquirrelThread> create_script(HSQUIRRELVM parent_vm, bool isolated);
 
   HSQUIRRELVM get_vm() const { return vm; }

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -180,7 +180,9 @@
 
   if (!init_script.empty())
     {
-      vm = ScriptManager::current()->run_script_file(get_directory() + init_script);
+      Pathname path = get_directory();
+      path.append_path(init_script);
+      vm = ScriptManager::current()->run_script_file(path);
     }
 }
 
@@ -306,13 +308,10 @@
   return filename;
 }
 
-std::string
+Pathname
 Sector::get_directory() const
 {
-  // FIXME: Not pretty
-  std::string directory = filename.get_physfs_path();
-  directory.erase(directory.rfind('/')+1);
-  return directory;
+  return filename.get_dirname();
 }
 
 void

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -80,7 +80,7 @@
   ~Sector();
 
   Pathname get_filename() const;
-  std::string get_directory() const;
+  Pathname get_directory() const;
 
   void draw(SceneContext& gc);
   void update(float delta);

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -18,6 +18,8 @@
 
 #include "engine/squirrel_thread.hpp"
 
+#include <sstream>
+
 #include "app/globals.hpp"
 #include "scripting/squirrel_error.hpp"
 
@@ -109,14 +111,14 @@
 }
 
 void
-SquirrelThread::load(std::istream& in, const std::string& filename_)
+SquirrelThread::load(std::istream& in, const Pathname& filename_)
 {
   filename = filename_;
 
   oldtop = sq_gettop(thread);
 
   // compile the script and push it on the stack
-  if(SQ_FAILED(sq_compile(thread, squirrel_read_char, &in, filename.c_str(), SQTrue)))
+  if (SQ_FAILED(sq_compile(thread, squirrel_read_char, &in, filename.get_sys_path().c_str(), SQTrue)))
     {
       throw SquirrelError(thread, filename, "Couldn't parse script");
     }
@@ -133,8 +135,9 @@
         {
           if (sq_getvmstate(thread) != SQ_VMSTATE_IDLE)
             {
-              throw SquirrelError(thread, filename, "SquirrelThread::load(): Script '" + filename +
-                                  "' must not suspend outside of run call");
+              std::ostringstream str;
+              str << "SquirrelThread::load(): Script '" << filename << "' must not suspend outside of run call";
+              throw SquirrelError(thread, filename, str.str());
             }
           sq_pop(thread, 1); // pop the compiled closure
         }

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
 
 #include "engine/script_manager.hpp"
+#include "util/pathname.hpp"
 
 class SquirrelThread
 {
@@ -30,7 +31,7 @@
   HSQUIRRELVM thread;
   HSQOBJECT   thread_obj;
 
-  std::string filename;
+  Pathname filename;
   SQInteger oldtop;
     
   ScriptManager::WakeupData  waiting_for_events;
@@ -43,7 +44,7 @@
   ~SquirrelThread();
 
   /** Load a script into the new thread */
-  void load(std::istream& in, const std::string& filename);
+  void load(std::istream& in, const Pathname& filename);
 
   /** Load function at position \a idx into this SquirrelThread and
       execute it */
@@ -61,7 +62,7 @@
   bool is_suspended() const;
   bool is_idle() const;
 
-  std::string get_filename() const { return filename; }
+  Pathname get_filename() const { return filename; }
   HSQUIRRELVM get_thread() const { return thread; }
   void call(const std::string& function);
 

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -20,6 +20,7 @@
 #include <vector>
 #include <stdexcept>
 #include <sstream>
+#include <fstream>
 
 #include <ft2build.h>
 
@@ -70,7 +71,7 @@
 
   impl->size = size_;
 
-  IFileStream fin(filename.get_physfs_path());
+  std::ifstream fin(filename.get_sys_path().c_str(), std::ios::binary);
   std::istreambuf_iterator<char> first(fin), last;
   std::vector<char> buffer(first, last); 
 

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/objects/character.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -65,8 +65,12 @@
 {
   try 
   {
-    ScriptManager::current()->run_script_file(Sector::current()->get_directory() + name + ".nut");
-  } 
+    Pathname path = Sector::current()->get_directory();
+    path.append_path(name);
+    path.append_text(".nut");
+
+    ScriptManager::current()->run_script_file(path);
+  }
   catch (std::exception& e) 
   {
     ConsoleLog << e.what() << std::endl;

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -116,7 +116,9 @@
     {
       try 
         {
-          ScriptManager::current()->run_script_file(Sector::current()->get_directory() + name + ".nut");
+          Pathname path = Sector::current()->get_directory();
+          path.append_path(name).append_text(".nut");
+          ScriptManager::current()->run_script_file(path);
         }
       catch (std::exception& e) 
         {

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -139,7 +139,7 @@
 void
 GameSessionImpl::draw()
 {
-  view.draw(sc);
+  view.draw(sc, *sector);
 
   // Render the scene to the screen
   sc.render();

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/screen/view.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -34,7 +34,7 @@
 }
 
 void
-View::draw (SceneContext& sc)
+View::draw(SceneContext& sc, Sector& sector)
 {
   if (camera.get_zoom() == 1.0)
     {
@@ -50,10 +50,10 @@
 
   state.push(sc);
 
-  Sector::current()->draw(sc);
+  sector.draw(sc);
 
   if (collision_debug)
-    Sector::current()->get_collision_engine()->draw(sc.highlight());
+    sector.get_collision_engine()->draw(sc.highlight());
 
   state.pop(sc);
 }

Modified: trunk/windstille/src/screen/view.hpp
===================================================================
--- trunk/windstille/src/screen/view.hpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/screen/view.hpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -49,7 +49,7 @@
   Rectf get_clip_rect();
   Vector2f screen_to_world(const Vector2f& point);
 
-  void draw(SceneContext& gc);
+  void draw(SceneContext& gc, Sector& sector);
   void update(float delta);
 };
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -381,7 +381,11 @@
 void spawn_script(const std::string& filename)
 {
   if (ScriptManager::current())
-    ScriptManager::current()->run_script_file(Sector::current()->get_directory() + filename);
+  {
+    Pathname path = Sector::current()->get_directory();
+    path.append_path(filename);
+    ScriptManager::current()->run_script_file(path);
+  }
 }
 
 SQInteger spawn_function(HSQUIRRELVM v)

Modified: trunk/windstille/src/scripting/squirrel_error.cpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/scripting/squirrel_error.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -17,10 +17,33 @@
 */
 
 #include "scripting/squirrel_error.hpp"
+
 #include <sstream>
 
+#include "util/pathname.hpp"
+
 namespace Scripting {
 
+SquirrelError::SquirrelError(HSQUIRRELVM v, const Pathname& path, const std::string& message_) throw()
+  : message()
+{
+  std::ostringstream msg;
+  msg << "Squirrel error: " << path << ": " << message_ << " (";
+  const char* lasterr;
+  sq_getlasterror(v);
+  if(sq_gettype(v, -1) != OT_STRING)
+  {
+    lasterr = "no error info";
+  }
+  else
+  {
+    sq_getstring(v, -1, &lasterr);
+  }
+  sq_pop(v, 1);
+  msg << lasterr << ")";
+  message = msg.str();
+}
+
 SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message_) throw()
   : message()
 {

Modified: trunk/windstille/src/scripting/squirrel_error.hpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.hpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/scripting/squirrel_error.hpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -22,6 +22,8 @@
 #include <squirrel.h>
 #include <stdexcept>
 
+class Pathname;
+
 namespace Scripting
 {
 
@@ -32,6 +34,7 @@
 class SquirrelError : public std::exception
 {
 public:
+  SquirrelError(HSQUIRRELVM v, const Pathname& path, const std::string& message) throw();
   SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message) throw();
   SquirrelError(HSQUIRRELVM v, const std::string& message) throw();
   virtual ~SquirrelError() throw();

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -40,8 +40,7 @@
         throw std::runtime_error(msg.str());
       }
     
-      std::string dir = dirname(pathname.get_physfs_path());
-      parse(dir, reader);
+      parse(pathname.get_dirname(), reader);
     }
     else if (ext == "png" || ext == "jpg")
     {
@@ -98,7 +97,7 @@
 }
 
 void
-SpriteData::parse(const std::string& dir, FileReader& reader)
+SpriteData::parse(const Pathname& dir, FileReader& reader)
 {
   std::vector<FileReader> sections = reader.get_sections();
   for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
@@ -109,7 +108,7 @@
 }
 
 SpriteAction*
-SpriteData::parse_action(const std::string& dir, FileReader& reader)
+SpriteData::parse_action(const Pathname& dir, FileReader& reader)
 {
   std::auto_ptr<SpriteAction> action (new SpriteAction);
   action->speed = 1.0;
@@ -129,7 +128,9 @@
 
       for(std::vector<std::string>::iterator file = image_files.begin(); file != image_files.end(); ++file)
         {
-          action->surfaces.push_back(SurfaceManager::current()->get(Pathname(dir + "/" + *file)));
+          Pathname path = dir;
+          path.append_path(*file);
+          action->surfaces.push_back(SurfaceManager::current()->get(path));
         }
     }
   else if(reader.get("image-grid", grid_reader)) 
@@ -145,8 +146,9 @@
       if(filename.empty() || x_size <= 0 || y_size <= 0)
         throw std::runtime_error("Invalid or too few data in image-grid");
       
-      SurfaceManager::current()->load_grid(Pathname(dir + "/" + filename),
-                                           action->surfaces, x_size, y_size);
+      Pathname path = dir;
+      path.append_path(filename);
+      SurfaceManager::current()->load_grid(path, action->surfaces, x_size, y_size);
     }
     
   if(action->name == "")

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -49,8 +49,8 @@
 class SpriteData
 {
 private:
-  void    parse(const std::string& dir, FileReader& lisp);
-  SpriteAction* parse_action(const std::string& dir, FileReader& reader);
+  void    parse(const Pathname& dir, FileReader& lisp);
+  SpriteAction* parse_action(const Pathname& dir, FileReader& reader);
 
 public:
   SpriteData(const Pathname& filename);

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-26 14:21:18 UTC (rev 3075)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-26 14:28:19 UTC (rev 3076)
@@ -114,7 +114,7 @@
       Mesh& mesh = *i;
 
       std::string texturename = read_string(file, 64);
-      texturename = dirname(filename.get_physfs_path()) + basename(texturename);
+      texturename = filename.get_dirname().get_physfs_path() + basename(texturename);
       mesh.triangle_count = read_uint16_t(file);
       mesh.vertex_count   = read_uint16_t(file);
 



From grumbel at mail.berlios.de  Wed Aug 26 16:29:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 16:29:23 +0200
Subject: [Windstille-commit] r3077 - trunk/windstille
Message-ID: <200908261429.n7QETNLq003600@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 16:29:23 +0200 (Wed, 26 Aug 2009)
New Revision: 3077

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-26 14:28:19 UTC (rev 3076)
+++ trunk/windstille/TODO	2009-08-26 14:29:23 UTC (rev 3077)
@@ -10,10 +10,20 @@
 in the context of the whole game or if a potential performance
 enhanchment, actually enhanchmes anything at all.
 
+SceneGraph
+==========
+
+* extract the scene composition from SceneContext and turn it into its
+  own class
+
+* write a object/decal.hpp class for use with the new level format
+
+* change the editor to use the SceneGraph instead of the SceneContext API
+
 Porting
 =======
 
-Microsoft compiler don't have inttypes.h, need to write a replacement header
+* Microsoft compiler don't have inttypes.h, need to write a replacement header
 
 Logging
 =======



From grumbel at mail.berlios.de  Wed Aug 26 16:58:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 16:58:41 +0200
Subject: [Windstille-commit] r3078 - in trunk/windstille/src: display editor
	screen
Message-ID: <200908261458.n7QEwf1N005062@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 16:58:40 +0200 (Wed, 26 Aug 2009)
New Revision: 3078

Added:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/compositor.hpp
Modified:
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/scene_context.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
   trunk/windstille/src/screen/sprite3dview.cpp
   trunk/windstille/src/screen/sprite3dview.hpp
Log:
Splitted rendering out from SceneContext into Compositor

Added: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -0,0 +1,310 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/compositor.hpp"
+
+#include <GL/glew.h>
+
+#include "display/display.hpp"
+#include "display/drawing_request.hpp"
+#include "display/framebuffer.hpp"
+#include "display/opengl_state.hpp"
+#include "display/scene_context.hpp"
+#include "display/surface.hpp"
+#include "math/rect.hpp"
+
+// The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
+#define LIGHTMAP_DIV 4
+#define BLURMAP_DIV  1
+
+struct CompositorImpl
+{
+  struct Framebuffers 
+  {
+    Framebuffer screen;
+    Framebuffer tmp;
+    Framebuffer lightmap;   
+
+    Framebuffers() 
+      : screen  (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
+        tmp     (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
+        lightmap(GL_TEXTURE_RECTANGLE_ARB, Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
+    {
+    }
+  };
+  
+  boost::scoped_ptr<Framebuffers> framebuffers;
+  Surface lightmap;
+
+  CompositorImpl()
+    : framebuffers(0),
+      //framebuffers(new Framebuffers()),
+      lightmap(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
+  {}
+};
+
+Compositor::Compositor()
+  : impl(new CompositorImpl())
+{
+}
+
+Compositor::~Compositor()
+{
+}
+
+void
+Compositor::render_lightmap(SceneContext& /*sc*/)
+{
+  Rectf uv(0, 0,
+           static_cast<float>(impl->framebuffers->lightmap.get_width()), 
+           static_cast<float>(impl->framebuffers->lightmap.get_height()));
+
+  OpenGLState state;
+
+  state.bind_texture(impl->framebuffers->lightmap.get_texture());
+      
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_DST_COLOR, GL_ZERO); // multiple the lightmap with the screen
+  state.activate();
+
+  glBegin(GL_QUADS);
+
+  glTexCoord2f(uv.left, uv.bottom);
+  glVertex2f(0, 0);
+
+  glTexCoord2f(uv.right, uv.bottom);
+  glVertex2f(static_cast<float>(impl->framebuffers->lightmap.get_width() * LIGHTMAP_DIV), 0.0f);
+
+  glTexCoord2f(uv.right, uv.top);
+  glVertex2f(static_cast<float>(impl->framebuffers->lightmap.get_width()  * LIGHTMAP_DIV),
+             static_cast<float>(impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV));
+
+  glTexCoord2f(uv.left, uv.top);
+  glVertex2f(0.0f, static_cast<float>(impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV));
+
+  glEnd();
+}
+
+void
+Compositor::render_with_framebuffers(SceneContext& sc)
+{
+  glClear(GL_DEPTH_BUFFER_BIT);
+      
+  if (sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN)
+  {
+    // Render the lightmap to the framebuffers->lightmap
+    Display::push_framebuffer(impl->framebuffers->lightmap);
+      
+    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+
+    glPushMatrix();
+    glTranslatef(0.0f, static_cast<float>(Display::get_height() - (Display::get_height() / LIGHTMAP_DIV)), 0.0f);
+    glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
+    sc.light().render(*this);
+    glPopMatrix();
+
+    Display::pop_framebuffer();
+  }
+
+  if (sc.get_render_mask() & SceneContext::COLORMAP)
+  {
+    // Render the colormap to the framebuffers->screen
+    Display::push_framebuffer(impl->framebuffers->screen);
+    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+    sc.color().render(*this);
+    Display::pop_framebuffer();
+  }
+
+  if (sc.get_render_mask() & SceneContext::LIGHTMAP)
+  { // Renders the lightmap to the screen
+    Display::push_framebuffer(impl->framebuffers->screen);
+    render_lightmap(sc);
+    Display::pop_framebuffer();
+  }
+
+  if (sc.get_render_mask() & SceneContext::HIGHLIGHTMAP)
+  {
+    Display::push_framebuffer(impl->framebuffers->screen);
+    sc.highlight().render(*this);
+    Display::pop_framebuffer();
+  }
+
+  if (sc.get_render_mask() & SceneContext::CONTROLMAP)
+    sc.control().render(*this);
+
+  if (1) 
+  {
+    // Render the screen framebuffer to the actual screen 
+    OpenGLState state;
+
+    Rectf uv(0.375f, 0.375f, 
+             static_cast<float>(impl->framebuffers->screen.get_width())  + 0.375f,
+             static_cast<float>(impl->framebuffers->screen.get_height()) + 0.375f);
+
+    if (sc.get_render_mask() & SceneContext::BLURMAP)
+      state.bind_texture(impl->framebuffers->screen.get_texture(), 0);
+    else
+      state.bind_texture(impl->framebuffers->tmp.get_texture(), 0);
+
+    state.activate();
+
+    glBegin(GL_QUADS);
+
+    glTexCoord2f(uv.left, uv.bottom);
+    glVertex2f(0, 0);
+
+    glTexCoord2f(uv.right, uv.bottom);
+    glVertex2f(static_cast<float>(Display::get_width()), 0);
+
+    glTexCoord2f(uv.right, uv.top);
+    glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
+
+    glTexCoord2f(uv.left, uv.top);
+    glVertex2f(0.0f, static_cast<float>(Display::get_height()));
+
+    glEnd();
+  }
+
+  // Clear all DrawingContexts
+  sc.color().clear();
+  sc.light().clear();
+  sc.highlight().clear();
+  sc.control().clear();
+}
+
+void
+Compositor::render_without_framebuffers(SceneContext& sc)
+{
+  // Resize Lightmap, only needed in the editor, FIXME: move this into a 'set_size()' call
+  if (impl->lightmap.get_width()  != Display::get_width()/LIGHTMAP_DIV ||
+      impl->lightmap.get_height() != Display::get_height()/LIGHTMAP_DIV)
+  {
+    impl->lightmap = Surface(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV);
+  }
+
+  if (sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN)
+  {
+    // Render the lightmap to the framebuffers->lightmap
+    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+
+    glPushMatrix();
+    glTranslatef(0.0f, static_cast<float>(Display::get_height()) - static_cast<float>(Display::get_height()/LIGHTMAP_DIV), 0.0f);
+    glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
+    sc.light().render(*this);
+    glPopMatrix();
+
+    { // Copy lightmap to a texture
+      OpenGLState state;
+        
+      // Weird y-pos is needed since OpenGL is upside down when it comes to y-coordinate
+      state.bind_texture(impl->lightmap.get_texture());
+      state.activate();
+
+      glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
+                          0, 0, 
+                          0, 0, //Display::get_height() - impl->lightmap.get_height(),
+                          static_cast<GLsizei>(impl->lightmap.get_width()), 
+                          static_cast<GLsizei>(impl->lightmap.get_height()));
+    }
+  }
+
+  if (sc.get_render_mask() & SceneContext::COLORMAP)
+  {
+    // Render the colormap to the framebuffers->screen
+    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+    sc.color().render(*this);
+  }
+
+  if (sc.get_render_mask() & SceneContext::LIGHTMAP)
+  { // Renders the lightmap to the screen     
+    OpenGLState state;
+
+    Rectf uv = impl->lightmap.get_uv();
+
+    state.bind_texture(impl->lightmap.get_texture());
+
+    state.enable(GL_BLEND);
+    state.set_blend_func(GL_DST_COLOR, GL_ZERO);
+    state.activate();
+
+    glBegin(GL_QUADS);
+
+    glTexCoord2f(uv.left, uv.bottom);
+    glVertex2f(0, 0);
+
+    glTexCoord2f(uv.right, uv.bottom);
+    glVertex2f(impl->lightmap.get_width() * LIGHTMAP_DIV, 0);
+
+    glTexCoord2f(uv.right, uv.top);
+    glVertex2f(impl->lightmap.get_width()  * LIGHTMAP_DIV,
+               impl->lightmap.get_height() * LIGHTMAP_DIV);
+
+    glTexCoord2f(uv.left, uv.top);
+    glVertex2f(0, impl->lightmap.get_height() * LIGHTMAP_DIV);
+
+    glEnd();
+  }
+
+  if (sc.get_render_mask() & SceneContext::HIGHLIGHTMAP)
+  {
+    sc.highlight().render(*this);
+  }
+
+  if (sc.get_render_mask() & SceneContext::CONTROLMAP)
+    sc.control().render(*this);
+  
+  // Clear all DrawingContexts
+  sc.color().clear();
+  sc.light().clear();
+  sc.highlight().clear();
+  sc.control().clear(); 
+}
+
+void
+Compositor::render(SceneContext& sc)
+{
+  if (impl->framebuffers)
+  {
+    render_with_framebuffers(sc);
+  }
+  else
+  {
+    render_without_framebuffers(sc);
+  }
+}
+
+void
+Compositor::eval(DrawingRequest* request)
+{
+  if (impl->framebuffers && request->needs_prepare())
+    {
+      Display::push_framebuffer(impl->framebuffers->tmp);
+      request->prepare(impl->framebuffers->screen.get_texture());
+      Display::pop_framebuffer();
+      
+      Display::push_framebuffer(impl->framebuffers->screen);
+      request->draw(impl->framebuffers->tmp.get_texture());
+      Display::pop_framebuffer();
+    }
+  else
+    {
+      request->draw(Texture());
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/display/compositor.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/compositor.hpp
===================================================================
--- trunk/windstille/src/display/compositor.hpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/display/compositor.hpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -0,0 +1,51 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_COMPOSITOR_HPP
+#define HEADER_WINDSTILLE_DISPLAY_COMPOSITOR_HPP
+
+#include <boost/scoped_ptr.hpp>
+
+class SceneContext;
+class CompositorImpl;
+class DrawingRequest;
+
+class Compositor
+{
+public:
+  Compositor();
+  ~Compositor();
+
+  void render_with_framebuffers(SceneContext& sc);
+  void render_without_framebuffers(SceneContext& sc);
+
+  void render_lightmap(SceneContext& sc);
+  void render(SceneContext& sc);
+
+  void eval(DrawingRequest* request);
+
+private:
+  boost::scoped_ptr<CompositorImpl> impl;
+
+  Compositor(const Compositor&);
+  Compositor& operator=(const Compositor&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/compositor.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -20,14 +20,15 @@
 
 #include <GL/glew.h>
 
-#include "math/vector3.hpp"
+#include "display/compositor.hpp"
 #include "display/display.hpp"
+#include "display/drawing_parameters.hpp"
 #include "display/opengl_state.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface_drawing_parameters.hpp"
-#include "display/drawing_parameters.hpp"
 #include "display/vertex_array_drawing_request.hpp"
 #include "font/fonts.hpp"
+#include "math/vector3.hpp"
 #include "sprite2d/sprite.hpp"
 
 struct DrawingRequestsSorter
@@ -253,13 +254,13 @@
 }
 
 void
-DrawingContext::render(SceneContext& sc)
+DrawingContext::render(Compositor& comp)
 {
   std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());
   
   for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
     {
-      sc.eval(*i);
+      comp.eval(*i);
     }
 }
 

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -32,6 +32,7 @@
 class Quad;
 class Line;
 class Color;
+class Compositor;
 
 /** The DrawingContext collects all DrawingRequests and allows you to
     flush them all down to the graphics card in one run, this has the
@@ -52,7 +53,7 @@
   ~DrawingContext();
 
   /** Draws everything in the drawing context to the screen */
-  void render(SceneContext& sc);
+  void render(Compositor& sc);
 
   /** Empties the drawing context */
   void clear();

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/display/scene_context.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -24,10 +24,6 @@
 
 #include "display/scene_context.hpp"
 
-// The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
-#define LIGHTMAP_DIV 4
-#define BLURMAP_DIV  1
-
 class SceneContextImpl
 {
 public:
@@ -37,24 +33,7 @@
   DrawingContext control; 
 
   unsigned int   render_mask;
-  
-  struct Framebuffers 
-  {
-    Framebuffer screen;
-    Framebuffer tmp;
-    Framebuffer lightmap;   
 
-    Framebuffers() 
-      : screen  (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
-        tmp     (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
-        lightmap(GL_TEXTURE_RECTANGLE_ARB, Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
-    {
-    }
-  };
-  
-  boost::scoped_ptr<Framebuffers> framebuffers;
-  Surface lightmap;
-
   SceneContextImpl() 
     : color(),
       light(),
@@ -65,10 +44,7 @@
                   SceneContext::HIGHLIGHTMAP | 
                   SceneContext::CONTROLMAP | 
                   SceneContext::LIGHTMAPSCREEN |
-                  SceneContext::BLURMAP),
-      framebuffers(0),
-      //framebuffers(new Framebuffers()),
-      lightmap(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
+                  SceneContext::BLURMAP)
   {
   }
 
@@ -220,227 +196,6 @@
 }
 
 void
-SceneContext::render_lightmap()
-{
-  Rectf uv(0, 0,
-           static_cast<float>(impl->framebuffers->lightmap.get_width()), 
-           static_cast<float>(impl->framebuffers->lightmap.get_height()));
-
-  OpenGLState state;
-
-  state.bind_texture(impl->framebuffers->lightmap.get_texture());
-      
-  state.enable(GL_BLEND);
-  state.set_blend_func(GL_DST_COLOR, GL_ZERO); // multiple the lightmap with the screen
-  state.activate();
-
-  glBegin(GL_QUADS);
-
-  glTexCoord2f(uv.left, uv.bottom);
-  glVertex2f(0, 0);
-
-  glTexCoord2f(uv.right, uv.bottom);
-  glVertex2f(static_cast<float>(impl->framebuffers->lightmap.get_width() * LIGHTMAP_DIV), 0.0f);
-
-  glTexCoord2f(uv.right, uv.top);
-  glVertex2f(static_cast<float>(impl->framebuffers->lightmap.get_width()  * LIGHTMAP_DIV),
-             static_cast<float>(impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV));
-
-  glTexCoord2f(uv.left, uv.top);
-  glVertex2f(0.0f, static_cast<float>(impl->framebuffers->lightmap.get_height() * LIGHTMAP_DIV));
-
-  glEnd();
-}
-
-void
-SceneContext::render_with_framebuffers()
-{
-  glClear(GL_DEPTH_BUFFER_BIT);
-      
-  if (impl->render_mask & LIGHTMAPSCREEN)
-    {
-      // Render the lightmap to the framebuffers->lightmap
-      Display::push_framebuffer(impl->framebuffers->lightmap);
-      
-      glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-
-      glPushMatrix();
-      glTranslatef(0.0f, static_cast<float>(Display::get_height() - (Display::get_height() / LIGHTMAP_DIV)), 0.0f);
-      glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
-      impl->light.render(*this);
-      glPopMatrix();
-
-      Display::pop_framebuffer();
-    }
-
-  if (impl->render_mask & COLORMAP)
-    {
-      // Render the colormap to the framebuffers->screen
-      Display::push_framebuffer(impl->framebuffers->screen);
-      glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-      impl->color.render(*this);
-      Display::pop_framebuffer();
-    }
-
-  if (impl->render_mask & LIGHTMAP)
-    { // Renders the lightmap to the screen
-      Display::push_framebuffer(impl->framebuffers->screen);
-      render_lightmap();
-      Display::pop_framebuffer();
-    }
-
-  if (impl->render_mask & HIGHLIGHTMAP)
-    {
-      Display::push_framebuffer(impl->framebuffers->screen);
-      impl->highlight.render(*this);
-      Display::pop_framebuffer();
-    }
-
-  if (impl->render_mask & CONTROLMAP)
-    impl->control.render(*this);
-
-  if (1) 
-    {
-      // Render the screen framebuffer to the actual screen 
-      OpenGLState state;
-
-      Rectf uv(0.375f, 0.375f, 
-               static_cast<float>(impl->framebuffers->screen.get_width())  + 0.375f,
-               static_cast<float>(impl->framebuffers->screen.get_height()) + 0.375f);
-
-      if (impl->render_mask & BLURMAP)
-        state.bind_texture(impl->framebuffers->screen.get_texture(), 0);
-      else
-        state.bind_texture(impl->framebuffers->tmp.get_texture(), 0);
-
-      state.activate();
-
-      glBegin(GL_QUADS);
-
-      glTexCoord2f(uv.left, uv.bottom);
-      glVertex2f(0, 0);
-
-      glTexCoord2f(uv.right, uv.bottom);
-      glVertex2f(static_cast<float>(Display::get_width()), 0);
-
-      glTexCoord2f(uv.right, uv.top);
-      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
-
-      glTexCoord2f(uv.left, uv.top);
-      glVertex2f(0.0f, static_cast<float>(Display::get_height()));
-
-      glEnd();
-    }
-
-  // Clear all DrawingContexts
-  impl->color.clear();
-  impl->light.clear();
-  impl->highlight.clear();
-  impl->control.clear();
-}
-
-void
-SceneContext::render_without_framebuffers()
-{
-  // Resize Lightmap, only needed in the editor, FIXME: move this into a 'set_size()' call
-  if (impl->lightmap.get_width()  != Display::get_width()/LIGHTMAP_DIV ||
-      impl->lightmap.get_height() != Display::get_height()/LIGHTMAP_DIV)
-    {
-      impl->lightmap = Surface(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV);
-    }
-
-  if (impl->render_mask & LIGHTMAPSCREEN)
-    {
-      // Render the lightmap to the framebuffers->lightmap
-      glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-
-      glPushMatrix();
-      glTranslatef(0.0f, static_cast<float>(Display::get_height()) - static_cast<float>(Display::get_height()/LIGHTMAP_DIV), 0.0f);
-      glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
-      impl->light.render(*this);
-      glPopMatrix();
-
-      { // Copy lightmap to a texture
-        OpenGLState state;
-        
-        // Weird y-pos is needed since OpenGL is upside down when it comes to y-coordinate
-        state.bind_texture(impl->lightmap.get_texture());
-        state.activate();
-
-        glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
-                            0, 0, 
-                            0, 0, //Display::get_height() - impl->lightmap.get_height(),
-                            static_cast<GLsizei>(impl->lightmap.get_width()), 
-                            static_cast<GLsizei>(impl->lightmap.get_height()));
-      }
-    }
-
-  if (impl->render_mask & COLORMAP)
-    {
-      // Render the colormap to the framebuffers->screen
-      glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-      impl->color.render(*this);
-    }
-
-  if (impl->render_mask & LIGHTMAP)
-    { // Renders the lightmap to the screen     
-      OpenGLState state;
-
-      Rectf uv = impl->lightmap.get_uv();
-
-      state.bind_texture(impl->lightmap.get_texture());
-
-      state.enable(GL_BLEND);
-      state.set_blend_func(GL_DST_COLOR, GL_ZERO);
-      state.activate();
-
-      glBegin(GL_QUADS);
-
-      glTexCoord2f(uv.left, uv.bottom);
-      glVertex2f(0, 0);
-
-      glTexCoord2f(uv.right, uv.bottom);
-      glVertex2f(impl->lightmap.get_width() * LIGHTMAP_DIV, 0);
-
-      glTexCoord2f(uv.right, uv.top);
-      glVertex2f(impl->lightmap.get_width()  * LIGHTMAP_DIV,
-                 impl->lightmap.get_height() * LIGHTMAP_DIV);
-
-      glTexCoord2f(uv.left, uv.top);
-      glVertex2f(0, impl->lightmap.get_height() * LIGHTMAP_DIV);
-
-      glEnd();
-    }
-
-  if (impl->render_mask & HIGHLIGHTMAP)
-    {
-      impl->highlight.render(*this);
-    }
-
-  if (impl->render_mask & CONTROLMAP)
-    impl->control.render(*this);
-
-  // Clear all DrawingContexts
-  impl->color.clear();
-  impl->light.clear();
-  impl->highlight.clear();
-  impl->control.clear(); 
-}
-
-void
-SceneContext::render()
-{
-  if (impl->framebuffers)
-    {
-      render_with_framebuffers();
-    }
-  else
-    {
-      render_without_framebuffers();
-    }
-}
-
-void
 SceneContext::set_render_mask(unsigned int mask)
 {
   impl->render_mask = mask;
@@ -472,23 +227,4 @@
     }
 }
 
-void
-SceneContext::eval(DrawingRequest* request)
-{
-  if (impl->framebuffers && request->needs_prepare())
-    {
-      Display::push_framebuffer(impl->framebuffers->tmp);
-      request->prepare(impl->framebuffers->screen.get_texture());
-      Display::pop_framebuffer();
-      
-      Display::push_framebuffer(impl->framebuffers->screen);
-      request->draw(impl->framebuffers->tmp.get_texture());
-      Display::pop_framebuffer();
-    }
-  else
-    {
-      request->draw(Texture());
-    }
-}
-
 /* EOF */

Modified: trunk/windstille/src/display/scene_context.hpp
===================================================================
--- trunk/windstille/src/display/scene_context.hpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/display/scene_context.hpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -76,16 +76,13 @@
   void pop_modelview();
   void reset_modelview();
 
-  /** Takes all the buffers and combines them to form the final image
-      that will be shown on the screen. */
-  void render();
-
-  enum { COLORMAP       = 1<<0,
-         LIGHTMAP       = 1<<1,
-         HIGHLIGHTMAP   = 1<<2,
-         CONTROLMAP     = 1<<3,
-         LIGHTMAPSCREEN = 1<<4,
-         BLURMAP        = 1<<5
+  enum { 
+    COLORMAP       = 1<<0,
+    LIGHTMAP       = 1<<1,
+    HIGHLIGHTMAP   = 1<<2,
+    CONTROLMAP     = 1<<3,
+    LIGHTMAPSCREEN = 1<<4,
+    BLURMAP        = 1<<5
   };
 
   /** The render mask allows to switch of some layers and effects for
@@ -95,13 +92,6 @@
 
   DrawingContext& get_layer(unsigned int t);
 
-  void render_with_framebuffers();
-  void render_without_framebuffers();
-
-  void render_lightmap();
-
-  void eval(DrawingRequest* request);
-
 private:
   boost::scoped_ptr<SceneContextImpl> impl;
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -24,6 +24,7 @@
 
 #include "sprite2d/sprite.hpp"
 #include "display/display.hpp"
+#include "display/compositor.hpp"
 #include "display/texture_manager.hpp"
 #include "display/surface_manager.hpp"
 #include "display/opengl_state.hpp"
@@ -51,6 +52,7 @@
     sector_model(new SectorModel()),
     control_points(),
     state(),
+    compositor(),
     sc(),
     scroll_tool(new ScrollTool()),
     selection(),
@@ -171,6 +173,7 @@
       if (!sc.get())
         {
           sc.reset(new SceneContext());
+          compositor.reset(new Compositor());
           sc->set_render_mask(sc->get_render_mask() & ~SceneContext::LIGHTMAP);
         }
       
@@ -300,7 +303,8 @@
           EditorWindow::current()->get_current_tool()->draw(*sc);
         }
 
-      sc->render();
+      compositor->render(*sc);
+
       state.pop(*sc);
 
       if (grid_enabled)

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -63,6 +63,7 @@
   std::vector<ControlPointHandle> control_points;
 
   GraphicContextState   state;
+  boost::scoped_ptr<Compositor> compositor;
   boost::scoped_ptr<SceneContext> sc;
   boost::scoped_ptr<ScrollTool> scroll_tool;
   SelectionHandle selection;

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -20,6 +20,7 @@
 
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
+#include "display/compositor.hpp"
 #include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
 #include "font/fonts.hpp"
@@ -36,6 +37,7 @@
 class GameSessionImpl
 {
 public:
+  Compositor compositor;
   SceneContext sc;
 
   float fadeout_value;
@@ -142,7 +144,7 @@
   view.draw(sc, *sector);
 
   // Render the scene to the screen
-  sc.render();
+  compositor.render(sc);
 
   if (cutscene_mode || cutscene_value > 0.0f)
     {

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -27,7 +27,8 @@
 #include "util/sexpr_file_reader.hpp"
 
 ParticleViewer::ParticleViewer()
-  : sc(),
+  : compositor(),
+    sc(),
     systems(),
     background(Pathname("images/greychess.sprite")),
     pos()
@@ -93,7 +94,7 @@
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
     (*i)->draw(sc);
 
-  sc.render();
+  compositor.render(sc);
 }
 
 void

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -22,11 +22,12 @@
 #include <boost/scoped_ptr.hpp>
 #include <boost/shared_ptr.hpp>
 
+#include "display/compositor.hpp"
+#include "display/scene_context.hpp"
+#include "gui/gui_manager.hpp"
+#include "particles/particle_system.hpp"
 #include "screen/screen.hpp"
 #include "sprite2d/sprite.hpp"
-#include "gui/gui_manager.hpp"
-#include "display/scene_context.hpp"
-#include "particles/particle_system.hpp"
 
 namespace gui {
 class Slider;
@@ -39,6 +40,7 @@
 class ParticleViewer : public Screen
 {
 private:
+  Compositor compositor;
   SceneContext sc;
   typedef std::vector<boost::shared_ptr<ParticleSystem> > Systems;
   Systems systems;

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -23,7 +23,8 @@
 #include "sprite3dview.hpp"
 
 Sprite3DView::Sprite3DView()
-  : sc(),
+  : compositor(),
+    sc(),
     sprite(),
     actions(),
     current_action(),
@@ -78,7 +79,7 @@
 
   sc.light().fill_screen(Color(1.0, 1.0, 1.0));
   //sc.color().draw("Hello World", 100, 100);
-  sc.render();
+  compositor.render(sc);
   
   float x = 10.0f;
   float y =  static_cast<float>(Fonts::current()->vera12->get_height()) + 5.0f;

Modified: trunk/windstille/src/screen/sprite3dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.hpp	2009-08-26 14:29:23 UTC (rev 3077)
+++ trunk/windstille/src/screen/sprite3dview.hpp	2009-08-26 14:58:40 UTC (rev 3078)
@@ -19,8 +19,9 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_SPRITE3DVIEW_HPP
 #define HEADER_WINDSTILLE_SCREEN_SPRITE3DVIEW_HPP
 
+#include "display/compositor.hpp"
+#include "screen/screen.hpp"
 #include "sprite3d/sprite3d.hpp"
-#include "screen/screen.hpp"
 
 /**
  * A simple class to view 3d sprites and their different actions,
@@ -29,6 +30,7 @@
 class Sprite3DView : public Screen
 {
 private:
+  Compositor compositor;
   SceneContext sc;
   Sprite3D sprite;
   std::vector<std::string> actions;



From grumbel at mail.berlios.de  Wed Aug 26 18:24:06 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 18:24:06 +0200
Subject: [Windstille-commit] r3079 - in trunk/windstille/src: display editor
	engine screen
Message-ID: <200908261624.n7QGO6wc015346@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 18:24:05 +0200 (Wed, 26 Aug 2009)
New Revision: 3079

Modified:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/compositor.hpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/graphic_context_state.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
Log:
Draw the SceneGraph via the Compositor

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -22,11 +22,13 @@
 
 #include "display/display.hpp"
 #include "display/drawing_request.hpp"
+#include "display/graphic_context_state.hpp"
 #include "display/framebuffer.hpp"
 #include "display/opengl_state.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface.hpp"
 #include "math/rect.hpp"
+#include "scenegraph/scene_graph.hpp"
 
 // The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
 #define LIGHTMAP_DIV 4
@@ -54,7 +56,8 @@
   CompositorImpl()
     : framebuffers(0),
       //framebuffers(new Framebuffers()),
-      lightmap(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
+      lightmap(Display::get_width()  / LIGHTMAP_DIV,
+               Display::get_height() / LIGHTMAP_DIV)
   {}
 };
 
@@ -68,7 +71,7 @@
 }
 
 void
-Compositor::render_lightmap(SceneContext& /*sc*/)
+Compositor::render_lightmap(SceneContext& /*sc*/, SceneGraph* /*sg*/)
 {
   Rectf uv(0, 0,
            static_cast<float>(impl->framebuffers->lightmap.get_width()), 
@@ -101,7 +104,7 @@
 }
 
 void
-Compositor::render_with_framebuffers(SceneContext& sc)
+Compositor::render_with_framebuffers(SceneContext& sc, SceneGraph* sg)
 {
   glClear(GL_DEPTH_BUFFER_BIT);
       
@@ -133,7 +136,7 @@
   if (sc.get_render_mask() & SceneContext::LIGHTMAP)
   { // Renders the lightmap to the screen
     Display::push_framebuffer(impl->framebuffers->screen);
-    render_lightmap(sc);
+    render_lightmap(sc, sg);
     Display::pop_framebuffer();
   }
 
@@ -188,7 +191,7 @@
 }
 
 void
-Compositor::render_without_framebuffers(SceneContext& sc)
+Compositor::render_without_framebuffers(SceneContext& sc, SceneGraph* sg, const GraphicContextState& gc_state)
 {
   // Resize Lightmap, only needed in the editor, FIXME: move this into a 'set_size()' call
   if (impl->lightmap.get_width()  != Display::get_width()/LIGHTMAP_DIV ||
@@ -228,6 +231,14 @@
     // Render the colormap to the framebuffers->screen
     glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
     sc.color().render(*this);
+
+    if (sg)
+    {
+      glPushMatrix();
+      glMultMatrixf(gc_state.get_matrix().matrix);
+      sg->draw(Texture());
+      glPopMatrix();
+    }
   }
 
   if (sc.get_render_mask() & SceneContext::LIGHTMAP)
@@ -276,15 +287,15 @@
 }
 
 void
-Compositor::render(SceneContext& sc)
+Compositor::render(SceneContext& sc, SceneGraph* sg, const GraphicContextState& state)
 {
   if (impl->framebuffers)
   {
-    render_with_framebuffers(sc);
+    render_with_framebuffers(sc, sg);
   }
   else
   {
-    render_without_framebuffers(sc);
+    render_without_framebuffers(sc, sg, state);
   }
 }
 

Modified: trunk/windstille/src/display/compositor.hpp
===================================================================
--- trunk/windstille/src/display/compositor.hpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/display/compositor.hpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -21,9 +21,11 @@
 
 #include <boost/scoped_ptr.hpp>
 
-class SceneContext;
 class CompositorImpl;
 class DrawingRequest;
+class GraphicContextState;
+class SceneContext;
+class SceneGraph;
 
 class Compositor
 {
@@ -31,19 +33,22 @@
   Compositor();
   ~Compositor();
 
-  void render_with_framebuffers(SceneContext& sc);
-  void render_without_framebuffers(SceneContext& sc);
+  void render(SceneContext& sc, SceneGraph* sg, const GraphicContextState& state);
+  void eval(DrawingRequest* request);
 
-  void render_lightmap(SceneContext& sc);
-  void render(SceneContext& sc);
+private:
+  void render_with_framebuffers(SceneContext& sc, SceneGraph* sg);
+  void render_without_framebuffers(SceneContext& sc, SceneGraph* sg, 
+                                   const GraphicContextState& state);
 
-  void eval(DrawingRequest* request);
+  void render_lightmap(SceneContext& sc, SceneGraph* sg);
 
 private:
-  boost::scoped_ptr<CompositorImpl> impl;
-
   Compositor(const Compositor&);
   Compositor& operator=(const Compositor&);
+
+private:
+  boost::scoped_ptr<CompositorImpl> impl;
 };
 
 #endif

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -281,7 +281,7 @@
 }
 
 void
-DrawingContext::draw(const Sprite& sprite,  const Vector2f& pos, float z_pos)
+DrawingContext::draw(const Sprite& sprite, const Vector2f& pos, float z_pos)
 {
   draw(sprite.get_current_surface(),
        SurfaceDrawingParameters()

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -62,8 +62,28 @@
   impl->height = h;
 }
 
+Matrix
+GraphicContextState::get_matrix() const
+{
+  Matrix matrix = Matrix::identity();
+
+  matrix = matrix.translate(static_cast<float>(impl->width)  / 2.0f, 
+                   static_cast<float>(impl->height) / 2.0f,
+                   0.0f);
+  matrix = matrix.rotate(impl->rotation, 0.0f, 0.0f, 1.0f);
+  matrix = matrix.translate(static_cast<float>(-impl->width)  / 2.0f,
+               static_cast<float>(-impl->height) / 2.0f, 
+               0.0f);
+
+  matrix = matrix.scale(get_zoom(), get_zoom(), 1.0f);
+  
+  matrix = matrix.translate(impl->offset.x, impl->offset.y, 0.0f); 
+
+  return matrix;
+}
+
 void
-GraphicContextState::push(SceneContext& sc)
+GraphicContextState::push(SceneContext& sc) const
 {
   sc.push_modelview();
 
@@ -78,7 +98,7 @@
 }
 
 void
-GraphicContextState::pop(SceneContext& sc)
+GraphicContextState::pop(SceneContext& sc) const
 {
   sc.pop_modelview();
 }
@@ -128,7 +148,7 @@
 }
 
 float
-GraphicContextState::get_zoom()
+GraphicContextState::get_zoom() const
 {
   return impl->zoom;
 }

Modified: trunk/windstille/src/display/graphic_context_state.hpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.hpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/display/graphic_context_state.hpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -18,9 +18,11 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_GRAPHIC_CONTEXT_STATE_HPP
 #define HEADER_WINDSTILLE_DISPLAY_GRAPHIC_CONTEXT_STATE_HPP
 
+#include <boost/shared_ptr.hpp>
+
 #include "math/rect.hpp"
 #include "math/vector2f.hpp"
-#include <boost/shared_ptr.hpp>
+#include "math/matrix.hpp"
 
 class SceneContext;
 
@@ -37,9 +39,11 @@
 
   void set_size(int w, int h);
 
-  void push(SceneContext& sc);
-  void pop(SceneContext& sc);
+  Matrix get_matrix() const;
 
+  void push(SceneContext& sc) const;
+  void pop(SceneContext& sc) const;
+
   /** Return a rectangle in world coordinates that represents the area
       visible on the screen */
   Rectf get_clip_rect();
@@ -64,7 +68,7 @@
       position even after zoomed in/out */
   void  set_zoom(const Vector2f& pos, float z);
   void  set_zoom(float z);
-  float get_zoom(); 
+  float get_zoom() const; 
 
   void zoom_to (const Rectf& rect);
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -303,7 +303,8 @@
           EditorWindow::current()->get_current_tool()->draw(*sc);
         }
 
-      compositor->render(*sc);
+      compositor->render(*sc, 0, GraphicContextState(Display::get_width(),
+                                                     Display::get_height()));
 
       state.pop(*sc);
 

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -197,7 +197,7 @@
         (*i)->draw(sc);
     }
 
-  sc.color().draw(new SceneGraphDrawingRequest(*scene_graph, sc.color().get_modelview()));
+  //sc.color().draw(new SceneGraphDrawingRequest(*scene_graph, sc.color().get_modelview()));
 }
 
 void Sector::commit_adds()

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -142,9 +142,9 @@
 GameSessionImpl::draw()
 {
   view.draw(sc, *sector);
-
+  
   // Render the scene to the screen
-  compositor.render(sc);
+  compositor.render(sc, &sector->get_scene_graph(), view.get_gc_state());
 
   if (cutscene_mode || cutscene_value > 0.0f)
     {

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -23,6 +23,7 @@
 
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
+#include "display/graphic_context_state.hpp"
 #include "input/controller.hpp"
 #include "util/sexpr_file_reader.hpp"
 
@@ -94,7 +95,8 @@
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
     (*i)->draw(sc);
 
-  compositor.render(sc);
+  compositor.render(sc, 0, GraphicContextState(Display::get_width(),
+                                               Display::get_height()));
 }
 
 void

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-26 14:58:40 UTC (rev 3078)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-26 16:24:05 UTC (rev 3079)
@@ -16,11 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "screen/sprite3dview.hpp"
+
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
 #include "input/controller.hpp"
-#include "sprite3dview.hpp"
+#include "display/graphic_context_state.hpp"
 
 Sprite3DView::Sprite3DView()
   : compositor(),
@@ -79,7 +81,8 @@
 
   sc.light().fill_screen(Color(1.0, 1.0, 1.0));
   //sc.color().draw("Hello World", 100, 100);
-  compositor.render(sc);
+  compositor.render(sc, 0, GraphicContextState(Display::get_width(),
+                                               Display::get_height()));
   
   float x = 10.0f;
   float y =  static_cast<float>(Fonts::current()->vera12->get_height()) + 5.0f;



From grumbel at mail.berlios.de  Wed Aug 26 19:11:20 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 19:11:20 +0200
Subject: [Windstille-commit] r3080 - trunk/windstille/src/objects
Message-ID: <200908261711.n7QHBKew026169@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 19:11:19 +0200 (Wed, 26 Aug 2009)
New Revision: 3080

Added:
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/objects/decal.hpp
Log:
Added Decal object

Added: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-26 16:24:05 UTC (rev 3079)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-26 17:11:19 UTC (rev 3080)
@@ -0,0 +1,46 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "decal.hpp"
+
+Decal::Decal()
+  : m_surface(),
+    m_scale(),
+    m_angle(),
+    m_hflip(),
+    m_vflip()
+{
+  //m_drawable.reset(new Sprite3DDrawingRequest(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
+  //Sector::current()->get_scene_graph().add_drawable(m_drawable);
+}
+
+Decal::~Decal()
+{
+}
+  
+void
+Decal::draw(SceneContext& /*context*/)
+{
+}
+
+void
+Decal::update(float /*delta*/)
+{
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/objects/decal.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/objects/decal.hpp
===================================================================
--- trunk/windstille/src/objects/decal.hpp	2009-08-26 16:24:05 UTC (rev 3079)
+++ trunk/windstille/src/objects/decal.hpp	2009-08-26 17:11:19 UTC (rev 3080)
@@ -0,0 +1,51 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_OBJECTS_DECAL_HPP
+#define HEADER_WINDSTILLE_OBJECTS_DECAL_HPP
+
+#include "display/surface.hpp"
+#include "engine/game_object.hpp"
+
+class Decal : public GameObject
+{
+private:
+  Surface m_surface;
+
+  /** scale of the object, independed in x and y axis */
+  Vector2f m_scale;
+  float    m_angle;
+
+  bool m_hflip;
+  bool m_vflip;
+
+public:
+  Decal();
+  ~Decal();
+  
+  void draw (SceneContext& context);
+  void update (float delta);
+
+private:
+  Decal(const Decal&);
+  Decal& operator=(const Decal&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/objects/decal.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Wed Aug 26 19:13:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 19:13:41 +0200
Subject: [Windstille-commit] r3081 - trunk/windstille/src/display
Message-ID: <200908261713.n7QHDfBp029892@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 19:13:39 +0200 (Wed, 26 Aug 2009)
New Revision: 3081

Added:
   trunk/windstille/src/display/control_drawing_request.hpp
   trunk/windstille/src/display/fill_screen_drawing_request.hpp
   trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
   trunk/windstille/src/display/surface_drawing_request.hpp
   trunk/windstille/src/display/surface_quad_drawing_request.hpp
   trunk/windstille/src/display/text_drawing_request.hpp
Modified:
   trunk/windstille/src/display/drawing_context.cpp
Log:
Moved DrawingRequests to their own files

Added: trunk/windstille/src/display/control_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/control_drawing_request.hpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/control_drawing_request.hpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -0,0 +1,60 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
+
+class ControlDrawingRequest : public DrawingRequest
+{
+private:
+  Surface surface;
+  float angle;
+
+public:
+  ControlDrawingRequest(Surface surface_, const Vector2f& pos_, float angle_, float z_pos_,
+                        const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_), 
+      surface(surface_), 
+      angle(angle_)
+  {}
+
+  virtual ~ControlDrawingRequest() {}
+
+  void draw(const Texture& /*tmp_texture*/)
+  {
+    glPushMatrix();
+
+    // FIXME: This looks badly broken, should modelview.multiply() be enough?
+    glTranslatef(modelview.matrix[12],
+                 modelview.matrix[13],
+                 modelview.matrix[14]);
+
+    Vector3 p = modelview.multiply(Vector3(pos.x, pos.y, 0.0f));
+
+    surface.draw(SurfaceDrawingParameters()
+                 .set_angle(angle)
+                 .set_pos(Vector2f(p.x - surface.get_width()/2,
+                                   p.y - surface.get_height()/2)));
+
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/control_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -26,10 +26,18 @@
 #include "display/opengl_state.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface_drawing_parameters.hpp"
-#include "display/vertex_array_drawing_request.hpp"
 #include "font/fonts.hpp"
 #include "math/vector3.hpp"
 #include "sprite2d/sprite.hpp"
+
+#include "display/control_drawing_request.hpp"
+#include "display/fill_screen_drawing_request.hpp"
+#include "display/fill_screen_pattern_drawing_request.hpp"
+#include "display/surface_drawing_request.hpp"
+#include "display/surface_quad_drawing_request.hpp"
+#include "display/text_drawing_request.hpp"
+#include "display/vertex_array_drawing_request.hpp"
+#include "display/vertex_array_drawing_request.hpp"
 
 struct DrawingRequestsSorter
 {
@@ -38,209 +46,6 @@
   }
 };
 
-class FillScreenPatternDrawingRequest : public DrawingRequest
-{
-private:
-  Texture  texture;
-  Vector2f offset;
-public:
-  FillScreenPatternDrawingRequest(const Texture& texture_, const Vector2f& offset_)
-    : DrawingRequest(Vector2f(0, 0), -1000.0f), 
-      texture(texture_),
-      offset(offset_)
-  {}
-
-  virtual ~FillScreenPatternDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    OpenGLState state;
-    state.enable(GL_BLEND);
-    state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-    state.bind_texture(texture);
-    state.activate();
-
-    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
-    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
-
-    float u_start = -offset.x / static_cast<float>(texture.get_width());
-    float v_start = -offset.y / static_cast<float>(texture.get_height());
-
-    u -= offset.x / static_cast<float>(texture.get_width());
-    v -= offset.y / static_cast<float>(texture.get_height());
-
-    glBegin(GL_QUADS);
-    {
-      glTexCoord2f(u_start, v_start);
-      glVertex2f(0, 0);
-    
-      glTexCoord2f(u, v_start);
-      glVertex2f(static_cast<float>(Display::get_width()), 0);
-
-      glTexCoord2f(u, v);
-      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
-
-      glTexCoord2f(u_start, v);
-      glVertex2f(0,  static_cast<float>(Display::get_height()));
-    }
-    glEnd();
-  }
-};
-
-class FillScreenDrawingRequest : public DrawingRequest
-{
-private:
-  Color color;
-
-public:
-  FillScreenDrawingRequest(const Color& color_) 
-    : DrawingRequest(Vector2f(0, 0), -1000.0f), color(color_)
-  {
-  }
-  virtual ~FillScreenDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) {
-    OpenGLState state;
-    // FIXME: move clear color to opengl_state
-    state.activate();
-    glClearColor(color.r, color.g, color.b, color.a);
-    glClear(GL_COLOR_BUFFER_BIT);
-  }
-};
-
-class TextDrawingRequest : public DrawingRequest
-{
-private:
-  std::string text;
-public:
-  TextDrawingRequest(const std::string& text_, const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
-      text(text_)
-  {}
-  virtual ~TextDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-    Fonts::current()->ttffont->draw(pos, text);
-    glPopMatrix();
-  }
-};
-
-class SurfaceQuadDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  Quad quad;
-  DrawingParameters params;
-
-public:
-  SurfaceQuadDrawingRequest(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
-                            const DrawingParameters& params_, float z_pos_,
-                            const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
-      surface(surface_),
-      quad(quad_),
-      params(params_)
-  {
-  }
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    OpenGLState state;
-    state.enable(GL_BLEND);
-    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
-    state.bind_texture(surface.get_texture());
-    state.activate();
-
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    glBegin(GL_QUADS);
-    {
-      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
-      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
-    
-      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
-      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
-
-      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
-      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
-
-      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
-      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
-    }
-    glEnd();
-
-    glPopMatrix();    
-  }
-};
-
-class SurfaceDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  SurfaceDrawingParameters params;
-
-public:
-  SurfaceDrawingRequest(Surface surface_, const SurfaceDrawingParameters& params_,
-                        float z_pos_,
-                        const Matrix& modelview_)
-    : DrawingRequest(pos, z_pos_, modelview_), 
-      surface(surface_), 
-      params(params_)
-  {}
-
-  virtual ~SurfaceDrawingRequest()
-  {}
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    surface.draw(params);
-
-    glPopMatrix();
-  }
-};
-
-class ControlDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  float angle;
-
-public:
-  ControlDrawingRequest(Surface surface_, const Vector2f& pos_, float angle_, float z_pos_,
-                        const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), 
-      surface(surface_), 
-      angle(angle_)
-  {}
-
-  virtual ~ControlDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/)
-  {
-    glPushMatrix();
-
-    // FIXME: This looks badly broken, should modelview.multiply() be enough?
-    glTranslatef(modelview.matrix[12],
-                 modelview.matrix[13],
-                 modelview.matrix[14]);
-
-    Vector3 p = modelview.multiply(Vector3(pos.x, pos.y, 0.0f));
-
-    surface.draw(SurfaceDrawingParameters()
-                 .set_angle(angle)
-                 .set_pos(Vector2f(p.x - surface.get_width()/2,
-                                   p.y - surface.get_height()/2)));
-
-    glPopMatrix();
-  }
-};
-
 DrawingContext::DrawingContext()
   : drawingrequests(),
     modelview_stack()

Added: trunk/windstille/src/display/fill_screen_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/fill_screen_drawing_request.hpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/fill_screen_drawing_request.hpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -0,0 +1,47 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_FILL_SCREEN_DRAWING_REQUEST_HPP
+#define HEADER_FILL_SCREEN_DRAWING_REQUEST_HPP
+
+
+
+class FillScreenDrawingRequest : public DrawingRequest
+{
+private:
+  Color color;
+
+public:
+  FillScreenDrawingRequest(const Color& color_) 
+    : DrawingRequest(Vector2f(0, 0), -1000.0f), color(color_)
+  {
+  }
+  virtual ~FillScreenDrawingRequest() {}
+
+  void draw(const Texture& /*tmp_texture*/) {
+    OpenGLState state;
+    // FIXME: move clear color to opengl_state
+    state.activate();
+    glClearColor(color.r, color.g, color.b, color.a);
+    glClear(GL_COLOR_BUFFER_BIT);
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/fill_screen_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -0,0 +1,74 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+#define HEADER_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+
+
+class FillScreenPatternDrawingRequest : public DrawingRequest
+{
+private:
+  Texture  texture;
+  Vector2f offset;
+public:
+  FillScreenPatternDrawingRequest(const Texture& texture_, const Vector2f& offset_)
+    : DrawingRequest(Vector2f(0, 0), -1000.0f), 
+      texture(texture_),
+      offset(offset_)
+  {}
+
+  virtual ~FillScreenPatternDrawingRequest() {}
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+    state.bind_texture(texture);
+    state.activate();
+
+    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
+    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
+
+    float u_start = -offset.x / static_cast<float>(texture.get_width());
+    float v_start = -offset.y / static_cast<float>(texture.get_height());
+
+    u -= offset.x / static_cast<float>(texture.get_width());
+    v -= offset.y / static_cast<float>(texture.get_height());
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(u_start, v_start);
+      glVertex2f(0, 0);
+    
+      glTexCoord2f(u, v_start);
+      glVertex2f(static_cast<float>(Display::get_width()), 0);
+
+      glTexCoord2f(u, v);
+      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
+
+      glTexCoord2f(u_start, v);
+      glVertex2f(0,  static_cast<float>(Display::get_height()));
+    }
+    glEnd();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/surface_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -0,0 +1,53 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+
+class SurfaceDrawingRequest : public DrawingRequest
+{
+private:
+  Surface surface;
+  SurfaceDrawingParameters params;
+
+public:
+  SurfaceDrawingRequest(Surface surface_, const SurfaceDrawingParameters& params_,
+                        float z_pos_,
+                        const Matrix& modelview_)
+    : DrawingRequest(pos, z_pos_, modelview_), 
+      surface(surface_), 
+      params(params_)
+  {}
+
+  virtual ~SurfaceDrawingRequest()
+  {}
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    surface.draw(params);
+
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/surface_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/surface_quad_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -0,0 +1,73 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+
+class SurfaceQuadDrawingRequest : public DrawingRequest
+{
+private:
+  Surface surface;
+  Quad quad;
+  DrawingParameters params;
+
+public:
+  SurfaceQuadDrawingRequest(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
+                            const DrawingParameters& params_, float z_pos_,
+                            const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_),
+      surface(surface_),
+      quad(quad_),
+      params(params_)
+  {
+  }
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
+    state.bind_texture(surface.get_texture());
+    state.activate();
+
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
+    
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
+
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
+
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
+    }
+    glEnd();
+
+    glPopMatrix();    
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/surface_quad_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/text_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/text_drawing_request.hpp	2009-08-26 17:11:19 UTC (rev 3080)
+++ trunk/windstille/src/display/text_drawing_request.hpp	2009-08-26 17:13:39 UTC (rev 3081)
@@ -0,0 +1,43 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
+
+class TextDrawingRequest : public DrawingRequest
+{
+private:
+  std::string text;
+public:
+  TextDrawingRequest(const std::string& text_, const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_),
+      text(text_)
+  {}
+  virtual ~TextDrawingRequest() {}
+
+  void draw(const Texture& /*tmp_texture*/) {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+    Fonts::current()->ttffont->draw(pos, text);
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/text_drawing_request.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Wed Aug 26 21:28:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 21:28:19 +0200
Subject: [Windstille-commit] r3082 - in trunk/windstille/src: engine hud
Message-ID: <200908261928.n7QJSJss022689@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 21:28:19 +0200 (Wed, 26 Aug 2009)
New Revision: 3082

Modified:
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/controller_help_window.hpp
Log:
Removed some remaining current_ pointer

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-26 17:13:39 UTC (rev 3081)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-26 19:28:19 UTC (rev 3082)
@@ -58,8 +58,6 @@
     interactivebackground_tilemap(0),
     player(0)
 {
-  //current_ = this;
-
   if (debug) std::cout << "Creating new Sector" << std::endl;
   
   interactive_tilemap = 0;

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-08-26 17:13:39 UTC (rev 3081)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-08-26 19:28:19 UTC (rev 3082)
@@ -20,11 +20,8 @@
 #include "display/display.hpp"
 #include "hud/controller_help_window.hpp"
 
-ControllerHelpWindow* ControllerHelpWindow::current_ = 0;
-
 ControllerHelpWindow::ControllerHelpWindow()
 {
-  current_ = this;
 }
 
 void

Modified: trunk/windstille/src/hud/controller_help_window.hpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.hpp	2009-08-26 17:13:39 UTC (rev 3081)
+++ trunk/windstille/src/hud/controller_help_window.hpp	2009-08-26 19:28:19 UTC (rev 3082)
@@ -39,9 +39,6 @@
 
   void draw();
   void update(float delta, const Controller& controller);
-
-private:
-  static ControllerHelpWindow* current_;
 };
 
 #endif



From grumbel at mail.berlios.de  Wed Aug 26 22:12:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 26 Aug 2009 22:12:01 +0200
Subject: [Windstille-commit] r3083 - in trunk/windstille/src: display editor
	engine objects
Message-ID: <200908262012.n7QKC1Oo027816@sheep.berlios.de>

Author: grumbel
Date: 2009-08-26 22:12:01 +0200 (Wed, 26 Aug 2009)
New Revision: 3083

Modified:
   trunk/windstille/src/display/surface_drawing_request.hpp
   trunk/windstille/src/display/surface_quad_drawing_request.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/objects/decal.hpp
Log:
Implemented loading of decal

Modified: trunk/windstille/src/display/surface_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-26 19:28:19 UTC (rev 3082)
+++ trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-26 20:12:01 UTC (rev 3083)
@@ -19,6 +19,9 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
 
+#include "display/surface_drawing_request.hpp"
+#include "display/surface_drawing_parameters.hpp"
+
 class SurfaceDrawingRequest : public DrawingRequest
 {
 private:

Modified: trunk/windstille/src/display/surface_quad_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-26 19:28:19 UTC (rev 3082)
+++ trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-26 20:12:01 UTC (rev 3083)
@@ -19,6 +19,10 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
 
+#include "math/vector2f.hpp"
+#include "math/quad.hpp"
+#include "display/drawing_request.hpp"
+
 class SurfaceQuadDrawingRequest : public DrawingRequest
 {
 private:

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-26 19:28:19 UTC (rev 3082)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-26 20:12:01 UTC (rev 3083)
@@ -441,7 +441,7 @@
   writer.write_raw(";; -*- scheme -*-\n");
   writer.start_section("windstille-sector");
 
-  writer.write("version", 2);
+  writer.write("version", 3);
   writer.write("name", "");
   writer.write("ambient-color", ambient_color);
   writer.write("init-script", "init.nut");

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-26 19:28:19 UTC (rev 3082)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-26 20:12:01 UTC (rev 3083)
@@ -18,29 +18,30 @@
 
 #include "engine/sector.hpp"
 
+#include "collision/collision_engine.hpp"
+#include "engine/squirrel_thread.hpp"
+#include "navigation/navigation_graph.hpp"
 #include "objects/background_gradient.hpp"
-#include "tile/tile_map.hpp"
-#include "objects/player.hpp"
-#include "objects/trigger.hpp"
-#include "objects/test_object.hpp"
-#include "objects/vrdummy.hpp"
-#include "sound/sound_manager.hpp"
-#include "collision/collision_engine.hpp"
+#include "objects/box.hpp"
+#include "objects/character.hpp"
+#include "objects/decal.hpp"
 #include "objects/elevator.hpp"
-#include "objects/nightvision.hpp"
-#include "objects/character.hpp"
+#include "objects/hedgehog.hpp"
 #include "objects/laser_pointer.hpp"
-#include "objects/swarm.hpp"
 #include "objects/liquid.hpp"
+#include "objects/nightvision.hpp"
+#include "objects/player.hpp"
+#include "objects/scriptable_object.hpp"
 #include "objects/shockwave.hpp"
-#include "objects/hedgehog.hpp"
 #include "objects/spider_mine.hpp"
-#include "objects/box.hpp"
-#include "objects/scriptable_object.hpp"
-#include "navigation/navigation_graph.hpp"
+#include "objects/swarm.hpp"
+#include "objects/test_object.hpp"
+#include "objects/trigger.hpp"
+#include "objects/vrdummy.hpp"
 #include "scenegraph/scene_graph.hpp"
 #include "scenegraph/scene_graph_drawing_request.hpp"
-#include "engine/squirrel_thread.hpp"
+#include "sound/sound_manager.hpp"
+#include "tile/tile_map.hpp"
 
 Sector::Sector(const Pathname& arg_filename)
   : collision_engine(new CollisionEngine()),
@@ -87,34 +88,38 @@
   if (debug) std::cout << "Sector:parse_file '" << filename_ << "'" << std::endl;
   
   FileReader reader = FileReader::parse(filename_);
-  if(reader.get_name() != "windstille-sector") {
+  if(reader.get_name() != "windstille-sector") 
+  {
     std::ostringstream msg;
     msg << "'" << filename_ << "' is not a windstille-sector file";
     throw std::runtime_error(msg.str());
-  }
-  
-  int version = 1;
-  if(!reader.get("version", version))
-    std::cerr << "Warning no version specified in levelformat.\n";
-  if(version > 1)
-    std::cerr << "Warning: format version is newer than game.\n";
+  } 
+  else
+  {
+    int version = 1;
+    if (!reader.get("version", version))
+      std::cerr << "Warning no version specified in levelformat.\n";
 
-  reader.get("name",          name);
-  reader.get("music",         music);
-  reader.get("init-script",   init_script);
-  reader.get("ambient-color", ambient_light);
+    if (version > 3)
+      std::cerr << "Warning: format version is newer than game.\n";
+
+    reader.get("name",          name);
+    reader.get("music",         music);
+    reader.get("init-script",   init_script);
+    reader.get("ambient-color", ambient_light);
   
-  FileReader objects_reader;
-  if(reader.get("objects", objects_reader) == false)
-    throw std::runtime_error("No objects specified");
+    FileReader objects_reader;
+    if(reader.get("objects", objects_reader) == false)
+      throw std::runtime_error("No objects specified");
 
-  std::vector<FileReader> objects_readers = objects_reader.get_sections();
-  for(std::vector<FileReader>::iterator i = objects_readers.begin(); i != objects_readers.end(); ++i)
+    std::vector<FileReader> objects_readers = objects_reader.get_sections();
+    for(std::vector<FileReader>::iterator i = objects_readers.begin(); i != objects_readers.end(); ++i)
     {
       add_object(*i);
     }
 
-  if (debug) std::cout << "Finished parsing" << std::endl;
+    if (debug) std::cout << "Finished parsing" << std::endl;
+  }
 }
 
 void
@@ -155,6 +160,8 @@
     // FIXME: disabled due to work on the editor: add(new ParticleSystem(reader));
   } else if(reader.get_name() == "scriptable-object") {    
     add(new ScriptableObject(reader));
+  } else if(reader.get_name() == "decal") {    
+    add(new Decal(reader));
   } else if (reader.get_name() == "vrdummy") {
     add(new VRDummy(reader));
   } else if (reader.get_name() == "swarm") {

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-26 19:28:19 UTC (rev 3082)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-26 20:12:01 UTC (rev 3083)
@@ -16,17 +16,44 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "decal.hpp"
+#include "objects/decal.hpp"
 
-Decal::Decal()
-  : m_surface(),
-    m_scale(),
-    m_angle(),
-    m_hflip(),
-    m_vflip()
+#include "engine/sector.hpp"
+#include "scenegraph/scene_graph.hpp"
+#include "display/surface_drawing_request.hpp"
+#include "display/surface_drawing_parameters.hpp"
+
+Decal::Decal(const FileReader& reader)
 {
-  //m_drawable.reset(new Sprite3DDrawingRequest(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
-  //Sector::current()->get_scene_graph().add_drawable(m_drawable);
+  std::string path;
+  Vector2f pos;
+  Vector2f scale(1.0f, 1.0f);
+  float    angle = 0.0f;
+
+  bool hflip = false;
+  bool vflip = false;
+
+  reader.get("pos",   pos);
+  reader.get("path",  path);
+  reader.get("scale", scale);
+  reader.get("angle", angle);
+  reader.get("vflip", vflip);
+  reader.get("hflip", hflip);
+
+  Surface surface = Surface(Pathname(path));
+
+  SurfaceDrawingParameters params;
+  boost::shared_ptr<SurfaceDrawingRequest> drawable(new SurfaceDrawingRequest(surface,
+                                                                              params
+                                                                              .set_pos(pos)
+                                                                              .set_angle(angle)
+                                                                              .set_hflip(hflip)
+                                                                              .set_vflip(vflip)
+                                                                              .set_scale(scale),
+                                                                              0, 
+                                                                              Matrix::identity()));
+
+  Sector::current()->get_scene_graph().add_drawable(drawable);
 }
 
 Decal::~Decal()

Modified: trunk/windstille/src/objects/decal.hpp
===================================================================
--- trunk/windstille/src/objects/decal.hpp	2009-08-26 19:28:19 UTC (rev 3082)
+++ trunk/windstille/src/objects/decal.hpp	2009-08-26 20:12:01 UTC (rev 3083)
@@ -25,17 +25,9 @@
 class Decal : public GameObject
 {
 private:
-  Surface m_surface;
 
-  /** scale of the object, independed in x and y axis */
-  Vector2f m_scale;
-  float    m_angle;
-
-  bool m_hflip;
-  bool m_vflip;
-
 public:
-  Decal();
+  Decal(const FileReader& reader);
   ~Decal();
   
   void draw (SceneContext& context);



From grumbel at mail.berlios.de  Thu Aug 27 01:15:42 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 01:15:42 +0200
Subject: [Windstille-commit] r3084 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200908262315.n7QNFg7w025201@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 01:15:39 +0200 (Thu, 27 Aug 2009)
New Revision: 3084

Modified:
   trunk/windstille/data/sectors/trainstation/bar.wst
   trunk/windstille/data/sectors/trainstation/bathroom.wst
   trunk/windstille/data/sectors/trainstation/blendtiles.wst
   trunk/windstille/data/sectors/trainstation/boxstack_test.wst
   trunk/windstille/data/sectors/trainstation/cave.wst
   trunk/windstille/data/sectors/trainstation/city.wst
   trunk/windstille/data/sectors/trainstation/container.wst
   trunk/windstille/data/sectors/trainstation/elevator.wst
   trunk/windstille/data/sectors/trainstation/greenstuff.wst
   trunk/windstille/data/sectors/trainstation/house1.wst
   trunk/windstille/data/sectors/trainstation/mine.wst
   trunk/windstille/data/sectors/trainstation/office.wst
   trunk/windstille/data/sectors/trainstation/stairtest.wst
   trunk/windstille/data/sectors/trainstation/steelplatetest.wst
   trunk/windstille/data/sectors/trainstation/toilet.wst
   trunk/windstille/data/sectors/trainstation/train.wst
   trunk/windstille/data/sectors/trainstation/trainstation.wst
   trunk/windstille/data/sectors/trainstation/worker.wst
Log:
Increased version number to 3

Modified: trunk/windstille/data/sectors/trainstation/bar.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/bar.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/bar.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0.5 0.5 0.5 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/bathroom.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/bathroom.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/bathroom.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/blendtiles.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/blendtiles.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/blendtiles.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/boxstack_test.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/boxstack_test.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/boxstack_test.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/cave.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/city.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/city.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/city.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0.1 0.1 0.2 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/container.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/container.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/container.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/elevator.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/elevator.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/elevator.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/greenstuff.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/greenstuff.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/greenstuff.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/house1.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/office.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/office.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/office.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/stairtest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/steelplatetest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/steelplatetest.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/steelplatetest.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/toilet.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0.5 0.5 0.5 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/train.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/train.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/train.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")

Modified: trunk/windstille/data/sectors/trainstation/worker.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-26 20:12:01 UTC (rev 3083)
+++ trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-26 23:15:39 UTC (rev 3084)
@@ -1,7 +1,7 @@
 ;; -*- scheme -*-
 
 (windstille-sector
-  (version 2)
+  (version 3)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")



From grumbel at mail.berlios.de  Thu Aug 27 01:16:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 01:16:25 +0200
Subject: [Windstille-commit] r3085 - trunk/windstille/src/font
Message-ID: <200908262316.n7QNGP9D026361@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 01:16:24 +0200 (Thu, 27 Aug 2009)
New Revision: 3085

Modified:
   trunk/windstille/src/font/ttf_font.hpp
Log:
Documented TTFFontManager

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-08-26 23:15:39 UTC (rev 3084)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-08-26 23:16:24 UTC (rev 3085)
@@ -52,9 +52,10 @@
 
 class TTFFont
 {
-public:
+private:
   static void init();
   static void deinit();
+  friend class TTFFontManager;
 
 public:
   TTFFont(const Pathname& file, int size, const FontEffect& effect = NoFontEffect());
@@ -82,6 +83,10 @@
   boost::scoped_ptr<TTFFontImpl> impl;
 };
 
+/** 
+ * Simple wrapper class to call TTFFont::init()/deinit() so we can
+ * use proper RAII.
+ */
 class TTFFontManager
 {
 public:



From grumbel at mail.berlios.de  Thu Aug 27 01:48:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 01:48:44 +0200
Subject: [Windstille-commit] r3086 - trunk/windstille/src/sprite3d
Message-ID: <200908262348.n7QNmiIR000228@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 01:48:43 +0200 (Thu, 27 Aug 2009)
New Revision: 3086

Modified:
   trunk/windstille/src/sprite3d/data.cpp
Log:
Changed Sprite3D to use plain old ifstream instead of Physfs

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-26 23:16:24 UTC (rev 3085)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-26 23:48:43 UTC (rev 3086)
@@ -19,7 +19,10 @@
 #include "sprite3d/data.hpp"
 
 #include <boost/scoped_array.hpp>
+#include <fstream>
 #include <physfs.h>
+#include <string.h>
+#include <errno.h>
 #include <stdexcept>
 
 #include "util/util.hpp"
@@ -29,51 +32,51 @@
 
 static const int FORMAT_VERSION = 2;
 
-static inline float read_float(PHYSFS_file* file)
+static inline float read_float(std::istream& in)
 {
   float result;
-
-  if(PHYSFS_readULE32(file, reinterpret_cast<PHYSFS_uint32*>(&result)) == 0) 
+  
+  if (!in.read(reinterpret_cast<char*>(&result), sizeof(result)))
   {
     std::ostringstream msg;
-    msg << "Problem reading float value: " << PHYSFS_getLastError();
+    msg << "Problem reading float value: " << strerror(errno);
     throw std::runtime_error(msg.str());
   }
   else
   {
-    // FIXME: is this platform independent? -> should be, since
-    // endianess is handled in readULE32
     return result;
   }
 }
 
-static inline uint16_t read_uint16_t(PHYSFS_file* file)
+static inline uint16_t read_uint16_t(std::istream& in)
 {
   uint16_t result;
-  if(PHYSFS_readULE16(file, &result) == 0) 
+
+  if (!in.read(reinterpret_cast<char*>(&result), sizeof(result)))
   {
     std::ostringstream msg;
-    msg << "Problem reading uint16 value: " << PHYSFS_getLastError();
+    msg << "Problem reading uint16 value: " << strerror(errno);
     throw std::runtime_error(msg.str());
   }
-  return result;
+  {
+    return result;
+  }
 }
 
-static inline std::string read_string(PHYSFS_file* file, size_t size)
+static inline std::string read_string(std::istream& in, size_t size)
 {
   boost::scoped_array<char> buffer(new char[size+1]);
-  if(PHYSFS_read(file, buffer.get(), size, 1) != 1) 
+
+  if (!in.read(reinterpret_cast<char*>(buffer.get()), size))
   {
     std::ostringstream msg;
-    msg << "Problem reading string value: " << PHYSFS_getLastError();
+    msg << "Problem reading string value: " << strerror(errno);
     throw std::runtime_error(msg.str());
   }
   else
   {
-    buffer[size] = 0;
-    std::string ret = buffer.get();
-
-    return ret;
+    buffer[size] = '\0';
+    return std::string(buffer.get());
   }
 }
 
@@ -82,123 +85,136 @@
     attachment_points(),
     actions()
 {
-  PHYSFS_file* file = PHYSFS_openRead(filename.get_physfs_path().c_str());
-  if(!file) {
+  std::ifstream in(filename.get_sys_path().c_str(), std::ios::binary);
+
+  if (!in) 
+  {
     std::ostringstream msg;
-    msg << "Couldn't open '" << filename << "': "
-        << PHYSFS_getLastError();
+    msg << "Couldn't open '" << filename << "'";
     throw std::runtime_error(msg.str());
   }
 
-  try {
-    std::string magic = read_string(file, 4);
+  try 
+  {
+    std::string magic = read_string(in, 4);
     if(magic != "W3DS")
       throw std::runtime_error("Not a windstille 3d sprite file");
-    uint16_t format_version = read_uint16_t(file);
+    uint16_t format_version = read_uint16_t(in);
     if(format_version > FORMAT_VERSION)
       throw std::runtime_error("sprite file format too new");
     if(format_version < FORMAT_VERSION)
       throw std::runtime_error("sprite file format too old");
 
-    uint16_t mesh_count = read_uint16_t(file);
+    uint16_t mesh_count = read_uint16_t(in);
     if(mesh_count == 0)
       throw std::runtime_error("Sprite3D contains no meshs");
-    uint16_t attachment_point_count = read_uint16_t(file);
-    uint16_t action_count = read_uint16_t(file);
+    uint16_t attachment_point_count = read_uint16_t(in);
+    uint16_t action_count = read_uint16_t(in);
     if(action_count == 0)
       throw std::runtime_error("Sprite3D contains no actions");
 
     // read meshs
     meshs.resize(mesh_count);
-    for(std::vector<Mesh>::iterator i = meshs.begin(); i != meshs.end(); ++i) {
+    for(std::vector<Mesh>::iterator i = meshs.begin(); i != meshs.end(); ++i) 
+    {
       Mesh& mesh = *i;
 
-      std::string texturename = read_string(file, 64);
+      std::string texturename = read_string(in, 64);
       texturename = filename.get_dirname().get_physfs_path() + basename(texturename);
-      mesh.triangle_count = read_uint16_t(file);
-      mesh.vertex_count   = read_uint16_t(file);
+      mesh.triangle_count = read_uint16_t(in);
+      mesh.vertex_count   = read_uint16_t(in);
 
       mesh.texture = TextureManager::current()->get(Pathname(texturename));
 
       // read triangles
       mesh.vertex_indices.reserve(mesh.triangle_count * 3);
-      for(uint16_t v = 0; v < mesh.triangle_count * 3; ++v) {
-        mesh.vertex_indices.push_back(read_uint16_t(file));
+      for(uint16_t v = 0; v < mesh.triangle_count * 3; ++v) 
+      {
+        mesh.vertex_indices.push_back(read_uint16_t(in));
       }
       
       mesh.normals.reserve(mesh.triangle_count * 3);
-      for(uint16_t n = 0; n < mesh.triangle_count * 3; ++n) {
-        mesh.normals.push_back(read_float(file));
+      for(uint16_t n = 0; n < mesh.triangle_count * 3; ++n) 
+      {
+        mesh.normals.push_back(read_float(in));
       }
 
       mesh.tex_coords.reserve(mesh.vertex_count * 2);
-      for(uint16_t v = 0; v < mesh.vertex_count * 2; ++v) {
-        mesh.tex_coords.push_back(read_float(file));
+      for(uint16_t v = 0; v < mesh.vertex_count * 2; ++v) 
+      {
+        mesh.tex_coords.push_back(read_float(in));
       }
     }
 
     // read attachment points
     attachment_points.reserve(attachment_point_count);
-    for(uint16_t a = 0; a < attachment_point_count; ++a) {
-      attachment_points.push_back(read_string(file, 64));
+    for(uint16_t a = 0; a < attachment_point_count; ++a) 
+    {
+      attachment_points.push_back(read_string(in, 64));
     }
 
     // read actions
     actions.resize(action_count);
-    for(std::vector<Action>::iterator i = actions.begin(); i != actions.end(); ++i) {
+    for(std::vector<Action>::iterator i = actions.begin(); i != actions.end(); ++i) 
+    {
       Action& action = *i;
 
-      action.name = read_string(file, 64);
-      action.speed = read_float(file);
-      uint16_t marker_count = read_uint16_t(file);
-      uint16_t frame_count  = read_uint16_t(file);
+      action.name = read_string(in, 64);
+      action.speed = read_float(in);
+      uint16_t marker_count = read_uint16_t(in);
+      uint16_t frame_count  = read_uint16_t(in);
 
       // read markers
       action.markers.resize(marker_count);
-      for(uint16_t m = 0; m < action.markers.size(); ++m) {
+      for(uint16_t m = 0; m < action.markers.size(); ++m) 
+      {
         Marker& marker = action.markers[m];
-        marker.name  = read_string(file, 64);
-        marker.frame = read_uint16_t(file);
+        marker.name  = read_string(in, 64);
+        marker.frame = read_uint16_t(in);
       }
 
       // read frames
       action.frames.resize(frame_count);
-      for(uint16_t f = 0; f < action.frames.size(); ++f) {
+      for(uint16_t f = 0; f < action.frames.size(); ++f) 
+      {
         ActionFrame& frame = action.frames[f];
         
         frame.meshs.resize(mesh_count);
-        for(uint16_t m = 0; m < mesh_count; ++m) {
+        for(uint16_t m = 0; m < mesh_count; ++m) 
+        {
           MeshVertices& mesh = frame.meshs[m];
 
           mesh.vertices.resize(meshs[m].vertex_count * 3);
-          for(uint16_t v = 0; v < meshs[m].vertex_count * 3; ++v) {
-            mesh.vertices[v] = read_float(file);
+          for(uint16_t v = 0; v < meshs[m].vertex_count * 3; ++v) 
+          {
+            mesh.vertices[v] = read_float(in);
           }
         }
 
         frame.attachment_points.resize(attachment_point_count);
-        for(uint16_t a = 0; a < attachment_point_count; ++a) {
+        for(uint16_t a = 0; a < attachment_point_count; ++a) 
+        {
           AttachmentPointPosition& point = frame.attachment_points[a];
 
-          point.pos.x = read_float(file);
-          point.pos.y = read_float(file);
-          point.pos.z = read_float(file);
+          point.pos.x = read_float(in);
+          point.pos.y = read_float(in);
+          point.pos.z = read_float(in);
 
-          point.quat.w = -read_float(file);
-          point.quat.x =  read_float(file);
-          point.quat.y =  read_float(file);
-          point.quat.z =  read_float(file);
+          point.quat.w = -read_float(in);
+          point.quat.x =  read_float(in);
+          point.quat.y =  read_float(in);
+          point.quat.z =  read_float(in);
           point.quat.normalize();
         }
       }
     }
-  } catch(std::exception& e) {
-    PHYSFS_close(file);
+  }
+  catch(std::exception& e) 
+  {
     std::ostringstream msg;
     msg << "Problem while reading '" << filename << "': " << e.what();
     throw std::runtime_error(msg.str());
   }
-  PHYSFS_close(file);
 }
 
 Data::~Data()



From grumbel at mail.berlios.de  Thu Aug 27 02:00:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 02:00:25 +0200
Subject: [Windstille-commit] r3087 - in trunk/windstille/src: app input lisp
	screen sprite3d tile util
Message-ID: <200908270000.n7R00PDB001266@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 02:00:22 +0200 (Thu, 27 Aug 2009)
New Revision: 3087

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/input/input_manager.hpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/input_manager_sdl.hpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/screen/armature_test.cpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/sprite3d/data.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_factory.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
Log:
Some more Pathname, some less PhysFS

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/app/config.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -328,7 +328,7 @@
 {
   try 
     {
-      FileReader reader = FileReader::parse("config");
+      FileReader reader = FileReader::parse(Pathname("config"));
       if(reader.get_name() != "windstille-config") 
         {
           std::cerr << "Warning: Config file is not a windstille-config file.\n";

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -79,7 +79,7 @@
       WindstilleControllerDescription controller_description;
       InputManagerSDL   input_manager(controller_description);
       ScreenManager     screen_manager;
-      TileFactory       tile_factory("tiles.scm");
+      TileFactory       tile_factory = TileFactory(Pathname("tiles.scm"));
 
       init_modules();
     
@@ -160,12 +160,12 @@
     
   {     
     if (config.get<std::string>("primary-controller-file").is_set())
-      InputManagerSDL::current()->load(config.get<std::string>("primary-controller-file").get());
+      InputManagerSDL::current()->load(Pathname(config.get<std::string>("primary-controller-file").get()));
     else
-      InputManagerSDL::current()->load("controller/keyboard.scm");
+      InputManagerSDL::current()->load(Pathname("controller/keyboard.scm"));
 
     if (config.get<std::string>("secondary-controller-file").is_set())
-      InputManagerSDL::current()->load(config.get<std::string>("secondary-controller-file").get());
+      InputManagerSDL::current()->load(Pathname(config.get<std::string>("secondary-controller-file").get()));
   }
 }
 

Modified: trunk/windstille/src/input/input_manager.hpp
===================================================================
--- trunk/windstille/src/input/input_manager.hpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/input/input_manager.hpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -36,9 +36,6 @@
   {}
   virtual ~InputManager() {}
 
-  virtual void load(const std::string& filename) =0;
-  virtual void update(float delta) =0;
-  
   const ControllerDescription& get_controller_description() const { return controller_description; }
   const Controller& get_controller() const;
   void clear();

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -106,7 +106,7 @@
 }
 
 void
-InputManagerSDL::load(const std::string& filename)
+InputManagerSDL::load(const Pathname& filename)
 {
   FileReader reader = FileReader::parse(filename);
 

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -27,6 +27,7 @@
 
 class FileReader;
 class InputManagerSDLImpl;
+class Pathname;
 
 struct JoystickButtonBinding
 {
@@ -101,7 +102,7 @@
   InputManagerSDL(const ControllerDescription& controller_description);
   virtual ~InputManagerSDL();
 
-  void load(const std::string& filename);
+  void load(const Pathname& filename);
 
   void update(float delta);
 

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -19,6 +19,7 @@
 #include "lisp/parser.hpp"
 
 #include <boost/scoped_ptr.hpp>
+#include <fstream>
 #include <sstream>
 #include <stdio.h>
 #include <string.h>
@@ -67,7 +68,7 @@
 Lisp*
 Parser::parse(const std::string& filename)
 {
-  IFileStream in(filename);
+  std::ifstream in(filename.c_str());
   if(!in.good()) {
     std::stringstream msg;
     msg << "Parser problem: Couldn't open file '" << filename << "'.";

Modified: trunk/windstille/src/screen/armature_test.cpp
===================================================================
--- trunk/windstille/src/screen/armature_test.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/screen/armature_test.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -34,10 +34,10 @@
     yrot(0.0f),
     zrot(0.0f)
 {
-  FileReader model_reader = FileReader::parse("armature/mesh.mesh");
+  FileReader model_reader = FileReader::parse(Pathname("armature/mesh.mesh"));
   model.reset(new Model(model_reader, "armature/"));
 
-  FileReader armature_reader = FileReader::parse("armature/armature.arm");
+  FileReader armature_reader = FileReader::parse(Pathname("armature/armature.arm"));
   armature.reset(new Armature(armature_reader));
 
   std::vector<std::string> file_lst;
@@ -46,7 +46,9 @@
     for (char **i = dirlist; *i != NULL; ++i)
       if (!PHYSFS_isDirectory((std::string("armature/pose/") + *i).c_str())) {
         std::cout << "PoseFile: " << *i << std::endl;
-        FileReader pose_reader = FileReader::parse(std::string("armature/pose/") + *i);
+        Pathname path("armature/pose/");
+        path.append_path(*i);
+        FileReader pose_reader = FileReader::parse(path);
         poses.push_back(new Pose(pose_reader));       
       }
     PHYSFS_freeList(dirlist);

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -39,7 +39,7 @@
 {
   try 
   {
-    FileReader reader = FileReader::parse("navigation.nav");
+    FileReader reader = FileReader::parse(Pathname("navigation.nav"));
     graph->load(reader);
   }
   catch(std::exception& err) 

Modified: trunk/windstille/src/sprite3d/data.cpp
===================================================================
--- trunk/windstille/src/sprite3d/data.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/sprite3d/data.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -120,11 +120,12 @@
       Mesh& mesh = *i;
 
       std::string texturename = read_string(in, 64);
-      texturename = filename.get_dirname().get_physfs_path() + basename(texturename);
       mesh.triangle_count = read_uint16_t(in);
       mesh.vertex_count   = read_uint16_t(in);
 
-      mesh.texture = TextureManager::current()->get(Pathname(texturename));
+      Pathname path = filename.get_dirname();
+      path.append_path(basename(texturename));
+      mesh.texture = TextureManager::current()->get(path);
 
       // read triangles
       mesh.vertex_indices.reserve(mesh.triangle_count * 3);

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -43,7 +43,7 @@
   return true;
 }
 
-TileFactory::TileFactory(const std::string& filename)
+TileFactory::TileFactory(const Pathname& filename)
   : tiles(),
     packers(),
     color_packer(),

Modified: trunk/windstille/src/tile/tile_factory.hpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.hpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/tile/tile_factory.hpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -51,7 +51,7 @@
   iterator end()   { return tiles.end(); }
 
   /** Create a TileFactory from a given tile definition file */
-  TileFactory(const std::string& filename);
+  TileFactory(const Pathname& filename);
   ~TileFactory();
   
   /**

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -56,28 +56,6 @@
     }  
 }
 
-FileReader
-FileReader::parse(const std::string& filename)
-{
-  lisp::Lisp* root = lisp::Parser::parse(filename);
-  if (!root)
-    {
-      std::ostringstream msg;
-      msg << "'" << filename << "': file not found";
-      throw std::runtime_error(msg.str());
-    }
-  else if (root && root->get_type() == lisp::Lisp::TYPE_LIST && root->get_list_size() >= 1)
-    {
-      return SExprFileReader(root, root->get_list_elem(0));
-    }
-  else
-    {
-      std::ostringstream msg;
-      msg << "'" << filename << "': not a valid sexpr file";
-      throw std::runtime_error(msg.str());
-    }
-}
-
 FileReader::FileReader(boost::shared_ptr<FileReaderImpl> impl_)
   : impl(impl_)
 {

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-08-26 23:48:43 UTC (rev 3086)
+++ trunk/windstille/src/util/file_reader.hpp	2009-08-27 00:00:22 UTC (rev 3087)
@@ -34,7 +34,6 @@
 {
 public:
   static FileReader parse(const Pathname& filename);
-  static FileReader parse(const std::string& filename);
   static FileReader parse(std::istream& stream, const std::string& filename);
 
   FileReader(boost::shared_ptr<FileReaderImpl> impl_);



From grumbel at mail.berlios.de  Thu Aug 27 02:04:40 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 02:04:40 +0200
Subject: [Windstille-commit] r3088 - trunk/windstille/src/tile
Message-ID: <200908270004.n7R04ef9001667@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 02:04:39 +0200 (Thu, 27 Aug 2009)
New Revision: 3088

Modified:
   trunk/windstille/src/tile/tile_map.cpp
Log:
Removed PhysFS dependency

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-27 00:00:22 UTC (rev 3087)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-27 00:04:39 UTC (rev 3088)
@@ -22,7 +22,6 @@
 #include <stdexcept>
 #include <stdio.h>
 #include <stdint.h>
-#include <physfs.h>
 
 #include "tile/tile.hpp"
 #include "tile/tile_factory.hpp"
@@ -56,48 +55,19 @@
                                "data defined before width and height");
     }
 
-  std::string data_filename;
-  if (props.get("data-file", data_filename))
+  Field<int> tmpfield(width, height);
+  
+  props.get("data", tmpfield.get_vector());
+  
+  field = Field<Tile*>(width, height);
+  for (int y = 0; y < field.get_height (); ++y) 
+  {
+    for (int x = 0; x < field.get_width (); ++x)
     {
-      PHYSFS_file* file = PHYSFS_openRead(data_filename.c_str());
-      if (!file)
-        {
-          throw std::runtime_error("Couldn't open tiledata file: " + data_filename);
-        }
-      
-      field = Field<Tile*>(width, height);
-
-      for(int y = 0; y < height; ++y)
-        for(int x = 0; x < width; ++x)
-          {
-            uint16_t result;
-            if(PHYSFS_readULE16(file, &result) == 0) {
-              std::ostringstream msg;
-              msg << "Problem reading uint16 value: " << PHYSFS_getLastError();
-              throw std::runtime_error(msg.str());
-            }
-
-            field(x, y) = TileFactory::current()->create(result);
-          }
-
-      PHYSFS_close(file);
+      field(x, y) = TileFactory::current()->create(tmpfield(x, y));
     }
-  else // read data directly from the levelfile
-    {
-      Field<int> tmpfield(width, height);
-
-      props.get("data", tmpfield.get_vector());
+  }
   
-      field = Field<Tile*>(width, height);
-      for (int y = 0; y < field.get_height (); ++y) 
-        {
-          for (int x = 0; x < field.get_width (); ++x)
-            {
-              field(x, y) = TileFactory::current()->create(tmpfield(x, y));
-            }
-        }
-    }
-
   if (field.size() == 0)
     throw std::runtime_error("No tiles defined in tilemap");  
 }



From grumbel at mail.berlios.de  Thu Aug 27 11:10:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 11:10:39 +0200
Subject: [Windstille-commit] r3089 - in trunk/windstille/src: app lisp
	scripting
Message-ID: <200908270910.n7R9Ad2b017698@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 11:10:38 +0200 (Thu, 27 Aug 2009)
New Revision: 3089

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/lisp/writer.cpp
   trunk/windstille/src/lisp/writer.hpp
   trunk/windstille/src/scripting/util.cpp
Log:
Use Pathname in lisp::Writer

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-27 00:04:39 UTC (rev 3088)
+++ trunk/windstille/src/app/config.cpp	2009-08-27 09:10:38 UTC (rev 3089)
@@ -381,7 +381,7 @@
 Config::save()
 {
   try {
-    lisp::Writer writer("config");
+    lisp::Writer writer(Pathname("config", Pathname::kUserPath));
 
     writer.write_comment(";; -*- scheme -*-");
     writer.write_comment(";; Windstille Config - automatically read and written on startup/quit");

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-27 00:04:39 UTC (rev 3088)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-27 09:10:38 UTC (rev 3089)
@@ -16,18 +16,22 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include "lisp/writer.hpp"
+
+#include <fstream>
+
+#include "util/pathname.hpp"
 #include "physfs/physfs_stream.hpp"
 
 namespace lisp
 {
 
-Writer::Writer(const std::string& filename)
+Writer::Writer(const Pathname& filename)
   : out(),
     out_owned(),
     indent_depth(),
     lists()
 {
-  out = new OFileStream(filename);
+  out = new std::ofstream(filename.get_sys_path().c_str());
   out_owned = true;
   indent_depth = 0;
 }

Modified: trunk/windstille/src/lisp/writer.hpp
===================================================================
--- trunk/windstille/src/lisp/writer.hpp	2009-08-27 00:04:39 UTC (rev 3088)
+++ trunk/windstille/src/lisp/writer.hpp	2009-08-27 09:10:38 UTC (rev 3089)
@@ -21,13 +21,15 @@
 #include <string>
 #include <vector>
 
+class Pathname;
+
 namespace lisp
 {
 
 class Writer
 {
 public:
-  Writer(const std::string& filename);
+  Writer(const Pathname& filename);
   Writer(std::ostream* out);
   ~Writer();
 

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-08-27 00:04:39 UTC (rev 3088)
+++ trunk/windstille/src/scripting/util.cpp	2009-08-27 09:10:38 UTC (rev 3089)
@@ -24,6 +24,7 @@
 #include "lisp/parser.hpp"
 #include "lisp/properties.hpp"
 #include "lisp/writer.hpp"
+#include "util/pathname.hpp"
 
 #include "scripting/util.hpp"
 
@@ -434,7 +435,7 @@
 
 void save_squirrel_table(HSQUIRRELVM v, int table_idx, const std::string& file)
 {
-  lisp::Writer writer(file);
+  lisp::Writer writer(Pathname(file, Pathname::kUserPath));
 
   writer.start_list("squirrel-state");
   save_squirrel_table(v, table_idx, writer);



From grumbel at mail.berlios.de  Thu Aug 27 11:11:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 11:11:01 +0200
Subject: [Windstille-commit] r3090 - trunk/windstille
Message-ID: <200908270911.n7R9B1gA017781@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 11:11:01 +0200 (Thu, 27 Aug 2009)
New Revision: 3090

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-27 09:10:38 UTC (rev 3089)
+++ trunk/windstille/TODO	2009-08-27 09:11:01 UTC (rev 3090)
@@ -10,15 +10,22 @@
 in the context of the whole game or if a potential performance
 enhanchment, actually enhanchmes anything at all.
 
+Pathname/PhysFS
+===============
+
+* Pathname needs a way to browse directories (wrapper boost::filesystem)
+
+* Sound stuff still uses PhysFS
+
 SceneGraph
 ==========
 
-* extract the scene composition from SceneContext and turn it into its
-  own class
+* change the editor to use the SceneGraph instead of the SceneContext API
 
-* write a object/decal.hpp class for use with the new level format
+* new levelformat use a different coordinate system then the old one,
+  figure out which to use before doing the final conversion
 
-* change the editor to use the SceneGraph instead of the SceneContext API
+* 
 
 Porting
 =======



From grumbel at mail.berlios.de  Thu Aug 27 11:12:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 11:12:45 +0200
Subject: [Windstille-commit] r3091 - in trunk/windstille: . src src/engine
	src/font src/lisp
Message-ID: <200908270912.n7R9CjL9017978@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 11:12:44 +0200 (Thu, 27 Aug 2009)
New Revision: 3091

Removed:
   trunk/windstille/src/physfs/
Modified:
   trunk/windstille/SConscript
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/lisp/writer.cpp
Log:
Removed now unused PhysFS streams

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-27 09:11:01 UTC (rev 3090)
+++ trunk/windstille/SConscript	2009-08-27 09:12:44 UTC (rev 3091)
@@ -242,11 +242,6 @@
         self.navgraph_lib  = wstlib_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
         self.particles_lib = wstlib_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
         
-        # libphysfs
-        physfs_env = wstlib_env.Clone()
-        physfs_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
-        self.physfs_lib = physfs_env.StaticLibrary('src/physfs', Glob('src/physfs/*.cpp'))
-
         # libdisplay
         display_env = wstlib_env.Clone()
         display_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
@@ -263,7 +258,7 @@
         windstille_env.Append(CPPPATH=['src', '.', 'external/SQUIRREL2/include/', 'src/scripting/'],
                               CPPDEFINES=["HAVE_BINRELOC"],
                               LIBS=[self.particles_lib, self.navgraph_lib, self.display_lib, 
-                                    self.util_lib, self.math_lib, self.physfs_lib,
+                                    self.util_lib, self.math_lib, 
                                     self.binreloc_lib, self.squirrel_lib, 
                                     'GL', 'GLU', 'GLEW',
                                     'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png',
@@ -300,7 +295,7 @@
         editor_env.Append(CPPPATH=['src'],
                           CPPDEFINES=["HAVE_BINRELOC"],
                           LIBS = [self.particles_lib, self.navgraph_lib, self.display_lib,
-                                  self.util_lib, self.physfs_lib, self.math_lib, self.binreloc_lib,
+                                  self.util_lib, self.math_lib, self.binreloc_lib,
                                   'GL', 'GLEW', 'SDL_image', 'physfs', 'boost_filesystem-mt'])
 
         editor_env.ParseConfig('Magick++-config --libs --cppflags | sed "s/-I/-isystem/g"')

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-27 09:11:01 UTC (rev 3090)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-27 09:12:44 UTC (rev 3091)
@@ -29,7 +29,6 @@
 #include "app/console.hpp"
 #include "scripting/game_objects.hpp"
 #include "scripting/squirrel_error.hpp"
-#include "physfs/physfs_stream.hpp"
 
 using Scripting::SquirrelError;
 

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-27 09:11:01 UTC (rev 3090)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-27 09:12:44 UTC (rev 3091)
@@ -27,7 +27,6 @@
 #include "display/blitter.hpp"
 #include "display/opengl_state.hpp"
 #include "display/software_surface.hpp"
-#include "physfs/physfs_stream.hpp"
 #include "font/ttf_font.hpp"
 
 TTFCharacter::TTFCharacter(const Rect& pos_,

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-08-27 09:11:01 UTC (rev 3090)
+++ trunk/windstille/src/lisp/parser.cpp	2009-08-27 09:12:44 UTC (rev 3091)
@@ -25,7 +25,6 @@
 #include <string.h>
 
 #include "lisp/lisp.hpp"
-#include "physfs/physfs_stream.hpp"
 
 namespace lisp
 {

Modified: trunk/windstille/src/lisp/writer.cpp
===================================================================
--- trunk/windstille/src/lisp/writer.cpp	2009-08-27 09:11:01 UTC (rev 3090)
+++ trunk/windstille/src/lisp/writer.cpp	2009-08-27 09:12:44 UTC (rev 3091)
@@ -18,9 +18,9 @@
 #include "lisp/writer.hpp"
 
 #include <fstream>
+#include <iostream>
 
 #include "util/pathname.hpp"
-#include "physfs/physfs_stream.hpp"
 
 namespace lisp
 {



From grumbel at mail.berlios.de  Thu Aug 27 11:56:49 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 11:56:49 +0200
Subject: [Windstille-commit] r3092 - in trunk/windstille/src: display editor
	engine math navigation scenegraph util
Message-ID: <200908270956.n7R9un6d025681@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 11:56:48 +0200 (Thu, 27 Aug 2009)
New Revision: 3092

Modified:
   trunk/windstille/src/display/blitter.hpp
   trunk/windstille/src/display/fill_screen_drawing_request.hpp
   trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
   trunk/windstille/src/editor/object_model_factory.hpp
   trunk/windstille/src/editor/particle_system_object_model.hpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/math/matrix.hpp
   trunk/windstille/src/math/origin.hpp
   trunk/windstille/src/math/point.hpp
   trunk/windstille/src/math/size.hpp
   trunk/windstille/src/navigation/edge.hpp
   trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
   trunk/windstille/src/util/command_line.hpp
   trunk/windstille/src/util/command_line_generic.hpp
   trunk/windstille/src/util/system.hpp
Log:
Fixed a few include guards

Modified: trunk/windstille/src/display/blitter.hpp
===================================================================
--- trunk/windstille/src/display/blitter.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/display/blitter.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -15,8 +15,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#ifndef HEADER_BLITTER_HPP
-#define HEADER_BLITTER_HPP
+#ifndef HEADER_WINDSTILLE_DISPLAY_BLITTER_HPP
+#define HEADER_WINDSTILLE_DISPLAY_BLITTER_HPP
 
 class SoftwareSurface;
 

Modified: trunk/windstille/src/display/fill_screen_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/fill_screen_drawing_request.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/display/fill_screen_drawing_request.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_FILL_SCREEN_DRAWING_REQUEST_HPP
-#define HEADER_FILL_SCREEN_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
 
 
 

Modified: trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
-#define HEADER_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
 
 
 class FillScreenPatternDrawingRequest : public DrawingRequest

Modified: trunk/windstille/src/editor/object_model_factory.hpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/editor/object_model_factory.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTOR_HPP
-#define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTOR_HPP
+#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTORY_HPP
+#define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTORY_HPP
 
 #include "editor/object_model.hpp"
 

Modified: trunk/windstille/src/editor/particle_system_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/particle_system_object_model.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/editor/particle_system_object_model.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_PARTICLE_SYSTEM_OBJECT_MODEL_HPP
-#define HEADER_PARTICLE_SYSTEM_OBJECT_MODEL_HPP
+#ifndef HEADER_WINDSTILLE_EDITOR_PARTICLE_SYSTEM_OBJECT_MODEL_HPP
+#define HEADER_WINDSTILLE_EDITOR_PARTICLE_SYSTEM_OBJECT_MODEL_HPP
 
 #include "editor/object_model.hpp"
 

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
-#define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
+#ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_THREAD_HPP
+#define HEADER_WINDSTILLE_ENGINE_SQUIRREL_THREAD_HPP
 
 #include "engine/script_manager.hpp"
 #include "util/pathname.hpp"

Modified: trunk/windstille/src/math/matrix.hpp
===================================================================
--- trunk/windstille/src/math/matrix.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/math/matrix.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -27,8 +27,8 @@
 **    (if your name is missing here, please add it)
 */
 
-#ifndef HEADER_MATH_MATRIX_HPP
-#define HEADER_MATH_MATRIX_HPP
+#ifndef HEADER_WINDSTILLE_MATH_MATRIX_HPP
+#define HEADER_WINDSTILLE_MATH_MATRIX_HPP
 
 class Vector3;
 

Modified: trunk/windstille/src/math/origin.hpp
===================================================================
--- trunk/windstille/src/math/origin.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/math/origin.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -30,8 +30,8 @@
 //! clanCore="Math"
 //! header=core.h
 
-#ifndef HEADER_MATH_ORIGIN_HPP
-#define HEADER_MATH_ORIGIN_HPP
+#ifndef HEADER_WINDSTILLE_MATH_ORIGIN_HPP
+#define HEADER_WINDSTILLE_MATH_ORIGIN_HPP
 
 #include "math/size.hpp"
 #include "math/point.hpp"

Modified: trunk/windstille/src/math/point.hpp
===================================================================
--- trunk/windstille/src/math/point.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/math/point.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -30,8 +30,8 @@
 //! clanCore="Math"
 //! header=core.h
 
-#ifndef HEADER_MATH_POINT_HPP
-#define HEADER_MATH_POINT_HPP
+#ifndef HEADER_WINDSTILLE_MATH_POINT_HPP
+#define HEADER_WINDSTILLE_MATH_POINT_HPP
 
 #if _MSC_VER > 1000
 #pragma once

Modified: trunk/windstille/src/math/size.hpp
===================================================================
--- trunk/windstille/src/math/size.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/math/size.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -30,8 +30,8 @@
 //! clanCore="Math"
 //! header=core.h
 
-#ifndef HEADER_MATH_SIZE_HPP
-#define HEADER_MATH_SIZE_HPP
+#ifndef HEADER_WINDSTILLE_MATH_SIZE_HPP
+#define HEADER_WINDSTILLE_MATH_SIZE_HPP
 
 #if _MSC_VER > 1000
 #pragma once

Modified: trunk/windstille/src/navigation/edge.hpp
===================================================================
--- trunk/windstille/src/navigation/edge.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/navigation/edge.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_NAVIGATION_SEGMENT_HPP
-#define HEADER_WINDSTILLE_NAVIGATION_SEGMENT_HPP
+#ifndef HEADER_WINDSTILLE_NAVIGATION_EDGE_HPP
+#define HEADER_WINDSTILLE_NAVIGATION_EDGE_HPP
 
 #include "math/line.hpp"
 #include "math/vector2f.hpp"

Modified: trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_SCENE_GRAPH_DRAWING_REQUEST_HPP
-#define HEADER_SCENE_GRAPH_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_DRAWING_REQUEST_HPP
 
 #include "scenegraph/scene_graph.hpp"
 #include "display/drawing_request.hpp"

Modified: trunk/windstille/src/util/command_line.hpp
===================================================================
--- trunk/windstille/src/util/command_line.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/util/command_line.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -30,8 +30,8 @@
 //! clanCore="System"
 //! header=core.h
 
-#ifndef HEADER_COMMAND_LINE_HPP
-#define HEADER_COMMAND_LINE_HPP
+#ifndef HEADER_WINDSTILLE_UTIL_COMMAND_LINE_HPP
+#define HEADER_WINDSTILLE_UTIL_COMMAND_LINE_HPP
 
 #if _MSC_VER > 1000
 #pragma once

Modified: trunk/windstille/src/util/command_line_generic.hpp
===================================================================
--- trunk/windstille/src/util/command_line_generic.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/util/command_line_generic.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -27,8 +27,8 @@
 **    (if your name is missing here, please add it)
 */
 
-#ifndef HEADER_COMMAND_LINE_GENERIC_HPP
-#define HEADER_COMMAND_LINE_GENERIC_HPP
+#ifndef HEADER_WINDSTILLE_UTIL_COMMAND_LINE_GENERIC_HPP
+#define HEADER_WINDSTILLE_UTIL_COMMAND_LINE_GENERIC_HPP
 
 #if _MSC_VER > 1000
 #pragma once

Modified: trunk/windstille/src/util/system.hpp
===================================================================
--- trunk/windstille/src/util/system.hpp	2009-08-27 09:12:44 UTC (rev 3091)
+++ trunk/windstille/src/util/system.hpp	2009-08-27 09:56:48 UTC (rev 3092)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef SYSTEM_H_
-#define SYSTEM_H_
+#ifndef HEADER_WINDSTILLE_UTIL_SYSTEM_HPP
+#define HEADER_WINDSTILLE_UTIL_SYSTEM_HPP
 
 #include <string>
 



From grumbel at mail.berlios.de  Thu Aug 27 11:58:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 27 Aug 2009 11:58:56 +0200
Subject: [Windstille-commit] r3093 - in trunk/windstille: . tools
Message-ID: <200908270958.n7R9wu47026076@sheep.berlios.de>

Author: grumbel
Date: 2009-08-27 11:58:56 +0200 (Thu, 27 Aug 2009)
New Revision: 3093

Added:
   trunk/windstille/tools/
   trunk/windstille/tools/README
   trunk/windstille/tools/fix_include_guards.sh
   trunk/windstille/tools/image_rename.rb
   trunk/windstille/tools/include_optimize.rb
Log:
Added tools/ directory, containing some scripts for maintainance

Added: trunk/windstille/tools/README
===================================================================
--- trunk/windstille/tools/README	2009-08-27 09:56:48 UTC (rev 3092)
+++ trunk/windstille/tools/README	2009-08-27 09:58:56 UTC (rev 3093)
@@ -0,0 +1 @@
+Some small scripts and utilities to maintain the code base.

Added: trunk/windstille/tools/fix_include_guards.sh
===================================================================
--- trunk/windstille/tools/fix_include_guards.sh	2009-08-27 09:56:48 UTC (rev 3092)
+++ trunk/windstille/tools/fix_include_guards.sh	2009-08-27 09:58:56 UTC (rev 3093)
@@ -0,0 +1,7 @@
+#!/bin/sh
+
+for i in "$@"; do
+    echo $i
+    NAME=$(echo $i | sed "s/[\/\.]/_/g;s/^/HEADER_WINDSTILLE_/" | tr [a-z] [A-Z])
+    sed  -i "s/^\(#[a-z]*\) *HEADER_.*/\1 $NAME/" $i; 
+done


Property changes on: trunk/windstille/tools/fix_include_guards.sh
___________________________________________________________________
Name: svn:executable
   + *

Added: trunk/windstille/tools/image_rename.rb
===================================================================
--- trunk/windstille/tools/image_rename.rb	2009-08-27 09:56:48 UTC (rev 3092)
+++ trunk/windstille/tools/image_rename.rb	2009-08-27 09:58:56 UTC (rev 3093)
@@ -0,0 +1,34 @@
+#!/usr/bin/ruby -w
+
+$LOAD_PATH.push("/home/ingo/projects/pingus/svn/trunk/sexpr/")
+
+require "sexpr.rb"
+
+def get_nodes(path, sexpr)
+  
+end
+
+if ARGV.empty? then
+  puts "Usage: #{$0} FILENAME..."
+else
+  ARGV.each { |filename|
+    sexpr = SExpr::SExpr::parse(File.new(filename).read(), true, true)
+    sexpr.each{|s|
+      s.write($stdout)
+    }
+
+    nodes = get_nodes(sexpr, [root(),
+                              sym("windstille-sector"),
+                              sym("layers"),
+                              sym("layer"),
+                              sym("objects"),
+                              sym("decal"),
+                              sym("path"),
+                              type("string")])
+    nodes.each{|expr|
+      # process
+    }
+  }
+end
+
+# EOF #


Property changes on: trunk/windstille/tools/image_rename.rb
___________________________________________________________________
Name: svn:executable
   + *

Added: trunk/windstille/tools/include_optimize.rb
===================================================================
--- trunk/windstille/tools/include_optimize.rb	2009-08-27 09:56:48 UTC (rev 3092)
+++ trunk/windstille/tools/include_optimize.rb	2009-08-27 09:58:56 UTC (rev 3093)
@@ -0,0 +1,49 @@
+#!/usr/bin/ruby -w
+
+def write_file_without_lines(source, lines, without_lines)
+  out = File.new(source, 'w')
+  lines.each_with_index { |v, i|
+    if without_lines.member? i then
+      out.print "//", v
+    else
+      out.print v
+    end
+  }
+  out.close()
+end
+
+def optimize(source, target)
+  lines = File.new(source).readlines()
+  includes = []
+  lines.each_with_index { |v, i|
+    if v =~ /^#include/ then
+      # puts v
+      includes << i
+    end
+  }
+
+  unneeded_includes = []
+
+  includes.each{|i|
+    # puts i
+    write_file_without_lines(source, lines, [i])
+
+    ret = system("scons", target)
+    if ret then
+      puts "INCUNNEEDED #{source} #{lines[i].chop}" 
+      unneeded_includes << i
+    end
+  }
+
+  write_file_without_lines(source, lines, unneeded_includes)
+end
+
+ARGV.each{ |filename|
+  source = filename
+  target = "build/#{filename.gsub(/\..pp$/, '.o')}"
+  puts "#{source} => #{target}"
+
+  optimize(source, target)
+}
+
+# EOF #


Property changes on: trunk/windstille/tools/include_optimize.rb
___________________________________________________________________
Name: svn:executable
   + *



From grumbel at mail.berlios.de  Fri Aug 28 15:50:09 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 15:50:09 +0200
Subject: [Windstille-commit] r3094 - in trunk/windstille:
	data/sectors/trainstation src/editor
Message-ID: <200908281350.n7SDo9eK013972@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 15:50:05 +0200 (Fri, 28 Aug 2009)
New Revision: 3094

Modified:
   trunk/windstille/data/sectors/trainstation/bar.wst
   trunk/windstille/data/sectors/trainstation/bathroom.wst
   trunk/windstille/data/sectors/trainstation/blendtiles.wst
   trunk/windstille/data/sectors/trainstation/boxstack_test.wst
   trunk/windstille/data/sectors/trainstation/cave.wst
   trunk/windstille/data/sectors/trainstation/city.wst
   trunk/windstille/data/sectors/trainstation/container.wst
   trunk/windstille/data/sectors/trainstation/elevator.wst
   trunk/windstille/data/sectors/trainstation/greenstuff.wst
   trunk/windstille/data/sectors/trainstation/house1.wst
   trunk/windstille/data/sectors/trainstation/mine.wst
   trunk/windstille/data/sectors/trainstation/office.wst
   trunk/windstille/data/sectors/trainstation/stairtest.wst
   trunk/windstille/data/sectors/trainstation/steelplatetest.wst
   trunk/windstille/data/sectors/trainstation/toilet.wst
   trunk/windstille/data/sectors/trainstation/train.wst
   trunk/windstille/data/sectors/trainstation/trainstation.wst
   trunk/windstille/data/sectors/trainstation/worker.wst
   trunk/windstille/src/editor/sector_model.cpp
Log:
Renamed 'layers' section to 'objects'

Modified: trunk/windstille/data/sectors/trainstation/bar.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/bar.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/bar.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/bathroom.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/bathroom.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/bathroom.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -36,7 +36,7 @@
         (node1 4)
         (node2 1)
         (properties 0))))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/blendtiles.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/blendtiles.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/blendtiles.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Shadow")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/boxstack_test.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/boxstack_test.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/boxstack_test.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -216,7 +216,7 @@
         (node1 28)
         (node2 26)
         (properties 0))))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/cave.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Highlight")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/city.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/city.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/city.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/container.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/container.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/container.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/elevator.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/elevator.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/elevator.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/greenstuff.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/greenstuff.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/greenstuff.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Light")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/house1.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Light")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Mine")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/office.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/office.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/office.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/stairtest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "New Layer")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/steelplatetest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/steelplatetest.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/steelplatetest.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/toilet.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/train.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/train.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/train.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "New Layer")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -74,7 +74,7 @@
         (node1 10)
         (node2 4)
         (properties 0))))
-  (layers
+  (objects
     (layer
       (name "Trainstation")
       (visible #t)

Modified: trunk/windstille/data/sectors/trainstation/worker.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-28 13:50:05 UTC (rev 3094)
@@ -8,7 +8,7 @@
   (navigation
     (nodes)
     (edges))
-  (layers
+  (objects
     (layer
       (name "Scene")
       (visible #t)

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-27 09:58:56 UTC (rev 3093)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-28 13:50:05 UTC (rev 3094)
@@ -410,7 +410,7 @@
           nav_graph->load(navigation_section);
 
           FileReader layers_section;
-          reader.get("layers", layers_section);
+          reader.get("objects", layers_section);
 
           const std::vector<FileReader>& sections = layers_section.get_sections();
           for(std::vector<FileReader>::const_iterator i = sections.begin(); i != sections.end(); ++i)
@@ -450,7 +450,7 @@
   nav_graph->write(writer);
   writer.end_section();
 
-  writer.start_section("layers");
+  writer.start_section("objects");
   for(Gtk::ListStore::Children::iterator i = layer_tree->children().begin(); i != layer_tree->children().end(); ++i)
     {
       const Gtk::TreeRow& row = *i;



From grumbel at mail.berlios.de  Fri Aug 28 15:56:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 15:56:22 +0200
Subject: [Windstille-commit] r3095 - trunk/windstille/src/app
Message-ID: <200908281356.n7SDuMeo014535@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 15:56:21 +0200 (Fri, 28 Aug 2009)
New Revision: 3095

Modified:
   trunk/windstille/src/app/config.cpp
Log:
Fixed wrong path

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-08-28 13:50:05 UTC (rev 3094)
+++ trunk/windstille/src/app/config.cpp	2009-08-28 13:56:21 UTC (rev 3095)
@@ -328,7 +328,7 @@
 {
   try 
     {
-      FileReader reader = FileReader::parse(Pathname("config"));
+      FileReader reader = FileReader::parse(Pathname("config", Pathname::kUserPath));
       if(reader.get_name() != "windstille-config") 
         {
           std::cerr << "Warning: Config file is not a windstille-config file.\n";



From grumbel at mail.berlios.de  Fri Aug 28 16:01:11 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 16:01:11 +0200
Subject: [Windstille-commit] r3096 - in trunk/windstille/src: engine objects
Message-ID: <200908281401.n7SE1BTJ014996@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 16:01:02 +0200 (Fri, 28 Aug 2009)
New Revision: 3096

Added:
   trunk/windstille/src/objects/layer.cpp
   trunk/windstille/src/objects/layer.hpp
Modified:
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/objects/decal.hpp
   trunk/windstille/src/objects/laser_pointer.cpp
Log:
Added Layer class, so that basic loading of new levelformat is now working

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-28 13:56:21 UTC (rev 3095)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-28 14:01:02 UTC (rev 3096)
@@ -25,6 +25,7 @@
 #include "objects/box.hpp"
 #include "objects/character.hpp"
 #include "objects/decal.hpp"
+#include "objects/layer.hpp"
 #include "objects/elevator.hpp"
 #include "objects/hedgehog.hpp"
 #include "objects/laser_pointer.hpp"
@@ -65,12 +66,12 @@
   interactivebackground_tilemap = 0;
 
   parse_file(filename);
-  if (!interactive_tilemap)
-    throw std::runtime_error("No interactive-tilemap available");
+  if (interactive_tilemap)
+  {
+    // add interactive to collision engine
+    collision_engine->add(new CollisionObject(interactive_tilemap));
+  }
 
-  // add interactive to collision engine
-  collision_engine->add(new CollisionObject(interactive_tilemap));
-
   // Spawn the Player
   player = new Player();
   add(player);
@@ -162,6 +163,8 @@
     add(new ScriptableObject(reader));
   } else if(reader.get_name() == "decal") {    
     add(new Decal(reader));
+  } else if(reader.get_name() == "layer") {    
+    add(new Layer(reader));
   } else if (reader.get_name() == "vrdummy") {
     add(new VRDummy(reader));
   } else if (reader.get_name() == "swarm") {
@@ -280,13 +283,19 @@
 int
 Sector::get_width () const
 {
-  return interactive_tilemap->get_width() * TILE_SIZE;
+  if (interactive_tilemap)
+    return interactive_tilemap->get_width() * TILE_SIZE;
+  else
+    return 2560;
 }
 
 int
 Sector::get_height () const
 {
-  return interactive_tilemap->get_height() * TILE_SIZE;
+  if (interactive_tilemap)
+    return interactive_tilemap->get_height() * TILE_SIZE;
+  else
+    return 1600;
 }
 
 void

Modified: trunk/windstille/src/objects/decal.hpp
===================================================================
--- trunk/windstille/src/objects/decal.hpp	2009-08-28 13:56:21 UTC (rev 3095)
+++ trunk/windstille/src/objects/decal.hpp	2009-08-28 14:01:02 UTC (rev 3096)
@@ -25,6 +25,7 @@
 class Decal : public GameObject
 {
 private:
+  
 
 public:
   Decal(const FileReader& reader);

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-28 13:56:21 UTC (rev 3095)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-28 14:01:02 UTC (rev 3096)
@@ -64,77 +64,80 @@
 LaserPointer::draw(SceneContext& sc)
 {
   TileMap* tilemap = Sector::current()->get_tilemap();
-  Vector2f pos = Player::current()->get_pos();
-  pos.y -= 80;
-  Vector2f target; // = Sector::current()->get_collision_engine()->raycast(pos, angle);
+  if (tilemap)
+  {
+    Vector2f pos = Player::current()->get_pos();
+    pos.y -= 80;
+    Vector2f target; // = Sector::current()->get_collision_engine()->raycast(pos, angle);
 
-  // Ray position in Tile units
-  int x = static_cast<int>(pos.x / static_cast<float>(TILE_SIZE));
-  int y = static_cast<int>(pos.y / static_cast<float>(TILE_SIZE));
+    // Ray position in Tile units
+    int x = static_cast<int>(pos.x / static_cast<float>(TILE_SIZE));
+    int y = static_cast<int>(pos.y / static_cast<float>(TILE_SIZE));
 
-  Vector2f direction(cosf(angle) * 100.0f, sinf(angle) * 100.0f);
+    Vector2f direction(cosf(angle) * 100.0f, sinf(angle) * 100.0f);
 
-  int step_x = (direction.x > 0) ? 1 : -1;
-  int step_y = (direction.y > 0) ? 1 : -1;
+    int step_x = (direction.x > 0) ? 1 : -1;
+    int step_y = (direction.y > 0) ? 1 : -1;
 
-  float tMaxX = find_max(pos.x, direction.x);
-  float tMaxY = find_max(pos.y, direction.y);
+    float tMaxX = find_max(pos.x, direction.x);
+    float tMaxY = find_max(pos.y, direction.y);
 
-  float tDeltaX = (direction.x == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.x);
-  float tDeltaY = (direction.y == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.y);
+    float tDeltaX = (direction.x == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.x);
+    float tDeltaY = (direction.y == 0) ? 0 : fabsf(static_cast<float>(TILE_SIZE) / direction.y);
 
-  float t = 0;
+    float t = 0;
 
-  while(x >= 0 && x < tilemap->get_width() &&
-        y >= 0 && y < tilemap->get_height())
+    while(x >= 0 && x < tilemap->get_width() &&
+          y >= 0 && y < tilemap->get_height())
     {
       //sc.color().fill_rect(Rectf(Vector2f(x * TILE_SIZE, y * TILE_SIZE), Size(TILE_SIZE, TILE_SIZE)), 
       //                     Color(1.0, 1.0, 1.0, 0.5), 500);
 
       if (tilemap->get_pixel(x, y))
-        {
-          //return Vector2f(x * TILE_SIZE, y * TILE_SIZE);
-          goto done;
-        }
+      {
+        //return Vector2f(x * TILE_SIZE, y * TILE_SIZE);
+        goto done;
+      }
 
       // move one tile
       if (tMaxX < tMaxY)
-        {
-          t = tMaxX;
-          tMaxX += tDeltaX;
-          x = x + step_x;
-        }
+      {
+        t = tMaxX;
+        tMaxX += tDeltaX;
+        x = x + step_x;
+      }
       else 
-        {
-          t = tMaxY;
-          tMaxY += tDeltaY;
-          y = y + step_y;
-        }
+      {
+        t = tMaxY;
+        tMaxY += tDeltaY;
+        y = y + step_y;
+      }
     }
   
- done:
-  target = pos + Vector2f(t * direction.x, t * direction.y);
+  done:
+    target = pos + Vector2f(t * direction.x, t * direction.y);
   
-  Vector2f ray = target - pos;
+    Vector2f ray = target - pos;
 
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0,0), 10000,
-                                                                   sc.highlight().get_modelview());
-  array->set_mode(GL_LINES);
-  array->set_texture(noise);
-  array->set_blend_func(GL_SRC_ALPHA, GL_ONE);
+    VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0,0), 10000,
+                                                                     sc.highlight().get_modelview());
+    array->set_mode(GL_LINES);
+    array->set_texture(noise);
+    array->set_blend_func(GL_SRC_ALPHA, GL_ONE);
 
-  array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
-  array->texcoord(0, progress);
-  array->vertex(0, 0);
+    array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
+    array->texcoord(0, progress);
+    array->vertex(0, 0);
 
-  array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
-  array->texcoord((target - pos).magnitude()/256.0f, progress);
-  array->vertex(ray.x, ray.y);
+    array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
+    array->texcoord((target - pos).magnitude()/256.0f, progress);
+    array->vertex(ray.x, ray.y);
 
-  sc.highlight().draw(array);
-  laserpointer.set_blend_func(GL_SRC_ALPHA, GL_ONE);
-  sc.highlight().draw(laserpointer, ray);
-  sc.light().draw(laserpointer_light, ray);
+    sc.highlight().draw(array);
+    laserpointer.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+    sc.highlight().draw(laserpointer, ray);
+    sc.light().draw(laserpointer_light, ray);
+  }
 }
 
 void

Added: trunk/windstille/src/objects/layer.cpp
===================================================================
--- trunk/windstille/src/objects/layer.cpp	2009-08-28 13:56:21 UTC (rev 3095)
+++ trunk/windstille/src/objects/layer.cpp	2009-08-28 14:01:02 UTC (rev 3096)
@@ -0,0 +1,103 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "objects/layer.hpp"
+
+#include <stdexcept>
+
+#include "engine/sector.hpp"
+#include "engine/script_manager.hpp"
+
+Layer::Layer(const FileReader& reader)
+  : objects(),
+    new_objects()
+{
+  FileReader objects_reader;
+  if(reader.get("objects", objects_reader) == false)
+  {
+    throw std::runtime_error("No objects specified");
+  }
+  else
+  {
+    std::vector<FileReader> objects_readers = objects_reader.get_sections();
+    for(std::vector<FileReader>::iterator i = objects_readers.begin(); i != objects_readers.end(); ++i)
+    {
+      Sector::current()->add_object(*i);
+    }
+  }
+}
+
+Layer::~Layer()
+{
+}
+
+void
+Layer::commit_adds()
+{
+  // Add new game objects
+  for(Objects::iterator i = new_objects.begin(); i != new_objects.end(); ++i) {
+    objects.push_back(*i);
+  }
+  new_objects.clear();
+
+}
+
+void
+Layer::commit_removes()
+{
+  // remove objects
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ) 
+  {
+    boost::shared_ptr<GameObject>& object = *i;
+
+    if(object->is_removable()) 
+    {
+      if(object->get_name() != "") 
+      {
+        ScriptManager::current()->remove_object_from_squirrel(object);
+      }
+
+      i = objects.erase(i);
+      continue;
+    }
+
+    ++i;
+  }
+}
+
+void
+Layer::draw (SceneContext& /*context*/)
+{
+  // do nothing
+}
+
+void
+Layer::update (float delta)
+{
+  commit_adds();
+
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i) 
+    {
+      if ((*i)->is_active())
+        (*i)->update(delta);
+    }
+
+  commit_removes();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/objects/layer.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/objects/layer.hpp
===================================================================
--- trunk/windstille/src/objects/layer.hpp	2009-08-28 13:56:21 UTC (rev 3095)
+++ trunk/windstille/src/objects/layer.hpp	2009-08-28 14:01:02 UTC (rev 3096)
@@ -0,0 +1,54 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_OBJECTS_LAYER_HPP
+#define HEADER_WINDSTILLE_OBJECTS_LAYER_HPP
+
+#include "engine/game_object.hpp"
+
+class Layer : public GameObject
+{
+private:
+  typedef std::vector<boost::shared_ptr<GameObject> > Objects;
+
+  Objects objects;
+
+  /** container for newly created GameObjects (they'll be added once per frame
+   * in the update function */
+  Objects new_objects;
+
+private:
+  void commit_adds();
+  void commit_removes();
+
+public:
+  Layer(const FileReader& reader);
+  ~Layer();
+
+  void draw (SceneContext& context);
+  void update (float delta);
+ 
+
+private:
+  Layer(const Layer&);
+  Layer& operator=(const Layer&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/objects/layer.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Fri Aug 28 16:22:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 16:22:24 +0200
Subject: [Windstille-commit] r3097 - in trunk/windstille/src: display engine
	objects scenegraph
Message-ID: <200908281422.n7SEMOd6016988@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 16:22:23 +0200 (Fri, 28 Aug 2009)
New Revision: 3097

Removed:
   trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
Modified:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/drawing_request.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
   trunk/windstille/src/scenegraph/scene_graph.hpp
Log:
Implemented some support for rendermask in SceneGraph

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -211,6 +211,14 @@
     sc.light().render(*this);
     glPopMatrix();
 
+    if (sg)
+    {
+      glPushMatrix();
+      glMultMatrixf(gc_state.get_matrix().matrix);
+      sg->draw(Texture(), SceneContext::LIGHTMAP);
+      glPopMatrix();
+    }
+
     { // Copy lightmap to a texture
       OpenGLState state;
         
@@ -236,7 +244,7 @@
     {
       glPushMatrix();
       glMultMatrixf(gc_state.get_matrix().matrix);
-      sg->draw(Texture());
+      sg->draw(Texture(), SceneContext::COLORMAP);
       glPopMatrix();
     }
   }
@@ -274,6 +282,14 @@
   if (sc.get_render_mask() & SceneContext::HIGHLIGHTMAP)
   {
     sc.highlight().render(*this);
+
+    if (sg)
+    {
+      glPushMatrix();
+      glMultMatrixf(gc_state.get_matrix().matrix);
+      sg->draw(Texture(), SceneContext::HIGHLIGHTMAP);
+      glPopMatrix();
+    }
   }
 
   if (sc.get_render_mask() & SceneContext::CONTROLMAP)

Modified: trunk/windstille/src/display/drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/drawing_request.hpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/display/drawing_request.hpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -30,10 +30,14 @@
   Vector2f pos;
   float    z_pos;
   Matrix   modelview;
+  unsigned int render_mask;
 
 public:
   DrawingRequest(const Vector2f& pos_, float z_pos_ = 0,  const Matrix& modelview_ = Matrix::identity())
-    : pos(pos_), z_pos(z_pos_), modelview(modelview_)
+    : pos(pos_), 
+      z_pos(z_pos_), 
+      modelview(modelview_),
+      render_mask(0)
   {}
   virtual ~DrawingRequest() {}
   
@@ -68,6 +72,9 @@
   Matrix get_modelview() const
   { return modelview; }
 
+  void set_render_mask(unsigned int mask) { render_mask = mask; }
+  unsigned int get_render_mask() const { return render_mask; }
+
 private:
   DrawingRequest (const DrawingRequest&);
   DrawingRequest& operator= (const DrawingRequest&);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -40,7 +40,6 @@
 #include "objects/trigger.hpp"
 #include "objects/vrdummy.hpp"
 #include "scenegraph/scene_graph.hpp"
-#include "scenegraph/scene_graph_drawing_request.hpp"
 #include "sound/sound_manager.hpp"
 #include "tile/tile_map.hpp"
 

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -22,6 +22,7 @@
 #include "scenegraph/scene_graph.hpp"
 #include "display/surface_drawing_request.hpp"
 #include "display/surface_drawing_parameters.hpp"
+#include "display/scene_context.hpp"
 
 Decal::Decal(const FileReader& reader)
 {
@@ -33,6 +34,9 @@
   bool hflip = false;
   bool vflip = false;
 
+  int map_type = 0;
+  reader.get("type", map_type);
+
   reader.get("pos",   pos);
   reader.get("path",  path);
   reader.get("scale", scale);
@@ -43,6 +47,15 @@
   Surface surface = Surface(Pathname(path));
 
   SurfaceDrawingParameters params;
+
+  switch(map_type)
+  {
+    // FIXME: Evil hardcoded constans, see edtior/decal_object_model.hpp
+    case 0: break;
+    case 1: params.set_blend_func(GL_SRC_ALPHA, GL_ONE); break;
+    case 2: params.set_blend_func(GL_SRC_ALPHA, GL_ONE); break;
+  }
+
   boost::shared_ptr<SurfaceDrawingRequest> drawable(new SurfaceDrawingRequest(surface,
                                                                               params
                                                                               .set_pos(pos)
@@ -53,6 +66,21 @@
                                                                               0, 
                                                                               Matrix::identity()));
 
+  switch(map_type)
+  {
+    // FIXME: Evil hardcoded constans
+    case 0: // color
+      drawable->set_render_mask(SceneContext::COLORMAP);
+      break;
+
+    case 1: // lightmap
+      drawable->set_render_mask(SceneContext::LIGHTMAP);
+      break;
+
+    case 2: // highlight
+      drawable->set_render_mask(SceneContext::HIGHLIGHTMAP);
+      break;
+  }
   Sector::current()->get_scene_graph().add_drawable(drawable);
 }
 

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -38,11 +38,12 @@
 }
 
 void
-SceneGraph::draw(const Texture& tmp_texture)
+SceneGraph::draw(const Texture& tmp_texture, unsigned int mask)
 {
   for(DrawingRequests::iterator i = m_drawing_requests.begin(); i != m_drawing_requests.end(); ++i)
   {
-    (*i)->draw(tmp_texture);
+    if ((*i)->get_render_mask() & mask)
+      (*i)->draw(tmp_texture);
   }
 }
 

Modified: trunk/windstille/src/scenegraph/scene_graph.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -37,7 +37,7 @@
   void add_drawable(boost::shared_ptr<DrawingRequest> drawable);
   void remove_drawable(boost::shared_ptr<DrawingRequest> drawable);
 
-  void draw(const Texture& tmp_texture);
+  void draw(const Texture& tmp_texture, unsigned int mask);
 
 private:
   SceneGraph(const SceneGraph&);

Deleted: trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp	2009-08-28 14:01:02 UTC (rev 3096)
+++ trunk/windstille/src/scenegraph/scene_graph_drawing_request.hpp	2009-08-28 14:22:23 UTC (rev 3097)
@@ -1,49 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_SCENEGRAPH_SCENE_GRAPH_DRAWING_REQUEST_HPP
-
-#include "scenegraph/scene_graph.hpp"
-#include "display/drawing_request.hpp"
-
-class SceneGraphDrawingRequest : public DrawingRequest
-{
-private:
-  SceneGraph& m_sg;
-
-public:
-  SceneGraphDrawingRequest(SceneGraph& sg, const Matrix& modelview_)
-    : DrawingRequest(Vector2f(), 1000, modelview_),
-      m_sg(sg)
-  {}
-
-  void draw(const Texture& tmp_texture)
-  {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    m_sg.draw(tmp_texture);
-
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */



From grumbel at mail.berlios.de  Fri Aug 28 16:49:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 16:49:28 +0200
Subject: [Windstille-commit] r3098 - in trunk/windstille/src: display engine
	objects scenegraph
Message-ID: <200908281449.n7SEnSrr020424@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 16:49:27 +0200 (Fri, 28 Aug 2009)
New Revision: 3098

Modified:
   trunk/windstille/src/display/surface_drawing_request.hpp
   trunk/windstille/src/engine/game_object.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/objects/decal.hpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
Log:
Implemented some half broken support for parenting

Modified: trunk/windstille/src/display/surface_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -40,6 +40,8 @@
   virtual ~SurfaceDrawingRequest()
   {}
 
+  SurfaceDrawingParameters& get_params() { return params; }
+
   void draw(const Texture& /*tmp_texture*/) 
   {
     glPushMatrix();

Modified: trunk/windstille/src/engine/game_object.hpp
===================================================================
--- trunk/windstille/src/engine/game_object.hpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/engine/game_object.hpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -109,6 +109,8 @@
   static void set_world (Sector* w) { world = w; }
   Sector* get_world () const { return world; }
 
+  virtual void set_parent(GameObject* /*parent*/) {}
+
 private:
   GameObject (const GameObject&);
   GameObject& operator= (const GameObject&);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -57,7 +57,9 @@
     ambient_light(),
     interactive_tilemap(0),
     interactivebackground_tilemap(0),
-    player(0)
+    player(0),
+    id_table(),
+    parent_table()
 {
   if (debug) std::cout << "Creating new Sector" << std::endl;
   
@@ -118,6 +120,20 @@
       add_object(*i);
     }
 
+    // Set the parents properly
+    for(std::map<GameObject*, std::string>::iterator i = parent_table.begin(); i != parent_table.end(); ++i)
+    {
+      std::map<std::string, GameObject*>::iterator j = id_table.find(i->second);
+      if (j == id_table.end())
+      {
+        std::cout << "Error: Couldn't resolve 'id': " << i->second << std::endl;
+      }
+      else
+      {
+        i->first->set_parent(j->second);
+      }
+    }
+
     if (debug) std::cout << "Finished parsing" << std::endl;
   }
 }
@@ -125,7 +141,9 @@
 void
 Sector::add_object(FileReader& reader)
 {
-  if(reader.get_name() == "tilemap") {
+  GameObject* obj;
+  if(reader.get_name() == "tilemap") 
+  {
     std::auto_ptr<TileMap> tilemap(new TileMap(reader));
 
     if (tilemap->get_name() == "interactive")
@@ -133,48 +151,104 @@
     else if (tilemap->get_name() == "interactivebackground")
       interactivebackground_tilemap = tilemap.get();
 
-    add(tilemap.release());
-  } else if(reader.get_name() == "background") {
+    obj = tilemap.release();
+  }
+  else if(reader.get_name() == "background")
+  {
     // TODO
-  } else if (reader.get_name() == "background-gradient") {
-    add(new BackgroundGradient(reader));
-  } else if(reader.get_name() == "trigger") {
-    add(new Trigger(reader));
-  } else if(reader.get_name() == "box") {
-    add(new Box(reader));
-  } else if(reader.get_name() == "shockwave") {
-    add(new Shockwave(reader));
-  } else if(reader.get_name() == "elevator") {
-    add(new Elevator(reader));
-  } else if(reader.get_name() == "character") {    
-    add(new Character(reader));
-  } else if(reader.get_name() == "spider-mine") {
-    add(new SpiderMine(reader));
-  } else if(reader.get_name() == "hedgehog") {
-    add(new Hedgehog(reader));
-  } else if(reader.get_name() == "test-object") {
-    add(new TestObject(reader));
-  } else if (reader.get_name() == "nightvision") {
-    add(new Nightvision(reader));
-  } else if (reader.get_name() == "particle-system") {
-    // FIXME: disabled due to work on the editor: add(new ParticleSystem(reader));
-  } else if(reader.get_name() == "scriptable-object") {    
-    add(new ScriptableObject(reader));
-  } else if(reader.get_name() == "decal") {    
-    add(new Decal(reader));
-  } else if(reader.get_name() == "layer") {    
-    add(new Layer(reader));
-  } else if (reader.get_name() == "vrdummy") {
-    add(new VRDummy(reader));
-  } else if (reader.get_name() == "swarm") {
-    add(new Swarm(reader));
-  } else if (reader.get_name() == "laserpointer") {
-    add(new LaserPointer());
-  } else if (reader.get_name() == "liquid") {
-    add(new Liquid(reader));
-  } else {
+  }
+  else if (reader.get_name() == "background-gradient")
+  {
+    obj = new BackgroundGradient(reader);
+  }
+  else if(reader.get_name() == "trigger")
+  {
+    obj = new Trigger(reader);
+  }
+  else if(reader.get_name() == "box")
+  {
+    obj = new Box(reader);
+  }
+  else if(reader.get_name() == "shockwave")
+  {
+    obj = new Shockwave(reader);
+  }
+  else if(reader.get_name() == "elevator")
+  {
+    obj = new Elevator(reader);
+  }
+  else if(reader.get_name() == "character")
+  {    
+    obj = new Character(reader);
+  }
+  else if(reader.get_name() == "spider-mine")
+  {
+    obj = new SpiderMine(reader);
+  }
+  else if(reader.get_name() == "hedgehog")
+  {
+    obj = new Hedgehog(reader);
+  }
+  else if(reader.get_name() == "test-object")
+  {
+    obj = new TestObject(reader);
+  }
+  else if (reader.get_name() == "nightvision")
+  {
+    obj = new Nightvision(reader);
+  }
+  else if (reader.get_name() == "particle-system")
+  {
+    // FIXME: disabled due to work on the editor: obj = new ParticleSystem(reader);
+  }
+  else if(reader.get_name() == "scriptable-object")
+  {    
+    obj = new ScriptableObject(reader);
+  }
+  else if(reader.get_name() == "decal")
+  {    
+    obj = new Decal(reader);
+  }
+  else if(reader.get_name() == "layer")
+  {    
+    obj = new Layer(reader);
+  }
+  else if (reader.get_name() == "vrdummy")
+  {
+    obj = new VRDummy(reader);
+  }
+  else if (reader.get_name() == "swarm")
+  {
+    obj = new Swarm(reader);
+  }
+  else if (reader.get_name() == "laserpointer")
+  {
+    obj = new LaserPointer();
+  }
+  else if (reader.get_name() == "liquid")
+  {
+    obj = new Liquid(reader);
+  } 
+  else 
+  {
     std::cout << "Skipping unknown Object: " << reader.get_name() << "\n";
   }
+
+  if (obj)
+  {
+    std::string id_str;
+    if (reader.read("id", id_str))
+    {
+      id_table[id_str] = obj;
+    }
+
+    std::string parent_str;
+    if (reader.read("parent", parent_str))
+    {
+      if (!parent_str.empty())
+        parent_table[obj] = parent_str;
+    }
+  }
 }
 
 void
@@ -186,11 +260,11 @@
   SoundManager::current()->play_music(music);
 
   if (!init_script.empty())
-    {
-      Pathname path = get_directory();
-      path.append_path(init_script);
-      vm = ScriptManager::current()->run_script_file(path);
-    }
+  {
+    Pathname path = get_directory();
+    path.append_path(init_script);
+    vm = ScriptManager::current()->run_script_file(path);
+  }
 }
 
 void

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -69,6 +69,9 @@
 
   Player* player;
 
+  std::map<std::string, GameObject*> id_table;
+  std::map<GameObject*, std::string> parent_table;
+
 private:
   void parse_file(const Pathname& filename);
 

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -25,6 +25,7 @@
 #include "display/scene_context.hpp"
 
 Decal::Decal(const FileReader& reader)
+  : drawable()
 {
   std::string path;
   Vector2f pos;
@@ -56,16 +57,19 @@
     case 2: params.set_blend_func(GL_SRC_ALPHA, GL_ONE); break;
   }
 
-  boost::shared_ptr<SurfaceDrawingRequest> drawable(new SurfaceDrawingRequest(surface,
-                                                                              params
-                                                                              .set_pos(pos)
-                                                                              .set_angle(angle)
-                                                                              .set_hflip(hflip)
-                                                                              .set_vflip(vflip)
-                                                                              .set_scale(scale),
-                                                                              0, 
-                                                                              Matrix::identity()));
+  Vector2f center_offset(-surface.get_width() /2,
+                         -surface.get_height()/2);
 
+  drawable.reset(new SurfaceDrawingRequest(surface,
+                                           params
+                                           .set_pos(pos + center_offset)
+                                           .set_angle(angle)
+                                           .set_hflip(hflip)
+                                           .set_vflip(vflip)
+                                           .set_scale(scale),
+                                           0, 
+                                           Matrix::identity()));
+
   switch(map_type)
   {
     // FIXME: Evil hardcoded constans
@@ -98,4 +102,15 @@
 {
 }
 
+void
+Decal::set_parent(GameObject* parent)
+{
+  Decal* decal = dynamic_cast<Decal*>(parent);
+  if (decal)
+  { // FIXME: Not going to work with double parenting
+    drawable->get_params().set_pos(drawable->get_params().pos +
+                                   decal->drawable->get_params().pos);
+  }
+}
+
 /* EOF */

Modified: trunk/windstille/src/objects/decal.hpp
===================================================================
--- trunk/windstille/src/objects/decal.hpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/objects/decal.hpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -19,13 +19,17 @@
 #ifndef HEADER_WINDSTILLE_OBJECTS_DECAL_HPP
 #define HEADER_WINDSTILLE_OBJECTS_DECAL_HPP
 
+#include <boost/shared_ptr.hpp>
+
 #include "display/surface.hpp"
 #include "engine/game_object.hpp"
 
+class SurfaceDrawingRequest;
+
 class Decal : public GameObject
 {
 private:
-  
+  boost::shared_ptr<SurfaceDrawingRequest> drawable;
 
 public:
   Decal(const FileReader& reader);
@@ -34,6 +38,8 @@
   void draw (SceneContext& context);
   void update (float delta);
 
+  void set_parent(GameObject* parent);
+
 private:
   Decal(const Decal&);
   Decal& operator=(const Decal&);

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 14:22:23 UTC (rev 3097)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 14:49:27 UTC (rev 3098)
@@ -40,7 +40,7 @@
 void
 SceneGraph::draw(const Texture& tmp_texture, unsigned int mask)
 {
-  for(DrawingRequests::iterator i = m_drawing_requests.begin(); i != m_drawing_requests.end(); ++i)
+  for(DrawingRequests::reverse_iterator i = m_drawing_requests.rbegin(); i != m_drawing_requests.rend(); ++i)
   {
     if ((*i)->get_render_mask() & mask)
       (*i)->draw(tmp_texture);



From grumbel at mail.berlios.de  Fri Aug 28 16:51:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 16:51:35 +0200
Subject: [Windstille-commit] r3099 - trunk/windstille/src/display
Message-ID: <200908281451.n7SEpZws020714@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 16:51:35 +0200 (Fri, 28 Aug 2009)
New Revision: 3099

Modified:
   trunk/windstille/src/display/compositor.cpp
Log:
Fixed lightmap rendering with SceneGraph

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-28 14:49:27 UTC (rev 3098)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-28 14:51:35 UTC (rev 3099)
@@ -214,6 +214,8 @@
     if (sg)
     {
       glPushMatrix();
+      glTranslatef(0.0f, static_cast<float>(Display::get_height()) - static_cast<float>(Display::get_height()/LIGHTMAP_DIV), 0.0f);
+      glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
       glMultMatrixf(gc_state.get_matrix().matrix);
       sg->draw(Texture(), SceneContext::LIGHTMAP);
       glPopMatrix();



From grumbel at mail.berlios.de  Fri Aug 28 17:10:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 17:10:34 +0200
Subject: [Windstille-commit] r3100 - trunk/windstille/src/engine
Message-ID: <200908281510.n7SFAYE6023374@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 17:10:33 +0200 (Fri, 28 Aug 2009)
New Revision: 3100

Modified:
   trunk/windstille/src/engine/sector.cpp
Log:
Add objects to the Sector

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-28 14:51:35 UTC (rev 3099)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-28 15:10:33 UTC (rev 3100)
@@ -248,6 +248,8 @@
       if (!parent_str.empty())
         parent_table[obj] = parent_str;
     }
+
+    add(obj);
   }
 }
 



From grumbel at mail.berlios.de  Fri Aug 28 17:24:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 17:24:22 +0200
Subject: [Windstille-commit] r3101 - in trunk/windstille/src: display objects
Message-ID: <200908281524.n7SFOMgj024795@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 17:24:20 +0200 (Fri, 28 Aug 2009)
New Revision: 3101

Modified:
   trunk/windstille/src/display/surface_drawing_request.hpp
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/objects/decal.hpp
Log:
Fixed parenting some more

Modified: trunk/windstille/src/display/surface_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 15:10:33 UTC (rev 3100)
+++ trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
@@ -39,7 +39,8 @@
 
   virtual ~SurfaceDrawingRequest()
   {}
-
+  
+  Surface get_surface() const { return surface; }
   SurfaceDrawingParameters& get_params() { return params; }
 
   void draw(const Texture& /*tmp_texture*/) 

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-28 15:10:33 UTC (rev 3100)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-28 15:24:20 UTC (rev 3101)
@@ -25,10 +25,10 @@
 #include "display/scene_context.hpp"
 
 Decal::Decal(const FileReader& reader)
-  : drawable()
+  : drawable(),
+    pos()
 {
   std::string path;
-  Vector2f pos;
   Vector2f scale(1.0f, 1.0f);
   float    angle = 0.0f;
 
@@ -108,8 +108,12 @@
   Decal* decal = dynamic_cast<Decal*>(parent);
   if (decal)
   { // FIXME: Not going to work with double parenting
-    drawable->get_params().set_pos(drawable->get_params().pos +
-                                   decal->drawable->get_params().pos);
+    pos += decal->pos;
+
+    Vector2f center_offset(-drawable->get_surface().get_width() /2,
+                           -drawable->get_surface().get_height()/2);
+
+    drawable->get_params().set_pos(pos + center_offset);
   }
 }
 

Modified: trunk/windstille/src/objects/decal.hpp
===================================================================
--- trunk/windstille/src/objects/decal.hpp	2009-08-28 15:10:33 UTC (rev 3100)
+++ trunk/windstille/src/objects/decal.hpp	2009-08-28 15:24:20 UTC (rev 3101)
@@ -30,6 +30,7 @@
 {
 private:
   boost::shared_ptr<SurfaceDrawingRequest> drawable;
+  Vector2f pos;
 
 public:
   Decal(const FileReader& reader);



From grumbel at mail.berlios.de  Fri Aug 28 17:42:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 17:42:27 +0200
Subject: [Windstille-commit] r3102 - in trunk/windstille/src: display
	objects particles scenegraph sprite3d tile
Message-ID: <200908281542.n7SFgRn5027704@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 17:42:24 +0200 (Fri, 28 Aug 2009)
New Revision: 3102

Added:
   trunk/windstille/src/scenegraph/control_drawing_request.hpp
   trunk/windstille/src/scenegraph/drawing_request.hpp
   trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp
   trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp
   trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp
   trunk/windstille/src/scenegraph/surface_drawing_request.hpp
   trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp
   trunk/windstille/src/scenegraph/text_drawing_request.hpp
   trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp
   trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp
Removed:
   trunk/windstille/src/display/control_drawing_request.hpp
   trunk/windstille/src/display/drawing_request.hpp
   trunk/windstille/src/display/fill_screen_drawing_request.hpp
   trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
   trunk/windstille/src/display/surface_drawing_request.hpp
   trunk/windstille/src/display/surface_quad_drawing_request.hpp
   trunk/windstille/src/display/text_drawing_request.hpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.hpp
   trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp
Modified:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/tile/tile_map.cpp
Log:
Moved all DrawingRequests to scenegraph/

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -21,7 +21,7 @@
 #include <GL/glew.h>
 
 #include "display/display.hpp"
-#include "display/drawing_request.hpp"
+#include "scenegraph/drawing_request.hpp"
 #include "display/graphic_context_state.hpp"
 #include "display/framebuffer.hpp"
 #include "display/opengl_state.hpp"

Deleted: trunk/windstille/src/display/control_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/control_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/control_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,60 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
-
-class ControlDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  float angle;
-
-public:
-  ControlDrawingRequest(Surface surface_, const Vector2f& pos_, float angle_, float z_pos_,
-                        const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), 
-      surface(surface_), 
-      angle(angle_)
-  {}
-
-  virtual ~ControlDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/)
-  {
-    glPushMatrix();
-
-    // FIXME: This looks badly broken, should modelview.multiply() be enough?
-    glTranslatef(modelview.matrix[12],
-                 modelview.matrix[13],
-                 modelview.matrix[14]);
-
-    Vector3 p = modelview.multiply(Vector3(pos.x, pos.y, 0.0f));
-
-    surface.draw(SurfaceDrawingParameters()
-                 .set_angle(angle)
-                 .set_pos(Vector2f(p.x - surface.get_width()/2,
-                                   p.y - surface.get_height()/2)));
-
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -30,14 +30,14 @@
 #include "math/vector3.hpp"
 #include "sprite2d/sprite.hpp"
 
-#include "display/control_drawing_request.hpp"
-#include "display/fill_screen_drawing_request.hpp"
-#include "display/fill_screen_pattern_drawing_request.hpp"
-#include "display/surface_drawing_request.hpp"
-#include "display/surface_quad_drawing_request.hpp"
-#include "display/text_drawing_request.hpp"
-#include "display/vertex_array_drawing_request.hpp"
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/control_drawing_request.hpp"
+#include "scenegraph/fill_screen_drawing_request.hpp"
+#include "scenegraph/fill_screen_pattern_drawing_request.hpp"
+#include "scenegraph/surface_drawing_request.hpp"
+#include "scenegraph/surface_quad_drawing_request.hpp"
+#include "scenegraph/text_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 
 struct DrawingRequestsSorter
 {

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -21,7 +21,7 @@
 
 #include <vector>
 
-#include "display/drawing_request.hpp"
+#include "scenegraph/drawing_request.hpp"
 
 class Texture;
 class Surface;

Deleted: trunk/windstille/src/display/drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,85 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
-
-#include "math/vector2f.hpp"
-#include "math/rect.hpp"
-#include "math/matrix.hpp"
-#include "display/texture.hpp"
-
-class DrawingRequest
-{
-protected:
-  Vector2f pos;
-  float    z_pos;
-  Matrix   modelview;
-  unsigned int render_mask;
-
-public:
-  DrawingRequest(const Vector2f& pos_, float z_pos_ = 0,  const Matrix& modelview_ = Matrix::identity())
-    : pos(pos_), 
-      z_pos(z_pos_), 
-      modelview(modelview_),
-      render_mask(0)
-  {}
-  virtual ~DrawingRequest() {}
-  
-  /**
-   * The draw() method does the important work in DrawingRequest,
-   * ie. it is the place where you can access the screen with raw
-   * OpenGL methods. The \a tmp_texture provides a texture of the
-   * current framebuffer, you have to copy the \a screen_texture to it
-   * to contain usefull content
-   */
-  virtual void draw(const Texture& tmp_texture) = 0;
-
-  /**
-   * This method is called before draw() to allow the DrawingRequest
-   * to copy content from \a screen_texture, which is the current
-   * framebuffer to a temporary buffer which can then be used in
-   * draw() for deformation effects
-   */
-  virtual void prepare(const Texture& screen_texture) {
-      (void) screen_texture;
-  }
-
-  /**
-   * Override this and let it return true if you need to prepare()
-   * function call
-   */
-  virtual bool needs_prepare() { return false; }
-  
-  /** Returns the position at which the request should be drawn */
-  float get_z_pos() const { return z_pos; }
-
-  Matrix get_modelview() const
-  { return modelview; }
-
-  void set_render_mask(unsigned int mask) { render_mask = mask; }
-  unsigned int get_render_mask() const { return render_mask; }
-
-private:
-  DrawingRequest (const DrawingRequest&);
-  DrawingRequest& operator= (const DrawingRequest&);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/display/fill_screen_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/fill_screen_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/fill_screen_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,47 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
-
-
-
-class FillScreenDrawingRequest : public DrawingRequest
-{
-private:
-  Color color;
-
-public:
-  FillScreenDrawingRequest(const Color& color_) 
-    : DrawingRequest(Vector2f(0, 0), -1000.0f), color(color_)
-  {
-  }
-  virtual ~FillScreenDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) {
-    OpenGLState state;
-    // FIXME: move clear color to opengl_state
-    state.activate();
-    glClearColor(color.r, color.g, color.b, color.a);
-    glClear(GL_COLOR_BUFFER_BIT);
-  }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,74 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
-
-
-class FillScreenPatternDrawingRequest : public DrawingRequest
-{
-private:
-  Texture  texture;
-  Vector2f offset;
-public:
-  FillScreenPatternDrawingRequest(const Texture& texture_, const Vector2f& offset_)
-    : DrawingRequest(Vector2f(0, 0), -1000.0f), 
-      texture(texture_),
-      offset(offset_)
-  {}
-
-  virtual ~FillScreenPatternDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    OpenGLState state;
-    state.enable(GL_BLEND);
-    state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-    state.bind_texture(texture);
-    state.activate();
-
-    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
-    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
-
-    float u_start = -offset.x / static_cast<float>(texture.get_width());
-    float v_start = -offset.y / static_cast<float>(texture.get_height());
-
-    u -= offset.x / static_cast<float>(texture.get_width());
-    v -= offset.y / static_cast<float>(texture.get_height());
-
-    glBegin(GL_QUADS);
-    {
-      glTexCoord2f(u_start, v_start);
-      glVertex2f(0, 0);
-    
-      glTexCoord2f(u, v_start);
-      glVertex2f(static_cast<float>(Display::get_width()), 0);
-
-      glTexCoord2f(u, v);
-      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
-
-      glTexCoord2f(u_start, v);
-      glVertex2f(0,  static_cast<float>(Display::get_height()));
-    }
-    glEnd();
-  }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/display/surface_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,59 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
-
-#include "display/surface_drawing_request.hpp"
-#include "display/surface_drawing_parameters.hpp"
-
-class SurfaceDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  SurfaceDrawingParameters params;
-
-public:
-  SurfaceDrawingRequest(Surface surface_, const SurfaceDrawingParameters& params_,
-                        float z_pos_,
-                        const Matrix& modelview_)
-    : DrawingRequest(pos, z_pos_, modelview_), 
-      surface(surface_), 
-      params(params_)
-  {}
-
-  virtual ~SurfaceDrawingRequest()
-  {}
-  
-  Surface get_surface() const { return surface; }
-  SurfaceDrawingParameters& get_params() { return params; }
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    surface.draw(params);
-
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/display/surface_quad_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,77 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
-
-#include "math/vector2f.hpp"
-#include "math/quad.hpp"
-#include "display/drawing_request.hpp"
-
-class SurfaceQuadDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  Quad quad;
-  DrawingParameters params;
-
-public:
-  SurfaceQuadDrawingRequest(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
-                            const DrawingParameters& params_, float z_pos_,
-                            const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
-      surface(surface_),
-      quad(quad_),
-      params(params_)
-  {
-  }
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    OpenGLState state;
-    state.enable(GL_BLEND);
-    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
-    state.bind_texture(surface.get_texture());
-    state.activate();
-
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    glBegin(GL_QUADS);
-    {
-      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
-      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
-    
-      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
-      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
-
-      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
-      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
-
-      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
-      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
-    }
-    glEnd();
-
-    glPopMatrix();    
-  }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/display/text_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/text_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/text_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,43 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
-
-class TextDrawingRequest : public DrawingRequest
-{
-private:
-  std::string text;
-public:
-  TextDrawingRequest(const std::string& text_, const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
-      text(text_)
-  {}
-  virtual ~TextDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-    Fonts::current()->ttffont->draw(pos, text);
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,183 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "display/opengl_state.hpp"
-#include "display/vertex_array_drawing_request.hpp"
-
-VertexArrayDrawingRequest::VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, 
-                                                     const Matrix& modelview_)
-  : DrawingRequest(pos_, z_pos_, modelview_),
-    mode(GL_QUADS),
-    blend_sfactor(GL_SRC_ALPHA),
-    blend_dfactor(GL_ONE_MINUS_SRC_ALPHA),
-    texture(),
-    colors(),
-    texcoords(),
-    vertices()
-{
-}
-
-int
-VertexArrayDrawingRequest::num_vertices() const
-{
-  return vertices.size()/3;
-}
-
-void
-VertexArrayDrawingRequest::clear()
-{
-  colors.clear();
-  texcoords.clear();
-  vertices.clear();
-}
-
-void
-VertexArrayDrawingRequest::draw(const Texture& /*tmp_texture*/)
-{
-  draw(0, num_vertices());
-}
-
-void
-VertexArrayDrawingRequest::draw(int start, int end)
-{
-  assert(!vertices.empty());
-  assert(texcoords.empty() || int(texcoords.size()/2) == num_vertices());
-  assert(colors.empty() || int(colors.size()/4) == num_vertices());
-
-  OpenGLState state;
-
-  glClear(GL_DEPTH_BUFFER_BIT);
-  state.disable(GL_DEPTH_TEST);
-  state.enable(GL_BLEND);
-  state.set_blend_func(blend_sfactor, blend_dfactor);
-  
-  if (texture)
-    {
-      state.bind_texture(texture);
-    }
-
-  if (!colors.empty())
-    {
-      state.enable_client_state(GL_COLOR_ARRAY);
-      glColorPointer(4, GL_UNSIGNED_BYTE, 0, &*colors.begin());
-    }
-  else
-    {
-      state.disable_client_state(GL_COLOR_ARRAY);
-      state.color(Color(1.0f, 1.0f, 1.0f));
-    }
-
-  if (!texcoords.empty())
-    {
-      state.enable_client_state(GL_TEXTURE_COORD_ARRAY);
-      glTexCoordPointer(2, GL_FLOAT, 0, &*texcoords.begin());
-    }
-  else
-    {
-      state.disable_client_state(GL_TEXTURE_COORD_ARRAY);
-    }
-
-  // FIXME: Might be worth to not use VertexArrays when we have a pretty small number of vertices
-  state.disable_client_state(GL_NORMAL_ARRAY);
-  state.enable_client_state(GL_VERTEX_ARRAY);
-
-  glVertexPointer(3, GL_FLOAT, 0, &*vertices.begin());
-
-  state.activate();
-
-  glPushMatrix();
-  glMultMatrixf(modelview.matrix);
-
-  glDrawArrays(mode, start, end);
-
-  glPopMatrix();
-}
-
-void
-VertexArrayDrawingRequest::vertex(const Vector2f& vec, float z)
-{
-  vertex(vec.x, vec.y, z);
-}
-
-void
-VertexArrayDrawingRequest::vertex(float x, float y, float z)
-{
-  vertices.push_back(x + pos.x);
-  vertices.push_back(y + pos.y);
-  vertices.push_back(z);
-}
-
-void
-VertexArrayDrawingRequest::texcoord(float u, float v)
-{
-  texcoords.push_back(u);
-  texcoords.push_back(v);
-}
-
-void
-VertexArrayDrawingRequest::add_texcoords(const Rectf& rect)
-{
-  texcoords.push_back(rect.left);
-  texcoords.push_back(rect.top);
-  texcoords.push_back(rect.right);
-  texcoords.push_back(rect.top);
-  texcoords.push_back(rect.right);
-  texcoords.push_back(rect.bottom);
-  texcoords.push_back(rect.left);
-  texcoords.push_back(rect.bottom);
-}
-
-void
-VertexArrayDrawingRequest::add_texcoords(const float* coords, size_t n)
-{
-  assert(n % 2 == 0);
-  for(size_t i = 0; i < n; ++i)
-  {
-    texcoords.push_back(coords[i]);
-  }
-}
-
-void
-VertexArrayDrawingRequest::color(const Color& color_)
-{
-  colors.push_back(static_cast<unsigned char>(color_.r * 255));
-  colors.push_back(static_cast<unsigned char>(color_.g * 255));
-  colors.push_back(static_cast<unsigned char>(color_.b * 255));
-  colors.push_back(static_cast<unsigned char>(color_.a * 255));
-}
-
-void
-VertexArrayDrawingRequest::set_texture(Texture texture_)
-{
-  texture = texture_;
-}
-
-void
-VertexArrayDrawingRequest::set_blend_func(GLenum sfactor, GLenum dfactor)
-{
-  blend_sfactor = sfactor;
-  blend_dfactor = dfactor;
-}
-
-void
-VertexArrayDrawingRequest::set_mode(GLenum mode_)
-{
-  mode = mode_;
-}
-
-/* EOF */

Deleted: trunk/windstille/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,71 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
-
-#include <vector>
-
-#include "display/color.hpp"
-#include "display/drawing_request.hpp"
-
-/** */
-class VertexArrayDrawingRequest : public DrawingRequest
-{
-private:
-  GLenum mode;
-
-  GLenum blend_sfactor;
-  GLenum blend_dfactor;
-
-  Texture texture;
-  std::vector<unsigned char> colors;
-  std::vector<float> texcoords;
-  std::vector<float> vertices;
-
-public:
-  VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, const Matrix& modelview_);
-
-  void draw(const Texture& tmp_texture);
-  void draw(int start, int end);
-
-  void vertex(float x, float y, float z = 0.0f);
-  void vertex(const Vector2f& vec, float z = 0.0f);
-
-  void texcoord(float u, float v);
-  void color(const Color& color);
-  void add_texcoords(const float* coords, size_t n);
-  /**
-   * Add eight texcoords for use with a quad from a given rect. The
-   * coords are clockwise around the rect, ie:
-   * left, top, right, top, right, bottom, left, bottom,
-   */
-  void add_texcoords(const Rectf& coords);
-
-  int num_vertices() const;
-
-  void clear();
-
-  void set_mode(GLenum mode_);
-  void set_texture(Texture texture);
-  void set_blend_func(GLenum sfactor, GLenum dfactor);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -18,7 +18,7 @@
 
 #include "objects/background_gradient.hpp"
 
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "display/display.hpp"
 
 BackgroundGradient::BackgroundGradient(FileReader& props)

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -20,7 +20,7 @@
 
 #include "engine/sector.hpp"
 #include "scenegraph/scene_graph.hpp"
-#include "display/surface_drawing_request.hpp"
+#include "scenegraph/surface_drawing_request.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
 

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
 #include "tile/tile_map.hpp"

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "objects/liquid.hpp"
 
 #define SAMPLES 5

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -19,7 +19,7 @@
 #include "objects/nightvision.hpp"
 
 #include "display/display.hpp"
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "math/random.hpp"
 
 Nightvision::Nightvision(FileReader& /*props*/)

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/player.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -30,7 +30,7 @@
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"
 #include "scenegraph/scene_graph.hpp"
-#include "sprite3d/sprite3d_drawing_request.hpp"
+#include "scenegraph/sprite3d_drawing_request.hpp"
 
 static const int MAX_ENERGY = 16;
 static const float WALK_SPEED = 100.0;

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/objects/swarm.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "math/random.hpp"
 #include "screen/game_session.hpp"
 #include "screen/view.hpp"

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -18,7 +18,7 @@
 
 #include "display/drawing_context.hpp"
 #include "util/file_reader.hpp"
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "particles/particle_system.hpp"
 #include "particles/spark_drawer.hpp"
 

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -17,7 +17,7 @@
 */
 
 #include "util/file_reader.cpp"
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 #include "particles/particle_system.hpp"
 #include "display/surface_manager.hpp"
 #include "display/drawing_context.hpp"

Copied: trunk/windstille/src/scenegraph/control_drawing_request.hpp (from rev 3087, trunk/windstille/src/display/control_drawing_request.hpp)


Property changes on: trunk/windstille/src/scenegraph/control_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/drawing_request.hpp (from rev 3097, trunk/windstille/src/display/drawing_request.hpp)


Property changes on: trunk/windstille/src/scenegraph/drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp (from rev 3092, trunk/windstille/src/display/fill_screen_drawing_request.hpp)


Property changes on: trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp (from rev 3092, trunk/windstille/src/display/fill_screen_pattern_drawing_request.hpp)


Property changes on: trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -18,7 +18,7 @@
 
 #include "scenegraph/scene_graph.hpp"
 
-#include "display/drawing_request.hpp"
+#include "scenegraph/drawing_request.hpp"
 
 SceneGraph::SceneGraph()
   : m_drawing_requests()

Copied: trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp (from rev 3087, trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp	2009-08-27 00:00:22 UTC (rev 3087)
+++ trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -0,0 +1,53 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+
+#include "sprite3d/sprite3d.hpp"
+#include "scenegraph/drawing_request.hpp"
+
+class Sprite3DDrawingRequest : public DrawingRequest
+{
+private:
+  const Sprite3D* sprite;
+
+public:
+  Sprite3DDrawingRequest(const Sprite3D* sprite_, 
+                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite_)
+  {}
+
+  void draw(const Texture& /*tmp_texture*/)
+  {
+    sprite->draw(pos, modelview);
+  }
+
+  void set_pos(const Vector2f& pos_)
+  {
+    pos = pos_;
+  }
+
+private:
+  Sprite3DDrawingRequest(const Sprite3DDrawingRequest&);
+  Sprite3DDrawingRequest& operator=(const Sprite3DDrawingRequest&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/surface_drawing_request.hpp (from rev 3101, trunk/windstille/src/display/surface_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/display/surface_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/scenegraph/surface_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -0,0 +1,59 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+
+#include "scenegraph/surface_drawing_request.hpp"
+#include "display/surface_drawing_parameters.hpp"
+
+class SurfaceDrawingRequest : public DrawingRequest
+{
+private:
+  Surface surface;
+  SurfaceDrawingParameters params;
+
+public:
+  SurfaceDrawingRequest(Surface surface_, const SurfaceDrawingParameters& params_,
+                        float z_pos_,
+                        const Matrix& modelview_)
+    : DrawingRequest(pos, z_pos_, modelview_), 
+      surface(surface_), 
+      params(params_)
+  {}
+
+  virtual ~SurfaceDrawingRequest()
+  {}
+  
+  Surface get_surface() const { return surface; }
+  SurfaceDrawingParameters& get_params() { return params; }
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    surface.draw(params);
+
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/surface_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp (from rev 3087, trunk/windstille/src/display/surface_quad_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/display/surface_quad_drawing_request.hpp	2009-08-27 00:00:22 UTC (rev 3087)
+++ trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -0,0 +1,77 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+
+#include "math/vector2f.hpp"
+#include "math/quad.hpp"
+#include "scenegraph/drawing_request.hpp"
+
+class SurfaceQuadDrawingRequest : public DrawingRequest
+{
+private:
+  Surface surface;
+  Quad quad;
+  DrawingParameters params;
+
+public:
+  SurfaceQuadDrawingRequest(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
+                            const DrawingParameters& params_, float z_pos_,
+                            const Matrix& modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_),
+      surface(surface_),
+      quad(quad_),
+      params(params_)
+  {
+  }
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
+    state.bind_texture(surface.get_texture());
+    state.activate();
+
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
+    
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
+
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
+
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
+    }
+    glEnd();
+
+    glPopMatrix();    
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/text_drawing_request.hpp (from rev 3087, trunk/windstille/src/display/text_drawing_request.hpp)


Property changes on: trunk/windstille/src/scenegraph/text_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp (from rev 3087, trunk/windstille/src/display/vertex_array_drawing_request.cpp)
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-08-27 00:00:22 UTC (rev 3087)
+++ trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -0,0 +1,183 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/opengl_state.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
+
+VertexArrayDrawingRequest::VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, 
+                                                     const Matrix& modelview_)
+  : DrawingRequest(pos_, z_pos_, modelview_),
+    mode(GL_QUADS),
+    blend_sfactor(GL_SRC_ALPHA),
+    blend_dfactor(GL_ONE_MINUS_SRC_ALPHA),
+    texture(),
+    colors(),
+    texcoords(),
+    vertices()
+{
+}
+
+int
+VertexArrayDrawingRequest::num_vertices() const
+{
+  return vertices.size()/3;
+}
+
+void
+VertexArrayDrawingRequest::clear()
+{
+  colors.clear();
+  texcoords.clear();
+  vertices.clear();
+}
+
+void
+VertexArrayDrawingRequest::draw(const Texture& /*tmp_texture*/)
+{
+  draw(0, num_vertices());
+}
+
+void
+VertexArrayDrawingRequest::draw(int start, int end)
+{
+  assert(!vertices.empty());
+  assert(texcoords.empty() || int(texcoords.size()/2) == num_vertices());
+  assert(colors.empty() || int(colors.size()/4) == num_vertices());
+
+  OpenGLState state;
+
+  glClear(GL_DEPTH_BUFFER_BIT);
+  state.disable(GL_DEPTH_TEST);
+  state.enable(GL_BLEND);
+  state.set_blend_func(blend_sfactor, blend_dfactor);
+  
+  if (texture)
+    {
+      state.bind_texture(texture);
+    }
+
+  if (!colors.empty())
+    {
+      state.enable_client_state(GL_COLOR_ARRAY);
+      glColorPointer(4, GL_UNSIGNED_BYTE, 0, &*colors.begin());
+    }
+  else
+    {
+      state.disable_client_state(GL_COLOR_ARRAY);
+      state.color(Color(1.0f, 1.0f, 1.0f));
+    }
+
+  if (!texcoords.empty())
+    {
+      state.enable_client_state(GL_TEXTURE_COORD_ARRAY);
+      glTexCoordPointer(2, GL_FLOAT, 0, &*texcoords.begin());
+    }
+  else
+    {
+      state.disable_client_state(GL_TEXTURE_COORD_ARRAY);
+    }
+
+  // FIXME: Might be worth to not use VertexArrays when we have a pretty small number of vertices
+  state.disable_client_state(GL_NORMAL_ARRAY);
+  state.enable_client_state(GL_VERTEX_ARRAY);
+
+  glVertexPointer(3, GL_FLOAT, 0, &*vertices.begin());
+
+  state.activate();
+
+  glPushMatrix();
+  glMultMatrixf(modelview.matrix);
+
+  glDrawArrays(mode, start, end);
+
+  glPopMatrix();
+}
+
+void
+VertexArrayDrawingRequest::vertex(const Vector2f& vec, float z)
+{
+  vertex(vec.x, vec.y, z);
+}
+
+void
+VertexArrayDrawingRequest::vertex(float x, float y, float z)
+{
+  vertices.push_back(x + pos.x);
+  vertices.push_back(y + pos.y);
+  vertices.push_back(z);
+}
+
+void
+VertexArrayDrawingRequest::texcoord(float u, float v)
+{
+  texcoords.push_back(u);
+  texcoords.push_back(v);
+}
+
+void
+VertexArrayDrawingRequest::add_texcoords(const Rectf& rect)
+{
+  texcoords.push_back(rect.left);
+  texcoords.push_back(rect.top);
+  texcoords.push_back(rect.right);
+  texcoords.push_back(rect.top);
+  texcoords.push_back(rect.right);
+  texcoords.push_back(rect.bottom);
+  texcoords.push_back(rect.left);
+  texcoords.push_back(rect.bottom);
+}
+
+void
+VertexArrayDrawingRequest::add_texcoords(const float* coords, size_t n)
+{
+  assert(n % 2 == 0);
+  for(size_t i = 0; i < n; ++i)
+  {
+    texcoords.push_back(coords[i]);
+  }
+}
+
+void
+VertexArrayDrawingRequest::color(const Color& color_)
+{
+  colors.push_back(static_cast<unsigned char>(color_.r * 255));
+  colors.push_back(static_cast<unsigned char>(color_.g * 255));
+  colors.push_back(static_cast<unsigned char>(color_.b * 255));
+  colors.push_back(static_cast<unsigned char>(color_.a * 255));
+}
+
+void
+VertexArrayDrawingRequest::set_texture(Texture texture_)
+{
+  texture = texture_;
+}
+
+void
+VertexArrayDrawingRequest::set_blend_func(GLenum sfactor, GLenum dfactor)
+{
+  blend_sfactor = sfactor;
+  blend_dfactor = dfactor;
+}
+
+void
+VertexArrayDrawingRequest::set_mode(GLenum mode_)
+{
+  mode = mode_;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp (from rev 3087, trunk/windstille/src/display/vertex_array_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.hpp	2009-08-27 00:00:22 UTC (rev 3087)
+++ trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -0,0 +1,71 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
+
+#include <vector>
+
+#include "display/color.hpp"
+#include "scenegraph/drawing_request.hpp"
+
+/** */
+class VertexArrayDrawingRequest : public DrawingRequest
+{
+private:
+  GLenum mode;
+
+  GLenum blend_sfactor;
+  GLenum blend_dfactor;
+
+  Texture texture;
+  std::vector<unsigned char> colors;
+  std::vector<float> texcoords;
+  std::vector<float> vertices;
+
+public:
+  VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, const Matrix& modelview_);
+
+  void draw(const Texture& tmp_texture);
+  void draw(int start, int end);
+
+  void vertex(float x, float y, float z = 0.0f);
+  void vertex(const Vector2f& vec, float z = 0.0f);
+
+  void texcoord(float u, float v);
+  void color(const Color& color);
+  void add_texcoords(const float* coords, size_t n);
+  /**
+   * Add eight texcoords for use with a quad from a given rect. The
+   * coords are clockwise around the rect, ie:
+   * left, top, right, top, right, bottom, left, bottom,
+   */
+  void add_texcoords(const Rectf& coords);
+
+  int num_vertices() const;
+
+  void clear();
+
+  void set_mode(GLenum mode_);
+  void set_texture(Texture texture);
+  void set_blend_func(GLenum sfactor, GLenum dfactor);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp
___________________________________________________________________
Name: svn:mergeinfo
   + 

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -23,7 +23,7 @@
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "sprite3d/manager.hpp"
-#include "sprite3d/sprite3d_drawing_request.hpp"
+#include "scenegraph/sprite3d_drawing_request.hpp"
 
 using namespace sprite3d;
 

Deleted: trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/sprite3d/sprite3d_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -1,53 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
-
-#include "sprite3d/sprite3d.hpp"
-#include "display/drawing_request.hpp"
-
-class Sprite3DDrawingRequest : public DrawingRequest
-{
-private:
-  const Sprite3D* sprite;
-
-public:
-  Sprite3DDrawingRequest(const Sprite3D* sprite_, 
-                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite_)
-  {}
-
-  void draw(const Texture& /*tmp_texture*/)
-  {
-    sprite->draw(pos, modelview);
-  }
-
-  void set_pos(const Vector2f& pos_)
-  {
-    pos = pos_;
-  }
-
-private:
-  Sprite3DDrawingRequest(const Sprite3DDrawingRequest&);
-  Sprite3DDrawingRequest& operator=(const Sprite3DDrawingRequest&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-28 15:24:20 UTC (rev 3101)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-28 15:42:24 UTC (rev 3102)
@@ -26,7 +26,7 @@
 #include "tile/tile.hpp"
 #include "tile/tile_factory.hpp"
 #include "screen/view.hpp"
-#include "display/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawing_request.hpp"
 
 TileMap::TileMap(FileReader& props)
   : field(),



From grumbel at mail.berlios.de  Fri Aug 28 17:51:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 17:51:10 +0200
Subject: [Windstille-commit] r3103 - in trunk/windstille/src: display engine
	objects particles scenegraph sprite3d tile
Message-ID: <200908281551.n7SFpAJZ028636@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 17:51:08 +0200 (Fri, 28 Aug 2009)
New Revision: 3103

Added:
   trunk/windstille/src/scenegraph/control_drawable.hpp
   trunk/windstille/src/scenegraph/drawable.hpp
   trunk/windstille/src/scenegraph/fill_screen_drawable.hpp
   trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp
   trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
   trunk/windstille/src/scenegraph/surface_drawable.hpp
   trunk/windstille/src/scenegraph/surface_quad_drawable.hpp
   trunk/windstille/src/scenegraph/text_drawable.hpp
   trunk/windstille/src/scenegraph/vertex_array_drawable.cpp
   trunk/windstille/src/scenegraph/vertex_array_drawable.hpp
Removed:
   trunk/windstille/src/scenegraph/control_drawing_request.hpp
   trunk/windstille/src/scenegraph/drawing_request.hpp
   trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp
   trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp
   trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp
   trunk/windstille/src/scenegraph/surface_drawing_request.hpp
   trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp
   trunk/windstille/src/scenegraph/text_drawing_request.hpp
   trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp
   trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp
Modified:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/compositor.hpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/decal.cpp
   trunk/windstille/src/objects/decal.hpp
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
   trunk/windstille/src/scenegraph/scene_graph.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/sprite3d/sprite3d.hpp
   trunk/windstille/src/tile/tile_map.cpp
Log:
Renamed DrawingRequest to Drawable

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -21,7 +21,7 @@
 #include <GL/glew.h>
 
 #include "display/display.hpp"
-#include "scenegraph/drawing_request.hpp"
+#include "scenegraph/drawable.hpp"
 #include "display/graphic_context_state.hpp"
 #include "display/framebuffer.hpp"
 #include "display/opengl_state.hpp"
@@ -318,7 +318,7 @@
 }
 
 void
-Compositor::eval(DrawingRequest* request)
+Compositor::eval(Drawable* request)
 {
   if (impl->framebuffers && request->needs_prepare())
     {

Modified: trunk/windstille/src/display/compositor.hpp
===================================================================
--- trunk/windstille/src/display/compositor.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/display/compositor.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -22,7 +22,7 @@
 #include <boost/scoped_ptr.hpp>
 
 class CompositorImpl;
-class DrawingRequest;
+class Drawable;
 class GraphicContextState;
 class SceneContext;
 class SceneGraph;
@@ -34,7 +34,7 @@
   ~Compositor();
 
   void render(SceneContext& sc, SceneGraph* sg, const GraphicContextState& state);
-  void eval(DrawingRequest* request);
+  void eval(Drawable* request);
 
 private:
   void render_with_framebuffers(SceneContext& sc, SceneGraph* sg);

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -30,18 +30,18 @@
 #include "math/vector3.hpp"
 #include "sprite2d/sprite.hpp"
 
-#include "scenegraph/control_drawing_request.hpp"
-#include "scenegraph/fill_screen_drawing_request.hpp"
-#include "scenegraph/fill_screen_pattern_drawing_request.hpp"
-#include "scenegraph/surface_drawing_request.hpp"
-#include "scenegraph/surface_quad_drawing_request.hpp"
-#include "scenegraph/text_drawing_request.hpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/control_drawable.hpp"
+#include "scenegraph/fill_screen_drawable.hpp"
+#include "scenegraph/fill_screen_pattern_drawable.hpp"
+#include "scenegraph/surface_drawable.hpp"
+#include "scenegraph/surface_quad_drawable.hpp"
+#include "scenegraph/text_drawable.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 
-struct DrawingRequestsSorter
+struct DrawablesSorter
 {
-  bool operator()(DrawingRequest* a, DrawingRequest* b) {
+  bool operator()(Drawable* a, Drawable* b) {
     return a->get_z_pos() < b->get_z_pos();
   }
 };
@@ -61,9 +61,9 @@
 void
 DrawingContext::render(Compositor& comp)
 {
-  std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());
+  std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawablesSorter());
   
-  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
+  for(Drawables::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
     {
       comp.eval(*i);
     }
@@ -72,7 +72,7 @@
 void
 DrawingContext::clear()
 {
-  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
+  for(Drawables::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
     {
       delete *i;
     }
@@ -80,7 +80,7 @@
 }
 
 void
-DrawingContext::draw(DrawingRequest* request)
+DrawingContext::draw(Drawable* request)
 {
   drawingrequests.push_back(request);
 }
@@ -101,14 +101,14 @@
 DrawingContext::draw(const Surface surface, const Vector2f& pos, const Quad& quad,
                      const DrawingParameters& params, float z_pos)
 {
-  draw(new SurfaceQuadDrawingRequest(surface, pos, quad, params, z_pos,
+  draw(new SurfaceQuadDrawable(surface, pos, quad, params, z_pos,
                                      modelview_stack.back()));
 }
 
 void
 DrawingContext::draw(const Surface surface, const SurfaceDrawingParameters& params, float z_pos)
 {
-  draw(new SurfaceDrawingRequest(surface, params, z_pos,
+  draw(new SurfaceDrawable(surface, params, z_pos,
                                  modelview_stack.back()));
 }
 
@@ -121,7 +121,7 @@
 void
 DrawingContext::draw(Surface surface, float x, float y, float z, float )
 {
-  draw(new SurfaceDrawingRequest(surface,
+  draw(new SurfaceDrawable(surface,
                                  SurfaceDrawingParameters().set_pos(Vector2f(x, y)),
                                  z, modelview_stack.back()));
 }
@@ -129,25 +129,25 @@
 void
 DrawingContext::draw(const std::string& text, float x, float y, float z)
 { 
-  draw(new TextDrawingRequest(text, Vector2f(x, y), z, modelview_stack.back()));
+  draw(new TextDrawable(text, Vector2f(x, y), z, modelview_stack.back()));
 }
 
 void
 DrawingContext::draw_control(const Surface surface, const Vector2f& pos, float angle, float z_pos)
 {
-  draw(new ControlDrawingRequest(surface, pos, angle, z_pos, modelview_stack.back()));
+  draw(new ControlDrawable(surface, pos, angle, z_pos, modelview_stack.back()));
 }
 
 void
 DrawingContext::fill_screen(const Color& color)
 {
-  draw(new FillScreenDrawingRequest(color));
+  draw(new FillScreenDrawable(color));
 }
 
 void
 DrawingContext::fill_pattern(const Texture& pattern, const Vector2f& offset)
 {
-  draw(new FillScreenPatternDrawingRequest(pattern, offset));
+  draw(new FillScreenPatternDrawable(pattern, offset));
 }
 
 void
@@ -253,7 +253,7 @@
 void
 DrawingContext::draw_line(const Vector2f& pos1, const Vector2f& pos2, const Color& color, float z_pos)
 {
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, modelview_stack.back());
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), z_pos, modelview_stack.back());
 
   array->set_mode(GL_LINES);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -270,7 +270,7 @@
 void
 DrawingContext::draw_quad(const Quad& quad, const Color& color, float z_pos)
 {
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, modelview_stack.back());
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), z_pos, modelview_stack.back());
 
   array->set_mode(GL_LINE_LOOP);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -293,7 +293,7 @@
 void
 DrawingContext::fill_quad(const Quad& quad, const Color& color, float z_pos)
 {
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, modelview_stack.back());
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), z_pos, modelview_stack.back());
 
   array->set_mode(GL_QUADS);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -316,7 +316,7 @@
 void
 DrawingContext::draw_rect(const Rectf& rect, const Color& color, float z_pos)
 {
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, modelview_stack.back());
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), z_pos, modelview_stack.back());
 
   array->set_mode(GL_LINE_LOOP);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -339,7 +339,7 @@
 void
 DrawingContext::fill_rect(const Rectf& rect, const Color& color, float z_pos)
 {
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, modelview_stack.back());
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), z_pos, modelview_stack.back());
 
   array->set_mode(GL_QUADS);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -21,7 +21,7 @@
 
 #include <vector>
 
-#include "scenegraph/drawing_request.hpp"
+#include "scenegraph/drawable.hpp"
 
 class Texture;
 class Surface;
@@ -34,7 +34,7 @@
 class Color;
 class Compositor;
 
-/** The DrawingContext collects all DrawingRequests and allows you to
+/** The DrawingContext collects all Drawables and allows you to
     flush them all down to the graphics card in one run, this has the
     advantage that it is possible to z-sort, texture-id sort or
     otherwise optimize the drawing. In addition to that it also allows
@@ -43,8 +43,8 @@
 class DrawingContext
 {
 private:
-  typedef std::vector<DrawingRequest*> DrawingRequests;
-  DrawingRequests drawingrequests;
+  typedef std::vector<Drawable*> Drawables;
+  Drawables drawingrequests;
 
   std::vector<Matrix> modelview_stack;
 
@@ -59,7 +59,7 @@
   void clear();
 
   /** Fills the screen with a given color, this is different from
-      clear() in that it doesn't remove other DrawingRequest from the
+      clear() in that it doesn't remove other Drawable from the
       queue */
   void fill_screen(const Color& color);
 
@@ -75,7 +75,7 @@
   void fill_quad(const Quad& quad, const Color& color, float z_pos = 0);
 
   /*{ */
-  void draw(DrawingRequest* request);
+  void draw(Drawable* request);
   void draw(const Sprite&   sprite,  const Vector2f& pos, float z = 0);
   void draw(const std::string& text,    float x, float y, float z = 0);
   void draw(const Surface surface, const Vector2f& pos, float z = 0, float alpha = 0);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -280,7 +280,7 @@
         (*i)->draw(sc);
     }
 
-  //sc.color().draw(new SceneGraphDrawingRequest(*scene_graph, sc.color().get_modelview()));
+  //sc.color().draw(new SceneGraphDrawable(*scene_graph, sc.color().get_modelview()));
 }
 
 void Sector::commit_adds()

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -18,7 +18,7 @@
 
 #include "objects/background_gradient.hpp"
 
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "display/display.hpp"
 
 BackgroundGradient::BackgroundGradient(FileReader& props)
@@ -69,7 +69,7 @@
 
   Rectf rect(0.0f, 0.0f, 
              static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, 
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), z_pos, 
                                                                    sc.color().get_modelview());
 
   array->set_mode(GL_QUAD_STRIP);

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -20,7 +20,7 @@
 
 #include "engine/sector.hpp"
 #include "scenegraph/scene_graph.hpp"
-#include "scenegraph/surface_drawing_request.hpp"
+#include "scenegraph/surface_drawable.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
 
@@ -60,7 +60,7 @@
   Vector2f center_offset(-surface.get_width() /2,
                          -surface.get_height()/2);
 
-  drawable.reset(new SurfaceDrawingRequest(surface,
+  drawable.reset(new SurfaceDrawable(surface,
                                            params
                                            .set_pos(pos + center_offset)
                                            .set_angle(angle)

Modified: trunk/windstille/src/objects/decal.hpp
===================================================================
--- trunk/windstille/src/objects/decal.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/decal.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -24,12 +24,12 @@
 #include "display/surface.hpp"
 #include "engine/game_object.hpp"
 
-class SurfaceDrawingRequest;
+class SurfaceDrawable;
 
 class Decal : public GameObject
 {
 private:
-  boost::shared_ptr<SurfaceDrawingRequest> drawable;
+  boost::shared_ptr<SurfaceDrawable> drawable;
   Vector2f pos;
 
 public:

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
 #include "tile/tile_map.hpp"
@@ -119,7 +119,7 @@
   
     Vector2f ray = target - pos;
 
-    VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0,0), 10000,
+    VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0,0), 10000,
                                                                      sc.highlight().get_modelview());
     array->set_mode(GL_LINES);
     array->set_texture(noise);

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "objects/liquid.hpp"
 
 #define SAMPLES 5
@@ -64,7 +64,7 @@
 {
   float texscale = 1.0f/128.0f;
   {
-    VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(pos.x, pos.y), 10000,
+    VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(pos.x, pos.y), 10000,
                                                                      sc.light().get_modelview());
     array->set_texture(texture);
     array->set_mode(GL_QUAD_STRIP);
@@ -93,7 +93,7 @@
     sc.color().draw(array);
   }
   {
-    VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(pos.x, pos.y), 10000,
+    VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(pos.x, pos.y), 10000,
                                                                      sc.light().get_modelview());
     array->set_texture(texture);
     array->set_mode(GL_QUAD_STRIP);

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -19,7 +19,7 @@
 #include "objects/nightvision.hpp"
 
 #include "display/display.hpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "math/random.hpp"
 
 Nightvision::Nightvision(FileReader& /*props*/)
@@ -52,7 +52,7 @@
 
   if (1)
     {
-      VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), 10000,
+      VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), 10000,
                                                                        sc.light().get_modelview());
       array->set_mode(GL_QUADS);
       array->set_texture(noise);

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/player.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -30,7 +30,7 @@
 #include "tile/tile.hpp"
 #include "tile/tile_map.hpp"
 #include "scenegraph/scene_graph.hpp"
-#include "scenegraph/sprite3d_drawing_request.hpp"
+#include "scenegraph/sprite3d_drawable.hpp"
 
 static const int MAX_ENERGY = 16;
 static const float WALK_SPEED = 100.0;
@@ -79,7 +79,7 @@
   weapon.reset(new Pistol());
   laser_pointer = ((Pistol*)weapon.get())->laser_pointer;
 
-  m_drawable.reset(new Sprite3DDrawingRequest(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
+  m_drawable.reset(new Sprite3DDrawable(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
   Sector::current()->get_scene_graph().add_drawable(m_drawable);
 }
 

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/player.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -35,7 +35,7 @@
 class CollisionObject;
 class CollisionData;
 class Weapon;
-class Sprite3DDrawingRequest;
+class Sprite3DDrawable;
 
 class Player : public Entity,
                public Currenton<Player>
@@ -43,7 +43,7 @@
 private:
   Sprite3D sprite;
 
-  boost::shared_ptr<Sprite3DDrawingRequest> m_drawable;
+  boost::shared_ptr<Sprite3DDrawable> m_drawable;
   //std::auto_ptr<SoundSource> sound_source;
 
   bool jumping;

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -20,26 +20,26 @@
 #include "display/shader_object.hpp"
 #include "objects/shockwave.hpp"
 
-class ShockwaveDrawingRequest : public DrawingRequest
+class ShockwaveDrawable : public Drawable
 {
 public:
   Texture       noise;
   ShaderProgram shader_program;
   float radius;
 
-  ShockwaveDrawingRequest(const Vector2f& pos_, 
+  ShockwaveDrawable(const Vector2f& pos_, 
                           const Texture&       noise_,
                           const ShaderProgram& shader_program_,
                           float r,
                           const Matrix& modelview_) 
-    : DrawingRequest(pos_, 500.0f, modelview_),
+    : Drawable(pos_, 500.0f, modelview_),
       noise(noise_),
       shader_program(shader_program_),
       radius(r)
   {
   }
 
-  ~ShockwaveDrawingRequest()
+  ~ShockwaveDrawable()
   {
   }
 
@@ -238,7 +238,7 @@
 void
 Shockwave::draw (SceneContext& sc)
 {
-  sc.highlight().draw(new ShockwaveDrawingRequest(pos,
+  sc.highlight().draw(new ShockwaveDrawable(pos,
                                                    noise,
                                                    shader_program,
                                                    radius,

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/objects/swarm.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -16,7 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "math/random.hpp"
 #include "screen/game_session.hpp"
 #include "screen/view.hpp"
@@ -57,7 +57,7 @@
 void
 Swarm::draw(SceneContext& sc)
 {
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), 
+  VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(0, 0), 
                                                                    1000.0f, sc.highlight().get_modelview());
 
   array->set_mode(GL_QUADS);

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -25,7 +25,7 @@
 #include "particles/particle_system.hpp"
 #include "display/opengl_state.hpp"
 
-class DeformDrawerRequest : public DrawingRequest
+class DeformDrawerRequest : public Drawable
 {
 public:
   Framebuffer&      framebuffer;
@@ -36,7 +36,7 @@
   DeformDrawerRequest(const Vector2f& pos_, float z_pos_,  const Matrix& modelview_,
                       Framebuffer& framebuffer_, Surface& surface_, ParticleSystem& psys_,
                       ShaderProgram& shader_program_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
+    : Drawable(pos_, z_pos_, modelview_),
       framebuffer(framebuffer_), surface(surface_), psys(psys_), 
       shader_program(shader_program_)
   {}

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -18,7 +18,7 @@
 
 #include "display/drawing_context.hpp"
 #include "util/file_reader.hpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "particles/particle_system.hpp"
 #include "particles/spark_drawer.hpp"
 
@@ -33,7 +33,7 @@
 void
 SparkDrawer::draw(DrawingContext& dc, ParticleSystem& psys) 
 {
-  VertexArrayDrawingRequest* buffer = new VertexArrayDrawingRequest(Vector2f(0, 0), psys.get_z_pos(),
+  VertexArrayDrawable* buffer = new VertexArrayDrawable(Vector2f(0, 0), psys.get_z_pos(),
                                                                     dc.get_modelview());
   if (width == 1.0f)
     {

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -17,7 +17,7 @@
 */
 
 #include "util/file_reader.cpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 #include "particles/particle_system.hpp"
 #include "display/surface_manager.hpp"
 #include "display/drawing_context.hpp"
@@ -91,8 +91,8 @@
 void
 SurfaceDrawer::draw(DrawingContext& dc, ParticleSystem& psys) 
 {          
-  VertexArrayDrawingRequest* buffer 
-    = new VertexArrayDrawingRequest(Vector2f(psys.get_x_pos(), psys.get_y_pos()), psys.get_z_pos(),
+  VertexArrayDrawable* buffer 
+    = new VertexArrayDrawable(Vector2f(psys.get_x_pos(), psys.get_y_pos()), psys.get_z_pos(),
                                     dc.get_modelview());
 
   buffer->set_mode(GL_QUADS);

Copied: trunk/windstille/src/scenegraph/control_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/control_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/control_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/control_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,60 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
+
+class ControlDrawable : public Drawable
+{
+private:
+  Surface surface;
+  float angle;
+
+public:
+  ControlDrawable(Surface surface_, const Vector2f& pos_, float angle_, float z_pos_,
+                        const Matrix& modelview_)
+    : Drawable(pos_, z_pos_, modelview_), 
+      surface(surface_), 
+      angle(angle_)
+  {}
+
+  virtual ~ControlDrawable() {}
+
+  void draw(const Texture& /*tmp_texture*/)
+  {
+    glPushMatrix();
+
+    // FIXME: This looks badly broken, should modelview.multiply() be enough?
+    glTranslatef(modelview.matrix[12],
+                 modelview.matrix[13],
+                 modelview.matrix[14]);
+
+    Vector3 p = modelview.multiply(Vector3(pos.x, pos.y, 0.0f));
+
+    surface.draw(SurfaceDrawingParameters()
+                 .set_angle(angle)
+                 .set_pos(Vector2f(p.x - surface.get_width()/2,
+                                   p.y - surface.get_height()/2)));
+
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/control_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/control_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/control_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,60 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
-
-class ControlDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  float angle;
-
-public:
-  ControlDrawingRequest(Surface surface_, const Vector2f& pos_, float angle_, float z_pos_,
-                        const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), 
-      surface(surface_), 
-      angle(angle_)
-  {}
-
-  virtual ~ControlDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/)
-  {
-    glPushMatrix();
-
-    // FIXME: This looks badly broken, should modelview.multiply() be enough?
-    glTranslatef(modelview.matrix[12],
-                 modelview.matrix[13],
-                 modelview.matrix[14]);
-
-    Vector3 p = modelview.multiply(Vector3(pos.x, pos.y, 0.0f));
-
-    surface.draw(SurfaceDrawingParameters()
-                 .set_angle(angle)
-                 .set_pos(Vector2f(p.x - surface.get_width()/2,
-                                   p.y - surface.get_height()/2)));
-
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,85 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
+
+#include "math/vector2f.hpp"
+#include "math/rect.hpp"
+#include "math/matrix.hpp"
+#include "display/texture.hpp"
+
+class Drawable
+{
+protected:
+  Vector2f pos;
+  float    z_pos;
+  Matrix   modelview;
+  unsigned int render_mask;
+
+public:
+  Drawable(const Vector2f& pos_, float z_pos_ = 0,  const Matrix& modelview_ = Matrix::identity())
+    : pos(pos_), 
+      z_pos(z_pos_), 
+      modelview(modelview_),
+      render_mask(0)
+  {}
+  virtual ~Drawable() {}
+  
+  /**
+   * The draw() method does the important work in Drawable,
+   * ie. it is the place where you can access the screen with raw
+   * OpenGL methods. The \a tmp_texture provides a texture of the
+   * current framebuffer, you have to copy the \a screen_texture to it
+   * to contain usefull content
+   */
+  virtual void draw(const Texture& tmp_texture) = 0;
+
+  /**
+   * This method is called before draw() to allow the Drawable
+   * to copy content from \a screen_texture, which is the current
+   * framebuffer to a temporary buffer which can then be used in
+   * draw() for deformation effects
+   */
+  virtual void prepare(const Texture& screen_texture) {
+      (void) screen_texture;
+  }
+
+  /**
+   * Override this and let it return true if you need to prepare()
+   * function call
+   */
+  virtual bool needs_prepare() { return false; }
+  
+  /** Returns the position at which the request should be drawn */
+  float get_z_pos() const { return z_pos; }
+
+  Matrix get_modelview() const
+  { return modelview; }
+
+  void set_render_mask(unsigned int mask) { render_mask = mask; }
+  unsigned int get_render_mask() const { return render_mask; }
+
+private:
+  Drawable (const Drawable&);
+  Drawable& operator= (const Drawable&);
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,85 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
-
-#include "math/vector2f.hpp"
-#include "math/rect.hpp"
-#include "math/matrix.hpp"
-#include "display/texture.hpp"
-
-class DrawingRequest
-{
-protected:
-  Vector2f pos;
-  float    z_pos;
-  Matrix   modelview;
-  unsigned int render_mask;
-
-public:
-  DrawingRequest(const Vector2f& pos_, float z_pos_ = 0,  const Matrix& modelview_ = Matrix::identity())
-    : pos(pos_), 
-      z_pos(z_pos_), 
-      modelview(modelview_),
-      render_mask(0)
-  {}
-  virtual ~DrawingRequest() {}
-  
-  /**
-   * The draw() method does the important work in DrawingRequest,
-   * ie. it is the place where you can access the screen with raw
-   * OpenGL methods. The \a tmp_texture provides a texture of the
-   * current framebuffer, you have to copy the \a screen_texture to it
-   * to contain usefull content
-   */
-  virtual void draw(const Texture& tmp_texture) = 0;
-
-  /**
-   * This method is called before draw() to allow the DrawingRequest
-   * to copy content from \a screen_texture, which is the current
-   * framebuffer to a temporary buffer which can then be used in
-   * draw() for deformation effects
-   */
-  virtual void prepare(const Texture& screen_texture) {
-      (void) screen_texture;
-  }
-
-  /**
-   * Override this and let it return true if you need to prepare()
-   * function call
-   */
-  virtual bool needs_prepare() { return false; }
-  
-  /** Returns the position at which the request should be drawn */
-  float get_z_pos() const { return z_pos; }
-
-  Matrix get_modelview() const
-  { return modelview; }
-
-  void set_render_mask(unsigned int mask) { render_mask = mask; }
-  unsigned int get_render_mask() const { return render_mask; }
-
-private:
-  DrawingRequest (const DrawingRequest&);
-  DrawingRequest& operator= (const DrawingRequest&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/fill_screen_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/fill_screen_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,47 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
+
+
+
+class FillScreenDrawable : public Drawable
+{
+private:
+  Color color;
+
+public:
+  FillScreenDrawable(const Color& color_) 
+    : Drawable(Vector2f(0, 0), -1000.0f), color(color_)
+  {
+  }
+  virtual ~FillScreenDrawable() {}
+
+  void draw(const Texture& /*tmp_texture*/) {
+    OpenGLState state;
+    // FIXME: move clear color to opengl_state
+    state.activate();
+    glClearColor(color.r, color.g, color.b, color.a);
+    glClear(GL_COLOR_BUFFER_BIT);
+  }
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/fill_screen_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,47 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
-
-
-
-class FillScreenDrawingRequest : public DrawingRequest
-{
-private:
-  Color color;
-
-public:
-  FillScreenDrawingRequest(const Color& color_) 
-    : DrawingRequest(Vector2f(0, 0), -1000.0f), color(color_)
-  {
-  }
-  virtual ~FillScreenDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) {
-    OpenGLState state;
-    // FIXME: move clear color to opengl_state
-    state.activate();
-    glClearColor(color.r, color.g, color.b, color.a);
-    glClear(GL_COLOR_BUFFER_BIT);
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,74 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+
+
+class FillScreenPatternDrawable : public Drawable
+{
+private:
+  Texture  texture;
+  Vector2f offset;
+public:
+  FillScreenPatternDrawable(const Texture& texture_, const Vector2f& offset_)
+    : Drawable(Vector2f(0, 0), -1000.0f), 
+      texture(texture_),
+      offset(offset_)
+  {}
+
+  virtual ~FillScreenPatternDrawable() {}
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+    state.bind_texture(texture);
+    state.activate();
+
+    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
+    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
+
+    float u_start = -offset.x / static_cast<float>(texture.get_width());
+    float v_start = -offset.y / static_cast<float>(texture.get_height());
+
+    u -= offset.x / static_cast<float>(texture.get_width());
+    v -= offset.y / static_cast<float>(texture.get_height());
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(u_start, v_start);
+      glVertex2f(0, 0);
+    
+      glTexCoord2f(u, v_start);
+      glVertex2f(static_cast<float>(Display::get_width()), 0);
+
+      glTexCoord2f(u, v);
+      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
+
+      glTexCoord2f(u_start, v);
+      glVertex2f(0,  static_cast<float>(Display::get_height()));
+    }
+    glEnd();
+  }
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/fill_screen_pattern_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,74 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
-
-
-class FillScreenPatternDrawingRequest : public DrawingRequest
-{
-private:
-  Texture  texture;
-  Vector2f offset;
-public:
-  FillScreenPatternDrawingRequest(const Texture& texture_, const Vector2f& offset_)
-    : DrawingRequest(Vector2f(0, 0), -1000.0f), 
-      texture(texture_),
-      offset(offset_)
-  {}
-
-  virtual ~FillScreenPatternDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    OpenGLState state;
-    state.enable(GL_BLEND);
-    state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-    state.bind_texture(texture);
-    state.activate();
-
-    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
-    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
-
-    float u_start = -offset.x / static_cast<float>(texture.get_width());
-    float v_start = -offset.y / static_cast<float>(texture.get_height());
-
-    u -= offset.x / static_cast<float>(texture.get_width());
-    v -= offset.y / static_cast<float>(texture.get_height());
-
-    glBegin(GL_QUADS);
-    {
-      glTexCoord2f(u_start, v_start);
-      glVertex2f(0, 0);
-    
-      glTexCoord2f(u, v_start);
-      glVertex2f(static_cast<float>(Display::get_width()), 0);
-
-      glTexCoord2f(u, v);
-      glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
-
-      glTexCoord2f(u_start, v);
-      glVertex2f(0,  static_cast<float>(Display::get_height()));
-    }
-    glEnd();
-  }
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -18,21 +18,21 @@
 
 #include "scenegraph/scene_graph.hpp"
 
-#include "scenegraph/drawing_request.hpp"
+#include "scenegraph/drawable.hpp"
 
 SceneGraph::SceneGraph()
-  : m_drawing_requests()
+  : m_drawables()
 {
 }
 
 void
-SceneGraph::add_drawable(boost::shared_ptr<DrawingRequest> drawable)
+SceneGraph::add_drawable(boost::shared_ptr<Drawable> drawable)
 {
-  m_drawing_requests.push_back(drawable);
+  m_drawables.push_back(drawable);
 }
 
 void
-SceneGraph::remove_drawable(boost::shared_ptr<DrawingRequest> /*drawable*/)
+SceneGraph::remove_drawable(boost::shared_ptr<Drawable> /*drawable*/)
 {
   // FIXME: implement me
 }
@@ -40,7 +40,7 @@
 void
 SceneGraph::draw(const Texture& tmp_texture, unsigned int mask)
 {
-  for(DrawingRequests::reverse_iterator i = m_drawing_requests.rbegin(); i != m_drawing_requests.rend(); ++i)
+  for(Drawables::reverse_iterator i = m_drawables.rbegin(); i != m_drawables.rend(); ++i)
   {
     if ((*i)->get_render_mask() & mask)
       (*i)->draw(tmp_texture);

Modified: trunk/windstille/src/scenegraph/scene_graph.hpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/scene_graph.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -22,20 +22,20 @@
 #include <boost/shared_ptr.hpp>
 #include <vector>
 
-class DrawingRequest;
+class Drawable;
 class Texture;
 
 class SceneGraph
 {
 private:
-  typedef std::vector<boost::shared_ptr<DrawingRequest> > DrawingRequests;
-  DrawingRequests m_drawing_requests;
+  typedef std::vector<boost::shared_ptr<Drawable> > Drawables;
+  Drawables m_drawables;
 
 public:
   SceneGraph();
 
-  void add_drawable(boost::shared_ptr<DrawingRequest> drawable);
-  void remove_drawable(boost::shared_ptr<DrawingRequest> drawable);
+  void add_drawable(boost::shared_ptr<Drawable> drawable);
+  void remove_drawable(boost::shared_ptr<Drawable> drawable);
 
   void draw(const Texture& tmp_texture, unsigned int mask);
 

Copied: trunk/windstille/src/scenegraph/sprite3d_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,53 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+
+#include "sprite3d/sprite3d.hpp"
+#include "scenegraph/drawable.hpp"
+
+class Sprite3DDrawable : public Drawable
+{
+private:
+  const Sprite3D* sprite;
+
+public:
+  Sprite3DDrawable(const Sprite3D* sprite_, 
+                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+    : Drawable(pos_, z_pos_, modelview_), sprite(sprite_)
+  {}
+
+  void draw(const Texture& /*tmp_texture*/)
+  {
+    sprite->draw(pos, modelview);
+  }
+
+  void set_pos(const Vector2f& pos_)
+  {
+    pos = pos_;
+  }
+
+private:
+  Sprite3DDrawable(const Sprite3DDrawable&);
+  Sprite3DDrawable& operator=(const Sprite3DDrawable&);
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/sprite3d_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,53 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
-
-#include "sprite3d/sprite3d.hpp"
-#include "scenegraph/drawing_request.hpp"
-
-class Sprite3DDrawingRequest : public DrawingRequest
-{
-private:
-  const Sprite3D* sprite;
-
-public:
-  Sprite3DDrawingRequest(const Sprite3D* sprite_, 
-                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_), sprite(sprite_)
-  {}
-
-  void draw(const Texture& /*tmp_texture*/)
-  {
-    sprite->draw(pos, modelview);
-  }
-
-  void set_pos(const Vector2f& pos_)
-  {
-    pos = pos_;
-  }
-
-private:
-  Sprite3DDrawingRequest(const Sprite3DDrawingRequest&);
-  Sprite3DDrawingRequest& operator=(const Sprite3DDrawingRequest&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/surface_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/surface_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/surface_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/surface_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,59 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+
+#include "scenegraph/surface_drawable.hpp"
+#include "display/surface_drawing_parameters.hpp"
+
+class SurfaceDrawable : public Drawable
+{
+private:
+  Surface surface;
+  SurfaceDrawingParameters params;
+
+public:
+  SurfaceDrawable(Surface surface_, const SurfaceDrawingParameters& params_,
+                        float z_pos_,
+                        const Matrix& modelview_)
+    : Drawable(pos, z_pos_, modelview_), 
+      surface(surface_), 
+      params(params_)
+  {}
+
+  virtual ~SurfaceDrawable()
+  {}
+  
+  Surface get_surface() const { return surface; }
+  SurfaceDrawingParameters& get_params() { return params; }
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    surface.draw(params);
+
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/surface_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/surface_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/surface_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,59 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
-
-#include "scenegraph/surface_drawing_request.hpp"
-#include "display/surface_drawing_parameters.hpp"
-
-class SurfaceDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  SurfaceDrawingParameters params;
-
-public:
-  SurfaceDrawingRequest(Surface surface_, const SurfaceDrawingParameters& params_,
-                        float z_pos_,
-                        const Matrix& modelview_)
-    : DrawingRequest(pos, z_pos_, modelview_), 
-      surface(surface_), 
-      params(params_)
-  {}
-
-  virtual ~SurfaceDrawingRequest()
-  {}
-  
-  Surface get_surface() const { return surface; }
-  SurfaceDrawingParameters& get_params() { return params; }
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    surface.draw(params);
-
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/surface_quad_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/surface_quad_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,77 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+
+#include "math/vector2f.hpp"
+#include "math/quad.hpp"
+#include "scenegraph/drawable.hpp"
+
+class SurfaceQuadDrawable : public Drawable
+{
+private:
+  Surface surface;
+  Quad quad;
+  DrawingParameters params;
+
+public:
+  SurfaceQuadDrawable(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
+                            const DrawingParameters& params_, float z_pos_,
+                            const Matrix& modelview_)
+    : Drawable(pos_, z_pos_, modelview_),
+      surface(surface_),
+      quad(quad_),
+      params(params_)
+  {
+  }
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
+    state.bind_texture(surface.get_texture());
+    state.activate();
+
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
+    
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
+
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
+
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
+    }
+    glEnd();
+
+    glPopMatrix();    
+  }
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/surface_quad_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,77 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
-
-#include "math/vector2f.hpp"
-#include "math/quad.hpp"
-#include "scenegraph/drawing_request.hpp"
-
-class SurfaceQuadDrawingRequest : public DrawingRequest
-{
-private:
-  Surface surface;
-  Quad quad;
-  DrawingParameters params;
-
-public:
-  SurfaceQuadDrawingRequest(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
-                            const DrawingParameters& params_, float z_pos_,
-                            const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
-      surface(surface_),
-      quad(quad_),
-      params(params_)
-  {
-  }
-
-  void draw(const Texture& /*tmp_texture*/) 
-  {
-    OpenGLState state;
-    state.enable(GL_BLEND);
-    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
-    state.bind_texture(surface.get_texture());
-    state.activate();
-
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-
-    glBegin(GL_QUADS);
-    {
-      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
-      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
-    
-      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
-      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
-
-      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
-      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
-
-      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
-      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
-    }
-    glEnd();
-
-    glPopMatrix();    
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/text_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/text_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/text_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/text_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,43 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
+
+class TextDrawable : public Drawable
+{
+private:
+  std::string text;
+public:
+  TextDrawable(const std::string& text_, const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+    : Drawable(pos_, z_pos_, modelview_),
+      text(text_)
+  {}
+  virtual ~TextDrawable() {}
+
+  void draw(const Texture& /*tmp_texture*/) {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+    Fonts::current()->ttffont->draw(pos, text);
+    glPopMatrix();
+  }
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/text_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/text_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/text_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,43 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
-
-class TextDrawingRequest : public DrawingRequest
-{
-private:
-  std::string text;
-public:
-  TextDrawingRequest(const std::string& text_, const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : DrawingRequest(pos_, z_pos_, modelview_),
-      text(text_)
-  {}
-  virtual ~TextDrawingRequest() {}
-
-  void draw(const Texture& /*tmp_texture*/) {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-    Fonts::current()->ttffont->draw(pos, text);
-    glPopMatrix();
-  }
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/scenegraph/vertex_array_drawable.cpp (from rev 3102, trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp)
===================================================================
--- trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/vertex_array_drawable.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,183 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/opengl_state.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
+
+VertexArrayDrawable::VertexArrayDrawable(const Vector2f& pos_, float z_pos_, 
+                                                     const Matrix& modelview_)
+  : Drawable(pos_, z_pos_, modelview_),
+    mode(GL_QUADS),
+    blend_sfactor(GL_SRC_ALPHA),
+    blend_dfactor(GL_ONE_MINUS_SRC_ALPHA),
+    texture(),
+    colors(),
+    texcoords(),
+    vertices()
+{
+}
+
+int
+VertexArrayDrawable::num_vertices() const
+{
+  return vertices.size()/3;
+}
+
+void
+VertexArrayDrawable::clear()
+{
+  colors.clear();
+  texcoords.clear();
+  vertices.clear();
+}
+
+void
+VertexArrayDrawable::draw(const Texture& /*tmp_texture*/)
+{
+  draw(0, num_vertices());
+}
+
+void
+VertexArrayDrawable::draw(int start, int end)
+{
+  assert(!vertices.empty());
+  assert(texcoords.empty() || int(texcoords.size()/2) == num_vertices());
+  assert(colors.empty() || int(colors.size()/4) == num_vertices());
+
+  OpenGLState state;
+
+  glClear(GL_DEPTH_BUFFER_BIT);
+  state.disable(GL_DEPTH_TEST);
+  state.enable(GL_BLEND);
+  state.set_blend_func(blend_sfactor, blend_dfactor);
+  
+  if (texture)
+    {
+      state.bind_texture(texture);
+    }
+
+  if (!colors.empty())
+    {
+      state.enable_client_state(GL_COLOR_ARRAY);
+      glColorPointer(4, GL_UNSIGNED_BYTE, 0, &*colors.begin());
+    }
+  else
+    {
+      state.disable_client_state(GL_COLOR_ARRAY);
+      state.color(Color(1.0f, 1.0f, 1.0f));
+    }
+
+  if (!texcoords.empty())
+    {
+      state.enable_client_state(GL_TEXTURE_COORD_ARRAY);
+      glTexCoordPointer(2, GL_FLOAT, 0, &*texcoords.begin());
+    }
+  else
+    {
+      state.disable_client_state(GL_TEXTURE_COORD_ARRAY);
+    }
+
+  // FIXME: Might be worth to not use VertexArrays when we have a pretty small number of vertices
+  state.disable_client_state(GL_NORMAL_ARRAY);
+  state.enable_client_state(GL_VERTEX_ARRAY);
+
+  glVertexPointer(3, GL_FLOAT, 0, &*vertices.begin());
+
+  state.activate();
+
+  glPushMatrix();
+  glMultMatrixf(modelview.matrix);
+
+  glDrawArrays(mode, start, end);
+
+  glPopMatrix();
+}
+
+void
+VertexArrayDrawable::vertex(const Vector2f& vec, float z)
+{
+  vertex(vec.x, vec.y, z);
+}
+
+void
+VertexArrayDrawable::vertex(float x, float y, float z)
+{
+  vertices.push_back(x + pos.x);
+  vertices.push_back(y + pos.y);
+  vertices.push_back(z);
+}
+
+void
+VertexArrayDrawable::texcoord(float u, float v)
+{
+  texcoords.push_back(u);
+  texcoords.push_back(v);
+}
+
+void
+VertexArrayDrawable::add_texcoords(const Rectf& rect)
+{
+  texcoords.push_back(rect.left);
+  texcoords.push_back(rect.top);
+  texcoords.push_back(rect.right);
+  texcoords.push_back(rect.top);
+  texcoords.push_back(rect.right);
+  texcoords.push_back(rect.bottom);
+  texcoords.push_back(rect.left);
+  texcoords.push_back(rect.bottom);
+}
+
+void
+VertexArrayDrawable::add_texcoords(const float* coords, size_t n)
+{
+  assert(n % 2 == 0);
+  for(size_t i = 0; i < n; ++i)
+  {
+    texcoords.push_back(coords[i]);
+  }
+}
+
+void
+VertexArrayDrawable::color(const Color& color_)
+{
+  colors.push_back(static_cast<unsigned char>(color_.r * 255));
+  colors.push_back(static_cast<unsigned char>(color_.g * 255));
+  colors.push_back(static_cast<unsigned char>(color_.b * 255));
+  colors.push_back(static_cast<unsigned char>(color_.a * 255));
+}
+
+void
+VertexArrayDrawable::set_texture(Texture texture_)
+{
+  texture = texture_;
+}
+
+void
+VertexArrayDrawable::set_blend_func(GLenum sfactor, GLenum dfactor)
+{
+  blend_sfactor = sfactor;
+  blend_dfactor = dfactor;
+}
+
+void
+VertexArrayDrawable::set_mode(GLenum mode_)
+{
+  mode = mode_;
+}
+
+/* EOF */

Copied: trunk/windstille/src/scenegraph/vertex_array_drawable.hpp (from rev 3102, trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp)
===================================================================
--- trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/vertex_array_drawable.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -0,0 +1,71 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
+#define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
+
+#include <vector>
+
+#include "display/color.hpp"
+#include "scenegraph/drawable.hpp"
+
+/** */
+class VertexArrayDrawable : public Drawable
+{
+private:
+  GLenum mode;
+
+  GLenum blend_sfactor;
+  GLenum blend_dfactor;
+
+  Texture texture;
+  std::vector<unsigned char> colors;
+  std::vector<float> texcoords;
+  std::vector<float> vertices;
+
+public:
+  VertexArrayDrawable(const Vector2f& pos_, float z_pos_, const Matrix& modelview_);
+
+  void draw(const Texture& tmp_texture);
+  void draw(int start, int end);
+
+  void vertex(float x, float y, float z = 0.0f);
+  void vertex(const Vector2f& vec, float z = 0.0f);
+
+  void texcoord(float u, float v);
+  void color(const Color& color);
+  void add_texcoords(const float* coords, size_t n);
+  /**
+   * Add eight texcoords for use with a quad from a given rect. The
+   * coords are clockwise around the rect, ie:
+   * left, top, right, top, right, bottom, left, bottom,
+   */
+  void add_texcoords(const Rectf& coords);
+
+  int num_vertices() const;
+
+  void clear();
+
+  void set_mode(GLenum mode_);
+  void set_texture(Texture texture);
+  void set_blend_func(GLenum sfactor, GLenum dfactor);
+};
+
+#endif
+
+/* EOF */

Deleted: trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/vertex_array_drawing_request.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,183 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "display/opengl_state.hpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
-
-VertexArrayDrawingRequest::VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, 
-                                                     const Matrix& modelview_)
-  : DrawingRequest(pos_, z_pos_, modelview_),
-    mode(GL_QUADS),
-    blend_sfactor(GL_SRC_ALPHA),
-    blend_dfactor(GL_ONE_MINUS_SRC_ALPHA),
-    texture(),
-    colors(),
-    texcoords(),
-    vertices()
-{
-}
-
-int
-VertexArrayDrawingRequest::num_vertices() const
-{
-  return vertices.size()/3;
-}
-
-void
-VertexArrayDrawingRequest::clear()
-{
-  colors.clear();
-  texcoords.clear();
-  vertices.clear();
-}
-
-void
-VertexArrayDrawingRequest::draw(const Texture& /*tmp_texture*/)
-{
-  draw(0, num_vertices());
-}
-
-void
-VertexArrayDrawingRequest::draw(int start, int end)
-{
-  assert(!vertices.empty());
-  assert(texcoords.empty() || int(texcoords.size()/2) == num_vertices());
-  assert(colors.empty() || int(colors.size()/4) == num_vertices());
-
-  OpenGLState state;
-
-  glClear(GL_DEPTH_BUFFER_BIT);
-  state.disable(GL_DEPTH_TEST);
-  state.enable(GL_BLEND);
-  state.set_blend_func(blend_sfactor, blend_dfactor);
-  
-  if (texture)
-    {
-      state.bind_texture(texture);
-    }
-
-  if (!colors.empty())
-    {
-      state.enable_client_state(GL_COLOR_ARRAY);
-      glColorPointer(4, GL_UNSIGNED_BYTE, 0, &*colors.begin());
-    }
-  else
-    {
-      state.disable_client_state(GL_COLOR_ARRAY);
-      state.color(Color(1.0f, 1.0f, 1.0f));
-    }
-
-  if (!texcoords.empty())
-    {
-      state.enable_client_state(GL_TEXTURE_COORD_ARRAY);
-      glTexCoordPointer(2, GL_FLOAT, 0, &*texcoords.begin());
-    }
-  else
-    {
-      state.disable_client_state(GL_TEXTURE_COORD_ARRAY);
-    }
-
-  // FIXME: Might be worth to not use VertexArrays when we have a pretty small number of vertices
-  state.disable_client_state(GL_NORMAL_ARRAY);
-  state.enable_client_state(GL_VERTEX_ARRAY);
-
-  glVertexPointer(3, GL_FLOAT, 0, &*vertices.begin());
-
-  state.activate();
-
-  glPushMatrix();
-  glMultMatrixf(modelview.matrix);
-
-  glDrawArrays(mode, start, end);
-
-  glPopMatrix();
-}
-
-void
-VertexArrayDrawingRequest::vertex(const Vector2f& vec, float z)
-{
-  vertex(vec.x, vec.y, z);
-}
-
-void
-VertexArrayDrawingRequest::vertex(float x, float y, float z)
-{
-  vertices.push_back(x + pos.x);
-  vertices.push_back(y + pos.y);
-  vertices.push_back(z);
-}
-
-void
-VertexArrayDrawingRequest::texcoord(float u, float v)
-{
-  texcoords.push_back(u);
-  texcoords.push_back(v);
-}
-
-void
-VertexArrayDrawingRequest::add_texcoords(const Rectf& rect)
-{
-  texcoords.push_back(rect.left);
-  texcoords.push_back(rect.top);
-  texcoords.push_back(rect.right);
-  texcoords.push_back(rect.top);
-  texcoords.push_back(rect.right);
-  texcoords.push_back(rect.bottom);
-  texcoords.push_back(rect.left);
-  texcoords.push_back(rect.bottom);
-}
-
-void
-VertexArrayDrawingRequest::add_texcoords(const float* coords, size_t n)
-{
-  assert(n % 2 == 0);
-  for(size_t i = 0; i < n; ++i)
-  {
-    texcoords.push_back(coords[i]);
-  }
-}
-
-void
-VertexArrayDrawingRequest::color(const Color& color_)
-{
-  colors.push_back(static_cast<unsigned char>(color_.r * 255));
-  colors.push_back(static_cast<unsigned char>(color_.g * 255));
-  colors.push_back(static_cast<unsigned char>(color_.b * 255));
-  colors.push_back(static_cast<unsigned char>(color_.a * 255));
-}
-
-void
-VertexArrayDrawingRequest::set_texture(Texture texture_)
-{
-  texture = texture_;
-}
-
-void
-VertexArrayDrawingRequest::set_blend_func(GLenum sfactor, GLenum dfactor)
-{
-  blend_sfactor = sfactor;
-  blend_dfactor = dfactor;
-}
-
-void
-VertexArrayDrawingRequest::set_mode(GLenum mode_)
-{
-  mode = mode_;
-}
-
-/* EOF */

Deleted: trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp
===================================================================
--- trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/scenegraph/vertex_array_drawing_request.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -1,71 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
-
-#include <vector>
-
-#include "display/color.hpp"
-#include "scenegraph/drawing_request.hpp"
-
-/** */
-class VertexArrayDrawingRequest : public DrawingRequest
-{
-private:
-  GLenum mode;
-
-  GLenum blend_sfactor;
-  GLenum blend_dfactor;
-
-  Texture texture;
-  std::vector<unsigned char> colors;
-  std::vector<float> texcoords;
-  std::vector<float> vertices;
-
-public:
-  VertexArrayDrawingRequest(const Vector2f& pos_, float z_pos_, const Matrix& modelview_);
-
-  void draw(const Texture& tmp_texture);
-  void draw(int start, int end);
-
-  void vertex(float x, float y, float z = 0.0f);
-  void vertex(const Vector2f& vec, float z = 0.0f);
-
-  void texcoord(float u, float v);
-  void color(const Color& color);
-  void add_texcoords(const float* coords, size_t n);
-  /**
-   * Add eight texcoords for use with a quad from a given rect. The
-   * coords are clockwise around the rect, ie:
-   * left, top, right, top, right, bottom, left, bottom,
-   */
-  void add_texcoords(const Rectf& coords);
-
-  int num_vertices() const;
-
-  void clear();
-
-  void set_mode(GLenum mode_);
-  void set_texture(Texture texture);
-  void set_blend_func(GLenum sfactor, GLenum dfactor);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -23,7 +23,7 @@
 #include "util/util.hpp"
 #include "display/opengl_state.hpp"
 #include "sprite3d/manager.hpp"
-#include "scenegraph/sprite3d_drawing_request.hpp"
+#include "scenegraph/sprite3d_drawable.hpp"
 
 using namespace sprite3d;
 
@@ -329,13 +329,13 @@
 void
 Sprite3D::draw(DrawingContext& dc, const Vector2f& pos, float z_pos) const
 {
-  dc.draw(new Sprite3DDrawingRequest(this, pos, z_pos, dc.get_modelview()));
+  dc.draw(new Sprite3DDrawable(this, pos, z_pos, dc.get_modelview()));
 }
 
 void
 Sprite3D::draw(DrawingContext& dc, const Matrix& , float ) const
 {
-  dc.draw(new Sprite3DDrawingRequest(this, Vector2f(0, 0), 0.0f, dc.get_modelview()));
+  dc.draw(new Sprite3DDrawable(this, Vector2f(0, 0), 0.0f, dc.get_modelview()));
 }
 
 static inline float interpolate(float v1, float v2, float t)

Modified: trunk/windstille/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -125,7 +125,7 @@
   void set_blend_func(GLenum sfactor, GLenum dfactor);
   
 private:  
-  friend class Sprite3DDrawingRequest;
+  friend class Sprite3DDrawable;
   void draw(const Vector2f& pos, const Matrix& modelview) const;
   
   struct Frame {

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-08-28 15:42:24 UTC (rev 3102)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-08-28 15:51:08 UTC (rev 3103)
@@ -26,7 +26,7 @@
 #include "tile/tile.hpp"
 #include "tile/tile_factory.hpp"
 #include "screen/view.hpp"
-#include "scenegraph/vertex_array_drawing_request.hpp"
+#include "scenegraph/vertex_array_drawable.hpp"
 
 TileMap::TileMap(FileReader& props)
   : field(),
@@ -92,7 +92,7 @@
             std::min(field.get_width(),  clip_rect.right/TILE_SIZE + 1),
             std::min(field.get_height(), clip_rect.bottom/TILE_SIZE + 1));
   
-  std::vector<VertexArrayDrawingRequest*> requests;
+  std::vector<VertexArrayDrawable*> requests;
   for (int y = rect.top;   y < rect.bottom; ++y)
     for (int x = rect.left; x < rect.right; ++x)
       {
@@ -105,10 +105,10 @@
             if(packer >= int(requests.size()))
               requests.resize(packer+1);
 
-            VertexArrayDrawingRequest*& request = requests[packer];
+            VertexArrayDrawable*& request = requests[packer];
             if (!request)
               {
-                request = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos,
+                request = new VertexArrayDrawable(Vector2f(0, 0), z_pos,
                                                         sc.color().get_modelview());
                 request->set_mode(GL_QUADS);
                 request->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
@@ -129,7 +129,7 @@
           }
       }
 
-  for(std::vector<VertexArrayDrawingRequest*>::iterator i = requests.begin(); i != requests.end(); ++i)
+  for(std::vector<VertexArrayDrawable*>::iterator i = requests.begin(); i != requests.end(); ++i)
     {
       if (*i)
         sc.color().draw(*i);



From grumbel at mail.berlios.de  Fri Aug 28 18:18:33 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 18:18:33 +0200
Subject: [Windstille-commit] r3104 - in trunk/windstille/src: editor
	scenegraph
Message-ID: <200908281618.n7SGIXWl002627@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 18:18:32 +0200 (Fri, 28 Aug 2009)
New Revision: 3104

Modified:
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/scenegraph/scene_graph.cpp
Log:
Reversed layer order in the editor to match the game engine

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-28 15:51:08 UTC (rev 3103)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-28 16:18:32 UTC (rev 3104)
@@ -204,7 +204,7 @@
   // Draw Layers
   const Layers& layers = get_layers();
  
-  for(Layers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
+  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
     {
       if ((*i)->is_visible())
         (*i)->draw(sc, layermask);
@@ -246,7 +246,7 @@
   const Layers& layers = get_layers();
   SelectionHandle selection = Selection::create();
 
-  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
     {
       if ((*i)->is_visible() && !(*i)->is_locked())
         {
@@ -266,7 +266,7 @@
   const Layers& layers = get_layers();
   SelectionHandle selection = Selection::create();
 
-  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
     {
       if ((*i)->is_visible() && !(*i)->is_locked())
         {
@@ -282,7 +282,7 @@
 SectorModel::get_layer(ObjectModelHandle object)
 {
   const Layers& layers = get_layers();
-  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
     {
       if ((*i)->has_object(object))
         return *i;

Modified: trunk/windstille/src/scenegraph/scene_graph.cpp
===================================================================
--- trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 15:51:08 UTC (rev 3103)
+++ trunk/windstille/src/scenegraph/scene_graph.cpp	2009-08-28 16:18:32 UTC (rev 3104)
@@ -40,7 +40,7 @@
 void
 SceneGraph::draw(const Texture& tmp_texture, unsigned int mask)
 {
-  for(Drawables::reverse_iterator i = m_drawables.rbegin(); i != m_drawables.rend(); ++i)
+  for(Drawables::iterator i = m_drawables.begin(); i != m_drawables.end(); ++i)
   {
     if ((*i)->get_render_mask() & mask)
       (*i)->draw(tmp_texture);



From grumbel at mail.berlios.de  Fri Aug 28 18:41:57 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 18:41:57 +0200
Subject: [Windstille-commit] r3105 - trunk/windstille/src/editor
Message-ID: <200908281641.n7SGfvdV014005@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 18:41:48 +0200 (Fri, 28 Aug 2009)
New Revision: 3105

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Added reorder function to fix existing levels

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-28 16:18:32 UTC (rev 3104)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-28 16:41:48 UTC (rev 3105)
@@ -135,6 +135,7 @@
     "    <menu action='MenuLayer'>"
     "      <menuitem action='NewLayer'/>"
     "      <menuitem action='DeleteLayer'/>"
+    "      <menuitem action='ReverseLayers'/>"
     "      <separator/>"
     "      <menuitem action='ShowAllLayer'/>"
     "      <menuitem action='HideAllLayer'/>"
@@ -917,10 +918,20 @@
 
       CommandHandle cmd(new LayerDeleteCommand(*wst->get_sector_model(), wst->get_current_layer_path()));
       wst->execute(cmd);
+      queue_draw();
     }
 }
 
 void
+EditorWindow::on_reverse_layers()
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->get_sector_model()->reverse_layers();
+    }
+}
+
+void
 EditorWindow::on_new_layer()
 {
   if (WindstilleWidget* wst = get_windstille_widget())

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-08-28 16:18:32 UTC (rev 3104)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-08-28 16:41:48 UTC (rev 3105)
@@ -138,6 +138,7 @@
 
   void on_new_layer();
   void on_delete_layer();
+  void on_reverse_layers();
 
   Tool* get_current_tool() const;
 

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-08-28 16:18:32 UTC (rev 3104)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-08-28 16:41:48 UTC (rev 3105)
@@ -48,6 +48,8 @@
                     sigc::mem_fun(editor, &EditorWindow::on_new_layer));
   action_group->add(Gtk::Action::create("DeleteLayer", Gtk::Stock::DELETE),
                     sigc::mem_fun(editor, &EditorWindow::on_delete_layer));
+  action_group->add(Gtk::Action::create("ReverseLayers", Gtk::Stock::SORT_ASCENDING),
+                    sigc::mem_fun(editor, &EditorWindow::on_reverse_layers));
 
   action_group->add(Gtk::Action::create_with_icon_name("ShowAllLayer", "show_all", "Show All", "Show All Layer"),
                     sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_show_all), true));

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-28 16:18:32 UTC (rev 3104)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-28 16:41:48 UTC (rev 3105)
@@ -113,6 +113,18 @@
 }
 
 void
+SectorModel::reverse_layers()
+{
+  std::vector<int> reverse_order;
+
+  size_t size = layer_tree->children().size();
+  for(int i = size-1; i >= 0; --i)
+    reverse_order.push_back(i);
+
+  layer_tree->reorder(reverse_order);
+}
+
+void
 SectorModel::add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path)
 {
   if (path.empty())

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-08-28 16:18:32 UTC (rev 3104)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-08-28 16:41:48 UTC (rev 3105)
@@ -94,7 +94,8 @@
   void add_layer(const std::string& name, const Gtk::TreeModel::Path& path = Gtk::TreeModel::Path());
   void add_layer(LayerHandle layer, const Gtk::TreeModel::Path& path = Gtk::TreeModel::Path());
   void delete_layer(const Gtk::TreeModel::Path& path);
-
+  void reverse_layers();
+  
   void add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path);
   void remove(const ObjectModelHandle& object);
   LayerHandle get_layer(const ObjectModelHandle& object) const;



From grumbel at mail.berlios.de  Fri Aug 28 18:56:14 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 18:56:14 +0200
Subject: [Windstille-commit] r3107 - trunk/windstille/src/objects
Message-ID: <200908281656.n7SGuEfu027952@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 18:56:07 +0200 (Fri, 28 Aug 2009)
New Revision: 3107

Modified:
   trunk/windstille/src/objects/player.cpp
Log:
Do not use current physics if there is no tilemap

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-28 16:46:43 UTC (rev 3106)
+++ trunk/windstille/src/objects/player.cpp	2009-08-28 16:56:07 UTC (rev 3107)
@@ -150,13 +150,22 @@
 void 
 Player::update(const Controller& controller, float delta)
 {
-  weapon->update(delta);
+  if (!Sector::current()->get_tilemap())
+  {
+    pos.x += controller.get_axis_state(X_AXIS);
+    pos.y += controller.get_axis_state(Y_AXIS);
+    
+    m_drawable->set_pos(pos);
+  }
+  else
+  {
+    weapon->update(delta);
 
-  if (laser_pointer->is_active())
-    laser_pointer->update(delta);
+    if (laser_pointer->is_active())
+      laser_pointer->update(delta);
 
-  if (fabsf(controller.get_axis_state(X2_AXIS, false)) > 0.25f ||
-      fabsf(controller.get_axis_state(Y2_AXIS, false)) > 0.25f)
+    if (fabsf(controller.get_axis_state(X2_AXIS, false)) > 0.25f ||
+        fabsf(controller.get_axis_state(Y2_AXIS, false)) > 0.25f)
     {
       float angle = atan2f(controller.get_axis_state(Y2_AXIS, false),
                            controller.get_axis_state(X2_AXIS, false));
@@ -164,78 +173,79 @@
       laser_pointer->set_active(true);
       laser_pointer->set_angle(angle);
     }
-  else
+    else
     {
       laser_pointer->set_active(false);
     }
 
-  if (GameSession::current()->is_active())
+    if (GameSession::current()->is_active())
     {
       switch(state)
-        {
-          case STAND:
-          case WALK:
-            update_walk_stand(controller);
-            break;
-          case RUN:
-            update_run(controller);
-            break;
-          case DUCKING:
-            update_ducking(controller);
-            break;
-          case DUCKED:
-            update_ducked(controller);
-            break;
-          case TURNAROUND:
-            update_turnaround(controller);
-            break;
-          case STAND_TO_LISTEN:
-            update_stand_to_listen(controller);
-            break;
-          case LISTEN:
-            update_listen(controller);
-            break;
-          case JUMP_BEGIN:
-            update_jump_begin(controller);
-            break;
-          case JUMP_AIR:
-            update_jump_air(controller);
-            break;
-          case JUMP_LAND:
-            update_jump_land(controller);
-            break;
-          case JUMP_UP_BEGIN:
-            update_jump_up_begin(controller);
-            break;
-          case JUMP_UP_AIR:
-            update_jump_up_air(controller);
-            break;
-          case JUMP_UP_LAND:
-            update_jump_up_land(controller);
-            break;
-          case PULL_GUN:
-            update_pull_gun(controller);
-            break;
-          case STAIRS_DOWN:
-          case STAIRS_UP:
-            update_stairs(controller, delta);
-            break;
-          default:
-            assert(false);
-            break;
-        }
+      {
+        case STAND:
+        case WALK:
+          update_walk_stand(controller);
+          break;
+        case RUN:
+          update_run(controller);
+          break;
+        case DUCKING:
+          update_ducking(controller);
+          break;
+        case DUCKED:
+          update_ducked(controller);
+          break;
+        case TURNAROUND:
+          update_turnaround(controller);
+          break;
+        case STAND_TO_LISTEN:
+          update_stand_to_listen(controller);
+          break;
+        case LISTEN:
+          update_listen(controller);
+          break;
+        case JUMP_BEGIN:
+          update_jump_begin(controller);
+          break;
+        case JUMP_AIR:
+          update_jump_air(controller);
+          break;
+        case JUMP_LAND:
+          update_jump_land(controller);
+          break;
+        case JUMP_UP_BEGIN:
+          update_jump_up_begin(controller);
+          break;
+        case JUMP_UP_AIR:
+          update_jump_up_air(controller);
+          break;
+        case JUMP_UP_LAND:
+          update_jump_up_land(controller);
+          break;
+        case PULL_GUN:
+          update_pull_gun(controller);
+          break;
+        case STAIRS_DOWN:
+        case STAIRS_UP:
+          update_stairs(controller, delta);
+          break;
+        default:
+          assert(false);
+          break;
+      }
     }
 
-  // fall down
-  velocity.y += GRAVITY * delta;
+    // fall down
+    velocity.y += GRAVITY * delta;
 
-  sprite.update(delta);
+    sprite.update(delta);
 
-  c_object->set_velocity (velocity);
+    c_object->set_velocity (velocity);
 
-  pos = c_object->get_pos();
+    pos = c_object->get_pos();
 
-  m_drawable->set_pos(pos);
+    m_drawable->set_pos(pos);
+  }
 }
 
 void



From grumbel at mail.berlios.de  Fri Aug 28 19:18:09 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 19:18:09 +0200
Subject: [Windstille-commit] r3108 - trunk/windstille/src/objects
Message-ID: <200908281718.n7SHI9wN022549@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 19:18:08 +0200 (Fri, 28 Aug 2009)
New Revision: 3108

Modified:
   trunk/windstille/src/objects/decal.cpp
Log:
Fixed center_offset calculation

Modified: trunk/windstille/src/objects/decal.cpp
===================================================================
--- trunk/windstille/src/objects/decal.cpp	2009-08-28 16:56:07 UTC (rev 3107)
+++ trunk/windstille/src/objects/decal.cpp	2009-08-28 17:18:08 UTC (rev 3108)
@@ -60,6 +60,9 @@
   Vector2f center_offset(-surface.get_width() /2,
                          -surface.get_height()/2);
 
+  center_offset.x *= scale.x;
+  center_offset.y *= scale.y;
+
   drawable.reset(new SurfaceDrawable(surface,
                                            params
                                            .set_pos(pos + center_offset)
@@ -113,6 +116,9 @@
     Vector2f center_offset(-drawable->get_surface().get_width() /2,
                            -drawable->get_surface().get_height()/2);
 
+    center_offset.x *= drawable->get_params().scale.x;
+    center_offset.y *= drawable->get_params().scale.y;
+
     drawable->get_params().set_pos(pos + center_offset);
   }
 }



From grumbel at mail.berlios.de  Fri Aug 28 19:18:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 19:18:38 +0200
Subject: [Windstille-commit] r3109 - trunk/windstille/src/scenegraph
Message-ID: <200908281718.n7SHIccY023080@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 19:18:36 +0200 (Fri, 28 Aug 2009)
New Revision: 3109

Modified:
   trunk/windstille/src/scenegraph/drawable.hpp
Log:
Default to COLORMAP (fixes invisible player)

Modified: trunk/windstille/src/scenegraph/drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/drawable.hpp	2009-08-28 17:18:08 UTC (rev 3108)
+++ trunk/windstille/src/scenegraph/drawable.hpp	2009-08-28 17:18:36 UTC (rev 3109)
@@ -37,7 +37,7 @@
     : pos(pos_), 
       z_pos(z_pos_), 
       modelview(modelview_),
-      render_mask(0)
+      render_mask(1) // FIXME: Evil hardcoded constant
   {}
   virtual ~Drawable() {}
   



From grumbel at mail.berlios.de  Fri Aug 28 19:18:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 19:18:56 +0200
Subject: [Windstille-commit] r3110 - trunk/windstille/src/objects
Message-ID: <200908281718.n7SHIuva023457@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 19:18:53 +0200 (Fri, 28 Aug 2009)
New Revision: 3110

Modified:
   trunk/windstille/src/objects/player.cpp
Log:
Use delta for player movement

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-28 17:18:36 UTC (rev 3109)
+++ trunk/windstille/src/objects/player.cpp	2009-08-28 17:18:53 UTC (rev 3110)
@@ -152,8 +152,8 @@
 {
   if (!Sector::current()->get_tilemap())
   {
-    pos.x += controller.get_axis_state(X_AXIS);
-    pos.y += controller.get_axis_state(Y_AXIS);
+    pos.x += controller.get_axis_state(X_AXIS) * delta * 1000.0f;
+    pos.y += controller.get_axis_state(Y_AXIS) * delta * 1000.0f;
     
     m_drawable->set_pos(pos);
   }



From grumbel at mail.berlios.de  Fri Aug 28 19:37:15 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 19:37:15 +0200
Subject: [Windstille-commit] r3111 - trunk/windstille/src/display
Message-ID: <200908281737.n7SHbF6V025902@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 19:37:14 +0200 (Fri, 28 Aug 2009)
New Revision: 3111

Modified:
   trunk/windstille/src/display/compositor.cpp
Log:
Fill border sections with black

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-28 17:18:53 UTC (rev 3110)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-28 17:37:14 UTC (rev 3111)
@@ -239,7 +239,9 @@
   if (sc.get_render_mask() & SceneContext::COLORMAP)
   {
     // Render the colormap to the framebuffers->screen
+    glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
     glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+
     sc.color().render(*this);
 
     if (sg)



From grumbel at mail.berlios.de  Fri Aug 28 20:12:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 20:12:47 +0200
Subject: [Windstille-commit] r3112 - trunk/windstille/src/scenegraph
Message-ID: <200908281812.n7SIClb0001985@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 20:12:46 +0200 (Fri, 28 Aug 2009)
New Revision: 3112

Modified:
   trunk/windstille/src/scenegraph/control_drawable.hpp
   trunk/windstille/src/scenegraph/drawable.hpp
   trunk/windstille/src/scenegraph/fill_screen_drawable.hpp
   trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp
   trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
   trunk/windstille/src/scenegraph/surface_drawable.hpp
   trunk/windstille/src/scenegraph/surface_quad_drawable.hpp
   trunk/windstille/src/scenegraph/text_drawable.hpp
   trunk/windstille/src/scenegraph/vertex_array_drawable.hpp
Log:
Fixed Include guards following the DrawingRequest -> Drawable rename

Modified: trunk/windstille/src/scenegraph/control_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/control_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/control_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_CONTROL_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_CONTROL_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_CONTROL_DRAWABLE_HPP
 
 class ControlDrawable : public Drawable
 {

Modified: trunk/windstille/src/scenegraph/drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_DRAWABLE_HPP
 
 #include "math/vector2f.hpp"
 #include "math/rect.hpp"

Modified: trunk/windstille/src/scenegraph/fill_screen_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/fill_screen_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_DRAWABLE_HPP
 
 
 

Modified: trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_FILL_SCREEN_PATTERN_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_PATTERN_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_PATTERN_DRAWABLE_HPP
 
 
 class FillScreenPatternDrawable : public Drawable

Modified: trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_SPRITE3D_SPRITE3D_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SPRITE3D_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_SPRITE3D_DRAWABLE_HPP
 
 #include "sprite3d/sprite3d.hpp"
 #include "scenegraph/drawable.hpp"

Modified: trunk/windstille/src/scenegraph/surface_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/surface_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/surface_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_SURFACE_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SURFACE_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_SURFACE_DRAWABLE_HPP
 
 #include "scenegraph/surface_drawable.hpp"
 #include "display/surface_drawing_parameters.hpp"

Modified: trunk/windstille/src/scenegraph/surface_quad_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/surface_quad_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/surface_quad_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_SURFACE_QUAD_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SURFACE_QUAD_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_SURFACE_QUAD_DRAWABLE_HPP
 
 #include "math/vector2f.hpp"
 #include "math/quad.hpp"

Modified: trunk/windstille/src/scenegraph/text_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/text_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/text_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_TEXT_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_TEXT_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_TEXT_DRAWABLE_HPP
 
 class TextDrawable : public Drawable
 {

Modified: trunk/windstille/src/scenegraph/vertex_array_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/vertex_array_drawable.hpp	2009-08-28 17:37:14 UTC (rev 3111)
+++ trunk/windstille/src/scenegraph/vertex_array_drawable.hpp	2009-08-28 18:12:46 UTC (rev 3112)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
-#define HEADER_WINDSTILLE_DISPLAY_VERTEX_ARRAY_DRAWING_REQUEST_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_VERTEX_ARRAY_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_VERTEX_ARRAY_DRAWABLE_HPP
 
 #include <vector>
 



From grumbel at mail.berlios.de  Fri Aug 28 20:43:00 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 20:43:00 +0200
Subject: [Windstille-commit] r3113 - trunk/windstille/src/engine
Message-ID: <200908281843.n7SIh0Eb005375@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 20:43:00 +0200 (Fri, 28 Aug 2009)
New Revision: 3113

Modified:
   trunk/windstille/src/engine/camera.cpp
Log:
Removed scroll limit from the Camera, as its no longer meaningful with non-tilebased levels 

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-28 18:12:46 UTC (rev 3112)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-28 18:43:00 UTC (rev 3113)
@@ -19,7 +19,6 @@
 #include "engine/camera.hpp"
 
 #include "objects/player.hpp"
-#include "engine/sector.hpp"
 #include "engine/script_manager.hpp"
 #include "display/display.hpp"
 
@@ -95,24 +94,6 @@
           pos.y = tpos.y - vscroll_threshold;
         else if (dist < -vscroll_threshold)
           pos.y = tpos.y + vscroll_threshold;
-
-        float start_x = static_cast<float>(Display::get_width()) / 2.0f;
-        float end_x   = static_cast<float>(Sector::current()->get_width()) - static_cast<float>(Display::get_width()) / 2.0f;
-
-        float start_y = static_cast<float>(Display::get_height()) / 2.0f;
-        float end_y   = static_cast<float>(Sector::current()->get_height()) - static_cast<float>(Display::get_height()) / 2.0f;
-
-        if (pos.x < start_x)
-          pos.x = start_x;
-
-        if (pos.y < start_y)
-          pos.y = start_y;
-
-        if (pos.x > end_x)
-          pos.x = end_x;
-
-        if (pos.y > end_y)
-          pos.y = end_y;
       }
       break;
 



From grumbel at mail.berlios.de  Fri Aug 28 23:16:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 23:16:19 +0200
Subject: [Windstille-commit] r3114 - in trunk/windstille/src: engine
	scenegraph
Message-ID: <200908282116.n7SLGJ4I023197@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 23:16:19 +0200 (Fri, 28 Aug 2009)
New Revision: 3114

Added:
   trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp
Modified:
   trunk/windstille/src/engine/sector.cpp
Log:
Load and draw NavigationGraph

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-28 18:43:00 UTC (rev 3113)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-28 21:16:19 UTC (rev 3114)
@@ -40,6 +40,7 @@
 #include "objects/trigger.hpp"
 #include "objects/vrdummy.hpp"
 #include "scenegraph/scene_graph.hpp"
+#include "scenegraph/navigation_graph_drawable.hpp"
 #include "sound/sound_manager.hpp"
 #include "tile/tile_map.hpp"
 
@@ -78,6 +79,8 @@
   add(player);
 
   player->set_pos(Vector2f(300,200));
+
+  scene_graph->add_drawable(boost::shared_ptr<Drawable>(new NavigationGraphDrawable(navigation_graph.get())));
 }
 
 Sector::~Sector()
@@ -95,7 +98,7 @@
     std::ostringstream msg;
     msg << "'" << filename_ << "' is not a windstille-sector file";
     throw std::runtime_error(msg.str());
-  } 
+  }
   else
   {
     int version = 1;
@@ -111,8 +114,10 @@
     reader.get("ambient-color", ambient_light);
   
     FileReader objects_reader;
-    if(reader.get("objects", objects_reader) == false)
+    if (!reader.get("objects", objects_reader))
+    {
       throw std::runtime_error("No objects specified");
+    }
 
     std::vector<FileReader> objects_readers = objects_reader.get_sections();
     for(std::vector<FileReader>::iterator i = objects_readers.begin(); i != objects_readers.end(); ++i)
@@ -134,6 +139,12 @@
       }
     }
 
+    FileReader navgraph_reader;
+    if (reader.get("navigation", navgraph_reader))
+    {
+      navigation_graph->load(navgraph_reader);
+    }
+
     if (debug) std::cout << "Finished parsing" << std::endl;
   }
 }

Added: trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp	2009-08-28 18:43:00 UTC (rev 3113)
+++ trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp	2009-08-28 21:16:19 UTC (rev 3114)
@@ -0,0 +1,54 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_NAVIGATION_GRAPH_DRAWABLE_HPP
+#define HEADER_NAVIGATION_GRAPH_DRAWABLE_HPP
+
+#include "display/display.hpp"
+#include "scenegraph/drawable.hpp"
+
+class NavigationGraph;
+
+class NavigationGraphDrawable : public Drawable
+{
+private:
+  NavigationGraph* m_navgraph;
+
+public:
+  NavigationGraphDrawable(NavigationGraph* navgraph)
+    : Drawable(Vector2f(), 1000.0f, Matrix::identity()),
+      m_navgraph(navgraph)
+  {}
+
+  void draw(const Texture& /*tmp_texture*/)
+  {
+    //Display::fill_rect(Rectf(-100, -100, 100, 1000), Color(1.0f, 0.0f, 0.0f));
+
+    glLineWidth(4.0f);
+    m_navgraph->draw();
+    glLineWidth(1.0f);
+  }
+
+private:
+  NavigationGraphDrawable(const NavigationGraphDrawable&);
+  NavigationGraphDrawable& operator=(const NavigationGraphDrawable&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Fri Aug 28 23:21:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 23:21:55 +0200
Subject: [Windstille-commit] r3115 - in trunk/windstille/src: scenegraph
	sprite3d
Message-ID: <200908282121.n7SLLtUi023529@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 23:21:53 +0200 (Fri, 28 Aug 2009)
New Revision: 3115

Modified:
   trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/sprite3d/sprite3d.hpp
Log:
Removed some const'ness for better compatibilty with SceneGraph

Modified: trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 21:16:19 UTC (rev 3114)
+++ trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 21:21:53 UTC (rev 3115)
@@ -25,11 +25,11 @@
 class Sprite3DDrawable : public Drawable
 {
 private:
-  const Sprite3D* sprite;
+  Sprite3D* sprite;
 
 public:
-  Sprite3DDrawable(const Sprite3D* sprite_, 
-                         const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
+  Sprite3DDrawable(Sprite3D* sprite_, 
+                   const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
     : Drawable(pos_, z_pos_, modelview_), sprite(sprite_)
   {}
 
@@ -43,6 +43,8 @@
     pos = pos_;
   }
 
+  Sprite3D* get_sprite() const { return sprite; }
+
 private:
   Sprite3DDrawable(const Sprite3DDrawable&);
   Sprite3DDrawable& operator=(const Sprite3DDrawable&);

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-28 21:16:19 UTC (rev 3114)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-28 21:21:53 UTC (rev 3115)
@@ -327,13 +327,13 @@
 }
 
 void
-Sprite3D::draw(DrawingContext& dc, const Vector2f& pos, float z_pos) const
+Sprite3D::draw(DrawingContext& dc, const Vector2f& pos, float z_pos)
 {
   dc.draw(new Sprite3DDrawable(this, pos, z_pos, dc.get_modelview()));
 }
 
 void
-Sprite3D::draw(DrawingContext& dc, const Matrix& , float ) const
+Sprite3D::draw(DrawingContext& dc, const Matrix& , float )
 {
   dc.draw(new Sprite3DDrawable(this, Vector2f(0, 0), 0.0f, dc.get_modelview()));
 }
@@ -344,7 +344,7 @@
 }
 
 void
-Sprite3D::draw(const Vector2f& pos, const Matrix& modelview) const
+Sprite3D::draw(const Vector2f& pos, const Matrix& modelview)
 {
   glMatrixMode(GL_MODELVIEW);
   glPushMatrix(); 

Modified: trunk/windstille/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-28 21:16:19 UTC (rev 3114)
+++ trunk/windstille/src/sprite3d/sprite3d.hpp	2009-08-28 21:21:53 UTC (rev 3115)
@@ -57,8 +57,8 @@
    * You should call this every frame
    */
   void update(float delta);
-  void draw(DrawingContext& sc, const Vector2f& pos, float z_pos) const;
-  void draw(DrawingContext& sc, const Matrix& matrix, float z_pos) const;
+  void draw(DrawingContext& sc, const Vector2f& pos, float z_pos);
+  void draw(DrawingContext& sc, const Matrix& matrix, float z_pos);
   
   /**
    * Changes action (after the currently shown animation frame)
@@ -126,7 +126,7 @@
   
 private:  
   friend class Sprite3DDrawable;
-  void draw(const Vector2f& pos, const Matrix& modelview) const;
+  void draw(const Vector2f& pos, const Matrix& modelview);
   
   struct Frame {
     const sprite3d::Action* action;



From grumbel at mail.berlios.de  Fri Aug 28 23:36:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 23:36:17 +0200
Subject: [Windstille-commit] r3116 - in trunk/windstille/src: objects
	scenegraph
Message-ID: <200908282136.n7SLaH5n025612@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 23:36:16 +0200 (Fri, 28 Aug 2009)
New Revision: 3116

Modified:
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
Log:
Added scaling to Sprite3DDrawable

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-28 21:21:53 UTC (rev 3115)
+++ trunk/windstille/src/objects/player.cpp	2009-08-28 21:36:16 UTC (rev 3116)
@@ -81,6 +81,7 @@
 
   m_drawable.reset(new Sprite3DDrawable(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
   Sector::current()->get_scene_graph().add_drawable(m_drawable);
+  m_drawable->set_scale(2.0f);
 }
 
 Player::~Player()

Modified: trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 21:21:53 UTC (rev 3115)
+++ trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-28 21:36:16 UTC (rev 3116)
@@ -25,17 +25,23 @@
 class Sprite3DDrawable : public Drawable
 {
 private:
-  Sprite3D* sprite;
+  Sprite3D* m_sprite;
+  float m_scale;
 
 public:
-  Sprite3DDrawable(Sprite3D* sprite_, 
+  Sprite3DDrawable(Sprite3D* sprite, 
                    const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
-    : Drawable(pos_, z_pos_, modelview_), sprite(sprite_)
+    : Drawable(pos_, z_pos_, modelview_), 
+      m_sprite(sprite),
+      m_scale(1.0f)
   {}
 
   void draw(const Texture& /*tmp_texture*/)
   {
-    sprite->draw(pos, modelview);
+    Matrix matrix = modelview;
+    matrix = matrix.translate(pos.x, pos.y, z_pos);
+    matrix = matrix.scale(m_scale, m_scale, m_scale);
+    m_sprite->draw(Vector2f(0.0f, 0.0f), matrix);
   }
 
   void set_pos(const Vector2f& pos_)
@@ -43,8 +49,21 @@
     pos = pos_;
   }
 
-  Sprite3D* get_sprite() const { return sprite; }
+  float get_scale() const
+  { 
+    return m_scale;
+  }
 
+  void set_scale(float scale) 
+  { 
+    m_scale = scale;
+  }
+
+  Sprite3D* get_sprite() const
+  { 
+    return m_sprite; 
+  }
+
 private:
   Sprite3DDrawable(const Sprite3DDrawable&);
   Sprite3DDrawable& operator=(const Sprite3DDrawable&);



From grumbel at mail.berlios.de  Fri Aug 28 18:46:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 Aug 2009 18:46:55 +0200
Subject: [Windstille-commit] r3106 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200908281646.n7SGktUT018495@sheep.berlios.de>

Author: grumbel
Date: 2009-08-28 18:46:43 +0200 (Fri, 28 Aug 2009)
New Revision: 3106

Modified:
   trunk/windstille/data/sectors/trainstation/bar.wst
   trunk/windstille/data/sectors/trainstation/bathroom.wst
   trunk/windstille/data/sectors/trainstation/blendtiles.wst
   trunk/windstille/data/sectors/trainstation/cave.wst
   trunk/windstille/data/sectors/trainstation/city.wst
   trunk/windstille/data/sectors/trainstation/container.wst
   trunk/windstille/data/sectors/trainstation/elevator.wst
   trunk/windstille/data/sectors/trainstation/greenstuff.wst
   trunk/windstille/data/sectors/trainstation/house1.wst
   trunk/windstille/data/sectors/trainstation/mine.wst
   trunk/windstille/data/sectors/trainstation/office.wst
   trunk/windstille/data/sectors/trainstation/toilet.wst
   trunk/windstille/data/sectors/trainstation/trainstation.wst
   trunk/windstille/data/sectors/trainstation/worker.wst
Log:
Reversed layer order

Modified: trunk/windstille/data/sectors/trainstation/bar.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/bar.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/bar.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,620 +10,620 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
+      (name "Background")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x91b94c8")
-          (pos -94 321)
+          (id "0xabb54c8")
+          (pos 383 374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bar_background.png")
           (type 0)
-          (scale 1.30518 2.44005)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bbb48")
-          (pos -62 353)
+          (id "0xac41b28")
+          (pos 671 374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bar_background.png")
           (type 0)
-          (scale 1.30518 2.44005)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bb818")
-          (pos -30 385)
+          (id "0xac41be8")
+          (pos 959 374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bar_background.png")
           (type 0)
-          (scale 1.30518 2.44005)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bbc28")
-          (pos 2212 342)
+          (id "0xac8e9b0")
+          (pos 1247 374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bar_background.png")
           (type 0)
-          (scale 1.30518 2.44005)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bc990")
-          (pos 2244 374)
+          (id "0xad31790")
+          (pos 1535 373)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bar_background.png")
           (type 0)
-          (scale 1.30518 2.44005)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bcaa8")
-          (pos 2276 406)
+          (id "0xad31658")
+          (pos 1823 373)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bar_background.png")
           (type 0)
-          (scale 1.30518 2.44005)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0x91bc258")
-          (pos 1429 299)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.417892 0.444211)
-          (angle 0)
-          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bc6e0")
-          (pos 1039 286)
+          (id "0xac8f0d0")
+          (pos 95 374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.417892 0.444211)
+          (path "images/decal/bar_background.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bc580")
-          (pos 648 283)
+          (id "0xae249f0")
+          (pos 2111 373)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.417892 0.444211)
+          (path "images/decal/bar_background.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0x91bc638")
-          (pos 1037 390)
+          (id "0xac71c50")
+          (pos 1460 564)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 1.57731 1.2139)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.42725 0.499512)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91b9728")
-          (pos 1421 397)
+          (id "0xa8ade68")
+          (pos 1056 562)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 1.57731 1.2139)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.42725 0.499512)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91b9900")
-          (pos 647 375)
+          (id "0xa8ae5e0")
+          (pos 582 572)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 1.57731 1.2139)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.42725 0.499512)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Ground")
+      (name "Objects")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x91ccac8")
-          (pos 431 629)
+          (id "0xa8adde8")
+          (pos 1160 462)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91ccb80")
-          (pos 815 629)
+          (id "0xa8aeb48")
+          (pos 902 462)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0x91ba310")
-          (pos 1199 629)
+          (id "0xab5c6b8")
+          (pos 1229 437)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat_separator.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91ba958")
-          (pos 1583 629)
+          (id "0xa8ae000")
+          (pos 833 437)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat_separator.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91ba3e8")
-          (pos 431 117)
+          (id "0xab713f0")
+          (pos 1031 502)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/table.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x91ba4f0")
-          (pos 815 117)
+          (id "0xa8ae980")
+          (pos 1556 462)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x91ba628")
-          (pos 1199 117)
+          (id "0xa8ae9e8")
+          (pos 1298 462)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
-          (vflip #t))
+          (hflip #t)
+          (vflip #f))
         (decal
-          (id "0x91bb030")
-          (pos 1583 117)
+          (id "0xaba1908")
+          (pos 1625 437)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat_separator.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x92bf928")
-          (pos 47 629)
+          (id "0xab475e8")
+          (pos 1427 502)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/table.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x92bf7d0")
-          (pos 47 117)
+          (id "0xaba1490")
+          (pos 764 462)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x92bfb60")
-          (pos 1967 629)
+          (id "0xaba1558")
+          (pos 506 462)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0x91bb0f8")
-          (pos 1967 117)
+          (id "0xaba1648")
+          (pos 437 437)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_ground.png")
+          (path "images/objects/bar/seat_separator.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))))
-    (layer
-      (name "Character")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x91cc998")
-          (pos 1224 586)
+          (id "0xabfb970")
+          (pos 635 502)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/bar/table.png")
           (type 0)
-          (scale 0.346924 0.591065)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x91bbf68")
-          (pos 1233 450)
+          (id "0xab47720")
+          (pos 1038 208)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/bar_lamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Objects")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x91ba0c0")
-          (pos 1160 462)
+          (id "0xabb55b8")
+          (pos 643 205)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat.png")
+          (path "images/decal/bar_lamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9469dd0")
-          (pos 902 462)
+          (id "0xabfb670")
+          (pos 1423 226)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat.png")
+          (path "images/decal/bar_lamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
-          (vflip #f))
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x947eb08")
-          (pos 1229 437)
+          (id "0xa8ad8b8")
+          (pos 1224 586)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat_separator.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.346924 0.591065)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9454ff8")
-          (pos 833 437)
+          (id "0xa8ac2e0")
+          (pos 1233 450)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat_separator.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0x949c970")
-          (pos 1031 502)
+          (id "0xa8c0788")
+          (pos 431 629)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/table.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x94a5b60")
-          (pos 1556 462)
+          (id "0xa8c0060")
+          (pos 815 629)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x94aed80")
-          (pos 1298 462)
+          (id "0xa8c0180")
+          (pos 1199 629)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x94c2a28")
-          (pos 1625 437)
+          (id "0xa8c02a0")
+          (pos 1583 629)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat_separator.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x94af0c8")
-          (pos 1427 502)
+          (id "0xa8bf608")
+          (pos 431 117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/table.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x94aef18")
-          (pos 764 462)
+          (id "0xa8ad618")
+          (pos 815 117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9509208")
-          (pos 506 462)
+          (id "0xa8ad6f8")
+          (pos 1199 117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
-          (vflip #f))
+          (hflip #f)
+          (vflip #t))
         (decal
-          (id "0x9508d40")
-          (pos 437 437)
+          (id "0xa8bf350")
+          (pos 1583 117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/seat_separator.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9508dd0")
-          (pos 635 502)
+          (id "0xa8ad1c0")
+          (pos 47 629)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bar/table.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9531620")
-          (pos 1038 208)
+          (id "0xa8ad348")
+          (pos 47 117)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_lamp.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9508ea8")
-          (pos 643 205)
+          (id "0xa8ad468")
+          (pos 1967 629)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_lamp.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x934ff20")
-          (pos 1423 226)
+          (id "0xa8acf30")
+          (pos 1967 117)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_lamp.png")
+          (path "images/decal/bar_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
+          (vflip #t))))
     (layer
-      (name "Shadow")
+      (name "Light")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x91bb310")
-          (pos 1460 564)
+          (id "0xa8aedd8")
+          (pos 1429 299)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.42725 0.499512)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.417892 0.444211)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x93500f0")
-          (pos 1056 562)
+          (id "0xa8aef08")
+          (pos 1039 286)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.42725 0.499512)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.417892 0.444211)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9350330")
-          (pos 582 572)
+          (id "0xa8af020")
+          (pos 648 283)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.42725 0.499512)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.417892 0.444211)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Background")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x954f668")
-          (pos 383 374)
+          (id "0xa8bfe08")
+          (pos 1037 390)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 1.57731 1.2139)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x959c358")
-          (pos 671 374)
+          (id "0xa8af378")
+          (pos 1421 397)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 1.57731 1.2139)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x959ca38")
-          (pos 959 374)
+          (id "0xa8bfc50")
+          (pos 647 375)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 1.57731 1.2139)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xa8ac420")
+          (pos -94 321)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.30518 2.44005)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x959c8b8")
-          (pos 1247 374)
+          (id "0xa8b03d8")
+          (pos -62 353)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.30518 2.44005)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x95ede18")
-          (pos 1535 373)
+          (id "0xa8ac940")
+          (pos -30 385)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.30518 2.44005)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x95edc78")
-          (pos 1823 373)
+          (id "0xa8af6f8")
+          (pos 2212 342)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.30518 2.44005)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x96901b0")
-          (pos 95 374)
+          (id "0xa8acab8")
+          (pos 2244 374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.30518 2.44005)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9732220")
-          (pos 2111 373)
+          (id "0xa8af9c8")
+          (pos 2276 406)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bar_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.30518 2.44005)
           (angle 0)
           (hflip #f)
           (vflip #f))))))

Modified: trunk/windstille/data/sectors/trainstation/bathroom.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/bathroom.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/bathroom.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -38,274 +38,395 @@
         (properties 0))))
   (objects
     (layer
-      (name "Scene")
+      (name "Background")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x99201f8")
-          (pos 958 491)
+          (id "0xb4026e0")
+          (pos 422 544)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "LightLight")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x99229c8")
-          (pos 548 546)
+          (id "0xb3e1d88")
+          (pos 550 544)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 3.57812 2.56836)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9922ab8")
-          (pos 559 291)
+          (id "0xb3e1f88")
+          (pos 422 416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 3.23438 1.83594)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9922c78")
-          (pos 870 563)
+          (id "0xb3e20d8")
+          (pos 550 416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 3.57812 2.56836)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9923ae8")
-          (pos 881 308)
+          (id "0xb02a908")
+          (pos 422 288)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 3.23438 1.83594)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x99241c0")
-          (pos 1218 284)
+          (id "0xb0159d8")
+          (pos 550 288)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 3.23438 1.83594)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9923cc8")
-          (pos 1187 554)
+          (id "0xb02a730")
+          (pos 678 544)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 3.57812 2.56836)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x9923638")
-          (pos 575 244)
+          (id "0xb02b010")
+          (pos 678 416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.595588 0.549077)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9923770")
-          (pos 878 246)
+          (id "0xb02b198")
+          (pos 678 288)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.595588 0.549077)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a64168")
-          (pos 1167 242)
+          (id "0xb02b2b8")
+          (pos 806 288)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.595588 0.549077)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Black")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x9923200")
-          (pos 1409 210)
+          (id "0xb015808")
+          (pos 1062 544)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9923358")
-          (pos 1437 666)
+          (id "0xb02b448")
+          (pos 1062 416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9922450")
-          (pos 318 663)
+          (id "0xb02ae18")
+          (pos 934 288)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9938a60")
-          (pos 294 191)
+          (id "0xb02b788")
+          (pos 1062 288)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x99225a0")
-          (pos 852 159)
+          (id "0xb02bc30")
+          (pos 1190 544)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
-          (scale 10.2773 1.21973)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x99395f0")
-          (pos 857 156)
+          (id "0xb02b9e0")
+          (pos 1318 544)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
-          (scale 10.2773 1.21973)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9939118")
-          (pos 864 684)
+          (id "0xb02b588")
+          (pos 1190 416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
-          (scale 10.2773 1.21973)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x9939210")
-          (pos 867 687)
+          (id "0xb02c180")
+          (pos 1318 416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/decal/bath_tile.png")
           (type 0)
-          (scale 10.2773 1.21973)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x9939358")
-          (pos 301 432)
+          (id "0xb02c258")
+          (pos 1190 288)
           (parent "")
           (select-mask 1)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb02bfc8")
+          (pos 1318 288)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/bath_tile.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb02c390")
+          (pos 875 467)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/showerdoors.png")
+          (type 0)
+          (scale 2.09222 2.069)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xb3cf2d0")
+          (pos 870 247)
+          (parent "")
+          (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 3.31934 1.58594)
-          (angle 1.58324)
+          (scale 8 0.453125)
+          (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0x9938e78")
-          (pos 280 438)
+          (id "0xb3d28f8")
+          (pos 868 590)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 3.31934 1.58594)
-          (angle 1.58324)
-          (hflip #f)
+          (scale 8 1.51562)
+          (angle 0)
+          (hflip #t)
           (vflip #t))
         (decal
-          (id "0x9939868")
-          (pos 1471 416)
+          (id "0xb3d2940")
+          (pos 1341 418)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 3.31934 1.58594)
-          (angle 1.58324)
+          (scale 3.37656 0.970145)
+          (angle 1.56816)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9938b60")
-          (pos 1471 408)
+          (id "0xb3f2520")
+          (pos 399 421)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 3.31934 1.58594)
-          (angle 1.58324)
+          (scale 3.37656 0.970145)
+          (angle 1.56816)
+          (hflip #t)
+          (vflip #t))))
+    (layer
+      (name "Shadow2")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xb38c4e0")
+          (pos 1142 549)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.383545 0.456787)
+          (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb37c2b0")
+          (pos 1275 590)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.383545 0.456787)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
+      (name "Objects")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xb38c550")
+          (pos 1141 415)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/city_housewall.png")
+          (type 0)
+          (scale 0.156915 0.249564)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb38c408")
+          (pos 1289 519)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/toilet1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb3acad8")
+          (pos 569 227)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/streetlamp.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb188158")
+          (pos 1163 229)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/streetlamp.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb219780")
+          (pos 877 229)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/streetlamp.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb219828")
+          (pos 1140 496)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/sink.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
       (name "Ground")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9937b30")
+          (id "0xb188c10")
           (pos 422 672)
           (parent "")
           (select-mask 1)
@@ -316,7 +437,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9938828")
+          (id "0xb188408")
           (pos 550 672)
           (parent "")
           (select-mask 1)
@@ -327,7 +448,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9b271e0")
+          (id "0xb239fa8")
           (pos 678 672)
           (parent "")
           (select-mask 1)
@@ -338,7 +459,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9b57488")
+          (id "0xb229ee8")
           (pos 806 672)
           (parent "")
           (select-mask 1)
@@ -349,7 +470,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9b675b8")
+          (id "0xb229d90")
           (pos 934 672)
           (parent "")
           (select-mask 1)
@@ -360,7 +481,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9b877f0")
+          (id "0xb26a398")
           (pos 1062 672)
           (parent "")
           (select-mask 1)
@@ -371,7 +492,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9b979e0")
+          (id "0xb26a450")
           (pos 1190 672)
           (parent "")
           (select-mask 1)
@@ -382,7 +503,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba7cb8")
+          (id "0xb29a820")
           (pos 1318 672)
           (parent "")
           (select-mask 1)
@@ -393,7 +514,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bb7ea0")
+          (id "0xb2aaaa0")
           (pos 422 160)
           (parent "")
           (select-mask 1)
@@ -404,7 +525,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bc8040")
+          (id "0xb2bacb0")
           (pos 550 160)
           (parent "")
           (select-mask 1)
@@ -415,7 +536,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd81e0")
+          (id "0xb2bade0")
           (pos 678 160)
           (parent "")
           (select-mask 1)
@@ -426,7 +547,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd82c8")
+          (id "0xb27a600")
           (pos 806 160)
           (parent "")
           (select-mask 1)
@@ -437,7 +558,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf84d8")
+          (id "0xb2eb100")
           (pos 934 160)
           (parent "")
           (select-mask 1)
@@ -448,7 +569,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c08670")
+          (id "0xb2fb430")
           (pos 1062 160)
           (parent "")
           (select-mask 1)
@@ -459,7 +580,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c189a0")
+          (id "0xb30b600")
           (pos 1190 160)
           (parent "")
           (select-mask 1)
@@ -470,7 +591,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c28ae8")
+          (id "0xb31b780")
           (pos 1318 160)
           (parent "")
           (select-mask 1)
@@ -481,7 +602,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c38d10")
+          (id "0xb31b8c8")
           (pos 1443 543)
           (parent "")
           (select-mask 1)
@@ -492,7 +613,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c48eb0")
+          (id "0xb2eb230")
           (pos 1442 415)
           (parent "")
           (select-mask 1)
@@ -503,7 +624,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c48f98")
+          (id "0xb34bbc8")
           (pos 1441 289)
           (parent "")
           (select-mask 1)
@@ -514,7 +635,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c691a8")
+          (id "0xb35bef8")
           (pos 297 291)
           (parent "")
           (select-mask 1)
@@ -525,7 +646,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9c79340")
+          (id "0xb36c0c8")
           (pos 298 418)
           (parent "")
           (select-mask 1)
@@ -536,7 +657,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9c89670")
+          (id "0xb34bcd8")
           (pos 297 544)
           (parent "")
           (select-mask 1)
@@ -547,387 +668,266 @@
           (hflip #f)
           (vflip #t))))
     (layer
-      (name "Objects")
+      (name "Black")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9c99898")
-          (pos 1141 415)
+          (id "0xb016aa0")
+          (pos 1409 210)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 0.156915 0.249564)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9923ef8")
-          (pos 1289 519)
+          (id "0xb187468")
+          (pos 1437 666)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet1.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ca9970")
-          (pos 569 227)
+          (id "0xb187348")
+          (pos 318 663)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9cd1fa8")
-          (pos 1163 229)
+          (id "0xb187ba0")
+          (pos 294 191)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9cd8eb0")
-          (pos 877 229)
+          (id "0xb187d40")
+          (pos 852 159)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 1 1)
+          (scale 10.2773 1.21973)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9cd8fd0")
-          (pos 1140 496)
+          (id "0xb1879c0")
+          (pos 857 156)
           (parent "")
           (select-mask 1)
-          (path "images/decal/sink.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 1 1)
+          (scale 10.2773 1.21973)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Shadow2")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x9cd20a0")
-          (pos 1142 549)
+          (id "0xb187ef8")
+          (pos 864 684)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 0.383545 0.456787)
+          (scale 10.2773 1.21973)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9cd2198")
-          (pos 1275 590)
+          (id "0xb188e70")
+          (pos 867 687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 0.383545 0.456787)
+          (scale 10.2773 1.21973)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Shadow")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #t))
         (decal
-          (id "0x9938340")
-          (pos 870 247)
+          (id "0xb188a20")
+          (pos 301 432)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 8 0.453125)
-          (angle 0)
+          (scale 3.31934 1.58594)
+          (angle 1.58324)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9938440")
-          (pos 868 590)
+          (id "0xb188aa0")
+          (pos 280 438)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 8 1.51562)
-          (angle 0)
-          (hflip #t)
+          (scale 3.31934 1.58594)
+          (angle 1.58324)
+          (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9920c38")
-          (pos 1341 418)
+          (id "0xb188738")
+          (pos 1471 416)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 3.37656 0.970145)
-          (angle 1.56816)
+          (scale 3.31934 1.58594)
+          (angle 1.58324)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x99209d0")
-          (pos 399 421)
+          (id "0xb1e8f68")
+          (pos 1471 408)
           (parent "")
           (select-mask 1)
           (path "images/decal/shadow.png")
           (type 0)
-          (scale 3.37656 0.970145)
-          (angle 1.56816)
-          (hflip #t)
-          (vflip #t))))
+          (scale 3.31934 1.58594)
+          (angle 1.58324)
+          (hflip #f)
+          (vflip #f))))
     (layer
-      (name "Background")
+      (name "Light")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9920e48")
-          (pos 422 544)
+          (id "0xb017280")
+          (pos 575 244)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.595588 0.549077)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9921958")
-          (pos 550 544)
+          (id "0xb017330")
+          (pos 878 246)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.595588 0.549077)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9921b10")
-          (pos 422 416)
+          (id "0xb016700")
+          (pos 1167 242)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.595588 0.549077)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "LightLight")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x9921bf8")
-          (pos 550 416)
+          (id "0xb015ec8")
+          (pos 548 546)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 3.57812 2.56836)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9920320")
-          (pos 422 288)
+          (id "0xb015c68")
+          (pos 559 291)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 3.23438 1.83594)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9921588")
-          (pos 550 288)
+          (id "0xb016268")
+          (pos 870 563)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 3.57812 2.56836)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9921668")
-          (pos 678 544)
+          (id "0xb016410")
+          (pos 881 308)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 3.23438 1.83594)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9921d98")
-          (pos 678 416)
+          (id "0xb016588")
+          (pos 1218 284)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 3.23438 1.83594)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9921e60")
-          (pos 678 288)
+          (id "0xb0170d0")
+          (pos 1187 554)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 3.57812 2.56836)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0x9921f28")
-          (pos 806 288)
+          (id "0xa6cc3c8")
+          (pos 958 491)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bath_tile.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a95408")
-          (pos 1062 544)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a95600")
-          (pos 1062 416)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9922030")
-          (pos 934 288)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a94b90")
-          (pos 1062 288)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a95230")
-          (pos 1190 544)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a94d58")
-          (pos 1318 544)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a94e60")
-          (pos 1190 416)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a95030")
-          (pos 1318 416)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a96210")
-          (pos 1190 288)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a96010")
-          (pos 1318 288)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bath_tile.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a962d8")
-          (pos 875 467)
-          (parent "")
-          (select-mask 1)
-          (path "images/objects/showerdoors.png")
-          (type 0)
-          (scale 2.09222 2.069)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/blendtiles.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/blendtiles.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/blendtiles.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,52 +10,190 @@
     (edges))
   (objects
     (layer
-      (name "Shadow")
-      (visible #t)
+      (name "New Layer")
+      (visible #f)
       (locked #t)
       (objects
         (decal
-          (id "0xa160800")
-          (pos 788 30)
+          (id "0xb5eef78")
+          (pos 1067 629)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/mine_background.png")
           (type 0)
-          (scale 1.95703 0.488281)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbc642e0")
+          (pos 555 629)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbb3fdf0")
+          (pos 1067 373)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbc64c68")
+          (pos 555 373)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbc64470")
+          (pos 1067 117)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbc64b18")
+          (pos 555 117)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Highlight")
+      (name "Shadow")
       (visible #t)
       (locked #t)
-      (objects))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #t)
       (objects
         (decal
-          (id "0xa2840e8")
-          (pos 1038 501)
+          (id "0xb5eefd8")
+          (pos 1113 603)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 6.77393 5.78516)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.920979 1.04883)
+          (angle 0.615165)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb5ef578")
+          (pos 319 118)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.920979 1.04883)
+          (angle 0.615165)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbbfb490")
+          (pos 1180 112)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.920979 1.04883)
+          (angle 0.615165)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xba84640")
+          (pos 970 -56)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.920979 1.04883)
+          (angle 0.615165)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbbfb2e0")
+          (pos 632 -6)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.920979 1.04883)
+          (angle 1.17998)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbbfb3d0")
+          (pos 389 421)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.920979 1.04883)
+          (angle 2.29995)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xb6db690")
+          (pos 666 694)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.454636 1.03986)
+          (angle 1.99697)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xba847f0")
+          (pos 819 470)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.59204 0.328613)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa284138")
-          (pos 564 114)
+          (id "0xbc63c88")
+          (pos 916 314)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 6.77393 5.78516)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.267578 0.804688)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbc63dd8")
+          (pos 769 298)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 2.9104 2.48315)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
       (name "Scene")
@@ -63,7 +201,7 @@
       (locked #f)
       (objects
         (decal
-          (id "0xa15fc18")
+          (id "0xb5eede8")
           (pos 1060 440)
           (parent "")
           (select-mask 1)
@@ -74,7 +212,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ea0f30")
+          (id "0xb5ef0d0")
           (pos 550 441)
           (parent "")
           (select-mask 1)
@@ -85,7 +223,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1bbe70")
+          (id "0xb6851b0")
           (pos 322 381)
           (parent "")
           (select-mask 1)
@@ -96,7 +234,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa186410")
+          (id "0xb685320")
           (pos 442 578)
           (parent "")
           (select-mask 1)
@@ -107,7 +245,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa186e80")
+          (id "0xb6db490")
           (pos 540 719)
           (parent "")
           (select-mask 1)
@@ -118,7 +256,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa186598")
+          (id "0xb796ee8")
           (pos 702 770)
           (parent "")
           (select-mask 1)
@@ -129,7 +267,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1c8710")
+          (id "0xb5ee620")
           (pos 335 186)
           (parent "")
           (select-mask 1)
@@ -140,7 +278,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1c85e0")
+          (id "0xb6dba10")
           (pos 430 54)
           (parent "")
           (select-mask 1)
@@ -151,7 +289,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa184c00")
+          (id "0xb7f4ba0")
           (pos 720 -11)
           (parent "")
           (select-mask 1)
@@ -162,7 +300,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa186b10")
+          (id "0xb7f4c98")
           (pos 1011 -26)
           (parent "")
           (select-mask 1)
@@ -173,7 +311,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9ea1040")
+          (id "0xb90daa8")
           (pos 879 -93)
           (parent "")
           (select-mask 1)
@@ -184,7 +322,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9aac778")
+          (id "0xb90dba0")
           (pos 1220 60)
           (parent "")
           (select-mask 1)
@@ -195,7 +333,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0xa197770")
+          (id "0xb9c9068")
           (pos 1272 292)
           (parent "")
           (select-mask 1)
@@ -206,7 +344,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0xa186860")
+          (id "0xb9c9380")
           (pos 1247 495)
           (parent "")
           (select-mask 1)
@@ -217,7 +355,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0xa1869c0")
+          (id "0xb796fe0")
           (pos 974 782)
           (parent "")
           (select-mask 1)
@@ -228,7 +366,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9ba2390")
+          (id "0xb797078")
           (pos 1140 682)
           (parent "")
           (select-mask 1)
@@ -239,7 +377,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0xa181418")
+          (id "0xb5ee778")
           (pos 905 300)
           (parent "")
           (select-mask 1)
@@ -250,190 +388,52 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Shadow")
+      (name "Light")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xa164158")
-          (pos 1113 603)
+          (id "0xb5ef450")
+          (pos 1038 501)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.920979 1.04883)
-          (angle 0.615165)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa167048")
-          (pos 319 118)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.920979 1.04883)
-          (angle 0.615165)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa166640")
-          (pos 1180 112)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.920979 1.04883)
-          (angle 0.615165)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa167b28")
-          (pos 970 -56)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.920979 1.04883)
-          (angle 0.615165)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa165b00")
-          (pos 632 -6)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.920979 1.04883)
-          (angle 1.17998)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa283370")
-          (pos 389 421)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.920979 1.04883)
-          (angle 2.29995)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa282d98")
-          (pos 666 694)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.454636 1.03986)
-          (angle 1.99697)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa283c68")
-          (pos 819 470)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.59204 0.328613)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 6.77393 5.78516)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9f2f0c0")
-          (pos 916 314)
+          (id "0xb5ef6b0")
+          (pos 564 114)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.267578 0.804688)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 6.77393 5.78516)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa1663e8")
-          (pos 769 298)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 2.9104 2.48315)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))
     (layer
-      (name "New Layer")
-      (visible #f)
+      (name "Highlight")
+      (visible #t)
       (locked #t)
+      (objects))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
       (objects
         (decal
-          (id "0xa161ce0")
-          (pos 1067 629)
+          (id "0xb5eb5f8")
+          (pos 788 30)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.95703 0.488281)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa167cb0")
-          (pos 555 629)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa168a28")
-          (pos 1067 373)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ea1bb0")
-          (pos 555 373)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa161d30")
-          (pos 1067 117)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa164108")
-          (pos 555 117)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/cave.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/cave.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,110 +10,488 @@
     (edges))
   (objects
     (layer
-      (name "Highlight")
+      (name "BackgroundBG")
       (visible #t)
-      (locked #f)
+      (locked #t)
       (objects
         (decal
-          (id "0xa49fa38")
-          (pos 1491 290)
+          (id "0xcbb3be0")
+          (pos -12 222)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 4.87573 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4a0958")
-          (pos 1836 285)
+          (id "0xcc5b0c0")
+          (pos 88 -27)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 4.2196 4.28064)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ed6d48")
-          (pos 1862 301)
+          (id "0xcbb3a10")
+          (pos 404 194)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 1.21362 2.37329)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcc5aef0")
+          (pos 771 147)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc044858")
+          (pos 839 -27)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 0.673403)
+          (angle 0.459292)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc044908")
+          (pos 514 -55)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 0.828297)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc044ae8")
+          (pos 1074 164)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 0.790112 0.759615)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbea4040")
+          (pos 1538 276)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1 0.699519)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbea52d0")
+          (pos 1168 331)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone3.png")
+          (type 0)
+          (scale 1.02332 0.605082)
+          (angle -0.287153)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbea53a0")
+          (pos 0 -14)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbea57f8")
+          (pos 371 -25)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbea5620")
+          (pos 701 0)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xbea5940")
+          (pos 1125 158)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 2.47095 1.53711)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Light")
+      (name "Background")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xaf3d9e8")
-          (pos 633 71)
+          (id "0xcbb3170")
+          (pos 405 453)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 5.18091 2.04065)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1.0111)
+          (angle 0.0759436)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb3280")
+          (pos 590 448)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 0.734504)
+          (angle -0.257207)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb29b8")
+          (pos 188 471)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 1.06108)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb2f00")
+          (pos -3 402)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.816322)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb2d18")
+          (pos 186 627)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 1.06108)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb2ac0")
+          (pos 847 365)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2b9638")
-          (pos 1506 320)
+          (id "0xcbb2ba0")
+          (pos -67 465)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 5.53186 2.04065)
+          (path "images/decal/stone4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.739616)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb4368")
+          (pos 345 -17)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone5.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2bb128")
-          (pos 807 494)
+          (id "0xcbb4060")
+          (pos 684 -21)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 5.18091 3.6123)
+          (path "images/decal/stone5.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2bc078")
-          (pos -11 300)
+          (id "0xcbb3650")
+          (pos -43 -14)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 5.18091 4.6499)
+          (path "images/decal/stone5.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0ac660")
-          (pos 221 637)
+          (id "0xcc075c8")
+          (pos 412 773)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 2.27742 2.45264)
-          (angle 0.784225)
+          (path "images/decal/stone4.png")
+          (type 0)
+          (scale 1.45422 1.39971)
+          (angle -0.624027)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0xcc22570")
+          (pos 301 859)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone4.png")
+          (type 0)
+          (scale 1.45422 1.39971)
+          (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcbb3db0")
+          (pos 346 768)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone1.png")
+          (type 0)
+          (scale 0.694642 0.648152)
+          (angle -0.211019)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcc3d5b8")
+          (pos 421 567)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/shadow.png")
+          (type 0)
+          (scale 11.4061 5.2496)
+          (angle 3.09674)
+          (hflip #f)
           (vflip #f))))
     (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xc0123f0")
+          (pos -142 276)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc012490")
+          (pos -137 237)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcb966b0")
+          (pos 168 -65)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcb96740")
+          (pos 621 -102)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcb36ed8")
+          (pos -29 635)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.37384 1.43488)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xcacf0f8")
+          (pos 829 582)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 2.38855 1.11444)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Green Stuff")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xbea78f8")
+          (pos 883 462)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc70ae78")
+          (pos -106 455)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0.704407)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc70acd0")
+          (pos 299 810)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc70ad50")
+          (pos 533 406)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc8bc520")
+          (pos 501 -70)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.24437)
+          (hflip #t)
+          (vflip #f))
+        (decal
+          (id "0xcab35b0")
+          (pos 132 16)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.05672)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xc70b880")
+          (pos 880 5)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/plant5.png")
+          (type 0)
+          (scale 1 1)
+          (angle 3.3798)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xc8bc930")
+          (pos 740 435)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/humanreference.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
       (name "Ground")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9a12cb8")
+          (id "0xbea7cb8")
           (pos 457 879)
           (parent "")
           (select-mask 1)
@@ -124,7 +502,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a12d18")
+          (id "0xbec01c0")
           (pos 387 950)
           (parent "")
           (select-mask 1)
@@ -135,7 +513,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a23020")
+          (id "0xbea6268")
           (pos 111 927)
           (parent "")
           (select-mask 1)
@@ -146,7 +524,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a28570")
+          (id "0xbea63a0")
           (pos 20 829)
           (parent "")
           (select-mask 1)
@@ -157,7 +535,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a21f38")
+          (id "0xbec0d08")
           (pos -25 -187)
           (parent "")
           (select-mask 1)
@@ -168,7 +546,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9a43c78")
+          (id "0xbea64c0")
           (pos -235 59)
           (parent "")
           (select-mask 1)
@@ -179,7 +557,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a66ac8")
+          (id "0xbec0eb8")
           (pos 1327 416)
           (parent "")
           (select-mask 1)
@@ -190,7 +568,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a576e8")
+          (id "0xbec0f90")
           (pos 584 611)
           (parent "")
           (select-mask 1)
@@ -201,7 +579,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a57998")
+          (id "0xbec1100")
           (pos 487 721)
           (parent "")
           (select-mask 1)
@@ -212,7 +590,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a581a8")
+          (id "0xbec03c0")
           (pos 791 613)
           (parent "")
           (select-mask 1)
@@ -223,7 +601,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a57c48")
+          (id "0xbec09f8")
           (pos 1079 519)
           (parent "")
           (select-mask 1)
@@ -234,7 +612,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a57dc8")
+          (id "0xbec1dc8")
           (pos 284 958)
           (parent "")
           (select-mask 1)
@@ -245,7 +623,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a57f30")
+          (id "0xbec1ea0")
           (pos 11 763)
           (parent "")
           (select-mask 1)
@@ -256,7 +634,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x99d18a8")
+          (id "0xbec0718")
           (pos -246 438)
           (parent "")
           (select-mask 1)
@@ -267,7 +645,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a58898")
+          (id "0xc2690f8")
           (pos -137 537)
           (parent "")
           (select-mask 1)
@@ -278,7 +656,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a58988")
+          (id "0xbec04d0")
           (pos -276 270)
           (parent "")
           (select-mask 1)
@@ -289,7 +667,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a44f50")
+          (id "0xbec0608")
           (pos -152 -55)
           (parent "")
           (select-mask 1)
@@ -300,7 +678,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a44b00")
+          (id "0xc268fe0")
           (pos 113 -167)
           (parent "")
           (select-mask 1)
@@ -311,7 +689,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a44cb8")
+          (id "0xc2e7e48")
           (pos 389 -175)
           (parent "")
           (select-mask 1)
@@ -322,7 +700,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a58af0")
+          (id "0xc268e20")
           (pos 679 -157)
           (parent "")
           (select-mask 1)
@@ -333,7 +711,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a44670")
+          (id "0xc2e7c88")
           (pos 961 -57)
           (parent "")
           (select-mask 1)
@@ -344,7 +722,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a44548")
+          (id "0xc366a20")
           (pos 1211 111)
           (parent "")
           (select-mask 1)
@@ -355,7 +733,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a44830")
+          (id "0xc366b10")
           (pos 1447 171)
           (parent "")
           (select-mask 1)
@@ -366,7 +744,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a45b38")
+          (id "0xc3e56e0")
           (pos 1730 174)
           (parent "")
           (select-mask 1)
@@ -377,7 +755,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a45c40")
+          (id "0xc3e57e8")
           (pos 1575 399)
           (parent "")
           (select-mask 1)
@@ -388,7 +766,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a260f8")
+          (id "0xc3667a0")
           (pos 1179 454)
           (parent "")
           (select-mask 1)
@@ -399,7 +777,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a5e558")
+          (id "0xc3e5620")
           (pos 1124 21)
           (parent "")
           (select-mask 1)
@@ -410,7 +788,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9a28638")
+          (id "0xc4643b8")
           (pos 1584 152)
           (parent "")
           (select-mask 1)
@@ -421,7 +799,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9a661d0")
+          (id "0xc4644a8")
           (pos 1314 162)
           (parent "")
           (select-mask 1)
@@ -432,7 +810,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9a20fe8")
+          (id "0xc4e3078")
           (pos 245 -168)
           (parent "")
           (select-mask 1)
@@ -443,7 +821,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9a21cb8")
+          (id "0xc4e3180")
           (pos -36 679)
           (parent "")
           (select-mask 1)
@@ -454,7 +832,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9a21030")
+          (id "0xc464138")
           (pos 59 883)
           (parent "")
           (select-mask 1)
@@ -465,7 +843,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a22798")
+          (id "0xc4e2fb8")
           (pos 162 944)
           (parent "")
           (select-mask 1)
@@ -476,7 +854,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a23310")
+          (id "0xc561d50")
           (pos 425 917)
           (parent "")
           (select-mask 1)
@@ -487,7 +865,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a241f0")
+          (id "0xc561e40")
           (pos 500 592)
           (parent "")
           (select-mask 1)
@@ -498,7 +876,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x99b6b20")
+          (id "0xc5e0a10")
           (pos 939 596)
           (parent "")
           (select-mask 1)
@@ -509,7 +887,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a17940")
+          (id "0xc5e0b18")
           (pos 841 -118)
           (parent "")
           (select-mask 1)
@@ -520,7 +898,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x99b75f8")
+          (id "0xc561ad0")
           (pos 550 -190)
           (parent "")
           (select-mask 1)
@@ -531,7 +909,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x9e9fa70")
+          (id "0xc5e0950")
           (pos 826 611)
           (parent "")
           (select-mask 1)
@@ -542,7 +920,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ea1588")
+          (id "0xc65f748")
           (pos -97 564)
           (parent "")
           (select-mask 1)
@@ -553,7 +931,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ed7630")
+          (id "0xbec1b98")
           (pos -208 26)
           (parent "")
           (select-mask 1)
@@ -564,7 +942,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ea2298")
+          (id "0xbec1c48")
           (pos -183 452)
           (parent "")
           (select-mask 1)
@@ -575,7 +953,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9eb4368")
+          (id "0xbec1528")
           (pos -259 340)
           (parent "")
           (select-mask 1)
@@ -586,7 +964,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ed7bc0")
+          (id "0xbec1628")
           (pos 572 614)
           (parent "")
           (select-mask 1)
@@ -597,7 +975,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ed8660")
+          (id "0xbec1408")
           (pos 489 680)
           (parent "")
           (select-mask 1)
@@ -608,7 +986,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ed6800")
+          (id "0xbec1880")
           (pos 717 613)
           (parent "")
           (select-mask 1)
@@ -619,7 +997,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a0cd70")
+          (id "0xbec1760")
           (pos 1713 397)
           (parent "")
           (select-mask 1)
@@ -630,7 +1008,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ed9c18")
+          (id "0xc8bcaa8")
           (pos 1562 400)
           (parent "")
           (select-mask 1)
@@ -641,480 +1019,102 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Character")
+      (name "Light")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9a45080")
-          (pos 740 435)
+          (id "0xbea6b98")
+          (pos 633 71)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.18091 2.04065)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Green Stuff")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x9ea2a88")
-          (pos 883 462)
+          (id "0xbec1fd8")
+          (pos 1506 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant3.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.53186 2.04065)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9a1f4c0")
-          (pos -106 455)
+          (id "0xbec20b0")
+          (pos 807 494)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant1.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0.704407)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9e9f6d8")
-          (pos 299 810)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/plant5.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.18091 3.6123)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9e9fd60")
-          (pos 533 406)
+          (id "0xbec21f8")
+          (pos -11 300)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant4.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 5.18091 4.6499)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ea10f8")
-          (pos 501 -70)
+          (id "0xbea7f18")
+          (pos 221 637)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 3.24437)
-          (hflip #t)
-          (vflip #f))
-        (decal
-          (id "0x9eb45a8")
-          (pos 132 16)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/plant4.png")
-          (type 0)
-          (scale 1 1)
-          (angle 3.05672)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 2.27742 2.45264)
+          (angle 0.784225)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ea0078")
-          (pos 880 5)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/plant5.png")
-          (type 0)
-          (scale 1 1)
-          (angle 3.3798)
-          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Shadow")
+      (name "Highlight")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x9fa2158")
-          (pos -142 276)
+          (id "0xbea0ab0")
+          (pos 1491 290)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/light2.png")
           (type 2)
-          (scale 1 1)
+          (scale 4.87573 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ec7460")
-          (pos -137 237)
+          (id "0xbea6d10")
+          (pos 1836 285)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.37384 1.43488)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 4.2196 4.28064)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2b9ec8")
-          (pos 168 -65)
+          (id "0xbea6df0")
+          (pos 1862 301)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.37384 1.43488)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 1.21362 2.37329)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa2bb978")
-          (pos 621 -102)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.37384 1.43488)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa2b9f10")
-          (pos -29 635)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.37384 1.43488)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa2ac890")
-          (pos 829 582)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 2.38855 1.11444)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Background")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0x9a17b80")
-          (pos 405 453)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 1 1.0111)
-          (angle 0.0759436)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a13540")
-          (pos 590 448)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 1 0.734504)
-          (angle -0.257207)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x99b73d8")
-          (pos 188 471)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 1 1)
-          (angle 1.06108)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a14888")
-          (pos -3 402)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0.816322)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a1d7e0")
-          (pos 186 627)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 1 1)
-          (angle 1.06108)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x99fb9e8")
-          (pos 847 365)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x99fb918")
-          (pos -67 465)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone4.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0.739616)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a405c0")
-          (pos 345 -17)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone5.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a408f0")
-          (pos 684 -21)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone5.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a40678")
-          (pos -43 -14)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone5.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a40d80")
-          (pos 412 773)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone4.png")
-          (type 0)
-          (scale 1.45422 1.39971)
-          (angle -0.624027)
-          (hflip #t)
-          (vflip #f))
-        (decal
-          (id "0x9a40b38")
-          (pos 301 859)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone4.png")
-          (type 0)
-          (scale 1.45422 1.39971)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a1db70")
-          (pos 346 768)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone1.png")
-          (type 0)
-          (scale 0.694642 0.648152)
-          (angle -0.211019)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a228f0")
-          (pos 421 567)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/shadow.png")
-          (type 0)
-          (scale 11.4061 5.2496)
-          (angle 3.09674)
-          (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "BackgroundBG")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0x99c3780")
-          (pos -12 222)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x97a1390")
-          (pos 88 -27)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a147f0")
-          (pos 404 194)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a14f40")
-          (pos 771 147)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x99c1e00")
-          (pos 839 -27)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 0.673403)
-          (angle 0.459292)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a18c78")
-          (pos 514 -55)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 0.828297)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ea26b0")
-          (pos 1074 164)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 0.790112 0.759615)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ea25d8")
-          (pos 1538 276)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1 0.699519)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ea2df0")
-          (pos 1168 331)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone3.png")
-          (type 0)
-          (scale 1.02332 0.605082)
-          (angle -0.287153)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9e9fe20")
-          (pos 0 -14)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9e9ffa0")
-          (pos 371 -25)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ea0858")
-          (pos 701 0)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9a20240")
-          (pos 1125 158)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 2.47095 1.53711)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/city.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/city.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/city.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,804 +10,816 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
+      (name "Background")
       (visible #t)
       (locked #t)
-      (objects))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #t)
       (objects
         (decal
-          (id "0xa0de990")
-          (pos 689 326)
+          (id "0xd5a6f00")
+          (pos 1328 80)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 3.63751 2.04308)
+          (path "images/decal/fuel_container.png")
+          (type 0)
+          (scale 1.93044 2.12433)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dde08")
-          (pos -2229 315)
+          (id "0xcd34b78")
+          (pos 2513 80)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 3.7027 1.9346)
+          (path "images/decal/fuel_container.png")
+          (type 0)
+          (scale 1.93044 2.12433)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Wall")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xa0dded8")
-          (pos 2213 674)
+          (id "0xd5a4360")
+          (pos 613 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 1.76741 2.13994)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0def78")
-          (pos 909 162)
+          (id "0xcfffe50")
+          (pos 1145 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 1.90027 1.81253)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0df160")
-          (pos -1070 626)
+          (id "0xd0000f8")
+          (pos 1677 397)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 1.5143 1.10403)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0df368")
-          (pos -1064 624)
+          (id "0xd4c9248")
+          (pos 2209 397)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 1.34704 1.09163)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Highlight")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xa0df8c8")
-          (pos 2998 558)
+          (id "0xd172758")
+          (pos 2741 397)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 2.4498 1.68449)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dbbf0")
-          (pos 836 212)
+          (id "0xd172ec8")
+          (pos -2609 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp.png")
+          (path "images/decal/citywall.png")
           (type 0)
-          (scale 1.05279 1.05689)
-          (angle -1.56597)
+          (scale 1.03906 1.2832)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dcf00")
-          (pos 985 221)
+          (id "0xd172c70")
+          (pos -2077 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 3.65012 5.58788)
-          (angle 1.47871)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dd890")
-          (pos 949 214)
+          (id "0xd172fd0")
+          (pos -3141 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.961703 0.344589)
-          (angle 1.58209)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dc058")
-          (pos -1207 634)
+          (id "0xd1722c0")
+          (pos -4205 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
+          (path "images/decal/citywall.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dc408")
-          (pos -910 639)
+          (id "0xd172480")
+          (pos -3673 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
+          (path "images/decal/citywall.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dcd88")
-          (pos -912 619)
+          (id "0xd1725c8")
+          (pos -4737 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
-          (scale 1 1)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dc220")
-          (pos -1208 615)
+          (id "0xd171b98")
+          (pos -5801 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
-          (scale 1 1)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dca08")
-          (pos 2992 368)
+          (id "0xd1730d8")
+          (pos -5269 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/citywall.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dc940")
-          (pos 2999 380)
+          (id "0xd171f30")
+          (pos -6333 407)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.698039 0.489933)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dd750")
-          (pos 3542 559)
+          (id "0xd172078")
+          (pos 3273 396)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 2.4498 1.68449)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dd198")
-          (pos 3536 369)
+          (id "0xd171d50")
+          (pos 3805 397)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/citywall.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dd280")
-          (pos 3543 381)
+          (id "0xd1714a8")
+          (pos 4337 396)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.698039 0.489933)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0dd440")
-          (pos 4050 558)
+          (id "0xd1715f0")
+          (pos 4869 396)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 2.4498 1.68449)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa213be8")
-          (pos 4044 368)
+          (id "0xd171980")
+          (pos 5401 396)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/citywall.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa213ea0")
-          (pos 4051 380)
+          (id "0xd1717f0")
+          (pos 5933 396)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.698039 0.489933)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa213d50")
-          (pos 3549 485)
+          (id "0xd171268")
+          (pos 6465 396)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 1)
-          (scale 4.8895 5.48547)
+          (path "images/decal/citywall.png")
+          (type 0)
+          (scale 1.03906 1.2832)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2176c0")
-          (pos -3945 517)
+          (id "0xd172848")
+          (pos 4631 455)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 2.4498 1.68449)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.284744 0.58992)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa217818")
-          (pos -3951 327)
+          (id "0xd5a7d38")
+          (pos 4558 464)
           (parent "")
           (select-mask 1)
-          (path "images/decal/streetlamp.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.322891 0.914169)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa21af30")
-          (pos -3944 339)
+          (id "0xd172920")
+          (pos 4599 378)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 0.698039 0.489933)
+          (path "images/decal/container_gate.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Character")
+      (name "Shadow")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xa21b5c8")
-          (pos 525 612)
+          (id "0xd581ed8")
+          (pos 858 689)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.55695 0.984741)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Ground")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xa1e0b20")
-          (pos 1271 855)
+          (id "0xd581f98")
+          (pos 704 418)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.786377 2.50299)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa103ba8")
-          (pos 759 855)
+          (id "0xce498d8")
+          (pos 1974 744)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.22888 0.977112)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107280")
-          (pos 247 855)
+          (id "0xd4779f8")
+          (pos 1397 489)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 3.22015 1.55695)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa105f40")
-          (pos 2807 855)
+          (id "0xcffcf30")
+          (pos -2291 573)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.49889 2.34289)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107f48")
-          (pos 2295 855)
+          (id "0xd582030")
+          (pos -2855 737)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 2.52588 1.11444)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa105de8")
-          (pos 1783 855)
+          (id "0xd5820c0")
+          (pos 2870 735)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 6.60283 0.940395)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107710")
-          (pos -777 855)
+          (id "0xd477d28")
+          (pos 4870 739)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
+          (scale 6.60283 0.940395)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "House")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xcd32170")
+          (pos 217 471)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/city_housewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107938")
-          (pos -1289 855)
+          (id "0xce59f40")
+          (pos 217 -41)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107378")
-          (pos -1801 855)
+          (id "0xcd34fa8")
+          (pos 217 -553)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107498")
-          (pos -265 855)
+          (id "0xce59fb0")
+          (pos 643 -38)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_houseairvent.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107a70")
-          (pos -2313 855)
+          (id "0xce5a238")
+          (pos 645 -550)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_houseairvent.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107b30")
-          (pos -2825 855)
+          (id "0xcd350f8")
+          (pos -131 -559)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106c40")
-          (pos -3337 855)
+          (id "0xcd35510")
+          (pos 48 -558)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa107c20")
-          (pos -3849 854)
+          (id "0xcd35c58")
+          (pos 236 -556)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106d20")
-          (pos -4361 854)
+          (id "0xcd35af0")
+          (pos -126 -45)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106de8")
-          (pos -4873 854)
+          (id "0xcd356c0")
+          (pos 53 -44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22c898")
-          (pos -5385 854)
+          (id "0xcd35788")
+          (pos 241 -42)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22cd60")
-          (pos -5897 854)
+          (id "0xcd36230")
+          (pos 438 817)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 2.96695 1.58413)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1068f0")
-          (pos -6409 854)
+          (id "0xcd36a88")
+          (pos -807 471)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106aa8")
-          (pos -6921 854)
+          (id "0xcd36568")
+          (pos -807 -41)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1061c0")
-          (pos -7433 854)
+          (id "0xcd36408")
+          (pos -807 -553)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22c918")
-          (pos -7945 854)
+          (id "0xcd36648")
+          (pos -1831 471)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22cad8")
-          (pos -2215 -873)
+          (id "0xcd36908")
+          (pos -1831 -41)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106838")
-          (pos -1959 -873)
+          (id "0xcd352b0")
+          (pos -1831 -553)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22d520")
-          (pos -1703 -873)
+          (id "0xd173318")
+          (pos 49 457)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/explosion_decal.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22d630")
-          (pos -1447 -873)
+          (id "0xcd35e30")
+          (pos -1495 498)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/container_crack.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106420")
-          (pos 601 -873)
+          (id "0xce57dd0")
+          (pos -1003 -564)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa106558")
-          (pos 345 -873)
+          (id "0xce580e8")
+          (pos -824 -563)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa26d7f0")
-          (pos 89 -873)
+          (id "0xce58a88")
+          (pos -636 -561)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa26d930")
-          (pos -167 -873)
+          (id "0xce58b68")
+          (pos -998 -50)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa26db00")
-          (pos -679 -873)
+          (id "0xce57fe0")
+          (pos -819 -49)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa30e1c8")
-          (pos -423 -873)
+          (id "0xce58d88")
+          (pos -631 -47)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa30e308")
-          (pos -935 -873)
+          (id "0xce591a8")
+          (pos -1527 -34)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2cdc60")
-          (pos -1191 -873)
+          (id "0xce59298")
+          (pos -1715 -39)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_side.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa2cdd90")
-          (pos 3831 853)
+          (id "0xce59020")
+          (pos -1894 -40)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa34e4a8")
-          (pos 3319 853)
+          (id "0xce59680")
+          (pos -1532 -563)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3aea80")
-          (pos 5367 853)
+          (id "0xce59818")
+          (pos -1720 -565)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3aec48")
-          (pos 4855 853)
+          (id "0xce598b8")
+          (pos -1899 -566)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa34e528")
-          (pos 4343 853)
+          (id "0xce58388")
+          (pos -2237 -561)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_houseairvent.png")
           (type 0)
-          (scale 1 1)
+          (scale -1.23139 1.08248)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa34e648")
-          (pos 6903 852)
+          (id "0xce58590")
+          (pos -2239 -41)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_houseairvent.png")
           (type 0)
-          (scale 1 1)
+          (scale -1.23139 1.08248)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22d070")
-          (pos 6391 852)
+          (id "0xce58790")
+          (pos -1061 582)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22d230")
-          (pos 5879 852)
+          (id "0xce59be8")
+          (pos -810 477)
           (parent "")
           (select-mask 1)
-          (path "images/decal/cityground.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "House2")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xa21b018")
-          (pos 1470 471)
+          (id "0xce59a78")
+          (pos -628 478)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_subway.png")
+          (path "images/decal/city_window.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xd5024b8")
+          (pos -437 671)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/steelplate_crack.png")
+          (type 0)
+          (scale 1.09301 1.15319)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
       (name "Fuel")
@@ -815,7 +827,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xa3cf248")
+          (id "0xcd0e950")
           (pos -2749 423)
           (parent "")
           (select-mask 1)
@@ -826,7 +838,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa21b0d0")
+          (id "0xce5a5d8")
           (pos -3388 422)
           (parent "")
           (select-mask 1)
@@ -837,816 +849,804 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "House")
+      (name "House2")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xa3cfb70")
-          (pos 217 471)
+          (id "0xce5a798")
+          (pos 1470 471)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/city_subway.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xa103ec0")
-          (pos 217 -41)
+          (id "0xce4a010")
+          (pos 1271 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1048e0")
-          (pos 217 -553)
+          (id "0xcd0bf38")
+          (pos 759 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa104ae8")
-          (pos 643 -38)
+          (id "0xcd0be30")
+          (pos 247 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_houseairvent.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa104cf8")
-          (pos 645 -550)
+          (id "0xcd36ef0")
+          (pos 2807 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_houseairvent.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1056c8")
-          (pos -131 -559)
+          (id "0xcd36bf0")
+          (pos 2295 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1058d0")
-          (pos 48 -558)
+          (id "0xcd36d10")
+          (pos 1783 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa104ff0")
-          (pos 236 -556)
+          (id "0xcd33a88")
+          (pos -777 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa105988")
-          (pos -126 -45)
+          (id "0xcd33c40")
+          (pos -1289 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa104de0")
-          (pos 53 -44)
+          (id "0xcd34008")
+          (pos -1801 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4b5d18")
-          (pos 241 -42)
+          (id "0xcd33d90")
+          (pos -265 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4fca70")
-          (pos 438 817)
+          (id "0xcd33848")
+          (pos -2313 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 2.96695 1.58413)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa105228")
-          (pos -807 471)
+          (id "0xcd335d8")
+          (pos -2825 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa520150")
-          (pos -807 -41)
+          (id "0xcd336c8")
+          (pos -3337 855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa5202c8")
-          (pos -807 -553)
+          (id "0xcd33760")
+          (pos -3849 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa104550")
-          (pos -1831 471)
+          (id "0xcd330a8")
+          (pos -4361 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa1046b0")
-          (pos -1831 -41)
+          (id "0xcd32860")
+          (pos -4873 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22b5c8")
-          (pos -1831 -553)
+          (id "0xcd32a30")
+          (pos -5385 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22b280")
-          (pos 49 457)
+          (id "0xcd331a0")
+          (pos -5897 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/explosion_decal.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22b710")
-          (pos -1495 498)
+          (id "0xcd32b08")
+          (pos -6409 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_crack.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22bf50")
-          (pos -1003 -564)
+          (id "0xcd32da0")
+          (pos -6921 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22c010")
-          (pos -824 -563)
+          (id "0xcd32ec0")
+          (pos -7433 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22a278")
-          (pos -636 -561)
+          (id "0xcd32488")
+          (pos -7945 854)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22a670")
-          (pos -998 -50)
+          (id "0xce5b018")
+          (pos -2215 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22a770")
-          (pos -819 -49)
+          (id "0xce5b128")
+          (pos -1959 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22a428")
-          (pos -631 -47)
+          (id "0xce5ac20")
+          (pos -1703 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22a8c8")
-          (pos -1527 -34)
+          (id "0xce5ae00")
+          (pos -1447 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22acc8")
-          (pos -1715 -39)
+          (id "0xce5aa50")
+          (pos 601 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa22adc8")
-          (pos -1894 -40)
+          (id "0xce5a948")
+          (pos 345 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa22ab28")
-          (pos -1532 -563)
+          (id "0xce5b360")
+          (pos 89 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa7dffe8")
-          (pos -1720 -565)
+          (id "0xce5b468")
+          (pos -167 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa803720")
-          (pos -1899 -566)
+          (id "0xce5b578")
+          (pos -679 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa826e58")
-          (pos -2237 -561)
+          (id "0xce7b730")
+          (pos -423 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_houseairvent.png")
+          (path "images/decal/container_side.png")
           (type 0)
-          (scale -1.23139 1.08248)
+          (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa22bb20")
-          (pos -2239 -41)
+          (id "0xcf5c010")
+          (pos -935 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_houseairvent.png")
+          (path "images/decal/container_side.png")
           (type 0)
-          (scale -1.23139 1.08248)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22b8f0")
-          (pos -1061 582)
+          (id "0xcf5c280")
+          (pos -1191 -873)
           (parent "")
           (select-mask 1)
-          (path "images/decal/door.png")
+          (path "images/decal/container_side.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22afd0")
-          (pos -810 477)
+          (id "0xcf5c0f0")
+          (pos 3831 853)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa84a508")
-          (pos -628 478)
+          (id "0xcf5c1f8")
+          (pos 3319 853)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_window.png")
+          (path "images/decal/cityground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa84a620")
-          (pos -437 671)
+          (id "0xcefbc00")
+          (pos 5367 853)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelplate_crack.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 1.09301 1.15319)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Shadow")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0xa84a9d8")
-          (pos 858 689)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.55695 0.984741)
-          (angle 0)
-          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa103c28")
-          (pos 704 418)
+          (id "0xcf9c448")
+          (pos 4855 853)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 0.786377 2.50299)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22c650")
-          (pos 1974 744)
+          (id "0xcf9c4b0")
+          (pos 4343 853)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 1.22888 0.977112)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa22c6f8")
-          (pos 1397 489)
+          (id "0xce5a488")
+          (pos 6903 852)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 3.22015 1.55695)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3cfc68")
-          (pos -2291 573)
+          (id "0xcfdc9b8")
+          (pos 6391 852)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 1.49889 2.34289)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa104350")
-          (pos -2855 737)
+          (id "0xcfdc828")
+          (pos 5879 852)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/cityground.png")
           (type 0)
-          (scale 2.52588 1.11444)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xa89bcb0")
-          (pos 2870 735)
+          (id "0xce49ad8")
+          (pos 525 612)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/humanreference.png")
           (type 0)
-          (scale 6.60283 0.940395)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa89be58")
-          (pos 4870 739)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 6.60283 0.940395)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Wall")
+      (name "Highlight")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0xa977138")
-          (pos 613 398)
+          (id "0xcd0d680")
+          (pos 2998 558)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 2.4498 1.68449)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa977750")
-          (pos 1145 398)
+          (id "0xcd34268")
+          (pos 836 212)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/rooflamp.png")
           (type 0)
-          (scale 1.03906 1.2832)
-          (angle 0)
+          (scale 1.05279 1.05689)
+          (angle -1.56597)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa9779e8")
-          (pos 1677 397)
+          (id "0xcd34480")
+          (pos 985 221)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
-          (angle 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 3.65012 5.58788)
+          (angle 1.47871)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa977b90")
-          (pos 2209 397)
+          (id "0xcd0b580")
+          (pos 949 214)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
-          (angle 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.961703 0.344589)
+          (angle 1.58209)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa977d08")
-          (pos 2741 397)
+          (id "0xcd0ccb0")
+          (pos -1207 634)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/lamp1.png")
           (type 0)
-          (scale 1.03906 1.2832)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa977ee8")
-          (pos -2609 407)
+          (id "0xcd0cf68")
+          (pos -910 639)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/lamp1.png")
           (type 0)
-          (scale 1.03906 1.2832)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa9780b0")
-          (pos -2077 407)
+          (id "0xcd0cfc0")
+          (pos -912 619)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978e60")
-          (pos -3141 407)
+          (id "0xcd0b800")
+          (pos -1208 615)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978f68")
-          (pos -4205 407)
+          (id "0xcd0ba48")
+          (pos 2992 368)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/streetlamp.png")
           (type 0)
-          (scale 1.03906 1.2832)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978200")
-          (pos -3673 407)
+          (id "0xcd0d470")
+          (pos 2999 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.698039 0.489933)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978350")
-          (pos -4737 407)
+          (id "0xcd0d330")
+          (pos 3542 559)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 2.4498 1.68449)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978540")
-          (pos -5801 407)
+          (id "0xcd0d130")
+          (pos 3536 369)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/streetlamp.png")
           (type 0)
-          (scale 1.03906 1.2832)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978748")
-          (pos -5269 407)
+          (id "0xcd0c178")
+          (pos 3543 381)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.698039 0.489933)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa978810")
-          (pos -6333 407)
+          (id "0xcd0ca90")
+          (pos 4050 558)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 2.4498 1.68449)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa9788d0")
-          (pos 3273 396)
+          (id "0xcd0c6c0")
+          (pos 4044 368)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/streetlamp.png")
           (type 0)
-          (scale 1.03906 1.2832)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa543a98")
-          (pos 3805 397)
+          (id "0xcd0c9f8")
+          (pos 4051 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.698039 0.489933)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d2068")
-          (pos 4337 396)
+          (id "0xcd0bd00")
+          (pos 3549 485)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 1)
+          (scale 4.8895 5.48547)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d1ee8")
-          (pos 4869 396)
+          (id "0xcd0c818")
+          (pos -3945 517)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 2.4498 1.68449)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d21b8")
-          (pos 5401 396)
+          (id "0xcd0c358")
+          (pos -3951 327)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
+          (path "images/decal/streetlamp.png")
           (type 0)
-          (scale 1.03906 1.2832)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d1340")
-          (pos 5933 396)
+          (id "0xce49620")
+          (pos -3944 339)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.698039 0.489933)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xa3d1a00")
-          (pos 6465 396)
+          (id "0xcd0dfa0")
+          (pos 689 326)
           (parent "")
           (select-mask 1)
-          (path "images/decal/citywall.png")
-          (type 0)
-          (scale 1.03906 1.2832)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 3.63751 2.04308)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d1bc0")
-          (pos 4631 455)
+          (id "0xcd0e778")
+          (pos -2229 315)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.284744 0.58992)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 3.7027 1.9346)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d1850")
-          (pos 4558 464)
+          (id "0xcd0e830")
+          (pos 2213 674)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.322891 0.914169)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 1.76741 2.13994)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3d0f78")
-          (pos 4599 378)
+          (id "0xcd0f010")
+          (pos 909 162)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_gate.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 1.90027 1.81253)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Background")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xa976f40")
-          (pos 1328 80)
+          (id "0xcd0edf0")
+          (pos -1070 626)
           (parent "")
           (select-mask 1)
-          (path "images/decal/fuel_container.png")
-          (type 0)
-          (scale 1.93044 2.12433)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 1.5143 1.10403)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa103ce8")
-          (pos 2513 80)
+          (id "0xcd0d8c0")
+          (pos -1064 624)
           (parent "")
           (select-mask 1)
-          (path "images/decal/fuel_container.png")
-          (type 0)
-          (scale 1.93044 2.12433)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 1.34704 1.09163)
           (angle 0)
           (hflip #f)
-          (vflip #f))))))
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #t)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/container.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/container.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/container.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,270 +10,418 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
+      (name "Background")
       (visible #t)
       (locked #t)
-      (objects))
-    (layer
-      (name "Character")
-      (visible #t)
-      (locked #f)
       (objects
         (decal
-          (id "0x9c3b018")
-          (pos 521 777)
+          (id "0xd67bf78")
+          (pos -15 424)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/container_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c3abb8")
-          (pos 539 200)
+          (id "0xd67c300")
+          (pos 973 427)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/container_background.png")
           (type 0)
-          (scale 1.49438 1.43945)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c47890")
-          (pos 789 826)
+          (id "0xd67ba10")
+          (pos 549 839)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelbox.png")
+          (path "images/decal/steelplate_crack.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c47ac8")
-          (pos 917 826)
+          (id "0xdd394f8")
+          (pos -181 185)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelbox.png")
+          (path "images/decal/container_crack.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c18f38")
-          (pos 789 698)
+          (id "0xd67bbe8")
+          (pos 1267 845)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelbox.png")
+          (path "images/decal/container_crack.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c18a48")
-          (pos 917 698)
+          (id "0xdd395b0")
+          (pos 1209 472)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelbox.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.640625 0.746094)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c192b8")
-          (pos 805 601)
+          (id "0xdd396d0")
+          (pos 1192 578)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelbox_small.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.142578 0.601562)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c18778")
-          (pos 693 858)
+          (id "0xdd377f8")
+          (pos 1206 450)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelbox_small.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.535156 0.523438)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c31638")
-          (pos 1113 783)
+          (id "0xdd375e8")
+          (pos 1241 553)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.726562 0.792969)
+          (scale 0.078125 0.478516)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c2abd0")
-          (pos 1053 761)
+          (id "0xdd37390")
+          (pos 1206 435)
           (parent "")
           (select-mask 1)
-          (path "images/decal/unit1.png")
+          (path "images/decal/container_gate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c0ced8")
-          (pos 1155 761)
+          (id "0xdd39280")
+          (pos 316 286)
           (parent "")
           (select-mask 1)
-          (path "images/decal/unit1.png")
+          (path "images/decal/explosion_decal.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.40212 1.74096)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd45a0")
-          (pos 1067 776)
+          (id "0xdd39320")
+          (pos 201 525)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dirty3.png")
+          (path "images/decal/dirty6.png")
           (type 0)
-          (scale 1 1.03333)
+          (scale 2.40664 2.18176)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa5e6558")
-          (pos 1147 769)
+          (id "0xdd390e8")
+          (pos 203 453)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dirty8.png")
+          (path "images/decal/dark.png")
           (type 0)
+          (scale 0.683594 0.535156)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdd39028")
+          (pos 194 437)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa5e59e8")
-          (pos 1042 828)
+          (id "0xdd37ef8")
+          (pos 515 537)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dirty7.png")
+          (path "images/decal/dirty6.png")
           (type 0)
-          (scale 0.682758 0.744)
+          (scale 2.525 1.79412)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdd38018")
+          (pos 486 454)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.683594 0.535156)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdd37a68")
+          (pos 504 443)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/ventilation2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Lights")
-      (visible #f)
+      (name "Door")
+      (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9c2ace8")
-          (pos 1087 797)
+          (id "0xdd0d390")
+          (pos 338 745)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
+          (path "images/decal/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xd940dd8")
+          (pos 429 -18)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 4.3617 0.916553)
+          (angle 0)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c22a28")
-          (pos -147 797)
+          (id "0xd940ed0")
+          (pos -264 91)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
+          (path "images/decal/dark.png")
           (type 0)
+          (scale 1.60797 1.59605)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdd1d578")
+          (pos 1200 36)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.60797 1.59605)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdd1d5f8")
+          (pos 481 562)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.517823 1.49438)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdc24c80")
+          (pos 804 479)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.121094 0.865723)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdb023a8")
+          (pos 821 347)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.456787 0.414063)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdb02470")
+          (pos 854 439)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.125254 0.663415)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xd692890")
+          (pos 713 859)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.560547 0.511719)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xd692ab0")
+          (pos 976 842)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.54834 0.737549)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xd67acd8")
+          (pos 818 723)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Stairs")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xd67e990")
+          (pos -389 447)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stair1.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c477a0")
-          (pos 1082 782)
+          (id "0xd67d680")
+          (pos -261 409)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
+          (path "images/decal/stair2.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c19010")
-          (pos -148 782)
+          (id "0xdc24e40")
+          (pos -261 575)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
+          (path "images/decal/stair1.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c47548")
-          (pos -109 755)
+          (id "0xd941028")
+          (pos -133 537)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 2.23024 0.952316)
+          (path "images/decal/stair2.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c23258")
-          (pos 1091 786)
+          (id "0xdb02738")
+          (pos -133 703)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 2.23024 0.952316)
+          (path "images/decal/stair1.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c22c90")
-          (pos 617 244)
+          (id "0xdb02888")
+          (pos -5 665)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 2.35601 1.92387)
+          (path "images/decal/stair2.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9be18d8")
-          (pos 1101 779)
+          (id "0xdb029a0")
+          (pos -5 831)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 2)
-          (scale 0.950408 0.128342)
+          (path "images/decal/stair1.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c233b0")
-          (pos -128 779)
+          (id "0xdb02308")
+          (pos 123 793)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 2)
-          (scale 0.959945 0.142647)
+          (path "images/decal/stair2.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
@@ -283,7 +431,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0x9c23ac0")
+          (id "0xd67eab0")
           (pos 663 -121)
           (parent "")
           (select-mask 1)
@@ -294,7 +442,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c23728")
+          (id "0xd7decf0")
           (pos 1047 -121)
           (parent "")
           (select-mask 1)
@@ -305,7 +453,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c22e50")
+          (id "0xd7e0310")
           (pos -105 -121)
           (parent "")
           (select-mask 1)
@@ -316,7 +464,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8398")
+          (id "0xd77ec50")
           (pos 1484 135)
           (parent "")
           (select-mask 1)
@@ -327,7 +475,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba75b0")
+          (id "0xd77ed70")
           (pos 1484 263)
           (parent "")
           (select-mask 1)
@@ -338,7 +486,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8130")
+          (id "0xd810850")
           (pos 1484 391)
           (parent "")
           (select-mask 1)
@@ -349,7 +497,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba7740")
+          (id "0xd7e01a8")
           (pos 1480 519)
           (parent "")
           (select-mask 1)
@@ -360,7 +508,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba7ea0")
+          (id "0xd7e00c8")
           (pos 1480 647)
           (parent "")
           (select-mask 1)
@@ -371,7 +519,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba79c0")
+          (id "0xd7dfed0")
           (pos 1367 -57)
           (parent "")
           (select-mask 1)
@@ -382,7 +530,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c240b8")
+          (id "0xd9009d8")
           (pos -540 127)
           (parent "")
           (select-mask 1)
@@ -393,7 +541,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8468")
+          (id "0xd900b68")
           (pos 1373 903)
           (parent "")
           (select-mask 1)
@@ -404,7 +552,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba85f0")
+          (id "0xd7dfbf0")
           (pos -540 475)
           (parent "")
           (select-mask 1)
@@ -415,7 +563,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9210")
+          (id "0xd7dfcd0")
           (pos -540 591)
           (parent "")
           (select-mask 1)
@@ -426,7 +574,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8e58")
+          (id "0xd9e1248")
           (pos -540 707)
           (parent "")
           (select-mask 1)
@@ -437,7 +585,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba86e8")
+          (id "0xd9e1328")
           (pos -425 -57)
           (parent "")
           (select-mask 1)
@@ -448,7 +596,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8988")
+          (id "0xd9e1490")
           (pos -419 905)
           (parent "")
           (select-mask 1)
@@ -459,7 +607,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9040")
+          (id "0xda41610")
           (pos -104 954)
           (parent "")
           (select-mask 1)
@@ -470,7 +618,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8c70")
+          (id "0xda416c8")
           (pos 280 954)
           (parent "")
           (select-mask 1)
@@ -481,7 +629,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baa0a0")
+          (id "0xda81a48")
           (pos 661 954)
           (parent "")
           (select-mask 1)
@@ -492,7 +640,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9ad8")
+          (id "0xda81c00")
           (pos 1045 954)
           (parent "")
           (select-mask 1)
@@ -503,7 +651,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9c98")
+          (id "0xd8103d8")
           (pos -544 401)
           (parent "")
           (select-mask 1)
@@ -514,7 +662,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8b10")
+          (id "0xd7df748")
           (pos 279 -97)
           (parent "")
           (select-mask 1)
@@ -525,420 +673,272 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Stairs")
-      (visible #t)
+      (name "Lights")
+      (visible #f)
       (locked #t)
       (objects
         (decal
-          (id "0x9baa700")
-          (pos -389 447)
+          (id "0xd7469a8")
+          (pos 1087 797)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
+          (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9f48")
-          (pos -261 409)
+          (id "0xd769610")
+          (pos -147 797)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
+          (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba97c0")
-          (pos -261 575)
+          (id "0xd746a60")
+          (pos 1082 782)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
-          (type 0)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9de0")
-          (pos -133 537)
+          (id "0xd71cbe0")
+          (pos -148 782)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
-          (type 0)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9430")
-          (pos -133 703)
+          (id "0xd757e20")
+          (pos -109 755)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 2.23024 0.952316)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baa760")
-          (pos -5 665)
+          (id "0xd7aea98")
+          (pos 1091 786)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 2.23024 0.952316)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baa818")
-          (pos -5 831)
+          (id "0xd7aebc8")
+          (pos 617 244)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 2.35601 1.92387)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baaf30")
-          (pos 123 793)
+          (id "0xd77eb60")
+          (pos 1101 779)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light.png")
+          (type 2)
+          (scale 0.950408 0.128342)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Shadow")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0x9ba9660")
-          (pos 429 -18)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 4.3617 0.916553)
-          (angle 0)
-          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba7b60")
-          (pos -264 91)
+          (id "0xd7467a8")
+          (pos -128 779)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.60797 1.59605)
+          (path "images/decal/light.png")
+          (type 2)
+          (scale 0.959945 0.142647)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9ba7c38")
-          (pos 1200 36)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.60797 1.59605)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9baaa18")
-          (pos 481 562)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.517823 1.49438)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9baac98")
-          (pos 804 479)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.121094 0.865723)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd9230")
-          (pos 821 347)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.456787 0.414063)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd9688")
-          (pos 854 439)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.125254 0.663415)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd9330")
-          (pos 713 859)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.560547 0.511719)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd9410")
-          (pos 976 842)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.54834 0.737549)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9c20218")
-          (pos 818 723)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Door")
+      (name "Character")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x9c204a8")
-          (pos 338 745)
+          (id "0xbd19eb8")
+          (pos 521 777)
           (parent "")
           (select-mask 1)
-          (path "images/decal/door.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Background")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x9c21040")
-          (pos -15 424)
+          (id "0xd67ce68")
+          (pos 539 200)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.49438 1.43945)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c21d48")
-          (pos 973 427)
+          (id "0xd67cf48")
+          (pos 789 826)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_background.png")
+          (path "images/decal/steelbox.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9c22008")
-          (pos 549 839)
+          (id "0xd67cc08")
+          (pos 917 826)
           (parent "")
           (select-mask 1)
-          (path "images/decal/steelplate_crack.png")
+          (path "images/decal/steelbox.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd8fb8")
-          (pos -181 185)
+          (id "0xd67d948")
+          (pos 789 698)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_crack.png")
+          (path "images/decal/steelbox.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd88b0")
-          (pos 1267 845)
+          (id "0xd67dda8")
+          (pos 917 698)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_crack.png")
+          (path "images/decal/steelbox.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd8768")
-          (pos 1209 472)
+          (id "0xd67dac0")
+          (pos 805 601)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/steelbox_small.png")
           (type 0)
-          (scale 0.640625 0.746094)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd8e28")
-          (pos 1192 578)
+          (id "0xd67dc50")
+          (pos 693 858)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/steelbox_small.png")
           (type 0)
-          (scale 0.142578 0.601562)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd71f0")
-          (pos 1206 450)
+          (id "0xd67e820")
+          (pos 1113 783)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.535156 0.523438)
+          (scale 0.726562 0.792969)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd73a0")
-          (pos 1241 553)
+          (id "0xd67e168")
+          (pos 1053 761)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/unit1.png")
           (type 0)
-          (scale 0.078125 0.478516)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd8b78")
-          (pos 1206 435)
+          (id "0xd67e4c0")
+          (pos 1155 761)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_gate.png")
+          (path "images/decal/unit1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd8a68")
-          (pos 316 286)
+          (id "0xd67df50")
+          (pos 1067 776)
           (parent "")
           (select-mask 1)
-          (path "images/decal/explosion_decal.png")
+          (path "images/decal/dirty3.png")
           (type 0)
-          (scale 1.40212 1.74096)
+          (scale 1 1.03333)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd7478")
-          (pos 201 525)
+          (id "0xd6e8fb8")
+          (pos 1147 769)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dirty6.png")
+          (path "images/decal/dirty8.png")
           (type 0)
-          (scale 2.40664 2.18176)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd7d80")
-          (pos 203 453)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.683594 0.535156)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd7c18")
-          (pos 194 437)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/ventilation2.png")
-          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd77e8")
-          (pos 515 537)
+          (id "0xd743cb8")
+          (pos 1042 828)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dirty6.png")
+          (path "images/decal/dirty7.png")
           (type 0)
-          (scale 2.525 1.79412)
+          (scale 0.682758 0.744)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd7f88")
-          (pos 486 454)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.683594 0.535156)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bd81f8")
-          (pos 504 443)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/ventilation2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))))))
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #t)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/elevator.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/elevator.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/elevator.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,104 +10,12 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
-      (visible #t)
-      (locked #t)
-      (objects))
-    (layer
-      (name "Highlights")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0xb27cf80")
-          (pos 0 -3)
-          (parent "0xb27c858")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 0.617188 0.625)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xb27c858")
-          (pos 349 576)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 0.117188 0.125)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xb27d750")
-          (pos 0 -3)
-          (parent "0xb27d4d8")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 0.617188 0.625)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xb27d4d8")
-          (pos 578 572)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 0.117188 0.125)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xb27d5e0")
-          (pos 455 572)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 3.76565 0.294281)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Lights")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0xb27d870")
-          (pos 454 774)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 20.453 15.3696)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xb27c488")
-          (pos 454 623)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.00336 3.39467)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))))
-    (layer
       (name "Elevator")
       (visible #t)
       (locked #f)
       (objects
         (decal
-          (id "0xb27a598")
+          (id "0xdf8bd78")
           (pos 1022 826)
           (parent "")
           (select-mask 1)
@@ -118,7 +26,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27ad98")
+          (id "0xdf8beb0")
           (pos 370 225)
           (parent "")
           (select-mask 1)
@@ -129,7 +37,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb28f200")
+          (id "0xdf7bd88")
           (pos 423 216)
           (parent "")
           (select-mask 1)
@@ -140,7 +48,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb28f318")
+          (id "0xdf7bc80")
           (pos 545 217)
           (parent "")
           (select-mask 1)
@@ -151,7 +59,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb27a7b8")
+          (id "0xdf8c3b8")
           (pos -371 814)
           (parent "")
           (select-mask 1)
@@ -162,7 +70,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27b9e8")
+          (id "0xdf8c4a0")
           (pos 488 227)
           (parent "")
           (select-mask 1)
@@ -173,7 +81,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb27bb20")
+          (id "0xdf8c200")
           (pos 459 708)
           (parent "")
           (select-mask 1)
@@ -184,7 +92,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27bd38")
+          (id "0xdf8c7c8")
           (pos 183 84)
           (parent "")
           (select-mask 1)
@@ -195,7 +103,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27bef8")
+          (id "0xdf8cbf0")
           (pos 53 340)
           (parent "")
           (select-mask 1)
@@ -206,7 +114,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27bfa0")
+          (id "0xdf8ca48")
           (pos -78 596)
           (parent "")
           (select-mask 1)
@@ -217,7 +125,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27c0b8")
+          (id "0xdf8cb18")
           (pos -208 852)
           (parent "")
           (select-mask 1)
@@ -228,7 +136,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb582f10")
+          (id "0xdf8da88")
           (pos -211 854)
           (parent "")
           (select-mask 1)
@@ -239,7 +147,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb583028")
+          (id "0xdf8c968")
           (pos 755 84)
           (parent "")
           (select-mask 1)
@@ -250,7 +158,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb583158")
+          (id "0xe1f04e0")
           (pos 885 340)
           (parent "")
           (select-mask 1)
@@ -261,7 +169,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb27b468")
+          (id "0xdf8cff0")
           (pos 1016 596)
           (parent "")
           (select-mask 1)
@@ -272,7 +180,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb27b580")
+          (id "0xdf8d100")
           (pos 1146 852)
           (parent "")
           (select-mask 1)
@@ -283,7 +191,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb5c53e0")
+          (id "0xdf8d2d8")
           (pos 599 -236)
           (parent "")
           (select-mask 1)
@@ -294,7 +202,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb775ff0")
+          (id "0xe4011c0")
           (pos 317 -235)
           (parent "")
           (select-mask 1)
@@ -305,7 +213,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7760e0")
+          (id "0xe2b69c0")
           (pos 700 -28)
           (parent "")
           (select-mask 1)
@@ -316,7 +224,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb649720")
+          (id "0xe2b6740")
           (pos 237 -29)
           (parent "")
           (select-mask 1)
@@ -327,7 +235,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb649870")
+          (id "0xe2b6868")
           (pos 461 -137)
           (parent "")
           (select-mask 1)
@@ -338,7 +246,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27b118")
+          (id "0xe33ab40")
           (pos -234 924)
           (parent "")
           (select-mask 1)
@@ -349,7 +257,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb27b348")
+          (id "0xe33abf0")
           (pos 1160 856)
           (parent "")
           (select-mask 1)
@@ -360,7 +268,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7bebe8")
+          (id "0xe33ad20")
           (pos 1164 914)
           (parent "")
           (select-mask 1)
@@ -371,7 +279,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7e71a0")
+          (id "0xe46dde0")
           (pos 1165 979)
           (parent "")
           (select-mask 1)
@@ -382,7 +290,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb68bd48")
+          (id "0xdf8d6e8")
           (pos 108 864)
           (parent "")
           (select-mask 1)
@@ -393,7 +301,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb80f258")
+          (id "0xe46def0")
           (pos 1272 954)
           (parent "")
           (select-mask 1)
@@ -404,7 +312,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb80f478")
+          (id "0xdf8d578")
           (pos 1288 944)
           (parent "")
           (select-mask 1)
@@ -415,7 +323,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb80f6c8")
+          (id "0xdf8d638")
           (pos -171.395 900.148)
           (parent "")
           (select-mask 1)
@@ -426,7 +334,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7e6f10")
+          (id "0xe46dc90")
           (pos 483 989)
           (parent "")
           (select-mask 1)
@@ -437,7 +345,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7be7a8")
+          (id "0xe4be180")
           (pos 998 1106)
           (parent "")
           (select-mask 1)
@@ -448,7 +356,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb88ef58")
+          (id "0xe4fb5e0")
           (pos 998 1362)
           (parent "")
           (select-mask 1)
@@ -459,7 +367,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7be988")
+          (id "0xe517870")
           (pos 998 1618)
           (parent "")
           (select-mask 1)
@@ -470,7 +378,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7be398")
+          (id "0xe46d958")
           (pos 1510 1106)
           (parent "")
           (select-mask 1)
@@ -481,7 +389,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7be580")
+          (id "0xe46d9e8")
           (pos -258 968)
           (parent "")
           (select-mask 1)
@@ -492,7 +400,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8a84c0")
+          (id "0xe4bdfc8")
           (pos -542 1107)
           (parent "")
           (select-mask 1)
@@ -503,7 +411,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8a8a30")
+          (id "0xe46d590")
           (pos -30 1107)
           (parent "")
           (select-mask 1)
@@ -514,7 +422,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8a8c00")
+          (id "0xe46d6b8")
           (pos -30 1363)
           (parent "")
           (select-mask 1)
@@ -525,7 +433,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8a8630")
+          (id "0xe517528")
           (pos -30 1619)
           (parent "")
           (select-mask 1)
@@ -536,7 +444,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8a8800")
+          (id "0xe517678")
           (pos 963 1680)
           (parent "")
           (select-mask 1)
@@ -547,7 +455,7 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0xb8a8d08")
+          (id "0xe517388")
           (pos 1038 1192)
           (parent "")
           (select-mask 1)
@@ -558,7 +466,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb88e700")
+          (id "0xe517140")
           (pos 1206 1579)
           (parent "")
           (select-mask 1)
@@ -569,7 +477,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb88e818")
+          (id "0xe0de2c8")
           (pos 1238 1611)
           (parent "")
           (select-mask 1)
@@ -580,7 +488,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb88ea58")
+          (id "0xe517208")
           (pos 1201 1587)
           (parent "")
           (select-mask 1)
@@ -591,7 +499,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb88eb70")
+          (id "0xe0e04f8")
           (pos 1113 1594)
           (parent "")
           (select-mask 1)
@@ -602,7 +510,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb88eca8")
+          (id "0xe0dfd68")
           (pos 1188 1354)
           (parent "")
           (select-mask 1)
@@ -613,7 +521,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8b8ee8")
+          (id "0xe0dfe18")
           (pos 1202 1448)
           (parent "")
           (select-mask 1)
@@ -624,7 +532,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8b9db0")
+          (id "0xe0de3a0")
           (pos -308 1481)
           (parent "")
           (select-mask 1)
@@ -635,7 +543,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb8b9ec8")
+          (id "0xe0de5f8")
           (pos -340 1513)
           (parent "")
           (select-mask 1)
@@ -646,7 +554,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb8b9010")
+          (id "0xe0de7d8")
           (pos -303 1489)
           (parent "")
           (select-mask 1)
@@ -657,7 +565,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb8b9250")
+          (id "0xe0de988")
           (pos -12 1570)
           (parent "")
           (select-mask 1)
@@ -668,7 +576,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb8b9400")
+          (id "0xe0dec58")
           (pos -236 1454)
           (parent "")
           (select-mask 1)
@@ -679,7 +587,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb8b9998")
+          (id "0xe0ded20")
           (pos -265 1778)
           (parent "")
           (select-mask 1)
@@ -690,7 +598,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8b9b80")
+          (id "0xe0deec8")
           (pos -1054 1107)
           (parent "")
           (select-mask 1)
@@ -701,7 +609,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8b9520")
+          (id "0xe0e03f8")
           (pos -1566 1107)
           (parent "")
           (select-mask 1)
@@ -712,7 +620,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8bab80")
+          (id "0xe0e0050")
           (pos 3047 1106)
           (parent "")
           (select-mask 1)
@@ -723,7 +631,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8ba090")
+          (id "0xe0e0160")
           (pos 2534 1106)
           (parent "")
           (select-mask 1)
@@ -734,7 +642,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8bac60")
+          (id "0xe0df000")
           (pos 2022 1106)
           (parent "")
           (select-mask 1)
@@ -745,7 +653,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8baf10")
+          (id "0xe0df0a0")
           (pos -966 1146)
           (parent "")
           (select-mask 1)
@@ -756,7 +664,7 @@
           (hflip #t)
           (vflip #t))
         (decal
-          (id "0xb8ba780")
+          (id "0xe0df150")
           (pos 1810 1137)
           (parent "")
           (select-mask 1)
@@ -765,6 +673,98 @@
           (scale 11.2615 1.61989)
           (angle 0)
           (hflip #f)
-          (vflip #t))))))
+          (vflip #t))))
+    (layer
+      (name "Lights")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xdf7c4c0")
+          (pos 454 774)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 20.453 15.3696)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdf7c8d8")
+          (pos 454 623)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.00336 3.39467)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Highlights")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xcd2b578")
+          (pos 0 -3)
+          (parent "0xdf7c5f0")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 0.617188 0.625)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdf7c5f0")
+          (pos 349 576)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 0.117188 0.125)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdf7c760")
+          (pos 0 -3)
+          (parent "0xdf8dbb8")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 0.617188 0.625)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdf8dbb8")
+          (pos 578 572)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 0.117188 0.125)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xdf8dcb0")
+          (pos 455 572)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 3.76565 0.294281)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #t)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/greenstuff.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/greenstuff.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/greenstuff.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,185 +10,228 @@
     (edges))
   (objects
     (layer
-      (name "Light")
+      (name "Trees")
       (visible #t)
-      (locked #f)
+      (locked #t)
       (objects
         (decal
-          (id "0xa485f78")
-          (pos -55 167)
+          (id "0xe60d0d0")
+          (pos 19.2787 37.4811)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.70117 4.27148)
+          (path "images/decal/tree1.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa486128")
-          (pos 804 402)
+          (id "0xec92d38")
+          (pos 189.591 34.3561)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.70117 4.27148)
+          (path "images/decal/tree3.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d6b28")
-          (pos 392 164)
+          (id "0xec92b90")
+          (pos 331 9)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 8.41748 4.08838)
+          (path "images/decal/tree2.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa48d458")
-          (pos -434 115)
+          (id "0xf220d98")
+          (pos -237 42)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 2.9577 4.08838)
+          (path "images/decal/tree4.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa485e88")
-          (pos 246 185)
+          (id "0xf220f50")
+          (pos -329 20)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.67431 4.08838)
+          (path "images/decal/tree3.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa485708")
-          (pos 886 203)
+          (id "0xe60f410")
+          (pos -33 46)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.67431 4.08838)
+          (path "images/decal/tree1.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0x9d967e0")
-          (pos 2078 397)
+          (id "0xf2213a8")
+          (pos -344 14)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/tree3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa485c48")
-          (pos 1448 564)
+          (id "0xf221470")
+          (pos -450 29)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.67431 4.08838)
+          (path "images/decal/tree2.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa485408")
-          (pos 822 -146)
+          (id "0xf221248")
+          (pos 232 29)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 1)
-          (scale 4.43322 3.09808)
+          (path "images/decal/tree4.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa4857a8")
-          (pos -22 234)
+          (id "0xf2219c0")
+          (pos 468 -6)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light2.png")
-          (type 2)
-          (scale 5.20898 0.736328)
+          (path "images/decal/tree3.png")
+          (type 0)
+          (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa4b72a0")
-          (pos 1882 482)
+          (id "0xf2210a0")
+          (pos -545 20)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/tree2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cefe8")
-          (pos 2243 492)
+          (id "0xf2217f8")
+          (pos 512 5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/tree1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4b74a0")
-          (pos 2204 729)
+          (id "0xf221708")
+          (pos 664 0)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/tree3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #f)
+          (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa4537c8")
-          (pos 1746 654)
+          (id "0xf221548")
+          (pos 800 7)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/tree1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
+          (hflip #t)
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0xf1a1a60")
+          (pos 3 232)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/humanreference.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "New Layer")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xa470078")
-          (pos 1964 732)
+          (id "0xf1a1198")
+          (pos -253 257)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb2d2970")
-          (pos 1731 757)
+          (id "0xe625780")
+          (pos -252 243)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf1a1b50")
+          (pos 256 249)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xe60cec8")
+          (pos 257 235)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
       (name "Scene")
@@ -196,7 +239,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xa486f80")
+          (id "0xe625948")
           (pos -496.346 237.481)
           (parent "")
           (select-mask 1)
@@ -207,7 +250,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483320")
+          (id "0xe625a78")
           (pos -608 4)
           (parent "")
           (select-mask 1)
@@ -218,7 +261,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483530")
+          (id "0xe627090")
           (pos -617 215)
           (parent "")
           (select-mask 1)
@@ -229,7 +272,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483f78")
+          (id "0xe626768")
           (pos 996 36)
           (parent "")
           (select-mask 1)
@@ -240,7 +283,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483ac0")
+          (id "0xe626668")
           (pos 1369 541)
           (parent "")
           (select-mask 1)
@@ -251,7 +294,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cdc08")
+          (id "0xe626f10")
           (pos 427 34)
           (parent "")
           (select-mask 1)
@@ -262,7 +305,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483df8")
+          (id "0xe6267d0")
           (pos 298 252)
           (parent "")
           (select-mask 1)
@@ -273,7 +316,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa484378")
+          (id "0xe6268b0")
           (pos 1076 249)
           (parent "")
           (select-mask 1)
@@ -284,7 +327,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa484648")
+          (id "0xe626c00")
           (pos 582 483)
           (parent "")
           (select-mask 1)
@@ -295,7 +338,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa484470")
+          (id "0xe626508")
           (pos 1094 483)
           (parent "")
           (select-mask 1)
@@ -306,7 +349,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4ccca0")
+          (id "0xe626a30")
           (pos 582 739)
           (parent "")
           (select-mask 1)
@@ -317,7 +360,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483780")
+          (id "0xe6262c8")
           (pos 1094 739)
           (parent "")
           (select-mask 1)
@@ -328,7 +371,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa483940")
+          (id "0xe625be8")
           (pos 529 157)
           (parent "")
           (select-mask 1)
@@ -339,7 +382,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cd1d8")
+          (id "0xe626138")
           (pos 420 364)
           (parent "")
           (select-mask 1)
@@ -350,7 +393,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4ccf10")
+          (id "0xe625ff0")
           (pos 647 370)
           (parent "")
           (select-mask 1)
@@ -361,7 +404,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa484e30")
+          (id "0xe986e50")
           (pos 500 392)
           (parent "")
           (select-mask 1)
@@ -372,7 +415,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa484fe0")
+          (id "0xe987890")
           (pos 537 302)
           (parent "")
           (select-mask 1)
@@ -383,7 +426,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4849b8")
+          (id "0xe987a00")
           (pos 656 335)
           (parent "")
           (select-mask 1)
@@ -394,7 +437,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa484ac0")
+          (id "0xe987a78")
           (pos 861 398)
           (parent "")
           (select-mask 1)
@@ -405,7 +448,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa484b90")
+          (id "0xe9cc4d8")
           (pos 530 85)
           (parent "")
           (select-mask 1)
@@ -416,7 +459,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cb1b0")
+          (id "0xe9875b0")
           (pos 644 202)
           (parent "")
           (select-mask 1)
@@ -427,7 +470,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4ca7b8")
+          (id "0xe9cc280")
           (pos 1344 453)
           (parent "")
           (select-mask 1)
@@ -438,7 +481,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cac60")
+          (id "0xe9cc398")
           (pos 618 446)
           (parent "")
           (select-mask 1)
@@ -449,7 +492,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cae10")
+          (id "0xe9cc108")
           (pos 697 340)
           (parent "")
           (select-mask 1)
@@ -460,7 +503,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cb040")
+          (id "0xeb22070")
           (pos 710 266)
           (parent "")
           (select-mask 1)
@@ -471,7 +514,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4ca8b0")
+          (id "0xeb21eb0")
           (pos 856 459)
           (parent "")
           (select-mask 1)
@@ -482,7 +525,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cc3a0")
+          (id "0xeb21f40")
           (pos 1504 755)
           (parent "")
           (select-mask 1)
@@ -493,7 +536,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4ccc18")
+          (id "0xeb21d20")
           (pos 1392 766)
           (parent "")
           (select-mask 1)
@@ -504,7 +547,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cc780")
+          (id "0xeb21e28")
           (pos 1242 628)
           (parent "")
           (select-mask 1)
@@ -515,7 +558,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cc920")
+          (id "0xea55158")
           (pos 1232 824)
           (parent "")
           (select-mask 1)
@@ -526,7 +569,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cb4a0")
+          (id "0xea54f70")
           (pos 1351 879)
           (parent "")
           (select-mask 1)
@@ -537,7 +580,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cc4d0")
+          (id "0xed34f28")
           (pos 1117 632)
           (parent "")
           (select-mask 1)
@@ -548,7 +591,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xa4cc670")
+          (id "0xed34d90")
           (pos 1104 821)
           (parent "")
           (select-mask 1)
@@ -559,7 +602,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cc0f8")
+          (id "0xe986fb8")
           (pos 598 748)
           (parent "")
           (select-mask 1)
@@ -570,7 +613,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cb590")
+          (id "0xe987290")
           (pos 1079 411)
           (parent "")
           (select-mask 1)
@@ -581,7 +624,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cb630")
+          (id "0xe987058")
           (pos 1127 516)
           (parent "")
           (select-mask 1)
@@ -592,7 +635,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cbac8")
+          (id "0xe9870f0")
           (pos 1179 397)
           (parent "")
           (select-mask 1)
@@ -603,7 +646,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cbb48")
+          (id "0xedf0540")
           (pos 944 416)
           (parent "")
           (select-mask 1)
@@ -614,7 +657,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4cb810")
+          (id "0xedf0300")
           (pos 70 483)
           (parent "")
           (select-mask 1)
@@ -625,7 +668,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1ac0")
+          (id "0xeeabef0")
           (pos 134 478)
           (parent "")
           (select-mask 1)
@@ -636,7 +679,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d7ab8")
+          (id "0xeeabfd8")
           (pos 312 310)
           (parent "")
           (select-mask 1)
@@ -647,7 +690,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d3038")
+          (id "0xeeac150")
           (pos -442 483)
           (parent "")
           (select-mask 1)
@@ -658,7 +701,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1be8")
+          (id "0xeeab968")
           (pos -442 739)
           (parent "")
           (select-mask 1)
@@ -669,7 +712,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1de0")
+          (id "0xeeabd40")
           (pos 291 424)
           (parent "")
           (select-mask 1)
@@ -680,7 +723,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1f90")
+          (id "0xec92ed0")
           (pos -143 423)
           (parent "")
           (select-mask 1)
@@ -691,7 +734,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d2140")
+          (id "0xeeabbb0")
           (pos 136 402)
           (parent "")
           (select-mask 1)
@@ -702,7 +745,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d2200")
+          (id "0xeef0858")
           (pos 712 417)
           (parent "")
           (select-mask 1)
@@ -713,7 +756,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d2a28")
+          (id "0xeef0a10")
           (pos 536 388)
           (parent "")
           (select-mask 1)
@@ -724,7 +767,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d2c50")
+          (id "0xeeaba90")
           (pos 295 730)
           (parent "")
           (select-mask 1)
@@ -735,7 +778,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d2ea0")
+          (id "0xf026620")
           (pos -134 695)
           (parent "")
           (select-mask 1)
@@ -746,7 +789,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d27b0")
+          (id "0xeef0ae8")
           (pos -65 969)
           (parent "")
           (select-mask 1)
@@ -757,7 +800,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d0aa0")
+          (id "0xf027060")
           (pos 361 1004)
           (parent "")
           (select-mask 1)
@@ -768,7 +811,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d23a0")
+          (id "0xf0273c0")
           (pos 80 1241)
           (parent "")
           (select-mask 1)
@@ -779,7 +822,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d2580")
+          (id "0xf026950")
           (pos -479 881)
           (parent "")
           (select-mask 1)
@@ -790,7 +833,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d14e8")
+          (id "0xf0269d8")
           (pos -351 1153)
           (parent "")
           (select-mask 1)
@@ -801,7 +844,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1a18")
+          (id "0xf026b80")
           (pos 503 1261)
           (parent "")
           (select-mask 1)
@@ -812,7 +855,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d0ca8")
+          (id "0xf026f80")
           (pos 761 957)
           (parent "")
           (select-mask 1)
@@ -823,7 +866,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d15d8")
+          (id "0xf0272a0")
           (pos 902 1207)
           (parent "")
           (select-mask 1)
@@ -834,7 +877,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d16e0")
+          (id "0xf1a0f80")
           (pos 1125 1004)
           (parent "")
           (select-mask 1)
@@ -845,228 +888,185 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "New Layer")
+      (name "Light")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0xa4cf8c0")
-          (pos -253 257)
+          (id "0xe611b68")
+          (pos -55 167)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.70117 4.27148)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa48cd68")
-          (pos -252 243)
+          (id "0xe624ea8")
+          (pos 804 402)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.70117 4.27148)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1168")
-          (pos 256 249)
+          (id "0xe624f88")
+          (pos 392 164)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 8.41748 4.08838)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d1248")
-          (pos 257 235)
+          (id "0xe6100e0")
+          (pos -434 115)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 2.9577 4.08838)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Character")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xa486480")
-          (pos 3 232)
+          (id "0xe60ff58")
+          (pos 246 185)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.67431 4.08838)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Trees")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xa4d02b0")
-          (pos 19.2787 37.4811)
+          (id "0xe627268")
+          (pos 886 203)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree1.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.67431 4.08838)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4d0e58")
-          (pos 189.591 34.3561)
+          (id "0xe610390")
+          (pos 2078 397)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree3.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4af670")
-          (pos 331 9)
+          (id "0xe627330")
+          (pos 1448 564)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree2.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.67431 4.08838)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4aebd0")
-          (pos -237 42)
+          (id "0xe60f7c8")
+          (pos 822 -146)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree4.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 1)
+          (scale 4.43322 3.09808)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4aecc8")
-          (pos -329 20)
+          (id "0xe60f890")
+          (pos -22 234)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree3.png")
-          (type 0)
-          (scale 1 1)
+          (path "images/decal/light2.png")
+          (type 2)
+          (scale 5.20898 0.736328)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4aedf8")
-          (pos -33 46)
+          (id "0xe60f9d8")
+          (pos 1882 482)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree1.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4af588")
-          (pos -344 14)
+          (id "0xe60fc78")
+          (pos 2243 492)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree3.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4afd60")
-          (pos -450 29)
+          (id "0xe6105f0")
+          (pos 2204 729)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree2.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4af7b0")
-          (pos 232 29)
+          (id "0xe60fb08")
+          (pos 1746 654)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree4.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4af990")
-          (pos 468 -6)
+          (id "0xe610c08")
+          (pos 1964 732)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree3.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
-          (hflip #t)
-          (vflip #f))
-        (decal
-          (id "0xa4af2b0")
-          (pos -545 20)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/tree2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4af450")
-          (pos 512 5)
+          (id "0xe610a18")
+          (pos 1731 757)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tree1.png")
+          (path "images/decal/stone1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa4aff30")
-          (pos 664 0)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/tree3.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #t)
-          (vflip #f))
-        (decal
-          (id "0xa4af000")
-          (pos 800 7)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/tree1.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #t)
           (vflip #f))))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/house1.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/house1.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,349 +10,195 @@
     (edges))
   (objects
     (layer
-      (name "Light")
+      (name "Sky")
       (visible #t)
-      (locked #f)
+      (locked #t)
       (objects
         (decal
-          (id "0x9bcb088")
-          (pos -359 728)
+          (id "0x113a3978")
+          (pos 471 -248)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 1 1)
+          (path "images/decal/sky.png")
+          (type 0)
+          (scale 51.614 21.0264)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Ground")
+      (name "Background")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9bf3a20")
-          (pos -1146 1076)
+          (id "0x11393128")
+          (pos 3261 136)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stone1.png")
           (type 0)
-          (scale 1 1)
+          (scale 6.2412 5.80158)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf36a8")
-          (pos -634 1076)
+          (id "0x11393000")
+          (pos 1808 277)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stone1.png")
           (type 0)
-          (scale 1 1)
+          (scale 5.16732 4.43512)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baa868")
-          (pos -122 1076)
+          (id "0x11382f20")
+          (pos -1624 845)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stone1.png")
           (type 0)
-          (scale 1 1)
+          (scale 6.2412 5.80158)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf3fe0")
-          (pos 390 1076)
+          (id "0x10cfc090")
+          (pos -6 -152)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stone1.png")
           (type 0)
-          (scale 1 1)
+          (scale 7.50742 7.14906)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf40e8")
-          (pos -2170 1076)
+          (id "0x10cfc160")
+          (pos -2854 236)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stone1.png")
           (type 0)
-          (scale 1 1)
+          (scale 6.2412 5.80158)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4280")
-          (pos -1658 1076)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4c98")
-          (pos 128 -75)
-          (parent "")
-          (select-mask 1)
-          (path "images/objects/northernstarjoinnow.png")
-          (type 0)
-          (scale 2.03446 1.8138)
-          (angle -0.0652688)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4e10")
-          (pos 390 1571)
-          (parent "")
-          (select-mask 1)
-          (path "images/objects/vrdoor-color.png")
-          (type 0)
-          (scale 104.358 7.43495)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4a78")
-          (pos 1926 1074)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4350")
-          (pos 2438 1074)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4880")
-          (pos 2950 1074)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9baba90")
-          (pos 3462 1074)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4440")
-          (pos 902 1074)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf4548")
-          (pos 1414 1074)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf46e0")
-          (pos -2682 1076)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/stone2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Character")
+      (name "BackgroundFG")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9bab040")
-          (pos 1343 992)
+          (id "0x112f4158")
+          (pos 2262 765)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/container_background.png")
           (type 0)
-          (scale 0.446869 0.711044)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bab428")
-          (pos 1347 899)
+          (id "0x11257720")
+          (pos 3286 765)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/container_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baaed0")
-          (pos 2049 922)
+          (id "0xff74d20")
+          (pos -1394 768)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/container_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9babc38")
-          (pos 2249 761)
+          (id "0x10027ec0")
+          (pos -2418 768)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp.png")
+          (path "images/decal/container_background.png")
           (type 0)
-          (scale 2.44444 2.26364)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bb3d20")
-          (pos 2925 761)
+          (id "0x1075b7b8")
+          (pos -1885 963)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 2.44444 2.26364)
+          (scale 17.7847 1.14305)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9babd80")
-          (pos -1901 763)
+          (id "0x112f3f40")
+          (pos -953 668)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 2.44444 2.26364)
-          (angle 0)
+          (scale 6.34885 1)
+          (angle -1.53242)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9babeb8")
-          (pos -1225 763)
+          (id "0x113527a8")
+          (pos 2986 965)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 2.44444 2.26364)
+          (scale 17.7847 1.14305)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0x9bb41b0")
-          (pos 118 763)
+          (id "0x11352800")
+          (pos 1940 638)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp.png")
+          (path "images/decal/shadow.png")
           (type 0)
-          (scale 2.44444 2.26364)
-          (angle 0)
+          (scale 5.86302 0.899048)
+          (angle -1.56134)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "House1")
+      (name "House3")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9bf1828")
-          (pos 297 512)
+          (id "0xff74e30")
+          (pos 271 -202)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house1.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9baa670")
-          (pos 497 512)
+          (id "0xf300818")
+          (pos 471 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf2130")
-          (pos 1497 512)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/house3.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf1e68")
-          (pos 1097 512)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/house2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9baa470")
-          (pos 1297 512)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/house2.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf1fc8")
-          (pos 1297 712)
-          (parent "")
-          (select-mask 1)
           (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
@@ -360,32 +206,10 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf2e28")
-          (pos 1497 712)
+          (id "0xf300de0")
+          (pos 271 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf1ba8")
-          (pos 297 712)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/house4.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf2368")
-          (pos 497 712)
-          (parent "")
-          (select-mask 1)
           (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
@@ -393,8 +217,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf2438")
-          (pos 1097 712)
+          (id "0xf300e40")
+          (pos 671 398)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -404,8 +228,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf32b8")
-          (pos 1297 912)
+          (id "0xf300960")
+          (pos 71 398)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -415,21 +239,10 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf3418")
-          (pos 1497 912)
+          (id "0xf300c40")
+          (pos -129 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf2f20")
-          (pos 297 912)
-          (parent "")
-          (select-mask 1)
           (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
@@ -437,19 +250,19 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf2fc8")
-          (pos 497 912)
+          (id "0xf300aa8")
+          (pos 1071 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3209f0")
-          (pos 1097 912)
+          (id "0x10d4ad70")
+          (pos 871 398)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -459,8 +272,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa320ab0")
-          (pos 697 512)
+          (id "0x10dc0250")
+          (pos 471 -402)
           (parent "")
           (select-mask 1)
           (path "images/decal/house2.png")
@@ -470,8 +283,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3e4590")
-          (pos 697 712)
+          (id "0x10dc03f8")
+          (pos 471 -2)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -481,8 +294,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa3e46f0")
-          (pos 697 912)
+          (id "0x10e0e7c0")
+          (pos 471 198)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -492,8 +305,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa40b950")
-          (pos 897 912)
+          (id "0x10e0e900")
+          (pos 271 198)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -503,8 +316,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa459ec0")
-          (pos 897 712)
+          (id "0x10e5cd70")
+          (pos 271 -2)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -514,8 +327,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa45a0f8")
-          (pos 897 512)
+          (id "0x10e5ceb8")
+          (pos 271 -402)
           (parent "")
           (select-mask 1)
           (path "images/decal/house2.png")
@@ -525,151 +338,140 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4a8430")
-          (pos 450 837)
+          (id "0x10e84370")
+          (pos 671 198)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ventilation.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4a8620")
-          (pos 898 837)
+          (id "0x10ed26d8")
+          (pos 71 198)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ventilation.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4f6b78")
-          (pos 1352 835)
+          (id "0x10ed2898")
+          (pos -129 198)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ventilation.png")
+          (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa4f6990")
-          (pos 650 676)
+          (id "0x10f20c10")
+          (pos 1071 198)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dirty3.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa51de50")
-          (pos 676 1027)
+          (id "0x10f20e30")
+          (pos 871 198)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/house5.png")
           (type 0)
-          (scale 0.513626 1)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf2820")
-          (pos 673 883)
+          (id "0x10f20cc8")
+          (pos 671 -2)
           (parent "")
           (select-mask 1)
-          (path "images/decal/unit1.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bf29d8")
-          (pos 1112 1001)
+          (id "0x10cfc4d0")
+          (pos 71 -2)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/house5.png")
           (type 0)
-          (scale 0.513626 1)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa51e228")
-          (pos 1125 883)
+          (id "0x10f6f270")
+          (pos -129 -2)
           (parent "")
           (select-mask 1)
-          (path "images/decal/unit1.png")
+          (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa67cf30")
-          (pos 265 1004)
+          (id "0x10d23970")
+          (pos 1071 -2)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/house6.png")
           (type 0)
-          (scale 0.513626 1)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa696e78")
-          (pos 266 883)
+          (id "0x10fe4a40")
+          (pos 871 -2)
           (parent "")
           (select-mask 1)
-          (path "images/decal/unit1.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa696f78")
-          (pos 1519 1042)
+          (id "0x10d237e0")
+          (pos 871 -402)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/house2.png")
           (type 0)
-          (scale 0.513626 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa36eeb8")
-          (pos 1527 883)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/unit1.png")
-          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa36efc8")
-          (pos -678 512)
+          (id "0x1105a0a8")
+          (pos 671 -402)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house1.png")
+          (path "images/decal/house2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6b0cc8")
-          (pos -78 512)
+          (id "0x1105a1f0")
+          (pos 1071 -402)
           (parent "")
           (select-mask 1)
           (path "images/decal/house3.png")
@@ -679,8 +481,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6b0d58")
-          (pos -478 512)
+          (id "0x110a88b0")
+          (pos 71 -402)
           (parent "")
           (select-mask 1)
           (path "images/decal/house2.png")
@@ -690,19 +492,19 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa7336a0")
-          (pos -278 512)
+          (id "0x10fe4c58")
+          (pos -129 -402)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house2.png")
+          (path "images/decal/house1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa7338c8")
-          (pos -278 712)
+          (id "0x10fe4cf0")
+          (pos 471 -202)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -712,63 +514,63 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6cad28")
-          (pos -78 712)
+          (id "0x1111dfe0")
+          (pos 671 -202)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6cae48")
-          (pos -678 712)
+          (id "0x110a8620")
+          (pos 71 -202)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house4.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa781ba8")
-          (pos -478 712)
+          (id "0x110a86f0")
+          (pos -129 -202)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa781c60")
-          (pos -278 912)
+          (id "0x1116c668")
+          (pos 1071 -202)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa7f7740")
-          (pos -78 912)
+          (id "0x1111e078")
+          (pos 871 -202)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa7f7510")
-          (pos -678 912)
+          (id "0x1111e108")
+          (pos -653 74)
           (parent "")
           (select-mask 1)
           (path "images/decal/house4.png")
@@ -778,63 +580,63 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa845ce8")
-          (pos -478 912)
+          (id "0x10fbd668")
+          (pos -653 -126)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa845b00")
-          (pos -611 895)
+          (id "0x111bab88")
+          (pos -653 274)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ventilation2.png")
+          (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6e4dd8")
-          (pos -120 899)
+          (id "0x11257468")
+          (pos -453 74)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ventilation2.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa8db3d8")
-          (pos -376 884)
+          (id "0x111ba9f8")
+          (pos -453 -126)
           (parent "")
           (select-mask 1)
-          (path "images/objects/door.png")
+          (path "images/decal/house3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa8eb6e0")
-          (pos -375 869)
+          (id "0x112a59c8")
+          (pos -453 274)
           (parent "")
           (select-mask 1)
-          (path "images/objects/elevatordoor.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6e5158")
-          (pos -614 698)
+          (id "0x112a5b10")
+          (pos -650 74)
           (parent "")
           (select-mask 1)
           (path "images/decal/ventilation2.png")
@@ -844,8 +646,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa6e5248")
-          (pos -123 702)
+          (id "0x11257628")
+          (pos -466 72)
           (parent "")
           (select-mask 1)
           (path "images/decal/ventilation2.png")
@@ -853,17 +655,6 @@
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa92bdf0")
-          (pos -372 698)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/streetlamp.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))
     (layer
       (name "Shadow")
@@ -871,103 +662,48 @@
       (locked #t)
       (objects
         (decal
-          (id "0xa92bf08")
-          (pos 1580 952)
+          (id "0x10b07b38")
+          (pos 516 341)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.578857 2.14746)
+          (scale 0.645615 2.06163)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bb49b8")
-          (pos 997 473)
+          (id "0xfe025b8")
+          (pos -608 245)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.578857 2.14746)
-          (angle 1.57151)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bb4000")
-          (pos 10 892)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.578857 2.14746)
+          (scale 1.00801 0.526215)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bb4548")
-          (pos 208 938)
+          (id "0xf2c4b90")
+          (pos 803 49)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.578857 2.14746)
+          (scale 1.77095 0.383163)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bb43e8")
-          (pos 122 1025)
+          (id "0x10c41148")
+          (pos 263 271)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.674225 0.373627)
+          (scale 2.26686 0.573898)
           (angle 0)
           (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0x9bf1608")
-          (pos -394 441)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 1.97122 0.373627)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa7d00d8")
-          (pos -754 970)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.578857 2.14746)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa7d0228")
-          (pos -846 1045)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.855423 0.373627)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xa92b800")
-          (pos 1733 1039)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.855423 0.373627)
-          (angle 0)
-          (hflip #f)
           (vflip #f))))
     (layer
       (name "House2")
@@ -975,7 +711,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0x9b8d8c0")
+          (id "0xf300ff0")
           (pos -1005 849)
           (parent "")
           (select-mask 1)
@@ -986,7 +722,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0x9ba97e0")
+          (id "0xf301150")
           (pos 2356 901)
           (parent "")
           (select-mask 1)
@@ -997,7 +733,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0fd7b0")
+          (id "0xf3017e0")
           (pos 2187 847)
           (parent "")
           (select-mask 1)
@@ -1008,7 +744,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0fd9a8")
+          (id "0xf775da8")
           (pos 2294 847)
           (parent "")
           (select-mask 1)
@@ -1019,7 +755,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9c88")
+          (id "0xf3012d0")
           (pos 2065 847)
           (parent "")
           (select-mask 1)
@@ -1030,7 +766,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9bf0")
+          (id "0xf301a60")
           (pos 1943 847)
           (parent "")
           (select-mask 1)
@@ -1041,7 +777,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaa6e508")
+          (id "0xf301c70")
           (pos 1606 312)
           (parent "")
           (select-mask 1)
@@ -1052,7 +788,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaa95a38")
+          (id "0xf301cc8")
           (pos 1806 312)
           (parent "")
           (select-mask 1)
@@ -1063,7 +799,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9930")
+          (id "0xf301f28")
           (pos 606 312)
           (parent "")
           (select-mask 1)
@@ -1074,7 +810,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9b00")
+          (id "0xf775a18")
           (pos 806 312)
           (parent "")
           (select-mask 1)
@@ -1085,7 +821,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba9fa8")
+          (id "0xf775bd8")
           (pos 1406 312)
           (parent "")
           (select-mask 1)
@@ -1096,7 +832,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xab32ac8")
+          (id "0x1012a7b0")
           (pos 1006 312)
           (parent "")
           (select-mask 1)
@@ -1107,7 +843,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xab32c08")
+          (id "0x101c7330")
           (pos 1206 312)
           (parent "")
           (select-mask 1)
@@ -1118,7 +854,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xab32d18")
+          (id "0x101c7468")
           (pos 606 112)
           (parent "")
           (select-mask 1)
@@ -1129,7 +865,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaabd510")
+          (id "0x101ee930")
           (pos 806 112)
           (parent "")
           (select-mask 1)
@@ -1140,7 +876,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xab81398")
+          (id "0x101ee778")
           (pos 1806 112)
           (parent "")
           (select-mask 1)
@@ -1151,7 +887,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xab81480")
+          (id "0x10215c70")
           (pos 1406 112)
           (parent "")
           (select-mask 1)
@@ -1162,7 +898,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xabf69a0")
+          (id "0x10215b90")
           (pos 1606 112)
           (parent "")
           (select-mask 1)
@@ -1173,7 +909,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xabf6b38")
+          (id "0x1012acc0")
           (pos 1606 512)
           (parent "")
           (select-mask 1)
@@ -1184,7 +920,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xab5a010")
+          (id "0x1012ad50")
           (pos 1806 512)
           (parent "")
           (select-mask 1)
@@ -1195,7 +931,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xac44ea0")
+          (id "0x10264140")
           (pos 606 512)
           (parent "")
           (select-mask 1)
@@ -1206,7 +942,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xac44fe0")
+          (id "0x102641e8")
           (pos 806 512)
           (parent "")
           (select-mask 1)
@@ -1217,7 +953,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xac933d8")
+          (id "0x10327bd0")
           (pos 1406 512)
           (parent "")
           (select-mask 1)
@@ -1228,7 +964,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xac93560")
+          (id "0x10103160")
           (pos 1606 712)
           (parent "")
           (select-mask 1)
@@ -1239,7 +975,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xace1910")
+          (id "0x10376108")
           (pos 1906 925)
           (parent "")
           (select-mask 1)
@@ -1250,7 +986,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xace1a30")
+          (id "0x10376268")
           (pos 1806 712)
           (parent "")
           (select-mask 1)
@@ -1261,7 +997,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xad2fe88")
+          (id "0x103c4698")
           (pos 606 712)
           (parent "")
           (select-mask 1)
@@ -1272,7 +1008,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xad30010")
+          (id "0x103c4840")
           (pos 806 712)
           (parent "")
           (select-mask 1)
@@ -1283,7 +1019,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xad7e428")
+          (id "0x103ebb00")
           (pos 1406 712)
           (parent "")
           (select-mask 1)
@@ -1294,7 +1030,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xad7e558")
+          (id "0x103ebc40")
           (pos 1006 112)
           (parent "")
           (select-mask 1)
@@ -1305,7 +1041,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xada5880")
+          (id "0x1043a0b0")
           (pos 1006 512)
           (parent "")
           (select-mask 1)
@@ -1316,7 +1052,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xada5a08")
+          (id "0x1043a1f8")
           (pos 1006 712)
           (parent "")
           (select-mask 1)
@@ -1327,7 +1063,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xadf3e20")
+          (id "0x104616b0")
           (pos 1206 712)
           (parent "")
           (select-mask 1)
@@ -1338,7 +1074,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xadf3f50")
+          (id "0x104afa18")
           (pos 1206 512)
           (parent "")
           (select-mask 1)
@@ -1349,7 +1085,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xae42390")
+          (id "0x104afbd8")
           (pos 1206 112)
           (parent "")
           (select-mask 1)
@@ -1360,7 +1096,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xae42518")
+          (id "0x104fdf50")
           (pos 1606 912)
           (parent "")
           (select-mask 1)
@@ -1371,7 +1107,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xae90930")
+          (id "0x104fe170")
           (pos 1806 912)
           (parent "")
           (select-mask 1)
@@ -1382,7 +1118,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xae90a60")
+          (id "0x104fe008")
           (pos 606 912)
           (parent "")
           (select-mask 1)
@@ -1393,7 +1129,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaedeea0")
+          (id "0x10327d48")
           (pos 806 912)
           (parent "")
           (select-mask 1)
@@ -1404,7 +1140,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaedf028")
+          (id "0x1054c5b0")
           (pos 1406 912)
           (parent "")
           (select-mask 1)
@@ -1415,7 +1151,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaf2d440")
+          (id "0xf301540")
           (pos 1006 912)
           (parent "")
           (select-mask 1)
@@ -1426,7 +1162,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaf2d570")
+          (id "0x105c1d80")
           (pos 1206 912)
           (parent "")
           (select-mask 1)
@@ -1437,7 +1173,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaf7b9b0")
+          (id "0xf3013b0")
           (pos 1724 410)
           (parent "")
           (select-mask 1)
@@ -1448,7 +1184,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaf7bb18")
+          (id "0x106373d0")
           (pos 1727 319)
           (parent "")
           (select-mask 1)
@@ -1459,7 +1195,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xaabd2d0")
+          (id "0x1012abf8")
           (pos 1730 682)
           (parent "")
           (select-mask 1)
@@ -1470,7 +1206,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xaabd0f0")
+          (id "0x10688320")
           (pos 1727 574)
           (parent "")
           (select-mask 1)
@@ -1481,7 +1217,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb01d848")
+          (id "0x1012aa38")
           (pos 1727 831)
           (parent "")
           (select-mask 1)
@@ -1492,7 +1228,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb030650")
+          (id "0x10688430")
           (pos 1576 399)
           (parent "")
           (select-mask 1)
@@ -1503,7 +1239,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb050a38")
+          (id "0x10637520")
           (pos 666 291)
           (parent "")
           (select-mask 1)
@@ -1514,7 +1250,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb050b10")
+          (id "0x10637620")
           (pos 1050 260)
           (parent "")
           (select-mask 1)
@@ -1525,7 +1261,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb073178")
+          (id "0x106cc798")
           (pos 1750 898)
           (parent "")
           (select-mask 1)
@@ -1536,7 +1272,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb01da10")
+          (id "0x106bb350")
           (pos 1529 234)
           (parent "")
           (select-mask 1)
@@ -1547,7 +1283,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb0b1f08")
+          (id "0x1069b130")
           (pos 158 513)
           (parent "")
           (select-mask 1)
@@ -1558,7 +1294,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb0b2038")
+          (id "0x1069af70")
           (pos 358 513)
           (parent "")
           (select-mask 1)
@@ -1569,7 +1305,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb0e5aa0")
+          (id "0x1069b050")
           (pos -842 513)
           (parent "")
           (select-mask 1)
@@ -1580,7 +1316,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb099e48")
+          (id "0x107343b8")
           (pos -642 513)
           (parent "")
           (select-mask 1)
@@ -1591,7 +1327,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb0e59f0")
+          (id "0x107008c0")
           (pos -42 513)
           (parent "")
           (select-mask 1)
@@ -1602,7 +1338,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xafc9f88")
+          (id "0x106e8ba0")
           (pos -242 513)
           (parent "")
           (select-mask 1)
@@ -1613,7 +1349,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xafca040")
+          (id "0x1059aae0")
           (pos -842 313)
           (parent "")
           (select-mask 1)
@@ -1624,7 +1360,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb1198f8")
+          (id "0x1059ab70")
           (pos -642 313)
           (parent "")
           (select-mask 1)
@@ -1635,7 +1371,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb1b5f18")
+          (id "0x107a9d60")
           (pos 358 313)
           (parent "")
           (select-mask 1)
@@ -1646,7 +1382,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb1b6008")
+          (id "0x1059a9a8")
           (pos -42 313)
           (parent "")
           (select-mask 1)
@@ -1657,7 +1393,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb22b8c0")
+          (id "0x108466f0")
           (pos 158 313)
           (parent "")
           (select-mask 1)
@@ -1668,7 +1404,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb22ba40")
+          (id "0x10846850")
           (pos 158 713)
           (parent "")
           (select-mask 1)
@@ -1679,7 +1415,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb252c68")
+          (id "0x10894c28")
           (pos 358 713)
           (parent "")
           (select-mask 1)
@@ -1690,7 +1426,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9b8f4b8")
+          (id "0x10894dd0")
           (pos -955 913)
           (parent "")
           (select-mask 1)
@@ -1701,7 +1437,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xb1197b8")
+          (id "0x108e3198")
           (pos -842 713)
           (parent "")
           (select-mask 1)
@@ -1712,7 +1448,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb2a1210")
+          (id "0x108e32d8")
           (pos -642 713)
           (parent "")
           (select-mask 1)
@@ -1723,7 +1459,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb2a1440")
+          (id "0x106e8890")
           (pos -42 713)
           (parent "")
           (select-mask 1)
@@ -1734,7 +1470,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb2ef6d8")
+          (id "0x106e8980")
           (pos 158 913)
           (parent "")
           (select-mask 1)
@@ -1745,7 +1481,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb2ef8a8")
+          (id "0x109316f0")
           (pos 358 913)
           (parent "")
           (select-mask 1)
@@ -1756,7 +1492,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb204460")
+          (id "0x109a7160")
           (pos -842 913)
           (parent "")
           (select-mask 1)
@@ -1767,7 +1503,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb204508")
+          (id "0x109a7298")
           (pos -642 913)
           (parent "")
           (select-mask 1)
@@ -1778,7 +1514,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb364da0")
+          (id "0x109ce760")
           (pos -42 913)
           (parent "")
           (select-mask 1)
@@ -1789,7 +1525,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb364e98")
+          (id "0x109ce5a8")
           (pos -442 313)
           (parent "")
           (select-mask 1)
@@ -1800,7 +1536,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb3da960")
+          (id "0x109f5aa0")
           (pos -442 713)
           (parent "")
           (select-mask 1)
@@ -1811,7 +1547,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb3da778")
+          (id "0x109f59c0")
           (pos -442 913)
           (parent "")
           (select-mask 1)
@@ -1822,7 +1558,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb38c1f0")
+          (id "0x10931c00")
           (pos -242 913)
           (parent "")
           (select-mask 1)
@@ -1833,7 +1569,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb38c2e0")
+          (id "0x10931c90")
           (pos -242 713)
           (parent "")
           (select-mask 1)
@@ -1844,7 +1580,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb4771f8")
+          (id "0x10a43f70")
           (pos -242 313)
           (parent "")
           (select-mask 1)
@@ -1855,7 +1591,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb477240")
+          (id "0x10a44018")
           (pos 158 1113)
           (parent "")
           (select-mask 1)
@@ -1866,7 +1602,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb4c57e0")
+          (id "0x10b07a00")
           (pos 358 1113)
           (parent "")
           (select-mask 1)
@@ -1877,7 +1613,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb428bf8")
+          (id "0x107f8310")
           (pos -842 1113)
           (parent "")
           (select-mask 1)
@@ -1888,7 +1624,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb428cb0")
+          (id "0x10b55f38")
           (pos -642 1113)
           (parent "")
           (select-mask 1)
@@ -1899,7 +1635,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb53b200")
+          (id "0x10b56098")
           (pos -42 1113)
           (parent "")
           (select-mask 1)
@@ -1910,7 +1646,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb53afd0")
+          (id "0x10ba44c8")
           (pos -442 1113)
           (parent "")
           (select-mask 1)
@@ -1921,7 +1657,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb5897a8")
+          (id "0x10ba4670")
           (pos -242 1113)
           (parent "")
           (select-mask 1)
@@ -1932,7 +1668,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb5895c0")
+          (id "0x10bf2a38")
           (pos -442 513)
           (parent "")
           (select-mask 1)
@@ -1943,7 +1679,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9bd7b90")
+          (id "0x10bf2b78")
           (pos -1418 903)
           (parent "")
           (select-mask 1)
@@ -1954,7 +1690,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xbd3d850")
+          (id "0x10c40fe8")
           (pos -1249 849)
           (parent "")
           (select-mask 1)
@@ -1965,7 +1701,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xbcdcfb0")
+          (id "0x10931b28")
           (pos -1356 849)
           (parent "")
           (select-mask 1)
@@ -1976,7 +1712,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0x9b84498")
+          (id "0x10c68608")
           (pos -1127 849)
           (parent "")
           (select-mask 1)
@@ -1992,70 +1728,169 @@
       (locked #t)
       (objects
         (decal
-          (id "0xb513c30")
-          (pos 516 341)
+          (id "0xfe024f8")
+          (pos 1580 952)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 0.645615 2.06163)
+          (scale 0.578857 2.14746)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa92b920")
-          (pos -608 245)
+          (id "0xf2c6d58")
+          (pos 997 473)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 1.00801 0.526215)
+          (scale 0.578857 2.14746)
+          (angle 1.57151)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf556a20")
+          (pos 10 892)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb513d88")
-          (pos 803 49)
+          (id "0xfe026b0")
+          (pos 208 938)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 1.77095 0.383163)
+          (scale 0.578857 2.14746)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8b28")
-          (pos 263 271)
+          (id "0xf2c6c38")
+          (pos 122 1025)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
           (type 0)
-          (scale 2.26686 0.573898)
+          (scale 0.674225 0.373627)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf76b890")
+          (pos -394 441)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 1.97122 0.373627)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf556bb0")
+          (pos -754 970)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.578857 2.14746)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c4980")
+          (pos -846 1045)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.855423 0.373627)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xff75378")
+          (pos 1733 1039)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.855423 0.373627)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
-      (name "House3")
+      (name "House1")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x9ba8dc0")
-          (pos 271 -202)
+          (id "0xf2c4d28")
+          (pos 297 512)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba94b0")
-          (pos 471 398)
+          (id "0xf2c4e00")
+          (pos 497 512)
           (parent "")
           (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf302328")
+          (pos 1497 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house3.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c5028")
+          (pos 1097 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c50e8")
+          (pos 1297 512)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c5198")
+          (pos 1297 712)
+          (parent "")
+          (select-mask 1)
           (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
@@ -2063,10 +1898,32 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba95e0")
-          (pos 271 398)
+          (id "0xf2c5410")
+          (pos 1497 712)
           (parent "")
           (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c59b0")
+          (pos 297 712)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/house4.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c5b18")
+          (pos 497 712)
+          (parent "")
+          (select-mask 1)
           (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
@@ -2074,8 +1931,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba92a8")
-          (pos 671 398)
+          (id "0xf2c5be0")
+          (pos 1097 712)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2085,8 +1942,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb6748b0")
-          (pos 71 398)
+          (id "0xf2c6840")
+          (pos 1297 912)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2096,10 +1953,21 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb674df0")
-          (pos -129 398)
+          (id "0xf2c6358")
+          (pos 1497 912)
           (parent "")
           (select-mask 1)
+          (path "images/decal/house6.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c6250")
+          (pos 297 912)
+          (parent "")
+          (select-mask 1)
           (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
@@ -2107,19 +1975,19 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb6c3120")
-          (pos 1071 398)
+          (id "0xf971f90")
+          (pos 497 912)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb6ea588")
-          (pos 871 398)
+          (id "0xf971d90")
+          (pos 1097 912)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2129,8 +1997,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb6ea7c0")
-          (pos 471 -402)
+          (id "0xf971e00")
+          (pos 697 512)
           (parent "")
           (select-mask 1)
           (path "images/decal/house2.png")
@@ -2140,8 +2008,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb75fc00")
-          (pos 471 -2)
+          (id "0xfa5cda8")
+          (pos 697 712)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2151,8 +2019,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb75fe30")
-          (pos 471 198)
+          (id "0xfa0e980")
+          (pos 697 912)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2162,8 +2030,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7ae0c8")
-          (pos 271 198)
+          (id "0xf999350")
+          (pos 897 912)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2173,8 +2041,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7ae298")
-          (pos 271 -2)
+          (id "0xf999458")
+          (pos 897 712)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2184,8 +2052,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8f10")
-          (pos 271 -402)
+          (id "0xfaab458")
+          (pos 897 512)
           (parent "")
           (select-mask 1)
           (path "images/decal/house2.png")
@@ -2195,140 +2063,151 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8fb8")
-          (pos 671 198)
+          (id "0xf999278")
+          (pos 450 837)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/ventilation.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7fc688")
-          (pos 71 198)
+          (id "0xfaf9818")
+          (pos 898 837)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/ventilation.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb7fc780")
-          (pos -129 198)
+          (id "0xfaf9948")
+          (pos 1352 835)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house4.png")
+          (path "images/decal/ventilation.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb872248")
-          (pos 1071 198)
+          (id "0xfb47f90")
+          (pos 650 676)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/dirty3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb872060")
-          (pos 871 198)
+          (id "0xfb47d80")
+          (pos 676 1027)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.513626 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb823ad8")
-          (pos 671 -2)
+          (id "0xf2c5fe8")
+          (pos 673 883)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/unit1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb823bc8")
-          (pos 71 -2)
+          (id "0xf2c5e70")
+          (pos 1112 1001)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.513626 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb90eae0")
-          (pos -129 -2)
+          (id "0xfb96900")
+          (pos 1125 883)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house4.png")
+          (path "images/decal/unit1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb90eb28")
-          (pos 1071 -2)
+          (id "0xfb96730")
+          (pos 265 1004)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.513626 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb95d0c8")
-          (pos 871 -2)
+          (id "0xfb96428")
+          (pos 266 883)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/unit1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8c04e0")
-          (pos 871 -402)
+          (id "0xfb962d0")
+          (pos 1519 1042)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house2.png")
+          (path "images/decal/dark.png")
           (type 0)
+          (scale 0.513626 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xfb96370")
+          (pos 1527 883)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/unit1.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb8c0598")
-          (pos 671 -402)
+          (id "0xfcf0108")
+          (pos -678 512)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house2.png")
+          (path "images/decal/house1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9d2ae8")
-          (pos 1071 -402)
+          (id "0xfcf01c0")
+          (pos -78 512)
           (parent "")
           (select-mask 1)
           (path "images/decal/house3.png")
@@ -2338,8 +2217,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9d28b8")
-          (pos 71 -402)
+          (id "0xfd0a3a8")
+          (pos -478 512)
           (parent "")
           (select-mask 1)
           (path "images/decal/house2.png")
@@ -2349,19 +2228,19 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xba21090")
-          (pos -129 -402)
+          (id "0xfd243e8")
+          (pos -278 512)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house1.png")
+          (path "images/decal/house2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xba20ea8")
-          (pos 471 -202)
+          (id "0xfd241c8")
+          (pos -278 712)
           (parent "")
           (select-mask 1)
           (path "images/decal/house5.png")
@@ -2371,63 +2250,63 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9ab4f0")
-          (pos 671 -202)
+          (id "0xfd3e738")
+          (pos -78 712)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9ab5e0")
-          (pos 71 -202)
+          (id "0xfd3e838")
+          (pos -678 712)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house4.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbabd928")
-          (pos -129 -202)
+          (id "0xfdb4208")
+          (pos -478 712)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house4.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbabd970")
-          (pos 1071 -202)
+          (id "0xfdb4040")
+          (pos -278 912)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbb0bf10")
-          (pos 871 -202)
+          (id "0xfd8cd00")
+          (pos -78 912)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house5.png")
+          (path "images/decal/house6.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xba6f328")
-          (pos -653 74)
+          (id "0xfd8cb00")
+          (pos -678 912)
           (parent "")
           (select-mask 1)
           (path "images/decal/house4.png")
@@ -2437,63 +2316,63 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xba6f3e0")
-          (pos -653 -126)
+          (id "0xfd8cb70")
+          (pos -478 912)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house1.png")
+          (path "images/decal/house5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbb81930")
-          (pos -653 274)
+          (id "0xfe9ef48")
+          (pos -611 895)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house4.png")
+          (path "images/decal/ventilation2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbb81700")
-          (pos -453 74)
+          (id "0xfe50b58")
+          (pos -120 899)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/decal/ventilation2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbbcfed8")
-          (pos -453 -126)
+          (id "0xfe9f0e0")
+          (pos -376 884)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house3.png")
+          (path "images/objects/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbbcfcf0")
-          (pos -453 274)
+          (id "0xfd3e538")
+          (pos -375 869)
           (parent "")
           (select-mask 1)
-          (path "images/decal/house6.png")
+          (path "images/objects/elevatordoor.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbb5a338")
-          (pos -650 74)
+          (id "0xfeed490")
+          (pos -614 698)
           (parent "")
           (select-mask 1)
           (path "images/decal/ventilation2.png")
@@ -2503,8 +2382,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb674cc0")
-          (pos -466 72)
+          (id "0xfd3e298")
+          (pos -123 702)
           (parent "")
           (select-mask 1)
           (path "images/decal/ventilation2.png")
@@ -2512,173 +2391,294 @@
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xff54ad0")
+          (pos -372 698)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/streetlamp.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
-      (name "BackgroundFG")
+      (name "Character")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xbb5a4d8")
-          (pos 2262 765)
+          (id "0xf2c6cf8")
+          (pos 1343 992)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_background.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.446869 0.711044)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb5d7a00")
-          (pos 3286 765)
+          (id "0xf556e98")
+          (pos 1347 899)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_background.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x9ba8c38")
-          (pos -1394 768)
+          (id "0xf556fe8")
+          (pos 2049 922)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_background.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb5d7c20")
-          (pos -2418 768)
+          (id "0xf617638")
+          (pos 2249 761)
           (parent "")
           (select-mask 1)
-          (path "images/decal/container_background.png")
+          (path "images/streetlamp.png")
           (type 0)
-          (scale 1 1)
+          (scale 2.44444 2.26364)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbccac40")
-          (pos -1885 963)
+          (id "0xf2c79b8")
+          (pos 2925 761)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/streetlamp.png")
           (type 0)
-          (scale 17.7847 1.14305)
+          (scale 2.44444 2.26364)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xbc6c7a8")
-          (pos -953 668)
+          (id "0xf6178a0")
+          (pos -1901 763)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/streetlamp.png")
           (type 0)
-          (scale 6.34885 1)
-          (angle -1.53242)
+          (scale 2.44444 2.26364)
+          (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xa0fbd60")
-          (pos 2986 965)
+          (id "0xf2c7b08")
+          (pos -1225 763)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/streetlamp.png")
           (type 0)
-          (scale 17.7847 1.14305)
+          (scale 2.44444 2.26364)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xbcdd650")
-          (pos 1940 638)
+          (id "0xf763c48")
+          (pos 118 763)
           (parent "")
           (select-mask 1)
-          (path "images/decal/shadow.png")
+          (path "images/streetlamp.png")
           (type 0)
-          (scale 5.86302 0.899048)
-          (angle -1.56134)
+          (scale 2.44444 2.26364)
+          (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Background")
+      (name "Ground")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xa0fbb20")
-          (pos 3261 136)
+          (id "0xf2c6ee8")
+          (pos -1146 1076)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/stone2.png")
           (type 0)
-          (scale 6.2412 5.80158)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb1195b8")
-          (pos 1808 277)
+          (id "0xf2c7220")
+          (pos -634 1076)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/stone2.png")
           (type 0)
-          (scale 5.16732 4.43512)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbcdd3c0")
-          (pos -1624 845)
+          (id "0xf2c7798")
+          (pos -122 1076)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/stone2.png")
           (type 0)
-          (scale 6.2412 5.80158)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbcdd4f8")
-          (pos -6 -152)
+          (id "0xf2c8448")
+          (pos 390 1076)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/stone2.png")
           (type 0)
-          (scale 7.50742 7.14906)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xa0fd328")
-          (pos -2854 236)
+          (id "0xf2c86b8")
+          (pos -2170 1076)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone1.png")
+          (path "images/decal/stone2.png")
           (type 0)
-          (scale 6.2412 5.80158)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c87d0")
+          (pos -1658 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf2c81b8")
+          (pos 128 -75)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/northernstarjoinnow.png")
+          (type 0)
+          (scale 2.03446 1.8138)
+          (angle -0.0652688)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf382e58")
+          (pos 390 1571)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/vrdoor-color.png")
+          (type 0)
+          (scale 104.358 7.43495)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf383178")
+          (pos 1926 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf383470")
+          (pos 2438 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf302638")
+          (pos 2950 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf3028c0")
+          (pos 3462 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf302730")
+          (pos 902 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf302b58")
+          (pos 1414 1074)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0xf302a38")
+          (pos -2682 1076)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stone2.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))))
     (layer
-      (name "Sky")
+      (name "Light")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0xbb5a490")
-          (pos 471 -248)
+          (id "0xf2ea120")
+          (pos -359 728)
           (parent "")
           (select-mask 1)
-          (path "images/decal/sky.png")
-          (type 0)
-          (scale 51.614 21.0264)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))))

Modified: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,426 +10,406 @@
     (edges))
   (objects
     (layer
-      (name "Mine")
+      (name "Wall")
       (visible #t)
       (locked #t)
-      (objects))
-    (layer
-      (name "Ground")
-      (visible #t)
-      (locked #t)
       (objects
         (decal
-          (id "0xb986450")
-          (pos 549 593)
+          (id "0x102b2870")
+          (pos 803.06 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_ground.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb985718")
-          (pos 1347 593)
+          (id "0xf2f2ad0")
+          (pos 803.063 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_ground.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb985c58")
-          (pos -249 593)
+          (id "0xf2de888")
+          (pos 1315.06 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_ground.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb987298")
-          (pos -2297 593)
+          (id "0xf2de968")
+          (pos 1315.06 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_ground.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9873b0")
-          (pos -700.997 593)
+          (id "0xf2e0fb0")
+          (pos 803.06 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_ground.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9858c8")
-          (pos -1499 593)
+          (id "0xf2e0b78")
+          (pos 1315.06 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_ground.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xbac68d8")
-          (pos 72.8123 428.586)
+          (id "0xf2e0c60")
+          (pos -732.937 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbac6a40")
-          (pos 957.187 478)
+          (id "0xf2e0dd0")
+          (pos -732.937 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbac6310")
-          (pos -2024.01 398.313)
+          (id "0xf2e1e30")
+          (pos -732.937 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbac5e98")
-          (pos -1088.37 457.98)
+          (id "0xf2e1a10")
+          (pos -1244.94 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbac6058")
-          (pos -1595.5 531.125)
+          (id "0xf2e1ab0")
+          (pos -1244.93 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb986580")
-          (pos -626.089 548.147)
+          (id "0xf2e1b78")
+          (pos -1244.94 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9866d0")
-          (pos 452.5 531.125)
+          (id "0xf2e10c8")
+          (pos -220.937 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9868b8")
-          (pos -1090.81 479.953)
+          (id "0xf2e2130")
+          (pos -220.937 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Lamps")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xb986d40")
-          (pos 523 227.062)
+          (id "0xf2e1ed0")
+          (pos 291.063 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb999a20")
-          (pos -1525 227.062)
+          (id "0xf2e1f90")
+          (pos 291.063 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_light.png")
-          (type 1)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb999bc8")
-          (pos -1490.94 161.75)
+          (id "0xf2e1668")
+          (pos 291.063 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb999cb8")
-          (pos 552.57 42.1211)
+          (id "0xf2e1498")
+          (pos -220.937 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9836a8")
-          (pos 561.945 159.309)
+          (id "0xf2e11b0")
+          (pos -1756.93 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/mine_background.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9852c8")
-          (pos -1495.43 42.1211)
+          (id "0xf2e1290")
+          (pos -1756.93 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Wood")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xb984028")
-          (pos -2170.5 332.688)
+          (id "0x11457b18")
+          (pos -1756.93 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree1.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb984180")
-          (pos -954.877 340.5)
+          (id "0x11457440")
+          (pos -2268.93 -52.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree2.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb986c50")
-          (pos -122.5 332.688)
+          (id "0x11457568")
+          (pos -2268.93 203.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree1.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb984360")
-          (pos 1093.12 340.5)
+          (id "0x11457768")
+          (pos -2268.93 459.25)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree2.png")
+          (path "images/decal/mine_background.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Shadows")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xb9845b0")
-          (pos -122.5 -180.75)
+          (id "0xf2de658")
+          (pos -103.75 531.125)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree1.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb984778")
-          (pos 1093.12 -171.5)
+          (id "0xf2de280")
+          (pos 1075.94 526.438)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree2.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb984938")
-          (pos -954.877 -171.5)
+          (id "0xf2de3b0")
+          (pos 613.437 582.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree2.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb984cb8")
-          (pos -2170.5 -180.75)
+          (id "0x114571e8")
+          (pos 211.875 567.062)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_tree1.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Items")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xb984aa8")
-          (pos 750.812 468)
+          (id "0x11456fc8")
+          (pos -450.186 557.297)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9854b8")
-          (pos 425.812 460.188)
+          (id "0x11456e20")
+          (pos -1840.03 590.5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbe58a20")
-          (pos -445.623 466.047)
+          (id "0x11458c60")
+          (pos -2149.79 531.125)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbe7bc68")
-          (pos -1903.44 466.047)
+          (id "0x11458f68")
+          (pos -2179.87 298.703)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbe8d6a0")
-          (pos 178 511)
+          (id "0x11458d68")
+          (pos 1073.56 306.875)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant1.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbe9f128")
-          (pos 1257 457)
+          (id "0x114590f8")
+          (pos -131.875 296.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant5.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb984ff8")
-          (pos 935 459)
+          (id "0x114591d8")
+          (pos -974.437 306.875)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant3.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbebc0c0")
-          (pos -1195 398)
+          (id "0x114588c0")
+          (pos -972.057 526.438)
           (parent "")
           (select-mask 1)
-          (path "images/decal/plant4.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
@@ -441,7 +421,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xbebbee8")
+          (id "0x11459328")
           (pos 638.516 439.91)
           (parent "")
           (select-mask 1)
@@ -452,410 +432,430 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Shadows")
+      (name "Items")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0xbef3430")
-          (pos -103.75 531.125)
+          (id "0x11458518")
+          (pos 750.812 468)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf27520")
-          (pos 1075.94 526.438)
+          (id "0x114587b0")
+          (pos 425.812 460.188)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf273f0")
-          (pos 613.437 582.688)
+          (id "0x11458630")
+          (pos -445.623 466.047)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb983818")
-          (pos 211.875 567.062)
+          (id "0x11475b48")
+          (pos -1903.44 466.047)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb983a08")
-          (pos -450.186 557.297)
+          (id "0x114596d0")
+          (pos 178 511)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/plant1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf32610")
-          (pos -1840.03 590.5)
+          (id "0x114875e0")
+          (pos 1257 457)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/plant5.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf327e0")
-          (pos -2149.79 531.125)
+          (id "0x11499008")
+          (pos 935 459)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/plant3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf32480")
-          (pos -2179.87 298.703)
+          (id "0x11499088")
+          (pos -1195 398)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/plant4.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Wood")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xbf328d0")
-          (pos 1073.56 306.875)
+          (id "0x114594e8")
+          (pos -2170.5 332.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/mine_tree1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf32eb8")
-          (pos -131.875 296.75)
+          (id "0x114aabb8")
+          (pos -954.877 340.5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/mine_tree2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf33078")
-          (pos -974.437 306.875)
+          (id "0x11463fe8")
+          (pos -122.5 332.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/mine_tree1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf329a8")
-          (pos -972.057 526.438)
+          (id "0x11574498")
+          (pos 1093.12 340.5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/mine_tree2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Wall")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xbf33300")
-          (pos 803.06 203.25)
+          (id "0x1159f618")
+          (pos -122.5 -180.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_tree1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf335d8")
-          (pos 803.063 459.25)
+          (id "0x115f41c0")
+          (pos 1093.12 -171.5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_tree2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf33468")
-          (pos 1315.06 203.25)
+          (id "0x115c8fe8")
+          (pos -954.877 -171.5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_tree2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf33c10")
-          (pos 1315.06 459.25)
+          (id "0x1161db70")
+          (pos -2170.5 -180.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_tree1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Lamps")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xbf33db8")
-          (pos 803.06 -52.75)
+          (id "0x11648d28")
+          (pos 523 227.062)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf33f30")
-          (pos 1315.06 -52.75)
+          (id "0x114aa9e0")
+          (pos -1525 227.062)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf34e98")
-          (pos -732.937 -52.75)
+          (id "0xf2dee80")
+          (pos -1490.94 161.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf35068")
-          (pos -732.937 459.25)
+          (id "0xf2def78")
+          (pos 552.57 42.1211)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/rooflamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf34488")
-          (pos -732.937 203.25)
+          (id "0x11456868")
+          (pos 561.945 159.309)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf35210")
-          (pos -1244.94 -52.75)
+          (id "0x11456a68")
+          (pos -1495.43 42.1211)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/rooflamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xbf34030")
-          (pos -1244.93 459.25)
+          (id "0xf2df110")
+          (pos 72.8123 428.586)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf34150")
-          (pos -1244.94 203.25)
+          (id "0x114566c0")
+          (pos 957.187 478)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf34a70")
-          (pos -220.937 459.25)
+          (id "0xf2df210")
+          (pos -2024.01 398.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf34c58")
-          (pos -220.937 203.25)
+          (id "0xf2df7c0")
+          (pos -1088.37 457.98)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf345e8")
-          (pos 291.063 459.25)
+          (id "0xf2df6e8")
+          (pos -1595.5 531.125)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbf34840")
-          (pos 291.063 203.25)
+          (id "0xf2e02d8")
+          (pos -626.089 548.147)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9978c8")
-          (pos 291.063 -52.75)
+          (id "0xf2e0460")
+          (pos 452.5 531.125)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbc57dc8")
-          (pos -220.937 -52.75)
+          (id "0xf2df558")
+          (pos -1090.81 479.953)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xbc57fa8")
-          (pos -1756.93 -52.75)
+          (id "0x116f9dc8")
+          (pos 549 593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb998e28")
-          (pos -1756.93 203.25)
+          (id "0xf2e0888")
+          (pos 1347 593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb998af0")
-          (pos -1756.93 459.25)
+          (id "0xf2e0668")
+          (pos -249 593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb998bd0")
-          (pos -2268.93 -52.75)
+          (id "0xf2dfe98")
+          (pos -2297 593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb998fb8")
-          (pos -2268.93 203.25)
+          (id "0x1175fb98")
+          (pos -700.997 593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xb9991b8")
-          (pos -2268.93 459.25)
+          (id "0x1175f968")
+          (pos -1499 593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/mine_background.png")
+          (path "images/decal/mine_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))))
+          (vflip #f))))
+    (layer
+      (name "Mine")
+      (visible #t)
+      (locked #t)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/office.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/office.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/office.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,451 +10,451 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
+      (name "BackgroundWall")
       (visible #t)
       (locked #f)
-      (objects))
-    (layer
-      (name "Character")
-      (visible #t)
-      (locked #f)
       (objects
         (decal
-          (id "0xbfdfea0")
-          (pos 24 457)
+          (id "0x11fc1388")
+          (pos 578 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/wall2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xbfdf770")
-          (pos -176.66 473.947)
+          (id "0x11fc1410")
+          (pos 962 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/wall3.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdf478")
-          (pos 359.466 456.262)
+          (id "0x11a7ff30")
+          (pos 450 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/wall1.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfe00c0")
-          (pos -739.878 477.707)
+          (id "0x11a75558")
+          (pos 66 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/wall1.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfe0688")
-          (pos -1203.21 476.314)
+          (id "0x11a75608")
+          (pos 322 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/wall3.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfe07d8")
-          (pos 838.744 503.93)
+          (id "0x11a80068")
+          (pos 194 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/wall2.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfe0928")
-          (pos 241.479 454.773)
+          (id "0x11a80400")
+          (pos -190 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/wall2.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Ground")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xbfe10b0")
-          (pos 130 636)
+          (id "0x11a80230")
+          (pos -62 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfff6b8")
-          (pos 386 636)
+          (id "0x11a80bb8")
+          (pos -318 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdd9f0")
-          (pos 642 636)
+          (id "0x11a80a28")
+          (pos -702 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdd6e8")
-          (pos 130 124)
+          (id "0x11a80f28")
+          (pos -446 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfff498")
-          (pos 386 124)
+          (id "0x11a80d78")
+          (pos -574 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfde388")
-          (pos 642 124)
+          (id "0x11a80e68")
+          (pos -958 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfff3b8")
-          (pos -638 636)
+          (id "0x11a816e8")
+          (pos -830 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfde0c8")
-          (pos -382 636)
+          (id "0x11a80538")
+          (pos -1086 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfde208")
-          (pos -126 636)
+          (id "0x11a81838")
+          (pos -1470 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfddd68")
-          (pos -638 124)
+          (id "0x11a806c8")
+          (pos -1214 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfddf50")
-          (pos -382 124)
+          (id "0x11a81d30")
+          (pos -1342 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdde88")
-          (pos -126 124)
+          (id "0x11a81da0")
+          (pos 834 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdef28")
-          (pos -1406 636)
+          (id "0x1230b130")
+          (pos 1090 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdefa8")
-          (pos -1150 636)
+          (id "0x1230b230")
+          (pos 706 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdf180")
-          (pos -894 636)
+          (id "0x11a81398")
+          (pos 1474 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfde458")
-          (pos -1406 124)
+          (id "0x122bd400")
+          (pos 1346 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc1b7868")
-          (pos -1150 124)
+          (id "0x123806b8")
+          (pos 1602 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdea98")
-          (pos -894 124)
+          (id "0x123b0900")
+          (pos 1218 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/wall1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc1b7970")
-          (pos 898 636)
+          (id "0x123b0990")
+          (pos 1730 380)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/wall3.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0xc1cfb48")
-          (pos 898 124)
+          (id "0x11ccb238")
+          (pos 253.75 47.375)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc1cfdb0")
-          (pos 1410 636)
+          (id "0x11ef2878")
+          (pos 238.125 713)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc1cfc30")
-          (pos 1154 636)
+          (id "0x11f9e598")
+          (pos 563.125 702.062)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc1cfd08")
-          (pos 1154 124)
+          (id "0x11f9e8a0")
+          (pos 255.313 430)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/train_door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfde640")
-          (pos 1410 124)
+          (id "0x11f59a30")
+          (pos -175 635)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc2804b0")
-          (pos 1666 124)
+          (id "0x11f598d8")
+          (pos -702.376 610.672)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc1f0048")
-          (pos 1666 636)
+          (id "0x11fee038")
+          (pos -1181.38 644.672)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Lights")
+      (name "Stuff")
       (visible #t)
       (locked #f)
       (objects
         (decal
-          (id "0xbfdd558")
-          (pos -185.687 478)
+          (id "0x11e4daf0")
+          (pos 546.349 496)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfe0b88")
-          (pos -186.087 454.328)
+          (id "0x11e4d8a8")
+          (pos -21.9375 496)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
+          (path "images/decal/bench.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdf608")
-          (pos -697.391 478)
+          (id "0x11e4d580")
+          (pos -435.526 496)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc31b8a0")
-          (pos -697.791 454.328)
+          (id "0x11ec23d8")
+          (pos -965.526 496)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
+          (path "images/decal/bench.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbfdd2c8")
-          (pos -1218 458.328)
+          (id "0x11ccb300")
+          (pos 956.427 496)
           (parent "")
           (select-mask 1)
-          (path "images/decal/lamp1_highlight.png")
-          (type 2)
+          (path "images/decal/bench.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #f)
+      (objects))
+    (layer
+      (name "Lights")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0xc2803f8")
-          (pos -1218.6 478)
+          (id "0x11d1b748")
+          (pos -185.687 478)
           (parent "")
           (select-mask 1)
           (path "images/decal/lamp1.png")
@@ -464,10 +464,21 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc298de8")
-          (pos 143.113 478)
+          (id "0x11a631b8")
+          (pos -186.087 454.328)
           (parent "")
           (select-mask 1)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x11a62230")
+          (pos -697.391 478)
+          (parent "")
+          (select-mask 1)
           (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
@@ -475,8 +486,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc3562b0")
-          (pos 142.713 454.328)
+          (id "0x11d1b648")
+          (pos -697.791 454.328)
           (parent "")
           (select-mask 1)
           (path "images/decal/lamp1_highlight.png")
@@ -486,8 +497,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc31bae0")
-          (pos 370.625 454.328)
+          (id "0x11a61650")
+          (pos -1218 458.328)
           (parent "")
           (select-mask 1)
           (path "images/decal/lamp1_highlight.png")
@@ -497,8 +508,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc31bc88")
-          (pos 371.025 478)
+          (id "0x11a61838")
+          (pos -1218.6 478)
           (parent "")
           (select-mask 1)
           (path "images/decal/lamp1.png")
@@ -508,8 +519,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc31ba10")
-          (pos 721.247 478)
+          (id "0x11d1b868")
+          (pos 143.113 478)
           (parent "")
           (select-mask 1)
           (path "images/decal/lamp1.png")
@@ -519,8 +530,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc31bdc0")
-          (pos 720.847 454.328)
+          (id "0x11d9e790")
+          (pos 142.713 454.328)
           (parent "")
           (select-mask 1)
           (path "images/decal/lamp1_highlight.png")
@@ -528,444 +539,433 @@
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Character")
-      (visible #t)
-      (locked #f)
-      (objects))
-    (layer
-      (name "Stuff")
-      (visible #t)
-      (locked #f)
-      (objects
-        (decal
-          (id "0xc3ca9a8")
-          (pos 546.349 496)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/bench.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc3cae70")
-          (pos -21.9375 496)
+          (id "0x11a63600")
+          (pos 370.625 454.328)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
-          (type 0)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc43f8d0")
-          (pos -435.526 496)
+          (id "0x11d9ebd0")
+          (pos 371.025 478)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc3cac70")
-          (pos -965.526 496)
+          (id "0x11d9ed50")
+          (pos 721.247 478)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/lamp1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc2986d0")
-          (pos 956.427 496)
+          (id "0x11d9e808")
+          (pos 720.847 454.328)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
-          (type 0)
+          (path "images/decal/lamp1_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Shadow")
+      (name "Ground")
       (visible #t)
       (locked #f)
       (objects
         (decal
-          (id "0xc46f780")
-          (pos 253.75 47.375)
+          (id "0x11a63800")
+          (pos 130 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc46fe88")
-          (pos 238.125 713)
+          (id "0x11a63d20")
+          (pos 386 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc51ba00")
-          (pos 563.125 702.062)
+          (id "0x11a60030")
+          (pos 642 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc51bd30")
-          (pos 255.313 430)
+          (id "0x11a822b8")
+          (pos 130 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/train_door.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc4d6dc8")
-          (pos -175 635)
+          (id "0x11a82048")
+          (pos 386 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc56b0d0")
-          (pos -702.376 610.672)
+          (id "0x11a60250")
+          (pos 642 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc56af90")
-          (pos -1181.38 644.672)
+          (id "0x11a60ff0")
+          (pos -638 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "BackgroundWall")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xc53e408")
-          (pos 578 380)
+          (id "0x11a60490")
+          (pos -382 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffd228")
-          (pos 962 380)
+          (id "0x11a605a0")
+          (pos -126 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbff2b08")
-          (pos 450 380)
+          (id "0x11a61360")
+          (pos -638 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffd510")
-          (pos 66 380)
+          (id "0x11a611a8")
+          (pos -382 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbff28e8")
-          (pos 322 380)
+          (id "0x11a61f78")
+          (pos -126 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffd898")
-          (pos 194 380)
+          (id "0x11a61da0")
+          (pos -1406 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffd9d8")
-          (pos -190 380)
+          (id "0x11a60c30")
+          (pos -1150 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffdaf0")
-          (pos -62 380)
+          (id "0x11a61b08")
+          (pos -894 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffe020")
-          (pos -318 380)
+          (id "0x11c22408")
+          (pos -1406 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffe798")
-          (pos -702 380)
+          (id "0x11c22518")
+          (pos -1150 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffe950")
-          (pos -446 380)
+          (id "0x11c225d0")
+          (pos -894 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffeb08")
-          (pos -574 380)
+          (id "0x11a60860")
+          (pos 898 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffdca8")
-          (pos -958 380)
+          (id "0x11a608e8")
+          (pos 898 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffde90")
-          (pos -830 380)
+          (id "0x11c52ab0")
+          (pos 1410 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffe630")
-          (pos -1086 380)
+          (id "0x11c52b60")
+          (pos 1154 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffe258")
-          (pos -1470 380)
+          (id "0x11c3a770")
+          (pos 1154 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xbffe370")
-          (pos -1214 380)
+          (id "0x11c3a878")
+          (pos 1410 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc92a5e8")
-          (pos -1342 380)
+          (id "0x11cb30e0")
+          (pos 1666 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc8fa368")
-          (pos 834 380)
+          (id "0x11cb2ef8")
+          (pos 1666 636)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0xc8fa428")
-          (pos 1090 380)
+          (id "0x11a62528")
+          (pos -176.66 473.947)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc98a858")
-          (pos 706 380)
+          (id "0x11a625a0")
+          (pos 359.466 456.262)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc9bab40")
-          (pos 1474 380)
+          (id "0x11a62cb0")
+          (pos -739.878 477.707)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xc9eac58")
-          (pos 1346 380)
+          (id "0x11a62ac8")
+          (pos -1203.21 476.314)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall2.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xca1aeb8")
-          (pos 1602 380)
+          (id "0x11a62ba0")
+          (pos 838.744 503.93)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xca4b038")
-          (pos 1218 380)
+          (id "0x11a63348")
+          (pos 241.479 454.773)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall1.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Character")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0xca4b120")
-          (pos 1730 380)
+          (id "0x103ebda8")
+          (pos 24 457)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wall3.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))))
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #f)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/toilet.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,1100 +10,1100 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
+      (name "New Layer")
       (visible #t)
       (locked #t)
-      (objects))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #t)
       (objects
         (decal
-          (id "0xeb0a730")
-          (pos 1292 294)
+          (id "0x1480b828")
+          (pos 1472 256)
           (parent "")
           (select-mask 1)
-          (path "images/streetlamp-light.png")
-          (type 1)
-          (scale 0.843122 2.78601)
-          (angle 4.53577)
+          (path "images/objects/door.png")
+          (type 0)
+          (scale 1 1)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb09b78")
-          (pos 949 238)
+          (id "0x143ee8c8")
+          (pos 1398 267)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_light.png")
-          (type 1)
-          (scale 1.36387 1.52344)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.243164 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb0bbc8")
-          (pos 958 5)
+          (id "0x143eea08")
+          (pos 1589 266)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
-          (scale 1.74257 1.58333)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.370117 1.00977)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Character")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xeb09f00")
-          (pos 1581 269)
+          (id "0x14668770")
+          (pos 1448 124)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.213867 0.560547)
+          (angle 1.45326)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x14668838")
+          (pos 962 6)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 0.862746 0.219799)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Ground")
+      (name "Background")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0xeb0b868")
-          (pos 1683 -53)
+          (id "0x14667b48")
+          (pos 448 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
-          (scale 0.792 0.76)
-          (angle -2.32532)
+          (scale 1 1)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb07be8")
-          (pos 1716 400)
+          (id "0x146677a0")
+          (pos 448 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
-          (scale 0.792 0.76)
-          (angle -0.809692)
+          (scale 1 1)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb07d00")
-          (pos 335 405)
+          (id "0x14667ed0")
+          (pos 448 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
-          (scale 0.792 0.76)
-          (angle -2.32532)
-          (hflip #f)
-          (vflip #t))
-        (decal
-          (id "0xeb23400")
-          (pos 366 -49)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/toilet_ground.png")
-          (type 0)
-          (scale 0.792 0.76)
-          (angle -0.809692)
-          (hflip #f)
-          (vflip #t))
-        (decal
-          (id "0xeb083d8")
-          (pos 1472 448)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/toilet_ground.png")
-          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08598")
-          (pos 1344 448)
+          (id "0x14667fb0")
+          (pos 576 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08758")
-          (pos 1216 448)
+          (id "0x14688c90")
+          (pos 576 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08918")
-          (pos 1088 448)
+          (id "0x146a9040")
+          (pos 576 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08ad8")
-          (pos 960 448)
+          (id "0x14668a80")
+          (pos 704 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08c98")
-          (pos 832 448)
+          (id "0x146c9298")
+          (pos 704 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08e58")
-          (pos 704 448)
+          (id "0x146d9630")
+          (pos 704 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb09018")
-          (pos 576 448)
+          (id "0x146e9860")
+          (pos 832 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb091d8")
-          (pos 448 448)
+          (id "0x146e9728")
+          (pos 832 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb09398")
-          (pos 1472 -64)
+          (id "0x14698e58")
+          (pos 832 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xeb09558")
-          (pos 1344 -64)
+          (id "0x14709ad8")
+          (pos 960 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xeb09718")
-          (pos 1216 -64)
+          (id "0x146f98c8")
+          (pos 960 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xeb09a30")
-          (pos 1088 -64)
+          (id "0x146f99b0")
+          (pos 960 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xeb23238")
-          (pos 960 -64)
+          (id "0x14729e40")
+          (pos 1088 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xec2b810")
-          (pos 832 -64)
+          (id "0x1473a008")
+          (pos 1088 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xec379e0")
-          (pos 704 -64)
+          (id "0x1475a3b8")
+          (pos 1088 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xec43b88")
-          (pos 576 -64)
+          (id "0x1474a1a8")
+          (pos 1472 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xec4fd58")
-          (pos 448 -64)
+          (id "0x1474a290")
+          (pos 1345 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xec5bef8")
-          (pos 1600 -64)
+          (id "0x1477a720")
+          (pos 1344 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xec680f8")
-          (pos 1600 448)
+          (id "0x1478a8e8")
+          (pos 1344 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xec74298")
-          (pos 1728 320)
+          (id "0x147aac98")
+          (pos 1216 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
-          (angle -1.57174)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xec80498")
-          (pos 1728 192)
+          (id "0x1479aa88")
+          (pos 1216 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
-          (angle -1.57174)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xec8c638")
-          (pos 1728 64)
+          (id "0x1479ab90")
+          (pos 1216 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
-          (angle -1.57174)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xec98838")
-          (pos 320 64)
+          (id "0x147cb008")
+          (pos 1600 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
-          (angle -1.57174)
+          (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xeca49d8")
-          (pos 320 192)
+          (id "0x147eb520")
+          (pos 1600 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
-          (angle -1.57174)
+          (angle 0)
           (hflip #f)
-          (vflip #t))
+          (vflip #f))
         (decal
-          (id "0xecb0bd8")
-          (pos 320 320)
+          (id "0x147fb608")
+          (pos 1600 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_ground.png")
+          (path "images/decal/walltiles.png")
           (type 0)
           (scale 1 1)
-          (angle -1.57174)
+          (angle 0)
           (hflip #f)
-          (vflip #t))))
+          (vflip #f))))
     (layer
-      (name "Objects")
+      (name "Shadow")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xecc8f20")
-          (pos 784 293)
+          (id "0x14590148")
+          (pos 995 293)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet1.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.340821 0.423828)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb0b9b0")
-          (pos 992 258)
+          (id "0x146518f8")
+          (pos 1112 298)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.340821 0.423828)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb0adb8")
-          (pos 1109 258)
+          (id "0x14651940")
+          (pos 1302 280)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.35547 0.301758)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecc93e0")
-          (pos 639 297)
+          (id "0x143eb078")
+          (pos 806 380)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet1.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.824219 0.682617)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb098e0")
-          (pos 646 257)
+          (id "0x14652820")
+          (pos 588 385)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.824219 0.682617)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecc9d90")
-          (pos 494 297)
+          (id "0x14652670")
+          (pos 387 348)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet1.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.570312 1.12109)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecc9b58")
-          (pos 502 257)
+          (id "0x146526b8")
+          (pos 361 -38)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.09277 0.549805)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecca138")
-          (pos 862 256)
+          (id "0x14652d70")
+          (pos 1679 -45)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.09277 0.549805)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecc9e90")
-          (pos 718 256)
+          (id "0x14666dd8")
+          (pos 1770 420)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 1.09277 0.549805)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecc9948")
-          (pos 574 256)
+          (id "0x14666f80")
+          (pos 1667 162)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.25293 0.97461)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecce238")
-          (pos 430 256)
+          (id "0x14652a08")
+          (pos 1150 396)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 2.00098 0.256836)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecce418")
-          (pos 1297 174)
+          (id "0x14650fd8")
+          (pos 1329 325)
           (parent "")
           (select-mask 1)
-          (path "images/decal/city_housewall.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 0.157431 0.18585)
-          (angle 0)
+          (scale 0.296876 0.604492)
+          (angle -0.443416)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecd0730")
-          (pos 1293 251)
+          (id "0x14650e30")
+          (pos 1134 413)
           (parent "")
           (select-mask 1)
-          (path "images/decal/sink.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
-          (angle 0)
+          (scale 0.423829 0.848633)
+          (angle -0.184662)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecd0988")
-          (pos 840 257)
+          (id "0x14667cd8")
+          (pos 1001 414)
           (parent "")
           (select-mask 1)
-          (path "images/decal/toilet_door_open2.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.340821 0.863281)
+          (angle 0.0135104)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x14667930")
+          (pos 836 235)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/dark.png")
+          (type 0)
+          (scale 0.501953 0.609375)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Shadow")
+      (name "Objects")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xeb08078")
-          (pos 995 293)
+          (id "0x14590070")
+          (pos 784 293)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet1.png")
           (type 0)
-          (scale 0.340821 0.423828)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecbcdb8")
-          (pos 1112 298)
+          (id "0x143ee390")
+          (pos 992 258)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet2.png")
           (type 0)
-          (scale 0.340821 0.423828)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb08208")
-          (pos 1302 280)
+          (id "0x1459c2c0")
+          (pos 1109 258)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet2.png")
           (type 0)
-          (scale 0.35547 0.301758)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecd1028")
-          (pos 806 380)
+          (id "0x143ee0a8")
+          (pos 639 297)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet1.png")
           (type 0)
-          (scale 0.824219 0.682617)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb225f0")
-          (pos 588 385)
+          (id "0x145bccf0")
+          (pos 646 257)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door.png")
           (type 0)
-          (scale 0.824219 0.682617)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecd11a0")
-          (pos 387 348)
+          (id "0x145cd6f8")
+          (pos 494 297)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet1.png")
           (type 0)
-          (scale 0.570312 1.12109)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb23050")
-          (pos 361 -38)
+          (id "0x14613848")
+          (pos 502 257)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door.png")
           (type 0)
-          (scale 1.09277 0.549805)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb226d0")
-          (pos 1679 -45)
+          (id "0x143ed6c8")
+          (pos 862 256)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door2.png")
           (type 0)
-          (scale 1.09277 0.549805)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb22930")
-          (pos 1770 420)
+          (id "0x145d9a68")
+          (pos 718 256)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door2.png")
           (type 0)
-          (scale 1.09277 0.549805)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb22a58")
-          (pos 1667 162)
+          (id "0x14644910")
+          (pos 574 256)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door2.png")
           (type 0)
-          (scale 0.25293 0.97461)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb22cd0")
-          (pos 1150 396)
+          (id "0x145d9740")
+          (pos 430 256)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door2.png")
           (type 0)
-          (scale 2.00098 0.256836)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb22e30")
-          (pos 1329 325)
+          (id "0x1464cd30")
+          (pos 1297 174)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/city_housewall.png")
           (type 0)
-          (scale 0.296876 0.604492)
-          (angle -0.443416)
+          (scale 0.157431 0.18585)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecd0a80")
-          (pos 1134 413)
+          (id "0x14648a88")
+          (pos 1293 251)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/sink.png")
           (type 0)
-          (scale 0.423829 0.848633)
-          (angle -0.184662)
+          (scale 1 1)
+          (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xecd0bb8")
-          (pos 1001 414)
+          (id "0x145d98e0")
+          (pos 840 257)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/toilet_door_open2.png")
           (type 0)
-          (scale 0.340821 0.863281)
-          (angle 0.0135104)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xeb21f50")
-          (pos 836 235)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.501953 0.609375)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Background")
+      (name "Ground")
       (visible #t)
-      (locked #f)
+      (locked #t)
       (objects
         (decal
-          (id "0xeb220b0")
-          (pos 448 320)
+          (id "0x143ed828")
+          (pos 1683 -53)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
-          (scale 1 1)
-          (angle 0)
+          (scale 0.792 0.76)
+          (angle -2.32532)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb22238")
-          (pos 448 64)
+          (id "0x143ed938")
+          (pos 1716 400)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
-          (scale 1 1)
-          (angle 0)
+          (scale 0.792 0.76)
+          (angle -0.809692)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xed98c00")
-          (pos 448 192)
+          (id "0x143eab58")
+          (pos 335 405)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
+          (scale 0.792 0.76)
+          (angle -2.32532)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x14402990")
+          (pos 366 -49)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/toilet_ground.png")
+          (type 0)
+          (scale 0.792 0.76)
+          (angle -0.809692)
+          (hflip #f)
+          (vflip #t))
+        (decal
+          (id "0x143ead20")
+          (pos 1472 448)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/toilet_ground.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeda8f10")
-          (pos 576 320)
+          (id "0x143eae40")
+          (pos 1344 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xed888d0")
-          (pos 576 64)
+          (id "0x143eb5c8")
+          (pos 1216 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xedb9120")
-          (pos 576 192)
+          (id "0x143eb750")
+          (pos 1088 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xedd91c8")
-          (pos 704 192)
+          (id "0x143eb870")
+          (pos 960 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xede9510")
-          (pos 704 64)
+          (id "0x144027f0")
+          (pos 832 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xedf96f8")
-          (pos 704 320)
+          (id "0x143eba00")
+          (pos 704 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xee098d0")
-          (pos 832 320)
+          (id "0x143eb3d0")
+          (pos 576 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xede9430")
-          (pos 832 64)
+          (id "0x143ebd40")
+          (pos 448 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xee19a00")
-          (pos 832 192)
+          (id "0x143ec1e8")
+          (pos 1472 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee29c00")
-          (pos 960 320)
+          (id "0x143ebf98")
+          (pos 1344 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee49ed8")
-          (pos 960 64)
+          (id "0x143ebb40")
+          (pos 1216 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee5a1e0")
-          (pos 960 192)
+          (id "0x143ec738")
+          (pos 1088 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee6a448")
-          (pos 1088 192)
+          (id "0x143ec848")
+          (pos 960 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee7a5a0")
-          (pos 1088 64)
+          (id "0x143ec388")
+          (pos 832 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee5a090")
-          (pos 1088 320)
+          (id "0x143ec948")
+          (pos 704 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee8a7b8")
-          (pos 1472 64)
+          (id "0x1450ad70")
+          (pos 576 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xeeaab50")
-          (pos 1345 192)
+          (id "0x14516f48")
+          (pos 448 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xee9aa38")
-          (pos 1344 64)
+          (id "0x145230a8")
+          (pos 1600 -64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xeecad88")
-          (pos 1344 320)
+          (id "0x1452f250")
+          (pos 1600 448)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeedafa8")
-          (pos 1216 192)
+          (id "0x1453b3c8")
+          (pos 1728 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
-          (angle 0)
+          (angle -1.57174)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xee9a8d0")
-          (pos 1216 64)
+          (id "0x145475c8")
+          (pos 1728 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
-          (angle 0)
+          (angle -1.57174)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeeeb248")
-          (pos 1216 320)
+          (id "0x14553768")
+          (pos 1728 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
-          (angle 0)
+          (angle -1.57174)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeefb480")
-          (pos 1600 192)
+          (id "0x1455f968")
+          (pos 320 64)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
-          (angle 0)
+          (angle -1.57174)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xef1b7b0")
-          (pos 1600 64)
+          (id "0x1456bb08")
+          (pos 320 192)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
-          (angle 0)
+          (angle -1.57174)
           (hflip #f)
-          (vflip #f))
+          (vflip #t))
         (decal
-          (id "0xef1b868")
-          (pos 1600 320)
+          (id "0x14577d08")
+          (pos 320 320)
           (parent "")
           (select-mask 1)
-          (path "images/decal/walltiles.png")
+          (path "images/decal/toilet_ground.png")
           (type 0)
           (scale 1 1)
-          (angle 0)
+          (angle -1.57174)
           (hflip #f)
-          (vflip #f))))
+          (vflip #t))))
     (layer
-      (name "New Layer")
+      (name "Character")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xed88658")
-          (pos 1472 256)
+          (id "0x143ecf98")
+          (pos 1581 269)
           (parent "")
           (select-mask 1)
-          (path "images/objects/door.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xeb0ad30")
-          (pos 1398 267)
+          (id "0x143ed590")
+          (pos 1292 294)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.243164 1)
-          (angle 0)
+          (path "images/streetlamp-light.png")
+          (type 1)
+          (scale 0.843122 2.78601)
+          (angle 4.53577)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb0aef0")
-          (pos 1589 266)
+          (id "0x143ecbb0")
+          (pos 949 238)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.370117 1.00977)
+          (path "images/objects/apartmentlamp_light.png")
+          (type 1)
+          (scale 1.36387 1.52344)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xeb0b6d0")
-          (pos 1448 124)
+          (id "0x143ecc98")
+          (pos 958 5)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
-          (scale 0.213867 0.560547)
-          (angle 1.45326)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xed88700")
-          (pos 962 6)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/apartmentlamp_highlight.png")
           (type 2)
-          (scale 0.862746 0.219799)
+          (scale 1.74257 1.58333)
           (angle 0)
           (hflip #f)
-          (vflip #f))))))
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #t)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -76,1557 +76,1519 @@
         (properties 0))))
   (objects
     (layer
-      (name "Trainstation")
+      (name "Tunnel Wall")
       (visible #t)
       (locked #t)
-      (objects))
-    (layer
-      (name "Daylight")
-      (visible #t)
-      (locked #t)
       (objects
         (decal
-          (id "0xf021d40")
-          (pos -855.442 319.354)
+          (id "0xa355cd0")
+          (pos 1790.43 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/tunnelplate_bottom.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf022a18")
-          (pos -1297.52 365.776)
+          (id "0xa2ef618")
+          (pos 2046.43 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 2)
+          (path "images/decal/tunnelplate_bottom.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf022b00")
-          (pos -1402.7 340.058)
+          (id "0xa2766e8")
+          (pos 1278.43 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/tunnelplate_bottom.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf021450")
-          (pos -1099.97 336.543)
+          (id "0xa276558")
+          (pos 1534.43 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/tunnelplate_bottom.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf021070")
-          (pos -1569.48 329.078)
+          (id "0xa3e84d8")
+          (pos 1022.43 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/tunnelplate_bottom.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Lights")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xf021f00")
-          (pos 1630.08 1070.32)
+          (id "0xa3e8a78")
+          (pos 2165.35 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf022010")
-          (pos 983.756 904.953)
+          (id "0xa4f6d68")
+          (pos 2101.35 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06c390")
-          (pos 315.072 868.593)
+          (id "0xa276820")
+          (pos 2037.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0222e8")
-          (pos -1636 909.933)
+          (id "0xa276900")
+          (pos 1781.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06be70")
-          (pos -810.844 849.183)
+          (id "0xa60b578")
+          (pos 1845.35 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06bf90")
-          (pos 1559.83 804.374)
+          (id "0xa276b40")
+          (pos 1909.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06c178")
-          (pos -259.112 903.761)
+          (id "0xa60b6e8")
+          (pos 1397.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06b5c8")
-          (pos -477.046 760.753)
+          (id "0xa66b960")
+          (pos 1333.35 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06b798")
-          (pos -1553.29 729.292)
+          (id "0xa66bbb8")
+          (pos 1269.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06b990")
-          (pos -1169.49 799.75)
+          (id "0xa6cbdb8")
+          (pos 1525.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "ExtraLight")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xf06bbe0")
-          (pos -402.054 1017.24)
+          (id "0xa6cc058")
+          (pos 1589.35 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf069d78")
-          (pos 161.91 1097.81)
+          (id "0xa6cbf50")
+          (pos 1653.34 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf069e40")
-          (pos 860.719 704.086)
+          (id "0xa60b7f8")
+          (pos 629.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06a5d0")
-          (pos 208.559 708.054)
+          (id "0xa3e8920")
+          (pos 565.354 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06a7b8")
-          (pos -845.605 1035.11)
+          (id "0xa3e85e8")
+          (pos 501.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06a9c0")
-          (pos -332.91 1098.59)
+          (id "0xa77c650")
+          (pos 245.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06ab98")
-          (pos -1151.04 1059.27)
+          (id "0xa77c728")
+          (pos 309.354 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06acb0")
-          (pos -1663.74 995.791)
+          (id "0xa72c228")
+          (pos 373.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/decal/tunnelplate_small.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06ae18")
-          (pos 943.16 1149.08)
+          (id "0xa7dcfe8")
+          (pos 885.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Train2")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0xf06bb40")
-          (pos -752 0)
-          (parent "0xf06dbf8")
-          (select-mask 1)
-          (path "images/decal/train_front.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06a4e8")
-          (pos 696 0)
-          (parent "0xf06dbf8")
+          (id "0xa7ed408")
+          (pos 821.354 464.717)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_back.png")
+          (path "images/decal/tunnelplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06dbf8")
-          (pos -2098.65 942.97)
+          (id "0xa7ed0d8")
+          (pos 757.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/train_middle.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06d148")
-          (pos -586.991 241.125)
-          (parent "0xf06dbf8")
+          (id "0xa7cccf0")
+          (pos 1013.35 656.717)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_front.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06cd30")
-          (pos 593.009 242.125)
-          (parent "0xf06dbf8")
+          (id "0xa84d568")
+          (pos 1077.35 464.717)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_back.png")
+          (path "images/decal/tunnelplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06d7b8")
-          (pos -206.991 241.125)
-          (parent "0xf06dbf8")
+          (id "0xa89dab8")
+          (pos 1141.34 656.717)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_middle.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06dca0")
-          (pos 249.009 241.125)
-          (parent "0xf06dbf8")
+          (id "0xa89d9c0")
+          (pos -394.638 656.717)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_middle.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06de28")
-          (pos 0.719482 -14.875)
-          (parent "0xf06dbf8")
-          (select-mask 1)
-          (path "images/decal/train_door.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Shadow")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0xf06d3d8")
-          (pos -2249.87 1060.44)
+          (id "0xa72c3b0")
+          (pos -138.648 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf161908")
-          (pos -2244.5 972.452)
+          (id "0xa78cbb8")
+          (pos -202.646 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf161ac8")
-          (pos -2151.95 1070.86)
+          (id "0xa78ca50")
+          (pos -266.648 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf161550")
-          (pos -2223.31 378.014)
+          (id "0xa84d680")
+          (pos -10.6475 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf161738")
-          (pos -2222.56 441.264)
+          (id "0xa84d760")
+          (pos 53.3544 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06e530")
-          (pos -2231.18 652.952)
+          (id "0xa96e450")
+          (pos 117.352 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06ea70")
-          (pos -2231.93 589.702)
+          (id "0xa97e958")
+          (pos 766.427 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06ec30")
-          (pos -2223.79 825.967)
+          (id "0xa97e5d0")
+          (pos 510.427 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06e690")
-          (pos -2016.48 1029.67)
+          (id "0xa97e728")
+          (pos 254.427 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06e878")
-          (pos -2047.33 560.924)
+          (id "0xa9cea58")
+          (pos -458.636 464.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c0d88")
-          (pos -2080.6 782.737)
+          (id "0xa9ced78")
+          (pos -522.638 656.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/tunnelplate_small.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Roof")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xf2c0fb8")
-          (pos -132.297 329.766)
+          (id "0xa9ceb68")
+          (pos -1.57263 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c01f0")
-          (pos 378.703 329.766)
+          (id "0xa8adb60")
+          (pos -257.573 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c0328")
-          (pos 1400.7 331.719)
+          (id "0xaa29178")
+          (pos -513.573 900.717)
           (parent "")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Train")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xf2c0928")
-          (pos 889.703 331.719)
-          (parent "")
+          (id "0x9c972a8")
+          (pos -752 0)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_front.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c0b00")
-          (pos 2422.7 331.719)
-          (parent "")
+          (id "0x9c97550")
+          (pos 696 0)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_back.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c12a8")
-          (pos 1911.7 331.719)
+          (id "0xa25d958")
+          (pos 1705.54 939.785)
           (parent "")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_middle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c2038")
-          (pos -1652.53 298.683)
-          (parent "")
+          (id "0xa22d578")
+          (pos -586.991 241.125)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_engine_front.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c2158")
-          (pos -771.438 410.719)
-          (parent "")
+          (id "0xa184938")
+          (pos 593.009 242.125)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof.png")
+          (path "images/decal/train_engine_back.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c1670")
-          (pos -1141.53 298.683)
-          (parent "")
+          (id "0x9fdf480")
+          (pos -206.991 241.125)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_engine_middle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf01ee00")
-          (pos -2163.53 298.683)
-          (parent "")
+          (id "0xa276410")
+          (pos 249.009 241.125)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_engine_middle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0713c8")
-          (pos -2674.53 298.683)
-          (parent "")
+          (id "0xa2ef118")
+          (pos 0.719482 -14.875)
+          (parent "0xa25d958")
           (select-mask 1)
-          (path "images/decal/roof2.png")
+          (path "images/decal/train_door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Lamps")
+      (name "WallShadow")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xf01f810")
-          (pos 266.7 554.465)
+          (id "0xa25d878")
+          (pos -498.687 804.29)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_light.png")
-          (type 1)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c0f38")
-          (pos 999.122 579.855)
+          (id "0x9b7f850")
+          (pos -418.187 492.016)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_light.png")
-          (type 1)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "StairWall")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xf01f330")
-          (pos 1651.47 577.902)
+          (id "0x9ecc0b0")
+          (pos -658.251 306.508)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_light.png")
-          (type 1)
+          (path "images/decal/wallplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf01ef58")
-          (pos 1660.56 541.188)
+          (id "0x9edc758")
+          (pos -658.251 434.508)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/wallplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf01f030")
-          (pos 998.057 533.375)
+          (id "0x9cd63d8")
+          (pos -656.688 690.508)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
+          (path "images/decal/wallplate.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0209d0")
-          (pos 237.12 549)
+          (id "0x9f4eca8")
+          (pos -656.688 562.508)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
-          (type 2)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
-          (vflip #f))
-        (decal
-          (id "0xf020ac0")
-          (pos 1642.66 434.301)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/rooflamp.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf020bc8")
-          (pos 982.958 428.895)
+          (id "0x9f4eb60")
+          (pos -1425 307)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf020c90")
-          (pos 231.267 426.715)
+          (id "0x9f7ed50")
+          (pos -656.462 935.117)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp.png")
+          (path "images/decal/tunnelplate_bottom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Decor Items")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0xf01fe08")
-          (pos 240.218 886.438)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/board.png")
-          (type 0)
-          (scale 1 1)
-          (angle 0)
-          (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34d408")
-          (pos 934.407 913.438)
+          (id "0x9d49548")
+          (pos -656.688 818.508)
           (parent "")
           (select-mask 1)
-          (path "images/decal/terminal.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34d5d8")
-          (pos -163.625 985.44)
+          (id "0x9f4e960")
+          (pos -657 946)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06fc68")
-          (pos 578.562 985.44)
+          (id "0x9d493f8")
+          (pos -657 1074)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06f170")
-          (pos 1244.19 985.44)
+          (id "0x9fdfad0")
+          (pos -1424.46 563.117)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06fa78")
-          (pos 1689.49 985.44)
+          (id "0x9f4e730")
+          (pos -1424.46 691.117)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06fb98")
-          (pos 2006.69 985.44)
+          (id "0x9faf088")
+          (pos -1424.46 435.117)
           (parent "")
           (select-mask 1)
-          (path "images/decal/bench.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06f718")
-          (pos 424.131 1013.44)
+          (id "0xa0f41e8")
+          (pos -1424.46 819.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/plant.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06fe10")
-          (pos -1002.18 1013.44)
+          (id "0x9faf1f0")
+          (pos -1168.46 819.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/plant.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf06fec8")
-          (pos -914.086 1013.44)
+          (id "0xa0f3f40")
+          (pos -1168.46 435.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/plant.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0700f0")
-          (pos -832.618 1013.44)
+          (id "0xa124258")
+          (pos -1168.46 691.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/plant.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf070530")
-          (pos 1064.43 1014.67)
+          (id "0xa124300")
+          (pos -1168.46 563.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/plant.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0701a0")
-          (pos 676.954 1029.44)
+          (id "0xa0dbcd8")
+          (pos -1169 307)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0706e0")
-          (pos 612.954 1029.44)
+          (id "0x9fdf398")
+          (pos -912.462 307.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf070a58")
-          (pos 648.954 965.44)
+          (id "0xa1545a0")
+          (pos -912.462 563.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf070e68")
-          (pos 740.954 1029.44)
+          (id "0xa154688")
+          (pos -912.462 691.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf070cc8")
-          (pos 584.954 965.44)
+          (id "0x9fdf810")
+          (pos -912.462 435.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf553970")
-          (pos 548.954 1029.44)
+          (id "0xa1b50a0")
+          (pos -912.462 819.117)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf5569e8")
-          (pos 706.554 965.44)
+          (id "0xa19cbf0")
+          (pos -1169 947)
           (parent "")
           (select-mask 1)
-          (path "images/objects/box.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf559af8")
-          (pos 28.218 973.438)
+          (id "0xa1fd3d8")
+          (pos -913 946)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf559c18")
-          (pos 1448.12 973.44)
+          (id "0xa1b4f18")
+          (pos -913 1074)
           (parent "")
           (select-mask 1)
-          (path "images/decal/trashcan.png")
+          (path "images/decal/wallplate.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Railground")
+      (name "Stairs")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xf34b300")
-          (pos -249.032 1380.44)
+          (id "0x9cfc8e8")
+          (pos -1040 739)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/shadow.png")
           (type 0)
+          (scale 9.94316 1.38132)
+          (angle -2.42953)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x9d497a0")
+          (pos -1358 869)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/stair_base.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c45d0")
-          (pos -761.032 1380.44)
+          (id "0x9d59910")
+          (pos -849 997)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_stairs.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c4470")
-          (pos -2297.03 1380.44)
+          (id "0x9d89d60")
+          (pos -974 997)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf2c4740")
-          (pos -1785.03 1380.44)
+          (id "0x9d69a68")
+          (pos -974 869)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_stairs.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34ca60")
-          (pos -1273.03 1380.44)
+          (id "0x9d99f40")
+          (pos -1102 997)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34d118")
-          (pos 262.968 1380.44)
+          (id "0x9daa258")
+          (pos -1102 869)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34d248")
-          (pos 774.968 1380.44)
+          (id "0x9dba420")
+          (pos -1102 741)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_stairs.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34cfc0")
-          (pos 1798.97 1380.44)
+          (id "0x9dda518")
+          (pos -1230 613)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_stairs.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34cc00")
-          (pos 1286.97 1380.44)
+          (id "0x9dea770")
+          (pos -1358 613)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34cd48")
-          (pos 1670.97 1273.44)
+          (id "0x9dba338")
+          (pos -1358 485)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_stairs.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34c5f8")
-          (pos 1926.97 1273.44)
+          (id "0x9dfaad0")
+          (pos -1486 613)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34c728")
-          (pos 1414.97 1273.44)
+          (id "0x9dfa9e8")
+          (pos -1486 485)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34b7e8")
-          (pos 1158.97 1273.44)
+          (id "0x9e1ae98")
+          (pos -1486 357)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_stairs.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34c388")
-          (pos 2214.14 1187.44)
+          (id "0x9e3afc8")
+          (pos -1358 741)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34c220")
-          (pos 1702.14 1187.44)
+          (id "0x9e4b2c0")
+          (pos -1486 741)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34c078")
-          (pos 1958.14 1187.44)
+          (id "0x9e1adb8")
+          (pos -1230 741)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf82e670")
-          (pos 1446.14 1187.44)
+          (id "0x9e5b580")
+          (pos -1486 869)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf82e728")
-          (pos -121.032 1273.44)
+          (id "0x9e5b498")
+          (pos -1230 869)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf82e808")
-          (pos -377.032 1273.44)
+          (id "0x9e7b948")
+          (pos -1358 997)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf859198")
-          (pos 646.968 1273.44)
+          (id "0x9e9ba78")
+          (pos -1486 997)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf899160")
-          (pos 902.968 1273.44)
+          (id "0x9eabcb0")
+          (pos -1230 997)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_base.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34b450")
-          (pos 390.968 1273.44)
+          (id "0x9e7b868")
+          (pos -1347 917)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "StairHandle")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0xf34b530")
-          (pos 134.968 1273.44)
+          (id "0x9c96d50")
+          (pos -964 844)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34b680")
-          (pos 1190.13 1187.44)
+          (id "0x9c96a00")
+          (pos -1058 746)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf8c4778")
-          (pos 934.13 1187.44)
+          (id "0x9c97860")
+          (pos -1155 652)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf899200")
-          (pos 422.13 1187.44)
+          (id "0x9c96828")
+          (pos -1250 547)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf899478")
-          (pos 166.13 1187.44)
+          (id "0x9cb3380")
+          (pos -1347 456)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf899350")
-          (pos 678.13 1187.44)
+          (id "0x9cb3460")
+          (pos -1440 363)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf8efb00")
-          (pos -89.87 1187.44)
+          (id "0x9cba3d0")
+          (pos -863 930)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf930198")
-          (pos -889.032 1273.44)
+          (id "0x9cc13a0")
+          (pos -1537 273)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/handrail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf95ade8")
-          (pos -633.032 1273.44)
+          (id "0x9cc8348")
+          (pos -841 864)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/stair_handle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf95af00")
-          (pos -345.87 1187.44)
+          (id "0x9c97380")
+          (pos -969 736)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_handle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf9859c8")
-          (pos -601.87 1187.44)
+          (id "0x9ce9758")
+          (pos -1097 608)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_handle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf985bc0")
-          (pos -1369.87 1187.44)
+          (id "0x9cac3d8")
+          (pos -1225 480)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_handle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf985ca0")
-          (pos -1881.87 1187.44)
+          (id "0x9cac450")
+          (pos -1353 352)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/stair_handle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xf9c62f0")
-          (pos -1625.87 1187.44)
+          (id "0x9a1ce08")
+          (pos -1672.24 1055.45)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf9f0e00")
-          (pos -1113.87 1187.44)
+          (id "0x9b332d0")
+          (pos -1529 861)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.833984 1.60059)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf930258")
-          (pos -857.872 1187.44)
+          (id "0x9b7f710")
+          (pos -1557 564)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/dark.png")
           (type 0)
-          (scale 1 1)
+          (scale 0.750977 1.16602)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf9303a0")
-          (pos -1145.03 1273.44)
+          (id "0x9112f50")
+          (pos -1484.44 1141.69)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa1ba18")
-          (pos -1657.03 1273.44)
+          (id "0x9c17a40")
+          (pos -937.569 1133.87)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Stairs")
+      (visible #t)
+      (locked #t)
+      (objects))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0xfa1bb78")
-          (pos -1401.03 1273.44)
+          (id "0x9a1ced0")
+          (pos 1836.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa1bcc8")
-          (pos -1913.03 1273.44)
+          (id "0x97f1050")
+          (pos 2144.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa5baa8")
-          (pos -2169.03 1273.44)
+          (id "0x9717a90")
+          (pos -1551.87 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa5bc18")
-          (pos -3193.03 1273.44)
+          (id "0x9717b98")
+          (pos -1243.87 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf9f0ee0")
-          (pos -2937.03 1273.44)
+          (id "0x97f0d70")
+          (pos -935.87 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa86e50")
-          (pos -2681.03 1273.44)
+          (id "0x97f0e48")
+          (pos -627.87 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfab23e0")
-          (pos -2649.87 1187.44)
+          (id "0x97f1388")
+          (pos -319.87 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfab24a0")
-          (pos -2905.87 1187.44)
+          (id "0x9b333a8")
+          (pos -11.87 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfab25b8")
-          (pos -2809.03 1380.44)
+          (id "0x9b334f8")
+          (pos 296.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfadd8f0")
-          (pos -3321.03 1380.44)
+          (id "0x9b33708")
+          (pos 604.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone2.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb1dff8")
-          (pos -2393.87 1187.44)
+          (id "0x9bcb858")
+          (pos 912.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb1ded8")
-          (pos -2137.87 1187.44)
+          (id "0x9bcb920")
+          (pos 1220.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rail.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb1e148")
-          (pos -2425.03 1273.44)
+          (id "0x9bcba08")
+          (pos 1528.13 1103.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stone.png")
+          (path "images/decal/ground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
@@ -1638,7 +1600,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xf34bb38")
+          (id "0x9717a48")
           (pos -1539 508)
           (parent "")
           (select-mask 1)
@@ -1649,7 +1611,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf0228a8")
+          (id "0x90ec6b8")
           (pos -1539 380)
           (parent "")
           (select-mask 1)
@@ -1660,7 +1622,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb339b0")
+          (id "0x90e00f0")
           (pos -1539 1020)
           (parent "")
           (select-mask 1)
@@ -1671,7 +1633,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf55ce50")
+          (id "0x8b39eb0")
           (pos -1539 892)
           (parent "")
           (select-mask 1)
@@ -1682,7 +1644,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf55cd58")
+          (id "0x8b35170")
           (pos -1539 636)
           (parent "")
           (select-mask 1)
@@ -1693,7 +1655,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34be88")
+          (id "0x9717d50")
           (pos -1539 764)
           (parent "")
           (select-mask 1)
@@ -1704,7 +1666,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb34010")
+          (id "0x97182a0")
           (pos -1539 1148)
           (parent "")
           (select-mask 1)
@@ -1715,7 +1677,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf34bdb8")
+          (id "0x8dbb0d0")
           (pos -1741 1084)
           (parent "")
           (select-mask 1)
@@ -1726,7 +1688,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb34270")
+          (id "0x9718400")
           (pos -2111 1084)
           (parent "")
           (select-mask 1)
@@ -1737,7 +1699,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf56e8e8")
+          (id "0x97188f0")
           (pos -2111 824)
           (parent "")
           (select-mask 1)
@@ -1748,7 +1710,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb343b8")
+          (id "0x96ed0c0")
           (pos -1741 824)
           (parent "")
           (select-mask 1)
@@ -1759,7 +1721,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfb34500")
+          (id "0x96ecf30")
           (pos -2111 568)
           (parent "")
           (select-mask 1)
@@ -1770,7 +1732,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa86fa0")
+          (id "0x9906ee8")
           (pos -1741 568)
           (parent "")
           (select-mask 1)
@@ -1781,7 +1743,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfa870d8")
+          (id "0x9907138")
           (pos -2109 312)
           (parent "")
           (select-mask 1)
@@ -1792,7 +1754,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfd7f3d8")
+          (id "0x9907240")
           (pos -1739 312)
           (parent "")
           (select-mask 1)
@@ -1803,7 +1765,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfd7f4a0")
+          (id "0x97185d0")
           (pos -1763.88 1198.81)
           (parent "")
           (select-mask 1)
@@ -1814,7 +1776,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfd7f5d0")
+          (id "0x97186a0")
           (pos -2080.29 1241.78)
           (parent "")
           (select-mask 1)
@@ -1825,7 +1787,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfd7f6c8")
+          (id "0x9718758")
           (pos -2400.6 1212.48)
           (parent "")
           (select-mask 1)
@@ -1836,7 +1798,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfe95510")
+          (id "0x97f0b28")
           (pos -2239 276)
           (parent "")
           (select-mask 1)
@@ -1847,7 +1809,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfe95300")
+          (id "0x9a1cc90")
           (pos -1976 368)
           (parent "")
           (select-mask 1)
@@ -1858,7 +1820,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfe95270")
+          (id "0x9a1cf98")
           (pos -1717 263)
           (parent "")
           (select-mask 1)
@@ -1869,1523 +1831,1561 @@
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Ground")
+      (name "Railground")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0xfc0cb30")
-          (pos 1836.13 1103.44)
+          (id "0x90ef918")
+          (pos -249.032 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xf01fd30")
-          (pos 2144.13 1103.44)
+          (id "0x90efa48")
+          (pos -761.032 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfc0c938")
-          (pos -1551.87 1103.44)
+          (id "0x9028db8")
+          (pos -2297.03 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfc0c888")
-          (pos -1243.87 1103.44)
+          (id "0x9124d58")
+          (pos -1785.03 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfc0d1e8")
-          (pos -935.87 1103.44)
+          (id "0x9126fe8")
+          (pos -1273.03 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfef2370")
-          (pos -627.87 1103.44)
+          (id "0x8dbc418")
+          (pos 262.968 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfef24a8")
-          (pos -319.87 1103.44)
+          (id "0x8dbc4f8")
+          (pos 774.968 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfef2b38")
-          (pos -11.87 1103.44)
+          (id "0x8dbc5c8")
+          (pos 1798.97 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xff71928")
-          (pos 296.13 1103.44)
+          (id "0x8dbc738")
+          (pos 1286.97 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xff71b98")
-          (pos 604.13 1103.44)
+          (id "0x8dbcdc8")
+          (pos 1670.97 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xff719e0")
-          (pos 912.13 1103.44)
+          (id "0x8dbcae0")
+          (pos 1926.97 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xff57f48")
-          (pos 1220.13 1103.44)
+          (id "0x8dbcc00")
+          (pos 1414.97 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xff58128")
-          (pos 1528.13 1103.44)
+          (id "0x8dbcc80")
+          (pos 1158.97 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/ground.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Stairs")
-      (visible #t)
-      (locked #t)
-      (objects))
-    (layer
-      (name "Shadow")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0xfef29d8")
-          (pos -1672.24 1055.45)
+          (id "0x8dbb5d0")
+          (pos 2214.14 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xff58258")
-          (pos -1529 861)
+          (id "0x8dbb758")
+          (pos 1702.14 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rail.png")
           (type 0)
-          (scale 0.833984 1.60059)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xffd6ed0")
-          (pos -1557 564)
+          (id "0x8dbc020")
+          (pos 1958.14 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rail.png")
           (type 0)
-          (scale 0.750977 1.16602)
+          (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xffd7040")
-          (pos -1484.44 1141.69)
+          (id "0x93a7620")
+          (pos 1446.14 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1003c8d8")
-          (pos -937.569 1133.87)
+          (id "0x8dbc130")
+          (pos -121.032 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "StairHandle")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x1003d1c0")
-          (pos -964 844)
+          (id "0x8dbba28")
+          (pos -377.032 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1003d7d8")
-          (pos -1058 746)
+          (id "0x93a74d0")
+          (pos 646.968 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1003d8b0")
-          (pos -1155 652)
+          (id "0x8dbb8c0")
+          (pos 902.968 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1004b968")
-          (pos -1250 547)
+          (id "0x8dbbbb8")
+          (pos 390.968 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10052800")
-          (pos -1347 456)
+          (id "0x8dbbd78")
+          (pos 134.968 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x100597a8")
-          (pos -1440 363)
+          (id "0x91252e0")
+          (pos 1190.13 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10060750")
-          (pos -863 930)
+          (id "0x9125410")
+          (pos 934.13 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10067708")
-          (pos -1537 273)
+          (id "0x9125648")
+          (pos 422.13 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/handrail.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1006e6c0")
-          (pos -841 864)
+          (id "0x9125778")
+          (pos 166.13 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_handle.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10088b18")
-          (pos -969 736)
+          (id "0x91259b0")
+          (pos 678.13 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_handle.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10088bc0")
-          (pos -1097 608)
+          (id "0x9125ae0")
+          (pos -89.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_handle.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10088ca8")
-          (pos -1225 480)
+          (id "0x9125d18")
+          (pos -889.032 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_handle.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1009bdf0")
-          (pos -1353 352)
+          (id "0x9125e48")
+          (pos -633.032 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_handle.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Stairs")
-      (visible #t)
-      (locked #t)
-      (objects
-        (decal
-          (id "0x100c21f0")
-          (pos -1040 739)
-          (parent "")
-          (select-mask 1)
-          (path "images/decal/shadow.png")
-          (type 0)
-          (scale 9.94316 1.38132)
-          (angle -2.42953)
-          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x100af010")
-          (pos -1358 869)
+          (id "0x9126080")
+          (pos -345.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x100e8c38")
-          (pos -849 997)
+          (id "0x91261b0")
+          (pos -601.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_stairs.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x100f8d80")
-          (pos -974 997)
+          (id "0x91263e8")
+          (pos -1369.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101292a0")
-          (pos -974 869)
+          (id "0x91266b0")
+          (pos -1881.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_stairs.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10108fb8")
-          (pos -1102 997)
+          (id "0x93a72f8")
+          (pos -1625.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10139458")
-          (pos -1102 869)
+          (id "0x95eac18")
+          (pos -1113.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10139538")
-          (pos -1102 741)
+          (id "0x91250a8")
+          (pos -857.872 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_stairs.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10169898")
-          (pos -1230 613)
+          (id "0x9126e90")
+          (pos -1145.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_stairs.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10179a90")
-          (pos -1358 613)
+          (id "0x9126c78")
+          (pos -1657.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10189cd8")
-          (pos -1358 485)
+          (id "0x96156a8")
+          (pos -1401.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_stairs.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101699b0")
-          (pos -1486 613)
+          (id "0x9615578")
+          (pos -1913.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10199ec0")
-          (pos -1486 485)
+          (id "0x9615720")
+          (pos -2169.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101aa268")
-          (pos -1486 357)
+          (id "0x9640428")
+          (pos -3193.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_stairs.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101ca4a8")
-          (pos -1358 741)
+          (id "0x9640280")
+          (pos -2937.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101da578")
-          (pos -1486 741)
+          (id "0x9680df8")
+          (pos -2681.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101ea888")
-          (pos -1230 741)
+          (id "0x9680fb8")
+          (pos -2649.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101faa60")
-          (pos -1486 869)
+          (id "0x96ac178")
+          (pos -2905.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x101ca3b0")
-          (pos -1230 869)
+          (id "0x96ac4c0")
+          (pos -2809.03 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1020ab90")
-          (pos -1358 997)
+          (id "0x96ece10")
+          (pos -3321.03 1380.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/stone2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1021af38")
-          (pos -1486 997)
+          (id "0x95eaa78")
+          (pos -2393.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1023b178")
-          (pos -1230 997)
+          (id "0x96ac358")
+          (pos -2137.87 1187.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair_base.png")
+          (path "images/decal/rail.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1024b248")
-          (pos -1347 917)
+          (id "0x9126750")
+          (pos -2425.03 1273.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/door.png")
+          (path "images/decal/stone.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "StairWall")
+      (name "Decor Items")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x1023b058")
-          (pos -658.251 306.508)
+          (id "0x8b39f60")
+          (pos 240.218 886.438)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/board.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x100e8950")
-          (pos -658.251 434.508)
+          (id "0x8b384a8")
+          (pos 934.407 913.438)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/terminal.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x100e89f0")
-          (pos -656.688 690.508)
+          (id "0x8b38a30")
+          (pos -163.625 985.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1026bad0")
-          (pos -656.688 562.508)
+          (id "0x8b38d50")
+          (pos 578.562 985.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1003d340")
-          (pos -1425 307)
+          (id "0x8e711d8")
+          (pos 1244.19 985.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x102d5230")
-          (pos -656.462 935.117)
+          (id "0x8b38e68")
+          (pos 1689.49 985.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x102d52f8")
-          (pos -656.688 818.508)
+          (id "0x8b38f10")
+          (pos 2006.69 985.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/bench.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x102a4fb0")
-          (pos -657 946)
+          (id "0x8b39178")
+          (pos 424.131 1013.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/plant.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x102d5440")
-          (pos -657 1074)
+          (id "0x8e70898")
+          (pos -1002.18 1013.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/plant.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x102a4c58")
-          (pos -1424.46 563.117)
+          (id "0x8e709e8")
+          (pos -914.086 1013.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/plant.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x103e9c98")
-          (pos -1424.46 691.117)
+          (id "0x904b6c0")
+          (pos -832.618 1013.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/plant.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x103e9d60")
-          (pos -1424.46 435.117)
+          (id "0x904b5e0")
+          (pos 1064.43 1014.67)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/plant.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1041a1d8")
-          (pos -1424.46 819.117)
+          (id "0x90d0a58")
+          (pos 676.954 1029.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10419ff8")
-          (pos -1168.46 819.117)
+          (id "0x8e70d88")
+          (pos 612.954 1029.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1044a5a0")
-          (pos -1168.46 435.117)
+          (id "0x90d9c80")
+          (pos 648.954 965.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10462650")
-          (pos -1168.46 691.117)
+          (id "0x90d9d38")
+          (pos 740.954 1029.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1044a3b8")
-          (pos -1168.46 563.117)
+          (id "0x90dce58")
+          (pos 584.954 965.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10462720")
-          (pos -1169 307)
+          (id "0x90ca7c8")
+          (pos 548.954 1029.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10492a70")
-          (pos -912.462 307.117)
+          (id "0x90e6308")
+          (pos 706.554 965.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/objects/box.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x104c2ea8")
-          (pos -912.462 563.117)
+          (id "0x90e6398")
+          (pos 28.218 973.438)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x104c2cf8")
-          (pos -912.462 691.117)
+          (id "0x90efb70")
+          (pos 1448.12 973.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/trashcan.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Lamps")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x8b351c8")
+          (pos 266.7 554.465)
+          (parent "")
+          (select-mask 1)
+          (path "images/objects/apartmentlamp_light.png")
+          (type 1)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10305570")
-          (pos -912.462 435.117)
+          (id "0x8b35668")
+          (pos 999.122 579.855)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x104daf38")
-          (pos -912.462 819.117)
+          (id "0x8b361f8")
+          (pos 1651.47 577.902)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x104db038")
-          (pos -1169 947)
+          (id "0x8b36068")
+          (pos 1660.56 541.188)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1050b2a8")
-          (pos -913 946)
+          (id "0x8b39908")
+          (pos 998.057 533.375)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1056b8e0")
-          (pos -913 1074)
+          (id "0x8b396f0")
+          (pos 237.12 549)
           (parent "")
           (select-mask 1)
-          (path "images/decal/wallplate.png")
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
+          (vflip #f))
+        (decal
+          (id "0x8b393a8")
+          (pos 1642.66 434.301)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/rooflamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "WallShadow")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x10075678")
-          (pos -498.687 804.29)
+          (id "0x8b39c88")
+          (pos 982.958 428.895)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rooflamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xfc0cf50")
-          (pos -418.187 492.016)
+          (id "0x8b399d0")
+          (pos 231.267 426.715)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rooflamp.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))))
     (layer
-      (name "Train")
+      (name "Roof")
       (visible #t)
       (locked #t)
       (objects
         (decal
-          (id "0x10075718")
-          (pos -752 0)
-          (parent "0x10583bf8")
+          (id "0x8db8848")
+          (pos -132.297 329.766)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_front.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1056ba18")
-          (pos 696 0)
-          (parent "0x10583bf8")
+          (id "0x8db8150")
+          (pos 378.703 329.766)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_back.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10583bf8")
-          (pos 1705.54 939.785)
+          (id "0x8db83c0")
+          (pos 1400.7 331.719)
           (parent "")
           (select-mask 1)
-          (path "images/decal/train_middle.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1031d870")
-          (pos -586.991 241.125)
-          (parent "0x10583bf8")
+          (id "0x8b3a8b0")
+          (pos 889.703 331.719)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_front.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1031da10")
-          (pos 593.009 242.125)
-          (parent "0x10583bf8")
+          (id "0x8db81c0")
+          (pos 2422.7 331.719)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_back.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x105b4720")
-          (pos -206.991 241.125)
-          (parent "0x10583bf8")
+          (id "0x8db8278")
+          (pos 1911.7 331.719)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_middle.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1053b658")
-          (pos 249.009 241.125)
-          (parent "0x10583bf8")
+          (id "0x8b3a2f8")
+          (pos -1652.53 298.683)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_engine_middle.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x105b4cc0")
-          (pos 0.719482 -14.875)
-          (parent "0x10583bf8")
+          (id "0x8b36710")
+          (pos -771.438 410.719)
+          (parent "")
           (select-mask 1)
-          (path "images/decal/train_door.png")
+          (path "images/decal/roof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Tunnel Wall")
-      (visible #t)
-      (locked #t)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x105b4b68")
-          (pos 1790.43 900.717)
+          (id "0x8b36998")
+          (pos -1141.53 298.683)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1062ddf8")
-          (pos 2046.43 900.717)
+          (id "0x8b36468")
+          (pos -2163.53 298.683)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10780d38")
-          (pos 1278.43 900.717)
+          (id "0x8b362f8")
+          (pos -2674.53 298.683)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
+          (path "images/decal/roof2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0x10780f38")
-          (pos 1534.43 900.717)
+          (id "0x8c92c30")
+          (pos -2249.87 1060.44)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1062d8d0")
-          (pos 1022.43 900.717)
+          (id "0x8c2c470")
+          (pos -2244.5 972.452)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x107264d8")
-          (pos 2165.35 656.717)
+          (id "0x8c2c618")
+          (pos -2151.95 1070.86)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x107265b0")
-          (pos 2101.35 464.717)
+          (id "0x8c92a58")
+          (pos -2223.31 378.014)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1062dad8")
-          (pos 2037.34 656.717)
+          (id "0x8c92bd0")
+          (pos -2222.56 441.264)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1088f138")
-          (pos 1781.34 656.717)
+          (id "0x8b3b688")
+          (pos -2231.18 652.952)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x109899f0")
-          (pos 1845.35 464.717)
+          (id "0x8c928f0")
+          (pos -2231.93 589.702)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1088f298")
-          (pos 1909.34 656.717)
+          (id "0x8b3b510")
+          (pos -2223.79 825.967)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1088f378")
-          (pos 1397.34 656.717)
+          (id "0x8b3b988")
+          (pos -2016.48 1029.67)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x109a9c10")
-          (pos 1333.35 464.717)
+          (id "0x8b3b850")
+          (pos -2047.33 560.924)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x109a9d88")
-          (pos 1269.34 656.717)
+          (id "0x8db85f0")
+          (pos -2080.6 782.737)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Train2")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0x10a0a528")
-          (pos 1525.34 656.717)
-          (parent "")
+          (id "0x8b379f0")
+          (pos -752 0)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/train_front.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x109fa048")
-          (pos 1589.35 464.717)
-          (parent "")
+          (id "0x8ae7978")
+          (pos 696 0)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
+          (path "images/decal/train_back.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10a0a2b8")
-          (pos 1653.34 656.717)
+          (id "0x8ae7da0")
+          (pos -2098.65 942.97)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/train_middle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10a5a648")
-          (pos 629.352 656.717)
-          (parent "")
+          (id "0x8b3b1f0")
+          (pos -586.991 241.125)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/train_engine_front.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10a6a820")
-          (pos 565.354 464.717)
-          (parent "")
+          (id "0x8b3b160")
+          (pos 593.009 242.125)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
+          (path "images/decal/train_engine_back.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10abac90")
-          (pos 501.352 656.717)
-          (parent "")
+          (id "0x8b3ae50")
+          (pos -206.991 241.125)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/train_engine_middle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10abada8")
-          (pos 245.352 656.717)
-          (parent "")
+          (id "0x8bf81c8")
+          (pos 249.009 241.125)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
+          (path "images/decal/train_engine_middle.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10a6a980")
-          (pos 309.354 464.717)
-          (parent "")
+          (id "0x8bf8358")
+          (pos 0.719482 -14.875)
+          (parent "0x8ae7da0")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
+          (path "images/decal/train_door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "ExtraLight")
+      (visible #t)
+      (locked #t)
+      (objects
         (decal
-          (id "0x10acae60")
-          (pos 373.352 656.717)
+          (id "0x8b37a50")
+          (pos -402.054 1017.24)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10acafe8")
-          (pos 885.352 656.717)
+          (id "0x8ae96a0")
+          (pos 161.91 1097.81)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10b2b268")
-          (pos 821.354 464.717)
+          (id "0x8ae85b0")
+          (pos 860.719 704.086)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10b2b528")
-          (pos 757.352 656.717)
+          (id "0x8ae9530")
+          (pos 208.559 708.054)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10b7b680")
-          (pos 1013.35 656.717)
+          (id "0x8ae91b8")
+          (pos -845.605 1035.11)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10b8b8b0")
-          (pos 1077.35 464.717)
+          (id "0x8ae8668")
+          (pos -332.91 1098.59)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10bdbd00")
-          (pos 1141.34 656.717)
+          (id "0x8ae8780")
+          (pos -1151.04 1059.27)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10bdbdf0")
-          (pos -394.638 656.717)
+          (id "0x8ae88c8")
+          (pos -1663.74 995.791)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10b8ba58")
-          (pos -138.648 656.717)
+          (id "0x8ae8c78")
+          (pos 943.16 1149.08)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Lights")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x8b36c50")
+          (pos 1630.08 1070.32)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/light.png")
+          (type 1)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10bebf10")
-          (pos -202.646 464.717)
+          (id "0x8b36f80")
+          (pos 983.756 904.953)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10bec088")
-          (pos -266.648 656.717)
+          (id "0x8b36d50")
+          (pos 315.072 868.593)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10c4c350")
-          (pos -10.6475 656.717)
+          (id "0x8b375e8")
+          (pos -1636 909.933)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10c5c4e8")
-          (pos 53.3544 464.717)
+          (id "0x8b373e8")
+          (pos -810.844 849.183)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10c5c5b8")
-          (pos 117.352 656.717)
+          (id "0x8b37b48")
+          (pos 1559.83 804.374)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10cac968")
-          (pos 766.427 900.717)
+          (id "0x8b37c20")
+          (pos -259.112 903.761)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10cbcb30")
-          (pos 510.427 900.717)
+          (id "0x8b377b0")
+          (pos -477.046 760.753)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10cbcde8")
-          (pos 254.427 900.717)
+          (id "0x8b378b0")
+          (pos -1553.29 729.292)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10d0cf98")
-          (pos -458.636 464.717)
+          (id "0x8ae8ed0")
+          (pos -1169.49 799.75)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
+          (vflip #f))))
+    (layer
+      (name "Daylight")
+      (visible #t)
+      (locked #t)
+      (objects
+        (decal
+          (id "0x8ae9e18")
+          (pos -855.442 319.354)
+          (parent "")
+          (select-mask 1)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
+          (scale 1 1)
+          (angle 0)
+          (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10cbcd40")
-          (pos -522.638 656.717)
+          (id "0x8aeaa08")
+          (pos -1297.52 365.776)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_small.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10dc16f0")
-          (pos -1.57263 900.717)
+          (id "0x8ae71b0")
+          (pos -1402.7 340.058)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10dc1340")
-          (pos -257.573 900.717)
+          (id "0x8ae7390")
+          (pos -1099.97 336.543)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x10dc1568")
-          (pos -513.573 900.717)
+          (id "0x8b37df8")
+          (pos -1569.48 329.078)
           (parent "")
           (select-mask 1)
-          (path "images/decal/tunnelplate_bottom.png")
-          (type 0)
+          (path "images/decal/rooflamp_bloom.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))))
+          (vflip #f))))
+    (layer
+      (name "Trainstation")
+      (visible #t)
+      (locked #t)
+      (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/worker.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-28 16:41:48 UTC (rev 3105)
+++ trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-28 16:46:43 UTC (rev 3106)
@@ -10,633 +10,638 @@
     (edges))
   (objects
     (layer
-      (name "Scene")
+      (name "Background")
       (visible #t)
       (locked #f)
       (objects
         (decal
-          (id "0x11234560")
-          (pos 1204.55 268.312)
+          (id "0x175e9a10")
+          (pos 346.25 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/humanreference.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Light")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x11236dc8")
-          (pos 58.9653 321.293)
+          (id "0x175e96e0")
+          (pos 730.25 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11236f90")
-          (pos 1347.85 311.818)
+          (id "0x175e87d0")
+          (pos 1498.25 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11252b48")
-          (pos -518.274 304.576)
+          (id "0x175e8860")
+          (pos 1114.25 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11237590")
-          (pos 667.297 305.114)
+          (id "0x175e9e88")
+          (pos -37.75 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11237a10")
-          (pos 45.189 -395.95)
+          (id "0x175ea630")
+          (pos -1573.75 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11237b38")
-          (pos 653.521 -410.567)
+          (id "0x1772ec30")
+          (pos -421.75 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112376f8")
-          (pos -535.175 -411.104)
+          (id "0x1772edc8")
+          (pos -805.75 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11237830")
-          (pos 1334.07 -403.863)
+          (id "0x1772ef60")
+          (pos -1189.75 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/decal/light.png")
-          (type 1)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Highlight")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x11238730")
-          (pos -520.276 3.38026)
+          (id "0x1779b240")
+          (pos 1882.25 191.313)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11238108")
-          (pos 657.849 1.81776)
+          (id "0x1779b480")
+          (pos 1975.29 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11238338")
-          (pos 1321.1 -0.557228)
+          (id "0x1779b300")
+          (pos -1096.71 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11238260")
-          (pos 36.7242 -0.55722)
+          (id "0x1794b6a0")
+          (pos -712.715 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/objects/bluewall.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1125d598")
-          (pos -499.515 23.7381)
+          (id "0x1794b800")
+          (pos -328.715 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1125db70")
-          (pos 46.7499 29.8416)
+          (id "0x17a8fa38")
+          (pos 55.2852 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11293ca8")
-          (pos 656.491 10.0661)
+          (id "0x17a8fc98")
+          (pos 1207.29 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1125d650")
-          (pos 1331.54 20.6863)
+          (id "0x17a8fb30")
+          (pos 1591.29 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11293bd8")
-          (pos 1394.11 -619.545)
+          (id "0x175e8698")
+          (pos 823.285 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1125d920")
-          (pos 728.826 -616.493)
+          (id "0x176567c8")
+          (pos 439.285 -448.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/objects/bluewall.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Shadow")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x1125d7c0")
-          (pos 109.319 -610.39)
+          (id "0x171d16f0")
+          (pos 1432.09 426.524)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112a5dd0")
-          (pos -436.945 -616.493)
+          (id "0x16b89cd8")
+          (pos 325.796 355.072)
           (parent "")
           (select-mask 1)
-          (path "images/decal/rooflamp_bloom.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112a5c58")
-          (pos 99.2935 -640.789)
+          (id "0x17580a90")
+          (pos 870.812 337.75)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112a6858")
-          (pos 1383.67 -640.789)
+          (id "0x175809c8")
+          (pos 586.047 254.156)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1126fe28")
-          (pos 720.418 -638.414)
+          (id "0x170b0528")
+          (pos -224.968 432.364)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112b8a70")
-          (pos -457.706 -636.851)
+          (id "0x16b34658")
+          (pos 67.5322 426.114)
           (parent "")
           (select-mask 1)
-          (path "images/objects/apartmentlamp_highlight.png")
-          (type 2)
+          (path "images/decal/dark.png")
+          (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Ground")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x112a69a0")
-          (pos 1641.5 447.312)
+          (id "0x16b34458")
+          (pos 1152.54 -13.9169)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112a6a88")
-          (pos 873.5 447.312)
+          (id "0x16b34540")
+          (pos 929.427 -188.448)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251148")
-          (pos 1130.5 448.312)
+          (id "0x175e9360")
+          (pos 1198.26 393.161)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/dark.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Locker")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x11250e68")
-          (pos 361.5 447.312)
+          (id "0x16b8aa10")
+          (pos 337.491 253.75)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/locker.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11250fa8")
-          (pos 105.5 447.312)
+          (id "0x170b0630")
+          (pos 465.491 253.75)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/locker.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11236aa8")
-          (pos -150.5 447.312)
+          (id "0x173183c0")
+          (pos 593.491 253.75)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/locker.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112368d8")
-          (pos 617.5 447.312)
+          (id "0x17342230")
+          (pos 721.491 253.75)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/locker.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112519f0")
-          (pos 1385.5 447.312)
+          (id "0x173a2980")
+          (pos 849.491 253.75)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/locker.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251718")
-          (pos -101.75 -64.6875)
+          (id "0x173423a0")
+          (pos -707.071 240.313)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/elevatordoor.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251fa8")
-          (pos 154.25 -64.6875)
+          (id "0x173c2a98")
+          (pos -708.083 255.313)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251868")
-          (pos 410.25 -64.6875)
+          (id "0x173c2b40")
+          (pos -326.468 339.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/bed.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251398")
-          (pos 1178.25 -64.6875)
+          (id "0x17403650")
+          (pos 72.6572 339.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/bed.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251580")
-          (pos 922.25 -64.6875)
+          (id "0x17402eb8")
+          (pos -177.277 -384.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11252a18")
-          (pos 666.25 -64.6875)
+          (id "0x17362740")
+          (pos -175.578 -399.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/elevatordoor.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251c40")
-          (pos 1690.25 -64.6875)
+          (id "0x17362800")
+          (pos 411.525 -399.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/elevatordoor.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11251e28")
-          (pos 1434.25 -64.6875)
+          (id "0x1746b0b8")
+          (pos 409.826 -384.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112526d8")
-          (pos -918.5 447.312)
+          (id "0x1746af50")
+          (pos -726.788 -399.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/elevatordoor.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112527e0")
-          (pos -662.5 447.312)
+          (id "0x174d1508")
+          (pos -728.486 -384.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/door.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Stairs")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x11251d30")
-          (pos -1430.5 447.312)
+          (id "0x171d1688")
+          (pos 1346.67 98.8136)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/stair2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x114c9338")
-          (pos -1686.5 447.312)
+          (id "0x16b17da0")
+          (pos 1346.67 258.814)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/stair1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x114c9258")
-          (pos -1942.5 447.312)
+          (id "0x16b18050")
+          (pos 1474.67 386.814)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/stair1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x114f9668")
-          (pos -1174.5 447.312)
+          (id "0x16b8a598")
+          (pos 1474.67 226.814)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/stair2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x114f9540")
-          (pos -406.5 447.312)
+          (id "0x16b18c08")
+          (pos 1218.67 -29.1864)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/decal/stair2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112524c0")
-          (pos -1893.75 -64.6875)
+          (id "0x17171330")
+          (pos 1090.67 2.81363)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/stair1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11541918")
-          (pos -1637.75 -64.6875)
+          (id "0x16b8a408")
+          (pos 1090.67 -157.186)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/stair2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11252308")
-          (pos -1381.75 -64.6875)
+          (id "0x17171148")
+          (pos 1218.67 130.814)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/stair1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x115419e0")
-          (pos -613.75 -64.6875)
+          (id "0x17171210")
+          (pos 958.609 -125.186)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/stair1.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11491040")
-          (pos -869.75 -64.6875)
+          (id "0x17211a38")
+          (pos 958.609 -285.186)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/decal/stair2.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Ground")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x1155a0f0")
-          (pos -1125.75 -64.6875)
+          (id "0x16b89eb8")
+          (pos 1641.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1155a1f0")
-          (pos -357.75 -64.6875)
+          (id "0x16b17860")
+          (pos 873.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11490ea0")
-          (pos 1897.5 447.312)
+          (id "0x16b17bb0")
+          (pos 1130.5 448.312)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -646,8 +651,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x115da4f8")
-          (pos 2153.5 447.312)
+          (id "0x16b17948")
+          (pos 361.5 447.312)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -657,30 +662,30 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x115da6e0")
-          (pos 1946.25 -64.6875)
+          (id "0x16b35050")
+          (pos 105.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1161a950")
-          (pos 2202.25 -64.6875)
+          (id "0x16b34760")
+          (pos -150.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1161a7c0")
-          (pos 1915.34 -192.687)
+          (id "0x16b34de8")
+          (pos 617.5 447.312)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -690,8 +695,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x115da590")
-          (pos -388.656 -192.687)
+          (id "0x16b347f8")
+          (pos 1385.5 447.312)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -701,96 +706,96 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11250ad0")
-          (pos -644.656 -192.687)
+          (id "0x16b34b88")
+          (pos -101.75 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11250b78")
-          (pos -900.656 -192.687)
+          (id "0x16b34918")
+          (pos 154.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11250bf8")
-          (pos 1403.34 -192.687)
+          (id "0x16b34a78")
+          (pos 410.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11559cf8")
-          (pos 635.344 -192.687)
+          (id "0x16b354f8")
+          (pos 1178.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x116db348")
-          (pos -132.656 -192.687)
+          (id "0x16b353a0")
+          (pos 922.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x117236a8")
-          (pos 123.344 -192.687)
+          (id "0x16b35210")
+          (pos 666.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x117238b8")
-          (pos 379.344 -192.687)
+          (id "0x16b361a0")
+          (pos 1690.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1173bb00")
-          (pos 1147.34 -192.687)
+          (id "0x16b362c0")
+          (pos 1434.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueground.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1173b9d8")
-          (pos 891.344 -192.687)
+          (id "0x16b36088")
+          (pos -918.5 447.312)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -800,8 +805,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x117236f8")
-          (pos 1659.34 -192.687)
+          (id "0x16d75180")
+          (pos -662.5 447.312)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -811,63 +816,63 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1176be18")
-          (pos 2225.09 -704.688)
+          (id "0x16d74ec8")
+          (pos -1430.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1179c020")
-          (pos 1969.09 -704.688)
+          (id "0x16d74f50")
+          (pos -1686.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1179c1a0")
-          (pos -334.905 -704.688)
+          (id "0x16d75020")
+          (pos -1942.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x116c3190")
-          (pos -1102.91 -704.688)
+          (id "0x16b35cb8")
+          (pos -1174.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1166ac08")
-          (pos -846.905 -704.688)
+          (id "0x16b35dc0")
+          (pos -406.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1166aed0")
-          (pos -590.905 -704.688)
+          (id "0x16d14c20")
+          (pos -1893.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -877,8 +882,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x117cc5e8")
-          (pos 1457.09 -704.688)
+          (id "0x16d14a78")
+          (pos -1637.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -888,8 +893,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1186ce98")
-          (pos 1713.09 -704.688)
+          (id "0x16d14b00")
+          (pos -1381.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -899,8 +904,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1186d1e0")
-          (pos 689.095 -704.688)
+          (id "0x16e25940")
+          (pos -613.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -910,8 +915,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x117ccc90")
-          (pos 945.095 -704.688)
+          (id "0x16e259d8")
+          (pos -869.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -921,8 +926,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1186d040")
-          (pos 1201.09 -704.688)
+          (id "0x16b35a50")
+          (pos -1125.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -932,8 +937,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1188d358")
-          (pos 433.095 -704.688)
+          (id "0x16e3e388")
+          (pos -357.75 -64.6875)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -943,625 +948,620 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1188d648")
-          (pos 177.095 -704.688)
+          (id "0x16e3e1d0")
+          (pos 1897.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x118cd6d8")
-          (pos -78.9053 -704.688)
+          (id "0x16e3df80")
+          (pos 2153.5 447.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/blueroof.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Stairs")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x1194de40")
-          (pos 1346.67 98.8136)
+          (id "0x16f1e8e8")
+          (pos 1946.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1194de90")
-          (pos 1346.67 258.814)
+          (id "0x16f1e9e0")
+          (pos 2202.25 -64.6875)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112a6400")
-          (pos 1474.67 386.814)
+          (id "0x16f1eb40")
+          (pos 1915.34 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11237d38")
-          (pos 1474.67 226.814)
+          (id "0x16ebe488")
+          (pos -388.656 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112384b0")
-          (pos 1218.67 -29.1864)
+          (id "0x16ebe580")
+          (pos -644.656 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11252df8")
-          (pos 1090.67 2.81363)
+          (id "0x16f4f318")
+          (pos -900.656 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11238638")
-          (pos 1090.67 -157.186)
+          (id "0x16df5590")
+          (pos 1403.34 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x117b4470")
-          (pos 1218.67 130.814)
+          (id "0x16e3ddb8")
+          (pos 635.344 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1198df30")
-          (pos 958.609 -125.186)
+          (id "0x16e3dc38")
+          (pos -132.656 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair1.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11a24268")
-          (pos 958.609 -285.186)
+          (id "0x16f4f260")
+          (pos 123.344 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/decal/stair2.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Locker")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x1198dff8")
-          (pos 337.491 253.75)
+          (id "0x16f4eff0")
+          (pos 379.344 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/objects/locker.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112dc840")
-          (pos 465.491 253.75)
+          (id "0x17007910")
+          (pos 1147.34 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/objects/locker.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11a44708")
-          (pos 593.491 253.75)
+          (id "0x17007988")
+          (pos 891.344 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/objects/locker.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11a5e550")
-          (pos 721.491 253.75)
+          (id "0x17007aa8")
+          (pos 1659.34 -192.687)
           (parent "")
           (select-mask 1)
-          (path "images/objects/locker.png")
+          (path "images/objects/blueground.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11abec18")
-          (pos 849.491 253.75)
+          (id "0x16fef6a0")
+          (pos 2225.09 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/locker.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11aded70")
-          (pos -707.071 240.313)
+          (id "0x16fef4e0")
+          (pos 1969.09 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/elevatordoor.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11aff028")
-          (pos -708.083 255.313)
+          (id "0x17098418")
+          (pos -334.905 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/door.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11a7e9a8")
-          (pos -326.468 339.312)
+          (id "0x170981d0")
+          (pos -1102.91 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bed.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11b1f108")
-          (pos 72.6572 339.312)
+          (id "0x17098268")
+          (pos -846.905 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bed.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11bcebc0")
-          (pos -177.277 -384.688)
+          (id "0x16f4ed58")
+          (pos -590.905 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/door.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11b1f2f0")
-          (pos -175.578 -399.688)
+          (id "0x170b09f0")
+          (pos 1457.09 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/elevatordoor.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11bcec80")
-          (pos 411.525 -399.688)
+          (id "0x170b0a78")
+          (pos 1713.09 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/elevatordoor.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11bcea58")
-          (pos 409.826 -384.688)
+          (id "0x17067e40")
+          (pos 689.095 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/door.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11b1f4e0")
-          (pos -726.788 -399.688)
+          (id "0x17067f50")
+          (pos 945.095 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/elevatordoor.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11b1f668")
-          (pos -728.486 -384.688)
+          (id "0x17068040")
+          (pos 1201.09 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/objects/door.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Shadow")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x11ce4a28")
-          (pos 1432.09 426.524)
+          (id "0x17130d68")
+          (pos 433.095 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11ce4b00")
-          (pos 325.796 355.072)
+          (id "0x17130df0")
+          (pos 177.095 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11ce47c0")
-          (pos 870.812 337.75)
+          (id "0x171d17f8")
+          (pos -78.9053 -704.688)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/objects/blueroof.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Highlight")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x11c7cca8")
-          (pos 586.047 254.156)
+          (id "0x16b19268")
+          (pos -520.276 3.38026)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11c7ce60")
-          (pos -224.968 432.364)
+          (id "0x16b40c00")
+          (pos 657.849 1.81776)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1194dca0")
-          (pos 67.5322 426.114)
+          (id "0x16b40c88")
+          (pos 1321.1 -0.557228)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1194dc00")
-          (pos 1152.54 -13.9169)
+          (id "0x16b40d48")
+          (pos 36.7242 -0.55722)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112f0a70")
-          (pos 929.427 -188.448)
+          (id "0x16b53d00")
+          (pos -499.515 23.7381)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112f0b50")
-          (pos 1198.26 393.161)
+          (id "0x16b53e20")
+          (pos 46.7499 29.8416)
           (parent "")
           (select-mask 1)
-          (path "images/decal/dark.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))))
-    (layer
-      (name "Background")
-      (visible #t)
-      (locked #f)
-      (objects
+          (vflip #f))
         (decal
-          (id "0x11235dc0")
-          (pos 346.25 191.313)
+          (id "0x16b41ca0")
+          (pos 656.491 10.0661)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11235fc0")
-          (pos 730.25 191.313)
+          (id "0x16b18f80")
+          (pos 1331.54 20.6863)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11235560")
-          (pos 1498.25 191.313)
+          (id "0x16b19050")
+          (pos 1394.11 -619.545)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11235628")
-          (pos 1114.25 191.313)
+          (id "0x16b190e8")
+          (pos 728.826 -616.493)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11235708")
-          (pos -37.75 191.313)
+          (id "0x16b77b50")
+          (pos 109.319 -610.39)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11235838")
-          (pos -1573.75 191.313)
+          (id "0x16b77c30")
+          (pos -436.945 -616.493)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/rooflamp_bloom.png")
           (type 0)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11235170")
-          (pos -421.75 191.313)
+          (id "0x16b41910")
+          (pos 99.2935 -640.789)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x112352a8")
-          (pos -805.75 191.313)
+          (id "0x16b41778")
+          (pos 1383.67 -640.789)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11fd6cb0")
-          (pos -1189.75 191.313)
+          (id "0x16b8ab98")
+          (pos 720.418 -638.414)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11fd6a00")
-          (pos 1882.25 191.313)
+          (id "0x16b8a650")
+          (pos -457.706 -636.851)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/objects/apartmentlamp_highlight.png")
+          (type 2)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Light")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x11fd6b38")
-          (pos 1975.29 -448.688)
+          (id "0x16b364f0")
+          (pos 58.9653 321.293)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x120430c0")
-          (pos -1096.71 -448.688)
+          (id "0x16b18158")
+          (pos 1347.85 311.818)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x11234eb0")
-          (pos -712.715 -448.688)
+          (id "0x16b18218")
+          (pos -518.274 304.576)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x12042de8")
-          (pos -328.715 -448.688)
+          (id "0x16b18360")
+          (pos 667.297 305.114)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x12042ee8")
-          (pos 55.2852 -448.688)
+          (id "0x16b19758")
+          (pos 45.189 -395.95)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x12043008")
-          (pos 1207.29 -448.688)
+          (id "0x16b186f0")
+          (pos 653.521 -410.567)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x122cba38")
-          (pos 1591.29 -448.688)
+          (id "0x16b18a60")
+          (pos -535.175 -411.104)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x121f3348")
-          (pos 823.285 -448.688)
+          (id "0x16b18850")
+          (pos 1334.07 -403.863)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
-          (type 0)
+          (path "images/decal/light.png")
+          (type 1)
           (scale 1 1)
           (angle 0)
           (hflip #f)
-          (vflip #f))
+          (vflip #f))))
+    (layer
+      (name "Scene")
+      (visible #t)
+      (locked #f)
+      (objects
         (decal
-          (id "0x122cb6b8")
-          (pos 439.285 -448.688)
+          (id "0x16b15678")
+          (pos 1204.55 268.312)
           (parent "")
           (select-mask 1)
-          (path "images/objects/bluewall.png")
+          (path "images/decal/humanreference.png")
           (type 0)
           (scale 1 1)
           (angle 0)



From grumbel at mail.berlios.de  Sat Aug 29 01:16:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 01:16:26 +0200
Subject: [Windstille-commit] r3117 - trunk/windstille/src/navigation
Message-ID: <200908282316.n7SNGQdm010055@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 01:16:24 +0200 (Sat, 29 Aug 2009)
New Revision: 3117

Modified:
   trunk/windstille/src/navigation/edge_position.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/navigation/edge_position.hpp
===================================================================
--- trunk/windstille/src/navigation/edge_position.hpp	2009-08-28 21:36:16 UTC (rev 3116)
+++ trunk/windstille/src/navigation/edge_position.hpp	2009-08-28 23:16:24 UTC (rev 3117)
@@ -24,8 +24,6 @@
 class Edge;
 class Node;
 
-/** 
- */
 class EdgePosition
 {
 public:
@@ -68,7 +66,7 @@
   void advance(Vector2f& adv, Node*& next_node);
 
   Edge* get_edge() const { return edge; }
-  float    get_float_pos() const { return pos; }
+  float get_float_pos() const { return pos; }
 
   Vector2f get_pos() const;
 };



From grumbel at mail.berlios.de  Sat Aug 29 01:20:49 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 01:20:49 +0200
Subject: [Windstille-commit] r3118 - in trunk/windstille/src: engine screen
Message-ID: <200908282320.n7SNKnj8018400@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 01:20:47 +0200 (Sat, 29 Aug 2009)
New Revision: 3118

Modified:
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/game_object.cpp
   trunk/windstille/src/engine/game_object.hpp
   trunk/windstille/src/screen/game_session.cpp
Log:
Removed GameObject::get_world()

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-08-28 23:16:24 UTC (rev 3117)
+++ trunk/windstille/src/engine/entity.cpp	2009-08-28 23:20:47 UTC (rev 3118)
@@ -45,13 +45,13 @@
 bool
 Entity::on_ground() const
 {
-  return get_world ()->get_tilemap()->is_ground(pos.x, pos.y+16);
+  return Sector::current()->get_tilemap()->is_ground(pos.x, pos.y+16);
 }
 
 bool 
 Entity::in_wall() const
 {
-  return get_world ()->get_tilemap()->is_ground(pos.x, pos.y);
+  return Sector::current()->get_tilemap()->is_ground(pos.x, pos.y);
 }
 
 void

Modified: trunk/windstille/src/engine/game_object.cpp
===================================================================
--- trunk/windstille/src/engine/game_object.cpp	2009-08-28 23:16:24 UTC (rev 3117)
+++ trunk/windstille/src/engine/game_object.cpp	2009-08-28 23:20:47 UTC (rev 3118)
@@ -18,6 +18,4 @@
 
 #include "engine/game_object.hpp"
 
-Sector* GameObject::world;
-
 /* EOF */

Modified: trunk/windstille/src/engine/game_object.hpp
===================================================================
--- trunk/windstille/src/engine/game_object.hpp	2009-08-28 23:16:24 UTC (rev 3117)
+++ trunk/windstille/src/engine/game_object.hpp	2009-08-28 23:20:47 UTC (rev 3118)
@@ -33,8 +33,6 @@
 class GameObject
 {
 private:
-  static Sector* world;
-
   bool remove_flag;
  
 protected:
@@ -106,9 +104,6 @@
    */
   virtual void update (float delta) = 0;
     
-  static void set_world (Sector* w) { world = w; }
-  Sector* get_world () const { return world; }
-
   virtual void set_parent(GameObject* /*parent*/) {}
 
 private:

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-28 23:16:24 UTC (rev 3117)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-28 23:20:47 UTC (rev 3118)
@@ -342,11 +342,6 @@
 GameSession::set_sector(const Pathname& /* FIXME: huh? */)
 {
   impl->sector.reset(new Sector(impl->filename));
- 
-  GameObject::set_world(impl->sector.get());
-
-  //FIXME: does the TestObject class still need to exist?
-  //sector->add(new TestObject());
   
   impl->sector->activate();
   



From grumbel at mail.berlios.de  Sat Aug 29 01:27:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 01:27:29 +0200
Subject: [Windstille-commit] r3119 - trunk/windstille/src/util
Message-ID: <200908282327.n7SNRTjp027248@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 01:27:28 +0200 (Sat, 29 Aug 2009)
New Revision: 3119

Modified:
   trunk/windstille/src/util/file_reader.cpp
Log:
Added better error message on missing file

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-08-28 23:20:47 UTC (rev 3118)
+++ trunk/windstille/src/util/file_reader.cpp	2009-08-28 23:27:28 UTC (rev 3119)
@@ -31,7 +31,16 @@
 FileReader::parse(const Pathname& filename)
 {
   std::ifstream in(filename.get_sys_path().c_str());
-  return FileReader::parse(in, filename.get_sys_path());
+  if (!in)
+  {
+    std::ostringstream str;
+    str << "Couldn't open file: " << filename;
+    throw std::runtime_error(str.str());
+  }
+  else
+  {
+    return FileReader::parse(in, filename.get_sys_path());
+  }
 }
 
 FileReader



From grumbel at mail.berlios.de  Sat Aug 29 01:29:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 01:29:23 +0200
Subject: [Windstille-commit] r3120 - trunk/windstille/src/app
Message-ID: <200908282329.n7SNTNMg029364@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 01:29:20 +0200 (Sat, 29 Aug 2009)
New Revision: 3120

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Command line arguments are kSysPath, not kDataPath

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-08-28 23:27:28 UTC (rev 3119)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-08-28 23:29:20 UTC (rev 3120)
@@ -160,12 +160,14 @@
     
   {     
     if (config.get<std::string>("primary-controller-file").is_set())
-      InputManagerSDL::current()->load(Pathname(config.get<std::string>("primary-controller-file").get()));
+      InputManagerSDL::current()->load(Pathname(config.get<std::string>("primary-controller-file").get(), 
+                                                Pathname::kSysPath));
     else
       InputManagerSDL::current()->load(Pathname("controller/keyboard.scm"));
 
     if (config.get<std::string>("secondary-controller-file").is_set())
-      InputManagerSDL::current()->load(Pathname(config.get<std::string>("secondary-controller-file").get()));
+      InputManagerSDL::current()->load(Pathname(config.get<std::string>("secondary-controller-file").get(),
+                                                Pathname::kSysPath));
   }
 }
 



From grumbel at mail.berlios.de  Sat Aug 29 02:06:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 02:06:23 +0200
Subject: [Windstille-commit] r3121 - trunk/windstille/src/screen
Message-ID: <200908290006.n7T06Ntd023942@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 02:06:22 +0200 (Sat, 29 Aug 2009)
New Revision: 3121

Modified:
   trunk/windstille/src/screen/game_session.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-28 23:29:20 UTC (rev 3120)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-29 00:06:22 UTC (rev 3121)
@@ -404,8 +404,7 @@
         
       case SDL_MOUSEBUTTONDOWN:
         {
-          Vector2f real_pos = GameSession::current()->get_view()->screen_to_world(Vector2f(event.button.x,
-                                                                                           event.button.y));      
+          Vector2f real_pos = view.screen_to_world(Vector2f(event.button.x, event.button.y));
           ConsoleLog << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
         }
         break;



From grumbel at mail.berlios.de  Sat Aug 29 02:06:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 02:06:41 +0200
Subject: [Windstille-commit] r3122 - trunk/windstille
Message-ID: <200908290006.n7T06frX024042@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 02:06:41 +0200 (Sat, 29 Aug 2009)
New Revision: 3122

Modified:
   trunk/windstille/TODO
Log:
TODO updates and reorganisation

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-29 00:06:22 UTC (rev 3121)
+++ trunk/windstille/TODO	2009-08-29 00:06:41 UTC (rev 3122)
@@ -15,22 +15,42 @@
 
 * Pathname needs a way to browse directories (wrapper boost::filesystem)
 
-* Sound stuff still uses PhysFS
+* Sound stuff still uses PhysFS, should be switched to std::ifstream
 
 SceneGraph
 ==========
 
 * change the editor to use the SceneGraph instead of the SceneContext API
 
-* new levelformat use a different coordinate system then the old one,
-  figure out which to use before doing the final conversion
+* new levelformat use a different coordinate system then the old one
+  (128px = 1meter instead of 64px), figure out which to use before
+  doing the final conversion
 
-* 
+* might have some advantage to place stuff in a QuadTree, when you have a complex level
 
+Display
+=======
+
+* Display::push/pop_cliprect() doesn't handle different aspect-ratios properly
+
+* lightmap is broken with non-standard aspect-ratio
+
+* implement aspect-ration switching at runtime (menu entry is there,
+  just no code) and change default screen ration to that seen in the
+  artwork pictures (FIXME: full resolution switch would be more useful
+  then just aspect-ratio switch)
+
+* make lightmap resolution independent (done, but an artifact remains
+  when the resolution isn't dividable by LIGHTMAP_DIV):
+
+  1680x1050 -> 1050 / 4 -> 262.5 -> 262 * 4 -> 1048
+
+  two pixel missing at the bottom
+
 Porting
 =======
 
-* Microsoft compiler don't have inttypes.h, need to write a replacement header
+* Microsoft compiler don't have stdint.h, need to write a replacement header
 
 Logging
 =======
@@ -225,16 +245,10 @@
 Miscellaneous
 =============
 
-* automatically detect the file type provided on the command line and
-  launch the correct viewer
-
 * figure out how to enable mipmapping into the tile and surface packer
 
 * View class could be done away, as it doesn't have any clear purpose
 
-* sorting DrawingRequest can be speed up by a bucket sort, as most
-  requests don't make use of z-pos
-
 * SurfaceManager::load_grid() bypasses TexturePacker, doesn't do
   border pixel duplication
 
@@ -244,8 +258,6 @@
   1-bit alpha, which could be used to bucket sort drawing requests and
   reduce texture switches (in case those ever start posing a problem)
 
-* Write a texture packer: http://www.blackpawn.com/texts/lightmaps/default.html
-
 * Display::aspect_size is ugly, turn that into a Display::set_size();
 
 * move particle system into library
@@ -286,31 +298,19 @@
 * remove DEBUG macro or give it a clearer defined purpose, currently
   used only in a few tiny places
 
-* add way to TextArea to layout text with a fixed indent after a linebreak:
+* add way to TextArea to layout text with a fixed indent after a
+  linebreak (for use in the PDA):
 
   Bob: "Hi, how are you, yada yada yada yada yada yada
         yada yada yada yada yada yada yada yada yada yada
         yada yada yada"
 
-* add Ctrl-k, Ctrl-k shortcuts to console
+* add Ctrl-a, Ctrl-k shortcuts to console
 
 * save command history of the console between runs
 
-* move the concept of parenting into .scm
-  
-  (scriptable-object 
-       (parent "player")
-       ...)
+* cleanup the parenting code
 
-  tricky since parent name can't be resolved at object creation, only
-  later
-
-* extend the concept of parenting to other(all?) objects
-
-* Display::push/pop_cliprect() doesn't handle different aspect-ratios properly
-
-* lightmap is broken with non-standard aspect-ratio
-
 * why does src/navigation/node.hpp use SegmentPosition? Doesn't seem
   right
 
@@ -329,9 +329,6 @@
 
 * get rid of global game_time variable
 
-* map laserpointer to the second analog-stick, make mapping absolute,
-  not relative
-
 * maybe create an additional layer in SceneContext for drawing things
   like Speech and other worldspace GUI elements to it
 
@@ -350,8 +347,6 @@
 
 * scrap inventory and redesign it
 
-* When starting sector directly from command line, "Return to title screen" doesn't work
-
 * console doesn't adopt to screen size
 
 * create a UTF32 string class for use in console, basically
@@ -361,11 +356,6 @@
 * join Player and Character somewhat or derive one from the other, so
   that one can have scripted people running and jumping around
 
-* implement aspect-ration switching at runtime (menu entry is there,
-  just no code) and change default screen ration to that seen in the
-  artwork pictures (FIXME: full resolution switch would be more useful
-  then just aspect-ratio switch)
-
 * add support for empty sectors (sectors without a player character,
   for use in intro.wst and similar cutscenes)
 
@@ -382,16 +372,7 @@
   and config done via option menu, i.e. command line settings
   shouldn't be persistent unless told so
 
-* make lightmap resolution independent (done, but an artifact remains
-  when the resolution isn't dividable by LIGHTMAP_DIV):
-
-  1680x1050 -> 1050 / 4 -> 262.5 -> 262 * 4 -> 1048
-
-  two pixel missing at the bottom
-
 * Specify the capabilites that the different subsystems need to have
-
-* make Console not derive from ostream
 
 OpenGL
 ======



From grumbel at mail.berlios.de  Sat Aug 29 12:45:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 12:45:35 +0200
Subject: [Windstille-commit] r3123 - trunk/windstille/src/screen
Message-ID: <200908291045.n7TAjZ0R029426@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 12:45:24 +0200 (Sat, 29 Aug 2009)
New Revision: 3123

Modified:
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/screen/view.hpp
Log:
Fixed jitter when using debug zooming

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-08-29 00:06:41 UTC (rev 3122)
+++ trunk/windstille/src/screen/view.cpp	2009-08-29 10:45:24 UTC (rev 3123)
@@ -28,26 +28,17 @@
 View::View()
   : state(Display::get_width(), Display::get_height()),
     camera(),
-    zoom(1.0), 
-    transform(0, 0)
+    m_debug_zoom(1.0), 
+    m_debug_transform(0, 0)
 {
 }
 
 void
 View::draw(SceneContext& sc, Sector& sector)
 {
-  if (camera.get_zoom() == 1.0)
-    {
-      state.set_pos(Vector2f(camera.get_pos().x, camera.get_pos().y));
-    }
-  else
-    {
-      state.set_pos(camera.get_pos());
-    }
+  state.set_zoom(camera.get_zoom() + (m_debug_zoom - 1.0f));
+  state.set_pos(camera.get_pos() + m_debug_transform);
 
-  state.set_zoom(camera.get_zoom() + (zoom - 1.0f));
-  state.set_pos(state.get_pos() + Vector2f(transform.x, transform.y));
-
   state.push(sc);
 
   sector.draw(sc);
@@ -66,10 +57,10 @@
   Uint8 *keystate = SDL_GetKeyState(NULL);
 
   if (keystate[SDLK_KP_PLUS])
-    zoom *= 1.0f + delta;
+    m_debug_zoom *= 1.0f + delta;
 
   if (keystate[SDLK_KP_MINUS])
-    zoom *= 1.0f - delta;
+    m_debug_zoom *= 1.0f - delta;
 
   const Controller& controller = InputManagerSDL::current()->get_controller();
 
@@ -77,12 +68,12 @@
     {
       if (controller.get_button_state(VIEW_CENTER_BUTTON)) 
         {
-          transform = Vector2f(0, 0);
-          zoom = 1.0;
+          m_debug_transform = Vector2f(0, 0);
+          m_debug_zoom = 1.0;
         }
 
-      transform.x += 1.5f * controller.get_axis_state(X2_AXIS) / zoom;
-      transform.y += 1.5f * controller.get_axis_state(Y2_AXIS) / zoom;
+      m_debug_transform.x += 1000.0f * controller.get_axis_state(X2_AXIS) * delta / m_debug_zoom;
+      m_debug_transform.y += 1000.0f * controller.get_axis_state(Y2_AXIS) * delta / m_debug_zoom;
     }
 }
 

Modified: trunk/windstille/src/screen/view.hpp
===================================================================
--- trunk/windstille/src/screen/view.hpp	2009-08-29 00:06:41 UTC (rev 3122)
+++ trunk/windstille/src/screen/view.hpp	2009-08-29 10:45:24 UTC (rev 3123)
@@ -35,9 +35,8 @@
   GraphicContextState state;
   Camera camera;
 
-  // debugging helpers
-  float zoom;
-  Vector2f transform;
+  float    m_debug_zoom;
+  Vector2f m_debug_transform;
 
 public:
   View();



From grumbel at mail.berlios.de  Sat Aug 29 12:52:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 12:52:54 +0200
Subject: [Windstille-commit] r3124 - trunk/windstille/src/scenegraph
Message-ID: <200908291052.n7TAqseK001567@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 12:52:53 +0200 (Sat, 29 Aug 2009)
New Revision: 3124

Modified:
   trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp
Log:
Fixed include guard

Modified: trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp	2009-08-29 10:45:24 UTC (rev 3123)
+++ trunk/windstille/src/scenegraph/navigation_graph_drawable.hpp	2009-08-29 10:52:53 UTC (rev 3124)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_NAVIGATION_GRAPH_DRAWABLE_HPP
-#define HEADER_NAVIGATION_GRAPH_DRAWABLE_HPP
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_NAVIGATION_GRAPH_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_NAVIGATION_GRAPH_DRAWABLE_HPP
 
 #include "display/display.hpp"
 #include "scenegraph/drawable.hpp"



From grumbel at mail.berlios.de  Sat Aug 29 12:53:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 12:53:16 +0200
Subject: [Windstille-commit] r3125 - in trunk/windstille/src: objects
	scenegraph
Message-ID: <200908291053.n7TArGdk001688@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 12:53:15 +0200 (Sat, 29 Aug 2009)
New Revision: 3125

Added:
   trunk/windstille/src/scenegraph/shockwave_drawable.hpp
Modified:
   trunk/windstille/src/objects/shockwave.cpp
Log:
Moved ShockwaveDrawable to its own file

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-08-29 10:52:53 UTC (rev 3124)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-08-29 10:53:15 UTC (rev 3125)
@@ -16,204 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "objects/shockwave.hpp"
+
 #include "display/opengl_state.hpp"
 #include "display/shader_object.hpp"
-#include "objects/shockwave.hpp"
+#include "scenegraph/shockwave_drawable.hpp"
 
-class ShockwaveDrawable : public Drawable
-{
-public:
-  Texture       noise;
-  ShaderProgram shader_program;
-  float radius;
-
-  ShockwaveDrawable(const Vector2f& pos_, 
-                          const Texture&       noise_,
-                          const ShaderProgram& shader_program_,
-                          float r,
-                          const Matrix& modelview_) 
-    : Drawable(pos_, 500.0f, modelview_),
-      noise(noise_),
-      shader_program(shader_program_),
-      radius(r)
-  {
-  }
-
-  ~ShockwaveDrawable()
-  {
-  }
-
-  bool  needs_prepare()
-  {
-    return true; 
-  }
-    
-  void prepare(const Texture& screen_texture)
-  {
-    // FIXME: Clear stuff is only for debugging
-    glClearColor(1.0, 0.0, 1.0, 1.0);
-    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-    glTranslatef(pos.x, pos.y, 0);
-
-    { // Apply modelview matrix to texture matrix so that we can
-      // give texcoords as screencords
-      GLdouble m[16];
-      glMatrixMode(GL_MODELVIEW);
-      glGetDoublev(GL_MODELVIEW_MATRIX, m);
-      glMatrixMode(GL_TEXTURE);
-      glLoadIdentity();
-      glTranslatef(0, 599, 0);
-      glScalef(1, -1, 1);
-      glMultMatrixd(m);
-
-      //glLoadMatrixd(m);
-    }
-
-    int count = int(radius);
-    OpenGLState state;
-    state.bind_texture(screen_texture, 0);
-    state.activate();
-
-    float rad = static_cast<float>(count)*2.0f + 20.0f; // enlarge radius by 20.0f to handle texture displacement 
-    float minradius = 2.0f * static_cast<float>(count) - 164.0f;
-    if (minradius < 0)
-      minradius = 0;
-
-    int segments = 64;
-
-    glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
-  
-    glBegin(GL_QUADS);
-    for (int i = 0; i < segments; ++i)
-      {
-        float angel = 2.0f * math::pi / static_cast<float>(segments);
-
-        float x1 =  sinf(angel*static_cast<float>(i))*rad;
-        float y1 = -cosf(angel*static_cast<float>(i))*rad;
-
-        float x2 =  sinf(angel*(static_cast<float>(i)+1))*rad;
-        float y2 = -cosf(angel*(static_cast<float>(i)+1))*rad;
-
-        glTexCoord2f(x1+256, (y1+256));
-        glVertex3f(x1+256, y1+256, 0);
-
-        glTexCoord2f(x2+256, (y2+256));
-        glVertex3f(x2+256, y2+256, 0);
-
-        float x3 =  sinf(angel*static_cast<float>(i))*minradius;
-        float y3 = -cosf(angel*static_cast<float>(i))*minradius;
-
-        float x4 =  sinf(angel*(static_cast<float>(i)+1))*minradius;
-        float y4 = -cosf(angel*(static_cast<float>(i)+1))*minradius;
-
-        glTexCoord2f(x4+256, (y4+256));
-        glVertex3f(x4+256, y4+256, 0);
-        glTexCoord2f(x3+256, (y3+256));
-        glVertex3f(x3+256, y3+256, 0);
-      }
-    glEnd();
-
-    glMatrixMode(GL_TEXTURE);
-    glLoadIdentity();
-    glMatrixMode(GL_MODELVIEW);
-
-    glPopMatrix();
-  }
-
-  void draw(const Texture& tmp_texture)
-  {
-    glPushMatrix();
-    glMultMatrixf(modelview.matrix);
-    glTranslatef(pos.x, pos.y, 0);
-    if (0)
-      {
-        Rectf rect(0, 0, 800, 600);
-        // Render the screen framebuffer to the actual screen 
-        OpenGLState state;
-        state.bind_texture(tmp_texture, 0);
-        state.activate();
-
-        glBegin(GL_QUADS);
-    
-        glTexCoord2f(rect.left, rect.bottom);
-        glVertex2f(rect.left/2.0f, rect.bottom/2.0f);
-
-        glTexCoord2f(rect.right, rect.bottom);
-        glVertex2f(rect.right/2.0f, rect.bottom/2.0f);
-
-        glTexCoord2f(rect.right, rect.top);
-        glVertex2f(rect.right/2.0f, rect.top/2.0f);
-
-        glTexCoord2f(rect.left, rect.top);
-        glVertex2f(rect.left/2.0f, rect.top/2.0f);
-    
-        glEnd();
-      }
-    else
-      {
-        OpenGLState state;
-        state.bind_texture(tmp_texture, 0);
-        state.bind_texture(noise, 1);
-        state.enable(GL_BLEND);
-        state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-        state.activate();
-
-        glUseProgramObjectARB(shader_program.get_handle());    
-        shader_program.set_uniform1f("radius",   radius/512.0f*2.0f);
-        shader_program.set_uniform1i("background_tex", 0);
-        shader_program.set_uniform1i("noise_tex",   1);
-        draw_disc(int(radius));
-        glUseProgramObjectARB(0);
-      }
-    glPopMatrix();
-  }
-
-  void draw_disc(int count)
-  {
-    float rad = static_cast<float>(count)*2.0f;
-    float minradius = 2.0f * static_cast<float>(count) - 164.0f;
-    if (minradius < 0)
-      minradius = 0;
-
-    int segments = 64;
-  
-    glBegin(GL_QUADS);
-    for (int i = 0; i < segments; ++i)
-      {
-        float angel = 2.0f * math::pi / static_cast<float>(segments);
-
-        float x1 =  sinf(angel*static_cast<float>(i))*rad;
-        float y1 = -cosf(angel*static_cast<float>(i))*rad;
-
-        float x2 =  sinf(angel*(static_cast<float>(i)+1))*rad;
-        float y2 = -cosf(angel*(static_cast<float>(i)+1))*rad;
-
-        glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
-        glTexCoord2f(x1/512.0f+0.5f, y1/512.0f+0.5f);
-        glVertex3f(x1+256, y1+256, 0);
-
-        glTexCoord2f(x2/512.0f+0.5f, y2/512.0f+0.5f);
-        glVertex3f(x2+256, y2+256, 0);
-
-        float x3 =  sinf(angel*static_cast<float>(i))*minradius;
-        float y3 = -cosf(angel*static_cast<float>(i))*minradius;
-
-        float x4 =  sinf(angel*(static_cast<float>(i)+1))*minradius;
-        float y4 = -cosf(angel*(static_cast<float>(i)+1))*minradius;
-
-        glColor4f(1.0f, 1.0f, 1.0f, 0.0f);
-        glTexCoord2f(x4/512.0f+0.5f, y4/512.0f+0.5f);
-        glVertex3f(x4+256, y4+256, 0);
-        glTexCoord2f(x3/512.0f+0.5f, y3/512.0f+0.5f);
-        glVertex3f(x3+256, y3+256, 0);
-      }
-    glEnd();
-  }
-};
-
 Shockwave::Shockwave(FileReader& props)
   : pos(),
     noise(Pathname("images/noise3.png")),

Added: trunk/windstille/src/scenegraph/shockwave_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/shockwave_drawable.hpp	2009-08-29 10:52:53 UTC (rev 3124)
+++ trunk/windstille/src/scenegraph/shockwave_drawable.hpp	2009-08-29 10:53:15 UTC (rev 3125)
@@ -0,0 +1,220 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_SHOCKWAVE_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_SHOCKWAVE_DRAWABLE_HPP
+
+#include "scenegraph/drawable.hpp"
+
+class ShockwaveDrawable : public Drawable
+{
+public:
+  Texture       noise;
+  ShaderProgram shader_program;
+  float radius;
+
+  ShockwaveDrawable(const Vector2f& pos_, 
+                          const Texture&       noise_,
+                          const ShaderProgram& shader_program_,
+                          float r,
+                          const Matrix& modelview_) 
+    : Drawable(pos_, 500.0f, modelview_),
+      noise(noise_),
+      shader_program(shader_program_),
+      radius(r)
+  {
+  }
+
+  ~ShockwaveDrawable()
+  {
+  }
+
+  bool  needs_prepare()
+  {
+    return true; 
+  }
+    
+  void prepare(const Texture& screen_texture)
+  {
+    // FIXME: Clear stuff is only for debugging
+    glClearColor(1.0, 0.0, 1.0, 1.0);
+    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+    glTranslatef(pos.x, pos.y, 0);
+
+    { // Apply modelview matrix to texture matrix so that we can
+      // give texcoords as screencords
+      GLdouble m[16];
+      glMatrixMode(GL_MODELVIEW);
+      glGetDoublev(GL_MODELVIEW_MATRIX, m);
+      glMatrixMode(GL_TEXTURE);
+      glLoadIdentity();
+      glTranslatef(0, 599, 0);
+      glScalef(1, -1, 1);
+      glMultMatrixd(m);
+
+      //glLoadMatrixd(m);
+    }
+
+    int count = int(radius);
+    OpenGLState state;
+    state.bind_texture(screen_texture, 0);
+    state.activate();
+
+    float rad = static_cast<float>(count)*2.0f + 20.0f; // enlarge radius by 20.0f to handle texture displacement 
+    float minradius = 2.0f * static_cast<float>(count) - 164.0f;
+    if (minradius < 0)
+      minradius = 0;
+
+    int segments = 64;
+
+    glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+  
+    glBegin(GL_QUADS);
+    for (int i = 0; i < segments; ++i)
+      {
+        float angel = 2.0f * math::pi / static_cast<float>(segments);
+
+        float x1 =  sinf(angel*static_cast<float>(i))*rad;
+        float y1 = -cosf(angel*static_cast<float>(i))*rad;
+
+        float x2 =  sinf(angel*(static_cast<float>(i)+1))*rad;
+        float y2 = -cosf(angel*(static_cast<float>(i)+1))*rad;
+
+        glTexCoord2f(x1+256, (y1+256));
+        glVertex3f(x1+256, y1+256, 0);
+
+        glTexCoord2f(x2+256, (y2+256));
+        glVertex3f(x2+256, y2+256, 0);
+
+        float x3 =  sinf(angel*static_cast<float>(i))*minradius;
+        float y3 = -cosf(angel*static_cast<float>(i))*minradius;
+
+        float x4 =  sinf(angel*(static_cast<float>(i)+1))*minradius;
+        float y4 = -cosf(angel*(static_cast<float>(i)+1))*minradius;
+
+        glTexCoord2f(x4+256, (y4+256));
+        glVertex3f(x4+256, y4+256, 0);
+        glTexCoord2f(x3+256, (y3+256));
+        glVertex3f(x3+256, y3+256, 0);
+      }
+    glEnd();
+
+    glMatrixMode(GL_TEXTURE);
+    glLoadIdentity();
+    glMatrixMode(GL_MODELVIEW);
+
+    glPopMatrix();
+  }
+
+  void draw(const Texture& tmp_texture)
+  {
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+    glTranslatef(pos.x, pos.y, 0);
+    if (0)
+      {
+        Rectf rect(0, 0, 800, 600);
+        // Render the screen framebuffer to the actual screen 
+        OpenGLState state;
+        state.bind_texture(tmp_texture, 0);
+        state.activate();
+
+        glBegin(GL_QUADS);
+    
+        glTexCoord2f(rect.left, rect.bottom);
+        glVertex2f(rect.left/2.0f, rect.bottom/2.0f);
+
+        glTexCoord2f(rect.right, rect.bottom);
+        glVertex2f(rect.right/2.0f, rect.bottom/2.0f);
+
+        glTexCoord2f(rect.right, rect.top);
+        glVertex2f(rect.right/2.0f, rect.top/2.0f);
+
+        glTexCoord2f(rect.left, rect.top);
+        glVertex2f(rect.left/2.0f, rect.top/2.0f);
+    
+        glEnd();
+      }
+    else
+      {
+        OpenGLState state;
+        state.bind_texture(tmp_texture, 0);
+        state.bind_texture(noise, 1);
+        state.enable(GL_BLEND);
+        state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+        state.activate();
+
+        glUseProgramObjectARB(shader_program.get_handle());    
+        shader_program.set_uniform1f("radius",   radius/512.0f*2.0f);
+        shader_program.set_uniform1i("background_tex", 0);
+        shader_program.set_uniform1i("noise_tex",   1);
+        draw_disc(int(radius));
+        glUseProgramObjectARB(0);
+      }
+    glPopMatrix();
+  }
+
+  void draw_disc(int count)
+  {
+    float rad = static_cast<float>(count)*2.0f;
+    float minradius = 2.0f * static_cast<float>(count) - 164.0f;
+    if (minradius < 0)
+      minradius = 0;
+
+    int segments = 64;
+  
+    glBegin(GL_QUADS);
+    for (int i = 0; i < segments; ++i)
+      {
+        float angel = 2.0f * math::pi / static_cast<float>(segments);
+
+        float x1 =  sinf(angel*static_cast<float>(i))*rad;
+        float y1 = -cosf(angel*static_cast<float>(i))*rad;
+
+        float x2 =  sinf(angel*(static_cast<float>(i)+1))*rad;
+        float y2 = -cosf(angel*(static_cast<float>(i)+1))*rad;
+
+        glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+        glTexCoord2f(x1/512.0f+0.5f, y1/512.0f+0.5f);
+        glVertex3f(x1+256, y1+256, 0);
+
+        glTexCoord2f(x2/512.0f+0.5f, y2/512.0f+0.5f);
+        glVertex3f(x2+256, y2+256, 0);
+
+        float x3 =  sinf(angel*static_cast<float>(i))*minradius;
+        float y3 = -cosf(angel*static_cast<float>(i))*minradius;
+
+        float x4 =  sinf(angel*(static_cast<float>(i)+1))*minradius;
+        float y4 = -cosf(angel*(static_cast<float>(i)+1))*minradius;
+
+        glColor4f(1.0f, 1.0f, 1.0f, 0.0f);
+        glTexCoord2f(x4/512.0f+0.5f, y4/512.0f+0.5f);
+        glVertex3f(x4+256, y4+256, 0);
+        glTexCoord2f(x3/512.0f+0.5f, y3/512.0f+0.5f);
+        glVertex3f(x3+256, y3+256, 0);
+      }
+    glEnd();
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/shockwave_drawable.hpp
___________________________________________________________________
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Sat Aug 29 14:50:07 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 14:50:07 +0200
Subject: [Windstille-commit] r3126 - in trunk/windstille/src: engine objects
	scenegraph screen sprite3d
Message-ID: <200908291250.n7TCo77m011482@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 14:50:04 +0200 (Sat, 29 Aug 2009)
New Revision: 3126

Added:
   trunk/windstille/src/objects/doll.cpp
   trunk/windstille/src/objects/doll.hpp
Modified:
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
Log:
Created Doll class for use with NavigationGraph

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/engine/camera.cpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -19,6 +19,7 @@
 #include "engine/camera.hpp"
 
 #include "objects/player.hpp"
+#include "objects/doll.hpp"
 #include "engine/script_manager.hpp"
 #include "display/display.hpp"
 
@@ -81,7 +82,11 @@
         float hscroll_threshold = 100.0f;
         float vscroll_threshold  = 150.0f;
 
-        Vector2f tpos = Player::current()->get_pos();
+        Vector2f tpos;
+        if (Player::current())
+          tpos = Player::current()->get_pos();
+        else if (Doll::current())
+          tpos = Doll::current()->get_pos();
 
         float dist = tpos.x - pos.x;
         if (dist > hscroll_threshold)

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -32,6 +32,7 @@
 #include "objects/liquid.hpp"
 #include "objects/nightvision.hpp"
 #include "objects/player.hpp"
+#include "objects/doll.hpp"
 #include "objects/scriptable_object.hpp"
 #include "objects/shockwave.hpp"
 #include "objects/spider_mine.hpp"
@@ -72,14 +73,18 @@
   {
     // add interactive to collision engine
     collision_engine->add(new CollisionObject(interactive_tilemap));
+
+    // Spawn the Player
+    player = new Player();
+    player->set_pos(Vector2f(300,200));
+    add(player);
   }
+  else
+  {
+    doll = new Doll();
+    add(doll);
+  }
 
-  // Spawn the Player
-  player = new Player();
-  add(player);
-
-  player->set_pos(Vector2f(300,200));
-
   scene_graph->add_drawable(boost::shared_ptr<Drawable>(new NavigationGraphDrawable(navigation_graph.get())));
 }
 

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/engine/sector.hpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -39,6 +39,7 @@
 class SquirrelThread;
 class TileMap;
 class SceneGraph;
+class Doll;
 
 /** */
 class Sector : public Currenton<Sector>
@@ -68,6 +69,7 @@
   TileMap* interactivebackground_tilemap;
 
   Player* player;
+  Doll*   doll;
 
   std::map<std::string, GameObject*> id_table;
   std::map<GameObject*, std::string> parent_table;
@@ -108,6 +110,7 @@
 
   CollisionEngine* get_collision_engine() const { return collision_engine.get(); }
   SceneGraph& get_scene_graph() const { return *scene_graph; }
+  NavigationGraph& get_navigation_graph() const { return *navigation_graph; }
 
   GameObject* get_object(const std::string& name) const;
 

Added: trunk/windstille/src/objects/doll.cpp
===================================================================
--- trunk/windstille/src/objects/doll.cpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/objects/doll.cpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -0,0 +1,131 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "scenegraph/sprite3d_drawable.hpp"
+#include "scenegraph/scene_graph.hpp"
+#include "engine/sector.hpp"
+#include "input/controller.hpp"
+#include "math/line.hpp"
+#include "navigation/edge_position.hpp"
+#include "navigation/edge.hpp"
+#include "navigation/node.hpp"
+#include "navigation/navigation_graph.hpp"
+
+#include "objects/doll.hpp"
+
+Doll::Doll()
+  : m_drawable(),
+    m_pos(200, 600),
+    m_last_pos(m_pos),
+    m_edge_position()
+{
+  Sprite3D sprite(Pathname("models/characters/jane/jane.wsprite"));
+  m_drawable.reset(new Sprite3DDrawable(sprite, m_pos, 100.0f, Matrix::identity()));
+  m_drawable->set_scale(2.0f);
+
+  Sector::current()->get_scene_graph().add_drawable(m_drawable);
+
+  m_drawable->get_sprite().set_next_action("Walk");
+}
+
+Doll::~Doll()
+{
+}
+
+void
+Doll::update (float /*delta*/)
+{
+}
+
+void
+Doll::update(const Controller& controller, float delta)
+{
+  if (m_edge_position.get())
+  {
+    Node* next_node = 0;
+    Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 1000.0f,
+                   controller.get_axis_state(Y_AXIS) * delta * 1000.0f);
+    Vector2f adv(stick);
+    m_edge_position->advance(adv, 
+                             next_node);
+      
+    if (!adv.is_null())
+    { // Not all advancement got used up, which means we have hit
+      // the end of a edge
+
+      // FIXME: This should be a while loop, currently we are just
+      // discarding the rest movement
+
+      EdgePosition next_edge;
+      float length = 0;
+      for(Node::Edges::iterator i = next_node->edges.begin(); i != next_node->edges.end(); ++i)
+      {
+        if (m_edge_position->get_edge() != i->edge)
+        { // Find out into the direction of which edge the stick is pointing
+          Vector2f proj = stick.project(i->edge->get_vector());
+                  
+          if (proj.length() > length)
+          {
+            next_edge = *i;
+            length    = proj.length();
+          }
+        }
+      }
+              
+      if (!next_edge.edge)
+      {
+        /*
+          std::cout << "Dead End" << std::endl;
+          m_edge_position.reset();
+
+          // FIXME: Voodoo to fix connection/deadend cicles
+          player += stick;
+          old_player = player;
+        */
+      }
+      else
+      {
+        std::cout << "transition: " << next_edge << std::endl;
+        *m_edge_position = next_edge;
+      }
+    }
+
+    m_pos = m_edge_position->get_pos();
+  }
+  else
+  {
+    m_pos.x += controller.get_axis_state(X_AXIS) * delta * 1000.0f;
+    m_pos.y += controller.get_axis_state(Y_AXIS) * delta * 1000.0f;
+
+    const std::vector<EdgePosition>& intersections =
+      Sector::current()->get_navigation_graph().find_intersections(Line(m_last_pos, m_pos));
+
+    if (!intersections.empty())
+    {
+      std::cout << "Attaching to navgraph" << std::endl;
+      m_edge_position.reset(new EdgePosition(intersections.front()));
+    }
+
+    m_last_pos = m_pos;
+  }
+
+  m_drawable->get_sprite().update(delta);
+  m_drawable->set_pos(m_pos);
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/objects/doll.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/objects/doll.hpp
===================================================================
--- trunk/windstille/src/objects/doll.hpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/objects/doll.hpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -0,0 +1,58 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_OBJECTS_DOLL_HPP
+#define HEADER_WINDSTILLE_OBJECTS_DOLL_HPP
+
+#include <boost/shared_ptr.hpp>
+
+#include "math/vector2f.hpp"
+#include "engine/game_object.hpp"
+#include "util/currenton.hpp"
+
+class Sprite3DDrawable;
+class Controller;
+class EdgePosition;
+
+class Doll : public GameObject,
+             public Currenton<Doll>
+{
+private:
+  boost::shared_ptr<Sprite3DDrawable> m_drawable;
+  Vector2f m_pos;
+  Vector2f m_last_pos;
+  boost::scoped_ptr<EdgePosition> m_edge_position;
+  
+public:
+  Doll();
+  ~Doll();
+
+  void draw (SceneContext& ) {}
+  void update (float delta);
+  void update(const Controller& controller, float delta);
+  
+  Vector2f get_pos() const { return m_pos; }
+
+private:
+  Doll(const Doll&);
+  Doll& operator=(const Doll&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/objects/doll.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/objects/player.cpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -79,9 +79,8 @@
   weapon.reset(new Pistol());
   laser_pointer = ((Pistol*)weapon.get())->laser_pointer;
 
-  m_drawable.reset(new Sprite3DDrawable(&sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
+  m_drawable.reset(new Sprite3DDrawable(sprite, Vector2f(200, 600), 100.0f, Matrix::identity()));
   Sector::current()->get_scene_graph().add_drawable(m_drawable);
-  m_drawable->set_scale(2.0f);
 }
 
 Player::~Player()

Modified: trunk/windstille/src/scenegraph/sprite3d_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/scenegraph/sprite3d_drawable.hpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -25,11 +25,11 @@
 class Sprite3DDrawable : public Drawable
 {
 private:
-  Sprite3D* m_sprite;
-  float m_scale;
+  Sprite3D m_sprite;
+  float    m_scale;
 
 public:
-  Sprite3DDrawable(Sprite3D* sprite, 
+  Sprite3DDrawable(const Sprite3D& sprite, 
                    const Vector2f& pos_, float z_pos_, const Matrix& modelview_)
     : Drawable(pos_, z_pos_, modelview_), 
       m_sprite(sprite),
@@ -41,7 +41,7 @@
     Matrix matrix = modelview;
     matrix = matrix.translate(pos.x, pos.y, z_pos);
     matrix = matrix.scale(m_scale, m_scale, m_scale);
-    m_sprite->draw(Vector2f(0.0f, 0.0f), matrix);
+    m_sprite.draw(Vector2f(0.0f, 0.0f), matrix);
   }
 
   void set_pos(const Vector2f& pos_)
@@ -59,7 +59,7 @@
     m_scale = scale;
   }
 
-  Sprite3D* get_sprite() const
+  Sprite3D& get_sprite()
   { 
     return m_sprite; 
   }

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -30,6 +30,7 @@
 #include "hud/pda.hpp"
 #include "hud/speech_manager.hpp"
 #include "objects/player.hpp"
+#include "objects/doll.hpp"
 #include "screen/screen_manager.hpp"
 #include "screen/view.hpp"
 #include "sound/sound_manager.hpp"
@@ -290,7 +291,12 @@
   else
     {
       if (!current_gui)
-        Player::current()->update(controller, delta);
+      {
+        if (Player::current())
+          Player::current()->update(controller, delta);
+        else if (Doll::current())
+          Doll::current()->update(controller, delta);
+      }
     }
 
   if (current_gui)

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-29 10:53:15 UTC (rev 3125)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-08-29 12:50:04 UTC (rev 3126)
@@ -329,13 +329,13 @@
 void
 Sprite3D::draw(DrawingContext& dc, const Vector2f& pos, float z_pos)
 {
-  dc.draw(new Sprite3DDrawable(this, pos, z_pos, dc.get_modelview()));
+  dc.draw(new Sprite3DDrawable(*this, pos, z_pos, dc.get_modelview()));
 }
 
 void
 Sprite3D::draw(DrawingContext& dc, const Matrix& , float )
 {
-  dc.draw(new Sprite3DDrawable(this, Vector2f(0, 0), 0.0f, dc.get_modelview()));
+  dc.draw(new Sprite3DDrawable(*this, Vector2f(0, 0), 0.0f, dc.get_modelview()));
 }
 
 static inline float interpolate(float v1, float v2, float t)



From grumbel at mail.berlios.de  Sat Aug 29 21:40:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 21:40:19 +0200
Subject: [Windstille-commit] r3127 - trunk/windstille/src/math
Message-ID: <200908291940.n7TJeJc7013494@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 21:40:19 +0200 (Sat, 29 Aug 2009)
New Revision: 3127

Modified:
   trunk/windstille/src/math/vector2f.cpp
   trunk/windstille/src/math/vector2f.hpp
Log:
Const cleanup in Vector2f

Modified: trunk/windstille/src/math/vector2f.cpp
===================================================================
--- trunk/windstille/src/math/vector2f.cpp	2009-08-29 12:50:04 UTC (rev 3126)
+++ trunk/windstille/src/math/vector2f.cpp	2009-08-29 19:40:19 UTC (rev 3127)
@@ -47,15 +47,15 @@
 }
 
 Vector2f
-Vector2f::project(const Vector2f& b)
+Vector2f::project(const Vector2f& b) const
 {
-  float dp = this->dot(b);
+  float dp = dot(b);
   return Vector2f((dp / (b.x*b.x + b.y*b.y) ) * b.x,
-                (dp / (b.x*b.x + b.y*b.y) ) * b.y);
+                  (dp / (b.x*b.x + b.y*b.y) ) * b.y);
 }
 
 float
-Vector2f::dot(const Vector2f& b)
+Vector2f::dot(const Vector2f& b) const
 {
   return (x * b.x + y * b.y);
 }

Modified: trunk/windstille/src/math/vector2f.hpp
===================================================================
--- trunk/windstille/src/math/vector2f.hpp	2009-08-29 12:50:04 UTC (rev 3126)
+++ trunk/windstille/src/math/vector2f.hpp	2009-08-29 19:40:19 UTC (rev 3127)
@@ -120,7 +120,7 @@
   }
 
   /** Project vecter a onto vector b and return the resulting vector */
-  Vector2f project(const Vector2f& b);
+  Vector2f project(const Vector2f& b) const;
 
   float magnitude() const;
   float length() const { return magnitude(); }
@@ -128,7 +128,7 @@
   Vector2f unit() const;
   void   normalize();
 
-  float dot(const Vector2f& b);
+  float dot(const Vector2f& b) const;
 
   bool is_null() const;
 



From grumbel at mail.berlios.de  Sat Aug 29 21:53:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 21:53:28 +0200
Subject: [Windstille-commit] r3128 - trunk/windstille/src/objects
Message-ID: <200908291953.n7TJrShH014901@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 21:53:28 +0200 (Sat, 29 Aug 2009)
New Revision: 3128

Modified:
   trunk/windstille/src/objects/doll.cpp
   trunk/windstille/src/objects/doll.hpp
Log:
Rewrote state handling to a proper FSM

Modified: trunk/windstille/src/objects/doll.cpp
===================================================================
--- trunk/windstille/src/objects/doll.cpp	2009-08-29 19:40:19 UTC (rev 3127)
+++ trunk/windstille/src/objects/doll.cpp	2009-08-29 19:53:28 UTC (rev 3128)
@@ -30,9 +30,11 @@
 
 Doll::Doll()
   : m_drawable(),
+    m_velocity(),
     m_pos(200, 600),
     m_last_pos(m_pos),
-    m_edge_position()
+    m_edge_position(),
+    m_state(kNoState)
 {
   Sprite3D sprite(Pathname("models/characters/jane/jane.wsprite"));
   m_drawable.reset(new Sprite3DDrawable(sprite, m_pos, 100.0f, Matrix::identity()));
@@ -40,7 +42,7 @@
 
   Sector::current()->get_scene_graph().add_drawable(m_drawable);
 
-  m_drawable->get_sprite().set_next_action("Walk");
+  set_state_falling();
 }
 
 Doll::~Doll()
@@ -55,15 +57,189 @@
 void
 Doll::update(const Controller& controller, float delta)
 {
+  Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 200.0f,
+                 controller.get_axis_state(Y_AXIS) * delta * 200.0f);
+
+  switch(m_state)
+  {
+    case kFalling:  update_falling(controller, delta);  break;
+    case kWalking:  update_walking(controller, delta);  break;
+    case kRunning:  update_running(controller, delta);  break;
+    case kStanding: update_standing(controller, delta); break;
+    case kDucking:  update_ducking(controller, delta);  break;
+    case kNoState:  break;
+  }
+
+  m_drawable->get_sprite().update(delta);
+  m_drawable->set_pos(m_pos);
+  m_last_pos = m_pos;
+}
+
+void
+Doll::set_state_falling()
+{
+  if (m_state != kFalling)
+  {
+    m_state = kFalling;
+  }
+}
+
+void
+Doll::set_state_standing()
+{
+  if (m_state != kStanding)
+  {
+    m_state = kStanding;
+    m_drawable->get_sprite().set_action("Stand");
+  }
+}
+
+void
+Doll::set_state_walking()
+{
+  if (m_state != kWalking)
+  {
+    m_state = kWalking;
+    m_drawable->get_sprite().set_action("Walk");
+  }
+}
+
+void
+Doll::set_state_running()
+{
+  if (m_state != kRunning)
+  {
+    m_state = kRunning;
+    m_drawable->get_sprite().set_action("Run");
+  }
+}
+
+void
+Doll::set_state_ducking()
+{
+  if (m_state != kDucking)
+  {
+    m_state = kDucking;
+    m_drawable->get_sprite().set_action("StandToDuck");
+    m_drawable->get_sprite().set_next_action("Ducking");
+  }
+}
+
+void
+Doll::update_falling(const Controller& controller, float delta)
+{
+  Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 200.0f,
+                 controller.get_axis_state(Y_AXIS) * delta * 200.0f);
+
+  m_pos += stick;
+  m_pos.y += 1000.0f * delta;
+
+  const std::vector<EdgePosition>& intersections =
+    Sector::current()->get_navigation_graph().find_intersections(Line(m_last_pos, m_pos));
+
+  if (!intersections.empty())
+  {
+    std::cout << "Attaching to navgraph" << std::endl;
+    m_edge_position.reset(new EdgePosition(intersections.front()));
+    set_state_standing();
+  }
+}
+
+void
+Doll::update_standing(const Controller& controller, float /*delta*/)
+{
+  if (controller.get_axis_state(Y_AXIS) > 0)
+  {
+    set_state_ducking();
+  }
+  else if (controller.get_axis_state(X_AXIS) > 0 ||
+           controller.get_axis_state(X_AXIS) < 0)
+  {
+    if (controller.get_button_state(RUN_BUTTON))
+    {
+      set_state_running();
+    }
+    else
+    {
+      set_state_walking();
+    }
+  }
+}
+
+void
+Doll::update_walking(const Controller& controller, float delta)
+{
+  Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 200.0f,
+                 controller.get_axis_state(Y_AXIS) * delta * 200.0f);  
+  walk(stick);
+
+  if (controller.get_axis_state(X_AXIS) == 0)
+  {
+    set_state_standing();
+  }
+  else if (controller.get_button_state(RUN_BUTTON))
+  {
+    set_state_running();
+  }
+}
+
+void
+Doll::update_running(const Controller& controller, float delta)
+{
+  Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 200.0f,
+                 controller.get_axis_state(Y_AXIS) * delta * 200.0f);
+
+  walk(stick * 2.5f);
+
+  if (controller.get_axis_state(X_AXIS) == 0)
+  {
+    set_state_standing();
+  }
+  else if (!controller.get_button_state(RUN_BUTTON))
+  {
+    set_state_walking();
+  }
+}
+
+void
+Doll::update_ducking(const Controller& controller, float /*delta*/)
+{ 
+  if (controller.get_axis_state(Y_AXIS) < 0)
+  {
+    set_state_standing();
+  }
+  else if (controller.get_axis_state(X_AXIS) > 0 ||
+           controller.get_axis_state(X_AXIS) < 0)
+  {
+    if (controller.get_button_state(RUN_BUTTON))
+    {
+      set_state_running();
+    }
+    else
+    {
+      set_state_walking();
+    }
+  }
+}
+
+void
+Doll::walk(const Vector2f& adv_)
+{
+  if (adv_.x > 0)
+  {
+    m_drawable->get_sprite().set_rot(true);
+  }
+  else if (adv_.x < 0)
+  {
+    m_drawable->get_sprite().set_rot(false);
+  }
+
   if (m_edge_position.get())
   {
     Node* next_node = 0;
-    Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 1000.0f,
-                   controller.get_axis_state(Y_AXIS) * delta * 1000.0f);
-    Vector2f adv(stick);
-    m_edge_position->advance(adv, 
-                             next_node);
-      
+    Vector2f adv(adv_);
+    m_edge_position->advance(adv, next_node);
+
     if (!adv.is_null())
     { // Not all advancement got used up, which means we have hit
       // the end of a edge
@@ -77,7 +253,7 @@
       {
         if (m_edge_position->get_edge() != i->edge)
         { // Find out into the direction of which edge the stick is pointing
-          Vector2f proj = stick.project(i->edge->get_vector());
+          Vector2f proj = adv_.project(i->edge->get_vector());
                   
           if (proj.length() > length)
           {
@@ -100,32 +276,13 @@
       }
       else
       {
-        std::cout << "transition: " << next_edge << std::endl;
+        //std::cout << "transition: " << next_edge << std::endl;
         *m_edge_position = next_edge;
       }
     }
 
     m_pos = m_edge_position->get_pos();
   }
-  else
-  {
-    m_pos.x += controller.get_axis_state(X_AXIS) * delta * 1000.0f;
-    m_pos.y += controller.get_axis_state(Y_AXIS) * delta * 1000.0f;
-
-    const std::vector<EdgePosition>& intersections =
-      Sector::current()->get_navigation_graph().find_intersections(Line(m_last_pos, m_pos));
-
-    if (!intersections.empty())
-    {
-      std::cout << "Attaching to navgraph" << std::endl;
-      m_edge_position.reset(new EdgePosition(intersections.front()));
-    }
-
-    m_last_pos = m_pos;
-  }
-
-  m_drawable->get_sprite().update(delta);
-  m_drawable->set_pos(m_pos);
 }
 
 /* EOF */

Modified: trunk/windstille/src/objects/doll.hpp
===================================================================
--- trunk/windstille/src/objects/doll.hpp	2009-08-29 19:40:19 UTC (rev 3127)
+++ trunk/windstille/src/objects/doll.hpp	2009-08-29 19:53:28 UTC (rev 3128)
@@ -29,14 +29,26 @@
 class Controller;
 class EdgePosition;
 
+/** A controllable character */
 class Doll : public GameObject,
              public Currenton<Doll>
 {
 private:
+  enum State {
+    kNoState,
+    kFalling,
+    kWalking,
+    kRunning,
+    kStanding,
+    kDucking
+  };
+
   boost::shared_ptr<Sprite3DDrawable> m_drawable;
+  Vector2f m_velocity;
   Vector2f m_pos;
   Vector2f m_last_pos;
   boost::scoped_ptr<EdgePosition> m_edge_position;
+  State m_state;
   
 public:
   Doll();
@@ -49,6 +61,21 @@
   Vector2f get_pos() const { return m_pos; }
 
 private:
+  void walk(const Vector2f& adv);
+
+  void set_state_falling();
+  void set_state_standing();
+  void set_state_walking();
+  void set_state_running();
+  void set_state_ducking();
+
+  void update_falling(const Controller& controller, float delta);
+  void update_standing(const Controller& controller, float delta);
+  void update_walking(const Controller& controller, float delta);
+  void update_running(const Controller& controller, float delta);
+  void update_ducking(const Controller& controller, float delta);
+
+private:
   Doll(const Doll&);
   Doll& operator=(const Doll&);
 };



From grumbel at mail.berlios.de  Sat Aug 29 22:04:11 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 22:04:11 +0200
Subject: [Windstille-commit] r3129 - trunk/windstille/src/objects
Message-ID: <200908292004.n7TK4BjK015934@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 22:04:11 +0200 (Sat, 29 Aug 2009)
New Revision: 3129

Modified:
   trunk/windstille/src/objects/doll.cpp
   trunk/windstille/src/objects/doll.hpp
Log:
Added up jump

Modified: trunk/windstille/src/objects/doll.cpp
===================================================================
--- trunk/windstille/src/objects/doll.cpp	2009-08-29 19:53:28 UTC (rev 3128)
+++ trunk/windstille/src/objects/doll.cpp	2009-08-29 20:04:11 UTC (rev 3129)
@@ -67,6 +67,7 @@
     case kRunning:  update_running(controller, delta);  break;
     case kStanding: update_standing(controller, delta); break;
     case kDucking:  update_ducking(controller, delta);  break;
+    case kJumpUp:   update_jump_up(controller, delta);  break;
     case kNoState:  break;
   }
 
@@ -76,6 +77,16 @@
 }
 
 void
+Doll::set_state_jump_up()
+{
+  if (m_state != kJumpUp)
+  {
+    m_state = kJumpUp;
+    m_drawable->get_sprite().set_next_action("JumpUp");
+  }
+}
+
+void
 Doll::set_state_falling()
 {
   if (m_state != kFalling)
@@ -152,6 +163,11 @@
   {
     set_state_ducking();
   }
+  else if (controller.get_button_state(JUMP_BUTTON))
+  {
+    std::cout << "Jump Up" << std::endl;
+    set_state_jump_up();
+  }
   else if (controller.get_axis_state(X_AXIS) > 0 ||
            controller.get_axis_state(X_AXIS) < 0)
   {
@@ -223,6 +239,15 @@
 }
 
 void
+Doll::update_jump_up(const Controller& controller, float /*delta*/)
+{
+  if (!controller.get_button_state(JUMP_BUTTON))
+  {
+    set_state_standing();
+  }  
+}
+
+void
 Doll::walk(const Vector2f& adv_)
 {
   if (adv_.x > 0)

Modified: trunk/windstille/src/objects/doll.hpp
===================================================================
--- trunk/windstille/src/objects/doll.hpp	2009-08-29 19:53:28 UTC (rev 3128)
+++ trunk/windstille/src/objects/doll.hpp	2009-08-29 20:04:11 UTC (rev 3129)
@@ -40,7 +40,8 @@
     kWalking,
     kRunning,
     kStanding,
-    kDucking
+    kDucking,
+    kJumpUp
   };
 
   boost::shared_ptr<Sprite3DDrawable> m_drawable;
@@ -68,12 +69,14 @@
   void set_state_walking();
   void set_state_running();
   void set_state_ducking();
+  void set_state_jump_up();
 
   void update_falling(const Controller& controller, float delta);
   void update_standing(const Controller& controller, float delta);
   void update_walking(const Controller& controller, float delta);
   void update_running(const Controller& controller, float delta);
   void update_ducking(const Controller& controller, float delta);
+  void update_jump_up(const Controller& controller, float delta);
 
 private:
   Doll(const Doll&);



From grumbel at mail.berlios.de  Sat Aug 29 22:23:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 29 Aug 2009 22:23:16 +0200
Subject: [Windstille-commit] r3130 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200908292023.n7TKNGAb017886@sheep.berlios.de>

Author: grumbel
Date: 2009-08-29 22:23:15 +0200 (Sat, 29 Aug 2009)
New Revision: 3130

Modified:
   trunk/windstille/data/sectors/trainstation/city.wst
   trunk/windstille/data/sectors/trainstation/toilet.wst
   trunk/windstille/data/sectors/trainstation/worker.wst
Log:
Added Navgraph to a few maps

Modified: trunk/windstille/data/sectors/trainstation/city.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/city.wst	2009-08-29 20:04:11 UTC (rev 3129)
+++ trunk/windstille/data/sectors/trainstation/city.wst	2009-08-29 20:23:15 UTC (rev 3130)
@@ -6,8 +6,21 @@
   (ambient-color 0.1 0.1 0.2 1)
   (init-script "init.nut")
   (navigation
-    (nodes)
-    (edges))
+    (nodes
+      (node
+        (id 1)
+        (pos -8130.64 694.114))
+      (node
+        (id 2)
+        (pos 7119.77 729.038))
+      (node
+        (id 3)
+        (pos -8351.83 729.038)))
+    (edges
+      (edge
+        (node1 2)
+        (node2 3)
+        (properties 0))))
   (objects
     (layer
       (name "Background")
@@ -15,7 +28,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xd5a6f00")
+          (id "0xa5492f8")
           (pos 1328 80)
           (parent "")
           (select-mask 1)
@@ -26,7 +39,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd34b78")
+          (id "0xa655a30")
           (pos 2513 80)
           (parent "")
           (select-mask 1)
@@ -42,7 +55,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xd5a4360")
+          (id "0xa656320")
           (pos 613 398)
           (parent "")
           (select-mask 1)
@@ -53,7 +66,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcfffe50")
+          (id "0xa656410")
           (pos 1145 398)
           (parent "")
           (select-mask 1)
@@ -64,7 +77,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd0000f8")
+          (id "0xa6564a0")
           (pos 1677 397)
           (parent "")
           (select-mask 1)
@@ -75,7 +88,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd4c9248")
+          (id "0xa67c588")
           (pos 2209 397)
           (parent "")
           (select-mask 1)
@@ -86,7 +99,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172758")
+          (id "0xa67c698")
           (pos 2741 397)
           (parent "")
           (select-mask 1)
@@ -97,7 +110,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172ec8")
+          (id "0xa67c768")
           (pos -2609 407)
           (parent "")
           (select-mask 1)
@@ -108,7 +121,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172c70")
+          (id "0xa67c8c0")
           (pos -2077 407)
           (parent "")
           (select-mask 1)
@@ -119,7 +132,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172fd0")
+          (id "0xa67d7c0")
           (pos -3141 407)
           (parent "")
           (select-mask 1)
@@ -130,7 +143,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd1722c0")
+          (id "0xa67cb10")
           (pos -4205 407)
           (parent "")
           (select-mask 1)
@@ -141,7 +154,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172480")
+          (id "0xa67d920")
           (pos -3673 407)
           (parent "")
           (select-mask 1)
@@ -152,7 +165,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd1725c8")
+          (id "0xa67d658")
           (pos -4737 407)
           (parent "")
           (select-mask 1)
@@ -163,7 +176,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd171b98")
+          (id "0xa67d428")
           (pos -5801 407)
           (parent "")
           (select-mask 1)
@@ -174,7 +187,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd1730d8")
+          (id "0xa67d4c8")
           (pos -5269 407)
           (parent "")
           (select-mask 1)
@@ -185,7 +198,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd171f30")
+          (id "0xa67a3a8")
           (pos -6333 407)
           (parent "")
           (select-mask 1)
@@ -196,7 +209,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172078")
+          (id "0xa67a550")
           (pos 3273 396)
           (parent "")
           (select-mask 1)
@@ -207,7 +220,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd171d50")
+          (id "0xa67cc90")
           (pos 3805 397)
           (parent "")
           (select-mask 1)
@@ -218,7 +231,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd1714a8")
+          (id "0xa67cfc8")
           (pos 4337 396)
           (parent "")
           (select-mask 1)
@@ -229,7 +242,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd1715f0")
+          (id "0xa67d0d8")
           (pos 4869 396)
           (parent "")
           (select-mask 1)
@@ -240,7 +253,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd171980")
+          (id "0xa67b738")
           (pos 5401 396)
           (parent "")
           (select-mask 1)
@@ -251,7 +264,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd1717f0")
+          (id "0xa67bbf8")
           (pos 5933 396)
           (parent "")
           (select-mask 1)
@@ -262,7 +275,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd171268")
+          (id "0xa67b988")
           (pos 6465 396)
           (parent "")
           (select-mask 1)
@@ -273,7 +286,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172848")
+          (id "0xa67c078")
           (pos 4631 455)
           (parent "")
           (select-mask 1)
@@ -284,7 +297,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd5a7d38")
+          (id "0xa67bd60")
           (pos 4558 464)
           (parent "")
           (select-mask 1)
@@ -295,7 +308,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd172920")
+          (id "0xa67c3d0")
           (pos 4599 378)
           (parent "")
           (select-mask 1)
@@ -311,7 +324,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xd581ed8")
+          (id "0xa67ad50")
           (pos 858 689)
           (parent "")
           (select-mask 1)
@@ -322,7 +335,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd581f98")
+          (id "0xa654b78")
           (pos 704 418)
           (parent "")
           (select-mask 1)
@@ -333,7 +346,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce498d8")
+          (id "0xa655dd0")
           (pos 1974 744)
           (parent "")
           (select-mask 1)
@@ -344,7 +357,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd4779f8")
+          (id "0xa67c238")
           (pos 1397 489)
           (parent "")
           (select-mask 1)
@@ -355,7 +368,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcffcf30")
+          (id "0xa67a630")
           (pos -2291 573)
           (parent "")
           (select-mask 1)
@@ -366,7 +379,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd582030")
+          (id "0xa67a6c8")
           (pos -2855 737)
           (parent "")
           (select-mask 1)
@@ -377,7 +390,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd5820c0")
+          (id "0xa67b420")
           (pos 2870 735)
           (parent "")
           (select-mask 1)
@@ -388,7 +401,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd477d28")
+          (id "0xa67b250")
           (pos 4870 739)
           (parent "")
           (select-mask 1)
@@ -404,7 +417,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xcd32170")
+          (id "0xa6bd068")
           (pos 217 471)
           (parent "")
           (select-mask 1)
@@ -415,7 +428,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59f40")
+          (id "0xa6bd180")
           (pos 217 -41)
           (parent "")
           (select-mask 1)
@@ -426,7 +439,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd34fa8")
+          (id "0xa6bd688")
           (pos 217 -553)
           (parent "")
           (select-mask 1)
@@ -437,7 +450,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59fb0")
+          (id "0xa6bd568")
           (pos 643 -38)
           (parent "")
           (select-mask 1)
@@ -448,7 +461,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5a238")
+          (id "0xa67fe20")
           (pos 645 -550)
           (parent "")
           (select-mask 1)
@@ -459,7 +472,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd350f8")
+          (id "0xa67fcd8")
           (pos -131 -559)
           (parent "")
           (select-mask 1)
@@ -470,7 +483,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd35510")
+          (id "0xa67fbe0")
           (pos 48 -558)
           (parent "")
           (select-mask 1)
@@ -481,7 +494,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd35c58")
+          (id "0xa67dc08")
           (pos 236 -556)
           (parent "")
           (select-mask 1)
@@ -492,7 +505,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd35af0")
+          (id "0xa67e520")
           (pos -126 -45)
           (parent "")
           (select-mask 1)
@@ -503,7 +516,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd356c0")
+          (id "0xa67ebb0")
           (pos 53 -44)
           (parent "")
           (select-mask 1)
@@ -514,7 +527,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd35788")
+          (id "0xa67ecd0")
           (pos 241 -42)
           (parent "")
           (select-mask 1)
@@ -525,7 +538,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36230")
+          (id "0xa67e7c0")
           (pos 438 817)
           (parent "")
           (select-mask 1)
@@ -536,7 +549,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36a88")
+          (id "0xa67e9a8")
           (pos -807 471)
           (parent "")
           (select-mask 1)
@@ -547,7 +560,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36568")
+          (id "0xa67dd98")
           (pos -807 -41)
           (parent "")
           (select-mask 1)
@@ -558,7 +571,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36408")
+          (id "0xa67e008")
           (pos -807 -553)
           (parent "")
           (select-mask 1)
@@ -569,7 +582,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36648")
+          (id "0xa67def8")
           (pos -1831 471)
           (parent "")
           (select-mask 1)
@@ -580,7 +593,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36908")
+          (id "0xa67e200")
           (pos -1831 -41)
           (parent "")
           (select-mask 1)
@@ -591,7 +604,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd352b0")
+          (id "0xa67f090")
           (pos -1831 -553)
           (parent "")
           (select-mask 1)
@@ -602,7 +615,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd173318")
+          (id "0xa67f558")
           (pos 49 457)
           (parent "")
           (select-mask 1)
@@ -613,7 +626,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd35e30")
+          (id "0xa67f990")
           (pos -1495 498)
           (parent "")
           (select-mask 1)
@@ -624,7 +637,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce57dd0")
+          (id "0xa67f770")
           (pos -1003 -564)
           (parent "")
           (select-mask 1)
@@ -635,7 +648,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce580e8")
+          (id "0xa67f460")
           (pos -824 -563)
           (parent "")
           (select-mask 1)
@@ -646,7 +659,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce58a88")
+          (id "0xa67f228")
           (pos -636 -561)
           (parent "")
           (select-mask 1)
@@ -657,7 +670,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce58b68")
+          (id "0xa67f2c0")
           (pos -998 -50)
           (parent "")
           (select-mask 1)
@@ -668,7 +681,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce57fe0")
+          (id "0xa9d4e88")
           (pos -819 -49)
           (parent "")
           (select-mask 1)
@@ -679,7 +692,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce58d88")
+          (id "0xa9f85c0")
           (pos -631 -47)
           (parent "")
           (select-mask 1)
@@ -690,7 +703,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce591a8")
+          (id "0xaa1bcf8")
           (pos -1527 -34)
           (parent "")
           (select-mask 1)
@@ -701,7 +714,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59298")
+          (id "0xaa3f598")
           (pos -1715 -39)
           (parent "")
           (select-mask 1)
@@ -712,7 +725,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59020")
+          (id "0xaa62ce8")
           (pos -1894 -40)
           (parent "")
           (select-mask 1)
@@ -723,7 +736,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59680")
+          (id "0xaa86388")
           (pos -1532 -563)
           (parent "")
           (select-mask 1)
@@ -734,7 +747,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59818")
+          (id "0xaaa9a48")
           (pos -1720 -565)
           (parent "")
           (select-mask 1)
@@ -745,7 +758,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce598b8")
+          (id "0xaacd180")
           (pos -1899 -566)
           (parent "")
           (select-mask 1)
@@ -756,7 +769,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce58388")
+          (id "0xa832020")
           (pos -2237 -561)
           (parent "")
           (select-mask 1)
@@ -767,7 +780,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce58590")
+          (id "0xab14008")
           (pos -2239 -41)
           (parent "")
           (select-mask 1)
@@ -778,7 +791,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce58790")
+          (id "0xaaf08d0")
           (pos -1061 582)
           (parent "")
           (select-mask 1)
@@ -789,7 +802,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59be8")
+          (id "0xa831e08")
           (pos -810 477)
           (parent "")
           (select-mask 1)
@@ -800,7 +813,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce59a78")
+          (id "0xab602b8")
           (pos -628 478)
           (parent "")
           (select-mask 1)
@@ -811,7 +824,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xd5024b8")
+          (id "0xab60490")
           (pos -437 671)
           (parent "")
           (select-mask 1)
@@ -827,7 +840,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xcd0e950")
+          (id "0xa831bc0")
           (pos -2749 423)
           (parent "")
           (select-mask 1)
@@ -838,7 +851,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5a5d8")
+          (id "0xa656290")
           (pos -3388 422)
           (parent "")
           (select-mask 1)
@@ -854,7 +867,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xce5a798")
+          (id "0xa6bcd80")
           (pos 1470 471)
           (parent "")
           (select-mask 1)
@@ -870,7 +883,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xce4a010")
+          (id "0xab377d8")
           (pos 1271 855)
           (parent "")
           (select-mask 1)
@@ -881,7 +894,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0bf38")
+          (id "0xa6547e0")
           (pos 759 855)
           (parent "")
           (select-mask 1)
@@ -892,7 +905,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0be30")
+          (id "0xa6bd2d0")
           (pos 247 855)
           (parent "")
           (select-mask 1)
@@ -903,7 +916,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36ef0")
+          (id "0xa6545f8")
           (pos 2807 855)
           (parent "")
           (select-mask 1)
@@ -914,7 +927,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36bf0")
+          (id "0xa653fa0")
           (pos 2295 855)
           (parent "")
           (select-mask 1)
@@ -925,7 +938,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd36d10")
+          (id "0xa654038")
           (pos 1783 855)
           (parent "")
           (select-mask 1)
@@ -936,7 +949,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd33a88")
+          (id "0xa6540d0")
           (pos -777 855)
           (parent "")
           (select-mask 1)
@@ -947,7 +960,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd33c40")
+          (id "0xa654278")
           (pos -1289 855)
           (parent "")
           (select-mask 1)
@@ -958,7 +971,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd34008")
+          (id "0xa653360")
           (pos -1801 855)
           (parent "")
           (select-mask 1)
@@ -969,7 +982,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd33d90")
+          (id "0xa653038")
           (pos -265 855)
           (parent "")
           (select-mask 1)
@@ -980,7 +993,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd33848")
+          (id "0xa653110")
           (pos -2313 855)
           (parent "")
           (select-mask 1)
@@ -991,7 +1004,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd335d8")
+          (id "0xa653620")
           (pos -2825 855)
           (parent "")
           (select-mask 1)
@@ -1002,7 +1015,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd336c8")
+          (id "0xa6536b8")
           (pos -3337 855)
           (parent "")
           (select-mask 1)
@@ -1013,7 +1026,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd33760")
+          (id "0xa653c88")
           (pos -3849 854)
           (parent "")
           (select-mask 1)
@@ -1024,7 +1037,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd330a8")
+          (id "0xa6539d0")
           (pos -4361 854)
           (parent "")
           (select-mask 1)
@@ -1035,7 +1048,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd32860")
+          (id "0xa653a68")
           (pos -4873 854)
           (parent "")
           (select-mask 1)
@@ -1046,7 +1059,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd32a30")
+          (id "0xa653b00")
           (pos -5385 854)
           (parent "")
           (select-mask 1)
@@ -1057,7 +1070,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd331a0")
+          (id "0xac66bd0")
           (pos -5897 854)
           (parent "")
           (select-mask 1)
@@ -1068,7 +1081,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd32b08")
+          (id "0xac66ce0")
           (pos -6409 854)
           (parent "")
           (select-mask 1)
@@ -1079,7 +1092,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd32da0")
+          (id "0xac668c0")
           (pos -6921 854)
           (parent "")
           (select-mask 1)
@@ -1090,7 +1103,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd32ec0")
+          (id "0xac66918")
           (pos -7433 854)
           (parent "")
           (select-mask 1)
@@ -1101,7 +1114,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd32488")
+          (id "0xac669f8")
           (pos -7945 854)
           (parent "")
           (select-mask 1)
@@ -1112,7 +1125,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5b018")
+          (id "0xac66400")
           (pos -2215 -873)
           (parent "")
           (select-mask 1)
@@ -1123,7 +1136,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5b128")
+          (id "0xac65b08")
           (pos -1959 -873)
           (parent "")
           (select-mask 1)
@@ -1134,7 +1147,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5ac20")
+          (id "0xac65710")
           (pos -1703 -873)
           (parent "")
           (select-mask 1)
@@ -1145,7 +1158,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5ae00")
+          (id "0xac65780")
           (pos -1447 -873)
           (parent "")
           (select-mask 1)
@@ -1156,7 +1169,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5aa50")
+          (id "0xac658b8")
           (pos 601 -873)
           (parent "")
           (select-mask 1)
@@ -1167,7 +1180,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xce5a948")
+          (id "0xac659a0")
           (pos 345 -873)
           (parent "")
           (select-mask 1)
@@ -1178,7 +1191,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xce5b360")
+          (id "0xac653f0")
           (pos 89 -873)
           (parent "")
           (select-mask 1)
@@ -1189,7 +1202,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xce5b468")
+          (id "0xac66168")
           (pos -167 -873)
           (parent "")
           (select-mask 1)
@@ -1200,7 +1213,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xce5b578")
+          (id "0xac65e80")
           (pos -679 -873)
           (parent "")
           (select-mask 1)
@@ -1211,7 +1224,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xce7b730")
+          (id "0xac64f08")
           (pos -423 -873)
           (parent "")
           (select-mask 1)
@@ -1222,7 +1235,7 @@
           (hflip #t)
           (vflip #f))
         (decal
-          (id "0xcf5c010")
+          (id "0xac65040")
           (pos -935 -873)
           (parent "")
           (select-mask 1)
@@ -1233,7 +1246,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcf5c280")
+          (id "0xac64278")
           (pos -1191 -873)
           (parent "")
           (select-mask 1)
@@ -1244,7 +1257,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcf5c0f0")
+          (id "0xadc9578")
           (pos 3831 853)
           (parent "")
           (select-mask 1)
@@ -1255,7 +1268,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcf5c1f8")
+          (id "0xac65f20")
           (pos 3319 853)
           (parent "")
           (select-mask 1)
@@ -1266,7 +1279,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcefbc00")
+          (id "0xadc9720")
           (pos 5367 853)
           (parent "")
           (select-mask 1)
@@ -1277,7 +1290,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcf9c448")
+          (id "0xac64e20")
           (pos 4855 853)
           (parent "")
           (select-mask 1)
@@ -1288,7 +1301,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcf9c4b0")
+          (id "0xac643a8")
           (pos 4343 853)
           (parent "")
           (select-mask 1)
@@ -1299,7 +1312,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce5a488")
+          (id "0xac64568")
           (pos 6903 852)
           (parent "")
           (select-mask 1)
@@ -1310,7 +1323,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcfdc9b8")
+          (id "0xac64b38")
           (pos 6391 852)
           (parent "")
           (select-mask 1)
@@ -1321,7 +1334,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcfdc828")
+          (id "0xac64c40")
           (pos 5879 852)
           (parent "")
           (select-mask 1)
@@ -1337,7 +1350,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xce49ad8")
+          (id "0xade9958")
           (pos 525 612)
           (parent "")
           (select-mask 1)
@@ -1353,7 +1366,7 @@
       (locked #f)
       (objects
         (decal
-          (id "0xcd0d680")
+          (id "0xab378d0")
           (pos 2998 558)
           (parent "")
           (select-mask 1)
@@ -1364,7 +1377,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd34268")
+          (id "0xa8319c0")
           (pos 836 212)
           (parent "")
           (select-mask 1)
@@ -1375,7 +1388,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd34480")
+          (id "0xae0a380")
           (pos 985 221)
           (parent "")
           (select-mask 1)
@@ -1386,7 +1399,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0b580")
+          (id "0xae4c5f0")
           (pos 949 214)
           (parent "")
           (select-mask 1)
@@ -1397,7 +1410,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0ccb0")
+          (id "0xae1f200")
           (pos -1207 634)
           (parent "")
           (select-mask 1)
@@ -1408,7 +1421,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0cf68")
+          (id "0xae0a928")
           (pos -910 639)
           (parent "")
           (select-mask 1)
@@ -1419,7 +1432,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0cfc0")
+          (id "0xae8e8c8")
           (pos -912 619)
           (parent "")
           (select-mask 1)
@@ -1430,7 +1443,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0b800")
+          (id "0xae0a520")
           (pos -1208 615)
           (parent "")
           (select-mask 1)
@@ -1441,7 +1454,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0ba48")
+          (id "0xae0a6b8")
           (pos 2992 368)
           (parent "")
           (select-mask 1)
@@ -1452,7 +1465,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0d470")
+          (id "0xaec92d8")
           (pos 2999 380)
           (parent "")
           (select-mask 1)
@@ -1463,7 +1476,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0d330")
+          (id "0xae99790")
           (pos 3542 559)
           (parent "")
           (select-mask 1)
@@ -1474,7 +1487,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0d130")
+          (id "0xaf28720")
           (pos 3536 369)
           (parent "")
           (select-mask 1)
@@ -1485,7 +1498,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0c178")
+          (id "0xae995a0")
           (pos 3543 381)
           (parent "")
           (select-mask 1)
@@ -1496,7 +1509,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0ca90")
+          (id "0xaf2f450")
           (pos 4050 558)
           (parent "")
           (select-mask 1)
@@ -1507,7 +1520,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0c6c0")
+          (id "0xaf2f6a8")
           (pos 4044 368)
           (parent "")
           (select-mask 1)
@@ -1518,7 +1531,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0c9f8")
+          (id "0xaf2f508")
           (pos 4051 380)
           (parent "")
           (select-mask 1)
@@ -1529,7 +1542,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0bd00")
+          (id "0xaec9468")
           (pos 3549 485)
           (parent "")
           (select-mask 1)
@@ -1540,7 +1553,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0c818")
+          (id "0xae0aa88")
           (pos -3945 517)
           (parent "")
           (select-mask 1)
@@ -1551,7 +1564,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0c358")
+          (id "0xae0ab80")
           (pos -3951 327)
           (parent "")
           (select-mask 1)
@@ -1562,7 +1575,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xce49620")
+          (id "0xaf330e8")
           (pos -3944 339)
           (parent "")
           (select-mask 1)
@@ -1578,7 +1591,7 @@
       (locked #t)
       (objects
         (decal
-          (id "0xcd0dfa0")
+          (id "0xaf37368")
           (pos 689 326)
           (parent "")
           (select-mask 1)
@@ -1589,7 +1602,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0e778")
+          (id "0xa6c04b0")
           (pos -2229 315)
           (parent "")
           (select-mask 1)
@@ -1600,7 +1613,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0e830")
+          (id "0xaf36be0")
           (pos 2213 674)
           (parent "")
           (select-mask 1)
@@ -1611,7 +1624,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0f010")
+          (id "0xaf37108")
           (pos 909 162)
           (parent "")
           (select-mask 1)
@@ -1622,7 +1635,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0edf0")
+          (id "0xa652d98")
           (pos -1070 626)
           (parent "")
           (select-mask 1)
@@ -1633,7 +1646,7 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0xcd0d8c0")
+          (id "0xaf36eb0")
           (pos -1064 624)
           (parent "")
           (select-mask 1)

Modified: trunk/windstille/data/sectors/trainstation/toilet.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-29 20:04:11 UTC (rev 3129)
+++ trunk/windstille/data/sectors/trainstation/toilet.wst	2009-08-29 20:23:15 UTC (rev 3130)
@@ -6,17 +6,45 @@
   (ambient-color 0.5 0.5 0.5 1)
   (init-script "init.nut")
   (navigation
-    (nodes)
-    (edges))
+    (nodes
+      (node
+        (id 1)
+        (pos -189.582 408.703))
+      (node
+        (id 2)
+        (pos -192.023 792.004))
+      (node
+        (id 3)
+        (pos 1089.71 794.445))
+      (node
+        (id 4)
+        (pos 1092.16 396.496)))
+    (edges
+      (edge
+        (node1 1)
+        (node2 2)
+        (properties 0))
+      (edge
+        (node1 2)
+        (node2 3)
+        (properties 0))
+      (edge
+        (node1 3)
+        (node2 4)
+        (properties 0))
+      (edge
+        (node1 4)
+        (node2 1)
+        (properties 0))))
   (objects
     (layer
       (name "New Layer")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x1480b828")
-          (pos 1472 256)
+          (id "0xa056838")
+          (pos 895 663)
           (parent "")
           (select-mask 1)
           (path "images/objects/door.png")
@@ -26,8 +54,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ee8c8")
-          (pos 1398 267)
+          (id "0xa059970")
+          (pos 821 674)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -37,8 +65,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eea08")
-          (pos 1589 266)
+          (id "0xa058df0")
+          (pos 1012 673)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -48,8 +76,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14668770")
-          (pos 1448 124)
+          (id "0xa058c90")
+          (pos 871 531)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -59,8 +87,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14668838")
-          (pos 962 6)
+          (id "0xa05a730")
+          (pos 385 413)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -75,8 +103,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x14667b48")
-          (pos 448 320)
+          (id "0xa05a2a0")
+          (pos -129 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -86,8 +114,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146677a0")
-          (pos 448 64)
+          (id "0xa0b4fb0")
+          (pos -129 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -97,8 +125,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14667ed0")
-          (pos 448 192)
+          (id "0xa0b5078")
+          (pos -129 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -108,8 +136,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14667fb0")
-          (pos 576 320)
+          (id "0xa0b5180")
+          (pos -1 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -119,8 +147,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14688c90")
-          (pos 576 64)
+          (id "0xa0b57c8")
+          (pos -1 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -130,8 +158,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146a9040")
-          (pos 576 192)
+          (id "0xa0f5e60")
+          (pos -1 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -141,8 +169,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14668a80")
-          (pos 704 192)
+          (id "0xa0f5f70")
+          (pos 127 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -152,8 +180,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146c9298")
-          (pos 704 64)
+          (id "0xa0d5be8")
+          (pos 127 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -163,8 +191,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146d9630")
-          (pos 704 320)
+          (id "0xa116340")
+          (pos 127 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -174,8 +202,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146e9860")
-          (pos 832 320)
+          (id "0xa106078")
+          (pos 255 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -185,8 +213,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146e9728")
-          (pos 832 64)
+          (id "0xa126440")
+          (pos 255 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -196,8 +224,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14698e58")
-          (pos 832 192)
+          (id "0xa1466c8")
+          (pos 255 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -207,8 +235,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14709ad8")
-          (pos 960 320)
+          (id "0xa1467a0")
+          (pos 383 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -218,8 +246,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146f98c8")
-          (pos 960 64)
+          (id "0xa156960")
+          (pos 383 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -229,8 +257,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146f99b0")
-          (pos 960 192)
+          (id "0xa166b40")
+          (pos 383 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -240,8 +268,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14729e40")
-          (pos 1088 192)
+          (id "0xa176d10")
+          (pos 511 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -251,8 +279,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1473a008")
-          (pos 1088 64)
+          (id "0xa196fa8")
+          (pos 511 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -262,8 +290,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1475a3b8")
-          (pos 1088 320)
+          (id "0xa197068")
+          (pos 511 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -273,8 +301,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1474a1a8")
-          (pos 1472 64)
+          (id "0xa1c7700")
+          (pos 895 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -284,8 +312,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1474a290")
-          (pos 1345 192)
+          (id "0xa1a7228")
+          (pos 768 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -295,8 +323,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1477a720")
-          (pos 1344 64)
+          (id "0xa1b7420")
+          (pos 767 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -306,8 +334,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1478a8e8")
-          (pos 1344 320)
+          (id "0xa1d7800")
+          (pos 767 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -317,8 +345,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x147aac98")
-          (pos 1216 192)
+          (id "0xa1f7a68")
+          (pos 639 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -328,8 +356,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1479aa88")
-          (pos 1216 64)
+          (id "0xa1f7b48")
+          (pos 639 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -339,8 +367,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1479ab90")
-          (pos 1216 320)
+          (id "0xa2280e8")
+          (pos 639 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -350,8 +378,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x147cb008")
-          (pos 1600 192)
+          (id "0xa228150")
+          (pos 1023 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -361,8 +389,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x147eb520")
-          (pos 1600 64)
+          (id "0xa217ee0")
+          (pos 1023 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -372,8 +400,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x147fb608")
-          (pos 1600 320)
+          (id "0xa2382c8")
+          (pos 1023 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/walltiles.png")
@@ -385,11 +413,11 @@
     (layer
       (name "Shadow")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x14590148")
-          (pos 995 293)
+          (id "0xa2585b8")
+          (pos 418 700)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -399,8 +427,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146518f8")
-          (pos 1112 298)
+          (id "0xa05a440")
+          (pos 535 705)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -410,8 +438,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14651940")
-          (pos 1302 280)
+          (id "0xa056700")
+          (pos 725 687)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -421,8 +449,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eb078")
-          (pos 806 380)
+          (id "0xa268780")
+          (pos 229 787)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -432,8 +460,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14652820")
-          (pos 588 385)
+          (id "0xa278920")
+          (pos 11 792)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -443,8 +471,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14652670")
-          (pos 387 348)
+          (id "0xa2789a0")
+          (pos -190 755)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -454,8 +482,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x146526b8")
-          (pos 361 -38)
+          (id "0xa288fc0")
+          (pos -216 369)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -465,8 +493,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14652d70")
-          (pos 1679 -45)
+          (id "0xa289120")
+          (pos 1102 362)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -476,8 +504,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14666dd8")
-          (pos 1770 420)
+          (id "0xa0c5948")
+          (pos 1193 827)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -487,8 +515,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14666f80")
-          (pos 1667 162)
+          (id "0xa0c5a28")
+          (pos 1090 569)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -498,8 +526,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14652a08")
-          (pos 1150 396)
+          (id "0xa28a058")
+          (pos 573 803)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -509,8 +537,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14650fd8")
-          (pos 1329 325)
+          (id "0xa289ed0")
+          (pos 752 732)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -520,8 +548,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14650e30")
-          (pos 1134 413)
+          (id "0xa2891e8")
+          (pos 557 820)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -531,8 +559,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14667cd8")
-          (pos 1001 414)
+          (id "0xa2893e0")
+          (pos 424 821)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -542,8 +570,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14667930")
-          (pos 836 235)
+          (id "0xa289598")
+          (pos 259 642)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -555,11 +583,11 @@
     (layer
       (name "Objects")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x14590070")
-          (pos 784 293)
+          (id "0xa059fb0")
+          (pos 207 700)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet1.png")
@@ -569,8 +597,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ee390")
-          (pos 992 258)
+          (id "0xa296a30")
+          (pos 415 665)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet2.png")
@@ -580,8 +608,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1459c2c0")
-          (pos 1109 258)
+          (id "0xa0b5410")
+          (pos 532 665)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet2.png")
@@ -591,8 +619,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ee0a8")
-          (pos 639 297)
+          (id "0xa2ab038")
+          (pos 62 704)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet1.png")
@@ -602,8 +630,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x145bccf0")
-          (pos 646 257)
+          (id "0xa2b3590")
+          (pos 69 664)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door.png")
@@ -613,8 +641,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x145cd6f8")
-          (pos 494 297)
+          (id "0xa28a738")
+          (pos -83 704)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet1.png")
@@ -624,8 +652,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14613848")
-          (pos 502 257)
+          (id "0xa2c8088")
+          (pos -75 664)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door.png")
@@ -635,8 +663,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ed6c8")
-          (pos 862 256)
+          (id "0xa2bbac8")
+          (pos 285 663)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door2.png")
@@ -646,8 +674,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x145d9a68")
-          (pos 718 256)
+          (id "0xa30dcc0")
+          (pos 141 663)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door2.png")
@@ -657,8 +685,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14644910")
-          (pos 574 256)
+          (id "0xa30ddc8")
+          (pos -3 663)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door2.png")
@@ -668,8 +696,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x145d9740")
-          (pos 430 256)
+          (id "0xa336f38")
+          (pos -147 663)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door2.png")
@@ -679,8 +707,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1464cd30")
-          (pos 1297 174)
+          (id "0xa33b0f8")
+          (pos 720 581)
           (parent "")
           (select-mask 1)
           (path "images/decal/city_housewall.png")
@@ -690,8 +718,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14648a88")
-          (pos 1293 251)
+          (id "0xa30ded8")
+          (pos 716 658)
           (parent "")
           (select-mask 1)
           (path "images/decal/sink.png")
@@ -701,8 +729,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x145d98e0")
-          (pos 840 257)
+          (id "0xa2c7c90")
+          (pos 263 664)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_door_open2.png")
@@ -714,11 +742,11 @@
     (layer
       (name "Ground")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x143ed828")
-          (pos 1683 -53)
+          (id "0xa056c20")
+          (pos 1106 354)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -728,8 +756,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ed938")
-          (pos 1716 400)
+          (id "0xa056d10")
+          (pos 1139 807)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -739,8 +767,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eab58")
-          (pos 335 405)
+          (id "0xa057ef8")
+          (pos -242 812)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -750,8 +778,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x14402990")
-          (pos 366 -49)
+          (id "0xa057fd8")
+          (pos -211 358)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -761,8 +789,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ead20")
-          (pos 1472 448)
+          (id "0xa058198")
+          (pos 895 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -772,8 +800,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eae40")
-          (pos 1344 448)
+          (id "0xa058350")
+          (pos 767 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -783,8 +811,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eb5c8")
-          (pos 1216 448)
+          (id "0xa057928")
+          (pos 639 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -794,8 +822,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eb750")
-          (pos 1088 448)
+          (id "0xa0588b8")
+          (pos 511 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -805,8 +833,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eb870")
-          (pos 960 448)
+          (id "0xa057780")
+          (pos 383 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -816,8 +844,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x144027f0")
-          (pos 832 448)
+          (id "0xa3c8958")
+          (pos 255 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -827,8 +855,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eba00")
-          (pos 704 448)
+          (id "0xa3d4b10")
+          (pos 127 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -838,8 +866,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143eb3d0")
-          (pos 576 448)
+          (id "0xa3e0cd0")
+          (pos -1 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -849,8 +877,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ebd40")
-          (pos 448 448)
+          (id "0xa3ece90")
+          (pos -129 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -860,8 +888,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ec1e8")
-          (pos 1472 -64)
+          (id "0xa3f9050")
+          (pos 895 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -871,8 +899,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ebf98")
-          (pos 1344 -64)
+          (id "0xa405210")
+          (pos 767 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -882,8 +910,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ebb40")
-          (pos 1216 -64)
+          (id "0xa4113d0")
+          (pos 639 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -893,8 +921,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ec738")
-          (pos 1088 -64)
+          (id "0xa41d590")
+          (pos 511 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -904,8 +932,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ec848")
-          (pos 960 -64)
+          (id "0xa429750")
+          (pos 383 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -915,8 +943,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ec388")
-          (pos 832 -64)
+          (id "0xa435910")
+          (pos 255 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -926,8 +954,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x143ec948")
-          (pos 704 -64)
+          (id "0xa441ad0")
+          (pos 127 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -937,8 +965,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x1450ad70")
-          (pos 576 -64)
+          (id "0xa44dc90")
+          (pos -1 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -948,8 +976,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x14516f48")
-          (pos 448 -64)
+          (id "0xa459e50")
+          (pos -129 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -959,8 +987,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x145230a8")
-          (pos 1600 -64)
+          (id "0xa466010")
+          (pos 1023 343)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -970,8 +998,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x1452f250")
-          (pos 1600 448)
+          (id "0xa4721d0")
+          (pos 1023 855)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -981,8 +1009,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1453b3c8")
-          (pos 1728 320)
+          (id "0xa47e390")
+          (pos 1151 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -992,8 +1020,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x145475c8")
-          (pos 1728 192)
+          (id "0xa48a550")
+          (pos 1151 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -1003,8 +1031,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x14553768")
-          (pos 1728 64)
+          (id "0xa496710")
+          (pos 1151 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -1014,8 +1042,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1455f968")
-          (pos 320 64)
+          (id "0xa4a28d0")
+          (pos -257 471)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -1025,8 +1053,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x1456bb08")
-          (pos 320 192)
+          (id "0xa4aea90")
+          (pos -257 599)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -1036,8 +1064,8 @@
           (hflip #f)
           (vflip #t))
         (decal
-          (id "0x14577d08")
-          (pos 320 320)
+          (id "0xa4bac50")
+          (pos -257 727)
           (parent "")
           (select-mask 1)
           (path "images/decal/toilet_ground.png")
@@ -1049,11 +1077,11 @@
     (layer
       (name "Character")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x143ecf98")
-          (pos 1581 269)
+          (id "0xa4c6e70")
+          (pos 1004 676)
           (parent "")
           (select-mask 1)
           (path "images/decal/humanreference.png")
@@ -1065,11 +1093,11 @@
     (layer
       (name "Light")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects
         (decal
-          (id "0x143ed590")
-          (pos 1292 294)
+          (id "0xa289b80")
+          (pos 715 701)
           (parent "")
           (select-mask 1)
           (path "images/streetlamp-light.png")
@@ -1079,8 +1107,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ecbb0")
-          (pos 949 238)
+          (id "0xa056a50")
+          (pos 372 645)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_light.png")
@@ -1090,8 +1118,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x143ecc98")
-          (pos 958 5)
+          (id "0xa3bc758")
+          (pos 381 412)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1103,7 +1131,7 @@
     (layer
       (name "Scene")
       (visible #t)
-      (locked #t)
+      (locked #f)
       (objects))))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/worker.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-29 20:04:11 UTC (rev 3129)
+++ trunk/windstille/data/sectors/trainstation/worker.wst	2009-08-29 20:23:15 UTC (rev 3130)
@@ -6,8 +6,46 @@
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
   (navigation
-    (nodes)
-    (edges))
+    (nodes
+      (node
+        (id 1)
+        (pos -1749.87 666.882))
+      (node
+        (id 2)
+        (pos 1526 671.65))
+      (node
+        (id 3)
+        (pos 2117.28 671.65))
+      (node
+        (id 4)
+        (pos 864.109 21.5156))
+      (node
+        (id 5)
+        (pos 2039.89 23.4687))
+      (node
+        (id 6)
+        (pos -1032.38 27.3749)))
+    (edges
+      (edge
+        (node1 1)
+        (node2 2)
+        (properties 0))
+      (edge
+        (node1 2)
+        (node2 3)
+        (properties 0))
+      (edge
+        (node1 2)
+        (node2 4)
+        (properties 0))
+      (edge
+        (node1 4)
+        (node2 5)
+        (properties 0))
+      (edge
+        (node1 4)
+        (node2 6)
+        (properties 0))))
   (objects
     (layer
       (name "Background")
@@ -15,8 +53,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x175e9a10")
-          (pos 346.25 191.313)
+          (id "0x917d3b8")
+          (pos 355 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -26,8 +64,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175e96e0")
-          (pos 730.25 191.313)
+          (id "0x916f460")
+          (pos 739 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -37,8 +75,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175e87d0")
-          (pos 1498.25 191.313)
+          (id "0x916fe38")
+          (pos 1507 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -48,8 +86,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175e8860")
-          (pos 1114.25 191.313)
+          (id "0x9194d20")
+          (pos 1123 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -59,8 +97,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175e9e88")
-          (pos -37.75 191.313)
+          (id "0x9195010")
+          (pos -29 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -70,8 +108,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175ea630")
-          (pos -1573.75 191.313)
+          (id "0x926d560")
+          (pos -1565 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -81,8 +119,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1772ec30")
-          (pos -421.75 191.313)
+          (id "0x926d6f8")
+          (pos -413 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -92,8 +130,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1772edc8")
-          (pos -805.75 191.313)
+          (id "0x926d848")
+          (pos -797 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -103,8 +141,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1772ef60")
-          (pos -1189.75 191.313)
+          (id "0x93b1a88")
+          (pos -1181 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -114,8 +152,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1779b240")
-          (pos 1882.25 191.313)
+          (id "0x93b1cd0")
+          (pos 1891 472)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -125,8 +163,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1779b480")
-          (pos 1975.29 -448.688)
+          (id "0x9489f08")
+          (pos 1984 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -136,8 +174,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1779b300")
-          (pos -1096.71 -448.688)
+          (id "0x9489fe0")
+          (pos -1088 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -147,8 +185,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1794b6a0")
-          (pos -712.715 -448.688)
+          (id "0x948a130")
+          (pos -704 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -158,8 +196,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1794b800")
-          (pos -328.715 -448.688)
+          (id "0x95ce358")
+          (pos -320 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -169,8 +207,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17a8fa38")
-          (pos 55.2852 -448.688)
+          (id "0x95ce510")
+          (pos 64 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -180,8 +218,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17a8fc98")
-          (pos 1207.29 -448.688)
+          (id "0x96a6828")
+          (pos 1216 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -191,8 +229,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17a8fb30")
-          (pos 1591.29 -448.688)
+          (id "0x96a68b8")
+          (pos 1600 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -202,8 +240,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175e8698")
-          (pos 823.285 -448.688)
+          (id "0x9201440")
+          (pos 832 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -213,8 +251,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x176567c8")
-          (pos 439.285 -448.688)
+          (id "0x97eace0")
+          (pos 448 -168)
           (parent "")
           (select-mask 1)
           (path "images/objects/bluewall.png")
@@ -229,8 +267,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x171d16f0")
-          (pos 1432.09 426.524)
+          (id "0x97eb008")
+          (pos 1441 707)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -240,8 +278,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b89cd8")
-          (pos 325.796 355.072)
+          (id "0x916c820")
+          (pos 335 636)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -251,8 +289,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17580a90")
-          (pos 870.812 337.75)
+          (id "0x92012a0")
+          (pos 880 619)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -262,8 +300,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175809c8")
-          (pos 586.047 254.156)
+          (id "0x9201128")
+          (pos 595 535)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -273,8 +311,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x170b0528")
-          (pos -224.968 432.364)
+          (id "0x9201180")
+          (pos -216 713)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -284,8 +322,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34658")
-          (pos 67.5322 426.114)
+          (id "0x992f310")
+          (pos 77 707)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -295,8 +333,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34458")
-          (pos 1152.54 -13.9169)
+          (id "0x992f110")
+          (pos 1162 267)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -306,8 +344,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34540")
-          (pos 929.427 -188.448)
+          (id "0x91706e0")
+          (pos 938 92)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -317,8 +355,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x175e9360")
-          (pos 1198.26 393.161)
+          (id "0x9170520")
+          (pos 1207 674)
           (parent "")
           (select-mask 1)
           (path "images/decal/dark.png")
@@ -333,8 +371,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x16b8aa10")
-          (pos 337.491 253.75)
+          (id "0x9170468")
+          (pos 347 535)
           (parent "")
           (select-mask 1)
           (path "images/objects/locker.png")
@@ -344,8 +382,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x170b0630")
-          (pos 465.491 253.75)
+          (id "0x9a07eb0")
+          (pos 475 535)
           (parent "")
           (select-mask 1)
           (path "images/objects/locker.png")
@@ -355,8 +393,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x173183c0")
-          (pos 593.491 253.75)
+          (id "0x9a079d0")
+          (pos 603 535)
           (parent "")
           (select-mask 1)
           (path "images/objects/locker.png")
@@ -366,8 +404,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17342230")
-          (pos 721.491 253.75)
+          (id "0x9a07b00")
+          (pos 731 535)
           (parent "")
           (select-mask 1)
           (path "images/objects/locker.png")
@@ -377,8 +415,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x173a2980")
-          (pos 849.491 253.75)
+          (id "0x9a68c70")
+          (pos 859 535)
           (parent "")
           (select-mask 1)
           (path "images/objects/locker.png")
@@ -388,8 +426,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x173423a0")
-          (pos -707.071 240.313)
+          (id "0x9a68b20")
+          (pos -698 521)
           (parent "")
           (select-mask 1)
           (path "images/objects/elevatordoor.png")
@@ -399,8 +437,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x173c2a98")
-          (pos -708.083 255.313)
+          (id "0x9a88d30")
+          (pos -699 536)
           (parent "")
           (select-mask 1)
           (path "images/objects/door.png")
@@ -410,8 +448,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x173c2b40")
-          (pos -326.468 339.312)
+          (id "0x9a28850")
+          (pos -317 620)
           (parent "")
           (select-mask 1)
           (path "images/objects/bed.png")
@@ -421,8 +459,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17403650")
-          (pos 72.6572 339.312)
+          (id "0x9ac98b0")
+          (pos 82 620)
           (parent "")
           (select-mask 1)
           (path "images/objects/bed.png")
@@ -432,8 +470,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17402eb8")
-          (pos -177.277 -384.688)
+          (id "0x9ac9190")
+          (pos -168 -104)
           (parent "")
           (select-mask 1)
           (path "images/objects/door.png")
@@ -443,8 +481,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17362740")
-          (pos -175.578 -399.688)
+          (id "0x9ac9258")
+          (pos -167 -119)
           (parent "")
           (select-mask 1)
           (path "images/objects/elevatordoor.png")
@@ -454,8 +492,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17362800")
-          (pos 411.525 -399.688)
+          (id "0x9ac93c0")
+          (pos 421 -119)
           (parent "")
           (select-mask 1)
           (path "images/objects/elevatordoor.png")
@@ -465,8 +503,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1746b0b8")
-          (pos 409.826 -384.688)
+          (id "0x9bff3f0")
+          (pos 419 -104)
           (parent "")
           (select-mask 1)
           (path "images/objects/door.png")
@@ -476,8 +514,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x1746af50")
-          (pos -726.788 -399.688)
+          (id "0x9bff4c0")
+          (pos -718 -119)
           (parent "")
           (select-mask 1)
           (path "images/objects/elevatordoor.png")
@@ -487,8 +525,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x174d1508")
-          (pos -728.486 -384.688)
+          (id "0x9bff558")
+          (pos -719 -104)
           (parent "")
           (select-mask 1)
           (path "images/objects/door.png")
@@ -503,8 +541,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x171d1688")
-          (pos 1346.67 98.8136)
+          (id "0x9bc7b68")
+          (pos 1356 380)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair2.png")
@@ -514,8 +552,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b17da0")
-          (pos 1346.67 258.814)
+          (id "0x9bc7c08")
+          (pos 1356 540)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair1.png")
@@ -525,8 +563,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18050")
-          (pos 1474.67 386.814)
+          (id "0x9caea10")
+          (pos 1484 668)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair1.png")
@@ -536,8 +574,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b8a598")
-          (pos 1474.67 226.814)
+          (id "0x9d49810")
+          (pos 1484 508)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair2.png")
@@ -547,8 +585,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18c08")
-          (pos 1218.67 -29.1864)
+          (id "0x9cae828")
+          (pos 1228 252)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair2.png")
@@ -558,8 +596,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17171330")
-          (pos 1090.67 2.81363)
+          (id "0x9cae8a8")
+          (pos 1100 284)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair1.png")
@@ -569,8 +607,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b8a408")
-          (pos 1090.67 -157.186)
+          (id "0x9d935e0")
+          (pos 1100 124)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair2.png")
@@ -580,8 +618,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17171148")
-          (pos 1218.67 130.814)
+          (id "0x9d79b48")
+          (pos 1228 412)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair1.png")
@@ -591,8 +629,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17171210")
-          (pos 958.609 -125.186)
+          (id "0x9dad0d0")
+          (pos 968 156)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair1.png")
@@ -602,8 +640,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17211a38")
-          (pos 958.609 -285.186)
+          (id "0x9dbd290")
+          (pos 968 -4)
           (parent "")
           (select-mask 1)
           (path "images/decal/stair2.png")
@@ -618,8 +656,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x16b89eb8")
-          (pos 1641.5 447.312)
+          (id "0x9a082f0")
+          (pos 1651 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -629,8 +667,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b17860")
-          (pos 873.5 447.312)
+          (id "0x916ed90")
+          (pos 883 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -640,8 +678,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b17bb0")
-          (pos 1130.5 448.312)
+          (id "0x916ee20")
+          (pos 1140 729)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -651,8 +689,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b17948")
-          (pos 361.5 447.312)
+          (id "0x9193028")
+          (pos 371 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -662,8 +700,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b35050")
-          (pos 105.5 447.312)
+          (id "0x91939b8")
+          (pos 115 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -673,8 +711,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34760")
-          (pos -150.5 447.312)
+          (id "0x9193640")
+          (pos -141 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -684,8 +722,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34de8")
-          (pos 617.5 447.312)
+          (id "0x91934f8")
+          (pos 627 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -695,8 +733,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b347f8")
-          (pos 1385.5 447.312)
+          (id "0x9193760")
+          (pos 1395 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -706,8 +744,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34b88")
-          (pos -101.75 -64.6875)
+          (id "0x9193cc0")
+          (pos -93 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -717,8 +755,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34918")
-          (pos 154.25 -64.6875)
+          (id "0x9193b00")
+          (pos 163 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -728,8 +766,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b34a78")
-          (pos 410.25 -64.6875)
+          (id "0x9193c08")
+          (pos 419 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -739,8 +777,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b354f8")
-          (pos 1178.25 -64.6875)
+          (id "0x9193190")
+          (pos 1187 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -750,8 +788,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b353a0")
-          (pos 922.25 -64.6875)
+          (id "0x9193ec8")
+          (pos 931 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -761,8 +799,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b35210")
-          (pos 666.25 -64.6875)
+          (id "0x9193fd0")
+          (pos 675 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -772,8 +810,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b361a0")
-          (pos 1690.25 -64.6875)
+          (id "0x91949d0")
+          (pos 1699 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -783,8 +821,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b362c0")
-          (pos 1434.25 -64.6875)
+          (id "0x9f4b178")
+          (pos 1443 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -794,8 +832,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b36088")
-          (pos -918.5 447.312)
+          (id "0x9f4b280")
+          (pos -909 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -805,8 +843,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d75180")
-          (pos -662.5 447.312)
+          (id "0x9f4b3b0")
+          (pos -653 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -816,8 +854,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d74ec8")
-          (pos -1430.5 447.312)
+          (id "0x91946b8")
+          (pos -1421 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -827,8 +865,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d74f50")
-          (pos -1686.5 447.312)
+          (id "0x91947a8")
+          (pos -1677 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -838,8 +876,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d75020")
-          (pos -1942.5 447.312)
+          (id "0x9fab7a0")
+          (pos -1933 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -849,8 +887,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b35cb8")
-          (pos -1174.5 447.312)
+          (id "0xa03be00")
+          (pos -1165 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -860,8 +898,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b35dc0")
-          (pos -406.5 447.312)
+          (id "0x9fab5f0")
+          (pos -397 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -871,8 +909,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d14c20")
-          (pos -1893.75 -64.6875)
+          (id "0xa03bee8")
+          (pos -1885 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -882,8 +920,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d14a78")
-          (pos -1637.75 -64.6875)
+          (id "0x9fcbbb0")
+          (pos -1629 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -893,8 +931,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16d14b00")
-          (pos -1381.75 -64.6875)
+          (id "0x9fcb9d8")
+          (pos -1373 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -904,8 +942,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e25940")
-          (pos -613.75 -64.6875)
+          (id "0xa09c580")
+          (pos -605 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -915,8 +953,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e259d8")
-          (pos -869.75 -64.6875)
+          (id "0x9194440")
+          (pos -861 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -926,8 +964,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b35a50")
-          (pos -1125.75 -64.6875)
+          (id "0x91942d8")
+          (pos -1117 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -937,8 +975,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e3e388")
-          (pos -357.75 -64.6875)
+          (id "0xa134f48")
+          (pos -349 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -948,8 +986,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e3e1d0")
-          (pos 1897.5 447.312)
+          (id "0xa1351c8")
+          (pos 1907 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -959,8 +997,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e3df80")
-          (pos 2153.5 447.312)
+          (id "0xa175508")
+          (pos 2163 728)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -970,8 +1008,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f1e8e8")
-          (pos 1946.25 -64.6875)
+          (id "0xa1756e0")
+          (pos 1955 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -981,8 +1019,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f1e9e0")
-          (pos 2202.25 -64.6875)
+          (id "0xa1755e8")
+          (pos 2211 216)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -992,8 +1030,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f1eb40")
-          (pos 1915.34 -192.687)
+          (id "0xa0b4e08")
+          (pos 1924 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1003,8 +1041,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16ebe488")
-          (pos -388.656 -192.687)
+          (id "0xa09c400")
+          (pos -380 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1014,8 +1052,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16ebe580")
-          (pos -644.656 -192.687)
+          (id "0xa09c4d0")
+          (pos -636 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1025,8 +1063,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f4f318")
-          (pos -900.656 -192.687)
+          (id "0xa1c5780")
+          (pos -892 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1036,8 +1074,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16df5590")
-          (pos 1403.34 -192.687)
+          (id "0xa1c58c0")
+          (pos 1412 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1047,8 +1085,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e3ddb8")
-          (pos 635.344 -192.687)
+          (id "0xa235eb0")
+          (pos 644 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1058,8 +1096,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16e3dc38")
-          (pos -132.656 -192.687)
+          (id "0xa2661e0")
+          (pos -124 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1069,8 +1107,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f4f260")
-          (pos 123.344 -192.687)
+          (id "0xa266400")
+          (pos 132 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1080,8 +1118,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f4eff0")
-          (pos 379.344 -192.687)
+          (id "0xa266228")
+          (pos 388 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1091,8 +1129,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17007910")
-          (pos 1147.34 -192.687)
+          (id "0xa27e6c8")
+          (pos 1156 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1102,8 +1140,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17007988")
-          (pos 891.344 -192.687)
+          (id "0xa27e560")
+          (pos 900 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1113,8 +1151,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17007aa8")
-          (pos 1659.34 -192.687)
+          (id "0xa0b4b38")
+          (pos 1668 88)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueground.png")
@@ -1124,8 +1162,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16fef6a0")
-          (pos 2225.09 -704.688)
+          (id "0xa2ae9e8")
+          (pos 2234 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1135,8 +1173,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16fef4e0")
-          (pos 1969.09 -704.688)
+          (id "0xa2ae848")
+          (pos 1978 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1146,8 +1184,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17098418")
-          (pos -334.905 -704.688)
+          (id "0xa2dec60")
+          (pos -326 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1157,8 +1195,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x170981d0")
-          (pos -1102.91 -704.688)
+          (id "0xa0b4758")
+          (pos -1094 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1168,8 +1206,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17098268")
-          (pos -846.905 -704.688)
+          (id "0xa326e40")
+          (pos -838 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1179,8 +1217,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16f4ed58")
-          (pos -590.905 -704.688)
+          (id "0xa387698")
+          (pos -582 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1190,8 +1228,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x170b09f0")
-          (pos 1457.09 -704.688)
+          (id "0xa387858")
+          (pos 1466 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1201,8 +1239,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x170b0a78")
-          (pos 1713.09 -704.688)
+          (id "0xa3a7b30")
+          (pos 1722 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1212,8 +1250,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17067e40")
-          (pos 689.095 -704.688)
+          (id "0xa3879a8")
+          (pos 698 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1223,8 +1261,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17067f50")
-          (pos 945.095 -704.688)
+          (id "0xa3a7c48")
+          (pos 954 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1234,8 +1272,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17068040")
-          (pos 1201.09 -704.688)
+          (id "0xa3e8098")
+          (pos 1210 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1245,8 +1283,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17130d68")
-          (pos 433.095 -704.688)
+          (id "0xa3e8110")
+          (pos 442 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1256,8 +1294,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x17130df0")
-          (pos 177.095 -704.688)
+          (id "0xa327310")
+          (pos 186 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1267,8 +1305,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x171d17f8")
-          (pos -78.9053 -704.688)
+          (id "0xa327638")
+          (pos -70 -424)
           (parent "")
           (select-mask 1)
           (path "images/objects/blueroof.png")
@@ -1283,8 +1321,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x16b19268")
-          (pos -520.276 3.38026)
+          (id "0xa428588")
+          (pos -511 284)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1294,8 +1332,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b40c00")
-          (pos 657.849 1.81776)
+          (id "0x9de6bc0")
+          (pos 667 283)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1305,8 +1343,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b40c88")
-          (pos 1321.1 -0.557228)
+          (id "0x9ac9740")
+          (pos 1330 280)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1316,8 +1354,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b40d48")
-          (pos 36.7242 -0.55722)
+          (id "0xa06c0d8")
+          (pos 46 280)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1327,8 +1365,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b53d00")
-          (pos -499.515 23.7381)
+          (id "0xa428500")
+          (pos -490 305)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1338,8 +1376,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b53e20")
-          (pos 46.7499 29.8416)
+          (id "0x9192c00")
+          (pos 56 311)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1349,8 +1387,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b41ca0")
-          (pos 656.491 10.0661)
+          (id "0x9192dd8")
+          (pos 666 291)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1360,8 +1398,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18f80")
-          (pos 1331.54 20.6863)
+          (id "0xa326f20")
+          (pos 1341 302)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1371,8 +1409,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b19050")
-          (pos 1394.11 -619.545)
+          (id "0xa326ff8")
+          (pos 1403 -339)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1382,8 +1420,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b190e8")
-          (pos 728.826 -616.493)
+          (id "0xa327160")
+          (pos 738 -336)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1393,8 +1431,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b77b50")
-          (pos 109.319 -610.39)
+          (id "0x9d69938")
+          (pos 118 -330)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1404,8 +1442,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b77c30")
-          (pos -436.945 -616.493)
+          (id "0xa205c08")
+          (pos -428 -336)
           (parent "")
           (select-mask 1)
           (path "images/decal/rooflamp_bloom.png")
@@ -1415,8 +1453,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b41910")
-          (pos 99.2935 -640.789)
+          (id "0xa205d18")
+          (pos 108 -360)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1426,8 +1464,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b41778")
-          (pos 1383.67 -640.789)
+          (id "0xa542ca0")
+          (pos 1393 -360)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1437,8 +1475,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b8ab98")
-          (pos 720.418 -638.414)
+          (id "0xa5422d0")
+          (pos 729 -358)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1448,8 +1486,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b8a650")
-          (pos -457.706 -636.851)
+          (id "0xa542470")
+          (pos -449 -356)
           (parent "")
           (select-mask 1)
           (path "images/objects/apartmentlamp_highlight.png")
@@ -1464,8 +1502,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x16b364f0")
-          (pos 58.9653 321.293)
+          (id "0xa542de8")
+          (pos 68 602)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1475,8 +1513,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18158")
-          (pos 1347.85 311.818)
+          (id "0xa5428e8")
+          (pos 1357 593)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1486,8 +1524,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18218")
-          (pos -518.274 304.576)
+          (id "0xa578ec8")
+          (pos -509 585)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1497,8 +1535,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18360")
-          (pos 667.297 305.114)
+          (id "0xa578f58")
+          (pos 676 586)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1508,8 +1546,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b19758")
-          (pos 45.189 -395.95)
+          (id "0xa579018")
+          (pos 54 -115)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1519,8 +1557,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b186f0")
-          (pos 653.521 -410.567)
+          (id "0xa5427a8")
+          (pos 663 -130)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1530,8 +1568,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18a60")
-          (pos -535.175 -411.104)
+          (id "0xa542670")
+          (pos -526 -130)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1541,8 +1579,8 @@
           (hflip #f)
           (vflip #f))
         (decal
-          (id "0x16b18850")
-          (pos 1334.07 -403.863)
+          (id "0xa5420e8")
+          (pos 1343 -123)
           (parent "")
           (select-mask 1)
           (path "images/decal/light.png")
@@ -1557,8 +1595,8 @@
       (locked #f)
       (objects
         (decal
-          (id "0x16b15678")
-          (pos 1204.55 268.312)
+          (id "0xa428330")
+          (pos 1214 549)
           (parent "")
           (select-mask 1)
           (path "images/decal/humanreference.png")



From grumbel at mail.berlios.de  Sun Aug 30 12:14:59 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 12:14:59 +0200
Subject: [Windstille-commit] r3131 - trunk/windstille/src/objects
Message-ID: <200908301014.n7UAEx65004210@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 12:14:59 +0200 (Sun, 30 Aug 2009)
New Revision: 3131

Modified:
   trunk/windstille/src/objects/doll.cpp
   trunk/windstille/src/objects/doll.hpp
Log:
Added roll action

Modified: trunk/windstille/src/objects/doll.cpp
===================================================================
--- trunk/windstille/src/objects/doll.cpp	2009-08-29 20:23:15 UTC (rev 3130)
+++ trunk/windstille/src/objects/doll.cpp	2009-08-30 10:14:59 UTC (rev 3131)
@@ -68,6 +68,10 @@
     case kStanding: update_standing(controller, delta); break;
     case kDucking:  update_ducking(controller, delta);  break;
     case kJumpUp:   update_jump_up(controller, delta);  break;
+    case kRolling:  update_rolling(controller, delta);  break;
+    case kListing:  update_listing(controller, delta);  break;
+    case kSwinging: update_swinging(controller, delta);  break;
+    case kClimbing: update_climbing(controller, delta);  break;
     case kNoState:  break;
   }
 
@@ -137,6 +141,55 @@
 }
 
 void
+Doll::set_state_rolling()
+{
+  if (m_state != kRolling)
+  {
+    m_drawable->get_sprite().set_action("Roll");
+
+    switch(m_state)
+    {
+      case kStanding: m_drawable->get_sprite().set_next_action("Stand"); break;
+      case kWalking:  m_drawable->get_sprite().set_next_action("Walk"); break;
+      case kRunning:  m_drawable->get_sprite().set_next_action("Run"); break;
+      default:        m_drawable->get_sprite().set_next_action("Run"); break;
+    }
+
+    m_state = kRolling;
+  }
+}
+
+void
+Doll::set_state_listing()
+{
+  if (m_state != kListing)
+  {
+    m_state = kListing;
+    m_drawable->get_sprite().set_action("Listen");
+  }
+}
+
+void
+Doll::set_state_swinging()
+{
+  if (m_state != kSwinging)
+  {
+    m_state = kSwinging;
+    m_drawable->get_sprite().set_action("Switching");
+  }
+}
+
+void
+Doll::set_state_climbing()
+{
+  if (m_state != kClimbing)
+  {
+    m_state = kClimbing;
+    m_drawable->get_sprite().set_action("Climb");
+  }
+}
+
+void
 Doll::update_falling(const Controller& controller, float delta)
 {
   Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 200.0f,
@@ -189,13 +242,20 @@
                  controller.get_axis_state(Y_AXIS) * delta * 200.0f);  
   walk(stick);
 
-  if (controller.get_axis_state(X_AXIS) == 0)
+  if (controller.get_axis_state(Y_AXIS) > 0)
   {
-    set_state_standing();
+    set_state_rolling();
   }
-  else if (controller.get_button_state(RUN_BUTTON))
+  else
   {
-    set_state_running();
+    if (controller.get_axis_state(X_AXIS) == 0)
+    {
+      set_state_standing();
+    }
+    else if (controller.get_button_state(RUN_BUTTON))
+    {
+      set_state_running();
+    }
   }
 }
 
@@ -207,13 +267,20 @@
 
   walk(stick * 2.5f);
 
-  if (controller.get_axis_state(X_AXIS) == 0)
+  if (controller.get_axis_state(Y_AXIS) > 0)
   {
-    set_state_standing();
+    set_state_rolling();
   }
-  else if (!controller.get_button_state(RUN_BUTTON))
+  else
   {
-    set_state_walking();
+    if (controller.get_axis_state(X_AXIS) == 0)
+    {
+      set_state_standing();
+    }
+    else if (!controller.get_button_state(RUN_BUTTON))
+    {
+      set_state_walking();
+    }
   }
 }
 
@@ -310,4 +377,49 @@
   }
 }
 
+void
+Doll::update_rolling(const Controller& controller, float delta)
+{
+  Vector2f stick(controller.get_axis_state(X_AXIS) * delta * 200.0f,
+                 controller.get_axis_state(Y_AXIS) * delta * 200.0f);
+
+  walk(stick * 2.5f);
+
+  // FIXME: Need an Sprite::action_done() instead
+  if (m_drawable->get_sprite().switched_actions())
+  {
+    if (controller.get_axis_state(X_AXIS) > 0 ||
+        controller.get_axis_state(X_AXIS) < 0)
+    {
+      if (controller.get_button_state(RUN_BUTTON))   
+      {
+        set_state_running();
+      }
+      else
+      {
+        set_state_walking();
+      }
+    }
+    else
+    {
+      set_state_standing();
+    }
+  }
+}
+
+void
+Doll::update_listing(const Controller& /*controller*/, float /*delta*/)
+{
+}
+
+void
+Doll::update_swinging(const Controller& /*controller*/, float /*delta*/)
+{
+}
+
+void
+Doll::update_climbing(const Controller& /*controller*/, float /*delta*/)
+{
+}
+
 /* EOF */

Modified: trunk/windstille/src/objects/doll.hpp
===================================================================
--- trunk/windstille/src/objects/doll.hpp	2009-08-29 20:23:15 UTC (rev 3130)
+++ trunk/windstille/src/objects/doll.hpp	2009-08-30 10:14:59 UTC (rev 3131)
@@ -41,6 +41,10 @@
     kRunning,
     kStanding,
     kDucking,
+    kRolling,
+    kListing,
+    kSwinging,
+    kClimbing,
     kJumpUp
   };
 
@@ -70,6 +74,10 @@
   void set_state_running();
   void set_state_ducking();
   void set_state_jump_up();
+  void set_state_rolling();
+  void set_state_listing();
+  void set_state_swinging();
+  void set_state_climbing();
 
   void update_falling(const Controller& controller, float delta);
   void update_standing(const Controller& controller, float delta);
@@ -77,7 +85,12 @@
   void update_running(const Controller& controller, float delta);
   void update_ducking(const Controller& controller, float delta);
   void update_jump_up(const Controller& controller, float delta);
+  void update_rolling(const Controller& controller, float delta);
+  void update_listing(const Controller& controller, float delta);
+  void update_swinging(const Controller& controller, float delta);
+  void update_climbing(const Controller& controller, float delta);
 
+
 private:
   Doll(const Doll&);
   Doll& operator=(const Doll&);



From grumbel at mail.berlios.de  Sun Aug 30 12:23:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 12:23:22 +0200
Subject: [Windstille-commit] r3132 - trunk/windstille/src/objects
Message-ID: <200908301023.n7UANMcM004949@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 12:23:21 +0200 (Sun, 30 Aug 2009)
New Revision: 3132

Modified:
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
Log:
Fixed Sprite updating

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-08-30 10:14:59 UTC (rev 3131)
+++ trunk/windstille/src/objects/player.cpp	2009-08-30 10:23:21 UTC (rev 3132)
@@ -37,8 +37,7 @@
 static const float RUN_SPEED = 256.0;
 
 Player::Player () 
-  : sprite(),
-    m_drawable(),
+  : m_drawable(),
     jumping(),
     bomb_placed(),
     hit_count(),
@@ -52,7 +51,7 @@
     reload_time(),
     z_pos()
 {
-  sprite = Sprite3D(Pathname("models/characters/jane/jane.wsprite"));
+  Sprite3D sprite(Pathname("models/characters/jane/jane.wsprite"));
   pos.x = 320;
   pos.y = 200;
   name = "player";
@@ -97,7 +96,7 @@
                                Color(1.0f, 0.0f, 0.0f, 0.5f), 10000.0f);
     }
 
-  //sprite.draw(sc.color(), pos + Vector2f(0.0f, 1.0f), z_pos);
+  //m_drawable->get_sprite().draw(sc.color(), pos + Vector2f(0.0f, 1.0f), z_pos);
 
   Entity* obj = find_useable_entity();
   if (obj)
@@ -108,10 +107,10 @@
     }
   
   // Draw weapon at the 'Weapon' attachment point
-  Sprite3D::PointID id = sprite.get_attachment_point_id("Weapon");
+  Sprite3D::PointID id = m_drawable->get_sprite().get_attachment_point_id("Weapon");
   sc.push_modelview();
   sc.translate(pos.x, pos.y);
-  sc.mult_modelview(sprite.get_attachment_point_matrix(id));
+  sc.mult_modelview(m_drawable->get_sprite().get_attachment_point_matrix(id));
   weapon->draw(sc);
   sc.pop_modelview();
 
@@ -238,7 +237,7 @@
     // fall down
     velocity.y += GRAVITY * delta;
 
-    sprite.update(delta);
+    m_drawable->get_sprite().update(delta);
 
     c_object->set_velocity (velocity);
 
@@ -392,7 +391,7 @@
         }
       else
         {
-          sprite.set_action("PullGun");
+          m_drawable->get_sprite().set_action("PullGun");
           state = PULL_GUN;
         }
     }
@@ -416,7 +415,7 @@
 Player::set_walk(Direction direction)
 {
   try_set_action("Walk");
-  sprite.set_rot(direction == EAST);
+  m_drawable->get_sprite().set_rot(direction == EAST);
   state = WALK;
   if (direction == EAST)
     velocity.x = WALK_SPEED;
@@ -466,7 +465,7 @@
 Player::set_ducking()
 {
   try_set_action("StandToDuck");
-  sprite.set_next_action("Ducking");
+  m_drawable->get_sprite().set_next_action("Ducking");
   state = DUCKING;
   velocity.x = 0;
 }
@@ -475,32 +474,32 @@
 Player::update_ducking(const Controller& controller)
 {
   // ducking
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
-      if (sprite.get_action() == "Ducking")
+      if (m_drawable->get_sprite().get_action() == "Ducking")
         set_ducked();
       else
         set_stand();
       return;
     }
   
-  if (!(controller.get_axis_state(Y_AXIS) > 0.5f) && sprite.get_speed() > 0) 
+  if (!(controller.get_axis_state(Y_AXIS) > 0.5f) && m_drawable->get_sprite().get_speed() > 0) 
     {
-      sprite.set_speed(-1.0);
-      sprite.set_next_action("Stand");
+      m_drawable->get_sprite().set_speed(-1.0);
+      m_drawable->get_sprite().set_next_action("Stand");
       state = STAND;
     } 
-  else if (controller.get_axis_state(Y_AXIS) > 0.5f && sprite.get_speed() < 0) 
+  else if (controller.get_axis_state(Y_AXIS) > 0.5f && m_drawable->get_sprite().get_speed() < 0) 
     {
-      sprite.set_speed(1.0);
-      sprite.set_next_action("Ducking");
+      m_drawable->get_sprite().set_speed(1.0);
+      m_drawable->get_sprite().set_next_action("Ducking");
     }
 }
 
 void
 Player::set_ducked()
 {
-  assert(sprite.get_action() == "Ducking");
+  assert(m_drawable->get_sprite().get_action() == "Ducking");
   state = DUCKED;
 }
 
@@ -510,8 +509,8 @@
   if (!(controller.get_axis_state(Y_AXIS) > 0.5f))
     {
       state = DUCKING;
-      sprite.set_action("StandToDuck", -1.0);
-      sprite.set_next_action("Stand");
+      m_drawable->get_sprite().set_action("StandToDuck", -1.0);
+      m_drawable->get_sprite().set_next_action("Stand");
     }  
 }
 
@@ -520,17 +519,17 @@
 {
   velocity.x = 0;
   try_set_action("Turn");
-  sprite.set_next_action("Walk");
-  sprite.set_next_rot(! sprite.get_rot());
+  m_drawable->get_sprite().set_next_action("Walk");
+  m_drawable->get_sprite().set_next_rot(! m_drawable->get_sprite().get_rot());
   state = TURNAROUND;
 }
 
 void
 Player::update_turnaround(const Controller& controller)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
-      if (sprite.get_rot())
+      if (m_drawable->get_sprite().get_rot())
         {
           set_walk(EAST);
         }
@@ -538,11 +537,11 @@
         set_walk(WEST);
       }
     } 
-  if ((sprite.get_rot() && controller.get_axis_state(X_AXIS) > 0.5f) ||
-      (!sprite.get_rot() && controller.get_axis_state(X_AXIS) < -0.5f)) 
+  if ((m_drawable->get_sprite().get_rot() && controller.get_axis_state(X_AXIS) > 0.5f) ||
+      (!m_drawable->get_sprite().get_rot() && controller.get_axis_state(X_AXIS) < -0.5f)) 
     {
-      sprite.set_speed(-1.0);
-      sprite.set_next_action("Walk");
+      m_drawable->get_sprite().set_speed(-1.0);
+      m_drawable->get_sprite().set_next_action("Walk");
       state = WALK;
     }
 }
@@ -553,12 +552,12 @@
   try_set_action("StandtoListen", backwards ? -1.0f : 1.0f);
   if (!backwards) 
     {
-      sprite.set_next_action("Listen");
+      m_drawable->get_sprite().set_next_action("Listen");
       velocity = Vector2f(0, 0);
     } 
   else
     {
-      sprite.set_next_action("Stand");
+      m_drawable->get_sprite().set_next_action("Stand");
     }
   state = STAND_TO_LISTEN;
 }
@@ -566,9 +565,9 @@
 void
 Player::update_stand_to_listen(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
-      if (sprite.get_action() == "Stand")
+      if (m_drawable->get_sprite().get_action() == "Stand")
         set_stand();
       else
         set_listen();
@@ -630,22 +629,22 @@
 void
 Player::set_jump_begin()
 {
-  if (sprite.before_marker("RightFoot")) 
+  if (m_drawable->get_sprite().before_marker("RightFoot")) 
     {
-      sprite.set_next_action("JumpRightFoot");
-      sprite.abort_at_marker("RightFoot");
+      m_drawable->get_sprite().set_next_action("JumpRightFoot");
+      m_drawable->get_sprite().abort_at_marker("RightFoot");
       jump_foot = LEFT_FOOT;
     } 
-  else if (sprite.before_marker("LeftFoot")) 
+  else if (m_drawable->get_sprite().before_marker("LeftFoot")) 
     {
-      sprite.set_next_action("JumpLeftFoot");
-      sprite.abort_at_marker("LeftFoot");
+      m_drawable->get_sprite().set_next_action("JumpLeftFoot");
+      m_drawable->get_sprite().abort_at_marker("LeftFoot");
       jump_foot = RIGHT_FOOT;
     } 
   else 
     {
-      sprite.set_next_action("JumpRightFoot");
-      sprite.abort_at_marker("RightFoot");
+      m_drawable->get_sprite().set_next_action("JumpRightFoot");
+      m_drawable->get_sprite().abort_at_marker("RightFoot");
       jump_foot = LEFT_FOOT;
     }
   state = JUMP_BEGIN;
@@ -654,15 +653,15 @@
 void
 Player::update_jump_begin(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
-      if (sprite.get_action() == "JumpLeftFoot") 
+      if (m_drawable->get_sprite().get_action() == "JumpLeftFoot") 
         {
-          sprite.set_next_action("JumpLeftFootAir");
+          m_drawable->get_sprite().set_next_action("JumpLeftFootAir");
         } 
-      else if (sprite.get_action() == "JumpRightFoot") 
+      else if (m_drawable->get_sprite().get_action() == "JumpRightFoot") 
         {
-          sprite.set_next_action("JumpRightFootAir");
+          m_drawable->get_sprite().set_next_action("JumpRightFootAir");
         } 
       else
         {
@@ -676,14 +675,14 @@
 Player::set_jump_air()
 {
   velocity.y = -450;
-  sprite.set_next_action("JumpLandSofttoRun");
+  m_drawable->get_sprite().set_next_action("JumpLandSofttoRun");
   state = JUMP_AIR;
 }
 
 void
 Player::update_jump_air(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
       set_jump_land();
       return;
@@ -693,14 +692,14 @@
 void
 Player::set_jump_land()
 {
-  sprite.set_next_action("Run");
+  m_drawable->get_sprite().set_next_action("Run");
   state = JUMP_LAND;
 }
 
 void
 Player::update_jump_land(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
       set_run();
       return;
@@ -710,14 +709,14 @@
 void
 Player::set_jump_up_begin()
 {
-  sprite.set_next_action("JumpUp");
+  m_drawable->get_sprite().set_next_action("JumpUp");
   state = JUMP_UP_BEGIN;
 }
 
 void
 Player::update_jump_up_begin(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
       set_jump_up_air();
       return;
@@ -728,14 +727,14 @@
 Player::set_jump_up_air()
 {
   velocity.y = -400;
-  sprite.set_next_action("JumpLandSofttoRun");
+  m_drawable->get_sprite().set_next_action("JumpLandSofttoRun");
   state = JUMP_UP_AIR;
 }
 
 void
 Player::update_jump_up_air(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
       set_jump_up_land();
       return;
@@ -745,14 +744,14 @@
 void
 Player::set_jump_up_land()
 {
-  sprite.set_next_action("Stand");
+  m_drawable->get_sprite().set_next_action("Stand");
   state = JUMP_UP_LAND;
 }
 
 void
 Player::update_jump_up_land(const Controller& /*controller*/)
 {
-  if (sprite.switched_actions()) 
+  if (m_drawable->get_sprite().switched_actions()) 
     {
       set_stand();
       return;
@@ -764,7 +763,7 @@
 {
   if (!controller.get_button_state(AIM_BUTTON))
     {
-      sprite.set_next_action("Stand");      
+      m_drawable->get_sprite().set_next_action("Stand");      
       state = STAND;
     }
 }
@@ -772,14 +771,14 @@
 Player::Direction
 Player::get_direction() const
 {
-  return sprite.get_rot() ? EAST : WEST;
+  return m_drawable->get_sprite().get_rot() ? EAST : WEST;
 }
 
 void
 Player::try_set_action(const std::string& name_, float speed)
 {
-  if (sprite.get_action() != name_)
-    sprite.set_action(name_, speed);
+  if (m_drawable->get_sprite().get_action() != name_)
+    m_drawable->get_sprite().set_action(name_, speed);
 }
 
 int

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-08-30 10:14:59 UTC (rev 3131)
+++ trunk/windstille/src/objects/player.hpp	2009-08-30 10:23:21 UTC (rev 3132)
@@ -41,8 +41,6 @@
                public Currenton<Player>
 {
 private:
-  Sprite3D sprite;
-
   boost::shared_ptr<Sprite3DDrawable> m_drawable;
   //std::auto_ptr<SoundSource> sound_source;
 



From grumbel at mail.berlios.de  Sun Aug 30 22:00:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:00:19 +0200
Subject: [Windstille-commit] r3133 - trunk/windstille/src/font
Message-ID: <200908302000.n7UK0JMM028324@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:00:16 +0200 (Sun, 30 Aug 2009)
New Revision: 3133

Modified:
   trunk/windstille/src/font/border_font_effect.hpp
   trunk/windstille/src/font/font_effect.hpp
   trunk/windstille/src/font/no_font_effect.hpp
Log:
g++-4.2 compatibilty

Modified: trunk/windstille/src/font/border_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.hpp	2009-08-30 10:23:21 UTC (rev 3132)
+++ trunk/windstille/src/font/border_font_effect.hpp	2009-08-30 20:00:16 UTC (rev 3133)
@@ -47,9 +47,11 @@
   
   void blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
 
-private:
-  BorderFontEffect (const BorderFontEffect&);
-  BorderFontEffect& operator= (const BorderFontEffect&);
+  /* disabled for g++-4.2 compatibilty
+  private:
+    BorderFontEffect (const BorderFontEffect&);
+    BorderFontEffect& operator= (const BorderFontEffect&);
+  */
 };
 
 #endif

Modified: trunk/windstille/src/font/font_effect.hpp
===================================================================
--- trunk/windstille/src/font/font_effect.hpp	2009-08-30 10:23:21 UTC (rev 3132)
+++ trunk/windstille/src/font/font_effect.hpp	2009-08-30 20:00:16 UTC (rev 3133)
@@ -48,9 +48,11 @@
   
   virtual void blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const =0;
 
+  /* disabled for g++-4.2 compatibilty
 private:
   FontEffect (const FontEffect&);
   FontEffect& operator= (const FontEffect&);
+  */
 };
 
 #endif

Modified: trunk/windstille/src/font/no_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.hpp	2009-08-30 10:23:21 UTC (rev 3132)
+++ trunk/windstille/src/font/no_font_effect.hpp	2009-08-30 20:00:16 UTC (rev 3133)
@@ -38,9 +38,11 @@
   
   void blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
   
+  /* disabled for g++-4.2 compatibilty
 private:
   NoFontEffect (const NoFontEffect&);
   NoFontEffect& operator= (const NoFontEffect&);
+  */
 };
 
 #endif



From grumbel at mail.berlios.de  Sun Aug 30 22:03:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:03:25 +0200
Subject: [Windstille-commit] r3134 - trunk/windstille/src/engine
Message-ID: <200908302003.n7UK3ONo028592@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:03:24 +0200 (Sun, 30 Aug 2009)
New Revision: 3134

Modified:
   trunk/windstille/src/engine/sector.cpp
Log:
Small optimization

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-30 20:00:16 UTC (rev 3133)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-30 20:03:24 UTC (rev 3134)
@@ -301,11 +301,14 @@
 
 void Sector::commit_adds()
 {
-  // Add new game objects
-  for(Objects::iterator i = new_objects.begin(); i != new_objects.end(); ++i) {
-    objects.push_back(*i);
+  if (!new_objects.empty())
+  {
+    // Add new game objects
+    for(Objects::iterator i = new_objects.begin(); i != new_objects.end(); ++i) {
+      objects.push_back(*i);
+    }
+    new_objects.clear();
   }
-  new_objects.clear();
 }
 
 void Sector::update(float delta)



From grumbel at mail.berlios.de  Sun Aug 30 22:03:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:03:37 +0200
Subject: [Windstille-commit] r3135 - trunk/windstille/src/objects
Message-ID: <200908302003.n7UK3bZD028622@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:03:37 +0200 (Sun, 30 Aug 2009)
New Revision: 3135

Modified:
   trunk/windstille/src/objects/layer.cpp
Log:
Small optimization

Modified: trunk/windstille/src/objects/layer.cpp
===================================================================
--- trunk/windstille/src/objects/layer.cpp	2009-08-30 20:03:24 UTC (rev 3134)
+++ trunk/windstille/src/objects/layer.cpp	2009-08-30 20:03:37 UTC (rev 3135)
@@ -49,12 +49,14 @@
 void
 Layer::commit_adds()
 {
-  // Add new game objects
-  for(Objects::iterator i = new_objects.begin(); i != new_objects.end(); ++i) {
-    objects.push_back(*i);
+  if (!new_objects.empty())
+  {
+    // Add new game objects
+    for(Objects::iterator i = new_objects.begin(); i != new_objects.end(); ++i) {
+      objects.push_back(*i);
+    }
+    new_objects.clear();
   }
-  new_objects.clear();
-
 }
 
 void



From grumbel at mail.berlios.de  Sun Aug 30 22:05:07 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:05:07 +0200
Subject: [Windstille-commit] r3136 - trunk/windstille/src/editor
Message-ID: <200908302005.n7UK57O2028807@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:05:07 +0200 (Sun, 30 Aug 2009)
New Revision: 3136

Modified:
   trunk/windstille/src/editor/select_tool.cpp
Log:
int/float mixup cleaned up

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-08-30 20:03:37 UTC (rev 3135)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-08-30 20:05:07 UTC (rev 3136)
@@ -25,7 +25,7 @@
 #include "editor/select_tool.hpp"
 
 static const uint32_t MOVE_TIMEOUT = 100;
-static const int MOVE_THRESHOLD = 16.0f;
+static const int MOVE_THRESHOLD = 16;
 
 SelectTool::SelectTool()
  : click_pos(),



From grumbel at mail.berlios.de  Sun Aug 30 22:11:33 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:11:33 +0200
Subject: [Windstille-commit] r3137 - trunk/windstille/src/editor
Message-ID: <200908302011.n7UKBXvY029153@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:11:32 +0200 (Sun, 30 Aug 2009)
New Revision: 3137

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_selector.hpp
   trunk/windstille/src/editor/select_mask.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
Log:
Use unsigned int instead of low level uint16_t/uint32_t

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -347,13 +347,13 @@
   grid_layer->set_active(false);
 
   action_group->add(toggle_color_layer,
-                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (uint32_t)SceneContext::COLORMAP));
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (unsigned int)SceneContext::COLORMAP));
   action_group->add(toggle_light_layer,
-                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_light_layer, (uint32_t)SceneContext::LIGHTMAP));
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_light_layer, (unsigned int)SceneContext::LIGHTMAP));
   action_group->add(toggle_highlight_layer,
-                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_highlight_layer, (uint32_t)SceneContext::HIGHLIGHTMAP));
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_highlight_layer, (unsigned int)SceneContext::HIGHLIGHTMAP));
   action_group->add(toggle_control_layer,
-                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_control_layer, (uint32_t)SceneContext::CONTROLMAP));
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_control_layer, (unsigned int)SceneContext::CONTROLMAP));
   action_group->add(background_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_background_layer), background_layer));
   action_group->add(visible_layer,
@@ -732,7 +732,7 @@
 }
 
 void
-EditorWindow::toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask)
+EditorWindow::toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, unsigned int mask)
 {
   if (WindstilleWidget* wst = get_windstille_widget())
     {

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -131,7 +131,7 @@
 
   void on_select_all();
 
-  void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask);
+  void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, unsigned int mask);
   void toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action);
   void toggle_draw_only_active_layer(Glib::RefPtr<Gtk::ToggleAction> action);
   void toggle_grid_layer(Glib::RefPtr<Gtk::ToggleAction> action);

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/object_model.cpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -44,7 +44,7 @@
   
   int mask = 1;
   reader.get("select-mask", mask);
-  select_mask = SelectMask(static_cast<uint16_t>(mask));
+  select_mask = SelectMask(static_cast<unsigned int>(mask));
 }
 
 ObjectModel::~ObjectModel()
@@ -68,7 +68,7 @@
     .write("id", get_id())
     .write("pos", rel_pos)
     .write("parent", parent.get() ? parent->get_id() : "")
-    .write("select-mask", select_mask.get_mask());
+    .write("select-mask", static_cast<int>(select_mask.get_mask()));
 }
 
 ObjectModelHandle

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -35,7 +35,7 @@
   Gtk::TreeModelColumn<std::string> url;
   Gtk::TreeModelColumn<std::string> pathname;
   Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > icon;
-  Gtk::TreeModelColumn<uint32_t>    filter_mask;
+  Gtk::TreeModelColumn<unsigned int>    filter_mask;
   
   static ObjectSelector::Columns& instance() {
     if (instance_)
@@ -161,7 +161,7 @@
 ObjectSelector::add_decal(const Glib::RefPtr<Gdk::Pixbuf>& icon,
                           const std::string& pathname,
                           const std::string& url,
-                          uint32_t filter_)
+                          unsigned int filter_)
 {
   Gtk::ListStore::iterator it = list_store->append();
 
@@ -186,7 +186,7 @@
 }
 
 void
-ObjectSelector::add_decals_from_directory(const std::string& pathname, uint32_t filter_)
+ObjectSelector::add_decals_from_directory(const std::string& pathname, unsigned int filter_)
 {
   std::vector<Glib::ustring> images;
 

Modified: trunk/windstille/src/editor/object_selector.hpp
===================================================================
--- trunk/windstille/src/editor/object_selector.hpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/object_selector.hpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -45,10 +45,10 @@
 
   struct ComboBoxEntry {
     std::string name;
-    uint32_t filter_mask;
+    unsigned int filter_mask;
 
     ComboBoxEntry(const std::string& name_, 
-                  uint32_t filter_mask_)
+                  unsigned int filter_mask_)
       : name(name_),
         filter_mask(filter_mask_)
     {}
@@ -59,27 +59,27 @@
   class Columns;
 
   enum {
-    OBJECT_GROUP_LIGHT      = (1<<0),
-    OBJECT_GROUP_HIGHLIGHT  = (1<<1),
-    OBJECT_GROUP_DECAL      = (1<<2),
+    OBJECT_GROUP_LIGHT      = (1u<<0),
+    OBJECT_GROUP_HIGHLIGHT  = (1u<<1),
+    OBJECT_GROUP_DECAL      = (1u<<2),
 
-    OBJECT_GROUP_GROUND     = (1<<3),
-    OBJECT_GROUP_BACKGROUND = (1<<4),
-    OBJECT_GROUP_WALL       = (1<<5),
-    OBJECT_GROUP_OBJECT     = (1<<6),
-    OBJECT_GROUP_DECOR      = (1<<7),
-    OBJECT_GROUP_DOOR       = (1<<8),
-    OBJECT_GROUP_LAMP       = (1<<9),
+    OBJECT_GROUP_GROUND     = (1u<<3),
+    OBJECT_GROUP_BACKGROUND = (1u<<4),
+    OBJECT_GROUP_WALL       = (1u<<5),
+    OBJECT_GROUP_OBJECT     = (1u<<6),
+    OBJECT_GROUP_DECOR      = (1u<<7),
+    OBJECT_GROUP_DOOR       = (1u<<8),
+    OBJECT_GROUP_LAMP       = (1u<<9),
 
-    OBJECT_GROUP_CHARACTER  = (1<<10),
-    OBJECT_GROUP_CREATURE   = (1<<11),
+    OBJECT_GROUP_CHARACTER  = (1u<<10),
+    OBJECT_GROUP_CREATURE   = (1u<<11),
 
-    OBJECT_GROUP_PARTICLESYSTEM = (1<<12),
+    OBJECT_GROUP_PARTICLESYSTEM = (1u<<12),
 
-    OBJECT_GROUP_ALL        = ~0
+    OBJECT_GROUP_ALL        = ~0u
   };
 
-  uint32_t filter_mask;
+  unsigned int filter_mask;
 
 public:
   ObjectSelector(EditorWindow& editor);
@@ -88,9 +88,9 @@
   void add_decal(const Glib::RefPtr<Gdk::Pixbuf>& icon,
                  const std::string& pathname,
                  const std::string& url,
-                 uint32_t filter);
+                 unsigned int filter);
 
-  void add_decals_from_directory(const std::string& pathname, uint32_t filter);
+  void add_decals_from_directory(const std::string& pathname, unsigned int filter);
 
   void populate();
   void refresh();

Modified: trunk/windstille/src/editor/select_mask.hpp
===================================================================
--- trunk/windstille/src/editor/select_mask.hpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/select_mask.hpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -18,19 +18,17 @@
 
 #ifndef HEADER_WINDSTILLE_EDITOR_SELECT_MASK_HPP
 #define HEADER_WINDSTILLE_EDITOR_SELECT_MASK_HPP
-
-#include <stdint.h>
 
 class SelectMask
 {
 private:
-  uint16_t mask;
+  unsigned int mask;
 
 public:
-  SelectMask() : mask(~0) {}
-  SelectMask(uint16_t mask_) : mask(mask_) {}
+  SelectMask() : mask(~0u) {}
+  SelectMask(unsigned int mask_) : mask(mask_) {}
 
-  uint16_t get_mask() const
+  unsigned int get_mask() const
   {
     return mask; 
   }
@@ -44,11 +42,11 @@
   {
     if (enable)
       {
-        mask = static_cast<uint16_t>(mask | (1u<<layer));
+        mask = mask | (1u<<layer);
       }
     else
       {
-        mask = static_cast<uint16_t>(mask & (~(1u<<layer)));
+        mask = mask & (~(1u<<layer));
       }
   }
 

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -24,7 +24,7 @@
 #include "editor/editor_window.hpp"
 #include "editor/select_tool.hpp"
 
-static const uint32_t MOVE_TIMEOUT = 100;
+static const guint32 MOVE_TIMEOUT = 100;
 static const int MOVE_THRESHOLD = 16;
 
 SelectTool::SelectTool()

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-08-30 20:05:07 UTC (rev 3136)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-08-30 20:11:32 UTC (rev 3137)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_SELECT_TOOL_HPP
 #define HEADER_WINDSTILLE_EDITOR_SELECT_TOOL_HPP
 
-#include <stdint.h>
-
 #include "math/rect.hpp"
 #include "editor/object_model.hpp"
 #include "editor/tool.hpp"
@@ -32,7 +30,7 @@
   Rectf    rect;
   SelectionHandle selection;
   ControlPointHandle ctrl_point;
-  uint32_t start_time;
+  guint32 start_time;
   
   enum { 
     SELECT_MODE,



From grumbel at mail.berlios.de  Sun Aug 30 22:14:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:14:03 +0200
Subject: [Windstille-commit] r3138 - trunk/windstille/src/screen
Message-ID: <200908302014.n7UKE35k029398@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:14:02 +0200 (Sun, 30 Aug 2009)
New Revision: 3138

Modified:
   trunk/windstille/src/screen/screen_manager.cpp
Log:
Some sleep inbetween frames

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-08-30 20:11:32 UTC (rev 3137)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-08-30 20:14:02 UTC (rev 3138)
@@ -104,6 +104,8 @@
     poll_events();
 
     apply_pending_actions();
+
+    SDL_Delay(5);
   }
 }
 



From grumbel at mail.berlios.de  Sun Aug 30 22:14:18 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:14:18 +0200
Subject: [Windstille-commit] r3139 - trunk/windstille/src/objects
Message-ID: <200908302014.n7UKEIUP029453@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:14:18 +0200 (Sun, 30 Aug 2009)
New Revision: 3139

Modified:
   trunk/windstille/src/objects/doll.cpp
   trunk/windstille/src/objects/doll.hpp
Log:
Some preparations for jumping

Modified: trunk/windstille/src/objects/doll.cpp
===================================================================
--- trunk/windstille/src/objects/doll.cpp	2009-08-30 20:14:02 UTC (rev 3138)
+++ trunk/windstille/src/objects/doll.cpp	2009-08-30 20:14:18 UTC (rev 3139)
@@ -86,7 +86,8 @@
   if (m_state != kJumpUp)
   {
     m_state = kJumpUp;
-    m_drawable->get_sprite().set_next_action("JumpUp");
+    m_drawable->get_sprite().set_action("JumpUp");
+    m_drawable->get_sprite().set_next_action("Stand");
   }
 }
 
@@ -188,6 +189,12 @@
     m_drawable->get_sprite().set_action("Climb");
   }
 }
+
+void
+Doll::set_state_jump()
+{
+    
+}
 
 void
 Doll::update_falling(const Controller& controller, float delta)
@@ -216,7 +223,7 @@
   {
     set_state_ducking();
   }
-  else if (controller.get_button_state(JUMP_BUTTON))
+  else if (controller.button_was_pressed(JUMP_BUTTON))
   {
     std::cout << "Jump Up" << std::endl;
     set_state_jump_up();
@@ -306,12 +313,12 @@
 }
 
 void
-Doll::update_jump_up(const Controller& controller, float /*delta*/)
+Doll::update_jump_up(const Controller& /*controller*/, float /*delta*/)
 {
-  if (!controller.get_button_state(JUMP_BUTTON))
+  if (m_drawable->get_sprite().switched_actions())
   {
     set_state_standing();
-  }  
+  }
 }
 
 void
@@ -422,4 +429,9 @@
 {
 }
 
+void
+Doll::update_jump(const Controller& /*controller*/, float /*delta*/)
+{
+}
+
 /* EOF */

Modified: trunk/windstille/src/objects/doll.hpp
===================================================================
--- trunk/windstille/src/objects/doll.hpp	2009-08-30 20:14:02 UTC (rev 3138)
+++ trunk/windstille/src/objects/doll.hpp	2009-08-30 20:14:18 UTC (rev 3139)
@@ -78,6 +78,7 @@
   void set_state_listing();
   void set_state_swinging();
   void set_state_climbing();
+  void set_state_jump();
 
   void update_falling(const Controller& controller, float delta);
   void update_standing(const Controller& controller, float delta);
@@ -89,8 +90,8 @@
   void update_listing(const Controller& controller, float delta);
   void update_swinging(const Controller& controller, float delta);
   void update_climbing(const Controller& controller, float delta);
+  void update_jump(const Controller& controller, float delta);
 
-
 private:
   Doll(const Doll&);
   Doll& operator=(const Doll&);



From grumbel at mail.berlios.de  Sun Aug 30 22:31:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:31:16 +0200
Subject: [Windstille-commit] r3140 - in trunk/windstille/src: engine
	scripting
Message-ID: <200908302031.n7UKVGlU031273@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:31:15 +0200 (Sun, 30 Aug 2009)
New Revision: 3140

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Added some missing includes

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-08-30 20:14:18 UTC (rev 3139)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-08-30 20:31:15 UTC (rev 3140)
@@ -24,6 +24,7 @@
 #include <sqstdmath.h>
 #include <sqstdstring.h>
 #include <fstream>
+#include <sstream>
 
 #include "engine/squirrel_thread.hpp"
 #include "app/console.hpp"

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-30 20:14:18 UTC (rev 3139)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-30 20:31:15 UTC (rev 3140)
@@ -18,6 +18,8 @@
 
 #include "engine/sector.hpp"
 
+#include <sstream>
+
 #include "collision/collision_engine.hpp"
 #include "engine/squirrel_thread.hpp"
 #include "navigation/navigation_graph.hpp"

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-08-30 20:14:18 UTC (rev 3139)
+++ trunk/windstille/src/scripting/interface.cpp	2009-08-30 20:31:15 UTC (rev 3140)
@@ -18,6 +18,8 @@
 
 #include "scripting/wrapper.interface.hpp"
 
+#include <sstream>
+
 #include "lisp/lisp.hpp"
 #include "app/config.hpp"
 #include "display/opengl_window.hpp"
@@ -408,7 +410,7 @@
   for(std::vector<lisp::Lisp*>::iterator i = entries.begin(); i != entries.end(); ++i)
   {
     ConsoleLog << (i - entries.begin()) << ": ";
-    std::stringstream str;
+    std::ostringstream str;
     (*i)->print(str);
     ConsoleLog << str.str();
     ConsoleLog << std::endl;



From grumbel at mail.berlios.de  Sun Aug 30 22:34:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 22:34:37 +0200
Subject: [Windstille-commit] r3141 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200908302034.n7UKYb8A031759@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 22:34:37 +0200 (Sun, 30 Aug 2009)
New Revision: 3141

Added:
   trunk/windstille/data/sectors/trainstation/init.nut
Log:
Added missing script file

Added: trunk/windstille/data/sectors/trainstation/init.nut
===================================================================



From grumbel at mail.berlios.de  Sun Aug 30 23:11:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 23:11:21 +0200
Subject: [Windstille-commit] r3142 - trunk/windstille/src/display
Message-ID: <200908302111.n7ULBLGJ002087@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 23:11:21 +0200 (Sun, 30 Aug 2009)
New Revision: 3142

Modified:
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/display/texture.cpp
Log:
Disabled TexturePacker, use non-power-of-two Textures directly

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-08-30 20:34:37 UTC (rev 3141)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-08-30 21:11:21 UTC (rev 3142)
@@ -26,7 +26,7 @@
 
 
 SurfaceManager::SurfaceManager()
-  : texture_packer(new TexturePacker(Size(2048, 2048))),
+  : texture_packer(0), // (new TexturePacker(Size(2048, 2048))),
     surfaces()
 {
 }
@@ -51,42 +51,43 @@
   Surfaces::iterator i = surfaces.find(filename);
 
   if(i != surfaces.end())
-    { // Surface in cache, return it
-      return i->second;
-    }
+  { // Surface in cache, return it
+    return i->second;
+  }
   else
+  {
+    SoftwareSurface software_surface(filename);
+
+    if (texture_packer)
     {
-      SoftwareSurface image(filename);
+      Surface result = texture_packer->upload(software_surface);
+      surfaces.insert(std::make_pair(filename, result));
+      return result;              
+    }
+    else
+    {
+      float maxu = 0.0f;
+      float maxv = 0.0f;
+      Texture texture;
 
-      if (1)
-        {
-          Surface result = texture_packer->upload(image);
-          surfaces.insert(std::make_pair(filename, result));
-          return result;              
-        }
-      else
-        {
-          float maxu, maxv;
-          Texture texture;
-
-          try
-            {
-              texture = create_texture(image, maxu, maxv);
-            }
-          catch(std::exception& e)
-            {
-              std::ostringstream msg;
-              msg << "Couldn't create texture for '" << filename << "': " << e.what();
-              throw std::runtime_error(msg.str());
-            }
+      try
+      {
+        texture = create_texture(software_surface, &maxu, &maxv);
+      }
+      catch(std::exception& e)
+      {
+        std::ostringstream msg;
+        msg << "Couldn't create texture for '" << filename << "': " << e.what();
+        throw std::runtime_error(msg.str());
+      }
         
-          Surface result(texture, Rectf(0.0f, 0.0f, maxu, maxv),
-                         Sizef(static_cast<float>(image.get_width()),
-                               static_cast<float>(image.get_height())));
-          surfaces.insert(std::make_pair(filename, result));
-          return result;
-        }      
+      Surface result(texture, Rectf(0.0f, 0.0f, maxu, maxv),
+                     Sizef(static_cast<float>(software_surface.get_width()),
+                           static_cast<float>(software_surface.get_height())));
+      surfaces.insert(std::make_pair(filename, result));
+      return result;
     }
+  }
 }
 
 void
@@ -101,7 +102,7 @@
 
   try
     {                                                                       
-      texture = create_texture(image, maxu, maxv);
+      texture = create_texture(image, &maxu, &maxv);
     }
   catch(std::exception& e)
     {
@@ -129,10 +130,11 @@
 
 Texture
 SurfaceManager::create_texture(const SoftwareSurface& image,
-                               float& maxu, float& maxv)
+                               float* maxu, float* maxv)
 {
-  int texture_w = math::round_to_power_of_two(image.get_width());
-  int texture_h = math::round_to_power_of_two(image.get_height());
+  // OpenGL2.0 should be fine with non-power-of-two
+  int texture_w = image.get_width();  //math::round_to_power_of_two(image.get_width());
+  int texture_h = image.get_height(); //math::round_to_power_of_two(image.get_height());
 
   SoftwareSurface convert(texture_w, texture_h);
 
@@ -140,8 +142,8 @@
 
   Texture texture = Texture(convert);
   
-  maxu = static_cast<float>(image.get_width())/static_cast<float>(texture_w);
-  maxv = static_cast<float>(image.get_height())/static_cast<float>(texture_h);
+  *maxu = static_cast<float>(image.get_width())  / static_cast<float>(texture_w);
+  *maxv = static_cast<float>(image.get_height()) / static_cast<float>(texture_h);
 
   return texture;
 }

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-08-30 20:34:37 UTC (rev 3141)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-08-30 21:11:21 UTC (rev 3142)
@@ -57,7 +57,7 @@
                  std::vector<Surface>& surfaces, int width, int height);
 
   Texture create_texture(const SoftwareSurface& image,
-                         float& maxu, float& maxv);
+                         float* maxu, float* maxv);
 
   /** Removes all cached Sprites that are no longer in use */
   void cleanup();

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-08-30 20:34:37 UTC (rev 3141)
+++ trunk/windstille/src/display/texture.cpp	2009-08-30 21:11:21 UTC (rev 3142)
@@ -96,8 +96,9 @@
   impl->width  = image.get_width();
   impl->height = image.get_height();
 
-  if(!is_power_of_2(image.get_width()) || !is_power_of_2(image.get_height()))
-    throw std::runtime_error("image has no power of 2 size");
+  // Should be ok with OpenGL2.0
+  //if(!is_power_of_2(image.get_width()) || !is_power_of_2(image.get_height()))
+  //throw std::runtime_error("image has no power of 2 size");
 
   if (image.get_bits_per_pixel() != 24 && image.get_bits_per_pixel() != 32)
     throw std::runtime_error("image has not 24 or 32 bit color depth");
@@ -138,24 +139,24 @@
       glPixelStorei(GL_UNPACK_ROW_LENGTH, image.get_pitch() / image.get_bytes_per_pixel());
 
       if (0)
-        {
-          glTexImage2D(impl->target, 0, glformat,
-                       image.get_width(), image.get_height(), 0, sdl_format,
-                       GL_UNSIGNED_BYTE, image.get_pixels());
-
-          glTexParameteri(impl->target, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
-          glTexParameteri(impl->target, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
-        }
+      { // no mipmapping
+        glTexImage2D(impl->target, 0, glformat,
+                     image.get_width(), image.get_height(), 0, sdl_format,
+                     GL_UNSIGNED_BYTE, image.get_pixels());
+        
+        glTexParameteri(impl->target, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+        glTexParameteri(impl->target, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+      }
       else
-        {
-          gluBuild2DMipmaps(impl->target, glformat,
-                            image.get_width(), image.get_height(), sdl_format,
-                            GL_UNSIGNED_BYTE, image.get_pixels());
+      { // use mipmapping
+        gluBuild2DMipmaps(impl->target, glformat,
+                          image.get_width(), image.get_height(), sdl_format,
+                          GL_UNSIGNED_BYTE, image.get_pixels());
+        
+        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
+        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
+      }
 
-          glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR_MIPMAP_LINEAR);
-          glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
-        }
-
       assert_gl("creating texture");
 
       glTexParameteri(impl->target, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);



From grumbel at mail.berlios.de  Sun Aug 30 23:12:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 30 Aug 2009 23:12:55 +0200
Subject: [Windstille-commit] r3143 - trunk/windstille
Message-ID: <200908302112.n7ULCteK002242@sheep.berlios.de>

Author: grumbel
Date: 2009-08-30 23:12:55 +0200 (Sun, 30 Aug 2009)
New Revision: 3143

Modified:
   trunk/windstille/TODO
Log:
TODO updates and reorganisation

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-08-30 21:11:21 UTC (rev 3142)
+++ trunk/windstille/TODO	2009-08-30 21:12:55 UTC (rev 3143)
@@ -10,6 +10,18 @@
 in the context of the whole game or if a potential performance
 enhanchment, actually enhanchmes anything at all.
 
+Animation
+=========
+
+* Walk animation should be speed up by 1.25, so its half of run speed
+
+  Real World Numbers:
+  -------------------
+  * walk:     5 km/h
+  * jogging: 10 km/h
+  * run:     20 km/h (1500m run)
+  * run:     30 km/h (100m sprint)
+
 Pathname/PhysFS
 ===============
 
@@ -28,9 +40,18 @@
 
 * might have some advantage to place stuff in a QuadTree, when you have a complex level
 
+Navigation Graph
+================
+
+* NavigationGraph needs hooks into scripting, so that things can be
+  triggered when a character passes over a specific trigger node or
+  things like that.
+
 Display
 =======
 
+* OpenGLState class is really slow (rewrite it to not use std::map, also remove the impl allocation)
+
 * Display::push/pop_cliprect() doesn't handle different aspect-ratios properly
 
 * lightmap is broken with non-standard aspect-ratio
@@ -87,10 +108,6 @@
   - put suspendable functions into a different namespace
   - ...
 
-* NavigationGraph needs hooks into scripting, so that things can be
-  triggered when a character passes over a specific trigger node or
-  things like that.
-
 * add function that clears all scripts and rereads them from file (for
   debugging)
 
@@ -521,7 +538,9 @@
 Graphics
 ========
 
-* do not make light larger then 256, maybe even smaller is ok
+* do not make light larger then 256, maybe even smaller is ok (large
+  light is a waste of space, as you don't see much pixelation in
+  gradients)
 
 * do *NOT* use power of two textures, use multiple of 64/128 instead
   (128 is easy to snap, power of two doesn't help, since textures are



From grumbel at mail.berlios.de  Mon Aug 31 01:08:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 01:08:32 +0200
Subject: [Windstille-commit] r3144 - trunk/windstille/src/display
Message-ID: <200908302308.n7UN8WSU016163@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 01:08:20 +0200 (Mon, 31 Aug 2009)
New Revision: 3144

Modified:
   trunk/windstille/src/display/opengl_window.cpp
Log:
Check if OpenGL supports FramebufferObject

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-30 21:12:55 UTC (rev 3143)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-30 23:08:20 UTC (rev 3144)
@@ -54,19 +54,19 @@
   else
     {
       GLenum err = glewInit();
-      if(err != GLEW_OK) 
+      if (err != GLEW_OK) 
       {
         std::ostringstream msg;
         msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
         throw std::runtime_error(msg.str());
       }
-      /*
-        if(!GLEW_EXT_framebuffer_object) {
+
+      if (!GLEW_EXT_framebuffer_object) 
+      {
         std::ostringstream msg;
         msg << "Display:: Framebuffer opengl extension not supported";
         throw std::runtime_error(msg.str());
-        }
-      */
+      }
 
       glViewport(0, 0, m_window->w, m_window->h);
       glMatrixMode(GL_PROJECTION);
@@ -74,9 +74,6 @@
 
       static const float cl_pixelcenter_constant = 0.375;
 
-      //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
-  
-      // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
       Display::aspect_size = Size(config.get_int("aspect-width"), 
                                   config.get_int("aspect-height"));
 



From grumbel at mail.berlios.de  Mon Aug 31 01:18:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 01:18:47 +0200
Subject: [Windstille-commit] r3145 - trunk/windstille/src/display
Message-ID: <200908302318.n7UNIlx7002286@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 01:18:47 +0200 (Mon, 31 Aug 2009)
New Revision: 3145

Modified:
   trunk/windstille/src/display/compositor.cpp
Log:
Properly render SceneGraph when using the with_framebuffer rendering path

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-30 23:08:20 UTC (rev 3144)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-30 23:18:47 UTC (rev 3145)
@@ -54,8 +54,8 @@
   Surface lightmap;
 
   CompositorImpl()
-    : framebuffers(0),
-      //framebuffers(new Framebuffers()),
+    : //framebuffers(0),
+      framebuffers(new Framebuffers()),
       lightmap(Display::get_width()  / LIGHTMAP_DIV,
                Display::get_height() / LIGHTMAP_DIV)
   {}
@@ -104,7 +104,8 @@
 }
 
 void
-Compositor::render_with_framebuffers(SceneContext& sc, SceneGraph* sg)
+Compositor::render_with_framebuffers(SceneContext& sc, SceneGraph* sg,
+                                     const GraphicContextState& gc_state)
 {
   glClear(GL_DEPTH_BUFFER_BIT);
       
@@ -119,6 +120,15 @@
     glTranslatef(0.0f, static_cast<float>(Display::get_height() - (Display::get_height() / LIGHTMAP_DIV)), 0.0f);
     glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
     sc.light().render(*this);
+
+    if (sg)
+    {
+      glPushMatrix();
+      glMultMatrixf(gc_state.get_matrix().matrix);
+      sg->draw(Texture(), SceneContext::LIGHTMAP);
+      glPopMatrix();
+    }
+
     glPopMatrix();
 
     Display::pop_framebuffer();
@@ -130,6 +140,15 @@
     Display::push_framebuffer(impl->framebuffers->screen);
     glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
     sc.color().render(*this);
+
+    if (sg)
+    {
+      glPushMatrix();
+      glMultMatrixf(gc_state.get_matrix().matrix);
+      sg->draw(Texture(), SceneContext::COLORMAP);
+      glPopMatrix();
+    }
+
     Display::pop_framebuffer();
   }
 
@@ -144,6 +163,15 @@
   {
     Display::push_framebuffer(impl->framebuffers->screen);
     sc.highlight().render(*this);
+
+    if (sg)
+    {
+      glPushMatrix();
+      glMultMatrixf(gc_state.get_matrix().matrix);
+      sg->draw(Texture(), SceneContext::HIGHLIGHTMAP);
+      glPopMatrix();
+    }
+
     Display::pop_framebuffer();
   }
 
@@ -194,7 +222,7 @@
 Compositor::render_without_framebuffers(SceneContext& sc, SceneGraph* sg, const GraphicContextState& gc_state)
 {
   // Resize Lightmap, only needed in the editor, FIXME: move this into a 'set_size()' call
-  if (impl->lightmap.get_width()  != Display::get_width()/LIGHTMAP_DIV ||
+  if (impl->lightmap.get_width()  != Display::get_width() /LIGHTMAP_DIV ||
       impl->lightmap.get_height() != Display::get_height()/LIGHTMAP_DIV)
   {
     impl->lightmap = Surface(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV);
@@ -311,7 +339,7 @@
 {
   if (impl->framebuffers)
   {
-    render_with_framebuffers(sc, sg);
+    render_with_framebuffers(sc, sg, state);
   }
   else
   {



From grumbel at mail.berlios.de  Mon Aug 31 01:37:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 01:37:50 +0200
Subject: [Windstille-commit] r3146 - trunk/windstille/src/display
Message-ID: <200908302337.n7UNbo9E032731@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 01:37:50 +0200 (Mon, 31 Aug 2009)
New Revision: 3146

Modified:
   trunk/windstille/src/display/compositor.hpp
Log:
Properly render SceneGraph when using the with_framebuffer rendering path

Modified: trunk/windstille/src/display/compositor.hpp
===================================================================
--- trunk/windstille/src/display/compositor.hpp	2009-08-30 23:18:47 UTC (rev 3145)
+++ trunk/windstille/src/display/compositor.hpp	2009-08-30 23:37:50 UTC (rev 3146)
@@ -37,7 +37,8 @@
   void eval(Drawable* request);
 
 private:
-  void render_with_framebuffers(SceneContext& sc, SceneGraph* sg);
+  void render_with_framebuffers(SceneContext& sc, SceneGraph* sg,
+                                const GraphicContextState& state);
   void render_without_framebuffers(SceneContext& sc, SceneGraph* sg, 
                                    const GraphicContextState& state);
 



From grumbel at mail.berlios.de  Mon Aug 31 01:38:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 01:38:01 +0200
Subject: [Windstille-commit] r3147 - trunk/windstille/src/display
Message-ID: <200908302338.n7UNc17S032762@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 01:38:00 +0200 (Mon, 31 Aug 2009)
New Revision: 3147

Modified:
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/render_buffer.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-08-30 23:37:50 UTC (rev 3146)
+++ trunk/windstille/src/display/display.cpp	2009-08-30 23:38:00 UTC (rev 3147)
@@ -538,8 +538,6 @@
 Display::push_framebuffer(Framebuffer& framebuffer)
 {
   framebuffers.push_back(framebuffer);
-  // FIXME: How expensive is it to switch framebuffers? might be worth
-  // to optimze some switches away
   glBindFramebufferEXT(GL_FRAMEBUFFER_EXT, framebuffers.back().get_handle());
 }
 

Modified: trunk/windstille/src/display/render_buffer.hpp
===================================================================
--- trunk/windstille/src/display/render_buffer.hpp	2009-08-30 23:37:50 UTC (rev 3146)
+++ trunk/windstille/src/display/render_buffer.hpp	2009-08-30 23:38:00 UTC (rev 3147)
@@ -23,7 +23,6 @@
 
 class RenderBufferImpl;
 
-/** */
 class RenderBuffer
 {
 public:



From grumbel at mail.berlios.de  Mon Aug 31 01:44:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 01:44:32 +0200
Subject: [Windstille-commit] r3148 - trunk/windstille/src/editor
Message-ID: <200908302344.n7UNiWHW000462@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 01:44:31 +0200 (Mon, 31 Aug 2009)
New Revision: 3148

Modified:
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Use proper width/height for the GraphicContextState

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-30 23:38:00 UTC (rev 3147)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-30 23:44:31 UTC (rev 3148)
@@ -303,8 +303,7 @@
           EditorWindow::current()->get_current_tool()->draw(*sc);
         }
 
-      compositor->render(*sc, 0, GraphicContextState(Display::get_width(),
-                                                     Display::get_height()));
+      compositor->render(*sc, 0, GraphicContextState(get_width(), get_height()));
 
       state.pop(*sc);
 



From grumbel at mail.berlios.de  Mon Aug 31 01:47:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 01:47:27 +0200
Subject: [Windstille-commit] r3149 - trunk/windstille/src/editor
Message-ID: <200908302347.n7UNlR1J000706@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 01:47:27 +0200 (Mon, 31 Aug 2009)
New Revision: 3149

Modified:
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Added SceneGraph to the Editor (not yet used in objects)

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-08-30 23:44:31 UTC (rev 3148)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-08-30 23:47:27 UTC (rev 3149)
@@ -23,6 +23,7 @@
 #include <gdkmm/pixbuf.h>
 
 #include "navigation/navigation_graph.hpp"
+#include "scenegraph/scene_graph.hpp"
 #include "navigation/edge.hpp"
 #include "navigation/node.hpp"
 #include "editor/editor_window.hpp"
@@ -37,6 +38,7 @@
 
 SectorModel::SectorModel()
   : nav_graph(new NavigationGraph()),
+    scene_graph(new SceneGraph()),
     layer_tree(),
     ambient_color()
 {

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-08-30 23:44:31 UTC (rev 3148)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-08-30 23:47:27 UTC (rev 3149)
@@ -32,6 +32,7 @@
 #include "math/vector2f.hpp"
 
 class NavigationGraph;
+class SceneGraph;
 class SceneContext;
 class LayerManagerColumns;
 
@@ -74,7 +75,8 @@
 {
 private:
   boost::scoped_ptr<NavigationGraph> nav_graph;
-  Glib::RefPtr<Gtk::ListStore>   layer_tree;
+  boost::scoped_ptr<SceneGraph>      scene_graph;
+  Glib::RefPtr<Gtk::ListStore> layer_tree;
   Color ambient_color;
   
 public:
@@ -132,6 +134,7 @@
   void write(FileWriter& writer) const;
 
   NavigationGraph* get_nav_graph() const { return nav_graph.get(); }
+  SceneGraph*      get_scene_graph() const { return scene_graph.get(); }
 
   void queue_draw();
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-30 23:44:31 UTC (rev 3148)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-30 23:47:27 UTC (rev 3149)
@@ -303,7 +303,7 @@
           EditorWindow::current()->get_current_tool()->draw(*sc);
         }
 
-      compositor->render(*sc, 0, GraphicContextState(get_width(), get_height()));
+      compositor->render(*sc, sector_model->get_scene_graph(), GraphicContextState(get_width(), get_height()));
 
       state.pop(*sc);
 



From grumbel at mail.berlios.de  Mon Aug 31 02:12:06 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 02:12:06 +0200
Subject: [Windstille-commit] r3150 - trunk/windstille
Message-ID: <200908310012.n7V0C69t002480@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 02:12:05 +0200 (Mon, 31 Aug 2009)
New Revision: 3150

Modified:
   trunk/windstille/SConscript
Log:
Added BUILD variable to set the build type (release, debug, ...)

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-30 23:47:27 UTC (rev 3149)
+++ trunk/windstille/SConscript	2009-08-31 00:12:05 UTC (rev 3150)
@@ -22,21 +22,32 @@
 
 CacheDir('cache')
 
-debug_cxxflags = [
-    "-O0",
-    "-g",
-    "-ansi",
-    "-pedantic",
-    "-Wall",
-    "-Wextra",
-    "-Wnon-virtual-dtor",
-    "-Weffc++",
-    "-Wconversion",
-    "-Werror",
-    "-Wshadow",
-    "-Winline",
-    #"-Wunreachable-code",
-    ]
+preset_cxxflags = {
+    'release':     [ "-O3", "-s"  ],
+    'profile':     [ "-O2", "-g3", "-pg" ],
+    'debug':       [ "-O0", "-g3" ],
+    'development': [ "-O0", "-g3",
+                     "-ansi",
+                     "-pedantic",
+                     "-Wall",
+                     "-Wextra",
+                     "-Wnon-virtual-dtor",
+                     "-Weffc++",
+                     "-Wconversion",
+                     "-Werror",
+                     "-Wshadow",
+                     "-Winline",
+                     #"-Wunreachable-code",
+                     ]
+    }
+
+preset_linkflags = {
+    'release': [],
+    'profile': [ "-pg" ],
+    'debug':   [],
+    'development': []
+    }
+
 
 # YACC
 yacc_test_text = """
@@ -113,20 +124,17 @@
 
 class Project:
     def __init__(self):
-        self.cxx = 'g++-4.4'
-        self.cxxflags = debug_cxxflags
-        
         self.features = {
             "64bit" : 0,
             "cwiid" : 0
-            }        
+            }
 
     def build_all(self):
         self.env = Environment()
 
         if not GetOption('clean'):
             self.configure()
-        
+
         self.build_squirrel()
         self.build_miniswig()
         self.build_binreloc()
@@ -135,14 +143,14 @@
         self.build_windstille_editor()
         self.build_windstille_data()
         self.build_testapps()
-        
+
     def configure(self):
         # FIXME: None of the options are used, as only self.features
         # makes it across function calls
-        
+
         # FIXME: Giving multiple CCFLAGS doesn't work since they have to be
         # broken down to a list
-        opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
+        opts = Variables(['custom.py'], ARGUMENTS)
         opts.Add('CPPPATH', 'Additional preprocessor paths')
         opts.Add('CPPFLAGS', 'Additional preprocessor flags')
         opts.Add('CPPDEFINES', 'defined constants')
@@ -152,26 +160,29 @@
         opts.Add('CXXFLAGS', 'C++ Compiler flags')
         opts.Add('LINKFLAGS', 'Linker Compiler flags')
         opts.Add('CC', 'C Compiler')
-        opts.Add('CXX', 'C++ Compiler')  
+        opts.Add('CXX', 'C++ Compiler')
+        opts.Add('BUILD', 'Build type: release, profile, debug, development')
         opts.Update(self.env)
-        opts.Save('options.cache', self.env)
+        # opts.Save('options.cache', self.env)
         Help(opts.GenerateHelpText(self.env))
 
+        if 'BUILD' in self.env:
+            self.env.Append(CXXFLAGS  = preset_cxxflags[self.env['BUILD']],
+                            LINKFLAGS = preset_linkflags[self.env['BUILD']])
+        else:
+            self.env.Append(CXXFLAGS  = preset_cxxflags['release'],
+                            LINKFLAGS = preset_linkflags['release'])
+
         conf = Configure(self.env, custom_tests = { 'Check32bit' : Check32bit,
                                                     'CheckYacc'  : CheckYacc,
                                                     'CheckLex'   : CheckLex})
 
-        # conf.CheckCXX()
+        if self.env['CXX']:
+            print "Using C++ compiler...", self.env['CXX']
+        else:
+            print "Error: C++ compiler missing"
+            Exit(1)
 
-        if self.cxxflags:
-            conf.env.Append(CXXFLAGS=self.cxxflags)
-
-        if 'CXX' in os.environ:
-            conf.env.Replace(CXX = os.environ['CXX'])
-        elif self.cxx:
-            conf.env.Replace(CXX=self.cxx)
-        print("Using compiler " + conf.env['CXX'])
-        
         if conf.Check32bit() == "64bit":
             # conf.env.Append(CXXFLAGS="-D_SQ64")
             self.features["64bit"] = 1
@@ -241,7 +252,7 @@
         self.math_lib      = wstlib_env.StaticLibrary('math', Glob('src/math/*.cpp'))
         self.navgraph_lib  = wstlib_env.StaticLibrary('navgraph', Glob('src/navigation/*.cpp'))
         self.particles_lib = wstlib_env.StaticLibrary('particles', Glob('src/particles/*.cpp'))
-        
+
         # libdisplay
         display_env = wstlib_env.Clone()
         display_env.ParseConfig('sdl-config --cflags --libs | sed "s/-I/-isystem/g"')
@@ -321,7 +332,7 @@
 
     def build_windstille_data(self):
         data_env = self.env.Clone()
-        
+
         data_env.Append(BUILDERS = { "xcf2png" : Builder(action = "xcf2png $SOURCE -o $TARGET",
                                                          src_suffix = ".xcf",
                                                          suffix = ".png") })



From grumbel at mail.berlios.de  Mon Aug 31 02:47:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 02:47:47 +0200
Subject: [Windstille-commit] r3151 - in trunk/windstille: . src/app
	src/engine
Message-ID: <200908310047.n7V0llAI011676@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 02:47:44 +0200 (Mon, 31 Aug 2009)
New Revision: 3151

Modified:
   trunk/windstille/SConscript
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/engine/sector.cpp
Log:
Increased the warning level some more

Modified: trunk/windstille/SConscript
===================================================================
--- trunk/windstille/SConscript	2009-08-31 00:12:05 UTC (rev 3150)
+++ trunk/windstille/SConscript	2009-08-31 00:47:44 UTC (rev 3151)
@@ -26,7 +26,7 @@
     'release':     [ "-O3", "-s"  ],
     'profile':     [ "-O2", "-g3", "-pg" ],
     'debug':       [ "-O0", "-g3" ],
-    'development': [ "-O0", "-g3",
+    'development': [ "-O2", "-g3",
                      "-ansi",
                      "-pedantic",
                      "-Wall",
@@ -36,11 +36,16 @@
                      "-Wconversion",
                      "-Werror",
                      "-Wshadow",
-                     "-Winline",
-                     #"-Wunreachable-code",
+                     "-Wcast-qual",
+                     "-Winit-self", # only works with >= -O1
+                     # "-Winline",
+                     # "-Wfloat-equal",
+                     # "-Wunreachable-code",
                      ]
     }
 
+
+
 preset_linkflags = {
     'release': [],
     'profile': [ "-pg" ],

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-08-31 00:12:05 UTC (rev 3150)
+++ trunk/windstille/src/app/console.cpp	2009-08-31 00:47:44 UTC (rev 3151)
@@ -341,7 +341,7 @@
       const SQChar *s;
       if (SQ_SUCCEEDED(sq_getstring(v,-2, &s)))
         {
-          roottable.push_back((char*)s); // FIXME: likely not going to work on 64bit
+          roottable.push_back(static_cast<const char*>(s)); // FIXME: likely not going to work on 64bit
         }
       else
         {

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-08-31 00:12:05 UTC (rev 3150)
+++ trunk/windstille/src/engine/sector.cpp	2009-08-31 00:47:44 UTC (rev 3151)
@@ -159,7 +159,7 @@
 void
 Sector::add_object(FileReader& reader)
 {
-  GameObject* obj;
+  GameObject* obj = 0;
   if(reader.get_name() == "tilemap") 
   {
     std::auto_ptr<TileMap> tilemap(new TileMap(reader));



From grumbel at mail.berlios.de  Mon Aug 31 13:59:18 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 13:59:18 +0200
Subject: [Windstille-commit] r3152 - trunk/windstille/src/engine
Message-ID: <200908311159.n7VBxIiv030719@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 13:59:17 +0200 (Mon, 31 Aug 2009)
New Revision: 3152

Modified:
   trunk/windstille/src/engine/entity.hpp
   trunk/windstille/src/engine/game_object.hpp
Log:
draw() method is no longer mandatory in GameObject


Modified: trunk/windstille/src/engine/entity.hpp
===================================================================
--- trunk/windstille/src/engine/entity.hpp	2009-08-31 00:47:44 UTC (rev 3151)
+++ trunk/windstille/src/engine/entity.hpp	2009-08-31 11:59:17 UTC (rev 3152)
@@ -52,13 +52,6 @@
 
   virtual void set_pos(Vector2f pos);
 
-  /** Called once per frame to allow the object to draw itself */
-  virtual void draw(SceneContext& gc) = 0;
-
-  /** Called, possible multiple times, per frame to let the object
-      update its position and properties */
-  virtual void update(float delta) = 0;
-
   /** Called when the player uses this entity */
   virtual void use() {}
 

Modified: trunk/windstille/src/engine/game_object.hpp
===================================================================
--- trunk/windstille/src/engine/game_object.hpp	2009-08-31 00:47:44 UTC (rev 3151)
+++ trunk/windstille/src/engine/game_object.hpp	2009-08-31 11:59:17 UTC (rev 3152)
@@ -94,7 +94,7 @@
   /**
    * The object should draw itself when this function is called
    */
-  virtual void draw (SceneContext& context) = 0;
+  virtual void draw (SceneContext& /*sc*/) {}
 
   /**
    * This function is called from time to time to give the object a chance to



From grumbel at mail.berlios.de  Mon Aug 31 13:59:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 13:59:54 +0200
Subject: [Windstille-commit] r3153 - trunk/windstille/src/objects
Message-ID: <200908311159.n7VBxsUv030826@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 13:59:53 +0200 (Mon, 31 Aug 2009)
New Revision: 3153

Modified:
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/liquid.hpp
Log:
draw() method is no longer mandatory in GameObject
Liquid now uses SceneGraph


Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-08-31 11:59:17 UTC (rev 3152)
+++ trunk/windstille/src/objects/liquid.cpp	2009-08-31 11:59:53 UTC (rev 3153)
@@ -16,9 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "scenegraph/vertex_array_drawable.hpp"
 #include "objects/liquid.hpp"
 
+#include "scenegraph/vertex_array_drawable.hpp"
+#include "engine/sector.hpp"
+#include "scenegraph/scene_graph.hpp"
+
 #define SAMPLES 5
 
 Liquid::Liquid(FileReader& props)
@@ -27,7 +30,9 @@
     heightfield_store1(),
     heightfield_store2(),
     heightfield1(),
-    heightfield2()
+    heightfield2(),
+    m_water_top(),
+    m_water_body()
 {
   int width = 10;
   t = 0;
@@ -53,6 +58,16 @@
 
   texture = Texture(Pathname("images/textures/water.png"));
   texture.set_wrap(GL_REPEAT);
+  
+  m_water_top.reset(new VertexArrayDrawable(Vector2f(pos.x, pos.y), 10000,
+                                            Matrix::identity())); //sc.light().get_modelview()));
+
+  m_water_body.reset(new VertexArrayDrawable(Vector2f(pos.x, pos.y), 10000,
+                                             Matrix::identity())); // sc.light().get_modelview());
+
+  Sector::current()->get_scene_graph().add_drawable(m_water_top);
+  Sector::current()->get_scene_graph().add_drawable(m_water_body);
+  update_scene_graph();
 }
 
 Liquid::~Liquid()
@@ -60,85 +75,87 @@
 }
 
 void
-Liquid::draw(SceneContext& sc)
+Liquid::update(float delta)
 {
+  { // Update the heightfield data
+    t += delta * 1.0f;
+    float factor = 0.1f * delta;
+
+    for(int samples = 0; samples < 3; ++samples)
+    {
+      for(std::vector<float>::size_type i = 2; i < heightfield1->size()-2; ++i)
+      {
+        float value = 
+          factor * ((*heightfield1)[i-2] +
+                    (*heightfield1)[i-1] +
+                    (*heightfield1)[i+1] +
+                    (*heightfield1)[i+2])                      
+          - (factor * 4 * (*heightfield1)[i])
+          + (2*(*heightfield1)[i])
+          - (*heightfield2)[i];
+      
+        (*heightfield2)[i] = value * 0.99999f;
+      }
+      std::swap(heightfield2, heightfield1);
+    }
+  }
+
+  update_scene_graph();
+}
+
+void
+Liquid::update_scene_graph()
+{
+  // Update the SceneGraph
   float texscale = 1.0f/128.0f;
-  {
-    VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(pos.x, pos.y), 10000,
-                                                                     sc.light().get_modelview());
+  { // water top
+    VertexArrayDrawable* array = m_water_top.get();
+    array->clear();
     array->set_texture(texture);
     array->set_mode(GL_QUAD_STRIP);
     array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
     for(std::vector<float>::size_type i = 0; i < heightfield1->size(); ++i)
+    {
+      float c = 0.5f;
+      if (i > 0)
       {
-        float c = 0.5f;
-        if (i > 0)
-          {
-            float angle = atan2f(32.0f* ((*heightfield1)[i] - (*heightfield1)[i-1]), 3.2f);
-            c = std::min(1.0f, std::max(0.5f, 8.0f * (angle/float(M_PI)) + 0.5f));
-          }
+        float angle = atan2f(32.0f* ((*heightfield1)[i] - (*heightfield1)[i-1]), 3.2f);
+        c = std::min(1.0f, std::max(0.5f, 8.0f * (angle/float(M_PI)) + 0.5f));
+      }
 
-        array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
-        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
-        array->vertex(static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
+      array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
+      array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
+                      (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
+      array->vertex(static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
 
-        array->color(Color(c, c, 1.0f, 1.0f));
-        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
-                        (-32.0f * (*heightfield1)[i]) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
-        array->vertex(static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i]);
-      }
+      array->color(Color(c, c, 1.0f, 1.0f));
+      array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
+                      (-32.0f * (*heightfield1)[i]) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
+      array->vertex(static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i]);
+    }
+  }
 
-    sc.color().draw(array);
-  }
-  {
-    VertexArrayDrawable* array = new VertexArrayDrawable(Vector2f(pos.x, pos.y), 10000,
-                                                                     sc.light().get_modelview());
+  { // water body
+    VertexArrayDrawable* array = m_water_body.get();
+    array->clear();
     array->set_texture(texture);
     array->set_mode(GL_QUAD_STRIP);
     array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
 
     for(std::vector<float>::size_type i = 0; i < heightfield1->size(); ++i)
-      {
-        array->color(Color(0.0f, 0.0f, 0.5f, 0.7f));
-        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
-                        (64.0f) * texscale + sinf(t+static_cast<float>(i)/10.0f)*0.2f);
-        array->vertex(static_cast<float>(i) * 32.0f/static_cast<float>(SAMPLES), 64.0f);
+    {
+      array->color(Color(0.0f, 0.0f, 0.5f, 0.7f));
+      array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f,
+                      (64.0f) * texscale + sinf(t+static_cast<float>(i)/10.0f)*0.2f);
+      array->vertex(static_cast<float>(i) * 32.0f/static_cast<float>(SAMPLES), 64.0f);
 
-        array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
-        array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f) * 0.2f,
-                        (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
-        array->vertex(static_cast<float>(i) * 32.0f/static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
-      }
-
-    sc.color().draw(array);
+      array->color(Color(0.5f, 0.5f, 1.0f, 0.7f));
+      array->texcoord((static_cast<float>(i) * 32.0f / static_cast<float>(SAMPLES)) * texscale + sinf(t + static_cast<float>(i)/10.0f) * 0.2f,
+                      (-32.0f * (*heightfield1)[i] + 8.0f) * texscale + sinf(t + static_cast<float>(i)/10.0f)*0.2f);
+      array->vertex(static_cast<float>(i) * 32.0f/static_cast<float>(SAMPLES), -32.0f * (*heightfield1)[i] + 8.0f);
+    }
   }
 }
-
-void
-Liquid::update(float delta)
-{
-  t += delta * 1.0f;
-  float factor = 0.1f * delta;
-
-  for(int samples = 0; samples < 3; ++samples)
-    {
-      for(std::vector<float>::size_type i = 2; i < heightfield1->size()-2; ++i)
-        {
-          float value = 
-            factor * ((*heightfield1)[i-2] +
-                      (*heightfield1)[i-1] +
-                      (*heightfield1)[i+1] +
-                      (*heightfield1)[i+2])                      
-            - (factor * 4 * (*heightfield1)[i])
-            + (2*(*heightfield1)[i])
-            - (*heightfield2)[i];
-      
-          (*heightfield2)[i] = value * 0.99999f;
-        }
-      std::swap(heightfield2, heightfield1);
-    }
-}
 
 /* EOF */

Modified: trunk/windstille/src/objects/liquid.hpp
===================================================================
--- trunk/windstille/src/objects/liquid.hpp	2009-08-31 11:59:17 UTC (rev 3152)
+++ trunk/windstille/src/objects/liquid.hpp	2009-08-31 11:59:53 UTC (rev 3153)
@@ -22,6 +22,8 @@
 #include <vector>
 
 #include "engine/entity.hpp"
+
+class VertexArrayDrawable;
 
 class Liquid : public Entity
 {
@@ -35,14 +37,19 @@
   std::vector<float>* heightfield1;
   std::vector<float>* heightfield2;
 
+  boost::shared_ptr<VertexArrayDrawable> m_water_top;
+  boost::shared_ptr<VertexArrayDrawable> m_water_body;
+
 public:
   Liquid(FileReader& props);
   ~Liquid();
 
-  void draw(SceneContext& sc);
   void update(float delta);
 
 private:
+  void update_scene_graph();
+
+private:
   Liquid (const Liquid&);
   Liquid& operator= (const Liquid&);
 };



From grumbel at mail.berlios.de  Mon Aug 31 14:49:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 14:49:58 +0200
Subject: [Windstille-commit] r3154 - trunk/windstille/src/editor
Message-ID: <200908311249.n7VCnwdC006049@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 14:49:58 +0200 (Mon, 31 Aug 2009)
New Revision: 3154

Modified:
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Moved SurfaceManager to the correct place and fixed Compositor size when using framebuffer_object

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-08-31 11:59:53 UTC (rev 3153)
+++ trunk/windstille/src/editor/main.cpp	2009-08-31 12:49:58 UTC (rev 3154)
@@ -30,6 +30,7 @@
 #include "util/command_line.hpp"
 #include "sprite2d/manager.hpp"
 #include "display/texture_manager.hpp"
+#include "display/surface_manager.hpp"
 #include "editor/editor_window.hpp"
 #include "editor/main.hpp"
 
@@ -94,8 +95,9 @@
       throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
     }
 
+    TextureManager texture_manager;
+    SurfaceManager surface_manager;
     SpriteManager  sprite2d_manager;
-    TextureManager texture_manager;
 
     Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
     icon_theme->append_search_path("data/editor/");

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-31 11:59:53 UTC (rev 3153)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-31 12:49:58 UTC (rev 3154)
@@ -144,12 +144,16 @@
 void
 WindstilleWidget::on_realize()
 {
+  Gtk::DrawingArea::on_realize();
+
+  std::cout << "on_realize: " << get_width() << "x" << get_height() << std::endl;
+
   state.set_size(get_width(), get_height());
+  Display::aspect_size.width  = get_width();
+  Display::aspect_size.height = get_height();
 
-  //std::cout << "WindstilleWidget::on_realize()" << std::endl;
+  std::cout << Display::aspect_size << std::endl;
 
-  Gtk::DrawingArea::on_realize();
-
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (glwindow->gl_begin(get_gl_context()))
@@ -165,9 +169,6 @@
           }
 
           OpenGLState::init();
-          //texture_manager  = new TextureManager();
-          new SurfaceManager();
-          //sprite2d_manager = new SpriteManager();
         }
       
       if (!sc.get())
@@ -193,21 +194,24 @@
 }
 
 bool
-WindstilleWidget::on_configure_event(GdkEventConfigure* /*event*/)
+WindstilleWidget::on_configure_event(GdkEventConfigure* ev)
 {
-  state.set_size(get_width(), get_height());
-  Display::aspect_size.width  = get_width();
-  Display::aspect_size.height = get_height();
+  Display::aspect_size.width  = ev->width;
+  Display::aspect_size.height = ev->height;
 
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
-  // *** OpenGL BEGIN ***
   if (!glwindow->gl_begin(get_gl_context()))
     {
       return false;
     }
   else
     {
+      if (compositor.get())
+      {
+        compositor.reset(new Compositor());
+      }
+
       glViewport(0, 0, get_width(), get_height());
       glMatrixMode(GL_PROJECTION);
       glLoadIdentity();
@@ -216,7 +220,6 @@
       glMatrixMode(GL_MODELVIEW);
       glLoadIdentity();
   
-
       glwindow->gl_end();
 
       return true;
@@ -226,7 +229,6 @@
 bool
 WindstilleWidget::on_expose_event(GdkEventExpose* /*event*/)
 {
-  //std::cout << "WindstilleWidget::on_expose()" << std::endl;
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (!glwindow->gl_begin(get_gl_context()))
@@ -303,7 +305,7 @@
           EditorWindow::current()->get_current_tool()->draw(*sc);
         }
 
-      compositor->render(*sc, sector_model->get_scene_graph(), GraphicContextState(get_width(), get_height()));
+      compositor->render(*sc, sector_model->get_scene_graph(), state);
 
       state.pop(*sc);
 



From grumbel at mail.berlios.de  Mon Aug 31 15:09:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 15:09:27 +0200
Subject: [Windstille-commit] r3155 - in trunk/windstille/src: display editor
	screen
Message-ID: <200908311309.n7VD9Rsg009066@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 15:09:26 +0200 (Mon, 31 Aug 2009)
New Revision: 3155

Modified:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/compositor.hpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
Log:
Compositor now holds the screen size, added Control layer to the with framebuffer_object rendering path

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -42,27 +42,29 @@
     Framebuffer tmp;
     Framebuffer lightmap;   
 
-    Framebuffers() 
-      : screen  (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
-        tmp     (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
-        lightmap(GL_TEXTURE_RECTANGLE_ARB, Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
+    Framebuffers(const Size& size) 
+      : screen  (GL_TEXTURE_RECTANGLE_ARB, size.width, size.height),
+        tmp     (GL_TEXTURE_RECTANGLE_ARB, size.width, size.height),
+        lightmap(GL_TEXTURE_RECTANGLE_ARB, size.width / LIGHTMAP_DIV, size.height / LIGHTMAP_DIV)
     {
     }
   };
   
   boost::scoped_ptr<Framebuffers> framebuffers;
   Surface lightmap;
+  Size m_size;
 
-  CompositorImpl()
+  CompositorImpl(const Size& size)
     : //framebuffers(0),
-      framebuffers(new Framebuffers()),
-      lightmap(Display::get_width()  / LIGHTMAP_DIV,
-               Display::get_height() / LIGHTMAP_DIV)
+      framebuffers(new Framebuffers(size)),
+      lightmap(size.width  / LIGHTMAP_DIV,
+               size.height / LIGHTMAP_DIV),
+      m_size(size)
   {}
 };
 
-Compositor::Compositor()
-  : impl(new CompositorImpl())
+Compositor::Compositor(const Size& size)
+  : impl(new CompositorImpl(size))
 {
 }
 
@@ -117,7 +119,7 @@
     glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
     glPushMatrix();
-    glTranslatef(0.0f, static_cast<float>(Display::get_height() - (Display::get_height() / LIGHTMAP_DIV)), 0.0f);
+    glTranslatef(0.0f, static_cast<float>(impl->m_size.height - (impl->m_size.height / LIGHTMAP_DIV)), 0.0f);
     glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
     sc.light().render(*this);
 
@@ -176,7 +178,11 @@
   }
 
   if (sc.get_render_mask() & SceneContext::CONTROLMAP)
+  {
+    Display::push_framebuffer(impl->framebuffers->screen);
     sc.control().render(*this);
+    Display::pop_framebuffer();
+  }
 
   if (1) 
   {
@@ -200,13 +206,13 @@
     glVertex2f(0, 0);
 
     glTexCoord2f(uv.right, uv.bottom);
-    glVertex2f(static_cast<float>(Display::get_width()), 0);
+    glVertex2f(static_cast<float>(impl->m_size.width), 0);
 
     glTexCoord2f(uv.right, uv.top);
-    glVertex2f(static_cast<float>(Display::get_width()), static_cast<float>(Display::get_height()));
+    glVertex2f(static_cast<float>(impl->m_size.width), static_cast<float>(impl->m_size.height));
 
     glTexCoord2f(uv.left, uv.top);
-    glVertex2f(0.0f, static_cast<float>(Display::get_height()));
+    glVertex2f(0.0f, static_cast<float>(impl->m_size.height));
 
     glEnd();
   }
@@ -222,10 +228,10 @@
 Compositor::render_without_framebuffers(SceneContext& sc, SceneGraph* sg, const GraphicContextState& gc_state)
 {
   // Resize Lightmap, only needed in the editor, FIXME: move this into a 'set_size()' call
-  if (impl->lightmap.get_width()  != Display::get_width() /LIGHTMAP_DIV ||
-      impl->lightmap.get_height() != Display::get_height()/LIGHTMAP_DIV)
+  if (impl->lightmap.get_width()  != impl->m_size.width /LIGHTMAP_DIV ||
+      impl->lightmap.get_height() != impl->m_size.height/LIGHTMAP_DIV)
   {
-    impl->lightmap = Surface(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV);
+    impl->lightmap = Surface(impl->m_size.width / LIGHTMAP_DIV, impl->m_size.height / LIGHTMAP_DIV);
   }
 
   if (sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN)
@@ -234,7 +240,7 @@
     glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
     glPushMatrix();
-    glTranslatef(0.0f, static_cast<float>(Display::get_height()) - static_cast<float>(Display::get_height()/LIGHTMAP_DIV), 0.0f);
+    glTranslatef(0.0f, static_cast<float>(impl->m_size.height) - static_cast<float>(impl->m_size.height/LIGHTMAP_DIV), 0.0f);
     glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
     sc.light().render(*this);
     glPopMatrix();
@@ -242,7 +248,7 @@
     if (sg)
     {
       glPushMatrix();
-      glTranslatef(0.0f, static_cast<float>(Display::get_height()) - static_cast<float>(Display::get_height()/LIGHTMAP_DIV), 0.0f);
+      glTranslatef(0.0f, static_cast<float>(impl->m_size.height) - static_cast<float>(impl->m_size.height/LIGHTMAP_DIV), 0.0f);
       glScalef(1.0f / LIGHTMAP_DIV, 1.0f / LIGHTMAP_DIV, 1.0f);
       glMultMatrixf(gc_state.get_matrix().matrix);
       sg->draw(Texture(), SceneContext::LIGHTMAP);
@@ -258,7 +264,7 @@
 
       glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
                           0, 0, 
-                          0, 0, //Display::get_height() - impl->lightmap.get_height(),
+                          0, 0, //impl->m_size.height - impl->lightmap.get_height(),
                           static_cast<GLsizei>(impl->lightmap.get_width()), 
                           static_cast<GLsizei>(impl->lightmap.get_height()));
     }

Modified: trunk/windstille/src/display/compositor.hpp
===================================================================
--- trunk/windstille/src/display/compositor.hpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/display/compositor.hpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -26,11 +26,12 @@
 class GraphicContextState;
 class SceneContext;
 class SceneGraph;
+class Size;
 
 class Compositor
 {
 public:
-  Compositor();
+  Compositor(const Size& size);
   ~Compositor();
 
   void render(SceneContext& sc, SceneGraph* sg, const GraphicContextState& state);

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/display/display.hpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -23,6 +23,7 @@
 
 #include "math/quad.hpp"
 #include "math/line.hpp"
+#include "math/size.hpp"
 #include "display/color.hpp"
 #include "display/framebuffer.hpp"
 
@@ -63,6 +64,8 @@
   static int  get_width();
   static int  get_height();
 
+  static Size get_size() { return Size(get_width(), get_height()); }
+
   static void push_cliprect(const Rect& rect);
   static void pop_cliprect();
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -174,7 +174,7 @@
       if (!sc.get())
         {
           sc.reset(new SceneContext());
-          compositor.reset(new Compositor());
+          compositor.reset(new Compositor(Size(get_width(), get_height())));
           sc->set_render_mask(sc->get_render_mask() & ~SceneContext::LIGHTMAP);
         }
       
@@ -209,7 +209,7 @@
     {
       if (compositor.get())
       {
-        compositor.reset(new Compositor());
+        compositor.reset(new Compositor(Size(ev->width, ev->height)));
       }
 
       glViewport(0, 0, get_width(), get_height());

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/screen/game_session.cpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -76,7 +76,8 @@
   Screen* current_gui;
 
   GameSessionImpl() 
-    : sc(),
+    : compositor(Size(Display::get_width(), Display::get_height())),
+      sc(),
       fadeout_value(),
       fade_time(),
       sector(),

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -28,7 +28,7 @@
 #include "util/sexpr_file_reader.hpp"
 
 ParticleViewer::ParticleViewer()
-  : compositor(),
+  : compositor(Display::get_size()),
     sc(),
     systems(),
     background(Pathname("images/greychess.sprite")),

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-08-31 12:49:58 UTC (rev 3154)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-08-31 13:09:26 UTC (rev 3155)
@@ -25,7 +25,7 @@
 #include "display/graphic_context_state.hpp"
 
 Sprite3DView::Sprite3DView()
-  : compositor(),
+  : compositor(Display::get_size()),
     sc(),
     sprite(),
     actions(),



From grumbel at mail.berlios.de  Mon Aug 31 15:19:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 15:19:17 +0200
Subject: [Windstille-commit] r3156 - in trunk/windstille/src: display font
Message-ID: <200908311319.n7VDJHJX011595@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 15:19:17 +0200 (Mon, 31 Aug 2009)
New Revision: 3156

Modified:
   trunk/windstille/src/display/compositor.cpp
   trunk/windstille/src/display/opengl_window.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/font/ttf_font.cpp
Log:
Removed magic pixel center constant, as that seems to do more harm then good at the moment

Modified: trunk/windstille/src/display/compositor.cpp
===================================================================
--- trunk/windstille/src/display/compositor.cpp	2009-08-31 13:09:26 UTC (rev 3155)
+++ trunk/windstille/src/display/compositor.cpp	2009-08-31 13:19:17 UTC (rev 3156)
@@ -189,9 +189,9 @@
     // Render the screen framebuffer to the actual screen 
     OpenGLState state;
 
-    Rectf uv(0.375f, 0.375f, 
-             static_cast<float>(impl->framebuffers->screen.get_width())  + 0.375f,
-             static_cast<float>(impl->framebuffers->screen.get_height()) + 0.375f);
+    Rectf uv(0, 0, 
+             static_cast<float>(impl->framebuffers->screen.get_width()),
+             static_cast<float>(impl->framebuffers->screen.get_height()));
 
     if (sc.get_render_mask() & SceneContext::BLURMAP)
       state.bind_texture(impl->framebuffers->screen.get_texture(), 0);

Modified: trunk/windstille/src/display/opengl_window.cpp
===================================================================
--- trunk/windstille/src/display/opengl_window.cpp	2009-08-31 13:09:26 UTC (rev 3155)
+++ trunk/windstille/src/display/opengl_window.cpp	2009-08-31 13:19:17 UTC (rev 3156)
@@ -72,8 +72,6 @@
       glMatrixMode(GL_PROJECTION);
       glLoadIdentity();
 
-      static const float cl_pixelcenter_constant = 0.375;
-
       Display::aspect_size = Size(config.get_int("aspect-width"), 
                                   config.get_int("aspect-height"));
 
@@ -81,8 +79,13 @@
               0.0, 1000.0, -1000.0);
       glMatrixMode(GL_MODELVIEW);
       glLoadIdentity();
-      glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
 
+      if (0) // disabled for the moment, as it seems to do more harm then good
+      { // Magic pixel center constant, without that textures drawn in
+        // pixel coordinates might end up blurry       
+        glTranslated(0.375f, 0.375f, 0.0);
+      }
+
       if (config.get_int("anti-aliasing"))
         glEnable(GL_MULTISAMPLE_ARB); 
 

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-08-31 13:09:26 UTC (rev 3155)
+++ trunk/windstille/src/display/text_area.cpp	2009-08-31 13:19:17 UTC (rev 3156)
@@ -186,9 +186,6 @@
                impl->rect.top + static_cast<float>(impl->font->get_height()) - impl->scroll_offset, 
                0.0f);
 
-  // Voodoo to get non-blurry fonts
-  float mx = -0.375;
-  float my = -0.375; 
   glBegin(GL_QUADS);
 
   int x_pos = 0;
@@ -319,21 +316,21 @@
                               {
                                 glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
                                 glTexCoord2f(character.uv.left, character.uv.top);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.left) + mx,
-                                           y + scale * static_cast<float>(character.pos.top)  + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left),
+                                           y + scale * static_cast<float>(character.pos.top));
 
                                 glTexCoord2f(character.uv.right, character.uv.top);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.right) + mx, 
-                                           y + scale * static_cast<float>(character.pos.top)   + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right), 
+                                           y + scale * static_cast<float>(character.pos.top));
 
                                 glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
                                 glTexCoord2f(character.uv.right, character.uv.bottom);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.right)  + mx, 
-                                           y + scale * static_cast<float>(character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right), 
+                                           y + scale * static_cast<float>(character.pos.bottom));
 
                                 glTexCoord2f(character.uv.left, character.uv.bottom);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.left)   + mx, 
-                                           y + scale * static_cast<float>(character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left), 
+                                           y + scale * static_cast<float>(character.pos.bottom));
                               }
                             x_pos += static_cast<int>(scale * static_cast<float>(character.advance));
                           }
@@ -344,21 +341,21 @@
                               {
                                 glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
                                 glTexCoord2f(character.uv.left, character.uv.top);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.left) + mx,
-                                           y + static_cast<float>(character.pos.top) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left),
+                                           y + static_cast<float>(character.pos.top));
 
                                 glTexCoord2f(character.uv.right, character.uv.top);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.right) + mx, 
-                                           y + static_cast<float>(character.pos.top) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right), 
+                                           y + static_cast<float>(character.pos.top));
 
                                 glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
                                 glTexCoord2f(character.uv.right, character.uv.bottom);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.right) + mx, 
-                                           y + static_cast<float>(character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.right), 
+                                           y + static_cast<float>(character.pos.bottom));
 
                                 glTexCoord2f(character.uv.left, character.uv.bottom);
-                                glVertex2f(x + scale * static_cast<float>(character.pos.left) + mx, 
-                                           y + static_cast<float>(character.pos.bottom) + my);
+                                glVertex2f(x + scale * static_cast<float>(character.pos.left), 
+                                           y + static_cast<float>(character.pos.bottom));
                               }
                             x_pos += static_cast<int>(scale * static_cast<float>(character.advance));
                           }
@@ -368,21 +365,21 @@
                               {
                                 glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
                                 glTexCoord2f(character.uv.left, character.uv.top);
-                                glVertex2f(x + static_cast<float>(character.pos.left) + mx,
-                                           y + static_cast<float>(character.pos.top)  + my);
+                                glVertex2f(x + static_cast<float>(character.pos.left),
+                                           y + static_cast<float>(character.pos.top));
 
                                 glTexCoord2f(character.uv.right, character.uv.top);
-                                glVertex2f(x + static_cast<float>(character.pos.right) + mx, 
-                                           y + static_cast<float>(character.pos.top)   + my);
+                                glVertex2f(x + static_cast<float>(character.pos.right), 
+                                           y + static_cast<float>(character.pos.top));
 
                                 glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
                                 glTexCoord2f(character.uv.right, character.uv.bottom);
-                                glVertex2f(x + static_cast<float>(character.pos.right)  + mx, 
-                                           y + static_cast<float>(character.pos.bottom) + my);
+                                glVertex2f(x + static_cast<float>(character.pos.right), 
+                                           y + static_cast<float>(character.pos.bottom));
 
                                 glTexCoord2f(character.uv.left, character.uv.bottom);
-                                glVertex2f(x + static_cast<float>(character.pos.left)   + mx, 
-                                           y + static_cast<float>(character.pos.bottom) + my);
+                                glVertex2f(x + static_cast<float>(character.pos.left), 
+                                           y + static_cast<float>(character.pos.bottom));
                               }
                             x_pos += character.advance;
                           }

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-31 13:09:26 UTC (rev 3155)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-31 13:19:17 UTC (rev 3156)
@@ -185,29 +185,26 @@
   state.color(color);
   state.activate();
 
-  // Voodoo to get non-blurry fonts
-  float mx = -0.375;
-  float my = -0.375; 
   glBegin(GL_QUADS);
   for(std::string::const_iterator i = str.begin(); i != str.end(); ++i)
     {
       const TTFCharacter& character = impl->characters[*i];
       
       glTexCoord2f(character.uv.left, character.uv.top);
-      glVertex2f(pos.x + static_cast<float>(character.pos.left) + mx,
-                 pos.y + static_cast<float>(character.pos.top)  + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.left),
+                 pos.y + static_cast<float>(character.pos.top));
 
       glTexCoord2f(character.uv.right, character.uv.top);
-      glVertex2f(pos.x + static_cast<float>(character.pos.right) + mx, 
-                 pos.y + static_cast<float>(character.pos.top)   + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.right),
+                 pos.y + static_cast<float>(character.pos.top));
 
       glTexCoord2f(character.uv.right, character.uv.bottom);
-      glVertex2f(pos.x + static_cast<float>(character.pos.right)  + mx, 
-                 pos.y + static_cast<float>(character.pos.bottom) + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.right),
+                 pos.y + static_cast<float>(character.pos.bottom));
 
       glTexCoord2f(character.uv.left, character.uv.bottom);
-      glVertex2f(pos.x + static_cast<float>(character.pos.left)   + mx, 
-                 pos.y + static_cast<float>(character.pos.bottom) + my);
+      glVertex2f(pos.x + static_cast<float>(character.pos.left),
+                 pos.y + static_cast<float>(character.pos.bottom));
 
       pos.x += static_cast<float>(character.advance);
     }



From grumbel at mail.berlios.de  Mon Aug 31 15:28:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 15:28:39 +0200
Subject: [Windstille-commit] r3157 - trunk/windstille/src/font
Message-ID: <200908311328.n7VDSd09013322@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 15:28:39 +0200 (Mon, 31 Aug 2009)
New Revision: 3157

Modified:
   trunk/windstille/src/font/ttf_font.cpp
Log:
Removed filter setting, so zoomed fonts look better

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-08-31 13:19:17 UTC (rev 3156)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-08-31 13:28:39 UTC (rev 3157)
@@ -150,7 +150,6 @@
   FT_Done_Face(face);
 
   impl->texture = Texture(pixelbuffer);
-  impl->texture.set_filter(GL_NEAREST);
 }
 
 TTFFont::~TTFFont()



From grumbel at mail.berlios.de  Mon Aug 31 21:40:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 21:40:37 +0200
Subject: [Windstille-commit] r3158 - in trunk/windstille/src: particles
	scenegraph screen
Message-ID: <200908311940.n7VJebX1018066@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 21:40:36 +0200 (Mon, 31 Aug 2009)
New Revision: 3158

Added:
   trunk/windstille/src/scenegraph/particle_system_drawable.cpp
   trunk/windstille/src/scenegraph/particle_system_drawable.hpp
Modified:
   trunk/windstille/src/particles/deform_drawer.hpp
   trunk/windstille/src/particles/drawer.hpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/particle_system.hpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/particles/spark_drawer.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.hpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
Log:
Framework for making the ParticleSystem usable in the SceneGraph

Modified: trunk/windstille/src/particles/deform_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/deform_drawer.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -47,6 +47,7 @@
   ~DeformDrawer();
 
   void draw(DrawingContext& sc, ParticleSystem& psys);
+  void draw(const ParticleSystem& /*psys*/) const {}
 private:
   DeformDrawer (const DeformDrawer&);
   DeformDrawer& operator= (const DeformDrawer&);

Modified: trunk/windstille/src/particles/drawer.hpp
===================================================================
--- trunk/windstille/src/particles/drawer.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/drawer.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -28,6 +28,7 @@
 public:
   virtual ~Drawer() {}
   virtual void draw(DrawingContext& sc, ParticleSystem& psys) =0;
+  virtual void draw(const ParticleSystem& psys) const =0;
 };
 
 #endif

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -242,6 +242,19 @@
 }
 
 void
+ParticleSystem::draw() const
+{
+  if (drawer.get())
+    {
+      drawer->draw(*this);
+    }
+  else
+    {
+      std::cout << "ParticleSystem: No drawer set" << std::endl;
+    } 
+}
+
+void
 ParticleSystem::spawn(Particle& particle)
 {
   randomizer->set_pos(particle);

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -98,15 +98,16 @@
 public:
   ParticleSystem();
   ParticleSystem(FileReader& props);
-  virtual ~ParticleSystem();
+  ~ParticleSystem();
 
   void set_drawer(Drawer*);
 
   /** Draws the particle system to the screen */
-  virtual void draw(SceneContext& sc);
+  void draw(SceneContext& sc);
+  void draw() const;
 
   /** Update the particle system \a delta seconds */
-  virtual void update(float delta);
+  void update(float delta);
   
   /** Set how many particles will be used */
   void set_count(int num);

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -80,5 +80,10 @@
 
   dc.draw(buffer);
 }
+
+void
+SparkDrawer::draw(const ParticleSystem& /*psys*/) const
+{
+}
 
 /* EOF */

Modified: trunk/windstille/src/particles/spark_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/spark_drawer.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -32,7 +32,9 @@
 
 public:
   SparkDrawer(FileReader& props);
+
   void draw(DrawingContext& dc, ParticleSystem& psys);
+  void draw(const ParticleSystem& psys) const;
 };
 
 #endif

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -32,21 +32,33 @@
 
 static GLenum string2blendfunc(const std::string& str)
 {
-  if (str == "src_alpha") {
+  if (str == "src_alpha") 
+  {
     return GL_SRC_ALPHA;
-  } else if (str == "one_minus_src_alpha") {
+  }
+  else if (str == "one_minus_src_alpha") 
+  {
     return GL_ONE_MINUS_SRC_ALPHA;
-  } else if (str == "dst_alpha") {
+  }
+  else if (str == "dst_alpha") 
+  {
     return GL_DST_ALPHA;
-  } else if (str == "one_minus_dst_alpha") {
+  }
+  else if (str == "one_minus_dst_alpha") 
+  {
     return GL_ONE_MINUS_SRC_ALPHA;
-  } else if (str == "one") {
+  }
+  else if (str == "one") 
+  {
     return GL_ONE;
-  } else if (str == "zero") {
+  }
+  else if (str == "zero") 
+  {
     return GL_ZERO;
   }
   // FIXME: Implement the rest blendfunc here
-  else {
+  else 
+  {
     std::cout << "string2blendfunc: Unknown blendfunc: '" << str << "'" << std::endl;
     return GL_ONE;
   }
@@ -146,5 +158,10 @@
 
   dc.draw(buffer);
 }
+
+void
+SurfaceDrawer::draw(const ParticleSystem& /*psys*/) const
+{
+}
 
 /* EOF */

Modified: trunk/windstille/src/particles/surface_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/particles/surface_drawer.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -38,6 +38,7 @@
   void set_blendfuncs(GLenum blendfunc_src, GLenum blendfunc_dst);
 
   void draw(DrawingContext& sc, ParticleSystem& psys);
+  void draw(const ParticleSystem& psys) const;
 };
 
 #endif

Added: trunk/windstille/src/scenegraph/particle_system_drawable.cpp
===================================================================
--- trunk/windstille/src/scenegraph/particle_system_drawable.cpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/scenegraph/particle_system_drawable.cpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -0,0 +1,35 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "scenegraph/particle_system_drawable.hpp"
+
+#include "particles/particle_system.hpp"
+
+ParticleSystemDrawable::ParticleSystemDrawable(const ParticleSystem& particle_system)
+  : Drawable(Vector2f()),
+    m_particle_system(particle_system)
+{
+}
+
+void
+ParticleSystemDrawable::draw(const Texture& /*tmp_texture*/)
+{
+  m_particle_system.draw();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/particle_system_drawable.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/windstille/src/scenegraph/particle_system_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/particle_system_drawable.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/scenegraph/particle_system_drawable.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -0,0 +1,43 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_SCENEGRAPH_PARTICLE_SYSTEM_DRAWABLE_HPP
+#define HEADER_WINDSTILLE_SCENEGRAPH_PARTICLE_SYSTEM_DRAWABLE_HPP
+
+#include "scenegraph/drawable.hpp"
+
+class ParticleSystem;
+
+class ParticleSystemDrawable : public Drawable
+{
+private:
+  const ParticleSystem& m_particle_system;
+
+public:
+  ParticleSystemDrawable(const ParticleSystem& particle_system);
+
+  void draw(const Texture& tmp_texture);
+
+private:
+  ParticleSystemDrawable(const ParticleSystemDrawable&);
+  ParticleSystemDrawable& operator=(const ParticleSystemDrawable&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/scenegraph/particle_system_drawable.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -24,12 +24,14 @@
 #include "app/menu_manager.hpp"
 #include "display/display.hpp"
 #include "display/graphic_context_state.hpp"
+#include "scenegraph/particle_system_drawable.hpp"
 #include "input/controller.hpp"
 #include "util/sexpr_file_reader.hpp"
 
 ParticleViewer::ParticleViewer()
   : compositor(Display::get_size()),
     sc(),
+    sg(),
     systems(),
     background(Pathname("images/greychess.sprite")),
     pos()
@@ -66,6 +68,12 @@
     }
 
   std::cout << systems.size() << " particle systems ready to go" << std::endl;
+
+
+  for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
+  {
+    sg.add_drawable(boost::shared_ptr<Drawable>(new ParticleSystemDrawable(**i)));
+  }
 }
   
 void
@@ -95,7 +103,7 @@
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
     (*i)->draw(sc);
 
-  compositor.render(sc, 0, GraphicContextState(Display::get_width(),
+  compositor.render(sc, &sg, GraphicContextState(Display::get_width(),
                                                Display::get_height()));
 }
 

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-31 13:28:39 UTC (rev 3157)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-31 19:40:36 UTC (rev 3158)
@@ -24,6 +24,7 @@
 
 #include "display/compositor.hpp"
 #include "display/scene_context.hpp"
+#include "scenegraph/scene_graph.hpp"
 #include "gui/gui_manager.hpp"
 #include "particles/particle_system.hpp"
 #include "screen/screen.hpp"
@@ -42,6 +43,7 @@
 private:
   Compositor compositor;
   SceneContext sc;
+  SceneGraph   sg;
   typedef std::vector<boost::shared_ptr<ParticleSystem> > Systems;
   Systems systems;
   Sprite background;



From grumbel at mail.berlios.de  Mon Aug 31 22:16:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 22:16:39 +0200
Subject: [Windstille-commit] r3159 - trunk/windstille/src/math
Message-ID: <200908312016.n7VKGd5f024158@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 22:16:38 +0200 (Mon, 31 Aug 2009)
New Revision: 3159

Modified:
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/math/matrix.hpp
Log:
Some const cleanup

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-08-31 19:40:36 UTC (rev 3158)
+++ trunk/windstille/src/math/matrix.cpp	2009-08-31 20:16:38 UTC (rev 3159)
@@ -172,7 +172,7 @@
 }
 
 Matrix
-Matrix::scale(float x, float y, float z)
+Matrix::scale(float x, float y, float z) const
 {
   Matrix m = Matrix::identity();
   m[0]  = x;
@@ -182,7 +182,7 @@
 }
 
 Matrix
-Matrix::translate(float x, float y, float z)
+Matrix::translate(float x, float y, float z) const
 {
   Matrix m = Matrix::identity();
   m[12] = x;
@@ -192,7 +192,7 @@
 }
 
 Matrix
-Matrix::rotate(float angle, float x, float y, float z)
+Matrix::rotate(float angle, float x, float y, float z) const
 {
   float len2 = x*x+y*y+z*z;
   if (len2 != 1.0)

Modified: trunk/windstille/src/math/matrix.hpp
===================================================================
--- trunk/windstille/src/math/matrix.hpp	2009-08-31 19:40:36 UTC (rev 3158)
+++ trunk/windstille/src/math/matrix.hpp	2009-08-31 20:16:38 UTC (rev 3159)
@@ -111,9 +111,9 @@
   Matrix transpose() const;
 
   //: Multiply the matrix with the given scale/translate/rotate matrix
-  Matrix scale(float x, float y, float z);
-  Matrix translate(float x, float y, float z);
-  Matrix rotate(float angle, float x, float y, float z);
+  Matrix scale(float x, float y, float z) const;
+  Matrix translate(float x, float y, float z) const;
+  Matrix rotate(float angle, float x, float y, float z) const;
 
   //! Implementation:
 private:



From grumbel at mail.berlios.de  Mon Aug 31 22:17:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 22:17:26 +0200
Subject: [Windstille-commit] r3160 - in trunk/windstille/src: particles
	scenegraph screen
Message-ID: <200908312017.n7VKHQcS024307@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 22:17:25 +0200 (Mon, 31 Aug 2009)
New Revision: 3160

Modified:
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/particle_system.hpp
   trunk/windstille/src/particles/spark_drawer.cpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/scenegraph/fill_screen_drawable.hpp
   trunk/windstille/src/scenegraph/particle_system_drawable.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
Log:
ParticleSystem now fully usable in the SceneGraph

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -418,7 +418,7 @@
 }
 
 float
-ParticleSystem::get_progress(float t)
+ParticleSystem::get_progress(float t) const
 {
   return std::max(0.0f, std::min(1.0f, t/life_time));
 }

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -55,6 +55,7 @@
 public:
   typedef std::vector<Particle> Particles;
   typedef Particles::iterator iterator;
+  typedef Particles::const_iterator const_iterator;
 
 private:
   Particles particles;
@@ -173,20 +174,25 @@
   iterator begin() { return particles.begin(); }
   iterator end()   { return particles.end(); }
 
+  const_iterator begin() const { return particles.begin(); }
+  const_iterator end()   const { return particles.end(); }
+
   float get_size_start() const { return size_start; }
   float get_size_stop()  const { return size_stop; }
 
   const Color& get_color_start() const { return color_start; }
   const Color& get_color_stop()  const { return color_stop;  }
 
-  float get_x_pos() { return x_pos; }
-  float get_y_pos() { return y_pos; } 
-  float get_z_pos() { return z_pos; } 
+  float get_x_pos() const { return x_pos; }
+  float get_y_pos() const { return y_pos; } 
+  float get_z_pos() const { return z_pos; } 
 
   /** Returns the how much a particle has progressed, this is
       particle.life_time with fade_in/fade_out applied  */
-  float get_progress(float t);
+  float get_progress(float t) const;
 
+  unsigned int get_layer() const { return layer; }
+
 private:
   ParticleSystem (const ParticleSystem&);
   ParticleSystem& operator= (const ParticleSystem&);

Modified: trunk/windstille/src/particles/spark_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/spark_drawer.cpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/particles/spark_drawer.cpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -34,7 +34,7 @@
 SparkDrawer::draw(DrawingContext& dc, ParticleSystem& psys) 
 {
   VertexArrayDrawable* buffer = new VertexArrayDrawable(Vector2f(0, 0), psys.get_z_pos(),
-                                                                    dc.get_modelview());
+                                                        dc.get_modelview());
   if (width == 1.0f)
     {
       buffer->set_mode(GL_LINES);
@@ -82,8 +82,54 @@
 }
 
 void
-SparkDrawer::draw(const ParticleSystem& /*psys*/) const
+SparkDrawer::draw(const ParticleSystem& psys) const
 {
+  VertexArrayDrawable* buffer = new VertexArrayDrawable(Vector2f(0, 0), psys.get_z_pos(),
+                                                        Matrix::identity());
+  if (width == 1.0f)
+    {
+      buffer->set_mode(GL_LINES);
+      buffer->set_blend_func(GL_SRC_ALPHA, GL_ONE);
+      for(ParticleSystem::const_iterator i = psys.begin(); i != psys.end(); ++i)
+        {
+          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
+          buffer->vertex(i->x + i->v_x/10.0f, i->y + i->v_y/10.0f); 
+
+          buffer->color(Color(0, 0, 0, 0));
+          buffer->vertex(i->x, i->y);
+        }
+    }
+  else
+    {
+      buffer->set_mode(GL_QUADS);
+      buffer->set_blend_func(GL_SRC_ALPHA, GL_ONE);
+      for(ParticleSystem::const_iterator i = psys.begin(); i != psys.end(); ++i)
+        {
+          const float len = sqrtf(i->v_x * i->v_x  +  i->v_y * i->v_y);
+
+          const float o_x = i->v_y/len * width;
+          const float o_y = i->v_x/len * width;
+
+          const float x1 = i->x;
+          const float y1 = i->y;
+          const float x2 = i->x + i->v_x/10.0f;
+          const float y2 = i->y + i->v_y/10.0f;
+
+          buffer->color(Color(0, 0, 0, 0));
+          buffer->vertex(x1 + o_x, y1 - o_y);
+
+          buffer->color(Color(0, 0, 0, 0));
+          buffer->vertex(x1 - o_x, y1 + o_y);
+
+          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
+          buffer->vertex(x2 - o_x, y2 + o_y); 
+
+          buffer->color(Color(color.r, color.g, color.b, color.a - (color.a * psys.get_progress(i->t))));
+          buffer->vertex(x2 + o_x, y2 - o_y); 
+        }
+    }
+
+  buffer->draw(Texture());
 }
 
 /* EOF */

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -160,8 +160,62 @@
 }
 
 void
-SurfaceDrawer::draw(const ParticleSystem& /*psys*/) const
+SurfaceDrawer::draw(const ParticleSystem& psys) const
 {
+  VertexArrayDrawable* buffer 
+    = new VertexArrayDrawable(Vector2f(psys.get_x_pos(), psys.get_y_pos()), psys.get_z_pos(),
+                              Matrix::identity());
+
+  buffer->set_mode(GL_QUADS);
+  buffer->set_texture(surface.get_texture());
+  buffer->set_blend_func(blendfunc_src, blendfunc_dest);
+
+  for(ParticleSystem::const_iterator i = psys.begin(); i != psys.end(); ++i)
+    {
+      if (i->t != -1.0f)
+        {
+          float p = 1.0f - psys.get_progress(i->t);
+          Color color(psys.get_color_start().r * p + psys.get_color_stop().r * (1.0f - p),
+                      psys.get_color_start().g * p + psys.get_color_stop().g * (1.0f - p),
+                      psys.get_color_start().b * p + psys.get_color_stop().b * (1.0f - p),
+                      psys.get_color_start().a * p + psys.get_color_stop().a * (1.0f - p));
+
+          // scale
+          float scale  = psys.get_size_start() + 
+            psys.get_progress(i->t) * (psys.get_size_stop() - psys.get_size_start());
+          
+          float width  = surface.get_width()  * scale;
+          float height = surface.get_height() * scale;
+              
+          // rotate
+          float x_rot = width/2;
+          float y_rot = height/2; 
+
+          if (i->angle != 0)
+            {
+              float s = sinf(math::pi * i->angle/180.0f);
+              float c = cosf(math::pi * i->angle/180.0f);
+              x_rot = (width/2) * c - (height/2) * s;
+              y_rot = (width/2) * s + (height/2) * c;
+            }
+
+          buffer->add_texcoords(surface.get_uv());
+
+          buffer->color(color);
+          buffer->vertex(i->x - x_rot, i->y - y_rot);
+
+          buffer->color(color);
+          buffer->vertex(i->x + y_rot, i->y - x_rot);
+
+          buffer->color(color);
+          buffer->vertex(i->x + x_rot, i->y + y_rot);
+
+          buffer->color(color);
+          buffer->vertex(i->x - y_rot, i->y + x_rot);
+        }
+    }
+
+  buffer->draw(Texture());
 }
 
 /* EOF */

Modified: trunk/windstille/src/scenegraph/fill_screen_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_drawable.hpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/scenegraph/fill_screen_drawable.hpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -19,8 +19,6 @@
 #ifndef HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_DRAWABLE_HPP
 #define HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_DRAWABLE_HPP
 
-
-
 class FillScreenDrawable : public Drawable
 {
 private:

Modified: trunk/windstille/src/scenegraph/particle_system_drawable.cpp
===================================================================
--- trunk/windstille/src/scenegraph/particle_system_drawable.cpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/scenegraph/particle_system_drawable.cpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -24,6 +24,7 @@
   : Drawable(Vector2f()),
     m_particle_system(particle_system)
 {
+  set_render_mask(particle_system.get_layer());
 }
 
 void

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 20:16:38 UTC (rev 3159)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 20:17:25 UTC (rev 3160)
@@ -69,7 +69,6 @@
 
   std::cout << systems.size() << " particle systems ready to go" << std::endl;
 
-
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
   {
     sg.add_drawable(boost::shared_ptr<Drawable>(new ParticleSystemDrawable(**i)));
@@ -84,15 +83,15 @@
   for(float y = -background.get_width(); 
       y < static_cast<float>(Display::get_height()) + background.get_height(); 
       y += background.get_height())
+  {
+    for(float x = -background.get_width(); 
+        x < static_cast<float>(Display::get_width()) + background.get_width(); 
+        x += background.get_width())
     {
-      for(float x = -background.get_width(); 
-          x < static_cast<float>(Display::get_width()) + background.get_width(); 
-          x += background.get_width())
-        {
-          sc.color().draw(background, Vector2f(x + fmodf(pos.x, background.get_width()),
-                                               y + fmodf(pos.y, background.get_height())), -900);
-        }
+      sc.color().draw(background, Vector2f(x + fmodf(pos.x, background.get_width()),
+                                           y + fmodf(pos.y, background.get_height())), -900);
     }
+  }
 
   sc.translate(static_cast<float>(Display::get_width())  / 2.0f + pos.x, 
                static_cast<float>(Display::get_height()) / 2.0f + pos.y);
@@ -100,11 +99,15 @@
   //sc.light().fill_screen(Color(1.0f, 1.0f, 1.0f));
   sc.color().fill_screen(Color(0.0f, 0.0f, 0.0f));
 
-  for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
-    (*i)->draw(sc);
+  if (0)
+  { // FIXME: Old SceneContext code, can be removed
+    for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
+      (*i)->draw(sc);
+  }
 
-  compositor.render(sc, &sg, GraphicContextState(Display::get_width(),
-                                               Display::get_height()));
+  GraphicContextState state(Display::get_width(), Display::get_height());
+  state.set_pos(-pos);
+  compositor.render(sc, &sg, state);
 }
 
 void



From grumbel at mail.berlios.de  Mon Aug 31 22:25:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 22:25:35 +0200
Subject: [Windstille-commit] r3161 - trunk/windstille/src/screen
Message-ID: <200908312025.n7VKPZXs025758@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 22:25:35 +0200 (Mon, 31 Aug 2009)
New Revision: 3161

Modified:
   trunk/windstille/src/screen/particle_viewer.cpp
Log:
Removed some unused code

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 20:17:25 UTC (rev 3160)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 20:25:35 UTC (rev 3161)
@@ -93,18 +93,9 @@
     }
   }
 
-  sc.translate(static_cast<float>(Display::get_width())  / 2.0f + pos.x, 
-               static_cast<float>(Display::get_height()) / 2.0f + pos.y);
+  // Ambient lighting
   sc.light().fill_screen(Color(0.4f, 0.4f, 0.4f));
-  //sc.light().fill_screen(Color(1.0f, 1.0f, 1.0f));
-  sc.color().fill_screen(Color(0.0f, 0.0f, 0.0f));
-
-  if (0)
-  { // FIXME: Old SceneContext code, can be removed
-    for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
-      (*i)->draw(sc);
-  }
-
+  
   GraphicContextState state(Display::get_width(), Display::get_height());
   state.set_pos(-pos);
   compositor.render(sc, &sg, state);



From grumbel at mail.berlios.de  Mon Aug 31 22:48:14 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 22:48:14 +0200
Subject: [Windstille-commit] r3162 - trunk/windstille/src/scenegraph
Message-ID: <200908312048.n7VKmEqK029926@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 22:48:14 +0200 (Mon, 31 Aug 2009)
New Revision: 3162

Modified:
   trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp
Log:
Reset the Matrix so that pattern is applied properly when used in SceneGraph

Modified: trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp
===================================================================
--- trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp	2009-08-31 20:25:35 UTC (rev 3161)
+++ trunk/windstille/src/scenegraph/fill_screen_pattern_drawable.hpp	2009-08-31 20:48:14 UTC (rev 3162)
@@ -19,38 +19,49 @@
 #ifndef HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_PATTERN_DRAWABLE_HPP
 #define HEADER_WINDSTILLE_SCENEGRAPH_FILL_SCREEN_PATTERN_DRAWABLE_HPP
 
+#include "display/opengl_state.hpp"
+#include "scenegraph/drawable.hpp"
 
 class FillScreenPatternDrawable : public Drawable
 {
 private:
-  Texture  texture;
-  Vector2f offset;
+  Texture  m_texture;
+  Vector2f m_offset;
+
 public:
-  FillScreenPatternDrawable(const Texture& texture_, const Vector2f& offset_)
+  FillScreenPatternDrawable(const Texture& texture, const Vector2f& offset)
     : Drawable(Vector2f(0, 0), -1000.0f), 
-      texture(texture_),
-      offset(offset_)
+      m_texture(texture),
+      m_offset(offset)
   {}
 
   virtual ~FillScreenPatternDrawable() {}
 
+  void set_offset(const Vector2f& offset)
+  {
+    m_offset = offset;
+  }
+
   void draw(const Texture& /*tmp_texture*/) 
   {
     OpenGLState state;
     state.enable(GL_BLEND);
     state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-    state.bind_texture(texture);
+    state.bind_texture(m_texture);
     state.activate();
 
-    float u = static_cast<float>(Display::get_width())  / static_cast<float>(texture.get_width());
-    float v = static_cast<float>(Display::get_height()) / static_cast<float>(texture.get_height());
+    float u = static_cast<float>(Display::get_width())  / static_cast<float>(m_texture.get_width());
+    float v = static_cast<float>(Display::get_height()) / static_cast<float>(m_texture.get_height());
 
-    float u_start = -offset.x / static_cast<float>(texture.get_width());
-    float v_start = -offset.y / static_cast<float>(texture.get_height());
+    float u_start = -m_offset.x / static_cast<float>(m_texture.get_width());
+    float v_start = -m_offset.y / static_cast<float>(m_texture.get_height());
 
-    u -= offset.x / static_cast<float>(texture.get_width());
-    v -= offset.y / static_cast<float>(texture.get_height());
+    u -= m_offset.x / static_cast<float>(m_texture.get_width());
+    v -= m_offset.y / static_cast<float>(m_texture.get_height());
 
+    glPushMatrix();
+    glLoadIdentity();
+
     glBegin(GL_QUADS);
     {
       glTexCoord2f(u_start, v_start);
@@ -66,6 +77,8 @@
       glVertex2f(0,  static_cast<float>(Display::get_height()));
     }
     glEnd();
+
+    glPopMatrix();
   }
 };
 



From grumbel at mail.berlios.de  Mon Aug 31 22:48:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 31 Aug 2009 22:48:39 +0200
Subject: [Windstille-commit] r3163 - trunk/windstille/src/screen
Message-ID: <200908312048.n7VKmdsT030089@sheep.berlios.de>

Author: grumbel
Date: 2009-08-31 22:48:39 +0200 (Mon, 31 Aug 2009)
New Revision: 3163

Modified:
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
Log:
Switched ParticleViewer to use only the SceneGraph

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 20:48:14 UTC (rev 3162)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-08-31 20:48:39 UTC (rev 3163)
@@ -25,6 +25,8 @@
 #include "display/display.hpp"
 #include "display/graphic_context_state.hpp"
 #include "scenegraph/particle_system_drawable.hpp"
+#include "scenegraph/fill_screen_pattern_drawable.hpp"
+#include "scenegraph/fill_screen_drawable.hpp"
 #include "input/controller.hpp"
 #include "util/sexpr_file_reader.hpp"
 
@@ -34,7 +36,9 @@
     sg(),
     systems(),
     background(Pathname("images/greychess.sprite")),
-    pos()
+    pos(),
+    m_background_drawable(),
+    m_color_fill_drawable()
 {
 }
 
@@ -60,42 +64,41 @@
 
   std::vector<FileReader> sections = root_reader.get_sections();
   for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
-    { 
-      if (i->get_name() == "particle-system")
-        {
-          systems.push_back(boost::shared_ptr<ParticleSystem>(new ParticleSystem(*i)));
-        }
+  { 
+    if (i->get_name() == "particle-system")
+    {
+      systems.push_back(boost::shared_ptr<ParticleSystem>(new ParticleSystem(*i)));
     }
+  }
 
   std::cout << systems.size() << " particle systems ready to go" << std::endl;
 
-  for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
   {
-    sg.add_drawable(boost::shared_ptr<Drawable>(new ParticleSystemDrawable(**i)));
+    // Build the SceneGraph
+    Texture pattern_texture(Pathname("images/greychess.png"));
+    pattern_texture.set_wrap(GL_REPEAT);
+
+    m_background_drawable.reset(new FillScreenPatternDrawable(pattern_texture, Vector2f()));
+    m_color_fill_drawable.reset(new FillScreenDrawable(Color(0.4f, 0.4f, 0.4f)));
+                                                            
+    m_background_drawable->set_render_mask(SceneContext::COLORMAP);
+    m_color_fill_drawable->set_render_mask(SceneContext::LIGHTMAP);
+
+    sg.add_drawable(m_background_drawable);
+    sg.add_drawable(m_color_fill_drawable);
+
+    for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
+    {
+      sg.add_drawable(boost::shared_ptr<Drawable>(new ParticleSystemDrawable(**i)));
+    }
   }
 }
   
 void
 ParticleViewer::draw()
 {
-  sc.reset_modelview();
+  m_background_drawable->set_offset(pos);
 
-  for(float y = -background.get_width(); 
-      y < static_cast<float>(Display::get_height()) + background.get_height(); 
-      y += background.get_height())
-  {
-    for(float x = -background.get_width(); 
-        x < static_cast<float>(Display::get_width()) + background.get_width(); 
-        x += background.get_width())
-    {
-      sc.color().draw(background, Vector2f(x + fmodf(pos.x, background.get_width()),
-                                           y + fmodf(pos.y, background.get_height())), -900);
-    }
-  }
-
-  // Ambient lighting
-  sc.light().fill_screen(Color(0.4f, 0.4f, 0.4f));
-  
   GraphicContextState state(Display::get_width(), Display::get_height());
   state.set_pos(-pos);
   compositor.render(sc, &sg, state);

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-08-31 20:48:14 UTC (rev 3162)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-08-31 20:48:39 UTC (rev 3163)
@@ -34,6 +34,9 @@
 class Slider;
 class TabComponent;
 }
+
+class FillScreenPatternDrawable;
+class FillScreenDrawable;
 
 class ParticleSystemGUI;
 
@@ -50,6 +53,9 @@
 
   Vector2f pos;
 
+  boost::shared_ptr<FillScreenPatternDrawable> m_background_drawable;
+  boost::shared_ptr<FillScreenDrawable>        m_color_fill_drawable;
+
 public:
   ParticleViewer();
   ~ParticleViewer();



