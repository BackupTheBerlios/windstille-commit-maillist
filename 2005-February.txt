From grumbel at sheep.berlios.de  Fri Feb 11 16:50:33 2005
From: grumbel at sheep.berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 11 Feb 2005 16:50:33 +0100
Subject: [Windstille-commit] r344 - in trunk/src: . display input
Message-ID: <200502111550.j1BFoXmu023813@sheep.berlios.de>

Author: grumbel
Date: 2005-02-11 16:50:31 +0100 (Fri, 11 Feb 2005)
New Revision: 344

Added:
   trunk/src/display/SConstruct
Removed:
   trunk/src/string_converter.hxx
Modified:
   trunk/src/display/
   trunk/src/display/drawing_context.cxx
   trunk/src/display/drawing_context.hxx
   trunk/src/display/scene_context.cxx
   trunk/src/display/scene_context.hxx
   trunk/src/input/button_factory.cxx
   trunk/src/laser_shoot.cxx
   trunk/src/lispreader.cxx
   trunk/src/tile_factory.cxx
   trunk/src/windstille_level.cxx
   trunk/src/windstille_main.cxx
Log:
- adoptions to newest ClanLib


Property changes on: trunk/src/display
___________________________________________________________________
Name: svn:ignore
   + .sconsign


Added: trunk/src/display/SConstruct
===================================================================
--- trunk/src/display/SConstruct	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/display/SConstruct	2005-02-11 15:50:31 UTC (rev 344)
@@ -0,0 +1,4 @@
+SConscript(['../SConstruct'])
+
+# EOF #
+

Modified: trunk/src/display/drawing_context.cxx
===================================================================
--- trunk/src/display/drawing_context.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/display/drawing_context.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -127,6 +127,44 @@
 }
 
 void
+DrawingContext::draw_line (float x1, float y1, float x2, float y2, 
+                           const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_fillrect (float x1, float y1, float x2, float y2, 
+		      const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_rect (float x1, float y1, float x2, float y2, 
+		  const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_pixel (float x_pos, float y_pos, 
+		   const CL_Color& color)
+{
+}
+
+void
+DrawingContext::draw_circle (float x_pos, float y_pos, float radius,
+                             const CL_Color& color)
+{
+}
+
+/** Draws an arc, starting from angle_start to angle_end in
+      counterclockwise direction. Angles are taken in radian */
+void
+DrawingContext::draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_end,
+                          const CL_Color& color)
+{
+}
+
+void
 DrawingContext::fill_screen(const CL_Color& color)
 {
   draw(new FillScreenDrawingRequest(color));
@@ -164,6 +202,13 @@
   assert(!translate_stack.empty());
 }
 
+void
+DrawingContext::reset_modelview()
+{
+  translate_stack.clear();
+  translate_stack.push_back(CL_Pointf(0, 0));
+}
+
 CL_Rect
 DrawingContext::get_clip_rect()
 {

Modified: trunk/src/display/drawing_context.hxx
===================================================================
--- trunk/src/display/drawing_context.hxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/display/drawing_context.hxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -59,6 +59,22 @@
   void draw(DrawingRequest* request);
   void draw(const CL_Sprite&   sprite,  float x, float y, float z = 0);
   void draw(const std::string& text,    float x, float y, float z = 0);
+
+  void draw_line (float x1, float y1, float x2, float y2, 
+		  const CL_Color& color);
+  void draw_fillrect (float x1, float y1, float x2, float y2, 
+		      const CL_Color& color);
+  void draw_rect (float x1, float y1, float x2, float y2, 
+		  const CL_Color& color);
+  void draw_pixel (float x_pos, float y_pos, 
+		   const CL_Color& color);
+  void draw_circle (float x_pos, float y_pos, float radius,
+                    const CL_Color& color);
+
+  /** Draws an arc, starting from angle_start to angle_end in
+      counterclockwise direction. Angles are taken in radian */
+  void draw_arc (float x_pos, float y_pos, float radius, float angle_start, float angle_end,
+                 const CL_Color& color);
   /*} */
   
   /** Translate the drawing context */
@@ -72,6 +88,7 @@
 
   void push_modelview();
   void pop_modelview();
+  void reset_modelview();
 
   /** Return the area of the screen that will be visible*/
   CL_Rect get_clip_rect();

Modified: trunk/src/display/scene_context.cxx
===================================================================
--- trunk/src/display/scene_context.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/display/scene_context.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -32,9 +32,9 @@
   CL_Canvas        canvas;
 
   SceneContextImpl() 
-    : lightmap(new CL_PixelBuffer(CL_Display::get_width(), 
-                                  CL_Display::get_height(),
-                                  CL_Display::get_width()*4, CL_PixelFormat::rgba8888), true),
+    : lightmap(CL_PixelBuffer(200, 
+                              150,
+                              200*4, CL_PixelFormat::rgba8888)),
       canvas(lightmap)
   {
     canvas.get_gc()->set_scale(0.25, 0.25);
@@ -114,6 +114,14 @@
 }
 
 void
+SceneContext::reset_modelview()
+{
+  impl->color.reset_modelview();
+  impl->light.reset_modelview();
+  impl->highlight.reset_modelview();
+}
+
+void
 SceneContext::render()
 {
   // Render all buffers

Modified: trunk/src/display/scene_context.hxx
===================================================================
--- trunk/src/display/scene_context.hxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/display/scene_context.hxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -65,6 +65,7 @@
 
   void push_modelview();
   void pop_modelview();
+  void reset_modelview();
 
   /** Takes all the buffers and combines them to form the final image
       that will be shown on the screen */

Modified: trunk/src/input/button_factory.cxx
===================================================================
--- trunk/src/input/button_factory.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/input/button_factory.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -20,7 +20,6 @@
 #include <ClanLib/Display/joystick.h>
 #include <ClanLib/Display/keyboard.h>
 #include "../lispreader.hxx"
-#include "../string_converter.hxx"
 #include "../feuerkraft_error.hxx"
 #include "input_button.hxx"
 #include "input_axis.hxx"

Modified: trunk/src/laser_shoot.cxx
===================================================================
--- trunk/src/laser_shoot.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/laser_shoot.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -22,7 +22,6 @@
 #include "display.hxx"
 #include "tile_map.hxx"
 #include "globals.hxx"
-#include "string_converter.hxx"
 #include "game_world.hxx"
 #include "animation_obj.hxx"
 #include "laser_shoot.hxx"
@@ -32,7 +31,7 @@
 {
   assert(stage >= 1 && stage <= 5);
 
-  sprite = CL_Sprite (std::string("shoot/laser/stage") + to_string(stage), resources);
+  sprite = CL_Sprite (std::string("shoot/laser/stage") + CL_String::to(stage), resources);
 }
 
 void

Modified: trunk/src/lispreader.cxx
===================================================================
--- trunk/src/lispreader.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/lispreader.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -26,6 +26,7 @@
 #include <ctype.h>
 #include <stdlib.h>
 #include <string.h>
+#include <ClanLib/Core/System/clanstring.h>
 #include "lispreader.hxx"
 
 #define TOKEN_ERROR                   -1
@@ -1361,7 +1362,7 @@
 {
   lisp_stream_t stream;
 
-  if (has_suffix(filename.c_str(), ".gz"))
+  if (CL_String::get_extension(filename) == "gz")
     {
       return lisp_read_from_gzfile(filename.c_str());
     }

Deleted: trunk/src/string_converter.hxx
===================================================================
--- trunk/src/string_converter.hxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/string_converter.hxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -1,61 +0,0 @@
-//  $Id: string_converter.hxx,v 1.3 2003/11/04 22:48:51 grumbel Exp $
-// 
-//  Windstille - A Jump'n Shoot Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef STRINGCONVERTER_HXX
-#define STRINGCONVERTER_HXX
-
-#include <stdexcept>
-#include <sstream>
-
-template <class T>
-std::string to_string(const T& any)
-{
-  std::ostringstream oss;
-  oss << any;
-  return oss.str();
-}
-
-template <class T>
-bool from_string(const std::string& rep, T& x)
-{
-  // this is necessary so that if "x" is not modified if the conversion fails
-  T temp;
-  std::istringstream iss(rep);
-
-  iss >> temp;
-
-  if (iss.fail()) {
-    return false;
-  } else {
-    x = temp;
-    return true;
-  }
-}
-
-inline bool has_suffix(const std::string& data, const std::string& suffix)
-{
-  if (data.length() >= suffix.length())
-    return data.compare(data.length() - suffix.length(), suffix.length(), suffix) == 0;
-  else
-    return false;
-}
-
-#endif
-
-/* EOF */

Modified: trunk/src/tile_factory.cxx
===================================================================
--- trunk/src/tile_factory.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/tile_factory.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -25,7 +25,6 @@
 #include <assert.h>
 #include <iostream>
 #include "globals.hxx"
-#include "string_converter.hxx"
 #include "tile.hxx"
 #include "tile_factory.hxx"
 

Modified: trunk/src/windstille_level.cxx
===================================================================
--- trunk/src/windstille_level.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/windstille_level.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -21,7 +21,6 @@
 #include <iostream>
 #include "globals.hxx"
 #include "windstille_level.hxx"
-#include "string_converter.hxx"
 #include "lispreader.hxx"
 
 WindstilleLevel::WindstilleLevel (const std::string& filename)

Modified: trunk/src/windstille_main.cxx
===================================================================
--- trunk/src/windstille_main.cxx	2005-01-31 15:18:07 UTC (rev 343)
+++ trunk/src/windstille_main.cxx	2005-02-11 15:50:31 UTC (rev 344)
@@ -25,7 +25,6 @@
 #include <ClanLib/display.h>
 
 #include "ruby_functor.hxx"
-#include "string_converter.hxx"
 #include "windstille_error.hxx"
 #include "globals.hxx"
 #include "windstille_game.hxx"



From grumbel at sheep.berlios.de  Fri Feb 11 19:42:14 2005
From: grumbel at sheep.berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 11 Feb 2005 19:42:14 +0100
Subject: [Windstille-commit] r345 - in trunk/src: . input
Message-ID: <200502111842.j1BIgEsF026610@sheep.berlios.de>

Author: grumbel
Date: 2005-02-11 19:42:13 +0100 (Fri, 11 Feb 2005)
New Revision: 345

Removed:
   trunk/src/screenshot.cxx
   trunk/src/screenshot.hxx
Modified:
   trunk/src/SConstruct
   trunk/src/input/button_factory.cxx
   trunk/src/tile.cxx
   trunk/src/tile_factory.cxx
   trunk/src/windstille_game.cxx
Log:
- adoption to newest clanlib

Modified: trunk/src/SConstruct
===================================================================
--- trunk/src/SConstruct	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/SConstruct	2005-02-11 18:42:13 UTC (rev 345)
@@ -71,7 +71,6 @@
     'player_view.cxx', 
     'power_up.cxx', 
     'screen.cxx', 
-    'screenshot.cxx', 
     'tile.cxx', 
     'tile_factory.cxx', 
     'tile_map.cxx', 

Modified: trunk/src/input/button_factory.cxx
===================================================================
--- trunk/src/input/button_factory.cxx	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/input/button_factory.cxx	2005-02-11 18:42:13 UTC (rev 345)
@@ -87,7 +87,7 @@
 ButtonFactory::create_keyboard_button(lisp_object_t* lst)
 {
   std::string key_str = lisp_string(lisp_car(lst));
-  int key_num         = CL_Keyboard::get_device().keyid_to_string(key_str);
+  int key_num         = CL_Keyboard::get_device().string_to_keyid(key_str);
 
   // FIXME: No error checking
   return new InputButtonInputDevice(CL_Keyboard::get_device(), key_num);

Deleted: trunk/src/screenshot.cxx
===================================================================
--- trunk/src/screenshot.cxx	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/screenshot.cxx	2005-02-11 18:42:13 UTC (rev 345)
@@ -1,86 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <stdio.h>
-#include <iostream>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
-#include <ClanLib/Display/pixel_buffer.h>
-#include <ClanLib/Display/pixel_format.h>
-#include "screenshot.hxx"
-
-void
-Screenshot::write_screenshot_pnm(const std::string& filename)
-{
-  CL_PixelBuffer* buf = take_screen_shot();
-
-  FILE* out = fopen(filename.c_str(), "wb");
-  
-  if (!out)
-    {
-      perror(filename.c_str());
-      std::cout << "Screenshot: Couldn't write file: " << filename << std::endl;
-      return;
-    }
-
-  buf->lock();
-  int width  = buf->get_width();
-  int pitch  = buf->get_width()*3;
-  int height = buf->get_height();
-
-  fprintf(out,
-	  "P6\n"
-	  "# CREATOR: Feuerkraft\n"
-          "%d %d\n"
-	  "255\n",
-	  width,
-	  height);
-
-  unsigned char* data = static_cast<unsigned char*>(buf->get_data());
-  
-  for(int i = height-1; i >= 0; --i)
-    {
-      fwrite(data + pitch*i,
-             sizeof(unsigned char),
-             pitch, 
-             out);
-    }
-
-  buf->unlock();
-  fclose(out);
-  
-  delete buf;
-}
-
-CL_PixelBuffer*
-Screenshot::take_screen_shot()
-{
-  CL_PixelBuffer back_buffer = CL_Display::get_current_window()->get_back_buffer();
-  
-  unsigned short width = back_buffer.get_width();
-  unsigned short height = back_buffer.get_height();
-		
-  CL_PixelBuffer *pbuf = new CL_PixelBuffer(width, height, width*3, CL_PixelFormat::bgr888);
-  back_buffer.convert(pbuf);
-  
-  return pbuf;
-}
-
-
-/* EOF */

Deleted: trunk/src/screenshot.hxx
===================================================================
--- trunk/src/screenshot.hxx	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/screenshot.hxx	2005-02-11 18:42:13 UTC (rev 345)
@@ -1,41 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCREENSHOT_HXX
-#define HEADER_SCREENSHOT_HXX
-
-#include <string>
-
-class CL_PixelBuffer;
-
-/** */
-class Screenshot
-{
-private:
-public:
-  static CL_PixelBuffer* take_screen_shot();
-  static void write_screenshot_pnm(const std::string& filename);
-private:
-  Screenshot (const Screenshot&);
-  Screenshot& operator= (const Screenshot&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/src/tile.cxx
===================================================================
--- trunk/src/tile.cxx	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/tile.cxx	2005-02-11 18:42:13 UTC (rev 345)
@@ -45,7 +45,7 @@
     filename("<unknown>")
 {
   CL_SpriteDescription desc;
-  desc.add_frame(new CL_PixelBuffer(buffer), true);
+  desc.add_frame(buffer);
   sur = CL_Sprite(desc);
 
   //sur.set_alignment(origin_center, 0, 0);

Modified: trunk/src/tile_factory.cxx
===================================================================
--- trunk/src/tile_factory.cxx	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/tile_factory.cxx	2005-02-11 18:42:13 UTC (rev 345)
@@ -120,26 +120,26 @@
       std::cout << "Error: Size does not match: " << colmap.size() << std::endl;
     }
 
-  CL_PixelBuffer* image = CL_ProviderFactory::load(filename);
+  CL_PixelBuffer image = CL_ProviderFactory::load(filename);
 
-  int num_tiles = (image->get_width()/64) * (image->get_height()/64);
+  int num_tiles = (image.get_width()/64) * (image.get_height()/64);
 
   if ((id + num_tiles) >= int(tiles.size()))
     {
       tiles.resize(id + num_tiles + 1);
     }
 
-  for (int y = 0; y < image->get_height(); y += TILE_SIZE)
+  for (int y = 0; y < image.get_height(); y += TILE_SIZE)
     {
-      for (int x = 0; x < image->get_width(); x += TILE_SIZE)
+      for (int x = 0; x < image.get_width(); x += TILE_SIZE)
         {
           CL_PixelBuffer chopped_image(TILE_SIZE, TILE_SIZE,
-                                       image->get_format().get_depth()*TILE_SIZE,
-                                       image->get_format(), NULL);
+                                       image.get_format().get_depth()*TILE_SIZE,
+                                       image.get_format(), NULL);
           chopped_image.lock();
-          image->convert(chopped_image.get_data(), 
+          image.convert(chopped_image.get_data(), 
                          chopped_image.get_format(), 
-                         image->get_format().get_depth()*TILE_SIZE, 
+                         image.get_format().get_depth()*TILE_SIZE, 
                          CL_Rect(CL_Point(0, 0), CL_Size(TILE_SIZE, TILE_SIZE)),
                          CL_Rect(CL_Point(x, y), CL_Size(TILE_SIZE, TILE_SIZE)));
           chopped_image.unlock();
@@ -153,8 +153,6 @@
           id += 1;
         }
     }
-
-  delete image;
 }
 
 void

Modified: trunk/src/windstille_game.cxx
===================================================================
--- trunk/src/windstille_game.cxx	2005-02-11 15:50:31 UTC (rev 344)
+++ trunk/src/windstille_game.cxx	2005-02-11 18:42:13 UTC (rev 345)
@@ -38,7 +38,6 @@
 #include "background.hxx"
 #include "dialog_manager.hxx"
 #include "windstille_main.hxx"
-#include "screenshot.hxx"
 #include "display/scene_context.hxx"
 #include "input/input_manager.hxx"
 
@@ -144,8 +143,8 @@
       filename.width(8);
       filename.fill('0');
       filename << frames;
-      filename << ".ppm";
-      Screenshot::write_screenshot_pnm(filename.str());
+      filename << ".png";
+      CL_ProviderFactory::save(CL_Display::get_front_buffer(), filename.str());
     }
   ++frames;
 }



From grumbel at sheep.berlios.de  Sat Feb 12 12:03:18 2005
From: grumbel at sheep.berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 12 Feb 2005 12:03:18 +0100
Subject: [Windstille-commit] r346 - trunk/src
Message-ID: <200502121103.j1CB3I6h003608@sheep.berlios.de>

Author: grumbel
Date: 2005-02-12 12:03:17 +0100 (Sat, 12 Feb 2005)
New Revision: 346

Modified:
   trunk/src/windstille_main.cxx
   trunk/src/windstille_main.hxx
Log:
- added screenshot and fullscreen shortcuts (F11, F12)


Modified: trunk/src/windstille_main.cxx
===================================================================
--- trunk/src/windstille_main.cxx	2005-02-11 18:42:13 UTC (rev 345)
+++ trunk/src/windstille_main.cxx	2005-02-12 11:03:17 UTC (rev 346)
@@ -194,6 +194,8 @@
     parse_command_line(argc, argv);
     init_modules();
     
+    CL_Slot slot = CL_Keyboard::sig_key_down().connect(this, &WindstilleMain::key_down);
+
     std::cout << "Detected " << CL_Joystick::get_device_count() << " joysticks" << std::endl;
         
     if (playback_file.empty())
@@ -243,6 +245,27 @@
 }
 
 void
+WindstilleMain::key_down(const CL_InputEvent& event)
+{
+  if (event.id == CL_KEY_F12)
+    {
+      std::string filename = "screenshot.png";
+      std::cout << "Saving screenshot to: " << filename << std::endl;
+      CL_ProviderFactory::save(CL_Display::get_front_buffer(),
+                               filename);
+    } 
+  else if (event.id == CL_KEY_F11)
+    {
+      if (CL_Display::is_fullscreen())
+        CL_Display::set_windowed();
+      else
+        CL_Display::set_fullscreen(CL_Display::get_width(),
+                                   CL_Display::get_height(),
+                                   32);
+    }
+}
+
+void
 WindstilleMain::init_modules()
 {
   ruby_init();

Modified: trunk/src/windstille_main.hxx
===================================================================
--- trunk/src/windstille_main.hxx	2005-02-11 18:42:13 UTC (rev 345)
+++ trunk/src/windstille_main.hxx	2005-02-12 11:03:17 UTC (rev 346)
@@ -51,6 +51,8 @@
   void parse_command_line(int argc, char** argv);
   void init_modules();
   void deinit_modules();
+
+  void key_down(const CL_InputEvent& event);
 };
 
 extern WindstilleMain main_app;



