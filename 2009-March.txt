From grumbel at mail.berlios.de  Mon Mar  2 15:22:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 2 Mar 2009 15:22:39 +0100
Subject: [Windstille-commit] r2531 - in trunk/windstille/src: . font
Message-ID: <200903021422.n22EMdnX032562@sheep.berlios.de>

Author: grumbel
Date: 2009-03-02 15:22:37 +0100 (Mon, 02 Mar 2009)
New Revision: 2531

Added:
   trunk/windstille/src/font/no_font_effect.cpp
   trunk/windstille/src/font/no_font_effect.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/font_effect.hpp
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/font/ttf_font.hpp
Log:
Implemented BorderFontEffect

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/SConscript	2009-03-02 14:22:37 UTC (rev 2531)
@@ -74,6 +74,7 @@
 'engine/script_manager.cpp',
 'engine/sector.cpp',
 'font/border_font_effect.cpp',
+'font/no_font_effect.cpp',
 'font/fonts.cpp',
 'font/ttf_font.cpp',
 'gui/automap.cpp',

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -31,19 +31,19 @@
 int
 BorderFontEffect::get_height(int orig_font_size) const
 {
-  return orig_font_size + 2*size ;
+  return orig_font_size + 2*size;
 }
   
 int
 BorderFontEffect::get_glyph_width(int orig_glyph_width) const
 {
-  return orig_glyph_width + 2*size ;
+  return orig_glyph_width + 2*size;
 }
 
 int
 BorderFontEffect::get_glyph_height(int orig_glyph_height) const
 {
-  return orig_glyph_height + 2*size ;
+  return orig_glyph_height + 2*size;
 }
   
 void
@@ -51,26 +51,49 @@
 {
   SDL_LockSurface(target);
   
+  x_pos += size;
+  y_pos += size;
+
   int start_x = std::max(0, -x_pos);
   int start_y = std::max(0, -y_pos);
   
-  int end_x = std::min(brush.width, target->w  - x_pos);
+  int end_x = std::min(brush.width, target->w - x_pos);
   int end_y = std::min(brush.rows,  target->h - y_pos);
 
   unsigned char* target_buf = static_cast<unsigned char*>(target->pixels);
 
   int target_pitch = target->pitch;
 
+  // Draw the border
   for (int y = start_y; y < end_y; ++y)
     for (int x = start_x; x < end_x; ++x)
       {
+        for(int by = -size; by <= size; ++by)
+          for(int bx = -size+abs(by); bx <= size-abs(by); ++bx)
+            {
+              int target_pos = (y + y_pos + by) * target_pitch + 4*(x + x_pos + bx);
+              int brush_pos  = y * brush.pitch + x;
+            
+              target_buf[target_pos + 0] = 0;
+              target_buf[target_pos + 1] = 0;
+              target_buf[target_pos + 2] = 0;
+              target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
+            }
+      }
+
+  // Draw the font itself
+  for (int y = start_y; y < end_y; ++y)
+    for (int x = start_x; x < end_x; ++x)
+      {
         int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
         int brush_pos  = y * brush.pitch + x;
-            
-        target_buf[target_pos + 0] = int(float(y)/brush.width * 255);
-        target_buf[target_pos + 1] = int(float(y)/brush.width * 255);
-        target_buf[target_pos + 2] = 255;
-        target_buf[target_pos + 3] = brush.buffer[brush_pos];
+        
+        int alpha = brush.buffer[brush_pos];
+
+        target_buf[target_pos + 0] = std::min((target_buf[target_pos + 0] * (255 - alpha) + alpha * 255)/255, 255);
+        target_buf[target_pos + 1] = std::min((target_buf[target_pos + 1] * (255 - alpha) + alpha * 255)/255, 255);
+        target_buf[target_pos + 2] = std::min((target_buf[target_pos + 2] * (255 - alpha) + alpha * 255)/255, 255);
+        target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
       }
     
   SDL_UnlockSurface(target);

Modified: trunk/windstille/src/font/font_effect.hpp
===================================================================
--- trunk/windstille/src/font/font_effect.hpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/font_effect.hpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -24,7 +24,11 @@
 #include FT_FREETYPE_H
 #include FT_GLYPH_H
 
-/** */
+/** 
+ *  The FontEffect class manages the blitting from a glyph bitmap to
+ *  the SDL_Surface, it allows to apply different kinds of effects to
+ *  a font, such as adding a border around it.
+ */
 class FontEffect
 {
 private:

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/fonts.cpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -29,13 +29,11 @@
 void
 Fonts::init()
 {
-  std::auto_ptr<BorderFontEffect> border_effect(new BorderFontEffect(1));
-
-  ttffont = new TTFFont("fonts/VeraMono.ttf", 12);
-  vera12  = new TTFFont("fonts/Vera.ttf", 12);
-  vera16  = new TTFFont("fonts/Vera.ttf", 16);
-  vera20  = new TTFFont("fonts/Vera.ttf", 20);
-  vera28  = new TTFFont("fonts/Vera.ttf", 28);
+  ttffont = new TTFFont("fonts/VeraMono.ttf", 12, BorderFontEffect(1));
+  vera12  = new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2));
+  vera16  = new TTFFont("fonts/Vera.ttf",     16, BorderFontEffect(2));
+  vera20  = new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2));
+  vera28  = new TTFFont("fonts/Vera.ttf",     28, BorderFontEffect(2));
 }
 
 void

Added: trunk/windstille/src/font/no_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.cpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/no_font_effect.cpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -0,0 +1,35 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "display/blitter.hpp"
+#include "no_font_effect.hpp"
+
+void
+NoFontEffect::blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const
+{
+  blit_ftbitmap(target, brush, x_pos, y_pos);
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/font/no_font_effect.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/font/no_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.hpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/no_font_effect.hpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -0,0 +1,45 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_FONT_NO_FONT_EFFECT_HPP
+#define HEADER_WINDSTILLE_FONT_NO_FONT_EFFECT_HPP
+
+#include "font_effect.hpp"
+
+class NoFontEffect : public FontEffect
+{
+private:
+public:
+  NoFontEffect() {}
+  ~NoFontEffect() {}
+
+  int get_height(int orig_font_size) const { return orig_font_size; }
+  
+  int get_glyph_width(int orig_glyph_width) const   { return orig_glyph_width; }
+  int get_glyph_height(int orig_glyph_height) const { return orig_glyph_height; }
+  
+  void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
+  
+private:
+  NoFontEffect (const NoFontEffect&);
+  NoFontEffect& operator= (const NoFontEffect&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/font/no_font_effect.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -65,7 +65,7 @@
 
 FT_Library TTFFontImpl::library;
 
-TTFFont::TTFFont(const std::string& filename, int size_, FontEffect* effect)
+TTFFont::TTFFont(const std::string& filename, int size_, const FontEffect& effect)
   : impl(new TTFFontImpl())
 {
   assert(size_ > 0);
@@ -89,72 +89,66 @@
   FT_Select_Charmap(face,  FT_ENCODING_UNICODE);
 
   // FIXME: should calculate texture size, based on font size
-#if SDL_BYTEORDER == SDL_BIG_ENDIAN
-  SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                              1024, 1024, 32,
-                                              0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
-#else
-  SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                              1024, 1024, 32,
-                                              0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
-#endif
+  SDL_Surface* pixelbuffer = create_surface_rgba(1024, 1024);
   SDL_SetAlpha(pixelbuffer, 0, 0);
 
   int x_pos = 1;
   int y_pos = 1;
 
-  impl->height = effect ? effect->get_height(impl->size) : impl->size;
+  impl->height = effect.get_height(impl->size);
 
   // We limit ourself to 256 characters for the momemnt
   for(int glyph_index = 0; glyph_index < 256; glyph_index += 1)
     {
       if (FT_Load_Char( face,  glyph_index, FT_LOAD_RENDER))
         {
-          // FIXME: happens when character is not in font, should be handled more gentle
+          // FIXME: What happens when character is not in font, should be handled more gentle
           throw std::runtime_error("couldn't load char");
         }
-      
-      if (!effect)
-        blit_ftbitmap(pixelbuffer, face->glyph->bitmap, x_pos, y_pos);
       else
-        effect->blit(pixelbuffer, face->glyph->bitmap, x_pos, y_pos);
+        {      
+          effect.blit(pixelbuffer, face->glyph->bitmap, x_pos, y_pos);
 
-      int glyph_width  = effect ? effect->get_glyph_width(face->glyph->bitmap.width) : face->glyph->bitmap.width;
-      int glyph_height = effect ? effect->get_glyph_height(face->glyph->bitmap.rows) : face->glyph->bitmap.rows;
+          int glyph_width  = effect.get_glyph_width(face->glyph->bitmap.width);
+          int glyph_height = effect.get_glyph_height(face->glyph->bitmap.rows);
 
-      generate_border(pixelbuffer, x_pos, y_pos, glyph_width, glyph_height);
+          generate_border(pixelbuffer, x_pos, y_pos, glyph_width, glyph_height);
 
-      Rect pos(Point(face->glyph->bitmap_left,  -face->glyph->bitmap_top), 
-               Size(glyph_width, glyph_height));
+          Rect pos(Point(face->glyph->bitmap_left,  -face->glyph->bitmap_top), 
+                   Size(glyph_width, glyph_height));
 
-      Rectf uv(x_pos/float(pixelbuffer->w),
-               y_pos/float(pixelbuffer->h),
-               (x_pos + glyph_width)/float(pixelbuffer->w),
-               (y_pos + glyph_height)/float(pixelbuffer->h));
+          Rectf uv(x_pos/float(pixelbuffer->w),
+                   y_pos/float(pixelbuffer->h),
+                   (x_pos + glyph_width)/float(pixelbuffer->w),
+                   (y_pos + glyph_height)/float(pixelbuffer->h));
       
-      impl->characters.push_back(TTFCharacter(pos, uv,
-                                              face->glyph->advance.x >> 6));
+          impl->characters.push_back(TTFCharacter(pos, uv,
+                                                  face->glyph->advance.x >> 6));
 
-      // we leave a one pixel border around the letters which we fill with generate_border
-      x_pos += glyph_width + 2;
-      if (x_pos + impl->height + 2 > pixelbuffer->w)
-        {
-          y_pos += impl->height + 2;
-          x_pos = 1;
-        }
+          // we leave a one pixel border around the letters which we fill with generate_border
+          x_pos += glyph_width + 2;
+          if (x_pos + impl->height + 2 > pixelbuffer->w)
+            {
+              y_pos += impl->height + 2;
+              x_pos = 1;
+            }
 
-      if (y_pos + impl->height + 2 > pixelbuffer->h)
-        throw std::runtime_error("Font Texture to small");
+          if (y_pos + impl->height + 2 > pixelbuffer->h)
+            throw std::runtime_error("Font Texture to small");
+        }
     }
   FT_Done_Face(face);
 
-  try {
-    impl->texture = Texture(pixelbuffer);
-    impl->texture.set_filter(GL_NEAREST);
-  } catch(...) {
-    SDL_FreeSurface(pixelbuffer);
-    throw;
-  }
+  try 
+    {
+      impl->texture = Texture(pixelbuffer);
+      impl->texture.set_filter(GL_NEAREST);
+    }
+  catch(...) 
+    {
+      SDL_FreeSurface(pixelbuffer);
+      throw;
+    }
   SDL_FreeSurface(pixelbuffer);
 }
 

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-02-28 21:39:16 UTC (rev 2530)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-03-02 14:22:37 UTC (rev 2531)
@@ -24,6 +24,7 @@
 #include <GL/gl.h>
 #include "display/color.hpp"
 #include "math/rect.hpp"
+#include "no_font_effect.hpp"
 #include "display/texture.hpp"
 
 class FontEffect;
@@ -55,7 +56,7 @@
   static void init();
   static void deinit();
 
-  TTFFont(const std::string& file, int size, FontEffect* effect = 0);
+  TTFFont(const std::string& file, int size, const FontEffect& effect = NoFontEffect());
   ~TTFFont();
 
   /** */



From grumbel at mail.berlios.de  Mon Mar  2 15:44:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 2 Mar 2009 15:44:39 +0100
Subject: [Windstille-commit] r2532 - trunk/windstille/src/display
Message-ID: <200903021444.n22EidAT002245@sheep.berlios.de>

Author: grumbel
Date: 2009-03-02 15:44:38 +0100 (Mon, 02 Mar 2009)
New Revision: 2532

Modified:
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/blitter.hpp
Log:
Implemented BorderFontEffect

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-03-02 14:22:37 UTC (rev 2531)
+++ trunk/windstille/src/display/blitter.cpp	2009-03-02 14:44:38 UTC (rev 2532)
@@ -83,4 +83,18 @@
   SDL_UnlockSurface(target);
 }
 
+SDL_Surface* create_surface_rgba(int width, int height)
+{
+#if SDL_BYTEORDER == SDL_BIG_ENDIAN
+  SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
+                                                  1024, 1024, 32,
+                                                  0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
+#else
+  SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
+                                                  1024, 1024, 32,
+                                                  0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
+#endif
+  return pixelbuffer;
+}
+
 /* EOF */

Modified: trunk/windstille/src/display/blitter.hpp
===================================================================
--- trunk/windstille/src/display/blitter.hpp	2009-03-02 14:22:37 UTC (rev 2531)
+++ trunk/windstille/src/display/blitter.hpp	2009-03-02 14:44:38 UTC (rev 2532)
@@ -36,6 +36,7 @@
 */
 void generate_border(SDL_Surface* surface, int x_pos, int y_pos, int width, int height);
 void blit_ftbitmap(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos);
+SDL_Surface* create_surface_rgba(int width, int height);
 
 #endif
 



From grumbel at mail.berlios.de  Mon Mar  2 15:44:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 2 Mar 2009 15:44:58 +0100
Subject: [Windstille-commit] r2533 - trunk/windstille/src/sprite2d
Message-ID: <200903021444.n22Eiws2002320@sheep.berlios.de>

Author: grumbel
Date: 2009-03-02 15:44:58 +0100 (Mon, 02 Mar 2009)
New Revision: 2533

Modified:
   trunk/windstille/src/sprite2d/data.hpp
Log:
tiny indention fix

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-03-02 14:44:38 UTC (rev 2532)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-03-02 14:44:58 UTC (rev 2533)
@@ -36,7 +36,7 @@
 
   std::string name;
   float       speed;
-  Vector2f      offset;
+  Vector2f    offset;
   float       scale;
   Surfaces    surfaces;
 };



From grumbel at mail.berlios.de  Mon Mar  2 20:09:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 2 Mar 2009 20:09:48 +0100
Subject: [Windstille-commit] r2534 - in trunk/media/wiki: . images thumbnails
Message-ID: <200903021909.n22J9mZ4021597@sheep.berlios.de>

Author: grumbel
Date: 2009-03-02 20:09:41 +0100 (Mon, 02 Mar 2009)
New Revision: 2534

Added:
   trunk/media/wiki/Dialog.wiki
   trunk/media/wiki/images/dialog_new.jpg
   trunk/media/wiki/images/dialog_old1.jpg
   trunk/media/wiki/images/dialog_old2.jpg
   trunk/media/wiki/thumbnail.sh
   trunk/media/wiki/thumbnails/dialog_new.jpg
   trunk/media/wiki/thumbnails/dialog_old1.jpg
   trunk/media/wiki/thumbnails/dialog_old2.jpg
Modified:
   trunk/media/wiki/Backstory.wiki
   trunk/media/wiki/Rebirth.wiki
   trunk/media/wiki/Sprite.wiki
   trunk/media/wiki/Windstille.wiki
   trunk/media/wiki/default.css
   trunk/media/wiki/template.xml
   trunk/media/wiki/wiki2html.py
Log:
Added Dialog page and some other new stuff

Modified: trunk/media/wiki/Backstory.wiki
===================================================================
--- trunk/media/wiki/Backstory.wiki	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/Backstory.wiki	2009-03-02 19:09:41 UTC (rev 2534)
@@ -58,7 +58,7 @@
 
 == 2380 - Collonisation - Phase 2
 
-With the terraforming making progress it become clear that it wouldn't take much longer till the atmosphere of Zeta-12 become breathable. So the humans got ready to move to Alpha Centauri B.
+With the terraforming making progress it become clear that it wouldn't take much longer till the atmosphere of Nugani become breathable. So the humans got ready to move to Alpha Centauri B.
 
 A dozens ships where build, each with the ability to carry 16 entry capsules, each carring around 40 people. 640 people per ship 25 ships in total.
 
@@ -66,9 +66,9 @@
 
 Unknown by the earth government, the company Red Star, had build a handful of collonisation ships themselves. While NStars ships flow in a large group, so that they could give each other support on the long journey, the ships of Red Star where build for speed. They where build to overtake the NStar fleed and arrive at Alpha Centauri B first. The idea was simple, new land was freely available and whoever got there first was the one who could land claim to it. And Red Star was prepared to do exactly that. Not only where their ships faster, they also carried plenty of guns to protect their land. NStars fleed wasn't equiped or prepared for a war, they where launched with the expection to be the first.
 
-== 2423 - Athmosphere on Zeta-12 becomes breathable
+== 2423 - Athmosphere on Nugani becomes breathable
 
-150 years after the terraforming had begone, Zeta-12 become ready for human habitants. The oxigen levels still were not up to earth standards, so cities had some additional oxigen supply going, but one no longer suffocated in the plain athmosphere. 
+150 years after the terraforming had begone, Nugani become ready for human habitants. The oxigen levels still were not up to earth standards, so cities had some additional oxigen supply going, but one no longer suffocated in the plain athmosphere. 
 
 The human settle ships arrive.
 
@@ -76,11 +76,11 @@
 
 One collonisation ship gets shoot out of the sky by RedStar.
 
-== 2425 - Touchdown - Colonization on Zeta-12 begins
+== 2425 - Touchdown - Colonization on Nugani begins
 
 In preparation to touchdown all humans in hibernation have been woken up, after all things could go wrong when entering the athmosphere and it might be important that they can evocuate the capsules fast enough. 
 
-== 2434 - multiple cities have been build on Zeta-12 
+== 2434 - multiple cities have been build on Nugani 
 
 
 

Added: trunk/media/wiki/Dialog.wiki
===================================================================
--- trunk/media/wiki/Dialog.wiki	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/Dialog.wiki	2009-03-02 19:09:41 UTC (rev 2534)
@@ -0,0 +1,34 @@
+<<thumbnail src="dialog_old1.jpg" title="Old Dialog System">>
+<<thumbnail src="dialog_old2.jpg" title="Old Dialog System - Answer">>
+
+The old dialog system was basically a JRPG like system, meaning you got a portrait and next to it some text. Answering to dialog was done by presenting a big wheel which contained the answers along with character thought at the bottom, this is basically the same thing as used by Dreamfall.
+
+<<thumbnail src="dialog_new.jpg" title="New Dialog System">>
+
+The new dialog system will change a few things, the big blocking dialog window will be replaced with a slick LucasArts adventure style speech 'bubbles' right over the character. This will allow more flexibility, such as overlapping dialog or dialog that is spoken by NPCs in the background. It should also make it easier to add voice acting later on, if that ever happens.
+
+The choice wheel will basically stay, but become more Mass Effect like, meaning it will get much small and shown in a screens corner, instead of screen filling. It will also appear even before the last line of dialog is fully spoken, so the player can make his choices faster and keep the dialog running without interruption.
+
+Another thing to consider is that dialog thus basically turns into a branching cutscene, instead of a series of text boxes, thus it would be nice to formalize these cutscenes and turn them into sexpr data instead of squirrel script. Not sure if that is a good idea.
+
+== Scripting Syntax
+
+<<note>>
+Random syntax scribble, not to be taken serious at this point.
+<</note>>
+
+{{{
+(windstille-dialog
+ (answers 
+  (id 0)
+  (answer (id 0)
+          (text "I don't think that is a good idea"))
+  (answer (id 1)
+          (text "I don't think so")
+          (trigger "script-trigger2.nut"))
+  (answer (id 2)  
+          (text "Fuck you")
+          (trigger "script-trigger.nut")))
+
+ )
+}}}

Modified: trunk/media/wiki/Rebirth.wiki
===================================================================
--- trunk/media/wiki/Rebirth.wiki	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/Rebirth.wiki	2009-03-02 19:09:41 UTC (rev 2534)
@@ -38,7 +38,7 @@
 
 Long story short, the new dialog system will be more like the classic LucasArts advetures, presenting color-coded text right on the screen without necesarrily block.
 
-Conversation, aka answering to dialog, is currently done by a system similar to Dreamfall, it presents a general topic choice, along with a little text for thought of the character on the topic. So basically a normal multiple choice system with a little twist. This might mostly stay as is, maybe taking a bit additional inspiration from Fahrenheit and Mass Effect.
+Conversation, aka answering to dialog, is currently done by a system similar to Dreamfall, it presents a general topic choice, along with a little text for thought of the character on the topic. So basically a normal multiple choice system with a little twist. This might mostly stay as is, maybe taking a bit additional inspiration from Fahrenheit and Mass Effect (i.e. displaying the choices while the dialog is still running, thus more fluent and less need to wait on choices).
 
 Another issue with Dialog is scripting, current dialog is heavily scripting based, for longer dialogs this is impractical, a system similar to Adonthell shall be used, i.e. an aproach based on data (s-expr files), not on script code. Scripting will be done via hooks in the data.
 

Modified: trunk/media/wiki/Sprite.wiki
===================================================================
--- trunk/media/wiki/Sprite.wiki	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/Sprite.wiki	2009-03-02 19:09:41 UTC (rev 2534)
@@ -1,4 +1,4 @@
-A Sprite is a simple nimated image. A Sprite can have multiple actions.
+A Sprite is a simple nimated image. A Sprite can have multiple actions. Both PNG and JPG formatse for images are supported.
 
 = C++ Specification:
 

Modified: trunk/media/wiki/Windstille.wiki
===================================================================
--- trunk/media/wiki/Windstille.wiki	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/Windstille.wiki	2009-03-02 19:09:41 UTC (rev 2534)
@@ -15,6 +15,7 @@
 * [[Coding style]]
 * [[Particles]]
 * [[Navigation Mesh]]
+* [[Dialog]]
 * [[Scripting]]
 * [[Drawing Model]]
 * [[Drawing Primitives]]

Modified: trunk/media/wiki/default.css
===================================================================
--- trunk/media/wiki/default.css	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/default.css	2009-03-02 19:09:41 UTC (rev 2534)
@@ -47,6 +47,7 @@
 
 img.thumbnail { 
   border-style: none;
+  padding: 0.25em;
   float: right;
   clear: right;
 }

Added: trunk/media/wiki/images/dialog_new.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/images/dialog_new.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Added: trunk/media/wiki/images/dialog_old1.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/images/dialog_old1.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Added: trunk/media/wiki/images/dialog_old2.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/images/dialog_old2.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Modified: trunk/media/wiki/template.xml
===================================================================
--- trunk/media/wiki/template.xml	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/template.xml	2009-03-02 19:09:41 UTC (rev 2534)
@@ -24,6 +24,7 @@
       <a href="About.html">About</a>
       <div style="clear: both;" />
     </div>
+
     <div id="body">
       <h1>${title}</h1>
       ${body}

Added: trunk/media/wiki/thumbnail.sh
===================================================================
--- trunk/media/wiki/thumbnail.sh	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/thumbnail.sh	2009-03-02 19:09:41 UTC (rev 2534)
@@ -0,0 +1,8 @@
+#!/bin/sh
+
+for i in "$@"; do
+    echo "Thumbnailing $i"
+    convert -scale 200x200 -quality 85% "$i" "thumbnails/$(basename "$i")"
+done
+
+# EOF #


Property changes on: trunk/media/wiki/thumbnail.sh
___________________________________________________________________
Name: svn:executable
   + *

Added: trunk/media/wiki/thumbnails/dialog_new.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/thumbnails/dialog_new.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Added: trunk/media/wiki/thumbnails/dialog_old1.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/thumbnails/dialog_old1.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Added: trunk/media/wiki/thumbnails/dialog_old2.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/thumbnails/dialog_old2.jpg
___________________________________________________________________
Name: svn:mime-type
   + image/jpeg

Modified: trunk/media/wiki/wiki2html.py
===================================================================
--- trunk/media/wiki/wiki2html.py	2009-03-02 14:44:58 UTC (rev 2533)
+++ trunk/media/wiki/wiki2html.py	2009-03-02 19:09:41 UTC (rev 2534)
@@ -46,6 +46,7 @@
              'Coding style',
              'Particles',
              'Navigation Mesh',
+             'Dialog',
              'Scripting',
              'Drawing Model',
              'Drawing Primitives',



From grumbel at mail.berlios.de  Tue Mar  3 11:27:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 11:27:41 +0100
Subject: [Windstille-commit] r2535 - in trunk/windstille/src: . hud screen
Message-ID: <200903031027.n23ARfHA018579@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 11:27:41 +0100 (Tue, 03 Mar 2009)
New Revision: 2535

Removed:
   trunk/windstille/src/hud/energy_bar.cpp
   trunk/windstille/src/hud/energy_bar.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/screen/game_session.cpp
Log:
Removed EnergyBar

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-02 19:09:41 UTC (rev 2534)
+++ trunk/windstille/src/SConscript	2009-03-03 10:27:41 UTC (rev 2535)
@@ -95,7 +95,6 @@
 'hud/controller_help_window.cpp',
 'hud/conversation.cpp',
 'hud/dialog_manager.cpp',
-'hud/energy_bar.cpp',
 'hud/inventory.cpp',
 'hud/pda.cpp',
 'input/controller.cpp',

Deleted: trunk/windstille/src/hud/energy_bar.cpp
===================================================================
--- trunk/windstille/src/hud/energy_bar.cpp	2009-03-02 19:09:41 UTC (rev 2534)
+++ trunk/windstille/src/hud/energy_bar.cpp	2009-03-03 10:27:41 UTC (rev 2535)
@@ -1,60 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "app/globals.hpp"
-#include "objects/player.hpp"
-#include "energy_bar.hpp"
-
-EnergyBar::EnergyBar()
-  : bar("images/energy_bar.sprite")
-{
-}
-
-EnergyBar::~EnergyBar()
-{
-}
-  
-void
-EnergyBar::draw()
-{
-  int energy     = Player::current()->get_energy();
-  int max_energy = Player::current()->get_max_energy();
-
-  for(int i = 0; i < energy; ++i)
-    {
-      float red   = 1.0f;
-      float green = (i/float(max_energy));
-      Sprite sprite = bar;
-      sprite.set_color(Color(red, green, 0, 1.0f));
-      sprite.draw(Vector2f(15 + (i * 10), 15));
-    }
-
-  for(int i = energy; i < max_energy; ++i)
-    {
-      bar.set_color(Color(.5f, .5f, .5f, .5f));
-      bar.draw(Vector2f(15 + (i * 10), 15));
-    }
-}
-
-void
-EnergyBar::update(float delta, const Controller& )
-{
-  bar.update(delta);
-}
-
-/* EOF */

Deleted: trunk/windstille/src/hud/energy_bar.hpp
===================================================================
--- trunk/windstille/src/hud/energy_bar.hpp	2009-03-02 19:09:41 UTC (rev 2534)
+++ trunk/windstille/src/hud/energy_bar.hpp	2009-03-03 10:27:41 UTC (rev 2535)
@@ -1,43 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_HUD_ENERGY_BAR_HPP
-#define HEADER_WINDSTILLE_HUD_ENERGY_BAR_HPP
-
-#include "screen/screen.hpp"
-#include "sprite2d/sprite.hpp"
-
-/** */
-class EnergyBar : public Screen
-{
-private:
-  Sprite bar;
-public:
-  EnergyBar();
-  ~EnergyBar();
-  
-  void draw();
-  void update(float delta, const Controller& controller);
-private:
-  EnergyBar (const EnergyBar&);
-  EnergyBar& operator= (const EnergyBar&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-02 19:09:41 UTC (rev 2534)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-03 10:27:41 UTC (rev 2535)
@@ -33,7 +33,6 @@
 #include "tile/tile_map.hpp"
 #include "screen_manager.hpp"
 #include "view.hpp"
-#include "hud/energy_bar.hpp"
 #include "hud/dialog_manager.hpp"
 #include "app/windstille_main.hpp"
 #include "display/scene_context.hpp"
@@ -87,7 +86,6 @@
 
   // GUI Elements
   ControllerHelpWindow controller_help_window;
-  EnergyBar     energy_bar;
 
   // Active GUI Elements
   DialogManager dialog_manager;
@@ -145,7 +143,6 @@
   if (!cutscene_mode)
     {
       // Draw HUD
-      energy_bar.draw();
       controller_help_window.draw();
     }
 
@@ -252,7 +249,6 @@
           break;
 
         case RUNNING:
-          energy_bar.update(delta, controller);
           if (current_gui)
             current_gui->update(delta, controller);
           break;



From grumbel at mail.berlios.de  Tue Mar  3 11:32:18 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 11:32:18 +0100
Subject: [Windstille-commit] r2536 - in trunk/windstille/external/SQUIRREL2:
	include sqstdlib
Message-ID: <200903031032.n23AWIRe019345@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 11:32:18 +0100 (Tue, 03 Mar 2009)
New Revision: 2536

Modified:
   trunk/windstille/external/SQUIRREL2/include/sqstdio.h
   trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.cpp
   trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.h
Log:
Made Squirrel -Wall clean

Modified: trunk/windstille/external/SQUIRREL2/include/sqstdio.h
===================================================================
--- trunk/windstille/external/SQUIRREL2/include/sqstdio.h	2009-03-03 10:27:41 UTC (rev 2535)
+++ trunk/windstille/external/SQUIRREL2/include/sqstdio.h	2009-03-03 10:32:18 UTC (rev 2536)
@@ -7,6 +7,7 @@
 #define SQSTD_STREAM_TYPE_TAG 0x80000000
 
 struct SQStream {
+	virtual ~SQStream() {}
 	virtual SQInteger Read(void *buffer, SQInteger size) = 0;
 	virtual SQInteger Write(void *buffer, SQInteger size) = 0;
 	virtual SQInteger Flush() = 0;

Modified: trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.cpp
===================================================================
--- trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.cpp	2009-03-03 10:27:41 UTC (rev 2535)
+++ trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.cpp	2009-03-03 10:32:18 UTC (rev 2536)
@@ -277,7 +277,7 @@
 	sq_pop(v,1);
 }
 
-SQRESULT declare_stream(HSQUIRRELVM v,SQChar* name,SQUserPointer typetag,SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals)
+SQRESULT declare_stream(HSQUIRRELVM v,const SQChar* name,SQUserPointer typetag,const SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals)
 {
 	if(sq_gettype(v,-1) != OT_TABLE)
 		return sq_throwerror(v,_SC("table expected"));

Modified: trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.h
===================================================================
--- trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.h	2009-03-03 10:27:41 UTC (rev 2535)
+++ trunk/windstille/external/SQUIRREL2/sqstdlib/sqstdstream.h	2009-03-03 10:32:18 UTC (rev 2536)
@@ -14,5 +14,5 @@
 SQInteger _stream_flush(HSQUIRRELVM v);
 
 #define _DECL_STREAM_FUNC(name,nparams,typecheck) {_SC(#name),_stream_##name,nparams,typecheck}
-SQRESULT declare_stream(HSQUIRRELVM v,SQChar* name,SQUserPointer typetag,SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals);
+SQRESULT declare_stream(HSQUIRRELVM v,const SQChar* name,SQUserPointer typetag,const SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals);
 #endif /*_SQSTD_STREAM_H_*/



From grumbel at mail.berlios.de  Tue Mar  3 11:34:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 11:34:48 +0100
Subject: [Windstille-commit] r2537 - trunk/windstille/external
Message-ID: <200903031034.n23AYm1r019565@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 11:34:47 +0100 (Tue, 03 Mar 2009)
New Revision: 2537

Modified:
   trunk/windstille/external/README
Log:
Documented Squirrel changes

Modified: trunk/windstille/external/README
===================================================================
--- trunk/windstille/external/README	2009-03-03 10:32:18 UTC (rev 2536)
+++ trunk/windstille/external/README	2009-03-03 10:34:47 UTC (rev 2537)
@@ -1,7 +1,10 @@
 SQUIRREL2/ - http://squirrel-lang.org
     SQUIRREL2/ is a verbatim copy of the squirrel tarball, to update
-    it, just remove SQUIRREL2 and extract a new tarball.
+    it, just remove SQUIRREL2 and extract a new tarball. 
+    Some non-critical -Wall fixes where done, see:
 
+     % svn diff -r 2535:2536
+
 miniswig/ - Squirrel Wrapper Generator
     uses svn:externals should update automatically
 



From grumbel at mail.berlios.de  Tue Mar  3 11:56:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 11:56:51 +0100
Subject: [Windstille-commit] r2538 - in trunk/windstille/src: input lisp
	math navigation scripting
Message-ID: <200903031056.n23AupUg022509@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 11:56:50 +0100 (Tue, 03 Mar 2009)
New Revision: 2538

Modified:
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/lisp/parser.cpp
   trunk/windstille/src/math/matrix.cpp
   trunk/windstille/src/navigation/properties.hpp
   trunk/windstille/src/scripting/util.hpp
Log:
Did some -Wall -ansi -pedantic cleanup

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-03-03 10:34:47 UTC (rev 2537)
+++ trunk/windstille/src/input/wiimote.cpp	2009-03-03 10:56:50 UTC (rev 2538)
@@ -67,7 +67,7 @@
   assert(m_wiimote == 0);
 
   /* Connect to any wiimote */
-  bdaddr_t bdaddr = *BDADDR_ANY;
+  bdaddr_t bdaddr = {{0, 0, 0, 0, 0, 0}}; // BDADDR_ANY
 
   /* Connect to address in string WIIMOTE_BDADDR */
   /* str2ba(WIIMOTE_BDADDR, &bdaddr); */

Modified: trunk/windstille/src/lisp/parser.cpp
===================================================================
--- trunk/windstille/src/lisp/parser.cpp	2009-03-03 10:34:47 UTC (rev 2537)
+++ trunk/windstille/src/lisp/parser.cpp	2009-03-03 10:56:50 UTC (rev 2538)
@@ -64,15 +64,6 @@
   delete lexer;
 }
 
-static std::string dirname(std::string filename)
-{
-  std::string::size_type p = filename.find_last_of('/');
-  if(p == std::string::npos)
-    return "";
-
-  return filename.substr(0, p+1);
-}
-
 Lisp*
 Parser::parse(const std::string& filename)
 {

Modified: trunk/windstille/src/math/matrix.cpp
===================================================================
--- trunk/windstille/src/math/matrix.cpp	2009-03-03 10:34:47 UTC (rev 2537)
+++ trunk/windstille/src/math/matrix.cpp	2009-03-03 10:56:50 UTC (rev 2538)
@@ -231,8 +231,10 @@
   float det = determinat();
   if (det != 0)
     {
+      Matrix b;
+#if 0
       const Matrix& m = *this;
-      Matrix b;
+
       // FIXME: wrong start index, should be 0, is 1
       b(0,0) = m(2,2)*m(3,3)*m(4,4) + m(2,3)*m(3,4)*m(4,2) + m(2,4)*m(3,2)*m(4,3) - m(2,2)*m(3,4)*m(4,3) - m(2,3)*m(3,2)*m(4,4) - m(2,4)*m(3,3)*m(4,2);
       b(0,1) = m(1,2)*m(3,4)*m(4,3) + m(1,3)*m(3,2)*m(4,4) + m(1,4)*m(3,3)*m(4,2) - m(1,2)*m(3,3)*m(4,4) - m(1,3)*m(3,4)*m(4,2) - m(1,4)*m(3,2)*m(4,3);
@@ -253,7 +255,7 @@
       b(3,1) = m(1,1)*m(3,2)*m(4,3) + m(1,2)*m(3,3)*m(4,1) + m(1,3)*m(3,1)*m(4,2) - m(1,1)*m(3,3)*m(4,2) - m(1,2)*m(3,1)*m(4,3) - m(1,3)*m(3,2)*m(4,1);
       b(3,2) = m(1,1)*m(2,3)*m(4,2) + m(1,2)*m(2,1)*m(4,3) + m(1,3)*m(2,2)*m(4,1) - m(1,1)*m(2,2)*m(4,3) - m(1,2)*m(2,3)*m(4,1) - m(1,3)*m(2,1)*m(4,2);
       b(3,3) = m(1,1)*m(2,2)*m(3,3) + m(1,2)*m(2,3)*m(3,1) + m(1,3)*m(2,1)*m(3,2) - m(1,1)*m(2,3)*m(3,2) - m(1,2)*m(2,1)*m(3,3) - m(1,3)*m(2,2)*m(3,1);
-
+#endif
       return b;
     }
   else
@@ -266,15 +268,15 @@
 Matrix::determinat() const
 {
   const Matrix& m = *this;
-  return  // fixme: all wrong, need to -1 everything!
-    m(1,1)*m(2,2)*m(3,3)*m(4,4) + m(1,1)*m(2,3)*m(3,4)*m(4,2) + m(1,1)*m(2,4)*m(3,2)*m(4,3) +
-    m(1,2)*m(2,1)*m(3,4)*m(4,3) + m(1,2)*m(2,3)*m(3,1)*m(4,4) + m(1,2)*m(2,4)*m(3,3)*m(4,1) +
-    m(1,3)*m(2,1)*m(3,2)*m(4,4) + m(1,3)*m(2,2)*m(3,4)*m(4,1) + m(1,3)*m(2,4)*m(3,1)*m(4,2) +
-    m(1,4)*m(2,1)*m(3,3)*m(4,2) + m(1,4)*m(2,2)*m(3,1)*m(4,3) + m(1,4)*m(2,3)*m(3,2)*m(4,1) -
-    m(1,1)*m(2,2)*m(3,4)*m(4,3) - m(1,1)*m(2,3)*m(3,2)*m(4,4) - m(1,1)*m(2,4)*m(3,3)*m(4,2) -
-    m(1,2)*m(2,1)*m(3,3)*m(4,4) - m(1,2)*m(2,3)*m(3,4)*m(4,1) - m(1,2)*m(2,4)*m(3,1)*m(4,3) -
-    m(1,3)*m(2,1)*m(3,4)*m(4,2) - m(1,3)*m(2,2)*m(3,1)*m(4,4) - m(1,3)*m(2,4)*m(3,2)*m(4,1) -
-    m(1,4)*m(2,1)*m(3,2)*m(4,3) - m(1,4)*m(2,2)*m(3,3)*m(4,1) - m(1,4)*m(2,3)*m(3,1)*m(4,2);
+  return
+    m(0,0)*m(1,1)*m(2,2)*m(3,3) + m(0,0)*m(1,2)*m(2,3)*m(3,1) + m(0,0)*m(1,3)*m(2,1)*m(3,2) +
+    m(0,1)*m(1,0)*m(2,3)*m(3,2) + m(0,1)*m(1,2)*m(2,0)*m(3,3) + m(0,1)*m(1,3)*m(2,2)*m(3,0) +
+    m(0,2)*m(1,0)*m(2,1)*m(3,3) + m(0,2)*m(1,1)*m(2,3)*m(3,0) + m(0,2)*m(1,3)*m(2,0)*m(3,1) +
+    m(0,3)*m(1,0)*m(2,2)*m(3,1) + m(0,3)*m(1,1)*m(2,0)*m(3,2) + m(0,3)*m(1,2)*m(2,1)*m(3,0) -
+    m(0,0)*m(1,1)*m(2,3)*m(3,2) - m(0,0)*m(1,2)*m(2,1)*m(3,3) - m(0,0)*m(1,3)*m(2,2)*m(3,1) -
+    m(0,1)*m(1,0)*m(2,2)*m(3,3) - m(0,1)*m(1,2)*m(2,3)*m(3,0) - m(0,1)*m(1,3)*m(2,0)*m(3,2) -
+    m(0,2)*m(1,0)*m(2,3)*m(3,1) - m(0,2)*m(1,1)*m(2,0)*m(3,3) - m(0,2)*m(1,3)*m(2,1)*m(3,0) -
+    m(0,3)*m(1,0)*m(2,1)*m(3,2) - m(0,3)*m(1,1)*m(2,2)*m(3,0) - m(0,3)*m(1,2)*m(2,0)*m(3,1);
 }
 
 Matrix

Modified: trunk/windstille/src/navigation/properties.hpp
===================================================================
--- trunk/windstille/src/navigation/properties.hpp	2009-03-03 10:34:47 UTC (rev 2537)
+++ trunk/windstille/src/navigation/properties.hpp	2009-03-03 10:56:50 UTC (rev 2538)
@@ -25,7 +25,7 @@
   WALKABLE = (1<<0),
   WALL     = (1<<1),
   LADDER   = (1<<2),
-  STAIRS   = (1<<2),
+  STAIRS   = (1<<2)
 };
 
 typedef uint32_t Properties;

Modified: trunk/windstille/src/scripting/util.hpp
===================================================================
--- trunk/windstille/src/scripting/util.hpp	2009-03-03 10:34:47 UTC (rev 2537)
+++ trunk/windstille/src/scripting/util.hpp	2009-03-03 10:56:50 UTC (rev 2538)
@@ -25,7 +25,7 @@
 namespace lisp {
 class Writer;
 class Lisp;
-};
+} // namespace lisp
 
 namespace Scripting {
 



From grumbel at mail.berlios.de  Tue Mar  3 13:31:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 13:31:03 +0100
Subject: [Windstille-commit] r2539 - in trunk/windstille/src: . hud screen
	scripting
Message-ID: <200903031231.n23CV3Dt029245@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 13:31:02 +0100 (Tue, 03 Mar 2009)
New Revision: 2539

Added:
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/hud/speech_manager.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Added SpeechManager

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/SConscript	2009-03-03 12:31:02 UTC (rev 2539)
@@ -97,6 +97,7 @@
 'hud/dialog_manager.cpp',
 'hud/inventory.cpp',
 'hud/pda.cpp',
+'hud/speech_manager.cpp',
 'input/controller.cpp',
 'input/controller_description.cpp',
 'input/input_configurator.cpp',

Added: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-03-03 12:31:02 UTC (rev 2539)
@@ -0,0 +1,74 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "font/fonts.hpp"
+#include "speech_manager.hpp"
+
+SpeechManager* SpeechManager::current_ = 0;
+
+void 
+SpeechManager::Speech::draw()
+{
+  Fonts::vera20->draw(pos, text, color);
+}
+
+void
+SpeechManager::Speech::update(float delta)
+{
+}
+
+SpeechManager::SpeechManager()
+{
+  assert(current_ == 0);
+  current_ = this;
+
+  add("Hello World", Vector2f(320, 200));
+}
+
+SpeechManager::~SpeechManager()
+{
+  for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
+    delete *i;
+  speeches.clear();
+}
+
+void
+SpeechManager::add(const std::string& text, const Vector2f& pos, const Color& color)
+{
+  speeches.push_back(new Speech(text, pos, color));
+}
+
+void
+SpeechManager::draw()
+{
+  for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
+    {
+      (*i)->draw();
+    }  
+}
+
+void
+SpeechManager::update(float delta, const Controller& controller)
+{
+  for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
+    {
+      (*i)->update(delta);
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/hud/speech_manager.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/hud/speech_manager.hpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.hpp	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/hud/speech_manager.hpp	2009-03-03 12:31:02 UTC (rev 2539)
@@ -0,0 +1,76 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_HUD_SPEECH_MANAGER_HPP
+#define HEADER_WINDSTILLE_HUD_SPEECH_MANAGER_HPP
+
+#include <string>
+#include <vector>
+#include "screen/screen.hpp"
+#include "math/vector2f.hpp"
+#include "display/color.hpp"
+
+class Entity;
+
+/** The SpeechManager displays speech text over characters or
+    objects, similar to what you see in LucasArts games */
+class SpeechManager : public Screen
+{
+private:
+  static SpeechManager* current_;
+public:
+  static SpeechManager* current() { return current_; }
+
+private:
+  class Speech 
+  {
+  public:
+    std::string text;
+    Vector2f    pos;
+    Color       color;
+
+    Speech(const std::string& text, const Vector2f& pos, const Color& color)
+      : text(text),
+        pos(pos),
+        color(color)
+    {}
+    
+    void draw();
+    void update(float delta);
+  };
+
+  typedef std::vector<Speech*> Speeches;
+  Speeches speeches;
+
+public:
+  SpeechManager();
+  ~SpeechManager();
+
+  void add(const std::string& text, const Vector2f& pos, const Color& color = Color(1.0f, 1.0f, 1.0f));
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+private:
+  SpeechManager (const SpeechManager&);
+  SpeechManager& operator= (const SpeechManager&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/hud/speech_manager.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-03 12:31:02 UTC (rev 2539)
@@ -34,6 +34,7 @@
 #include "screen_manager.hpp"
 #include "view.hpp"
 #include "hud/dialog_manager.hpp"
+#include "hud/speech_manager.hpp"
 #include "app/windstille_main.hpp"
 #include "display/scene_context.hpp"
 #include "scripting/util.hpp"
@@ -86,6 +87,7 @@
 
   // GUI Elements
   ControllerHelpWindow controller_help_window;
+  SpeechManager speech_manager;
 
   // Active GUI Elements
   DialogManager dialog_manager;
@@ -104,6 +106,7 @@
     fadeout_value  = 0.0f;
     fade_time      = 1.0f;
   }
+
   ~GameSessionImpl() {
   }
 
@@ -165,6 +168,8 @@
                          Color(fade_color.r, fade_color.g, fade_color.b, fadeout_value));
     }
 
+  speech_manager.draw();
+
   if (pause)
     {
       if ((SDL_GetTicks() / 1000) % 2)
@@ -175,6 +180,7 @@
 void
 GameSessionImpl::update(float delta, const Controller& controller)
 {  
+  // Cutscene stuff (black bars that fade-in/out
   if (cutscene_mode)
     cutscene_value += delta * 0.75f;
   else
@@ -189,7 +195,8 @@
   // pause = !pause;
 
   Uint8 *keystate = SDL_GetKeyState(NULL);
-
+  
+  // Hacks to play around with the game speed
   if(keystate[SDLK_KP1])
     game_speed *= 1.0 - delta;
   if(keystate[SDLK_KP3])
@@ -199,6 +206,7 @@
  
   delta *= game_speed;
 
+  // Update the game
   if (!pause)
     {
       game_time += delta;
@@ -255,8 +263,10 @@
         }
       
       controller_help_window.update(delta, controller);
+      speech_manager.update(delta, controller);
     }
 
+  // Handle key presses
   if (controller.button_was_pressed(PDA_BUTTON))
     {
       if (current_gui == &pda)

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-03 12:31:02 UTC (rev 2539)
@@ -23,6 +23,7 @@
 #include "sound/sound_manager.hpp"
 #include "screen/game_session.hpp"
 #include "hud/dialog_manager.hpp"
+#include "hud/speech_manager.hpp"
 #include "hud/conversation.hpp"
 #include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
@@ -142,6 +143,11 @@
   script_manager->set_wakeup_event(vm, ScriptManager::FADE_DONE);
 }
 
+void speech_show(const std::string& text, float x, float y)
+{
+  SpeechManager::current()->add(text, Vector2f(x, y));
+}
+
 void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text)
 {
   DialogManager::current()->add_dialog(alignment, portrait, text);

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-03 12:31:02 UTC (rev 2539)
@@ -56,6 +56,8 @@
 static const int TOP     = 0x10;
 static const int BOTTOM  = 0x20;
 
+void speech_show(const std::string& text, float x, float y);
+
 void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text);
 void wait_for_dialog(HSQUIRRELVM vm) __suspend;
 void wait_for_fade(HSQUIRRELVM vm) __suspend;

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-03 10:56:50 UTC (rev 2538)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-03 12:31:02 UTC (rev 2539)
@@ -774,6 +774,39 @@
 
 }
 
+static SQInteger speech_show_wrapper(HSQUIRRELVM vm)
+{
+  const SQChar* arg0;
+  if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
+    sq_throwerror(vm, _SC("Argument 1 not a string"));
+    return SQ_ERROR;
+  }
+  SQFloat arg1;
+  if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
+    sq_throwerror(vm, _SC("Argument 2 not a float"));
+    return SQ_ERROR;
+  }
+  SQFloat arg2;
+  if(SQ_FAILED(sq_getfloat(vm, 4, &arg2))) {
+    sq_throwerror(vm, _SC("Argument 3 not a float"));
+    return SQ_ERROR;
+  }
+
+  try {
+    Scripting::speech_show(arg0, static_cast<float> (arg1), static_cast<float> (arg2));
+
+    return 0;
+
+  } catch(std::exception& e) {
+    sq_throwerror(vm, e.what());
+    return SQ_ERROR;
+  } catch(...) {
+    sq_throwerror(vm, _SC("Unexpected exception while executing function 'speech_show'"));
+    return SQ_ERROR;
+  }
+
+}
+
 static SQInteger dialog_show_wrapper(HSQUIRRELVM vm)
 {
   SQInteger arg0;
@@ -1765,6 +1798,12 @@
     throw SquirrelError(v, "Couldn't register function 'set_controller_help_active'");
   }
 
+  sq_pushstring(v, "speech_show", -1);
+  sq_newclosure(v, &speech_show_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'speech_show'");
+  }
+
   sq_pushstring(v, "dialog_show", -1);
   sq_newclosure(v, &dialog_show_wrapper, 0);
   if(SQ_FAILED(sq_createslot(v, -3))) {



From grumbel at mail.berlios.de  Tue Mar  3 13:41:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 13:41:37 +0100
Subject: [Windstille-commit] r2540 - trunk/windstille/src/font
Message-ID: <200903031241.n23Cfbxm009651@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 13:41:36 +0100 (Tue, 03 Mar 2009)
New Revision: 2540

Modified:
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/border_font_effect.hpp
   trunk/windstille/src/font/font_effect.hpp
   trunk/windstille/src/font/no_font_effect.hpp
   trunk/windstille/src/font/ttf_font.cpp
Log:
Fixed offset handling in BorderEffect, so that fonts with and without border land at the exact same position

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-03-03 12:31:02 UTC (rev 2539)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-03-03 12:41:36 UTC (rev 2540)
@@ -46,6 +46,18 @@
   return orig_glyph_height + 2*size;
 }
   
+int
+BorderFontEffect::get_x_offset(int orig_glyph_offset) const
+{
+  return orig_glyph_offset - size;
+}
+
+int
+BorderFontEffect::get_y_offset(int orig_glyph_offset) const
+{
+  return orig_glyph_offset - size;
+}
+
 void
 BorderFontEffect::blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const
 {

Modified: trunk/windstille/src/font/border_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.hpp	2009-03-03 12:31:02 UTC (rev 2539)
+++ trunk/windstille/src/font/border_font_effect.hpp	2009-03-03 12:41:36 UTC (rev 2540)
@@ -34,6 +34,9 @@
   
   int get_glyph_width(int orig_glyph_width) const;
   int get_glyph_height(int orig_glyph_height) const;
+
+  int get_x_offset(int orig_glyph_offset) const;
+  int get_y_offset(int orig_glyph_offset) const;
   
   void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
 

Modified: trunk/windstille/src/font/font_effect.hpp
===================================================================
--- trunk/windstille/src/font/font_effect.hpp	2009-03-03 12:31:02 UTC (rev 2539)
+++ trunk/windstille/src/font/font_effect.hpp	2009-03-03 12:41:36 UTC (rev 2540)
@@ -42,6 +42,9 @@
   virtual int get_glyph_width(int orig_glyph_width) const =0;
   virtual int get_glyph_height(int orig_glyph_height) const =0;
 
+  virtual int get_x_offset(int orig_glyph_offset) const =0;
+  virtual int get_y_offset(int orig_glyph_offset) const =0;
+  
   virtual void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const =0;
 
 private:

Modified: trunk/windstille/src/font/no_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.hpp	2009-03-03 12:31:02 UTC (rev 2539)
+++ trunk/windstille/src/font/no_font_effect.hpp	2009-03-03 12:41:36 UTC (rev 2540)
@@ -32,6 +32,9 @@
   
   int get_glyph_width(int orig_glyph_width) const   { return orig_glyph_width; }
   int get_glyph_height(int orig_glyph_height) const { return orig_glyph_height; }
+
+  int get_x_offset(int orig_glyph_offset) const { return orig_glyph_offset; }
+  int get_y_offset(int orig_glyph_offset) const { return orig_glyph_offset; }
   
   void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
   

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-03-03 12:31:02 UTC (rev 2539)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-03-03 12:41:36 UTC (rev 2540)
@@ -55,10 +55,6 @@
   /** The original size of the font in pixels */
   int size;
 
-  /** The amount of pixels to advance in y direction after a finished
-      line, this can be transformed by FontEffect */
-  int height;
-
   /** OpenGL Texture which holds all the characters */
   Texture texture;
 };
@@ -95,7 +91,7 @@
   int x_pos = 1;
   int y_pos = 1;
 
-  impl->height = effect.get_height(impl->size);
+  int max_glyph_height = effect.get_height(impl->size);
 
   // We limit ourself to 256 characters for the momemnt
   for(int glyph_index = 0; glyph_index < 256; glyph_index += 1)
@@ -114,7 +110,8 @@
 
           generate_border(pixelbuffer, x_pos, y_pos, glyph_width, glyph_height);
 
-          Rect pos(Point(face->glyph->bitmap_left,  -face->glyph->bitmap_top), 
+          Rect pos(Point(effect.get_x_offset(face->glyph->bitmap_left),
+                         effect.get_y_offset(-face->glyph->bitmap_top)),
                    Size(glyph_width, glyph_height));
 
           Rectf uv(x_pos/float(pixelbuffer->w),
@@ -127,13 +124,13 @@
 
           // we leave a one pixel border around the letters which we fill with generate_border
           x_pos += glyph_width + 2;
-          if (x_pos + impl->height + 2 > pixelbuffer->w)
+          if (x_pos + max_glyph_height + 2 > pixelbuffer->w)
             {
-              y_pos += impl->height + 2;
+              y_pos += max_glyph_height + 2;
               x_pos = 1;
             }
 
-          if (y_pos + impl->height + 2 > pixelbuffer->h)
+          if (y_pos + max_glyph_height + 2 > pixelbuffer->h)
             throw std::runtime_error("Font Texture to small");
         }
     }



From grumbel at mail.berlios.de  Tue Mar  3 13:57:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 13:57:12 +0100
Subject: [Windstille-commit] r2541 - trunk/windstille/src/font
Message-ID: <200903031257.n23CvCgH010969@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 13:57:11 +0100 (Tue, 03 Mar 2009)
New Revision: 2541

Modified:
   trunk/windstille/src/font/ttf_font.cpp
Log:
Read characters to create from an vector

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-03-03 12:41:36 UTC (rev 2540)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-03-03 12:57:11 UTC (rev 2541)
@@ -90,13 +90,23 @@
 
   int x_pos = 1;
   int y_pos = 1;
+  
+  // FIXME: Not really needed, instead we should sort the characters
+  // after glyph_height before rendering and then use the max_glyph_height for each row
+  int max_glyph_height = effect.get_height(impl->size); 
 
-  int max_glyph_height = effect.get_height(impl->size);
+  // List of characters we want in the final font
+  std::vector<uint32_t> characters;
+  for(int i = 0; i < 256; i += 1)
+    characters.push_back(i);
 
+  // FIXME: Insert code to sort characters after glyph height
+  // FIXME: Insert code that calculates the needed texture size
+
   // We limit ourself to 256 characters for the momemnt
-  for(int glyph_index = 0; glyph_index < 256; glyph_index += 1)
+  for(std::vector<uint32_t>::iterator i = characters.begin(); i != characters.end(); ++i)
     {
-      if (FT_Load_Char( face,  glyph_index, FT_LOAD_RENDER))
+      if (FT_Load_Char( face,  *i, FT_LOAD_RENDER))
         {
           // FIXME: What happens when character is not in font, should be handled more gentle
           throw std::runtime_error("couldn't load char");
@@ -124,7 +134,7 @@
 
           // we leave a one pixel border around the letters which we fill with generate_border
           x_pos += glyph_width + 2;
-          if (x_pos + max_glyph_height + 2 > pixelbuffer->w)
+          if (x_pos + max_glyph_height + 2 > pixelbuffer->w) // FIXME: should use glyph_width of the next glyph instead of max_glyph_height
             {
               y_pos += max_glyph_height + 2;
               x_pos = 1;



From grumbel at mail.berlios.de  Tue Mar  3 16:54:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 16:54:51 +0100
Subject: [Windstille-commit] r2542 - trunk/windstille/src/hud
Message-ID: <200903031554.n23Fspfd030461@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 16:54:51 +0100 (Tue, 03 Mar 2009)
New Revision: 2542

Modified:
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/hud/speech_manager.hpp
Log:
Added that Speech disappears after some time on the screen

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-03-03 12:57:11 UTC (rev 2541)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-03-03 15:54:51 UTC (rev 2542)
@@ -21,6 +21,14 @@
 
 SpeechManager* SpeechManager::current_ = 0;
 
+SpeechManager::Speech::Speech(const std::string& text, const Vector2f& pos, const Color& color)
+  : text(text),
+    pos(pos),
+    color(color),
+    seconds_passed(0.0f)
+{
+}
+
 void 
 SpeechManager::Speech::draw()
 {
@@ -30,14 +38,25 @@
 void
 SpeechManager::Speech::update(float delta)
 {
+  seconds_passed += delta;
 }
+
+bool
+SpeechManager::Speech::is_done() const
+{
+  float words = 1 + text.size() / 5.0f;
+  float words_per_minute = 150.0f;
+  float words_per_second = words_per_minute / 60.0f;
+  
+  return (seconds_passed * words_per_second) > words;
+}
 
 SpeechManager::SpeechManager()
 {
   assert(current_ == 0);
   current_ = this;
 
-  add("Hello World", Vector2f(320, 200));
+  add("Hello World", Vector2f(320, 200), Color(255, 255, 0));
 }
 
 SpeechManager::~SpeechManager()
@@ -58,7 +77,8 @@
 {
   for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
     {
-      (*i)->draw();
+      if (*i)
+        (*i)->draw();
     }  
 }
 
@@ -67,8 +87,21 @@
 {
   for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
     {
-      (*i)->update(delta);
+      if (*i)
+        (*i)->update(delta);
     }
+
+  for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
+    {  
+      if ((*i)->is_done())
+        {
+          delete *i;
+          *i = 0;
+        }
+    }
+
+  speeches.erase(std::remove(speeches.begin(), speeches.end(), (Speech*)0),
+                 speeches.end());
 }
 
 /* EOF */

Modified: trunk/windstille/src/hud/speech_manager.hpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.hpp	2009-03-03 12:57:11 UTC (rev 2541)
+++ trunk/windstille/src/hud/speech_manager.hpp	2009-03-03 15:54:51 UTC (rev 2542)
@@ -43,15 +43,14 @@
     std::string text;
     Vector2f    pos;
     Color       color;
+    float       seconds_passed;
+    float       wpm;
 
-    Speech(const std::string& text, const Vector2f& pos, const Color& color)
-      : text(text),
-        pos(pos),
-        color(color)
-    {}
+    Speech(const std::string& text, const Vector2f& pos, const Color& color);
     
     void draw();
     void update(float delta);
+    bool is_done() const;
   };
 
   typedef std::vector<Speech*> Speeches;



From grumbel at mail.berlios.de  Tue Mar  3 21:59:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 21:59:48 +0100
Subject: [Windstille-commit] r2543 - trunk/windstille/src/hud
Message-ID: <200903032059.n23Kxmrm009873@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 21:59:48 +0100 (Tue, 03 Mar 2009)
New Revision: 2543

Modified:
   trunk/windstille/src/hud/dialog_manager.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/hud/dialog_manager.hpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.hpp	2009-03-03 15:54:51 UTC (rev 2542)
+++ trunk/windstille/src/hud/dialog_manager.hpp	2009-03-03 20:59:48 UTC (rev 2543)
@@ -31,6 +31,12 @@
 class DialogManager : public Screen
 {
 private:
+  static DialogManager* current_;
+
+public:
+  static DialogManager* current() { return current_; }
+
+private:
   void create_text();
   
   Sprite portrait;
@@ -59,10 +65,7 @@
   static const int outer_border_x = 20;
   int outer_border_y;
 
-  static DialogManager* current_;
 public:
-  static DialogManager* current() { return current_; }
-
   DialogManager();
   ~DialogManager();
 



From grumbel at mail.berlios.de  Tue Mar  3 22:09:09 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 3 Mar 2009 22:09:09 +0100
Subject: [Windstille-commit] r2544 - trunk/media/wiki
Message-ID: <200903032109.n23L99ci013348@sheep.berlios.de>

Author: grumbel
Date: 2009-03-03 22:09:08 +0100 (Tue, 03 Mar 2009)
New Revision: 2544

Added:
   trunk/media/wiki/Sector.wiki
Modified:
   trunk/media/wiki/Dialog.wiki
   trunk/media/wiki/Windstille.wiki
   trunk/media/wiki/default.css
   trunk/media/wiki/wiki2html.py
Log:
Added <<class>> tag to link directly into doxygen documentation, fleshed out Dialog page some more, added SSector page

Modified: trunk/media/wiki/Dialog.wiki
===================================================================
--- trunk/media/wiki/Dialog.wiki	2009-03-03 20:59:48 UTC (rev 2543)
+++ trunk/media/wiki/Dialog.wiki	2009-03-03 21:09:08 UTC (rev 2544)
@@ -1,14 +1,16 @@
 <<thumbnail src="dialog_old1.jpg" title="Old Dialog System">>
 <<thumbnail src="dialog_old2.jpg" title="Old Dialog System - Answer">>
 
-The old dialog system was basically a JRPG like system, meaning you got a portrait and next to it some text. Answering to dialog was done by presenting a big wheel which contained the answers along with character thought at the bottom, this is basically the same thing as used by Dreamfall.
+The old dialog system (see <<class>>DialogManager<</class>> and <<class>>Conversation<</class>>) was basically a JRPG like system, meaning you got a portrait and next to it some text. Answering to dialog was done by presenting a big wheel which contained the answers along with character thought at the bottom, this is basically the same thing as used by Dreamfall.
 
-<<thumbnail src="dialog_new.jpg" title="New Dialog System">>
+<<thumbnail src="dialog_new.jpg" title="New Dialog System (mockup)">>
 
-The new dialog system will change a few things, the big blocking dialog window will be replaced with a slick LucasArts adventure style speech 'bubbles' right over the character. This will allow more flexibility, such as overlapping dialog or dialog that is spoken by NPCs in the background. It should also make it easier to add voice acting later on, if that ever happens.
+The new dialog system (see <<class>>SpeechManager<</class>>) will change a few things, the big blocking dialog window will be replaced with a slick LucasArts adventure style speech 'bubbles' right over the character. This will allow more flexibility, such as overlapping dialog or dialog that is spoken by NPCs in the background. It should also make it easier to add voice acting later on, if that ever happens.
 
-The choice wheel will basically stay, but become more Mass Effect like, meaning it will get much small and shown in a screens corner, instead of screen filling. It will also appear even before the last line of dialog is fully spoken, so the player can make his choices faster and keep the dialog running without interruption.
+The choice wheel (see <<class>>Conversation<</class>>) will basically stay, but become more Mass Effect like, meaning it will get much small and shown in a screens corner, instead of screen filling. It might also appear even before the last line of dialog is fully spoken, so the player can make his choices faster and keep the dialog running without interruption (might not make that much sense without voice acting). If the Dreamfall-like display of inner-monologue/thoughts stays in addition to the answer has yet to be decided, as it heavily depends on the nature and quality of dialog.
 
+In terms of story the dialog will follow more along the lines of adventure games instead of RPGs, i.e. no KOTOR-like good/neutral/evil answers, instead just harmless chat.
+
 Another thing to consider is that dialog thus basically turns into a branching cutscene, instead of a series of text boxes, thus it would be nice to formalize these cutscenes and turn them into sexpr data instead of squirrel script. Not sure if that is a good idea.
 
 == Scripting Syntax

Added: trunk/media/wiki/Sector.wiki
===================================================================
--- trunk/media/wiki/Sector.wiki	2009-03-03 20:59:48 UTC (rev 2543)
+++ trunk/media/wiki/Sector.wiki	2009-03-03 21:09:08 UTC (rev 2544)
@@ -0,0 +1,8 @@
+A Sector is a single room or scene.
+
+== File Layout
+
+Sectors are stored in {{{data/sectors/}}}, the main file is the {{{.wst}}} file, which defines the geometry and size of the sector. Scripts that are local shall be put in the same directory.
+
+* {{{data/sectors/{SECTORNAME}/{SECTORNAME}.wst}}}
+* {{{data/sectors/{SECTORNAME}/{SCRIPTNAME}.nut}}}

Modified: trunk/media/wiki/Windstille.wiki
===================================================================
--- trunk/media/wiki/Windstille.wiki	2009-03-03 20:59:48 UTC (rev 2543)
+++ trunk/media/wiki/Windstille.wiki	2009-03-03 21:09:08 UTC (rev 2544)
@@ -31,6 +31,7 @@
 
 == File Formats
 
+* [[Sector]]
 * [[Blender]]
 * [[BlenderToSprite3D]]
 * [[Sprite3D]]

Modified: trunk/media/wiki/default.css
===================================================================
--- trunk/media/wiki/default.css	2009-03-03 20:59:48 UTC (rev 2543)
+++ trunk/media/wiki/default.css	2009-03-03 21:09:08 UTC (rev 2544)
@@ -106,6 +106,10 @@
   margin-right: auto;
 }
 
+a.class { 
+  font-family: monospace;
+}
+
 pre {
   padding: 1em;
   border-style: solid;

Modified: trunk/media/wiki/wiki2html.py
===================================================================
--- trunk/media/wiki/wiki2html.py	2009-03-03 20:59:48 UTC (rev 2543)
+++ trunk/media/wiki/wiki2html.py	2009-03-03 21:09:08 UTC (rev 2544)
@@ -56,6 +56,7 @@
              'PDA',
              'Weapons',
              'Fighting',
+             'Sector',
              'Blender',
              'BlenderToSprite3D',
              'Sprite3D',
@@ -93,6 +94,12 @@
             else:
                 return None
 
+        elif name == "class":
+            if body:
+                return bldr.tag.a(body, class_='class', href="../docs/class" + body + ".html")
+            else:
+                return None
+
         elif name == "thumbnail":
             dict = parse_arg_string(arg_string)
             if not dict.has_key('src'):



From grumbel at mail.berlios.de  Wed Mar  4 14:41:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 14:41:19 +0100
Subject: [Windstille-commit] r2546 - in trunk/windstille/data: . scripts
Message-ID: <200903041341.n24DfJIS013384@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 14:41:18 +0100 (Wed, 04 Mar 2009)
New Revision: 2546

Removed:
   trunk/windstille/data/levels/
   trunk/windstille/data/scripts/apartment/
   trunk/windstille/data/scripts/newformat2/
Log:
Cleaned up empty directories



From grumbel at mail.berlios.de  Wed Mar  4 14:39:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 14:39:13 +0100
Subject: [Windstille-commit] r2545 - in trunk/windstille: data data/levels
	data/scripts/apartment data/scripts/newformat2 data/sectors
	data/sectors/apartment data/sectors/bluestone
	data/sectors/forest data/sectors/industrial
	data/sectors/intro data/sectors/newformat2
	data/sectors/virtualreality src/app src/engine src/objects
Message-ID: <200903041339.n24DdDeb013038@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 14:39:11 +0100 (Wed, 04 Mar 2009)
New Revision: 2545

Added:
   trunk/windstille/data/sectors/
   trunk/windstille/data/sectors/apartment/
   trunk/windstille/data/sectors/apartment/apartment.wst
   trunk/windstille/data/sectors/apartment/barrobot.nut
   trunk/windstille/data/sectors/apartment/init.nut
   trunk/windstille/data/sectors/apartment/yagor.nut
   trunk/windstille/data/sectors/bluestone/
   trunk/windstille/data/sectors/bluestone/bluestone.wst
   trunk/windstille/data/sectors/forest/
   trunk/windstille/data/sectors/forest/forest.wst
   trunk/windstille/data/sectors/industrial/
   trunk/windstille/data/sectors/industrial/industrial.wst
   trunk/windstille/data/sectors/intro/
   trunk/windstille/data/sectors/intro/intro.nut
   trunk/windstille/data/sectors/intro/intro.wst
   trunk/windstille/data/sectors/newformat2/
   trunk/windstille/data/sectors/newformat2/bob.nut
   trunk/windstille/data/sectors/newformat2/frank.nut
   trunk/windstille/data/sectors/newformat2/newformat2.nut
   trunk/windstille/data/sectors/newformat2/newformat2.wst
   trunk/windstille/data/sectors/virtualreality/
   trunk/windstille/data/sectors/virtualreality/virtualreality.wst
Removed:
   trunk/windstille/data/levels/apartment.wst
   trunk/windstille/data/levels/bluestone.wst
   trunk/windstille/data/levels/forest.wst
   trunk/windstille/data/levels/industrial.wst
   trunk/windstille/data/levels/intro.nut
   trunk/windstille/data/levels/intro.wst
   trunk/windstille/data/levels/newformat2.nut
   trunk/windstille/data/levels/newformat2.wst
   trunk/windstille/data/levels/virtualreality.wst
   trunk/windstille/data/scripts/apartment/barrobot.nut
   trunk/windstille/data/scripts/apartment/init.nut
   trunk/windstille/data/scripts/apartment/yagor.nut
   trunk/windstille/data/scripts/newformat2/bob.nut
   trunk/windstille/data/scripts/newformat2/frank.nut
Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
Log:
Moved level files to sectors/ and moved script files there too

Deleted: trunk/windstille/data/levels/apartment.wst
===================================================================
--- trunk/windstille/data/levels/apartment.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/apartment.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,233 +0,0 @@
-;; -*- scheme -*-
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 2)
-  (ambient-color .3 .3 .3)  (name   "")
-  (music  "")
-  (init-script "scripts/apartment/init.nut")
-  (objects
-  (tilemap (name "background") (width 100) (height 30) (z-pos -2000)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1766 1765 1766 1863 1864 1769 1770 1863 1864 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
-      1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1782 1781 1782 1879 1880 1785 1786 1879 1880 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
-      1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1773 1774 1773 1773 1798 1801 1802 1895 1896 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
-      1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1771 1773 1773 1771 1814 1817 1818 1911 1912 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
-      1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1771 1773 1773 1771 1830 1833 1834 1927 1928 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
-      1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1771 1773 1773 1771 1846 1849 1850 1943 1944 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1861 1862 1767 1768 1865 1866 1765 1766 1861 1862 1769 1863 1864 1864 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1865 1866 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 
-      1877 1878 1783 1784 1881 1882 1781 1782 1877 1878 1785 1879 1880 1880 1773 1773 1773 1773 1773 1773 1879 1880 1785 1786 1881 1882 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 
-      1893 1894 1799 1800 1897 1898 1797 1798 1893 1894 1801 1895 1896 1896 1773 1774 1773 1773 1773 1773 1895 1896 1801 1802 1897 1898 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 
-      1909 1910 1815 1816 1913 1914 1813 1814 1909 1910 1817 1911 1912 1912 1771 1773 1773 1771 1773 1773 1911 1912 1817 1818 1913 1914 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 
-      1925 1926 1831 1832 1929 1930 1829 1830 1925 1926 1833 1927 1928 1928 1771 1773 1773 1771 1822 1773 1927 1928 1833 1834 1929 1930 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 
-      1941 1942 1847 1848 1945 1946 1845 1846 1941 1942 1849 1943 1944 1944 1771 1773 1773 1771 1773 1773 1943 1944 1849 1850 1945 1946 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
-      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
-      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
-      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
-      1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
-      1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
-      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
-      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
-      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
-     ))
-  (tilemap (name "interactivebackground") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1651 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1667 1668 1699 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1652 1683 1684 1715 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1700 1731 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1715 1716 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1715 1716 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1699 1715 1716 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 0 0 1651 1667 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 1651 1652 1683 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1667 1668 1699 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1652 1683 1684 1715 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1700 1731 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1715 1716 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1715 1716 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1699 1715 1716 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
-    (data
-      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1671 1676 1671 1672 1673 1674 
-      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
-      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1658 1659 1660 1655 1656 1657 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1674 1675 1676 1671 1672 1673 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
-      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
-      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
-      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
-      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
-      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
-     ))
-    (scriptable-object
-      (sprite "images/objects/plant.sprite")
-      (pos 650 160)
-      (z-pos -100)
-    )
-    (scriptable-object
-      (sprite "images/objects/plant.sprite")
-      (pos 210 160)
-      (z-pos -100)
-    )
-    (scriptable-object
-      (sprite "images/objects/cabinet.sprite")
-      (pos 700 148)
-      (z-pos -100)
-    )
-    (scriptable-object
-      (sprite "images/objects/cabinet.sprite")
-      (pos 764 148)
-      (z-pos -100)
-    )
-    (scriptable-object
-      (sprite "images/objects/cabinet.sprite")
-      (pos 828 148)
-      (z-pos -100)
-    )
-    (scriptable-object
-      (sprite "images/objects/showerdoors.sprite")
-      (pos 919 120)
-      (z-pos -100)
-    )
-    (scriptable-object
-      (sprite "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light "images/objects/apartmentlamp_light.sprite")
-      (pos 1280 64)
-    )
-    (scriptable-object
-      (sprite "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light "images/objects/apartmentlamp_light.sprite")
-      (pos 768 64)
-    )
-    (scriptable-object
-      (sprite "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light "images/objects/apartmentlamp_light.sprite")
-      (pos 256 64)
-    )
-    (scriptable-object
-      (name "Painting1")
-      (pos 72 135)
-      (z-pos -100)
-      (sprite "images/objects/painting1.sprite")
-      (active true)
-      (script "")
-      (use-verb "Look")
-    )
-    (scriptable-object
-      (name "Painting1")
-      (pos 72 135)
-      (z-pos -100)
-      (sprite "images/objects/painting1.sprite")
-      (active true)
-      (script "")
-      (use-verb "Look")
-    )
-    (scriptable-object
-      (name "Painting2")
-      (pos 336 125)
-      (z-pos -100)
-      (sprite "images/objects/painting2.sprite")
-      (active true)
-      (script "")
-      (use-verb "Look")
-    )
-    (scriptable-object
-      (name "Painting3")
-      (pos 563 131)
-      (z-pos -100)
-      (sprite "images/objects/painting3.sprite")
-      (active true)
-      (script "")
-      (use-verb "Look")
-    )
-    (character
-      (name "bob")
-      (pos 320 544)
-      (z-pos -1050)
-      (sprite3d "models/vehicles/train/train.wsprite")
-    )
-    (character
-      (name "yagor")
-      (pos 180 256)
-      (z-pos -150)
-      (sprite3d "models/characters/yagor/yagor.wsprite")
-    )
-
-    (character
-      (name "barrobot")
-      (pos 370 256)
-      (z-pos -450)
-      (sprite3d "models/characters/yagor/yagor.wsprite")
-    )
-
-    (scriptable-object
-      (name "Barrobot2")
-      (pos 470 177)
-      (z-pos -100)
-      (sprite  "models/objects/barrobot/barrobotsprite.sprite")
-      (active true)
-      (script "barrobot")
-      (use-verb "Look")
-    )
-    
-    (scriptable-object      
-     (name "flashlight")
-     (active #f)
-     (light  "images/flashlightlight.sprite")
-     (highlight "images/flashlighthighlight.sprite")
-     (pos -40 -80)
-     )
-
-   )
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/levels/bluestone.wst
===================================================================
--- trunk/windstille/data/levels/bluestone.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/bluestone.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,110 +0,0 @@
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 2)
-  (name   "")
-  (music  "")
-  (ambient-color .2 .2 .4)
-  (objects
-  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
-    (data
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 120)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1093 1094 1133 1134 1135 1136 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1099 1100 0 0 0 0 1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 1061 1062 
-      1109 1110 1149 1150 1151 1152 1113 1114 1113 1114 1111 1112 1113 1114 1149 1150 1151 1152 1113 1114 1115 1116 0 0 0 0 1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 1077 1078 
-      1125 1126 1165 1166 1167 1168 1129 1130 1129 1130 1127 1128 1129 1130 1165 1166 1167 1168 1129 1130 1131 1132 0 0 0 0 1093 1094 1133 1134 1135 1136 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1099 1100 0 0 0 0 1157 1158 1159 1160 1161 1162 1071 1072 1095 1096 1097 1098 1095 1096 1097 1098 1097 1098 1069 1070 1163 1164 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 1061 1062 1103 1104 
-      1141 1142 1181 1182 1183 1184 1145 1146 1145 1146 1143 1144 1145 1146 1181 1182 1183 1184 1145 1146 1147 1148 0 0 0 0 1109 1110 1149 1150 1151 1152 1113 1114 1113 1114 1111 1112 1113 1114 1149 1150 1151 1152 1113 1114 1115 1116 0 0 0 0 1173 1174 1175 1176 1177 1178 1087 1088 1111 1112 1113 1114 1111 1112 1113 1114 1113 1114 1085 1086 1179 1180 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 1077 1078 1119 1120 
-      1157 1158 1159 1160 1161 1162 1161 1162 1161 1162 1159 1160 1161 1162 1159 1160 1161 1162 1161 1162 1163 1164 0 0 0 0 1125 1126 1165 1166 1167 1168 1129 1130 1129 1130 1127 1128 1129 1130 1165 1166 1167 1168 1129 1130 1131 1132 0 0 0 0 0 0 0 0 0 0 1157 1158 1071 1072 1095 1096 1097 1098 1097 1098 1069 1070 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1093 1094 1095 1096 
-      1173 1174 1175 1176 1177 1178 1177 1178 1177 1178 1175 1176 1177 1178 1175 1176 1177 1178 1177 1178 1179 1180 0 0 0 0 1141 1142 1181 1182 1183 1184 1145 1146 1145 1146 1143 1144 1145 1146 1181 1182 1183 1184 1145 1146 1147 1148 0 0 0 0 0 0 0 0 0 0 1173 1174 1087 1088 1111 1112 1113 1114 1113 1114 1085 1086 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1109 1110 1111 1112 
-      1067 1068 0 1067 1068 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1161 1162 1161 1162 1159 1160 1161 1162 1159 1160 1161 1162 1161 1162 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1161 1162 1163 1164 1180 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 1093 1094 1097 1098 
-      1083 1084 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1177 1178 1177 1178 1175 1176 1177 1178 1175 1176 1177 1178 1177 1178 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1177 1178 1179 1180 1180 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 1109 1110 1113 1114 
-      1101 1102 1067 1068 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 1125 1126 1129 1130 
-      1117 1118 1083 1084 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 1141 1142 1145 1146 
-      1097 1098 1101 1102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1061 1062 1063 1064 1065 1066 1103 1104 1095 1096 
-      1113 1114 1117 1118 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1077 1078 1079 1080 1081 1082 1119 1120 1111 1112 
-      1095 1096 1097 1098 1101 1102 1063 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1093 1094 1095 1096 1097 1098 1095 1096 1097 1098 
-      1111 1112 1113 1114 1117 1118 1079 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1109 1110 1111 1112 1113 1114 1111 1112 1113 1114 
-      1095 1096 1097 1098 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1101 1102 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1063 1064 1065 1066 1063 1064 1065 1066 1103 1104 1127 1128 1129 1130 1095 1096 1097 1098 
-      1111 1112 1113 1114 1113 1114 1113 1114 1111 1112 1113 1114 1149 1150 1151 1152 1113 1114 1117 1118 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1079 1080 1081 1082 1079 1080 1081 1082 1119 1120 1143 1144 1145 1146 1111 1112 1113 1114 
-      1127 1128 1129 1130 1129 1130 1129 1130 1127 1128 1129 1130 1165 1166 1167 1168 1129 1130 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 
-      1143 1144 1145 1146 1145 1146 1145 1146 1143 1144 1145 1146 1181 1182 1183 1184 1145 1146 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 
-     ))
-  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-   )
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/levels/forest.wst
===================================================================
--- trunk/windstille/data/levels/forest.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/forest.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,115 +0,0 @@
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 2)
-  (name   "")
-  (music  "")
-  (ambient-color .7 .7 .7)
-  (spawnpoint
-    (name "default")
-    (pos 300 150)
-  )
-  (objects
-
-  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1317 1318 1319 1320 1321 1322 0 0 1317 1318 1319 1320 1321 1322 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1333 1334 1335 1336 1337 1338 0 0 1333 1334 1335 1336 1337 1338 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1381 1382 1383 1384 1385 1386 0 0 1349 1350 1351 1352 1353 1354 0 0 0 0 0 0 0 0 0 0 1413 1414 1415 1416 1319 1320 1319 1320 1417 1418 1419 1420 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1391 1392 1393 1394 1395 1396 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1397 1398 1399 1400 1401 1402 0 0 1365 1366 1367 1368 1369 1370 0 0 0 0 0 0 0 0 0 0 1429 1430 1431 1432 1335 1336 1335 1336 1433 1434 1435 1436 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1407 1408 1409 1410 1411 1412 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 1381 1382 1383 1384 1385 1386 0 0 0 0 0 0 1413 1414 1415 1416 1445 1446 1447 1448 1425 1426 1427 1428 1449 1450 1451 1452 1417 1418 1419 1420 0 0 0 0 0 0 0 0 0 0 0 0 1477 1478 1479 1480 1425 1426 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 1397 1398 1399 1400 1401 1402 0 0 0 0 0 0 1429 1430 1431 1432 1461 1462 1463 1464 1441 1442 1443 1444 1465 1466 1467 1468 1433 1434 1435 1436 0 0 0 0 0 0 0 0 0 0 0 0 1493 1494 1495 1496 1441 1442 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1317 1318 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1445 1446 1447 1448 1425 1426 1427 1428 1457 1458 1459 1460 1425 1426 1427 1428 1449 1450 1451 1452 1423 1424 0 0 0 0 0 0 0 0 0 0 1509 1510 1511 1512 1457 1458 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1333 1334 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1461 1462 1463 1464 1441 1442 1443 1444 1473 1474 1475 1476 1441 1442 1443 1444 1465 1466 1467 1468 1439 1440 0 0 0 0 0 0 0 0 0 0 1525 1526 1527 1528 1473 1474 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1349 1350 1425 1426 1427 1428 1425 1426 1351 1352 1427 1428 1427 1428 1427 1428 1425 1426 1425 1426 1427 1428 1459 1460 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1455 1456 1417 1418 1419 1420 0 0 1413 1414 1415 1416 1453 1454 1425 1426 1427 1428 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1365 1366 1441 1442 1443 1444 1441 1442 1367 1368 1443 1444 1443 1444 1443 1444 1441 1442 1441 1442 1443 1444 1475 1476 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1471 1472 1433 1434 1435 1436 0 0 1429 1430 1431 1432 1469 1470 1441 1442 1443 1444 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1349 1350 1351 1352 1351 1352 1457 1458 1351 1352 1459 1460 1351 1352 1351 1352 1457 1458 1457 1458 1459 1460 1425 1426 1427 1428 1459 1460 1457 1458 1459 1460 1457 1458 1425 1426 1427 1428 1449 1450 1451 1452 1319 1320 1445 1446 1447 1448 1425 1426 1457 1458 1459 1460 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1365 1366 1367 1368 1367 1368 1473 1474 1367 1368 1475 1476 1367 1368 1367 1368 1473 1474 1473 1474 1475 1476 1441 1442 1443 1444 1475 1476 1473 1474 1475 1476 1473 1474 1441 1442 1443 1444 1465 1466 1467 1468 1335 1336 1461 1462 1463 1464 1441 1442 1473 1474 1475 1476 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1381 1382 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1325 1326 1457 1458 1425 1426 1427 1428 1459 1460 1425 1426 1427 1428 1425 1426 1427 1428 1457 1458 1459 1460 1425 1426 1427 1428 1351 1352 1425 1426 1427 1428 1457 1458 1459 1460 1425 1426 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1397 1398 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1341 1342 1473 1474 1441 1442 1443 1444 1475 1476 1441 1442 1443 1444 1441 1442 1443 1444 1473 1474 1475 1476 1441 1442 1443 1444 1367 1368 1441 1442 1443 1444 1473 1474 1475 1476 1441 1442 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1381 1382 1325 1326 1457 1458 1425 1426 1427 1428 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1427 1428 1457 1458 1459 1460 1425 1426 1427 1428 1323 1324 1385 1386 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1397 1398 1341 1342 1473 1474 1441 1442 1443 1444 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1443 1444 1473 1474 1475 1476 1441 1442 1443 1444 1339 1340 1401 1402 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1381 1382 1325 1326 1457 1458 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1425 1426 1427 1428 1427 1428 1427 1428 1427 1428 1457 1458 1459 1460 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1397 1398 1341 1342 1473 1474 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1441 1442 1443 1444 1443 1444 1443 1444 1443 1444 1473 1474 1475 1476 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1357 1358 1425 1426 1427 1428 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1457 1458 1459 1460 1459 1460 1459 1460 1459 1460 1323 1324 1383 1384 1385 1386 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1373 1374 1441 1442 1443 1444 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1473 1474 1475 1476 1475 1476 1475 1476 1475 1476 1339 1340 1399 1400 1401 1402 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1457 1458 1459 1460 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1323 1324 1385 1386 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1473 1474 1475 1476 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1339 1340 1401 1402 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1325 1326 1425 1426 1427 1428 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1341 1342 1441 1442 1443 1444 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-   )
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/levels/industrial.wst
===================================================================
--- trunk/windstille/data/levels/industrial.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/industrial.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,164 +0,0 @@
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 2)
-  (name   "")
-  (music  "")
-  (ambient-color .4 .4 .4)
-  (spawnpoint
-    (name "default")
-    (pos 400 650)
-  )
-  (objects
-    (swarm 
-        (pos 300 600)
-        (count 10))
-
-    (scriptable-object
-      (name "Lamp")
-      (pos 256 736)
-      (sprite "images/streetlamp.sprite")
-      (highlight "images/streetlamp-highlight.sprite")
-      (light "images/streetlamp-light.sprite")
-      (active #t))
-
-   (character
-      (name "bob")
-      (sprite3d "models/characters/bob/bob.wsprite")
-      (pos 768 736)
-    )
- 
- (background-gradient
-        (name "BackgroundGradient")
-(z-pos -100)
-(colors 
-0.000000 0.101798 0.203595 1.000000 1.000000 1.000000 1.000000 0.948165 0.969697 0.812122 1.000000 0 0
-0.203595 0.379143 0.487479 0.948165 0.969697 0.812122 1.000000 1.000000 0.552632 0.270000 1.000000 0 0
-0.487479 0.503577 0.529137 1.000000 0.552632 0.270000 1.000000 0.581721 0.096155 0.170043 1.000000 0 0
-0.529137 0.545165 0.562604 0.581721 0.096155 0.170043 1.000000 0.287879 0.155229 0.049835 1.000000 0 0
-0.562604 0.609349 0.697830 0.287879 0.155229 0.049835 1.000000 0.336000 0.425966 0.800000 1.000000 0 0
-0.697830 0.845064 1.000000 0.336000 0.425966 0.800000 1.000000 0.852165 0.985930 1.000000 1.000000 0 0
-
-
-)
-        )
-    (scriptable-object
-      (name "Lamp")
-      (pos 768 736)
-      (sprite "images/streetlamp.sprite")
-      (highlight "images/streetlamp-highlight.sprite")
-      (light "images/streetlamp-light.sprite")
-      (active #t))
-
-
-    (scriptable-object
-      (name "Lamp")
-      (pos 1024 736)
-      (sprite "images/streetlamp.sprite")
-      (highlight "images/streetlamp-highlight.sprite")
-      (light "images/streetlamp-light.sprite")
-      (active #t))
-
-
-  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      517 518 520 521 522 523 518 520 521 522 523 520 517 518 520 521 522 523 518 520 521 522 523 520 521 522 523 518 520 521 522 523 522 523 518 520 521 522 523 520 521 522 523 518 522 523 518 520 521 522 523 520 521 522 523 518 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      533 534 536 537 538 539 534 536 537 538 539 536 533 534 536 537 538 539 534 536 537 538 539 536 537 538 539 534 536 537 538 539 538 539 534 536 537 538 539 536 537 538 539 534 538 539 534 536 537 538 539 536 537 538 539 534 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      495 496 497 498 431 432 433 434 431 432 433 434 495 496 497 498 431 432 433 434 431 432 433 434 431 432 433 434 495 496 497 498 431 432 433 434 431 432 433 434 431 432 433 434 431 432 433 434 431 432 433 434 431 432 433 434 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      511 512 513 514 447 448 449 450 447 448 449 450 511 512 513 514 447 448 449 450 447 448 449 450 447 448 449 450 511 512 513 514 447 448 449 450 447 448 449 450 447 448 449 450 447 448 449 450 447 448 449 450 447 448 449 450 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      527 528 529 530 463 464 465 466 463 464 465 466 527 528 529 530 463 464 465 466 463 464 465 466 463 464 465 466 527 528 529 530 463 464 465 466 463 464 465 466 463 464 465 466 463 464 465 466 463 464 465 466 463 464 465 466 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      543 544 545 546 479 480 481 482 479 480 481 482 543 544 545 546 479 480 481 482 479 480 481 482 479 480 481 482 543 544 545 546 479 480 481 482 479 480 481 482 479 480 481 482 479 480 481 482 479 480 481 482 479 480 481 482 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      297 298 299 300 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 421 422 425 426 0 0 0 0 293 294 297 298 297 298 295 297 298 296 297 298 297 298 299 300 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      313 314 315 316 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 437 438 441 442 0 0 0 0 309 310 313 314 313 314 311 313 314 312 313 314 313 314 315 316 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      329 330 331 332 0 0 0 0 421 422 425 426 0 0 421 422 423 424 425 0 0 0 0 0 485 486 489 490 0 0 0 0 389 390 393 394 391 392 391 392 391 392 391 392 391 392 395 396 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      345 346 347 348 0 0 0 0 437 438 441 442 0 0 437 438 439 440 441 0 0 0 0 0 501 502 505 506 0 0 0 0 405 406 409 410 407 408 407 408 407 408 407 408 407 408 411 412 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      329 330 331 332 0 0 0 0 485 486 489 490 0 0 485 486 487 488 489 490 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      345 346 347 348 0 0 0 0 501 502 505 506 0 0 501 502 503 504 505 506 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      329 330 331 332 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      345 346 347 348 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 438 441 438 441 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      361 362 363 364 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 486 489 486 489 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      377 378 379 380 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 438 441 438 441 438 441 438 441 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      329 330 333 334 295 296 295 296 297 298 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 295 296 295 296 297 298 486 489 486 489 486 489 486 489 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 297 298 297 298 295 296 295 296 
-      345 346 349 350 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 313 314 313 314 311 312 311 312 
-      361 362 327 328 427 428 429 430 329 330 327 328 327 328 327 328 329 330 329 330 327 328 427 428 429 430 327 328 427 428 429 430 329 330 329 330 427 428 429 430 329 330 327 328 327 328 327 328 329 330 329 330 327 328 327 328 329 330 327 328 327 328 327 328 329 330 329 330 327 328 327 328 329 330 327 328 327 328 327 328 329 330 329 330 327 328 327 328 329 330 327 328 329 330 329 330 327 328 327 328 
-      377 378 343 344 443 444 445 446 345 346 343 344 343 344 343 344 345 346 345 346 343 344 443 444 445 446 343 344 443 444 445 446 345 346 345 346 443 444 445 446 345 346 343 344 343 344 343 344 345 346 345 346 343 344 343 344 345 346 343 344 343 344 343 344 345 346 345 346 343 344 343 344 345 346 343 344 343 344 343 344 345 346 345 346 343 344 343 344 345 346 343 344 345 346 345 346 343 344 343 344 
-      361 459 359 360 459 460 461 462 361 362 359 360 359 360 359 360 361 362 361 362 359 360 459 460 461 462 359 360 459 460 461 462 361 362 361 362 459 460 461 462 361 362 359 360 359 360 359 360 361 362 361 362 359 360 359 360 361 362 359 360 359 360 359 360 361 362 361 362 359 360 359 360 361 362 359 360 359 360 359 360 361 362 361 362 359 360 359 360 361 362 359 360 361 362 361 362 359 360 359 360 
-      377 475 375 376 475 476 477 478 377 378 375 376 375 376 375 376 377 378 377 378 375 376 475 476 477 478 375 376 475 476 477 478 377 378 377 378 475 476 477 478 377 378 375 376 375 376 375 376 377 378 377 378 375 376 375 376 377 378 375 376 375 376 375 376 377 378 377 378 375 376 375 376 377 378 375 376 375 376 375 376 377 378 377 378 375 376 375 376 377 378 375 376 377 378 377 378 375 376 375 376 
-      393 394 391 392 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 393 394 393 394 391 392 391 392 
-      409 410 407 408 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 409 410 409 410 407 408 407 408 
-     ))
-  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-   )
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/levels/intro.nut
===================================================================
--- trunk/windstille/data/levels/intro.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/intro.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,82 +0,0 @@
-// -*- c++ -*-
-
-function fade_in_out(r,g,b)
-{
-  fadeout(0.2, r,g,b);
-  wait_for_fade();
-  wait(1)
-  caption_clear();
-  fadein(3);
-  wait_for_fade();
-}
-
-//render_mask_set(RENDER_MASK_COLORMAP);
-fadeout(0);
-
-objects.player.set_active(false);
-spawn_object("scriptable-object", { name="planet", pos=[0,0],
-                 sprite="images/planet.sprite", z_pos=1001 });
-
-camera_set_active(false);
-camera_set_pos(400, 300); // USA
-camera_set_zoom(4.0);
-fadein(1);
-wait_for_fade();
-cutscene_begin();
-wait(2);
-
-caption_add(BOTTOM, "Location: USA");
-wait_for_dialog();
-
-camera_continue_path();
-camera_add_point(533, 248, 6.0); // greenland
-camera_end_path();
-wait_for_camera();
-
-caption_add(BOTTOM, "Location: Greenland");
-wait_for_dialog();
-
-camera_continue_path();
-camera_add_point(445, 513, 3.0); // antarctica
-camera_end_path();
-wait_for_camera();
-
-caption_add(BOTTOM, "Location: Antarctica");
-wait_for_dialog();
-
-camera_add_point(400, 300, 1.0);
-camera_add_point(400, 300, 1.0);
-camera_end_path();
-// wait_for_camera();
-
-caption_add(BOTTOM, "The Big Boom. Humanity found out it could travel to the stars, and it did, en masse.");
-
-wait_for_dialog();
-fade_in_out(1,0,0)
-
-caption_add(BOTTOM, "But it didn't take long for it to turn into The Big Bust. The guilds, the governments and the corporations staked out the best worlds.");
-
-wait_for_dialog();
-fade_in_out(1,1,1)
-
-caption_add(BOTTOM, "Still, many individuals took their chances, even without military hardware and terraformers. Most worlds were so barren or so dangerous that whole colonies died out. In the Free Colonies that survive, life isn't easy.");
-
-wait_for_dialog();
-
-caption_end();
-
-fadeout(1);
-wait_for_fade();
-objects.player.set_active(true);
-objects.planet.remove();
-
-cutscene_end();
-camera_set_active(true);
-
-render_mask_set(RENDER_MASK_ALL);
-wait(1);
-wait_for_fade();
-fadein(1);
-
-
-/* EOF */

Deleted: trunk/windstille/data/levels/intro.wst
===================================================================
--- trunk/windstille/data/levels/intro.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/intro.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,82 +0,0 @@
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 2)
-  (name   "")
-  (music  "levels/silence_wip.ogg")
-  (ambient-color .666 .666 .666)
-  (init-script "levels/intro.nut")
-  (spawnpoint
-    (name "default")
-    (pos 300 650)
-  )
-  (objects
-  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
-      1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
-      1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
-      1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
-      1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
-      1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1861 1862 1767 1768 1865 1866 1765 1766 1861 1862 1769 1863 1864 1864 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1865 1866 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 
-      1877 1878 1783 1784 1881 1882 1781 1782 1877 1878 1785 1879 1880 1880 1773 1773 1773 1773 1773 1773 1879 1880 1785 1786 1881 1882 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 
-      1893 1894 1799 1800 1897 1898 1797 1798 1893 1894 1801 1895 1896 1896 1773 1774 1773 1773 1773 1773 1895 1896 1801 1802 1897 1898 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 
-      1909 1910 1815 1816 1913 1914 1813 1814 1909 1910 1817 1911 1912 1912 1771 1773 1773 1771 1773 1773 1911 1912 1817 1818 1913 1914 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 
-      1925 1926 1831 1832 1929 1930 1829 1830 1925 1926 1833 1927 1928 1928 1771 1773 1773 1771 1822 1773 1927 1928 1833 1834 1929 1930 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 
-      1941 1942 1847 1848 1945 1946 1845 1846 1941 1942 1849 1943 1944 1944 1771 1773 1773 1771 1773 1773 1943 1944 1849 1850 1945 1946 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
-      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
-      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
-      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
-      1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
-      1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
-      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
-      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
-      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
-    (data
-      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-   )
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/levels/newformat2.nut
===================================================================
--- trunk/windstille/data/levels/newformat2.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/newformat2.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,27 +0,0 @@
-set_controller_help_active(true);
-objects.player_flames2.set_active(false);
-objects.player_flames.set_active(false);      
-
-/* Some fun with fire */
-function startfire()
-{
-  // Need to parent here because at top level "player" isn't yet created
-  objects.player_flames2.set_parent("player");
-  objects.player_flames.set_parent("player");      
-
-  objects.player_flames2.set_active(true);
-  objects.player_flames.set_active(true);
-}
-
-function stopfire()
-{
-  // FIXME: Don't just deactivate the GameObject, but let the particle
-  // system run out (set_cycles(1.0)) also add a bunch of white smoke
-  objects.player_flames2.set_active(false);
-  objects.player_flames.set_active(false);
-}
-
-objects.Block0Sign.start_flash(0.7);
-objects.Block0Sign.move_to(100, 370, 100, 2);
-
-/* EOF */

Deleted: trunk/windstille/data/levels/newformat2.wst
===================================================================
--- trunk/windstille/data/levels/newformat2.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/newformat2.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,367 +0,0 @@
-;; -*- scheme -*-
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 1)
-  (name   "")
-  (music  "music/techdemo.ogg")
-  (ambient-color .4 .4 .4)
-  (init-script "levels/newformat2.nut")
-  (spawnpoint
-    (name "default")
-    (pos 300 650)
-  )
-  (objects
-   (liquid
-    (pos 128 768)
-    (width 20)
-    )
-
-;;(shockwave (pos 400 300))
-
-   (liquid
-    (pos 832 832)
-    (width 4)
-    )
-
-   (liquid
-    (pos 1312 832)
-    (width 4)
-    )
-
-   (vrdummy
-    (name "VRDummy")
-    (pos 600 600)
-    )
-
-    (scriptable-object
-      (name "Block0Sign")
-      (pos 550 370)
-      (sprite "images/arrow.sprite")
-      (active #f)
-    )
-
-    ;; Smoke
-    (particle-system
-     (lifetime   1.0)
-     (count      15)
-     (bunching 0.8)
-
-     (z-pos  1000)
-     (pos 128 800)
-     (velocity    150 200)
-     (cone   -10 10)
-     (gravity -0.5 -1.5)
-     (size   0.05 1.0)
-     (drawer (surface-drawer (image "images/particles/smoke2.png")))
-     (distribution (point-distribution))
-     )
-
-    ;; Water
-    (particle-system
-     (lifetime   0.6)
-     (count      250)
-     (z-pos  1000)
-     (pos 532 640)
-     (velocity    150 200)
-     (cone   70 110)
-     (gravity 0 5)
-     (size   1.0 3.0)
-     (drawer (spark-drawer (color 0.7 0.8 1.0)))
-     (distribution (line-distribution (x1 -5) (y1 0) (x2 5) (y2 0)))
-     )
-
-    ;; Water bounce
-    (particle-system
-     (lifetime   .2)
-     (count      50)
-     (z-pos  1000)
-     (pos 532 836)
-     (velocity    50 100)
-     (cone   -110 -70)
-     (gravity 0 5)
-     (size   1.0 3.0)
-     (drawer (spark-drawer (color 0.7 0.8 1.0)))
-     (distribution (line-distribution (x1 -40) (y1 0) (x2 40) (y2 0)))
-     )
-
-    ;; Fire sparks
-    (particle-system
-     (drawer (spark-drawer (color 1.0 0.5 0.5)))
-     (z-pos 900)
-     (pos 768 832)
-     (velocity 300 550)
-     (cone -115 -65)
-     (gravity 0  5)
-     (distribution (line-distribution (x1 -50)  (y1 0) (x2 50) (y2 0))))
-    
-    ;; Fire smoke
-    (particle-system
-     (pos 768 832)
-     (lifetime 8)
-     (count 30)
-     (z-pos -200)
-     (drawer (surface-drawer (image "images/particles/smoke2.png")
-                             (blendfunc-src "src_alpha")
-                             (blendfunc-dst "one_minus_src_alpha")))
-     (velocity 70 100)
-     (cone -115 -65)
-     (gravity 0 -1)
-     (size 1.0 3.0)
-     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0))))
-
-    ;; Burning player
-    (particle-system
-     (name "player_flames")
-     (pos 0 0)
-     (count 40)
-     (z-pos 1000)
-     (lifetime   .5)
-     (velocity 100 200)
-     (color-begin 1.0 1.0 1.0 0.5)
-     (cone -95 -85)
-     (gravity 0 0)
-     (size 0.6 0.8)
-     (distribution (rect-distribution (x1 -10) (y1 -110) (x2 10) (y2 0)))
-     (drawer (surface-drawer (image "images/particles/smoke.png")
-                             (blendfunc-src "src_alpha")
-                             (blendfunc-dst "one"))))
-
-    (particle-system
-     (name "player_flames2")
-     (lifetime   .5)
-     (pos 0 0)
-     (count 40)
-     (z-pos -100)
-     (velocity 100 200)
-     (cone -95 -85)
-     (gravity 0 0)
-        
-     (size 0.8 0.8)
-     (distribution (rect-distribution (x1 -10) (y1 -110) (x2 10) (y2 0)))
-     (drawer (surface-drawer (image "images/particles/smoke.png")
-                             (blendfunc-src "src_alpha")
-                             (blendfunc-dst "one"))))
-
-    ;; Fire Light
-    (particle-system
-     (pos 768 800)
-     (lifetime 1.0)
-     (count 20)
-     (layer "light")
-     (z-pos 1000)
-     (velocity 200 300)
-     (cone -95 -85)
-     (gravity 0 0)
-     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0)))
-     (drawer (surface-drawer (image "images/particles/fire_light.png")
-                             (blendfunc-src "src_alpha")
-                             (blendfunc-dst "one"))))
-    
-    ;; Fire itself
-    (particle-system
-     (pos 768 832)
-     (count 50)
-     (z-pos 1000)
-     (layer "highlight")
-     (velocity 200 300)
-     (cone -95 -85)
-     (gravity 0 0)
-     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0)))
-     (drawer (surface-drawer (image "images/particles/smoke.png")
-                             (blendfunc-src "src_alpha")
-                             (blendfunc-dst "one"))))
-
-    (particle-system
-     (pos 768 832)
-     (count 50)
-     (z-pos -10)
-     (velocity 200 300)
-     (cone -95 -85)
-     (gravity 0 0)
-     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0)))
-     (drawer (surface-drawer (image "images/particles/smoke.png")
-                             (blendfunc-src "src_alpha")
-                             (blendfunc-dst "one"))))
-
-    (trigger
-     (name "fire-trigger")
-     (x 722)
-     (y 686)
-     (width 95)
-     (height 146)
-     (script "startfire()"))
-
-    (trigger
-     (name "water-trigger")
-     (x 515) 
-     (y 687)
-     (width 25)
-     (height 146)
-     (script "stopfire()"))
-
-    (box
-      (name "Box0")
-      (sprite "images/objects/box.sprite")
-      (pos 350 700)
-      (vel 10 -400)
-      (gravity 150)
-    )
-    (box
-      (name "Box1")
-      (sprite "images/objects/box.sprite")
-      (pos 555 700)
-      (vel -10 -200)
-      (gravity 150)
-    )
-    (character
-      (name "bob")
-      (pos 320 831)
-      (z-pos -50)
-      (action "Aim")
-      (sprite3d "models/characters/bob/bob.wsprite")
-    )
-    (character
-      (name "frank")
-      (pos 200 831)
-      (sprite3d "models/characters/sophie/sophie.wsprite")
-    )
-    (spider-mine
-      (name "spider2")
-      (pos 550 550)
-    )
-    (hedgehog
-      (name "hedgehog1")
-      (pos 1100 550)
-    )
-;    (elevator
-;      (name "elevator1")
-;      (sprite "images/objects/box.sprite")
-;      (pos 1100 750)
-;    )
-    (scriptable-object
-      (sprite "images/objects/bar.sprite")
-      (pos 256 746)
-      (z-pos 100))
-
-    (scriptable-object
-      (sprite "images/objects/vrdoor-color.sprite")
-      (highlight "images/objects/vrdoor-highlight.sprite")
-      (pos 384 704)
-      (script "set_sector(\"levels/industrial.wst\")")
-      (use-verb "Enter")
-    )
-
-
-    (scriptable-object
-      (sprite    "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light     "images/objects/apartmentlamp_light.sprite")
-      (pos 320 640))
-
-
-  (tilemap (name "background") (width 100) (height 30) (z-pos -1000)
-    (data
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 1000)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 8 9 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 24 25 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 40 41 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 55 56 57 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 1 2 3 4 5 6 0 0 0 0 0 1 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 17 18 19 20 21 22 0 0 0 0 0 17 18 19 20 21 22 0 0 0 0 0 0 0 0 0 0 17 18 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 0 0 0 0 0 33 34 35 36 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 0 0 0 0 0 49 50 51 52 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      2 3 4 5 6 0 0 1 2 3 4 5 6 1 2 3 4 4 3 4 4 5 6 0 0 1 2 3 4 3 4 4 4 3 4 5 6 0 0 0 0 0 0 0 0 1 2 3 4 3 4 4 4 3 4 5 2 3 4 3 4 4 4 3 4 5 2 3 4 3 4 4 4 3 4 3 4 5 6 0 0 0 0 1 2 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      18 19 20 21 22 0 0 17 18 19 20 21 22 17 18 19 20 20 19 20 20 21 22 0 0 17 18 19 20 19 20 20 20 19 20 21 22 0 0 0 0 0 0 0 0 17 18 19 20 19 20 20 20 19 20 21 18 19 20 19 20 20 20 19 20 21 18 19 20 19 20 20 20 19 20 19 20 21 22 0 0 0 0 17 18 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      34 35 36 37 38 0 0 65 66 67 68 69 70 65 66 67 68 68 67 68 68 69 70 0 0 65 66 67 68 67 68 68 68 67 68 69 70 0 0 0 0 0 0 0 0 65 66 67 68 67 68 68 68 67 68 69 66 67 68 67 68 68 68 67 68 69 66 67 68 67 68 68 68 67 68 67 68 69 70 0 0 1 4 41 42 39 40 5 6 0 0 0 0 0 0 0 0 1 2 3 
-      50 51 52 53 54 0 0 81 82 83 84 85 86 81 82 83 84 84 83 84 84 85 86 0 0 81 82 83 84 83 84 84 84 83 84 85 86 0 0 0 0 0 0 0 0 81 82 83 84 83 84 84 84 83 84 85 82 83 84 83 84 84 84 83 84 85 82 83 84 83 84 84 84 83 84 83 84 85 86 0 0 17 18 57 58 55 56 21 22 0 0 0 0 0 0 0 0 17 18 19 
-      34 35 52 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 41 42 35 36 35 36 39 40 5 6 0 0 0 0 0 0 33 34 35 
-      50 51 52 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 57 58 36 36 51 52 55 56 21 22 0 0 0 0 0 0 33 34 35 
-      34 35 36 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 41 42 36 51 52 52 35 36 35 36 39 40 5 6 0 0 0 0 49 50 51 
-      50 51 36 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 57 58 35 36 35 35 51 52 35 36 55 56 21 22 0 0 0 0 33 34 35 
-      34 35 36 39 40 4 4 3 4 4 3 3 4 4 3 4 4 3 3 4 4 3 4 4 4 5 6 0 0 1 2 2 3 4 4 4 3 4 4 4 5 6 0 0 1 2 2 3 4 4 3 4 4 4 5 6 0 0 1 2 2 3 4 4 3 4 4 3 4 4 4 5 6 0 0 1 4 41 42 35 36 51 52 51 51 52 51 51 52 35 36 39 40 5 6 0 0 49 50 51 
-      34 35 52 55 56 20 20 19 20 20 19 19 20 20 19 20 20 19 19 20 20 19 20 20 20 21 22 0 0 17 18 18 19 20 20 20 19 20 20 20 21 22 0 0 17 18 18 19 20 20 19 20 20 20 21 22 0 0 17 18 18 19 20 20 19 20 20 19 20 20 20 21 22 0 0 17 18 57 58 51 52 35 36 36 36 51 51 51 52 51 52 55 56 21 22 0 0 33 34 35 
-      34 35 52 35 51 36 36 51 36 52 35 51 36 36 51 36 52 35 51 36 36 51 36 36 36 39 40 4 4 41 42 36 36 51 36 36 51 36 36 36 39 40 4 4 41 42 36 36 36 36 51 36 36 36 39 40 4 4 41 42 36 36 36 36 51 36 36 51 36 36 36 39 40 4 4 41 42 36 36 51 36 35 36 52 52 36 36 36 51 36 51 35 36 39 3 3 3 41 42 51 
-      50 51 52 51 51 52 52 51 52 52 51 51 52 52 51 52 52 51 51 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 51 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 51 52 36 35 52 52 52 36 52 36 51 51 55 19 19 19 57 58 35 
-      66 67 68 67 67 68 68 67 68 68 67 67 68 68 67 68 68 67 67 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 67 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 67 68 68 67 68 68 68 68 67 68 68 67 68 68 67 68 68 67 68 
-     )
-   )
-
-  (tilemap (name "foreground") (width 100) (height 30)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-   )
-
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/levels/virtualreality.wst
===================================================================
--- trunk/windstille/data/levels/virtualreality.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/levels/virtualreality.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,106 +0,0 @@
-;; Generated by Flexlay Editor
-(windstille-sector
-  (version 2)
-  (ambient-color .666 .666 .666)  (name   "")
-  (music  "")
-  (objects
-  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
-    (data
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
-      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
-      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
-      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
-      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
-      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
-     ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
-    (data
-      50 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 53 
-      66 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 69 
-      82 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 85 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 50 55 56 57 58 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 3 4 3 3 4 4 3 4 3 3 4 4 3 4 3 3 4 4 5 6 0 0 0 0 65 66 67 68 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 17 18 19 20 19 20 19 19 20 20 19 20 19 19 20 20 19 20 19 19 20 20 21 22 0 0 0 0 81 82 83 84 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 65 66 67 68 67 68 67 67 68 68 67 68 67 67 68 68 67 68 67 67 68 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 81 82 83 84 83 84 83 83 84 84 83 84 83 83 84 84 83 84 83 83 84 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 0 0 1 2 3 4 5 6 1 2 3 4 5 6 0 0 1 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 17 18 19 20 21 22 0 0 17 18 19 20 21 22 17 18 19 20 21 22 0 0 17 18 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 1 2 3 4 41 42 7 8 69 70 0 0 65 66 67 68 69 70 65 66 67 68 69 70 0 0 65 66 9 10 39 40 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 17 18 19 20 57 58 23 24 85 86 0 0 81 82 83 84 85 86 81 82 83 84 85 86 0 0 81 82 25 26 55 56 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 65 66 67 68 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 81 82 83 84 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 
-      2 3 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 5 6 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 
-      18 19 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 21 22 0 0 0 49 50 55 56 57 58 53 54 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 
-      66 67 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 69 70 0 0 0 65 66 67 68 67 68 69 70 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 
-     ))
-  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
-    (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-     ))
-))
\ No newline at end of file

Deleted: trunk/windstille/data/scripts/apartment/barrobot.nut
===================================================================
--- trunk/windstille/data/scripts/apartment/barrobot.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/scripts/apartment/barrobot.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,126 +0,0 @@
-barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
-
-jane.say("So, what do you have to offer?")
-barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani")
-jane.say("Anything else?")
-barrobot.say("Wiskey, Milk all that stuff, what do you want?")
-
-conversation_add2("Milk",   "Haven't drank any milk in a while.");
-conversation_add2("Wiskey", "I don't think my stomach can take it.");
-conversation_add2("Beer",   "The old classic, always good, never great.");
-
-switch (conversation_get())
-  {
-  case 0:
-    jane.say("Give me a Milk.");
-    barrobot.say("Milk drinker? Here you go.");
-    break;
-
-  case 1:
-    jane.say("Give me a Wiskey, the best you have"); 
-    barrobot.say("Here is the wiskey.");
-    break;
-
-  case 2:
-    jane.say("Give me a beer, that finest of Nugani");
-    barrobot.say("Here is the beer.");
-    break;
-  }
-
-quit()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_add("Choice 8");
-conversation_get()
-
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_add("Choice 8");
-conversation_add("Choice 9");
-conversation_get()
-  
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_add("Choice 8");
-conversation_add("Choice 9");
-conversation_add("Choice 10");
-conversation_get()
-  
-// cutscene_begin();
-
-// barrobot <- Dialog(TOP, "Bar Robot", "images/portraits/barrobot.sprite");
-// jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
-
-// barrobot.show("Hello how are you?")
-
-// // yagor.show("How are you?<sleep>\nEverything fine today?")
-// // jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
-// // yagor.show("Sure, here take....")
-// // fadeout()
-// // wait_for_fade()
-// // fadein();
-// // yagor.show("Here it is.")
-// // jane.show("Ok, thanks, time to explore this apartment a bit.")
-
-// // objects.flashlight.set_active(true);
-// // objects.flashlight.set_parent("player");
-
-// cutscene_end();
-
-/* EOF */

Deleted: trunk/windstille/data/scripts/apartment/init.nut
===================================================================
--- trunk/windstille/data/scripts/apartment/init.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/scripts/apartment/init.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,2 +0,0 @@
-
-/* EOF */

Deleted: trunk/windstille/data/scripts/apartment/yagor.nut
===================================================================
--- trunk/windstille/data/scripts/apartment/yagor.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/scripts/apartment/yagor.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,20 +0,0 @@
-cutscene_begin();
-wait(1);
-yagor <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
-
-yagor.show("How are you?<sleep>\nEverything fine today?")
-jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
-yagor.show("Sure, here take....")
-fadeout()
-wait_for_fade()
-fadein();
-yagor.show("Here it is.")
-jane.show("Ok, thanks, time to explore this apartment a bit.")
-
-objects.flashlight.set_active(true);
-objects.flashlight.set_parent("player");
-
-cutscene_end();
-
-/* EOF */

Deleted: trunk/windstille/data/scripts/newformat2/bob.nut
===================================================================
--- trunk/windstille/data/scripts/newformat2/bob.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/scripts/newformat2/bob.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,81 +0,0 @@
-function intro()
-{
-  bob_seen_before = true;
-  dialog.show("Hey, my name's bob.  Are you new around here?"); 
-  conversation_add("Yes, I am.");
-  conversation_add("Go away"); 
-  conversation_add("Choice 1"); 
-  conversation_add("Choice 2"); 
-  conversation_add("Choice 3"); 
-  if (!conversation_get())
-  {
-    ask_questions();
-  }
-  else
-  {
-    bye();
-  }
-}
-
-function hello_again()
-{
-  dialog.show("Hello again");
-  conversation_add("Hey.");
-  conversation_add("Bye");
-  if (!conversation_get())
-    ask_questions();
-  else
-    bye();
-}
-
-function ask_questions()
-{
-  dialog.show("So what are you doing here?");
-  conversation_add("I work as a mercenary.");
-  conversation_add("Not much");
-  if (!conversation_get())
-  {
-      bob_knows_you_mercenary = true;
-      offer_job();
-  }
-  else
-    bye();
-}
-
-function offer_job()
-{
-  dialog.show("Are you looking for some work?");
-  conversation_add("I might be, if the offer is good enough.");
-  conversation_add("No thanks.");
-  if (!conversation_get()) {
-    add_objective("Kill spider", "You must kill the spider at the end of the level");
-      explain_job();
-  }
-  else
-    bye();
-}
-
-function explain_job()
-{
-  dialog.show("Your job is to kill the spider at the end of the level ;)");
-}
-
-function bye()
-{
-  if (is_objective_given("Kill spider"))
-    dialog.show("Feel free to come back if you need a job");
-  else
-    dialog.show("See you again some time");
-}
-
-dialog <- Dialog(0, "Bob", "images/portraits/bob.sprite");
-if (is_objective_given("Kill spider"))
-  explain_job();
-else if (bob_knows_you_mercenary)
-  offer_job();
-else if (bob_seen_before)
-  hello_again();
-else
-  intro();
-
-/* EOF */

Deleted: trunk/windstille/data/scripts/newformat2/frank.nut
===================================================================
--- trunk/windstille/data/scripts/newformat2/frank.nut	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/scripts/newformat2/frank.nut	2009-03-04 13:39:11 UTC (rev 2545)
@@ -1,12 +0,0 @@
-
-/* play_sound("sounds/speech/vr_intro.ogg"); */
-println("Dislaying dialog");
-add_dialog(TOP, "Frank", "images/portraits/sophie.sprite", 
-       "<sin>Welcome</sin> to the <large>VR training program</large>. Here you " +
-       "will learn the <sin>basic manoeuvering</sin> abilities of <large>your</large> " +
-       "powersuit,<sleep> jumping,<sleep> running, <sleep> climbing<sleep> and shooting. " +
-       "We will start with <small>climbing</small>. See the <i>block</i> in front " +
-       "of you? Press <b>Right</b> and <b>Jump</b> to hang on the ledge.");
-println("Dislaying done");
-
-/* EOF */

Copied: trunk/windstille/data/sectors/apartment/apartment.wst (from rev 2544, trunk/windstille/data/levels/apartment.wst)
===================================================================
--- trunk/windstille/data/levels/apartment.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -0,0 +1,233 @@
+;; -*- scheme -*-
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (ambient-color .3 .3 .3)  (name   "")
+  (music  "")
+  (init-script "init.nut")
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos -2000)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1766 1765 1766 1863 1864 1769 1770 1863 1864 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1782 1781 1782 1879 1880 1785 1786 1879 1880 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1773 1774 1773 1773 1798 1801 1802 1895 1896 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1771 1773 1773 1771 1814 1817 1818 1911 1912 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1771 1773 1773 1771 1830 1833 1834 1927 1928 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1771 1773 1773 1771 1846 1849 1850 1943 1944 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1861 1862 1767 1768 1865 1866 1765 1766 1861 1862 1769 1863 1864 1864 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1865 1866 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 
+      1877 1878 1783 1784 1881 1882 1781 1782 1877 1878 1785 1879 1880 1880 1773 1773 1773 1773 1773 1773 1879 1880 1785 1786 1881 1882 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 
+      1893 1894 1799 1800 1897 1898 1797 1798 1893 1894 1801 1895 1896 1896 1773 1774 1773 1773 1773 1773 1895 1896 1801 1802 1897 1898 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 
+      1909 1910 1815 1816 1913 1914 1813 1814 1909 1910 1817 1911 1912 1912 1771 1773 1773 1771 1773 1773 1911 1912 1817 1818 1913 1914 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 
+      1925 1926 1831 1832 1929 1930 1829 1830 1925 1926 1833 1927 1928 1928 1771 1773 1773 1771 1822 1773 1927 1928 1833 1834 1929 1930 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 
+      1941 1942 1847 1848 1945 1946 1845 1846 1941 1942 1849 1943 1944 1944 1771 1773 1773 1771 1773 1773 1943 1944 1849 1850 1945 1946 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+     ))
+  (tilemap (name "interactivebackground") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1651 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1667 1668 1699 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1652 1683 1684 1715 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1700 1731 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1715 1716 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1715 1716 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1699 1715 1716 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 1651 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 0 0 1651 1667 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 1651 1652 1683 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1667 1668 1699 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1651 1652 1683 1684 1715 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1700 1731 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1668 1699 1715 1716 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 1699 1715 1716 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1652 1683 1699 1715 1716 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1671 1676 1671 1672 1673 1674 
+      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
+      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1658 1659 1660 1655 1656 1657 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1674 1675 1676 1671 1672 1673 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
+      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
+      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      1702 1703 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1702 1703 
+      1718 1719 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1718 1719 
+      1734 1735 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1734 1735 
+      1750 1751 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1750 1751 
+     ))
+    (scriptable-object
+      (sprite "images/objects/plant.sprite")
+      (pos 650 160)
+      (z-pos -100)
+    )
+    (scriptable-object
+      (sprite "images/objects/plant.sprite")
+      (pos 210 160)
+      (z-pos -100)
+    )
+    (scriptable-object
+      (sprite "images/objects/cabinet.sprite")
+      (pos 700 148)
+      (z-pos -100)
+    )
+    (scriptable-object
+      (sprite "images/objects/cabinet.sprite")
+      (pos 764 148)
+      (z-pos -100)
+    )
+    (scriptable-object
+      (sprite "images/objects/cabinet.sprite")
+      (pos 828 148)
+      (z-pos -100)
+    )
+    (scriptable-object
+      (sprite "images/objects/showerdoors.sprite")
+      (pos 919 120)
+      (z-pos -100)
+    )
+    (scriptable-object
+      (sprite "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light "images/objects/apartmentlamp_light.sprite")
+      (pos 1280 64)
+    )
+    (scriptable-object
+      (sprite "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light "images/objects/apartmentlamp_light.sprite")
+      (pos 768 64)
+    )
+    (scriptable-object
+      (sprite "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light "images/objects/apartmentlamp_light.sprite")
+      (pos 256 64)
+    )
+    (scriptable-object
+      (name "Painting1")
+      (pos 72 135)
+      (z-pos -100)
+      (sprite "images/objects/painting1.sprite")
+      (active true)
+      (script "")
+      (use-verb "Look")
+    )
+    (scriptable-object
+      (name "Painting1")
+      (pos 72 135)
+      (z-pos -100)
+      (sprite "images/objects/painting1.sprite")
+      (active true)
+      (script "")
+      (use-verb "Look")
+    )
+    (scriptable-object
+      (name "Painting2")
+      (pos 336 125)
+      (z-pos -100)
+      (sprite "images/objects/painting2.sprite")
+      (active true)
+      (script "")
+      (use-verb "Look")
+    )
+    (scriptable-object
+      (name "Painting3")
+      (pos 563 131)
+      (z-pos -100)
+      (sprite "images/objects/painting3.sprite")
+      (active true)
+      (script "")
+      (use-verb "Look")
+    )
+    (character
+      (name "bob")
+      (pos 320 544)
+      (z-pos -1050)
+      (sprite3d "models/vehicles/train/train.wsprite")
+    )
+    (character
+      (name "yagor")
+      (pos 180 256)
+      (z-pos -150)
+      (sprite3d "models/characters/yagor/yagor.wsprite")
+    )
+
+    (character
+      (name "barrobot")
+      (pos 370 256)
+      (z-pos -450)
+      (sprite3d "models/characters/yagor/yagor.wsprite")
+    )
+
+    (scriptable-object
+      (name "Barrobot2")
+      (pos 470 177)
+      (z-pos -100)
+      (sprite  "models/objects/barrobot/barrobotsprite.sprite")
+      (active true)
+      ;;(script "barrobot.nut")
+      (use-verb "Look")
+    )
+    
+    (scriptable-object      
+     (name "flashlight")
+     (active #f)
+     (light  "images/flashlightlight.sprite")
+     (highlight "images/flashlighthighlight.sprite")
+     (pos -40 -80)
+     )
+
+   )
+ )
+
+;; EOF ;;


Property changes on: trunk/windstille/data/sectors/apartment/apartment.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/apartment/barrobot.nut (from rev 2544, trunk/windstille/data/scripts/apartment/barrobot.nut)


Property changes on: trunk/windstille/data/sectors/apartment/barrobot.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/apartment/init.nut (from rev 2544, trunk/windstille/data/scripts/apartment/init.nut)


Property changes on: trunk/windstille/data/sectors/apartment/init.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/apartment/yagor.nut (from rev 2544, trunk/windstille/data/scripts/apartment/yagor.nut)


Property changes on: trunk/windstille/data/sectors/apartment/yagor.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/bluestone/bluestone.wst (from rev 2544, trunk/windstille/data/levels/bluestone.wst)


Property changes on: trunk/windstille/data/sectors/bluestone/bluestone.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/forest/forest.wst (from rev 2544, trunk/windstille/data/levels/forest.wst)


Property changes on: trunk/windstille/data/sectors/forest/forest.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/industrial/industrial.wst (from rev 2544, trunk/windstille/data/levels/industrial.wst)


Property changes on: trunk/windstille/data/sectors/industrial/industrial.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/intro/intro.nut (from rev 2544, trunk/windstille/data/levels/intro.nut)


Property changes on: trunk/windstille/data/sectors/intro/intro.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/data/sectors/intro/intro.wst (from rev 2544, trunk/windstille/data/levels/intro.wst)
===================================================================
--- trunk/windstille/data/levels/intro.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/sectors/intro/intro.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -0,0 +1,82 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (name   "")
+  (music  "levels/silence_wip.ogg")
+  (ambient-color .666 .666 .666)
+  (init-script "intro.nut")
+  (spawnpoint
+    (name "default")
+    (pos 300 650)
+  )
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1861 1862 1767 1768 1865 1866 1765 1766 1861 1862 1769 1863 1864 1864 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1865 1866 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 
+      1877 1878 1783 1784 1881 1882 1781 1782 1877 1878 1785 1879 1880 1880 1773 1773 1773 1773 1773 1773 1879 1880 1785 1786 1881 1882 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 
+      1893 1894 1799 1800 1897 1898 1797 1798 1893 1894 1801 1895 1896 1896 1773 1774 1773 1773 1773 1773 1895 1896 1801 1802 1897 1898 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 
+      1909 1910 1815 1816 1913 1914 1813 1814 1909 1910 1817 1911 1912 1912 1771 1773 1773 1771 1773 1773 1911 1912 1817 1818 1913 1914 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 
+      1925 1926 1831 1832 1929 1930 1829 1830 1925 1926 1833 1927 1928 1928 1771 1773 1773 1771 1822 1773 1927 1928 1833 1834 1929 1930 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 
+      1941 1942 1847 1848 1945 1946 1845 1846 1941 1942 1849 1943 1944 1944 1771 1773 1773 1771 1773 1773 1943 1944 1849 1850 1945 1946 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+ )
+
+;; EOF ;;


Property changes on: trunk/windstille/data/sectors/intro/intro.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/data/sectors/newformat2/bob.nut (from rev 2544, trunk/windstille/data/scripts/newformat2/bob.nut)


Property changes on: trunk/windstille/data/sectors/newformat2/bob.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/data/sectors/newformat2/frank.nut (from rev 2544, trunk/windstille/data/scripts/newformat2/frank.nut)


Property changes on: trunk/windstille/data/sectors/newformat2/frank.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/data/sectors/newformat2/newformat2.nut (from rev 2544, trunk/windstille/data/levels/newformat2.nut)


Property changes on: trunk/windstille/data/sectors/newformat2/newformat2.nut
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/newformat2/newformat2.wst (from rev 2544, trunk/windstille/data/levels/newformat2.wst)
===================================================================
--- trunk/windstille/data/levels/newformat2.wst	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/data/sectors/newformat2/newformat2.wst	2009-03-04 13:39:11 UTC (rev 2545)
@@ -0,0 +1,367 @@
+;; -*- scheme -*-
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 1)
+  (name   "")
+  (music  "music/techdemo.ogg")
+  (ambient-color .4 .4 .4)
+  (init-script "levels/newformat2.nut")
+  (spawnpoint
+    (name "default")
+    (pos 300 650)
+  )
+  (objects
+   (liquid
+    (pos 128 768)
+    (width 20)
+    )
+
+;;(shockwave (pos 400 300))
+
+   (liquid
+    (pos 832 832)
+    (width 4)
+    )
+
+   (liquid
+    (pos 1312 832)
+    (width 4)
+    )
+
+   (vrdummy
+    (name "VRDummy")
+    (pos 600 600)
+    )
+
+    (scriptable-object
+      (name "Block0Sign")
+      (pos 550 370)
+      (sprite "images/arrow.sprite")
+      (active #f)
+    )
+
+    ;; Smoke
+    (particle-system
+     (lifetime   1.0)
+     (count      15)
+     (bunching 0.8)
+
+     (z-pos  1000)
+     (pos 128 800)
+     (velocity    150 200)
+     (cone   -10 10)
+     (gravity -0.5 -1.5)
+     (size   0.05 1.0)
+     (drawer (surface-drawer (image "images/particles/smoke2.png")))
+     (distribution (point-distribution))
+     )
+
+    ;; Water
+    (particle-system
+     (lifetime   0.6)
+     (count      250)
+     (z-pos  1000)
+     (pos 532 640)
+     (velocity    150 200)
+     (cone   70 110)
+     (gravity 0 5)
+     (size   1.0 3.0)
+     (drawer (spark-drawer (color 0.7 0.8 1.0)))
+     (distribution (line-distribution (x1 -5) (y1 0) (x2 5) (y2 0)))
+     )
+
+    ;; Water bounce
+    (particle-system
+     (lifetime   .2)
+     (count      50)
+     (z-pos  1000)
+     (pos 532 836)
+     (velocity    50 100)
+     (cone   -110 -70)
+     (gravity 0 5)
+     (size   1.0 3.0)
+     (drawer (spark-drawer (color 0.7 0.8 1.0)))
+     (distribution (line-distribution (x1 -40) (y1 0) (x2 40) (y2 0)))
+     )
+
+    ;; Fire sparks
+    (particle-system
+     (drawer (spark-drawer (color 1.0 0.5 0.5)))
+     (z-pos 900)
+     (pos 768 832)
+     (velocity 300 550)
+     (cone -115 -65)
+     (gravity 0  5)
+     (distribution (line-distribution (x1 -50)  (y1 0) (x2 50) (y2 0))))
+    
+    ;; Fire smoke
+    (particle-system
+     (pos 768 832)
+     (lifetime 8)
+     (count 30)
+     (z-pos -200)
+     (drawer (surface-drawer (image "images/particles/smoke2.png")
+                             (blendfunc-src "src_alpha")
+                             (blendfunc-dst "one_minus_src_alpha")))
+     (velocity 70 100)
+     (cone -115 -65)
+     (gravity 0 -1)
+     (size 1.0 3.0)
+     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0))))
+
+    ;; Burning player
+    (particle-system
+     (name "player_flames")
+     (pos 0 0)
+     (count 40)
+     (z-pos 1000)
+     (lifetime   .5)
+     (velocity 100 200)
+     (color-begin 1.0 1.0 1.0 0.5)
+     (cone -95 -85)
+     (gravity 0 0)
+     (size 0.6 0.8)
+     (distribution (rect-distribution (x1 -10) (y1 -110) (x2 10) (y2 0)))
+     (drawer (surface-drawer (image "images/particles/smoke.png")
+                             (blendfunc-src "src_alpha")
+                             (blendfunc-dst "one"))))
+
+    (particle-system
+     (name "player_flames2")
+     (lifetime   .5)
+     (pos 0 0)
+     (count 40)
+     (z-pos -100)
+     (velocity 100 200)
+     (cone -95 -85)
+     (gravity 0 0)
+        
+     (size 0.8 0.8)
+     (distribution (rect-distribution (x1 -10) (y1 -110) (x2 10) (y2 0)))
+     (drawer (surface-drawer (image "images/particles/smoke.png")
+                             (blendfunc-src "src_alpha")
+                             (blendfunc-dst "one"))))
+
+    ;; Fire Light
+    (particle-system
+     (pos 768 800)
+     (lifetime 1.0)
+     (count 20)
+     (layer "light")
+     (z-pos 1000)
+     (velocity 200 300)
+     (cone -95 -85)
+     (gravity 0 0)
+     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0)))
+     (drawer (surface-drawer (image "images/particles/fire_light.png")
+                             (blendfunc-src "src_alpha")
+                             (blendfunc-dst "one"))))
+    
+    ;; Fire itself
+    (particle-system
+     (pos 768 832)
+     (count 50)
+     (z-pos 1000)
+     (layer "highlight")
+     (velocity 200 300)
+     (cone -95 -85)
+     (gravity 0 0)
+     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0)))
+     (drawer (surface-drawer (image "images/particles/smoke.png")
+                             (blendfunc-src "src_alpha")
+                             (blendfunc-dst "one"))))
+
+    (particle-system
+     (pos 768 832)
+     (count 50)
+     (z-pos -10)
+     (velocity 200 300)
+     (cone -95 -85)
+     (gravity 0 0)
+     (distribution (line-distribution (x1 -50) (y1 0) (x2 50) (y2 0)))
+     (drawer (surface-drawer (image "images/particles/smoke.png")
+                             (blendfunc-src "src_alpha")
+                             (blendfunc-dst "one"))))
+
+    (trigger
+     (name "fire-trigger")
+     (x 722)
+     (y 686)
+     (width 95)
+     (height 146)
+     (script "startfire()"))
+
+    (trigger
+     (name "water-trigger")
+     (x 515) 
+     (y 687)
+     (width 25)
+     (height 146)
+     (script "stopfire()"))
+
+    (box
+      (name "Box0")
+      (sprite "images/objects/box.sprite")
+      (pos 350 700)
+      (vel 10 -400)
+      (gravity 150)
+    )
+    (box
+      (name "Box1")
+      (sprite "images/objects/box.sprite")
+      (pos 555 700)
+      (vel -10 -200)
+      (gravity 150)
+    )
+    (character
+      (name "bob")
+      (pos 320 831)
+      (z-pos -50)
+      (action "Aim")
+      (sprite3d "models/characters/bob/bob.wsprite")
+    )
+    (character
+      (name "frank")
+      (pos 200 831)
+      (sprite3d "models/characters/sophie/sophie.wsprite")
+    )
+    (spider-mine
+      (name "spider2")
+      (pos 550 550)
+    )
+    (hedgehog
+      (name "hedgehog1")
+      (pos 1100 550)
+    )
+;    (elevator
+;      (name "elevator1")
+;      (sprite "images/objects/box.sprite")
+;      (pos 1100 750)
+;    )
+    (scriptable-object
+      (sprite "images/objects/bar.sprite")
+      (pos 256 746)
+      (z-pos 100))
+
+    (scriptable-object
+      (sprite "images/objects/vrdoor-color.sprite")
+      (highlight "images/objects/vrdoor-highlight.sprite")
+      (pos 384 704)
+      (script "set_sector(\"sectors/industrial/industrial.wst\")")
+      (use-verb "Enter")
+    )
+
+
+    (scriptable-object
+      (sprite    "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light     "images/objects/apartmentlamp_light.sprite")
+      (pos 320 640))
+
+
+  (tilemap (name "background") (width 100) (height 30) (z-pos -1000)
+    (data
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 1000)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 8 9 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 24 25 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 39 40 41 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 55 56 57 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1 2 3 4 5 6 0 0 0 0 0 1 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 17 18 19 20 21 22 0 0 0 0 0 17 18 19 20 21 22 0 0 0 0 0 0 0 0 0 0 17 18 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 0 0 0 0 0 33 34 35 36 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 0 0 0 0 0 49 50 51 52 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      2 3 4 5 6 0 0 1 2 3 4 5 6 1 2 3 4 4 3 4 4 5 6 0 0 1 2 3 4 3 4 4 4 3 4 5 6 0 0 0 0 0 0 0 0 1 2 3 4 3 4 4 4 3 4 5 2 3 4 3 4 4 4 3 4 5 2 3 4 3 4 4 4 3 4 3 4 5 6 0 0 0 0 1 2 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      18 19 20 21 22 0 0 17 18 19 20 21 22 17 18 19 20 20 19 20 20 21 22 0 0 17 18 19 20 19 20 20 20 19 20 21 22 0 0 0 0 0 0 0 0 17 18 19 20 19 20 20 20 19 20 21 18 19 20 19 20 20 20 19 20 21 18 19 20 19 20 20 20 19 20 19 20 21 22 0 0 0 0 17 18 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      34 35 36 37 38 0 0 65 66 67 68 69 70 65 66 67 68 68 67 68 68 69 70 0 0 65 66 67 68 67 68 68 68 67 68 69 70 0 0 0 0 0 0 0 0 65 66 67 68 67 68 68 68 67 68 69 66 67 68 67 68 68 68 67 68 69 66 67 68 67 68 68 68 67 68 67 68 69 70 0 0 1 4 41 42 39 40 5 6 0 0 0 0 0 0 0 0 1 2 3 
+      50 51 52 53 54 0 0 81 82 83 84 85 86 81 82 83 84 84 83 84 84 85 86 0 0 81 82 83 84 83 84 84 84 83 84 85 86 0 0 0 0 0 0 0 0 81 82 83 84 83 84 84 84 83 84 85 82 83 84 83 84 84 84 83 84 85 82 83 84 83 84 84 84 83 84 83 84 85 86 0 0 17 18 57 58 55 56 21 22 0 0 0 0 0 0 0 0 17 18 19 
+      34 35 52 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 41 42 35 36 35 36 39 40 5 6 0 0 0 0 0 0 33 34 35 
+      50 51 52 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 57 58 36 36 51 52 55 56 21 22 0 0 0 0 0 0 33 34 35 
+      34 35 36 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 4 41 42 36 51 52 52 35 36 35 36 39 40 5 6 0 0 0 0 49 50 51 
+      50 51 36 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 57 58 35 36 35 35 51 52 35 36 55 56 21 22 0 0 0 0 33 34 35 
+      34 35 36 39 40 4 4 3 4 4 3 3 4 4 3 4 4 3 3 4 4 3 4 4 4 5 6 0 0 1 2 2 3 4 4 4 3 4 4 4 5 6 0 0 1 2 2 3 4 4 3 4 4 4 5 6 0 0 1 2 2 3 4 4 3 4 4 3 4 4 4 5 6 0 0 1 4 41 42 35 36 51 52 51 51 52 51 51 52 35 36 39 40 5 6 0 0 49 50 51 
+      34 35 52 55 56 20 20 19 20 20 19 19 20 20 19 20 20 19 19 20 20 19 20 20 20 21 22 0 0 17 18 18 19 20 20 20 19 20 20 20 21 22 0 0 17 18 18 19 20 20 19 20 20 20 21 22 0 0 17 18 18 19 20 20 19 20 20 19 20 20 20 21 22 0 0 17 18 57 58 51 52 35 36 36 36 51 51 51 52 51 52 55 56 21 22 0 0 33 34 35 
+      34 35 52 35 51 36 36 51 36 52 35 51 36 36 51 36 52 35 51 36 36 51 36 36 36 39 40 4 4 41 42 36 36 51 36 36 51 36 36 36 39 40 4 4 41 42 36 36 36 36 51 36 36 36 39 40 4 4 41 42 36 36 36 36 51 36 36 51 36 36 36 39 40 4 4 41 42 36 36 51 36 35 36 52 52 36 36 36 51 36 51 35 36 39 3 3 3 41 42 51 
+      50 51 52 51 51 52 52 51 52 52 51 51 52 52 51 52 52 51 51 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 51 52 52 51 52 52 52 55 56 20 20 57 58 52 51 52 52 51 52 36 35 52 52 52 36 52 36 51 51 55 19 19 19 57 58 35 
+      66 67 68 67 67 68 68 67 68 68 67 67 68 68 67 68 68 67 67 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 67 68 68 67 68 68 68 68 68 67 68 67 68 68 67 68 68 67 68 68 67 68 68 68 68 67 68 68 67 68 68 67 68 68 67 68 
+     )
+   )
+
+  (tilemap (name "foreground") (width 100) (height 30)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+
+ )
+
+;; EOF ;;


Property changes on: trunk/windstille/data/sectors/newformat2/newformat2.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/sectors/virtualreality/virtualreality.wst (from rev 2544, trunk/windstille/data/levels/virtualreality.wst)


Property changes on: trunk/windstille/data/sectors/virtualreality/virtualreality.wst
___________________________________________________________________
Name: svn:mergeinfo
   + 

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-04 13:39:11 UTC (rev 2545)
@@ -318,7 +318,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-200, 300-170), Sizef(400, 340)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-250, 300-170), Sizef(500, 340)), 
                                                          "Select Scenario",
                                                          manager->get_root()));
 
@@ -326,13 +326,13 @@
   menu->set_font(Fonts::vera20);
 
   std::vector<std::string> scenarios;
-  scenarios.push_back("levels/apartment.wst");
-  scenarios.push_back("levels/bluestone.wst");
-  scenarios.push_back("levels/forest.wst");
-  scenarios.push_back("levels/industrial.wst");
-  scenarios.push_back("levels/intro.wst");
-  scenarios.push_back("levels/newformat2.wst");
-  scenarios.push_back("levels/virtualreality.wst");
+  scenarios.push_back("sectors/apartment/apartment.wst");
+  scenarios.push_back("sectors/bluestone/bluestone.wst");
+  scenarios.push_back("sectors/forest/forest.wst");
+  scenarios.push_back("sectors/industrial/industrial.wst");
+  scenarios.push_back("sectors/intro/intro.wst");
+  scenarios.push_back("sectors/newformat2/newformat2.wst");
+  scenarios.push_back("sectors/virtualreality/virtualreality.wst");
   
   for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-04 13:39:11 UTC (rev 2545)
@@ -41,8 +41,15 @@
 
   void update();
 
+  /** Load script from \a filename and runs it */
   void run_script_file(const std::string& filename);
-  void run_script(const std::string& string, const std::string& sourcename);
+
+  /** Takes the Squirrel expression in \a script and evaluates it, \a
+      sourcename is the filename and used in error messages */
+  void run_script(const std::string& script, const std::string& sourcename);
+
+  /** Load script from \a in and runs it, \a sourcename is the
+      filename and used in error messages */
   void run_script(std::istream& in, const std::string& sourcename);
 
   HSQUIRRELVM get_vm() const

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-04 13:39:11 UTC (rev 2545)
@@ -192,7 +192,7 @@
 
   sound_manager->play_music(music);
   if (init_script != "")
-    script_manager->run_script_file(init_script);
+    script_manager->run_script_file(get_directory() + init_script);
 }
 
 void
@@ -387,10 +387,19 @@
   return ambient_light;
 }
 
-const std::string&
+std::string
 Sector::get_filename () const
 {
   return filename;
 }
+
+std::string
+Sector::get_directory() const
+{
+  // FIXME: Not pretty
+  std::string directory = filename;
+  directory.erase(directory.rfind('/')+1);
+  return directory;
+}
 
 /* EOF */

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-04 13:39:11 UTC (rev 2545)
@@ -77,7 +77,8 @@
   Sector(const std::string& filename);
   ~Sector();
 
-  const std::string& get_filename () const;
+  std::string get_filename() const;
+  std::string get_directory() const;
 
   void draw(SceneContext& gc);
   void update(float delta);
@@ -87,8 +88,8 @@
    */
   void activate();
   
-  int get_width  () const;
-  int get_height () const;
+  int get_width() const;
+  int get_height() const;
 
   /**
    * Set ambient light, ie. the light that illuminates the whole sector

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/src/objects/character.cpp	2009-03-04 13:39:11 UTC (rev 2545)
@@ -70,13 +70,9 @@
 void
 Character::use()
 {
-  std::string filename = basename(Sector::current()->get_filename());
-  filename.erase(filename.find('.'));
-  filename = "scripts/" + filename + "/" + name + ".nut";
-
   try 
     {
-      script_manager->run_script_file(filename);
+      script_manager->run_script_file(Sector::current()->get_directory() + name + ".nut");
     } catch (std::exception& e) {
       console << e.what() << std::endl;
     }

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-03-03 21:09:08 UTC (rev 2544)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-03-04 13:39:11 UTC (rev 2545)
@@ -113,7 +113,8 @@
 void
 ScriptableObject::use()
 {
-  script_manager->run_script(use_script, "ScriptableObject");
+  if (!use_script.empty())
+    script_manager->run_script(use_script, name);
 }
 
 void



From grumbel at mail.berlios.de  Wed Mar  4 18:48:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 18:48:41 +0100
Subject: [Windstille-commit] r2547 - trunk/windstille/src/scripting
Message-ID: <200903041748.n24Hmfbw028381@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 18:48:40 +0100 (Wed, 04 Mar 2009)
New Revision: 2547

Modified:
   trunk/windstille/src/scripting/README
   trunk/windstille/src/scripting/game_objects.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/wrapper.interface.hpp
Log:
Minor cleanup in scripting

Modified: trunk/windstille/src/scripting/README
===================================================================
--- trunk/windstille/src/scripting/README	2009-03-04 13:41:18 UTC (rev 2546)
+++ trunk/windstille/src/scripting/README	2009-03-04 17:48:40 UTC (rev 2547)
@@ -23,7 +23,8 @@
 - game_objects.?pp contains wrapper classes around objects to make
   them exportable to squirrel
 
-- wrapper.interface.hpp include files for wrappper.cpp
+- wrapper.interface.hpp include files that are then exported to
+  scripting via the generated wrappper.cpp
  
 
 # EOF #

Modified: trunk/windstille/src/scripting/game_objects.hpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.hpp	2009-03-04 13:41:18 UTC (rev 2546)
+++ trunk/windstille/src/scripting/game_objects.hpp	2009-03-04 17:48:40 UTC (rev 2547)
@@ -20,30 +20,23 @@
 #define HEADER_WINDSTILLE_SCRIPTING_GAME_OBJECTS_HPP
 
 #ifndef SCRIPTING_API
-#include "engine/game_object.hpp"
-#include "objects/test_object.hpp"
-#include "objects/player.hpp"
-#include "objects/scriptable_object.hpp"
-#include "util/ref.hpp"
-
-typedef GameObject _GameObject;
-typedef TestObject _TestObject;
-typedef Player _Player;
-typedef ScriptableObject _ScriptableObject;
-typedef Entity _Entity;
+#  include "engine/game_object.hpp"
+#  include "objects/test_object.hpp"
+#  include "objects/player.hpp"
+#  include "objects/scriptable_object.hpp"
+#  include "util/ref.hpp"
 #endif
 
-namespace Scripting
-{
+namespace Scripting {
 
 class GameObject
 {
 #ifndef SCRIPTING_API
 protected:
-  Ref<_GameObject> object;
+  Ref< ::GameObject> object;
   
 public:
-  GameObject(_GameObject* _object)
+GameObject(::GameObject* _object)
     : object(_object)
   {}
   virtual ~GameObject()
@@ -61,15 +54,15 @@
 {
 #ifndef SCRIPTING_API
 public:
-  TestObject(_TestObject* _object)
+  TestObject(::TestObject* _object)
     : GameObject(_object)
   {}
   virtual ~TestObject()
   {}
 
-  _TestObject* obj() const
+  ::TestObject* obj() const
   {
-    return reinterpret_cast<_TestObject*> (object.get());
+    return reinterpret_cast< ::TestObject*> (object.get());
   }
 #endif
 
@@ -86,15 +79,15 @@
 {
 #ifndef SCRIPTING_API
 public:
-  Player(_Player* _player)
+  Player(::Player* _player)
     : GameObject(_player)
   {}
   virtual ~Player()
   {}
-
-  _Player* obj() const
+  
+  ::Player* obj() const
   {
-    return reinterpret_cast<_Player*> (object.get());
+    return reinterpret_cast< ::Player*> (object.get());
   }
 #endif
 
@@ -107,15 +100,15 @@
 {
 #ifndef SCRIPTING_API
 public:
-  ScriptableObject(_ScriptableObject* _object)
+  ScriptableObject(::ScriptableObject* _object)
     : GameObject(_object)
   {}
   virtual ~ScriptableObject()
   {}
 
-  _ScriptableObject* obj() const
+  ::ScriptableObject* obj() const
   {
-    return reinterpret_cast<_ScriptableObject*> (object.get());
+    return reinterpret_cast< ::ScriptableObject*> (object.get());
   }
 #endif
 
@@ -124,7 +117,7 @@
   void start_flash(float speed);
 };
  
-}
+} // namespace Scripting
 
 #endif
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-04 13:41:18 UTC (rev 2546)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-04 17:48:40 UTC (rev 2547)
@@ -312,7 +312,7 @@
   GameSession::current()->fadein(time);
 }
 
-int  render_mask_get()
+int render_mask_get()
 {
   return GameSession::current()->get_scene_context()->get_render_mask();
 }

Modified: trunk/windstille/src/scripting/wrapper.interface.hpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.interface.hpp	2009-03-04 13:41:18 UTC (rev 2546)
+++ trunk/windstille/src/scripting/wrapper.interface.hpp	2009-03-04 17:48:40 UTC (rev 2547)
@@ -1,8 +1,28 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
 #ifndef SCRIPTING_API
-#define __custom
-#define __suspend
+#  define __custom
+#  define __suspend
 #endif
 
+// All functions that shall get exported to the scripting interface
+// have to be included here
 #include "interface.hpp"
 #include "game_objects.hpp"
 



From grumbel at mail.berlios.de  Wed Mar  4 19:38:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 19:38:27 +0100
Subject: [Windstille-commit] r2548 - in trunk/windstille/src: app engine hud
	objects screen scripting
Message-ID: <200903041838.n24IcRen001652@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 19:38:25 +0100 (Wed, 04 Mar 2009)
New Revision: 2548

Modified:
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/engine/camera.cpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/speech_manager.hpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/trigger.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Replaced script_manager with ScriptManager::current()

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/app/console.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -321,7 +321,7 @@
 ConsoleImpl::get_roottable()
 {
   std::vector<std::string> roottable;
-  HSQUIRRELVM v = script_manager->get_vm();
+  HSQUIRRELVM v = ScriptManager::current()->get_vm();
 
   sq_pushroottable(v);
 
@@ -448,7 +448,7 @@
     }
   else if (command_line == "show")
     {
-      HSQUIRRELVM v = script_manager->get_vm();
+      HSQUIRRELVM v = ScriptManager::current()->get_vm();
 
       int size = sq_getsize(v, -1);
       console << size << " elements on the root table" << std::endl;
@@ -492,7 +492,7 @@
   int i = str.length();
   const char* buffer = str.c_str();
 
-  HSQUIRRELVM vm = script_manager->get_vm();
+  HSQUIRRELVM vm = ScriptManager::current()->get_vm();
   int oldtop = sq_gettop(vm); 
   try {
     int retval = 1;

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -162,11 +162,11 @@
   if (debug) std::cout << "Initialising ScriptManager" << std::endl;
   texture_manager  = new TextureManager();
   surface_manager  = new SurfaceManager();
-  script_manager   = new ScriptManager();
+  new ScriptManager();
   sprite2d_manager = new SpriteManager();
   sprite3d_manager = new sprite3d::Manager();
 
-  script_manager->run_script_file("scripts/windstille.nut");
+  ScriptManager::current()->run_script_file("scripts/windstille.nut");
 
   { // Fill controller_description with data
     controller_description.add_button("primary-button",   PRIMARY_BUTTON);
@@ -225,9 +225,8 @@
   delete sprite2d_manager;
   sprite2d_manager = 0;
 
-  delete script_manager;
-  script_manager = 0;
-
+  delete ScriptManager::current();
+  
   delete surface_manager;
   surface_manager = 0;
 

Modified: trunk/windstille/src/engine/camera.cpp
===================================================================
--- trunk/windstille/src/engine/camera.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/engine/camera.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -129,7 +129,7 @@
 
         if (p == path.back())
           {
-            script_manager->fire_wakeup_event(ScriptManager::CAMERA_DONE);
+            ScriptManager::current()->fire_wakeup_event(ScriptManager::CAMERA_DONE);
             set_mode(CAMERA_INACTIVE);
           }
       }

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -19,7 +19,7 @@
 
 using namespace Scripting;
 
-ScriptManager* script_manager = 0;
+ScriptManager* ScriptManager::current_ = 0;
 
 static void printfunc(HSQUIRRELVM, const char* str, ...)
 {
@@ -34,6 +34,9 @@
 
 ScriptManager::ScriptManager()
 {
+  assert(current_ == 0);
+  current_ = this;
+
   v = sq_open(1024);
   if(v == 0)
     throw std::runtime_error("Couldn't initialize squirrel vm");
@@ -66,6 +69,8 @@
     sq_release(v, &(i->vm_obj));
 
   sq_close(v);
+
+  current_ = 0;
 }
 
 static SQInteger squirrel_read_char(SQUserPointer file)

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -35,7 +35,12 @@
  */
 class ScriptManager
 {
+private:
+  static ScriptManager* current_;
 public:
+  static ScriptManager* current() { return current_; }
+
+public:
   ScriptManager();
   ~ScriptManager();
 
@@ -106,8 +111,6 @@
   HSQUIRRELVM v;
 };
 
-extern ScriptManager* script_manager;
-
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -60,7 +60,7 @@
     player(0)    
 {
   // make sure squirrel has an "objects" table
-  script_manager->run_script(
+  ScriptManager::current()->run_script(
       "if(! (\"" OBJECTS_TABLE "\" in this)) {"
       "  " OBJECTS_TABLE " <- {};"
       "}", "");
@@ -192,7 +192,7 @@
 
   sound_manager->play_music(music);
   if (init_script != "")
-    script_manager->run_script_file(get_directory() + init_script);
+    ScriptManager::current()->run_script_file(get_directory() + init_script);
 }
 
 void
@@ -265,7 +265,7 @@
   using namespace Scripting;
 
   // get objects table
-  HSQUIRRELVM v = script_manager->get_vm();
+  HSQUIRRELVM v = ScriptManager::current()->get_vm();
   sq_pushroottable(v);
   sq_pushstring(v, OBJECTS_TABLE, -1);
   if(SQ_FAILED(sq_get(v, -2)))
@@ -320,7 +320,7 @@
   using namespace Scripting;
 
   // get objects table
-  HSQUIRRELVM v = script_manager->get_vm();
+  HSQUIRRELVM v = ScriptManager::current()->get_vm();
   sq_pushroottable(v);
   sq_pushstring(v, OBJECTS_TABLE, -1);
   if(SQ_FAILED(sq_get(v, -2)))

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/hud/conversation.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -162,7 +162,7 @@
                                                    choices[selection].text);
       choices.clear();
       GameSession::current()->set_control_state(GameSession::GAME);
-      script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
+      ScriptManager::current()->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
     }
 }
 

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -131,7 +131,7 @@
               if (text_area->is_progress_complete())
                 {
                   GameSession::current()->set_control_state(GameSession::GAME);
-                  script_manager->fire_wakeup_event(ScriptManager::DIALOG_CLOSED);
+                  ScriptManager::current()->fire_wakeup_event(ScriptManager::DIALOG_CLOSED);
                 }
               else if (delay > 0.2)
                 text_area->set_progress_complete();

Modified: trunk/windstille/src/hud/speech_manager.hpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.hpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/hud/speech_manager.hpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -59,9 +59,19 @@
 public:
   SpeechManager();
   ~SpeechManager();
+  
+  /** Add a speech bubble or a series of speech bubbles to the scene,
+   *  lines seperated by newline are displayed in a series of speech
+   *  bubbles.
+   * 
+   *  @param text  The content of the speech bubble
+   *  @param pos   The position of the speech bubble in screen coordinates
+   *  @param color The color of the speech bubble
+   */
+  void add(const std::string& text, 
+           const Vector2f& pos, 
+           const Color& color = Color(1.0f, 1.0f, 1.0f));
 
-  void add(const std::string& text, const Vector2f& pos, const Color& color = Color(1.0f, 1.0f, 1.0f));
-
   void draw();
   void update(float delta, const Controller& controller);
 

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/objects/character.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -72,7 +72,7 @@
 {
   try 
     {
-      script_manager->run_script_file(Sector::current()->get_directory() + name + ".nut");
+      ScriptManager::current()->run_script_file(Sector::current()->get_directory() + name + ".nut");
     } catch (std::exception& e) {
       console << e.what() << std::endl;
     }

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -114,7 +114,7 @@
 ScriptableObject::use()
 {
   if (!use_script.empty())
-    script_manager->run_script(use_script, name);
+    ScriptManager::current()->run_script(use_script, name);
 }
 
 void

Modified: trunk/windstille/src/objects/trigger.cpp
===================================================================
--- trunk/windstille/src/objects/trigger.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/objects/trigger.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -73,7 +73,7 @@
   if(last_trigger == false) {
     triggered = true;
     try {
-      script_manager->run_script(script, "TriggerObject");
+      ScriptManager::current()->run_script(script, "TriggerObject");
     } catch(std::exception& e) {
       std::cerr << "Couldn't run trigger-script: " << e.what() << "\n";
     }

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -126,7 +126,7 @@
   impl->pause = false;
   
   if (1)
-    script_manager->run_script_file("scripts/init_script_vars.nut");
+    ScriptManager::current()->run_script_file("scripts/init_script_vars.nut");
     
   set_sector(impl->filename);
 }
@@ -210,7 +210,7 @@
   if (!pause)
     {
       game_time += delta;
-      script_manager->update();
+      ScriptManager::current()->update();
       
       view.update(delta, controller);
       sector->update(delta);
@@ -222,7 +222,7 @@
             {
               fade_state = RUNNING;
               fadeout_value = 0.0f;
-              script_manager->fire_wakeup_event(ScriptManager::FADE_DONE);
+              ScriptManager::current()->fire_wakeup_event(ScriptManager::FADE_DONE);
             }
           else
             {
@@ -234,7 +234,7 @@
           if (fadeout_value >= 1.0f)
             { 
               fadeout_value = 1.0f;
-              script_manager->fire_wakeup_event(ScriptManager::FADE_DONE);
+              ScriptManager::current()->fire_wakeup_event(ScriptManager::FADE_DONE);
 
               switch(next_action)
                 {

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-04 17:48:40 UTC (rev 2547)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-04 18:38:25 UTC (rev 2548)
@@ -125,22 +125,22 @@
 
 void wait(HSQUIRRELVM vm, float time)
 {
-  script_manager->set_wakeup_event(vm, ScriptManager::TIME, time);
+  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::TIME, time);
 }
 
 void wait_for_dialog(HSQUIRRELVM vm)
 {
-  script_manager->set_wakeup_event(vm, ScriptManager::DIALOG_CLOSED);
+  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::DIALOG_CLOSED);
 }
 
 void wait_for_camera(HSQUIRRELVM vm)
 {
-  script_manager->set_wakeup_event(vm, ScriptManager::CAMERA_DONE);
+  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::CAMERA_DONE);
 }
 
 void wait_for_fade(HSQUIRRELVM vm)
 {
-  script_manager->set_wakeup_event(vm, ScriptManager::FADE_DONE);
+  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::FADE_DONE);
 }
 
 void speech_show(const std::string& text, float x, float y)
@@ -177,7 +177,7 @@
 
 bool run_before(HSQUIRRELVM vm)
 {
-  return script_manager->run_before(vm);
+  return ScriptManager::current()->run_before(vm);
 }
 
 void load_state(HSQUIRRELVM v, const std::string& filename)
@@ -240,7 +240,7 @@
 
 void wait_for_conversation(HSQUIRRELVM v)
 {
-  script_manager->set_wakeup_event(v, ScriptManager::CONVERSATION_CLOSED);
+  ScriptManager::current()->set_wakeup_event(v, ScriptManager::CONVERSATION_CLOSED);
 }
 
 SQInteger display(HSQUIRRELVM v) __custom



From grumbel at mail.berlios.de  Wed Mar  4 19:42:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 19:42:27 +0100
Subject: [Windstille-commit] r2549 - in trunk/windstille/src: app display
	particles screen sprite2d
Message-ID: <200903041842.n24IgRXg003694@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 19:42:26 +0100 (Wed, 04 Mar 2009)
New Revision: 2549

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/display/surface.cpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
   trunk/windstille/src/sprite2d/data.cpp
Log:
Replaced surface_manager with SurfaceManager::current()

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -161,7 +161,7 @@
 
   if (debug) std::cout << "Initialising ScriptManager" << std::endl;
   texture_manager  = new TextureManager();
-  surface_manager  = new SurfaceManager();
+  new SurfaceManager();
   new ScriptManager();
   sprite2d_manager = new SpriteManager();
   sprite3d_manager = new sprite3d::Manager();
@@ -227,8 +227,7 @@
 
   delete ScriptManager::current();
   
-  delete surface_manager;
-  surface_manager = 0;
+  delete SurfaceManager::current();
 
   delete texture_manager;
   texture_manager = 0;

Modified: trunk/windstille/src/display/surface.cpp
===================================================================
--- trunk/windstille/src/display/surface.cpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/display/surface.cpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -48,7 +48,7 @@
 Surface::Surface(const std::string& filename)
 {
   // FIXME: a bit ugly, should move some of the surface_manager code over here
-  *this = surface_manager->get(filename);
+  *this = SurfaceManager::current()->get(filename);
 }
 
 static int power_of_two(int val) {

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -31,10 +31,12 @@
 #include "texture_manager.hpp"
 #include "physfs/physfs_sdl.hpp"
 
-SurfaceManager* surface_manager = 0;
+SurfaceManager* SurfaceManager::current_ = 0;
 
 SurfaceManager::SurfaceManager()
 {
+  assert(current_);
+  current_ = this;
 }
 
 SurfaceManager::~SurfaceManager()
@@ -47,6 +49,8 @@
         std::cerr << "Warning: Surface '" << i->first << "' not released.\n";
     }
   }
+
+  current_ = 0;
 }
 
 Surface

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -35,7 +35,12 @@
  */
 class SurfaceManager
 {
+private:
+  static SurfaceManager* current_; 
 public:
+  static SurfaceManager* current() { return current_; } 
+
+public:
   SurfaceManager();
   ~SurfaceManager();
 
@@ -59,8 +64,6 @@
   Surfaces surfaces;
 };
 
-extern SurfaceManager* surface_manager;
-
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -61,7 +61,7 @@
   props.get("blendfunc-dst", blendfunc_dst_str);
   props.print_unused_warnings("SurfaceDrawer");
   
-  surface = surface_manager->get(surface_file);
+  surface = SurfaceManager::current()->get(surface_file);
 
   blendfunc_src  = string2blendfunc(blendfunc_src_str);
   blendfunc_dest = string2blendfunc(blendfunc_dst_str);

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -270,7 +270,7 @@
     }
 
   sprite2d_manager->cleanup();
-  surface_manager->cleanup();
+  SurfaceManager::current()->cleanup();
 }
 
 void

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-03-04 18:38:25 UTC (rev 2548)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-03-04 18:42:26 UTC (rev 2549)
@@ -131,7 +131,7 @@
 
       for(std::vector<std::string>::iterator file = image_files.begin(); file != image_files.end(); ++file)
         {
-          action->surfaces.push_back(surface_manager->get(dir + "/" + *file));
+          action->surfaces.push_back(SurfaceManager::current()->get(dir + "/" + *file));
         }
     }
   else if(reader.get("image-grid", grid_reader)) 
@@ -149,7 +149,7 @@
       if(filename == "" || x_size <= 0 || y_size <= 0)
         throw std::runtime_error("Invalid or too few data in image-grid");
       
-      surface_manager->load_grid(dir + "/" + filename,
+      SurfaceManager::current()->load_grid(dir + "/" + filename,
                                  action->surfaces, x_size, y_size);
     }
   reader.print_unused_warnings("sprite action");



From grumbel at mail.berlios.de  Wed Mar  4 19:44:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 19:44:27 +0100
Subject: [Windstille-commit] r2550 - in trunk/windstille/src: display screen
	sprite2d
Message-ID: <200903041844.n24IiRB2004531@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 19:44:26 +0100 (Wed, 04 Mar 2009)
New Revision: 2550

Modified:
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/screen/sprite2dview.hpp
   trunk/windstille/src/sprite2d/data.cpp
Log:
Replaced surface_manager with SurfaceManager::current()

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-03-04 18:42:26 UTC (rev 2549)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-03-04 18:44:26 UTC (rev 2550)
@@ -35,7 +35,7 @@
 
 SurfaceManager::SurfaceManager()
 {
-  assert(current_);
+  assert(current_ == 0);
   current_ = this;
 }
 

Modified: trunk/windstille/src/screen/sprite2dview.hpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.hpp	2009-03-04 18:42:26 UTC (rev 2549)
+++ trunk/windstille/src/screen/sprite2dview.hpp	2009-03-04 18:44:26 UTC (rev 2550)
@@ -60,6 +60,7 @@
   bool shuffle;
 
   bool auto_scroll;
+
 public:
   Sprite2DView();
   ~Sprite2DView();
@@ -78,6 +79,7 @@
 
   void set_sprite(const std::string& filename);
   void prepare_sprite(Sprite& sprite);
+
 private:
   Sprite2DView (const Sprite2DView&);
   Sprite2DView& operator= (const Sprite2DView&);

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-03-04 18:42:26 UTC (rev 2549)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-03-04 18:44:26 UTC (rev 2550)
@@ -150,7 +150,7 @@
         throw std::runtime_error("Invalid or too few data in image-grid");
       
       SurfaceManager::current()->load_grid(dir + "/" + filename,
-                                 action->surfaces, x_size, y_size);
+                                           action->surfaces, x_size, y_size);
     }
   reader.print_unused_warnings("sprite action");
   



From grumbel at mail.berlios.de  Wed Mar  4 20:50:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 20:50:04 +0100
Subject: [Windstille-commit] r2551 - trunk/windstille/src/engine
Message-ID: <200903041950.n24Jo4PL002003@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 20:50:03 +0100 (Wed, 04 Mar 2009)
New Revision: 2551

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
Log:
Minor cleanup, no semantic changes

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-04 18:44:26 UTC (rev 2550)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-04 19:50:03 UTC (rev 2551)
@@ -45,14 +45,22 @@
   sqstd_seterrorhandlers(v);
   // register squirrel libs
   sq_pushroottable(v);
+
+  /* FIXME: None of these should be needed for scripts
+
   if(sqstd_register_bloblib(v) < 0)
     throw SquirrelError(v, "Couldn't register blob lib");
+
   if(sqstd_register_iolib(v) < 0)
     throw SquirrelError(v, "Couldn't register io lib");
+
   if(sqstd_register_systemlib(v) < 0)
     throw SquirrelError(v, "Couldn't register system lib");
+  */
+
   if(sqstd_register_mathlib(v) < 0)
     throw SquirrelError(v, "Couldn't register math lib");
+
   if(sqstd_register_stringlib(v) < 0)
     throw SquirrelError(v, "Couldn't register string lib");
 
@@ -129,35 +137,43 @@
 void
 ScriptManager::update()
 {
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ) {
-    SquirrelVM& squirrel_vm = *i;
-    int vm_state = sq_getvmstate(squirrel_vm.vm);
+  // 
+  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ) 
+    {
+      SquirrelVM& squirrel_vm = *i;
+      int vm_state = sq_getvmstate(squirrel_vm.vm);
     
-    if(vm_state == SQ_VMSTATE_SUSPENDED && squirrel_vm.wakeup_time > 0 && game_time >= squirrel_vm.wakeup_time) 
-      {
-        squirrel_vm.waiting_for_events = WakeupData(NO_EVENT);
-        try {
-          if(sq_wakeupvm(squirrel_vm.vm, false, false, true) < 0) {
-            throw SquirrelError(squirrel_vm.vm, "Couldn't resume script");
-          }
-        } catch(std::exception& e) {
-          std::cerr << "Problem executing script: " << e.what() << "\n";
-          sq_release(v, &squirrel_vm.vm_obj);
+      if (vm_state == SQ_VMSTATE_SUSPENDED && 
+          squirrel_vm.wakeup_time > 0 && 
+          game_time >= squirrel_vm.wakeup_time) 
+        {
+          squirrel_vm.waiting_for_events = WakeupData(NO_EVENT);
+          try 
+            {
+              if(sq_wakeupvm(squirrel_vm.vm, false, false, true) < 0) 
+                {
+                  throw SquirrelError(squirrel_vm.vm, "Couldn't resume script");
+                }
+            } 
+          catch(std::exception& e) 
+            {
+              std::cerr << "Problem executing script: " << e.what() << "\n";
+              sq_release(v, &squirrel_vm.vm_obj);
+              i = squirrel_vms.erase(i);
+              continue;
+            }
+        }
+	
+      if (vm_state != SQ_VMSTATE_SUSPENDED)
+        {
+          sq_release(v, &(squirrel_vm.vm_obj));
           i = squirrel_vms.erase(i);
-          continue;
         }
-      }
-	
-    if (vm_state != SQ_VMSTATE_SUSPENDED)
-      {
-        sq_release(v, &(squirrel_vm.vm_obj));
-        i = squirrel_vms.erase(i);
-      }
-    else
-      {
-        ++i;
-      }
-  }
+      else
+        {
+          ++i;
+        }
+    }
 }
 
 void
@@ -165,30 +181,38 @@
 {
   assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
   // find the VM in the list and update it
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) {
-    SquirrelVM& squirrel_vm = *i;
-    if(squirrel_vm.vm == vm) 
-      {
-        squirrel_vm.waiting_for_events = event;
+  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
+    {
+      SquirrelVM& squirrel_vm = *i;
 
-        if(timeout < 0) {
-          squirrel_vm.wakeup_time = -1;
-        } else {
-          squirrel_vm.wakeup_time = game_time + timeout;
+      if(squirrel_vm.vm == vm) 
+        {
+          squirrel_vm.waiting_for_events = event;
+
+          if(timeout < 0) 
+            {
+              squirrel_vm.wakeup_time = -1;
+            } 
+          else 
+            {
+              squirrel_vm.wakeup_time = game_time + timeout;
+            }
+          return;
         }
-        return;
-      }
-  }
+    }
 }
 
 void
 ScriptManager::fire_wakeup_event(WakeupData  event)
 {
   assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
+
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
       SquirrelVM& vm = *i;
-      if(vm.waiting_for_events.type == event.type && vm.waiting_for_events.type != NO_EVENT)
+
+      if(vm.waiting_for_events.type == event.type && 
+         vm.waiting_for_events.type != NO_EVENT)
         {
           switch (event.type)
             {

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-04 18:44:26 UTC (rev 2550)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-04 19:50:03 UTC (rev 2551)
@@ -41,27 +41,6 @@
   static ScriptManager* current() { return current_; }
 
 public:
-  ScriptManager();
-  ~ScriptManager();
-
-  void update();
-
-  /** Load script from \a filename and runs it */
-  void run_script_file(const std::string& filename);
-
-  /** Takes the Squirrel expression in \a script and evaluates it, \a
-      sourcename is the filename and used in error messages */
-  void run_script(const std::string& script, const std::string& sourcename);
-
-  /** Load script from \a in and runs it, \a sourcename is the
-      filename and used in error messages */
-  void run_script(std::istream& in, const std::string& sourcename);
-
-  HSQUIRRELVM get_vm() const
-  {
-    return v;
-  }
-
   enum WakeupEvent {
     NO_EVENT,
     TIME,
@@ -85,23 +64,18 @@
     };
   };
 
-  void set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout = -1);
-  void set_wakeup_event(HSQUIRRELVM vm, WakeupData  event, float timeout = -1);
-  void fire_wakeup_event(WakeupEvent event);
-  void fire_wakeup_event(WakeupData  event);
-  
-  bool run_before(HSQUIRRELVM vm);
-
 private:
   class SquirrelVM
   {
   public:
-    SquirrelVM(const std::string& arg_name, HSQUIRRELVM arg_vm, HSQOBJECT arg_obj);
     std::string name;
     HSQUIRRELVM vm;
     HSQOBJECT   vm_obj;
     float       wakeup_time;
     WakeupData  waiting_for_events;
+
+  public:
+    SquirrelVM(const std::string& arg_name, HSQUIRRELVM arg_vm, HSQOBJECT arg_obj);
   };
   
   typedef std::list<SquirrelVM> SquirrelVMs;
@@ -109,6 +83,35 @@
   std::map<std::string, bool> already_run_scripts;
 
   HSQUIRRELVM v;
+
+public:
+  ScriptManager();
+  ~ScriptManager();
+
+  void update();
+
+  /** Load script from \a filename and runs it */
+  void run_script_file(const std::string& filename);
+
+  /** Takes the Squirrel expression in \a script and evaluates it, \a
+      sourcename is the filename and used in error messages */
+  void run_script(const std::string& script, const std::string& sourcename);
+
+  /** Load script from \a in and runs it, \a sourcename is the
+      filename and used in error messages */
+  void run_script(std::istream& in, const std::string& sourcename);
+
+  HSQUIRRELVM get_vm() const
+  {
+    return v;
+  }
+
+  void set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout = -1);
+  void set_wakeup_event(HSQUIRRELVM vm, WakeupData  event, float timeout = -1);
+  void fire_wakeup_event(WakeupEvent event);
+  void fire_wakeup_event(WakeupData  event);
+  
+  bool run_before(HSQUIRRELVM vm);
 };
 
 #endif



From grumbel at mail.berlios.de  Wed Mar  4 20:56:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 20:56:31 +0100
Subject: [Windstille-commit] r2552 - trunk/windstille/src/engine
Message-ID: <200903041956.n24JuV0J002516@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 20:56:30 +0100 (Wed, 04 Mar 2009)
New Revision: 2552

Modified:
   trunk/windstille/src/engine/script_manager.cpp
Log:
Restructured if-tree, no semantic changes

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-04 19:50:03 UTC (rev 2551)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-04 19:56:30 UTC (rev 2552)
@@ -143,36 +143,37 @@
       SquirrelVM& squirrel_vm = *i;
       int vm_state = sq_getvmstate(squirrel_vm.vm);
     
-      if (vm_state == SQ_VMSTATE_SUSPENDED && 
-          squirrel_vm.wakeup_time > 0 && 
-          game_time >= squirrel_vm.wakeup_time) 
+      if (vm_state == SQ_VMSTATE_SUSPENDED)
         {
-          squirrel_vm.waiting_for_events = WakeupData(NO_EVENT);
-          try 
+          if (squirrel_vm.wakeup_time > 0 && 
+              game_time >= squirrel_vm.wakeup_time) 
             {
-              if(sq_wakeupvm(squirrel_vm.vm, false, false, true) < 0) 
+              squirrel_vm.waiting_for_events = WakeupData(NO_EVENT);
+              try 
                 {
-                  throw SquirrelError(squirrel_vm.vm, "Couldn't resume script");
+                  if(sq_wakeupvm(squirrel_vm.vm, false, false, true) < 0) 
+                    {
+                      throw SquirrelError(squirrel_vm.vm, "Couldn't resume script");
+                    }
+                } 
+              catch(std::exception& e) 
+                {
+                  std::cerr << "Problem executing script: " << e.what() << "\n";
+                  sq_release(v, &squirrel_vm.vm_obj);
+                  i = squirrel_vms.erase(i);
+                  continue;
                 }
-            } 
-          catch(std::exception& e) 
+            }
+          else
             {
-              std::cerr << "Problem executing script: " << e.what() << "\n";
-              sq_release(v, &squirrel_vm.vm_obj);
-              i = squirrel_vms.erase(i);
-              continue;
+              ++i;
             }
         }
-	
-      if (vm_state != SQ_VMSTATE_SUSPENDED)
+      else // if (vm_state != SQ_VMSTATE_SUSPENDED) 
         {
           sq_release(v, &(squirrel_vm.vm_obj));
           i = squirrel_vms.erase(i);
         }
-      else
-        {
-          ++i;
-        }
     }
 }
 
@@ -203,7 +204,7 @@
 }
 
 void
-ScriptManager::fire_wakeup_event(WakeupData  event)
+ScriptManager::fire_wakeup_event(WakeupData event)
 {
   assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
 



From grumbel at mail.berlios.de  Wed Mar  4 21:20:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 21:20:41 +0100
Subject: [Windstille-commit] r2553 - trunk/windstille/src/engine
Message-ID: <200903042020.n24KKfu6006994@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 21:20:41 +0100 (Wed, 04 Mar 2009)
New Revision: 2553

Modified:
   trunk/windstille/src/engine/script_manager.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-04 19:56:30 UTC (rev 2552)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-04 20:20:41 UTC (rev 2553)
@@ -80,14 +80,17 @@
 
   current_ = 0;
 }
-
+
 static SQInteger squirrel_read_char(SQUserPointer file)
 {
   std::istream* in = reinterpret_cast<std::istream*> (file);
+
   char c = in->get();
-  if(in->eof())
-    return 0;    
-  return c;
+
+  if (in->eof())
+    return 0;
+  else
+    return c;
 }
 
 void
@@ -133,7 +136,7 @@
   if(sq_call(vm, 1, false, true) < 0)
     throw SquirrelError(vm, "Couldn't start script");
 }
-
+
 void
 ScriptManager::update()
 {



From grumbel at mail.berlios.de  Wed Mar  4 21:21:05 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 4 Mar 2009 21:21:05 +0100
Subject: [Windstille-commit] r2554 - trunk/windstille/src/hud
Message-ID: <200903042021.n24KL5OC007058@sheep.berlios.de>

Author: grumbel
Date: 2009-03-04 21:21:05 +0100 (Wed, 04 Mar 2009)
New Revision: 2554

Modified:
   trunk/windstille/src/hud/speech_manager.cpp
Log:
Reset current_ pointer to 0 on destruction

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-03-04 20:20:41 UTC (rev 2553)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-03-04 20:21:05 UTC (rev 2554)
@@ -64,6 +64,8 @@
   for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
     delete *i;
   speeches.clear();
+
+  current_ = 0;
 }
 
 void



From grumbel at mail.berlios.de  Thu Mar  5 17:02:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 5 Mar 2009 17:02:37 +0100
Subject: [Windstille-commit] r2555 - trunk/media/wiki
Message-ID: <200903051602.n25G2bF8004925@sheep.berlios.de>

Author: grumbel
Date: 2009-03-05 17:02:37 +0100 (Thu, 05 Mar 2009)
New Revision: 2555

Modified:
   trunk/media/wiki/SConstruct
Log:
Added rsync upload

Modified: trunk/media/wiki/SConstruct
===================================================================
--- trunk/media/wiki/SConstruct	2009-03-04 20:21:05 UTC (rev 2554)
+++ trunk/media/wiki/SConstruct	2009-03-05 16:02:37 UTC (rev 2555)
@@ -17,4 +17,7 @@
             ["./wiki2html.py", 
              "template.xml"])
 
+sys_env = Environment(ENV = os.environ)
+sys_env.AlwaysBuild(sys_env.Alias('upload', [], "rsync -vrPcLC  build/ grumbel at shell.berlios.de:/home/groups/windstille/htdocs/wiki"))
+
 # EOF #



From grumbel at mail.berlios.de  Thu Mar  5 17:02:49 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 5 Mar 2009 17:02:49 +0100
Subject: [Windstille-commit] r2556 - trunk/media/wiki
Message-ID: <200903051602.n25G2nWd004980@sheep.berlios.de>

Author: grumbel
Date: 2009-03-05 17:02:49 +0100 (Thu, 05 Mar 2009)
New Revision: 2556

Modified:
   trunk/media/wiki/Scripting.wiki
   trunk/media/wiki/Sector.wiki
Log:
Some more docu about scripting

Modified: trunk/media/wiki/Scripting.wiki
===================================================================
--- trunk/media/wiki/Scripting.wiki	2009-03-05 16:02:37 UTC (rev 2555)
+++ trunk/media/wiki/Scripting.wiki	2009-03-05 16:02:49 UTC (rev 2556)
@@ -2,12 +2,10 @@
 Needs update, specifically on how script functions get exported, on how scripts related to sectors, levels or dialog and on what scripting is used for.
 <</note>>
 
-Windstille uses [[http://www.squirrel-lang.org/|Squirrel]] for scripting. The full source code of squirrel is included within the {{{external/SQUIRREL2/}}} subdirectory of Windstille's source, and it is automatically built into the game.
+Windstille uses [[http://www.squirrel-lang.org/|Squirrel]] for scripting. The full source code of squirrel is included within the {{{external/SQUIRREL2/}}} subdirectory of Windstille's source and it is automatically built into the game. The <<class>>ScriptManager<</class>> is for most part responsible for actually running scripts.
 
-C++ functions are exposed to scripts via the interface in the {{{scripting/}}} sub directory". Miniswig, found in the "tools/miniswig" subdirectory, is a tool that creates wrapper functions to allow the interface functions to be called from squirrel. If you have bison and flex installed then miniswig will be built automatically, and any changes you make to the scripting interface will automatically be added to the wrapper functions when you execute jam.
+C++ functions are exposed to scripts via the interface in the {{{scripting/}}} subdirectory. Miniswig, found in the {{{tools/miniswig}}} subdirectory, is a tool that creates wrapper functions to allow the interface functions to be called from squirrel. If you have bison and flex installed then miniswig will be built automatically, and any changes you make to the scripting interface will automatically be added to the wrapper functions when you execute scons.
 
-Each sector/level is stored in an sexpr based .wst file. This contains tilemap layout, trigger locations (doors etc), spawn locations of bad guys, NPCs and the player character, as well as various other things. At some point thse will be editable using the [[http://flexlay.berlios.de/|Flexlay]] tile/level editor, though this doesn't work correctly at the moment.
-
 The plan is that scripts can then be associated with these .wst sectors, or indeed with individual bad guys or objects within these sectors. Multiple scripts can be run simultanously. Some examples of things scripts might be used for:
 
 * to alter the starting locations of bad guys, NPCs or the player character, or stop any one of these from spawing at all
@@ -15,3 +13,65 @@
 * to control the AI behaviour of bad guys or NPCs
 * to control dialog with NPCs
 * to control when and where new information is provided to the player
+
+== Background AI Scripts
+
+<<note>>
+Just an unfinished idea, not sure if and how exactly it can be implemented.
+<</note>>
+
+The idea of a background AI script is that it runs in the background and lets characters do things. For example a script for the barkeeper that lets him walk from guest to guest and do a little cleanup at the bar might look like this: 
+
+{{{
+// Barkeeper background script
+while (true)
+  {
+     barkeeper.walkto(guest1);
+     barkeeper.say("Your beer");
+
+     barkeeper.walkto(guest2);
+     barkeeper.say("Your whiskey");
+
+     barkeeper.walkto(guest3);
+     barkeeper.say("Your milk");
+
+     barkeeper.walkto(bar);
+     barkeeper.play("cleanup-animation");
+  }
+}}}
+
+So far so good, with the current scripting engine that should already work fine. However where the thing becomes troublesome is with player interaction. If the player talks to the barkeeper, the dialog script is triggered, again already doable with the current engine. However the barkeeper character is now controlled by two scripts, which obviously isn't going to work. Therefore we need a way to solve this. A quick idea how this might work in a Dialog script is this:
+
+{{{
+
+// Stop other scripts from using the barkeeper,
+// those scripts that do already use him shall be
+// suspended for moment till unlock() is called.
+barkeeper.lock()
+
+barkeeper.say("Hello, what can I do for you?")
+jane.say("Nothing, thank you")
+
+// Release the barkeeper and let the background
+// script continue where it was
+barkeeper.unlock()
+}}}
+
+This might work for such a simple script, but it not quite clear if and how this would work in more complex situations, say when multiple characters are involved in a background script and how exactly the background script can be resumed at the exact right spot. Its also not clear if lock() and unlock() should be explicit calls or if certain functions should have automatic priority over other things.
+
+== VM Serialization
+
+Serialization of the VM is needed so that a savegame can continue at exactly the same point where it left. This however doesn't seem to be nativly supported by Squirrel. See this [[http://squirrel-lang.org/forums/thread/691.aspx | forum discussion]] or this [[http://squirrel-lang.org/forums/thread/1213.aspx | forum discussion]].
+
+Possible solutions:
+
+* ignore the problem for know and make sure that the Scripting API is clean (most likely for now)
+* implement serialization in Squirrel
+* don't implemented exact saves and work with predefined savepoints that just restart scripts
+* roll our own scripting language
+* switch to something else: 
+** [[http://www.lua.org | Lua]] in combination with [[http://lua-users.org/wiki/PlutoLibrary | Pluto]] (should support serialization)
+** [[http://www.stackless.com/ | Stackless Python]]  (should support serialization)
+** [[http://plib.sourceforge.net/psl/index.html | PSL: PLIB's Scripting Language]] (unknown)
+** [[http://www.somedude.net/gamemonkey/ | GameMonkey]] (unknown)
+** [[http://www.angelcode.com/angelscript/ | AngleScript]] (unknown)

Modified: trunk/media/wiki/Sector.wiki
===================================================================
--- trunk/media/wiki/Sector.wiki	2009-03-05 16:02:37 UTC (rev 2555)
+++ trunk/media/wiki/Sector.wiki	2009-03-05 16:02:49 UTC (rev 2556)
@@ -6,3 +6,15 @@
 
 * {{{data/sectors/{SECTORNAME}/{SECTORNAME}.wst}}}
 * {{{data/sectors/{SECTORNAME}/{SCRIPTNAME}.nut}}}
+
+== Script Patch Syntax
+
+{{{
+(script "barrobot.nut") ;; Script relative to the location of the .wst file
+
+(script "/scripts/barrobot.nut") ;; Script relative to the data directory
+
+or 
+
+(script "global:scripts/barrobot.nut") ;; Script relative to the data directory
+}}}



From grumbel at mail.berlios.de  Thu Mar  5 17:03:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 5 Mar 2009 17:03:22 +0100
Subject: [Windstille-commit] r2557 - trunk/media/wiki
Message-ID: <200903051603.n25G3MuK005163@sheep.berlios.de>

Author: grumbel
Date: 2009-03-05 17:03:22 +0100 (Thu, 05 Mar 2009)
New Revision: 2557

Added:
   trunk/media/wiki/docs
Log:
Added symlink to make doxygen links work on local builds of the Wiki

Added: trunk/media/wiki/docs
===================================================================
--- trunk/media/wiki/docs	2009-03-05 16:02:49 UTC (rev 2556)
+++ trunk/media/wiki/docs	2009-03-05 16:03:22 UTC (rev 2557)
@@ -0,0 +1 @@
+link ../../windstille/doc/api/
\ No newline at end of file


Property changes on: trunk/media/wiki/docs
___________________________________________________________________
Name: svn:special
   + *



From grumbel at mail.berlios.de  Thu Mar  5 19:28:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 5 Mar 2009 19:28:13 +0100
Subject: [Windstille-commit] r2558 - in trunk/windstille/src: engine
	scripting
Message-ID: <200903051828.n25ISDGX004074@sheep.berlios.de>

Author: grumbel
Date: 2009-03-05 19:28:08 +0100 (Thu, 05 Mar 2009)
New Revision: 2558

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/squirrel_error.hpp
Log:
Minor cleanup (indention, documentation, variable names)

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-05 16:03:22 UTC (rev 2557)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-05 18:28:08 UTC (rev 2558)
@@ -37,46 +37,50 @@
   assert(current_ == 0);
   current_ = this;
 
-  v = sq_open(1024);
-  if(v == 0)
-    throw std::runtime_error("Couldn't initialize squirrel vm");
+  vm = sq_open(1024);
+  if(vm == 0)
+    {
+      throw std::runtime_error("Couldn't initialize squirrel vm");
+    }
+  else
+    {
+      // register default error handlers
+      sqstd_seterrorhandlers(vm);
+      // register squirrel libs
+      sq_pushroottable(vm);
 
-  // register default error handlers
-  sqstd_seterrorhandlers(v);
-  // register squirrel libs
-  sq_pushroottable(v);
+      /* FIXME: None of these should be needed for scripts
 
-  /* FIXME: None of these should be needed for scripts
+         if(sqstd_register_bloblib(v) < 0)
+         throw SquirrelError(v, "Couldn't register blob lib");
 
-  if(sqstd_register_bloblib(v) < 0)
-    throw SquirrelError(v, "Couldn't register blob lib");
+         if(sqstd_register_iolib(v) < 0)
+         throw SquirrelError(v, "Couldn't register io lib");
 
-  if(sqstd_register_iolib(v) < 0)
-    throw SquirrelError(v, "Couldn't register io lib");
+         if(sqstd_register_systemlib(v) < 0)
+         throw SquirrelError(v, "Couldn't register system lib");
+      */
 
-  if(sqstd_register_systemlib(v) < 0)
-    throw SquirrelError(v, "Couldn't register system lib");
-  */
+      if(sqstd_register_mathlib(vm) < 0)
+        throw SquirrelError(vm, "Couldn't register math lib");
 
-  if(sqstd_register_mathlib(v) < 0)
-    throw SquirrelError(v, "Couldn't register math lib");
+      if(sqstd_register_stringlib(vm) < 0)
+        throw SquirrelError(vm, "Couldn't register string lib");
 
-  if(sqstd_register_stringlib(v) < 0)
-    throw SquirrelError(v, "Couldn't register string lib");
-
-  // register print function
-  sq_setprintfunc(v, printfunc);
+      // register print function
+      sq_setprintfunc(vm, printfunc);
   
-  // register windstille API
-  Scripting::register_windstille_wrapper(v);
+      // register windstille API
+      Scripting::register_windstille_wrapper(vm);
+    }
 }
 
 ScriptManager::~ScriptManager()
 {
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
-    sq_release(v, &(i->vm_obj));
+    sq_release(vm, &(i->vm_obj));
 
-  sq_close(v);
+  sq_close(vm);
 
   current_ = 0;
 }
@@ -102,7 +106,7 @@
 
 void
 ScriptManager::run_script(const std::string& the_string,
-    const std::string& sourcename)
+                          const std::string& sourcename)
 {
   std::istringstream stream(the_string);
   run_script(stream, sourcename);
@@ -111,30 +115,44 @@
 void
 ScriptManager::run_script(std::istream& in, const std::string& sourcename)
 {
-  HSQUIRRELVM vm = sq_newthread(v, 1024);
-  if(vm == 0)
-    throw SquirrelError(v, "Couldn't create new VM");
+  HSQUIRRELVM thread = sq_newthread(vm, 1024);
+  if(thread == 0)
+    {
+      throw SquirrelError(vm, "Couldn't create new VM");
+    }
+  else
+    {
+      // retrieve reference to thread from stack and increase refcounter
+      HSQOBJECT vm_obj;
 
-  // retrieve reference to thread from stack and increase refcounter
-  HSQOBJECT vm_obj;
-  sq_resetobject(&vm_obj);
-  if(sq_getstackobj(v, -1, &vm_obj) < 0)
-    throw SquirrelError(v, "Couldn't get coroutine vm from stack");
-  sq_addref(v, &vm_obj);
-  sq_pop(v, 1);
+      // Init the object
+      sq_resetobject(&vm_obj);
+
+      // store thread created by sq_newthread into vm_obj
+      if(sq_getstackobj(vm, -1, &vm_obj) < 0)
+        throw SquirrelError(vm, "Couldn't get coroutine vm from stack");
+
+      // Add reference and remove object from stack
+      sq_addref(vm, &vm_obj);
+      sq_pop(vm, 1);
   
-  if(sq_compile(vm, squirrel_read_char, &in, sourcename.c_str(), true) < 0)
-    throw SquirrelError(vm, "Couldn't parse script");
-	
-  squirrel_vms.push_back(SquirrelVM(sourcename, vm, vm_obj));
-  already_run_scripts[sourcename] = true;
+      // Compile the script and push it on the stack
+      if(sq_compile(thread, squirrel_read_char, &in, sourcename.c_str(), true) < 0)
+        throw SquirrelError(thread, "Couldn't parse script");
+     
+      // Add VM to the list of VMs
+      squirrel_vms.push_back(SquirrelVM(sourcename, thread, vm_obj));
+      already_run_scripts[sourcename] = true;
 
-  // FIXME: a script that gets run shouldn't have direct access to the root table
-  // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
-  sq_pushroottable(vm);
-  //sq_clone(vm, -1); //FIXME
-  if(sq_call(vm, 1, false, true) < 0)
-    throw SquirrelError(vm, "Couldn't start script");
+      // FIXME: a script that gets run shouldn't have direct access to the root table
+      // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
+      sq_pushroottable(thread);
+      //sq_clone(thread, -1); //FIXME
+
+      // Start the script that was previously compiled
+      if (SQ_FAILED(sq_call(thread, 1, false, true)))
+        throw SquirrelError(thread, "Couldn't start script");
+    }
 }
 
 void
@@ -162,7 +180,7 @@
               catch(std::exception& e) 
                 {
                   std::cerr << "Problem executing script: " << e.what() << "\n";
-                  sq_release(v, &squirrel_vm.vm_obj);
+                  sq_release(vm, &squirrel_vm.vm_obj);
                   i = squirrel_vms.erase(i);
                   continue;
                 }
@@ -174,7 +192,7 @@
         }
       else // if (vm_state != SQ_VMSTATE_SUSPENDED) 
         {
-          sq_release(v, &(squirrel_vm.vm_obj));
+          sq_release(vm, &squirrel_vm.vm_obj);
           i = squirrel_vms.erase(i);
         }
     }
@@ -220,16 +238,16 @@
         {
           switch (event.type)
             {
-            case GAMEOBJECT_DONE:
-              if (vm.waiting_for_events.game_object == event.game_object)
-                {
-                  vm.wakeup_time = game_time;
-                }
-              break;
+              case GAMEOBJECT_DONE:
+                if (vm.waiting_for_events.game_object == event.game_object)
+                  {
+                    vm.wakeup_time = game_time;
+                  }
+                break;
 
-            default:
-              vm.wakeup_time = game_time;
-              break;
+              default:
+                vm.wakeup_time = game_time;
+                break;
             }
         }
     }
@@ -247,17 +265,21 @@
   fire_wakeup_event(WakeupData(event));
 }
 
-bool ScriptManager::run_before(HSQUIRRELVM vm)
+bool
+ScriptManager::run_before(HSQUIRRELVM vm)
 {
   std::string name;
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) {
-    if (i->vm == vm)
-      name = i->name;
-  }
+
+  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
+    {
+      if (i->vm == vm)
+        name = i->name;
+    }
   
   if (already_run_scripts.find(name) == already_run_scripts.end())
     return false;
-  return true;
+  else
+    return true;
 }
 
 ScriptManager::SquirrelVM::SquirrelVM(const std::string& arg_name, HSQUIRRELVM arg_vm, HSQOBJECT arg_obj)

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-05 16:03:22 UTC (rev 2557)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-05 18:28:08 UTC (rev 2558)
@@ -82,7 +82,7 @@
   SquirrelVMs squirrel_vms;
   std::map<std::string, bool> already_run_scripts;
 
-  HSQUIRRELVM v;
+  HSQUIRRELVM vm;
 
 public:
   ScriptManager();
@@ -101,16 +101,15 @@
       filename and used in error messages */
   void run_script(std::istream& in, const std::string& sourcename);
 
-  HSQUIRRELVM get_vm() const
-  {
-    return v;
-  }
+  HSQUIRRELVM get_vm() const { return vm; }
 
   void set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout = -1);
   void set_wakeup_event(HSQUIRRELVM vm, WakeupData  event, float timeout = -1);
   void fire_wakeup_event(WakeupEvent event);
   void fire_wakeup_event(WakeupData  event);
   
+  /** Returns true if the given vm as been used in a run_script() call
+      before, if the vm is run for the first time return true */
   bool run_before(HSQUIRRELVM vm);
 };
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-05 16:03:22 UTC (rev 2557)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-05 18:28:08 UTC (rev 2558)
@@ -329,17 +329,21 @@
   const char* objname;
   sq_getstring(v, 2, &objname);
 
+  // FIXME: Do we memleak here?
   std::vector<lisp::Lisp*> entries;
   entries.push_back(new Lisp(Lisp::TYPE_SYMBOL, objname));
   table_to_lisp(v, 3, entries);
 
-  try {
-    SExprFileReader reader(new Lisp(entries), true);
-    Sector::current()->add_object(reader);
-  } catch(std::exception& e) {
-    std::cerr << "Error parsing object in spawn_object: " << e.what()
-      << "\n";
-  }
+  try 
+    {
+      SExprFileReader reader(new Lisp(entries), true);
+      Sector::current()->add_object(reader);
+    } 
+  catch (std::exception& e) 
+    {
+      std::cerr << "Error parsing object in spawn_object: " << e.what()
+                << "\n";
+    }
 
   return 0;
 }

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-05 16:03:22 UTC (rev 2557)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-05 18:28:08 UTC (rev 2558)
@@ -74,6 +74,7 @@
 bool is_objective_given(const std::string& name);
 bool is_objective_complete(const std::string& name);
 
+/** Return true if the script was already run earlier */
 bool run_before(HSQUIRRELVM vm);
 
 // for testing

Modified: trunk/windstille/src/scripting/squirrel_error.hpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.hpp	2009-03-05 16:03:22 UTC (rev 2557)
+++ trunk/windstille/src/scripting/squirrel_error.hpp	2009-03-05 18:28:08 UTC (rev 2558)
@@ -36,11 +36,12 @@
   virtual ~SquirrelError() throw();
 
   const char* what() const throw();
+
 private:
   std::string message;
 };
 
-}
+} // namespace Scripting
 
 #endif
 



From grumbel at mail.berlios.de  Fri Mar  6 13:59:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 6 Mar 2009 13:59:34 +0100
Subject: [Windstille-commit] r2559 - trunk/windstille/src/scripting
Message-ID: <200903061259.n26CxYNH001620@sheep.berlios.de>

Author: grumbel
Date: 2009-03-06 13:59:33 +0100 (Fri, 06 Mar 2009)
New Revision: 2559

Modified:
   trunk/windstille/src/scripting/wrapper.cpp
Log:
New wrapper script

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-05 18:28:08 UTC (rev 2558)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-06 12:59:33 UTC (rev 2559)
@@ -28,7 +28,7 @@
 static SQInteger GameObject_get_name_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'get_name' called without instance"));
     return SQ_ERROR;
   }
@@ -53,7 +53,7 @@
 static SQInteger GameObject_remove_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'remove' called without instance"));
     return SQ_ERROR;
   }
@@ -77,7 +77,7 @@
 static SQInteger GameObject_set_active_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'set_active' called without instance"));
     return SQ_ERROR;
   }
@@ -106,7 +106,7 @@
 static SQInteger GameObject_set_parent_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'set_parent' called without instance"));
     return SQ_ERROR;
   }
@@ -142,7 +142,7 @@
 static SQInteger TestObject_set_sprite_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'set_sprite' called without instance"));
     return SQ_ERROR;
   }
@@ -171,7 +171,7 @@
 static SQInteger TestObject_set_action_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'set_action' called without instance"));
     return SQ_ERROR;
   }
@@ -200,7 +200,7 @@
 static SQInteger TestObject_set_pos_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'set_pos' called without instance"));
     return SQ_ERROR;
   }
@@ -234,7 +234,7 @@
 static SQInteger TestObject_set_vflip_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'set_vflip' called without instance"));
     return SQ_ERROR;
   }
@@ -263,7 +263,7 @@
 static SQInteger TestObject_attach_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'attach' called without instance"));
     return SQ_ERROR;
   }
@@ -304,7 +304,7 @@
 static SQInteger Player_start_listening_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'start_listening' called without instance"));
     return SQ_ERROR;
   }
@@ -328,7 +328,7 @@
 static SQInteger Player_stop_listening_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'stop_listening' called without instance"));
     return SQ_ERROR;
   }
@@ -359,7 +359,7 @@
 static SQInteger ScriptableObject_move_to_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'move_to' called without instance"));
     return SQ_ERROR;
   }
@@ -403,7 +403,7 @@
 static SQInteger ScriptableObject_start_flash_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
     sq_throwerror(vm, _SC("'start_flash' called without instance"));
     return SQ_ERROR;
   }
@@ -1710,228 +1710,266 @@
 
   sq_pushstring(v, "set_sector", -1);
   sq_newclosure(v, &set_sector_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_sector'");
   }
 
   sq_pushstring(v, "play_music", -1);
   sq_newclosure(v, &play_music_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'play_music'");
   }
 
   sq_pushstring(v, "stop_music", -1);
   sq_newclosure(v, &stop_music_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'stop_music'");
   }
 
   sq_pushstring(v, "play_sound", -1);
   sq_newclosure(v, &play_sound_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'play_sound'");
   }
 
   sq_pushstring(v, "caption_add", -1);
   sq_newclosure(v, &caption_add_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'caption_add'");
   }
 
   sq_pushstring(v, "caption_clear", -1);
   sq_newclosure(v, &caption_clear_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'caption_clear'");
   }
 
   sq_pushstring(v, "caption_end", -1);
   sq_newclosure(v, &caption_end_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'caption_end'");
   }
 
   sq_pushstring(v, "camera_set_active", -1);
   sq_newclosure(v, &camera_set_active_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_active'");
   }
 
   sq_pushstring(v, "camera_continue_path", -1);
   sq_newclosure(v, &camera_continue_path_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_continue_path'");
   }
 
   sq_pushstring(v, "camera_begin_path", -1);
   sq_newclosure(v, &camera_begin_path_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_begin_path'");
   }
 
   sq_pushstring(v, "camera_add_point", -1);
   sq_newclosure(v, &camera_add_point_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_add_point'");
   }
 
   sq_pushstring(v, "camera_end_path", -1);
   sq_newclosure(v, &camera_end_path_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_end_path'");
   }
 
   sq_pushstring(v, "camera_set_pos", -1);
   sq_newclosure(v, &camera_set_pos_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_pos'");
   }
 
   sq_pushstring(v, "camera_set_zoom", -1);
   sq_newclosure(v, &camera_set_zoom_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_zoom'");
   }
 
   sq_pushstring(v, "set_controller_help_active", -1);
   sq_newclosure(v, &set_controller_help_active_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_controller_help_active'");
   }
 
   sq_pushstring(v, "speech_show", -1);
   sq_newclosure(v, &speech_show_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'speech_show'");
   }
 
   sq_pushstring(v, "dialog_show", -1);
   sq_newclosure(v, &dialog_show_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i s s s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'dialog_show'");
   }
 
   sq_pushstring(v, "wait_for_dialog", -1);
   sq_newclosure(v, &wait_for_dialog_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_dialog'");
   }
 
   sq_pushstring(v, "wait_for_fade", -1);
   sq_newclosure(v, &wait_for_fade_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_fade'");
   }
 
   sq_pushstring(v, "wait_for_camera", -1);
   sq_newclosure(v, &wait_for_camera_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_camera'");
   }
 
   sq_pushstring(v, "conversation_add", -1);
   sq_newclosure(v, &conversation_add_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_add'");
   }
 
   sq_pushstring(v, "conversation_add2", -1);
   sq_newclosure(v, &conversation_add2_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_add2'");
   }
 
   sq_pushstring(v, "conversation_show", -1);
   sq_newclosure(v, &conversation_show_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_show'");
   }
 
   sq_pushstring(v, "conversation_get_selection", -1);
   sq_newclosure(v, &conversation_get_selection_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_get_selection'");
   }
 
   sq_pushstring(v, "wait_for_conversation", -1);
   sq_newclosure(v, &wait_for_conversation_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_conversation'");
   }
 
   sq_pushstring(v, "add_objective", -1);
   sq_newclosure(v, &add_objective_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'add_objective'");
   }
 
   sq_pushstring(v, "objective_complete", -1);
   sq_newclosure(v, &objective_complete_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'objective_complete'");
   }
 
   sq_pushstring(v, "is_objective_given", -1);
   sq_newclosure(v, &is_objective_given_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'is_objective_given'");
   }
 
   sq_pushstring(v, "is_objective_complete", -1);
   sq_newclosure(v, &is_objective_complete_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'is_objective_complete'");
   }
 
   sq_pushstring(v, "run_before", -1);
   sq_newclosure(v, &run_before_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'run_before'");
   }
 
   sq_pushstring(v, "save_state", -1);
   sq_newclosure(v, &save_state_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'save_state'");
   }
 
   sq_pushstring(v, "load_state", -1);
   sq_newclosure(v, &load_state_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'load_state'");
   }
 
   sq_pushstring(v, "list_objects", -1);
   sq_newclosure(v, &list_objects_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'list_objects'");
   }
 
   sq_pushstring(v, "set_debug", -1);
   sq_newclosure(v, &set_debug_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_debug'");
   }
 
   sq_pushstring(v, "get_debug", -1);
   sq_newclosure(v, &get_debug_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'get_debug'");
   }
 
   sq_pushstring(v, "get_game_speed", -1);
   sq_newclosure(v, &get_game_speed_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'get_game_speed'");
   }
 
   sq_pushstring(v, "set_game_speed", -1);
   sq_newclosure(v, &set_game_speed_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_game_speed'");
   }
 
   sq_pushstring(v, "wait", -1);
   sq_newclosure(v, &wait_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait'");
   }
@@ -1950,60 +1988,70 @@
 
   sq_pushstring(v, "set_console_font", -1);
   sq_newclosure(v, &set_console_font_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_console_font'");
   }
 
   sq_pushstring(v, "set_gamma", -1);
   sq_newclosure(v, &set_gamma_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_gamma'");
   }
 
   sq_pushstring(v, "set_gamma_rgb", -1);
   sq_newclosure(v, &set_gamma_rgb_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_gamma_rgb'");
   }
 
   sq_pushstring(v, "show_config", -1);
   sq_newclosure(v, &show_config_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'show_config'");
   }
 
   sq_pushstring(v, "cutscene_begin", -1);
   sq_newclosure(v, &cutscene_begin_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'cutscene_begin'");
   }
 
   sq_pushstring(v, "cutscene_end", -1);
   sq_newclosure(v, &cutscene_end_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'cutscene_end'");
   }
 
   sq_pushstring(v, "internal_fadeout_rgb", -1);
   sq_newclosure(v, &internal_fadeout_rgb_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'internal_fadeout_rgb'");
   }
 
   sq_pushstring(v, "internal_fadein", -1);
   sq_newclosure(v, &internal_fadein_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'internal_fadein'");
   }
 
   sq_pushstring(v, "render_mask_get", -1);
   sq_newclosure(v, &render_mask_get_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'render_mask_get'");
   }
 
   sq_pushstring(v, "render_mask_set", -1);
   sq_newclosure(v, &render_mask_set_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'render_mask_set'");
   }
@@ -2023,24 +2071,28 @@
   }
   sq_pushstring(v, "get_name", -1);
   sq_newclosure(v, &GameObject_get_name_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'get_name'");
   }
 
   sq_pushstring(v, "remove", -1);
   sq_newclosure(v, &GameObject_remove_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'remove'");
   }
 
   sq_pushstring(v, "set_active", -1);
   sq_newclosure(v, &GameObject_set_active_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_active'");
   }
 
   sq_pushstring(v, "set_parent", -1);
   sq_newclosure(v, &GameObject_set_parent_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_parent'");
   }
@@ -2060,30 +2112,35 @@
   }
   sq_pushstring(v, "set_sprite", -1);
   sq_newclosure(v, &TestObject_set_sprite_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_sprite'");
   }
 
   sq_pushstring(v, "set_action", -1);
   sq_newclosure(v, &TestObject_set_action_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_action'");
   }
 
   sq_pushstring(v, "set_pos", -1);
   sq_newclosure(v, &TestObject_set_pos_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_pos'");
   }
 
   sq_pushstring(v, "set_vflip", -1);
   sq_newclosure(v, &TestObject_set_vflip_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_vflip'");
   }
 
   sq_pushstring(v, "attach", -1);
   sq_newclosure(v, &TestObject_attach_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s s ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'attach'");
   }
@@ -2103,12 +2160,14 @@
   }
   sq_pushstring(v, "start_listening", -1);
   sq_newclosure(v, &Player_start_listening_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'start_listening'");
   }
 
   sq_pushstring(v, "stop_listening", -1);
   sq_newclosure(v, &Player_stop_listening_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'stop_listening'");
   }
@@ -2128,12 +2187,14 @@
   }
   sq_pushstring(v, "move_to", -1);
   sq_newclosure(v, &ScriptableObject_move_to_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'move_to'");
   }
 
   sq_pushstring(v, "start_flash", -1);
   sq_newclosure(v, &ScriptableObject_start_flash_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'start_flash'");
   }



From grumbel at mail.berlios.de  Fri Mar  6 14:35:49 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 6 Mar 2009 14:35:49 +0100
Subject: [Windstille-commit] r2560 - in trunk/windstille/src: display engine
	objects particles scripting sprite2d sprite3d util
Message-ID: <200903061335.n26DZn2c003859@sheep.berlios.de>

Author: grumbel
Date: 2009-03-06 14:35:48 +0100 (Fri, 06 Mar 2009)
New Revision: 2560

Removed:
   trunk/windstille/src/util/ref.hpp
   trunk/windstille/src/util/refcounter.hpp
Modified:
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/engine/game_object.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/particles/surface_drawer.hpp
   trunk/windstille/src/scripting/game_objects.cpp
   trunk/windstille/src/scripting/game_objects.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/sprite2d/data.hpp
   trunk/windstille/src/sprite3d/data.hpp
Log:
Replaced Ref and RefCounter with boost::smart_ptr and boost::weak_ptr

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -25,7 +25,6 @@
 #include <SDL.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
-#include "util/ref.hpp"
 #include "texture.hpp"
 
 class Surface;

Modified: trunk/windstille/src/engine/game_object.hpp
===================================================================
--- trunk/windstille/src/engine/game_object.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/engine/game_object.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -22,7 +22,6 @@
 #include <string>
 #include "util/file_reader.hpp"
 #include "display/scene_context.hpp"
-#include "util/refcounter.hpp"
 
 class Sector;
 
@@ -30,7 +29,7 @@
  * This is the base class for all in-game objects. The sector class keeps a list
  * of all GameObject and periodically calls draw() and update() for them.
  */
-class GameObject : public RefCounter
+class GameObject
 {
 private:
   static Sector* world;
@@ -46,6 +45,7 @@
 
   /** If a object is 'active = false' it will neither be drawn or updated */
   bool active;
+
 public:
   GameObject() : remove_flag(false), active(true) {}
   virtual ~GameObject() {}
@@ -81,6 +81,7 @@
    * or drawn until it is activated again
    */
   void set_active(bool a) { active = a; }
+
   /**
    * Returns true if the object is active, false if it is inactive
    */
@@ -90,6 +91,7 @@
    * The object should draw itself when this function is called
    */
   virtual void draw (SceneContext& context) = 0;
+
   /**
    * This function is called from time to time to give the object a chance to
    * update it's state. delta is the time that elapsed since the last
@@ -99,8 +101,7 @@
   virtual void update (float delta) = 0;
     
   static void set_world (Sector* w) { world = w; }
-  Sector* get_world () const
-  { return world; }
+  Sector* get_world () const { return world; }
 };
 
 #endif

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -90,10 +90,6 @@
 
 Sector::~Sector()
 {
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-    (*i)->unref();
-  for(Objects::iterator i = new_objects.begin(); i != new_objects.end(); ++i)
-    (*i)->unref();
 }
 
 void
@@ -233,34 +229,38 @@
 Sector::commit_removes()
 {
   // remove objects
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ) {
-    GameObject* object = *i;
-    if(object->is_removable()) {
-      if(object->get_name() != "") {
-        remove_object_from_squirrel(object);
-      }
-      object->unref();
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ) 
+    {
+      boost::shared_ptr<GameObject>& object = *i;
 
-      i = objects.erase(i);
-      continue;
+      if(object->is_removable()) 
+        {
+          if(object->get_name() != "") 
+            {
+              remove_object_from_squirrel(object);
+            }
+
+          i = objects.erase(i);
+          continue;
+        }
+
+      ++i;
     }
-
-    ++i;
-  }
 }
 
 void
 Sector::add(GameObject* obj)
 {
-  new_objects.push_back(obj);
-  obj->ref();
-  if(obj->get_name() != "") {
-    expose_object_to_squirrel(obj);
-  }
+  new_objects.push_back(boost::shared_ptr<GameObject>(obj));
+
+  if(obj->get_name() != "") 
+    {
+      expose_object_to_squirrel(new_objects.back());
+    }
 }
 
 void
-Sector::remove_object_from_squirrel(GameObject* object)
+Sector::remove_object_from_squirrel(boost::shared_ptr<GameObject> object)
 {
   using namespace Scripting;
 
@@ -290,32 +290,32 @@
 
 // tries to find out the "real" class of an gameobject by some dynamic casting
 // and creates a matching squirrel instance for that object
-static inline void create_squirrel_instance(HSQUIRRELVM v, GameObject* object)
+static inline void create_squirrel_instance(HSQUIRRELVM v, boost::shared_ptr<GameObject> object)
 {
-  ScriptableObject* script_obj = dynamic_cast<ScriptableObject*> (object);
-  if(script_obj) {
-    create_squirrel_instance(v, new Scripting::ScriptableObject(script_obj),
-                             true);
-    return;
-  }
+  if (dynamic_cast<ScriptableObject*>(object.get()))
+    {
+      create_squirrel_instance(v, new Scripting::ScriptableObject(object),
+                               true);
+      return;
+    }
   
-  TestObject* tobj = dynamic_cast<TestObject*> (object);
-  if(tobj) {
-    create_squirrel_instance(v, new Scripting::TestObject(tobj), true);
-    return;
-  }                                                                             
+  if (dynamic_cast<TestObject*>(object.get()))
+    {
+      create_squirrel_instance(v, new Scripting::TestObject(object), true);
+      return;
+    }                                                                             
 
-  Player* player = dynamic_cast<Player*> (object);
-  if(player) {
-    create_squirrel_instance(v, new Scripting::Player(player), true);
-    return;
-  }
+  if (dynamic_cast<Player*>(object.get()))
+    {
+      create_squirrel_instance(v, new Scripting::Player(object), true);
+      return;
+    }
 
   create_squirrel_instance(v, new Scripting::GameObject(object), true);
 }
 
 void
-Sector::expose_object_to_squirrel(GameObject* object)
+Sector::expose_object_to_squirrel(boost::shared_ptr<GameObject> object)
 {
   using namespace Scripting;
 
@@ -351,9 +351,10 @@
     {
       if ((*i)->get_name() == name)
         {
-          return *i;
+          return i->get();
         }
     }
+
   return 0;
 }
 

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -22,6 +22,7 @@
 #include <memory>
 #include <string>
 #include <vector>
+#include <boost/shared_ptr.hpp>
 #include "display/color.hpp"
 
 class FileReader;
@@ -48,7 +49,7 @@
   std::string music;
   std::string init_script;
 
-  typedef std::vector<GameObject*> Objects;
+  typedef std::vector<boost::shared_ptr<GameObject> > Objects;
   Objects objects;
   /** container for newly created GameObjects (they'll be added once per frame
    * in the update function */
@@ -70,8 +71,8 @@
   void commit_adds();
   void commit_removes();
 
-  void expose_object_to_squirrel(GameObject* object);
-  void remove_object_from_squirrel(GameObject* object);
+  void expose_object_to_squirrel(boost::shared_ptr<GameObject> object);
+  void remove_object_from_squirrel(boost::shared_ptr<GameObject> object);
 
 public:
   Sector(const std::string& filename);
@@ -105,7 +106,7 @@
 
   GameObject* get_object(const std::string& name) const;
 
-  std::vector<GameObject*>* get_objects() { return &objects; }
+  std::vector<boost::shared_ptr<GameObject> >* get_objects() { return &objects; }
   TileMap* get_tilemap() const { return interactive_tilemap; }
   TileMap* get_tilemap2() const { return interactivebackground_tilemap; }
   void     set_tilemap(TileMap* t);

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/objects/player.cpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -316,15 +316,16 @@
 Entity*
 Player::find_useable_entity()
 {
-  std::vector<GameObject*>* objects = Sector::current()->get_objects();
-  for (std::vector<GameObject*>::iterator i = objects->begin(); i != objects->end(); ++i)
+  std::vector<boost::shared_ptr<GameObject> >* objects = Sector::current()->get_objects();
+  for (std::vector<boost::shared_ptr<GameObject> >::iterator i = objects->begin(); i != objects->end(); ++i)
     {
-      Entity* object = dynamic_cast<Entity*>(*i);
+      Entity* object = dynamic_cast<Entity*>(i->get());
+
       if (object && object != this && object->is_useable())
         {
           //FIXME use proper collision detection
-          if (object->get_pos().x > pos.x - 32 && object->get_pos().x < pos.x + 32
-              && object->get_pos().y > pos.y - 256 && object->get_pos().y < pos.y + 256)
+          if (object->get_pos().x > pos.x - 32 && object->get_pos().x < pos.x + 32 &&
+              object->get_pos().y > pos.y - 256 && object->get_pos().y < pos.y + 256)
             {
               return object;
             }

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/objects/player.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -27,7 +27,6 @@
 #include "math/vector2f.hpp"
 #include "app/globals.hpp"
 #include "engine/entity.hpp"
-#include "util/ref.hpp"
 #include "display/surface.hpp"
 
 class Controller;

Modified: trunk/windstille/src/particles/surface_drawer.hpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/particles/surface_drawer.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -20,7 +20,6 @@
 #define HEADER_WINDSTILLE_PARTICLES_SURFACE_DRAWER_HPP
 
 #include "display/surface.hpp"
-#include "util/ref.hpp"
 #include "drawer.hpp"
 
 class SurfaceDrawer : public Drawer

Modified: trunk/windstille/src/scripting/game_objects.cpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.cpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/scripting/game_objects.cpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -26,25 +26,25 @@
 const std::string&
 GameObject::get_name() const
 {
-  return object->get_name();
+  return object.lock()->get_name();
 }
 
 void
 GameObject::remove()
 {
-  object->remove();
+  object.lock()->remove();
 }
 
 void
 GameObject::set_active(bool active)
 {
-  object->set_active(active);
+  object.lock()->set_active(active);
 }
 
 void
 GameObject::set_parent(const std::string& name)
 {
-  if (::Entity* entity = dynamic_cast<Entity*>(object.get()))
+  if (::Entity* entity = dynamic_cast<Entity*>(object.lock().get()))
     {
       if (::GameObject* obj = Sector::current()->get_object(name))
         {

Modified: trunk/windstille/src/scripting/game_objects.hpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/scripting/game_objects.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -20,11 +20,11 @@
 #define HEADER_WINDSTILLE_SCRIPTING_GAME_OBJECTS_HPP
 
 #ifndef SCRIPTING_API
+#  include <boost/weak_ptr.hpp>
 #  include "engine/game_object.hpp"
 #  include "objects/test_object.hpp"
 #  include "objects/player.hpp"
 #  include "objects/scriptable_object.hpp"
-#  include "util/ref.hpp"
 #endif
 
 namespace Scripting {
@@ -33,10 +33,10 @@
 {
 #ifndef SCRIPTING_API
 protected:
-  Ref< ::GameObject> object;
+  boost::weak_ptr< ::GameObject> object;
   
 public:
-GameObject(::GameObject* _object)
+  GameObject(boost::shared_ptr< ::GameObject > _object)
     : object(_object)
   {}
   virtual ~GameObject()
@@ -54,7 +54,7 @@
 {
 #ifndef SCRIPTING_API
 public:
-  TestObject(::TestObject* _object)
+  TestObject(boost::shared_ptr< ::GameObject > _object)
     : GameObject(_object)
   {}
   virtual ~TestObject()
@@ -62,7 +62,7 @@
 
   ::TestObject* obj() const
   {
-    return reinterpret_cast< ::TestObject*> (object.get());
+    return reinterpret_cast< ::TestObject* >(object.lock().get());
   }
 #endif
 
@@ -79,7 +79,7 @@
 {
 #ifndef SCRIPTING_API
 public:
-  Player(::Player* _player)
+  Player(boost::shared_ptr< ::GameObject > _player)
     : GameObject(_player)
   {}
   virtual ~Player()
@@ -87,7 +87,7 @@
   
   ::Player* obj() const
   {
-    return reinterpret_cast< ::Player*> (object.get());
+    return reinterpret_cast< ::Player*> (object.lock().get());
   }
 #endif
 
@@ -100,7 +100,7 @@
 {
 #ifndef SCRIPTING_API
 public:
-  ScriptableObject(::ScriptableObject* _object)
+  ScriptableObject(boost::shared_ptr< ::GameObject > _object)
     : GameObject(_object)
   {}
   virtual ~ScriptableObject()
@@ -108,7 +108,7 @@
 
   ::ScriptableObject* obj() const
   {
-    return reinterpret_cast< ::ScriptableObject*> (object.get());
+    return reinterpret_cast< ::ScriptableObject*> (object.lock().get());
   }
 #endif
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -198,9 +198,9 @@
 {
   // std::vector<::GameObject*> didn't work me, the typedef is the workaround
   typedef ::GameObject GameObject;
-  std::vector<GameObject*>* objects = Sector::current()->get_objects();
+  std::vector<boost::shared_ptr<GameObject> >* objects = Sector::current()->get_objects();
   
-  for(std::vector<GameObject *>::iterator i = objects->begin(); i != objects->end(); ++i)
+  for(std::vector<boost::shared_ptr<GameObject> >::iterator i = objects->begin(); i != objects->end(); ++i)
     {
       if (!(*i)->get_name().empty())
         console << (*i)->get_name() << std::endl;

Modified: trunk/windstille/src/sprite2d/data.hpp
===================================================================
--- trunk/windstille/src/sprite2d/data.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/sprite2d/data.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -28,7 +28,6 @@
 #include "util/file_reader.hpp"
 #include "math/vector2f.hpp"
 #include "display/surface.hpp"
-#include "util/ref.hpp"
 
 struct SpriteAction
 {

Modified: trunk/windstille/src/sprite3d/data.hpp
===================================================================
--- trunk/windstille/src/sprite3d/data.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/sprite3d/data.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -24,7 +24,6 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include <vector>
-#include "util/ref.hpp"
 #include "display/texture.hpp"
 #include "math/vector3.hpp"
 #include "math/quaternion.hpp"

Deleted: trunk/windstille/src/util/ref.hpp
===================================================================
--- trunk/windstille/src/util/ref.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/util/ref.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -1,88 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_UTIL_REF_HPP
-#define HEADER_WINDSTILLE_UTIL_REF_HPP
-
-/** This class behaves like a pointer to a refcounted object, but increments the
- * reference count when new objects are assigned and decrements the refcounter
- * when it's lifetime has experied. (similar to std::auto_ptr)
- */
-template<typename T>
-class Ref
-{
-public:
-  Ref(T* object = 0)
-    : object(object)
-  {
-    if(object)
-      object->ref();
-  }
-  Ref(const Ref<T>& other)
-    : object(other.object)
-  {
-    if(object)
-      object->ref();
-  }
-  ~Ref()
-  {
-    if(object)
-      object->unref();
-  }
-
-  void operator= (const Ref<T>& other)
-  {
-    *this = other.get();
-  }
-
-  void operator= (T* object)
-  {
-    if(object)
-      object->ref();
-    if(this->object)
-      this->object->unref();
-    this->object = object;
-  }
-
-  T* operator ->() const
-  {
-    return object;
-  }
-
-  T& operator* () const
-  {
-    return *object;
-  }
-
-  operator const T* () const
-  {
-    return object;
-  }
-
-  T* get() const
-  {
-    return object;
-  }
-
-private:
-  T* object;
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/util/refcounter.hpp
===================================================================
--- trunk/windstille/src/util/refcounter.hpp	2009-03-06 12:59:33 UTC (rev 2559)
+++ trunk/windstille/src/util/refcounter.hpp	2009-03-06 13:35:48 UTC (rev 2560)
@@ -1,63 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_UTIL_REFCOUNTER_HPP
-#define HEADER_WINDSTILLE_UTIL_REFCOUNTER_HPP
-
-#include <assert.h>
-
-/**
- * A base class that provides reference counting facilities
- */
-class RefCounter
-{
-public:
-  RefCounter()
-    : refcount(0)
-  { }
-
-  /** increases reference count */
-  void ref()
-  {
-    refcount++;
-  }
-  /** decreases reference count. Destroys the object if the reference count
-   * reaches 0
-   */
-  void unref()
-  {
-    refcount--;
-    if(refcount <= 0) {
-      delete this;
-      return;
-    }
-  }
-
-protected:
-  virtual ~RefCounter()
-  {
-    assert(refcount == 0);
-  }
-
-private:
-  int refcount;
-};
-
-#endif
-
-/* EOF */



From grumbel at mail.berlios.de  Fri Mar  6 14:37:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 6 Mar 2009 14:37:38 +0100
Subject: [Windstille-commit] r2561 - trunk/windstille/src/scripting
Message-ID: <200903061337.n26DbcBh003928@sheep.berlios.de>

Author: grumbel
Date: 2009-03-06 14:37:37 +0100 (Fri, 06 Mar 2009)
New Revision: 2561

Modified:
   trunk/windstille/src/scripting/interface.cpp
Log:
Removed typedef hack

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-06 13:35:48 UTC (rev 2560)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-06 13:37:37 UTC (rev 2561)
@@ -196,11 +196,9 @@
 
 void list_objects()
 {
-  // std::vector<::GameObject*> didn't work me, the typedef is the workaround
-  typedef ::GameObject GameObject;
-  std::vector<boost::shared_ptr<GameObject> >* objects = Sector::current()->get_objects();
+  std::vector<boost::shared_ptr< ::GameObject > >* objects = Sector::current()->get_objects();
   
-  for(std::vector<boost::shared_ptr<GameObject> >::iterator i = objects->begin(); i != objects->end(); ++i)
+  for(std::vector<boost::shared_ptr< ::GameObject > >::iterator i = objects->begin(); i != objects->end(); ++i)
     {
       if (!(*i)->get_name().empty())
         console << (*i)->get_name() << std::endl;



From grumbel at mail.berlios.de  Fri Mar  6 14:43:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 6 Mar 2009 14:43:34 +0100
Subject: [Windstille-commit] r2562 - in trunk/windstille/src: engine objects
	scripting
Message-ID: <200903061343.n26DhYvR004428@sheep.berlios.de>

Author: grumbel
Date: 2009-03-06 14:43:34 +0100 (Fri, 06 Mar 2009)
New Revision: 2562

Modified:
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Replaced pointer with const reference

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-06 13:37:37 UTC (rev 2561)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-06 13:43:34 UTC (rev 2562)
@@ -106,7 +106,7 @@
 
   GameObject* get_object(const std::string& name) const;
 
-  std::vector<boost::shared_ptr<GameObject> >* get_objects() { return &objects; }
+  const std::vector<boost::shared_ptr<GameObject> >& get_objects() { return objects; }
   TileMap* get_tilemap() const { return interactive_tilemap; }
   TileMap* get_tilemap2() const { return interactivebackground_tilemap; }
   void     set_tilemap(TileMap* t);

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-06 13:37:37 UTC (rev 2561)
+++ trunk/windstille/src/objects/player.cpp	2009-03-06 13:43:34 UTC (rev 2562)
@@ -316,8 +316,9 @@
 Entity*
 Player::find_useable_entity()
 {
-  std::vector<boost::shared_ptr<GameObject> >* objects = Sector::current()->get_objects();
-  for (std::vector<boost::shared_ptr<GameObject> >::iterator i = objects->begin(); i != objects->end(); ++i)
+  const std::vector<boost::shared_ptr<GameObject> >& objects = Sector::current()->get_objects();
+
+  for (std::vector<boost::shared_ptr<GameObject> >::const_iterator i = objects.begin(); i != objects.end(); ++i)
     {
       Entity* object = dynamic_cast<Entity*>(i->get());
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-06 13:37:37 UTC (rev 2561)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-06 13:43:34 UTC (rev 2562)
@@ -196,9 +196,9 @@
 
 void list_objects()
 {
-  std::vector<boost::shared_ptr< ::GameObject > >* objects = Sector::current()->get_objects();
+  const std::vector<boost::shared_ptr< ::GameObject > >& objects = Sector::current()->get_objects();
   
-  for(std::vector<boost::shared_ptr< ::GameObject > >::iterator i = objects->begin(); i != objects->end(); ++i)
+  for(std::vector<boost::shared_ptr< ::GameObject > >::const_iterator i = objects.begin(); i != objects.end(); ++i)
     {
       if (!(*i)->get_name().empty())
         console << (*i)->get_name() << std::endl;



From grumbel at mail.berlios.de  Sun Mar  8 02:49:07 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 02:49:07 +0100
Subject: [Windstille-commit] r2563 - in trunk/windstille/src: engine objects
Message-ID: <200903080149.n281n7xt014620@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 02:49:06 +0100 (Sun, 08 Mar 2009)
New Revision: 2563

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/objects/player.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-06 13:43:34 UTC (rev 2562)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 01:49:06 UTC (rev 2563)
@@ -225,6 +225,12 @@
 }
 
 void
+ScriptManager::set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout)
+{
+  set_wakeup_event(vm, WakeupData(event), timeout);
+}
+
+void
 ScriptManager::fire_wakeup_event(WakeupData event)
 {
   assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
@@ -254,12 +260,6 @@
 }
 
 void
-ScriptManager::set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout)
-{
-  set_wakeup_event(vm, WakeupData(event), timeout);
-}
-
-void
 ScriptManager::fire_wakeup_event(WakeupEvent event)
 {
   fire_wakeup_event(WakeupData(event));

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-06 13:43:34 UTC (rev 2562)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-08 01:49:06 UTC (rev 2563)
@@ -105,6 +105,7 @@
 
   void set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout = -1);
   void set_wakeup_event(HSQUIRRELVM vm, WakeupData  event, float timeout = -1);
+
   void fire_wakeup_event(WakeupEvent event);
   void fire_wakeup_event(WakeupData  event);
   

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-03-06 13:43:34 UTC (rev 2562)
+++ trunk/windstille/src/objects/player.hpp	2009-03-08 01:49:06 UTC (rev 2563)
@@ -91,13 +91,11 @@
   
   double reload_time;
   float  z_pos;
-  static Player* current_;
+
 public:
   Player ();
   virtual ~Player ();
 
-  static Player* current() { return current_; }
-
   int get_movement_state() { return state; }
 
   void draw (SceneContext& gc);
@@ -171,6 +169,11 @@
   void try_set_action(const std::string& name, float speed = 1.0);
 
   Direction get_direction() const;
+
+public:
+  static Player* current() { return current_; }
+private:
+  static Player* current_;
 };
 
 #endif



From grumbel at mail.berlios.de  Sun Mar  8 04:22:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 04:22:12 +0100
Subject: [Windstille-commit] r2564 - trunk/windstille/src/engine
Message-ID: <200903080322.n283MC9h029126@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 04:22:11 +0100 (Sun, 08 Mar 2009)
New Revision: 2564

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
Log:
Moved a bunch of code into SquirrelVM class

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 01:49:06 UTC (rev 2563)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 03:22:11 UTC (rev 2564)
@@ -20,7 +20,7 @@
 using namespace Scripting;
 
 ScriptManager* ScriptManager::current_ = 0;
-
+
 static void printfunc(HSQUIRRELVM, const char* str, ...)
 {
   char buf[4096];
@@ -31,7 +31,7 @@
   puts(buf);
   va_end(arglist); 
 }
-
+
 ScriptManager::ScriptManager()
 {
   assert(current_ == 0);
@@ -77,11 +77,11 @@
 
 ScriptManager::~ScriptManager()
 {
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
-    sq_release(vm, &(i->vm_obj));
+  // Manually clear it so that the boost::shared_ptr get deleted
+  // before we close the vm
+  squirrel_vms.clear();
 
   sq_close(vm);
-
   current_ = 0;
 }
 
@@ -115,84 +115,23 @@
 void
 ScriptManager::run_script(std::istream& in, const std::string& sourcename)
 {
-  HSQUIRRELVM thread = sq_newthread(vm, 1024);
-  if(thread == 0)
-    {
-      throw SquirrelError(vm, "Couldn't create new VM");
-    }
-  else
-    {
-      // retrieve reference to thread from stack and increase refcounter
-      HSQOBJECT vm_obj;
-
-      // Init the object
-      sq_resetobject(&vm_obj);
-
-      // store thread created by sq_newthread into vm_obj
-      if(sq_getstackobj(vm, -1, &vm_obj) < 0)
-        throw SquirrelError(vm, "Couldn't get coroutine vm from stack");
-
-      // Add reference and remove object from stack
-      sq_addref(vm, &vm_obj);
-      sq_pop(vm, 1);
-  
-      // Compile the script and push it on the stack
-      if(sq_compile(thread, squirrel_read_char, &in, sourcename.c_str(), true) < 0)
-        throw SquirrelError(thread, "Couldn't parse script");
-     
-      // Add VM to the list of VMs
-      squirrel_vms.push_back(SquirrelVM(sourcename, thread, vm_obj));
-      already_run_scripts[sourcename] = true;
-
-      // FIXME: a script that gets run shouldn't have direct access to the root table
-      // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
-      sq_pushroottable(thread);
-      //sq_clone(thread, -1); //FIXME
-
-      // Start the script that was previously compiled
-      if (SQ_FAILED(sq_call(thread, 1, false, true)))
-        throw SquirrelError(thread, "Couldn't start script");
-    }
+  // Add VM to the list of VMs
+  squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));
+  squirrel_vms.back()->run();
+  already_run_scripts[sourcename] = true;   
 }
 
 void
 ScriptManager::update()
 {
-  // 
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ) 
     {
-      SquirrelVM& squirrel_vm = *i;
-      int vm_state = sq_getvmstate(squirrel_vm.vm);
-    
-      if (vm_state == SQ_VMSTATE_SUSPENDED)
+      if ((*i)->update())
         {
-          if (squirrel_vm.wakeup_time > 0 && 
-              game_time >= squirrel_vm.wakeup_time) 
-            {
-              squirrel_vm.waiting_for_events = WakeupData(NO_EVENT);
-              try 
-                {
-                  if(sq_wakeupvm(squirrel_vm.vm, false, false, true) < 0) 
-                    {
-                      throw SquirrelError(squirrel_vm.vm, "Couldn't resume script");
-                    }
-                } 
-              catch(std::exception& e) 
-                {
-                  std::cerr << "Problem executing script: " << e.what() << "\n";
-                  sq_release(vm, &squirrel_vm.vm_obj);
-                  i = squirrel_vms.erase(i);
-                  continue;
-                }
-            }
-          else
-            {
-              ++i;
-            }
+          ++i;
         }
-      else // if (vm_state != SQ_VMSTATE_SUSPENDED) 
+      else
         {
-          sq_release(vm, &squirrel_vm.vm_obj);
           i = squirrel_vms.erase(i);
         }
     }
@@ -202,23 +141,13 @@
 ScriptManager::set_wakeup_event(HSQUIRRELVM vm, WakeupData event, float timeout)
 {
   assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
+
   // find the VM in the list and update it
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
-      SquirrelVM& squirrel_vm = *i;
-
-      if(squirrel_vm.vm == vm) 
+      if((*i)->vm == vm) 
         {
-          squirrel_vm.waiting_for_events = event;
-
-          if(timeout < 0) 
-            {
-              squirrel_vm.wakeup_time = -1;
-            } 
-          else 
-            {
-              squirrel_vm.wakeup_time = game_time + timeout;
-            }
+          (*i)->set_wakeup_event(event, timeout);
           return;
         }
     }
@@ -237,25 +166,7 @@
 
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
-      SquirrelVM& vm = *i;
-
-      if(vm.waiting_for_events.type == event.type && 
-         vm.waiting_for_events.type != NO_EVENT)
-        {
-          switch (event.type)
-            {
-              case GAMEOBJECT_DONE:
-                if (vm.waiting_for_events.game_object == event.game_object)
-                  {
-                    vm.wakeup_time = game_time;
-                  }
-                break;
-
-              default:
-                vm.wakeup_time = game_time;
-                break;
-            }
-        }
+      (*i)->fire_wakeup_event(event);
     }
 }
 
@@ -272,8 +183,8 @@
 
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
-      if (i->vm == vm)
-        name = i->name;
+      if ((*i)->vm == vm)
+        name = (*i)->name;
     }
   
   if (already_run_scripts.find(name) == already_run_scripts.end())
@@ -281,14 +192,139 @@
   else
     return true;
 }
-
-ScriptManager::SquirrelVM::SquirrelVM(const std::string& arg_name, HSQUIRRELVM arg_vm, HSQOBJECT arg_obj)
+
+ScriptManager::SquirrelVM::SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm)
   : name(arg_name),
-    vm(arg_vm), 
-    vm_obj(arg_obj)
+    parent_vm(parent_vm),
+    waiting_for_events(NO_EVENT),
+    wakeup_time(0)
 {
-  waiting_for_events = WakeupData(NO_EVENT);
-  wakeup_time        = 0;
+  vm = sq_newthread(parent_vm, 1024);
+
+  if (vm == 0)
+    {
+      throw SquirrelError(vm, "Couldn't create new VM");
+    }
+  else
+    {
+      // retrieve reference to thread from stack and increase refcounter
+
+      // Init the object
+      sq_resetobject(&vm_obj);
+
+      // store thread created by sq_newthread into vm_obj
+      if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
+        {
+          throw SquirrelError(parent_vm, "Couldn't get coroutine vm from stack");
+        }
+      else
+        {
+          // Add reference and remove object from stack
+          sq_addref(parent_vm, &vm_obj);
+          sq_pop(parent_vm, 1);
+  
+          // Compile the script and push it on the stack
+          if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
+            throw SquirrelError(vm, "Couldn't parse script");
+        }
+
+      // FIXME: a script that gets run shouldn't have direct access to the root table
+      // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
+      sq_pushroottable(vm);
+      //sq_clone(vm, -1); //FIXME
+    }
 }
 
+ScriptManager::SquirrelVM::~SquirrelVM()
+{
+  sq_release(vm, &vm_obj);  
+}
+
+void 
+ScriptManager::SquirrelVM::run()
+{
+  // Start the script that was previously compiled
+  if (SQ_FAILED(sq_call(vm, 1, false, true)))
+    throw SquirrelError(vm, "Couldn't start script");
+}
+
+void
+ScriptManager::SquirrelVM::set_wakeup_event(const WakeupData& event, float timeout)
+{
+  waiting_for_events = event;
+
+  if (timeout < 0) 
+    {
+      wakeup_time = -1;
+    } 
+  else 
+    {
+      wakeup_time = game_time + timeout;
+    }
+}
+
+void
+ScriptManager::SquirrelVM::fire_wakeup_event(const WakeupData& event)
+{ 
+  if (waiting_for_events.type == event.type && 
+      waiting_for_events.type != NO_EVENT)
+    {
+      switch (event.type)
+        {
+          case GAMEOBJECT_DONE:
+            if (waiting_for_events.game_object == event.game_object)
+              {
+                wakeup_time = game_time;
+              }
+            break;
+
+          default:
+            wakeup_time = game_time;
+            break;
+        }
+    }
+}
+
+bool
+ScriptManager::SquirrelVM::update()
+{
+  int vm_state = sq_getvmstate(vm);
+    
+  switch(vm_state)
+    {
+      case SQ_VMSTATE_SUSPENDED:
+        if (wakeup_time > 0 && 
+            game_time >= wakeup_time) 
+          {
+            waiting_for_events = WakeupData(NO_EVENT);
+
+            try 
+              {
+                if(sq_wakeupvm(vm, false, false, true) < 0) 
+                  {
+                    throw SquirrelError(vm, "Couldn't resume script");
+                  }
+                return true;
+              }
+            catch(std::exception& e) 
+              {
+                std::cerr << "Problem executing script: " << e.what() << "\n";
+                return false;
+              }
+          }
+        else
+          {
+            return true;
+          }
+        break;
+
+      case SQ_VMSTATE_IDLE:
+      case SQ_VMSTATE_RUNNING: // FIXME: How can this happen?
+        return false;
+
+      default: 
+        assert(!"never reached");
+    }
+}
+
 /* EOF */

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-08 01:49:06 UTC (rev 2563)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-08 03:22:11 UTC (rev 2564)
@@ -24,9 +24,10 @@
 #include <map>
 #include <squirrel.h>
 #include <iostream>
+#include <boost/shared_ptr.hpp>
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
-
+
 /**
  * This class is responsible for managing all running squirrel threads
  * (called coroutines by others)
@@ -41,18 +42,20 @@
   static ScriptManager* current() { return current_; }
 
 public:
-  enum WakeupEvent {
-    NO_EVENT,
-    TIME,
-    DIALOG_CLOSED,
-    CONVERSATION_CLOSED,
-    FADE_DONE,
-    CAMERA_DONE,
-    GAMEOBJECT_DONE,
-    MAX_WAKEUP_EVENT_COUNT
-  };
+  enum WakeupEvent 
+    {
+      NO_EVENT,
+      TIME,
+      DIALOG_CLOSED,
+      CONVERSATION_CLOSED,
+      FADE_DONE,
+      CAMERA_DONE,
+      GAMEOBJECT_DONE,
+      MAX_WAKEUP_EVENT_COUNT
+    };
 
-  struct WakeupData {
+  struct WakeupData 
+  {
     explicit WakeupData() : type(NO_EVENT) {}
     explicit WakeupData(WakeupEvent type_) : type(type_) {}
 
@@ -64,21 +67,35 @@
     };
   };
 
-private:
   class SquirrelVM
   {
   public:
     std::string name;
+  private:
+    HSQUIRRELVM parent_vm;
+  public:
     HSQUIRRELVM vm;
+  private:
     HSQOBJECT   vm_obj;
+    
+    WakeupData  waiting_for_events;
     float       wakeup_time;
-    WakeupData  waiting_for_events;
 
   public:
-    SquirrelVM(const std::string& arg_name, HSQUIRRELVM arg_vm, HSQOBJECT arg_obj);
+    SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
+    ~SquirrelVM();
+
+    void run();
+
+    void set_wakeup_event(const WakeupData& event, float timeout);
+    void fire_wakeup_event(const WakeupData& event);
+
+    /** Returns false when the VM is done and can be removed */
+    bool update();
   };
-  
-  typedef std::list<SquirrelVM> SquirrelVMs;
+
+private:  
+  typedef std::list<boost::shared_ptr<SquirrelVM> > SquirrelVMs;
   SquirrelVMs squirrel_vms;
   std::map<std::string, bool> already_run_scripts;
 
@@ -113,7 +130,7 @@
       before, if the vm is run for the first time return true */
   bool run_before(HSQUIRRELVM vm);
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Sun Mar  8 15:57:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 15:57:24 +0100
Subject: [Windstille-commit] r2565 - in trunk/windstille/src: . engine
Message-ID: <200903081457.n28EvOVQ007965@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 15:57:24 +0100 (Sun, 08 Mar 2009)
New Revision: 2565

Added:
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/engine/squirrel_vm.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
Log:
Moved SquirrelVM to seperate file

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-08 03:22:11 UTC (rev 2564)
+++ trunk/windstille/src/SConscript	2009-03-08 14:57:24 UTC (rev 2565)
@@ -72,6 +72,7 @@
 'engine/game_object.cpp',
 'engine/physics.cpp',
 'engine/script_manager.cpp',
+'engine/squirrel_vm.cpp',
 'engine/sector.cpp',
 'font/border_font_effect.cpp',
 'font/no_font_effect.cpp',

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 03:22:11 UTC (rev 2564)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 14:57:24 UTC (rev 2565)
@@ -1,3 +1,21 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
 #include "script_manager.hpp"
 
 #include <stdarg.h>
@@ -11,6 +29,7 @@
 #include <sqstdmath.h>
 #include <sqstdstring.h>
 
+#include "squirrel_vm.hpp"
 #include "app/console.hpp"
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
@@ -85,18 +104,6 @@
   current_ = 0;
 }
 
-static SQInteger squirrel_read_char(SQUserPointer file)
-{
-  std::istream* in = reinterpret_cast<std::istream*> (file);
-
-  char c = in->get();
-
-  if (in->eof())
-    return 0;
-  else
-    return c;
-}
-
 void
 ScriptManager::run_script_file(const std::string& filename)
 {
@@ -193,138 +200,4 @@
     return true;
 }
 
-ScriptManager::SquirrelVM::SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm)
-  : name(arg_name),
-    parent_vm(parent_vm),
-    waiting_for_events(NO_EVENT),
-    wakeup_time(0)
-{
-  vm = sq_newthread(parent_vm, 1024);
-
-  if (vm == 0)
-    {
-      throw SquirrelError(vm, "Couldn't create new VM");
-    }
-  else
-    {
-      // retrieve reference to thread from stack and increase refcounter
-
-      // Init the object
-      sq_resetobject(&vm_obj);
-
-      // store thread created by sq_newthread into vm_obj
-      if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
-        {
-          throw SquirrelError(parent_vm, "Couldn't get coroutine vm from stack");
-        }
-      else
-        {
-          // Add reference and remove object from stack
-          sq_addref(parent_vm, &vm_obj);
-          sq_pop(parent_vm, 1);
-  
-          // Compile the script and push it on the stack
-          if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
-            throw SquirrelError(vm, "Couldn't parse script");
-        }
-
-      // FIXME: a script that gets run shouldn't have direct access to the root table
-      // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
-      sq_pushroottable(vm);
-      //sq_clone(vm, -1); //FIXME
-    }
-}
-
-ScriptManager::SquirrelVM::~SquirrelVM()
-{
-  sq_release(vm, &vm_obj);  
-}
-
-void 
-ScriptManager::SquirrelVM::run()
-{
-  // Start the script that was previously compiled
-  if (SQ_FAILED(sq_call(vm, 1, false, true)))
-    throw SquirrelError(vm, "Couldn't start script");
-}
-
-void
-ScriptManager::SquirrelVM::set_wakeup_event(const WakeupData& event, float timeout)
-{
-  waiting_for_events = event;
-
-  if (timeout < 0) 
-    {
-      wakeup_time = -1;
-    } 
-  else 
-    {
-      wakeup_time = game_time + timeout;
-    }
-}
-
-void
-ScriptManager::SquirrelVM::fire_wakeup_event(const WakeupData& event)
-{ 
-  if (waiting_for_events.type == event.type && 
-      waiting_for_events.type != NO_EVENT)
-    {
-      switch (event.type)
-        {
-          case GAMEOBJECT_DONE:
-            if (waiting_for_events.game_object == event.game_object)
-              {
-                wakeup_time = game_time;
-              }
-            break;
-
-          default:
-            wakeup_time = game_time;
-            break;
-        }
-    }
-}
-
-bool
-ScriptManager::SquirrelVM::update()
-{
-  int vm_state = sq_getvmstate(vm);
-    
-  switch(vm_state)
-    {
-      case SQ_VMSTATE_SUSPENDED:
-        if (wakeup_time > 0 && 
-            game_time >= wakeup_time) 
-          {
-            waiting_for_events = WakeupData(NO_EVENT);
-
-            try 
-              {
-                if(sq_wakeupvm(vm, false, false, true) < 0) 
-                  {
-                    throw SquirrelError(vm, "Couldn't resume script");
-                  }
-                return true;
-              }
-            catch(std::exception& e) 
-              {
-                std::cerr << "Problem executing script: " << e.what() << "\n";
-                return false;
-              }
-          }
-        else
-          {
-            return true;
-          }
-        break;
-
-      case SQ_VMSTATE_IDLE:
-      case SQ_VMSTATE_RUNNING: // FIXME: How can this happen?
-        return false;
-
-      default: 
-        assert(!"never reached");
-    }
-}
-
 /* EOF */

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-08 03:22:11 UTC (rev 2564)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-08 14:57:24 UTC (rev 2565)
@@ -25,9 +25,12 @@
 #include <squirrel.h>
 #include <iostream>
 #include <boost/shared_ptr.hpp>
+
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
 
+class SquirrelVM;
+
 /**
  * This class is responsible for managing all running squirrel threads
  * (called coroutines by others)
@@ -67,33 +70,6 @@
     };
   };
 
-  class SquirrelVM
-  {
-  public:
-    std::string name;
-  private:
-    HSQUIRRELVM parent_vm;
-  public:
-    HSQUIRRELVM vm;
-  private:
-    HSQOBJECT   vm_obj;
-    
-    WakeupData  waiting_for_events;
-    float       wakeup_time;
-
-  public:
-    SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
-    ~SquirrelVM();
-
-    void run();
-
-    void set_wakeup_event(const WakeupData& event, float timeout);
-    void fire_wakeup_event(const WakeupData& event);
-
-    /** Returns false when the VM is done and can be removed */
-    bool update();
-  };
-
 private:  
   typedef std::list<boost::shared_ptr<SquirrelVM> > SquirrelVMs;
   SquirrelVMs squirrel_vms;

Added: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 03:22:11 UTC (rev 2564)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 14:57:24 UTC (rev 2565)
@@ -0,0 +1,170 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "scripting/squirrel_error.hpp"
+#include "squirrel_vm.hpp"
+
+using Scripting::SquirrelError;
+
+static SQInteger squirrel_read_char(SQUserPointer file)
+{
+  std::istream* in = reinterpret_cast<std::istream*> (file);
+
+  char c = in->get();
+
+  if (in->eof())
+    return 0;
+  else
+    return c;
+}
+
+SquirrelVM::SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm)
+  : name(arg_name),
+    parent_vm(parent_vm),
+    waiting_for_events(ScriptManager::NO_EVENT),
+    wakeup_time(0)
+{
+  vm = sq_newthread(parent_vm, 1024);
+
+  if (vm == 0)
+    {
+      throw SquirrelError(vm, "Couldn't create new VM");
+    }
+  else
+    {
+      // retrieve reference to thread from stack and increase refcounter
+
+      // Init the object
+      sq_resetobject(&vm_obj);
+
+      // store thread created by sq_newthread into vm_obj
+      if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
+        {
+          throw SquirrelError(parent_vm, "Couldn't get coroutine vm from stack");
+        }
+      else
+        {
+          // Add reference and remove object from stack
+          sq_addref(parent_vm, &vm_obj);
+          sq_pop(parent_vm, 1);
+  
+          // Compile the script and push it on the stack
+          if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
+            throw SquirrelError(vm, "Couldn't parse script");
+        }
+
+      // FIXME: a script that gets run shouldn't have direct access to the root table
+      // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
+      sq_pushroottable(vm);
+      //sq_clone(vm, -1); //FIXME
+    }
+}
+
+SquirrelVM::~SquirrelVM()
+{
+  sq_release(vm, &vm_obj);  
+}
+
+void 
+SquirrelVM::run()
+{
+  // Start the script that was previously compiled
+  if (SQ_FAILED(sq_call(vm, 1, false, true)))
+    throw SquirrelError(vm, "Couldn't start script");
+}
+
+void
+SquirrelVM::set_wakeup_event(const ScriptManager::WakeupData& event, float timeout)
+{
+  waiting_for_events = event;
+
+  if (timeout < 0) 
+    {
+      wakeup_time = -1;
+    } 
+  else 
+    {
+      wakeup_time = game_time + timeout;
+    }
+}
+
+void
+SquirrelVM::fire_wakeup_event(const ScriptManager::WakeupData& event)
+{ 
+  if (waiting_for_events.type == event.type && 
+      waiting_for_events.type != ScriptManager::NO_EVENT)
+    {
+      switch (event.type)
+        {
+          case ScriptManager::GAMEOBJECT_DONE:
+            if (waiting_for_events.game_object == event.game_object)
+              {
+                wakeup_time = game_time;
+              }
+            break;
+
+          default:
+            wakeup_time = game_time;
+            break;
+        }
+    }
+}
+
+bool
+SquirrelVM::update()
+{
+  int vm_state = sq_getvmstate(vm);
+    
+  switch(vm_state)
+    {
+      case SQ_VMSTATE_SUSPENDED:
+        if (wakeup_time > 0 && 
+            game_time >= wakeup_time) 
+          {
+            waiting_for_events = ScriptManager::WakeupData(ScriptManager::NO_EVENT);
+
+            try 
+              {
+                if(sq_wakeupvm(vm, false, false, true) < 0) 
+                  {
+                    throw SquirrelError(vm, "Couldn't resume script");
+                  }
+                return true;
+              }
+            catch(std::exception& e) 
+              {
+                std::cerr << "Problem executing script: " << e.what() << "\n";
+                return false;
+              }
+          }
+        else
+          {
+            return true;
+          }
+        break;
+
+      case SQ_VMSTATE_IDLE:
+      case SQ_VMSTATE_RUNNING: // FIXME: How can this happen?
+        return false;
+
+      default: 
+        assert(!"never reached");
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/engine/squirrel_vm.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/engine/squirrel_vm.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 03:22:11 UTC (rev 2564)
+++ trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 14:57:24 UTC (rev 2565)
@@ -0,0 +1,56 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
+#define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
+
+#include <string>
+#include <squirrel.h>
+
+#include "script_manager.hpp"
+
+class SquirrelVM
+{
+public:
+  std::string name;
+private:
+  HSQUIRRELVM parent_vm;
+public:
+  HSQUIRRELVM vm;
+private:
+  HSQOBJECT   vm_obj;
+    
+  ScriptManager::WakeupData  waiting_for_events;
+  float       wakeup_time;
+
+public:
+  SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
+  ~SquirrelVM();
+
+  void run();
+
+  void set_wakeup_event(const ScriptManager::WakeupData& event, float timeout);
+  void fire_wakeup_event(const ScriptManager::WakeupData& event);
+
+  /** Returns false when the VM is done and can be removed */
+  bool update();
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/engine/squirrel_vm.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Sun Mar  8 16:16:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 16:16:44 +0100
Subject: [Windstille-commit] r2566 - trunk/windstille/src/font
Message-ID: <200903081516.n28FGi2g011240@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 16:16:44 +0100 (Sun, 08 Mar 2009)
New Revision: 2566

Modified:
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/border_font_effect.hpp
   trunk/windstille/src/font/fonts.cpp
Log:
Added option to create the border around the font itself

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-03-08 14:57:24 UTC (rev 2565)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-03-08 15:16:44 UTC (rev 2566)
@@ -19,8 +19,9 @@
 #include <algorithm>
 #include "border_font_effect.hpp"
 
-BorderFontEffect::BorderFontEffect(int size_)
-  : size(size_)
+BorderFontEffect::BorderFontEffect(int size_, bool outline_)
+  : size(size_),
+    outline(outline_)
 {
 }
 
@@ -76,6 +77,15 @@
 
   int target_pitch = target->pitch;
 
+  uint8_t red   = 0;
+  uint8_t blue  = 0;
+  uint8_t green = 0;
+
+  if (outline)
+    {
+      red = blue = green = 255;
+    }
+
   // Draw the border
   for (int y = start_y; y < end_y; ++y)
     for (int x = start_x; x < end_x; ++x)
@@ -86,30 +96,32 @@
               int target_pos = (y + y_pos + by) * target_pitch + 4*(x + x_pos + bx);
               int brush_pos  = y * brush.pitch + x;
             
-              target_buf[target_pos + 0] = 0;
-              target_buf[target_pos + 1] = 0;
-              target_buf[target_pos + 2] = 0;
+              target_buf[target_pos + 0] = red;
+              target_buf[target_pos + 1] = blue;
+              target_buf[target_pos + 2] = green;
               target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
             }
       }
 
-  // Draw the font itself
-  for (int y = start_y; y < end_y; ++y)
-    for (int x = start_x; x < end_x; ++x)
-      {
-        int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
-        int brush_pos  = y * brush.pitch + x;
+  if (outline)
+    {
+      // Draw the font itself
+      for (int y = start_y; y < end_y; ++y)
+        for (int x = start_x; x < end_x; ++x)
+          {
+            int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
+            int brush_pos  = y * brush.pitch + x;
         
-        int alpha = brush.buffer[brush_pos];
+            int alpha = brush.buffer[brush_pos];
 
-        target_buf[target_pos + 0] = std::min((target_buf[target_pos + 0] * (255 - alpha) + alpha * 255)/255, 255);
-        target_buf[target_pos + 1] = std::min((target_buf[target_pos + 1] * (255 - alpha) + alpha * 255)/255, 255);
-        target_buf[target_pos + 2] = std::min((target_buf[target_pos + 2] * (255 - alpha) + alpha * 255)/255, 255);
-        target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
-      }
-    
+            target_buf[target_pos + 0] = std::min((target_buf[target_pos + 0] * (255 - alpha) + alpha * 255)/255, 255);
+            target_buf[target_pos + 1] = std::min((target_buf[target_pos + 1] * (255 - alpha) + alpha * 255)/255, 255);
+            target_buf[target_pos + 2] = std::min((target_buf[target_pos + 2] * (255 - alpha) + alpha * 255)/255, 255);
+            target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
+          }
+    }
+
   SDL_UnlockSurface(target);
-
 }
 
 /* EOF */

Modified: trunk/windstille/src/font/border_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.hpp	2009-03-08 14:57:24 UTC (rev 2565)
+++ trunk/windstille/src/font/border_font_effect.hpp	2009-03-08 15:16:44 UTC (rev 2566)
@@ -25,9 +25,16 @@
 class BorderFontEffect : public FontEffect
 {
 private:
-  int size;
+  int  size;
+  bool outline;
+
 public:
-  BorderFontEffect(int size);
+  /** Create a pixel border around the font
+      
+      @param size     Size of the border in pixel
+      @param outline  If true add the border as an outline to the font, else add it to the font itself
+   */
+  BorderFontEffect(int size, bool outline);
   ~BorderFontEffect();
   
   int get_height(int orig_font_size) const;

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-03-08 14:57:24 UTC (rev 2565)
+++ trunk/windstille/src/font/fonts.cpp	2009-03-08 15:16:44 UTC (rev 2566)
@@ -29,11 +29,11 @@
 void
 Fonts::init()
 {
-  ttffont = new TTFFont("fonts/VeraMono.ttf", 12, BorderFontEffect(1));
-  vera12  = new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2));
-  vera16  = new TTFFont("fonts/Vera.ttf",     16, BorderFontEffect(2));
-  vera20  = new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2));
-  vera28  = new TTFFont("fonts/Vera.ttf",     28, BorderFontEffect(2));
+  ttffont = new TTFFont("fonts/VeraMono.ttf", 12, BorderFontEffect(1, true));
+  vera12  = new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2, true));
+  vera16  = new TTFFont("fonts/Vera.ttf",     16, BorderFontEffect(2, true));
+  vera20  = new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2, true));
+  vera28  = new TTFFont("fonts/Vera.ttf",     28, BorderFontEffect(2, true));
 }
 
 void



From grumbel at mail.berlios.de  Sun Mar  8 16:33:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 16:33:38 +0100
Subject: [Windstille-commit] r2567 - trunk/windstille/src/font
Message-ID: <200903081533.n28FXc2d013328@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 16:33:38 +0100 (Sun, 08 Mar 2009)
New Revision: 2567

Modified:
   trunk/windstille/src/font/border_font_effect.cpp
Log:
inverted outline bool in if statement

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-03-08 15:16:44 UTC (rev 2566)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-03-08 15:33:38 UTC (rev 2567)
@@ -81,7 +81,7 @@
   uint8_t blue  = 0;
   uint8_t green = 0;
 
-  if (outline)
+  if (!outline)
     {
       red = blue = green = 255;
     }



From grumbel at mail.berlios.de  Sun Mar  8 16:49:57 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 16:49:57 +0100
Subject: [Windstille-commit] r2568 - in trunk/windstille:
	data/sectors/apartment src/engine
Message-ID: <200903081549.n28Fnv14014626@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 16:49:56 +0100 (Sun, 08 Mar 2009)
New Revision: 2568

Modified:
   trunk/windstille/data/sectors/apartment/barrobot.nut
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/engine/squirrel_vm.hpp
Log:
Added support for init() and run() functions inside scripts

Modified: trunk/windstille/data/sectors/apartment/barrobot.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-08 15:33:38 UTC (rev 2567)
+++ trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-08 15:49:56 UTC (rev 2568)
@@ -1,126 +1,129 @@
-barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
+function run()
+{
+  barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
+  jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
 
-jane.say("So, what do you have to offer?")
-barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani")
-jane.say("Anything else?")
-barrobot.say("Wiskey, Milk all that stuff, what do you want?")
+  jane.say("So, what do you have to offer?")
+    barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani")
+    jane.say("Anything else?")
+    barrobot.say("Wiskey, Milk all that stuff, what do you want?")
 
-conversation_add2("Milk",   "Haven't drank any milk in a while.");
-conversation_add2("Wiskey", "I don't think my stomach can take it.");
-conversation_add2("Beer",   "The old classic, always good, never great.");
+    conversation_add2("Milk",   "Haven't drank any milk in a while.");
+  conversation_add2("Wiskey", "I don't think my stomach can take it.");
+  conversation_add2("Beer",   "The old classic, always good, never great.");
 
-switch (conversation_get())
-  {
-  case 0:
-    jane.say("Give me a Milk.");
-    barrobot.say("Milk drinker? Here you go.");
-    break;
+  switch (conversation_get())
+    {
+      case 0:
+        jane.say("Give me a Milk.");
+        barrobot.say("Milk drinker? Here you go.");
+        break;
 
-  case 1:
-    jane.say("Give me a Wiskey, the best you have"); 
-    barrobot.say("Here is the wiskey.");
-    break;
+      case 1:
+        jane.say("Give me a Wiskey, the best you have"); 
+        barrobot.say("Here is the wiskey.");
+        break;
 
-  case 2:
-    jane.say("Give me a beer, that finest of Nugani");
-    barrobot.say("Here is the beer.");
-    break;
-  }
+      case 2:
+        jane.say("Give me a beer, that finest of Nugani");
+        barrobot.say("Here is the beer.");
+        break;
+    }
 
-quit()
+  quit();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_add("Choice 8");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_add("Choice 8");
+  conversation_get();
 
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_add("Choice 8");
-conversation_add("Choice 9");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_add("Choice 8");
+  conversation_add("Choice 9");
+  conversation_get();
   
-conversation_add("Choice 1");
-conversation_add("Choice 2");
-conversation_add("Choice 3");
-conversation_add("Choice 4");
-conversation_add("Choice 5");
-conversation_add("Choice 6");
-conversation_add("Choice 7");
-conversation_add("Choice 8");
-conversation_add("Choice 9");
-conversation_add("Choice 10");
-conversation_get()
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_add("Choice 8");
+  conversation_add("Choice 9");
+  conversation_add("Choice 10");
+  conversation_get();
   
-// cutscene_begin();
+  // cutscene_begin();
 
-// barrobot <- Dialog(TOP, "Bar Robot", "images/portraits/barrobot.sprite");
-// jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
+  // barrobot <- Dialog(TOP, "Bar Robot", "images/portraits/barrobot.sprite");
+  // jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
 
-// barrobot.show("Hello how are you?")
+  // barrobot.show("Hello how are you?")
 
-// // yagor.show("How are you?<sleep>\nEverything fine today?")
-// // jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
-// // yagor.show("Sure, here take....")
-// // fadeout()
-// // wait_for_fade()
-// // fadein();
-// // yagor.show("Here it is.")
-// // jane.show("Ok, thanks, time to explore this apartment a bit.")
+  // // yagor.show("How are you?<sleep>\nEverything fine today?")
+  // // jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
+  // // yagor.show("Sure, here take....")
+  // // fadeout()
+  // // wait_for_fade()
+  // // fadein();
+  // // yagor.show("Here it is.")
+  // // jane.show("Ok, thanks, time to explore this apartment a bit.")
 
-// // objects.flashlight.set_active(true);
-// // objects.flashlight.set_parent("player");
+  // // objects.flashlight.set_active(true);
+  // // objects.flashlight.set_parent("player");
 
-// cutscene_end();
+  // cutscene_end();
+}
 
 /* EOF */

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 15:33:38 UTC (rev 2567)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 15:49:56 UTC (rev 2568)
@@ -67,11 +67,6 @@
           if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
             throw SquirrelError(vm, "Couldn't parse script");
         }
-
-      // FIXME: a script that gets run shouldn't have direct access to the root table
-      // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
-      sq_pushroottable(vm);
-      //sq_clone(vm, -1); //FIXME
     }
 }
 
@@ -83,9 +78,24 @@
 void 
 SquirrelVM::run()
 {
+  // FIXME: a script that gets run shouldn't have direct access to the root table
+  // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
+  sq_pushroottable(vm);
+  //sq_clone(vm, -1); //FIXME
+
   // Start the script that was previously compiled
   if (SQ_FAILED(sq_call(vm, 1, false, true)))
     throw SquirrelError(vm, "Couldn't start script");
+
+  if (sq_getvmstate(vm) == SQ_VMSTATE_IDLE)
+    {
+      call("init");
+    }
+
+  if (sq_getvmstate(vm) == SQ_VMSTATE_IDLE)
+    {
+      call("run");
+    }
 }
 
 void
@@ -140,7 +150,7 @@
 
             try 
               {
-                if(sq_wakeupvm(vm, false, false, true) < 0) 
+                if (sq_wakeupvm(vm, false, false, true) < 0)
                   {
                     throw SquirrelError(vm, "Couldn't resume script");
                   }
@@ -166,5 +176,31 @@
         assert(!"never reached");
     }
 }
+
+void
+SquirrelVM::call(const std::string& function)
+{
+  sq_pushroottable(vm);
+
+  // Lookup the function in the roottable and put it on the stack
+  sq_pushstring(vm, function.c_str(), -1);
+  if (SQ_SUCCEEDED(sq_get(vm, -2)))
+    {
+      // Call the function
+      sq_pushroottable(vm); // 'this' (function environment object)
+      if (SQ_FAILED(sq_call(vm, 1, false, true)))
+        {
+          // FIXME: doesn't this mess up the stack?
+          throw SquirrelError(vm, "SquirrelVM: " + name + ": couldn't call '" + function + "'");
+        }
+
+      // Cleanup
+      sq_pop(vm, 2); //pops the roottable and the function
+    }
+  else
+    {
+      sq_pop(vm, 1); //pops the roottable
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/engine/squirrel_vm.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 15:33:38 UTC (rev 2567)
+++ trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 15:49:56 UTC (rev 2568)
@@ -42,13 +42,17 @@
   SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
   ~SquirrelVM();
 
-  void run();
-
   void set_wakeup_event(const ScriptManager::WakeupData& event, float timeout);
   void fire_wakeup_event(const ScriptManager::WakeupData& event);
 
-  /** Returns false when the VM is done and can be removed */
+  /** Evaluates the scripts */
+  void run();
+
+  /** Resumes the evaluation of the VM if a wakeup has happened.
+      \return false when the VM is done and can be removed */
   bool update();
+
+  void call(const std::string& function);
 };
 
 #endif



From grumbel at mail.berlios.de  Sun Mar  8 19:36:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 19:36:21 +0100
Subject: [Windstille-commit] r2569 - in trunk/windstille/src: engine
	scripting
Message-ID: <200903081836.n28IaLns030491@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 19:36:20 +0100 (Sun, 08 Mar 2009)
New Revision: 2569

Modified:
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/scripting/util.hpp
Log:
Added proper delegation from script environment to root environment (breaks global 'objects' table)

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 15:49:56 UTC (rev 2568)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 18:36:20 UTC (rev 2569)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "scripting/util.hpp"
 #include "scripting/squirrel_error.hpp"
 #include "squirrel_vm.hpp"
 
@@ -62,11 +63,27 @@
           // Add reference and remove object from stack
           sq_addref(parent_vm, &vm_obj);
           sq_pop(parent_vm, 1);
-  
-          // Compile the script and push it on the stack
-          if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
-            throw SquirrelError(vm, "Couldn't parse script");
         }
+      
+      HSQOBJECT env;
+      sq_resetobject(&env);
+
+      sq_newtable(vm);
+      if(sq_getstackobj(vm, -1, &env) < 0) throw SquirrelError(parent_vm, "Couldn't get table from stack");
+      sq_addref(vm, &env); // FIXME: needs to be freed
+
+      // Create a completly empty environment and set delegate it to the roottable
+      sq_pushobject(vm, env); // table
+      sq_pushroottable(vm);   // table, root
+      sq_setdelegate(vm, -2); // table.set_delegate(root)
+      sq_pop(vm, 1);          //
+
+      sq_pushobject(vm, env);
+      sq_setroottable(vm);
+
+      // Compile the script and push it on the stack
+      if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
+        throw SquirrelError(vm, "Couldn't parse script");
     }
 }
 
@@ -81,11 +98,12 @@
   // FIXME: a script that gets run shouldn't have direct access to the root table
   // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
   sq_pushroottable(vm);
-  //sq_clone(vm, -1); //FIXME
+  
+  std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
 
   // Start the script that was previously compiled
   if (SQ_FAILED(sq_call(vm, 1, false, true)))
-    throw SquirrelError(vm, "Couldn't start script");
+    throw SquirrelError(vm, "SquirrelVM::run(): " + name + ": Couldn't start script");
 
   if (sq_getvmstate(vm) == SQ_VMSTATE_IDLE)
     {
@@ -182,6 +200,11 @@
 {
   sq_pushroottable(vm);
 
+  std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
+  sq_getdelegate(vm, -1);
+  std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
+  sq_pop(vm, 1);
+
   // Lookup the function in the roottable and put it on the stack
   sq_pushstring(vm, function.c_str(), -1);
   if (SQ_SUCCEEDED(sq_get(vm, -2)))

Modified: trunk/windstille/src/scripting/util.hpp
===================================================================
--- trunk/windstille/src/scripting/util.hpp	2009-03-08 15:49:56 UTC (rev 2568)
+++ trunk/windstille/src/scripting/util.hpp	2009-03-08 18:36:20 UTC (rev 2569)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SCRIPTING_UTIL_HPP
 #define HEADER_WINDSTILLE_SCRIPTING_UTIL_HPP
 
+#include <vector>
 #include <squirrel.h>
 #include <string>
 



From grumbel at mail.berlios.de  Sun Mar  8 20:10:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 20:10:35 +0100
Subject: [Windstille-commit] r2570 - trunk/windstille/src/engine
Message-ID: <200903081910.n28JAZfp011718@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 20:10:34 +0100 (Sun, 08 Mar 2009)
New Revision: 2570

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
Log:
Moved expose/remove_object_from_squirrel to ScriptManager, properly create empty 'objects' table on startup

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 18:36:20 UTC (rev 2569)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 19:10:34 UTC (rev 2570)
@@ -36,8 +36,11 @@
 #include "scripting/squirrel_error.hpp"
 #include "physfs/physfs_stream.hpp"
 
-using namespace Scripting;
+using Scripting::SquirrelError;
 
+// The table (works like a namespace here) where the game objects will appear
+static const char* OBJECTS_TABLE = "objects";
+
 ScriptManager* ScriptManager::current_ = 0;
 
 static void printfunc(HSQUIRRELVM, const char* str, ...)
@@ -91,6 +94,13 @@
   
       // register windstille API
       Scripting::register_windstille_wrapper(vm);
+
+      // Create the "objects" table
+      sq_pushroottable(vm);
+      sq_pushstring(vm, OBJECTS_TABLE, -1);
+      sq_newtable(vm);
+      sq_newslot(vm, -3, SQFalse);
+      sq_pop(vm, 1);
     }
 }
 
@@ -200,4 +210,85 @@
     return true;
 }
 
+void
+ScriptManager::remove_object_from_squirrel(boost::shared_ptr<GameObject> object)
+{
+  // get objects table
+  HSQUIRRELVM v = ScriptManager::current()->get_vm();
+  sq_pushroottable(v);
+  sq_pushstring(v, OBJECTS_TABLE, -1);
+  if(SQ_FAILED(sq_get(v, -2)))
+  {
+    std::ostringstream msg;
+    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  // remove object from table
+  sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
+  if(SQ_FAILED(sq_deleteslot(v, -2, SQFalse))) {
+    std::ostringstream msg;
+    msg << "Couldn't remove squirrel object for '" << object->get_name()
+        << "'";
+    throw SquirrelError(v, msg.str());
+  }
+  
+  // pop objects and root table
+  sq_pop(v, 2);
+}
+
+// tries to find out the "real" class of an gameobject by some dynamic casting
+// and creates a matching squirrel instance for that object
+static inline void create_squirrel_instance(HSQUIRRELVM v, boost::shared_ptr<GameObject> object)
+{
+  if (dynamic_cast<ScriptableObject*>(object.get()))
+    {
+      create_squirrel_instance(v, new Scripting::ScriptableObject(object),
+                               true);
+      return;
+    }
+  
+  if (dynamic_cast<TestObject*>(object.get()))
+    {
+      create_squirrel_instance(v, new Scripting::TestObject(object), true);
+      return;
+    }                                                                             
+
+  if (dynamic_cast<Player*>(object.get()))
+    {
+      create_squirrel_instance(v, new Scripting::Player(object), true);
+      return;
+    }
+
+  create_squirrel_instance(v, new Scripting::GameObject(object), true);
+}
+
+void
+ScriptManager::expose_object_to_squirrel(boost::shared_ptr<GameObject> object)
+{
+  // get objects table
+  HSQUIRRELVM v = ScriptManager::current()->get_vm();
+  sq_pushroottable(v);
+  sq_pushstring(v, OBJECTS_TABLE, -1);
+  if(SQ_FAILED(sq_get(v, -2)))
+  {
+    std::ostringstream msg;
+    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
+    throw SquirrelError(v, msg.str());
+  }
+  
+  // create squirrel instance and register in table
+  sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
+  create_squirrel_instance(v, object);
+  if(SQ_FAILED(sq_createslot(v, -3)))
+  {
+    std::ostringstream msg;
+    msg << "Couldn't register object in objects tab?e";
+    throw SquirrelError(v, msg.str());
+  }
+
+  // pop roottable and objects table
+  sq_pop(v, 2);
+}
+
 /* EOF */

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-08 18:36:20 UTC (rev 2569)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-08 19:10:34 UTC (rev 2570)
@@ -102,6 +102,9 @@
   void fire_wakeup_event(WakeupEvent event);
   void fire_wakeup_event(WakeupData  event);
   
+  void expose_object_to_squirrel(boost::shared_ptr<GameObject> object);
+  void remove_object_from_squirrel(boost::shared_ptr<GameObject> object);
+
   /** Returns true if the given vm as been used in a run_script() call
       before, if the vm is run for the first time return true */
   bool run_before(HSQUIRRELVM vm);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-08 18:36:20 UTC (rev 2569)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-08 19:10:34 UTC (rev 2570)
@@ -50,21 +50,12 @@
 
 #include "sector.hpp"
 
-// The table (works like a namespace here) where the game objects will appear
-#define OBJECTS_TABLE "objects"
-
 Sector* Sector::current_ = 0;
 
 Sector::Sector(const std::string& arg_filename)
   : filename(arg_filename),
     player(0)    
-{
-  // make sure squirrel has an "objects" table
-  ScriptManager::current()->run_script(
-      "if(! (\"" OBJECTS_TABLE "\" in this)) {"
-      "  " OBJECTS_TABLE " <- {};"
-      "}", "");
-  
+{ 
   if (debug) std::cout << "Creating new Sector" << std::endl;
   collision_engine = std::auto_ptr<CollisionEngine>(new CollisionEngine());
   navigation_graph = std::auto_ptr<NavigationGraph>(new NavigationGraph());
@@ -187,7 +178,7 @@
   commit_removes();
 
   sound_manager->play_music(music);
-  if (init_script != "")
+  if (!init_script.empty())
     ScriptManager::current()->run_script_file(get_directory() + init_script);
 }
 
@@ -237,7 +228,7 @@
         {
           if(object->get_name() != "") 
             {
-              remove_object_from_squirrel(object);
+              ScriptManager::current()->remove_object_from_squirrel(object);
             }
 
           i = objects.erase(i);
@@ -255,95 +246,10 @@
 
   if(obj->get_name() != "") 
     {
-      expose_object_to_squirrel(new_objects.back());
+      ScriptManager::current()->expose_object_to_squirrel(new_objects.back());
     }
 }
 
-void
-Sector::remove_object_from_squirrel(boost::shared_ptr<GameObject> object)
-{
-  using namespace Scripting;
-
-  // get objects table
-  HSQUIRRELVM v = ScriptManager::current()->get_vm();
-  sq_pushroottable(v);
-  sq_pushstring(v, OBJECTS_TABLE, -1);
-  if(SQ_FAILED(sq_get(v, -2)))
-  {
-    std::ostringstream msg;
-    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
-    throw SquirrelError(v, msg.str());
-  }
-
-  // remove object from table
-  sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
-  if(SQ_FAILED(sq_deleteslot(v, -2, SQFalse))) {
-    std::ostringstream msg;
-    msg << "Couldn't remove squirrel object for '" << object->get_name()
-        << "'";
-    throw SquirrelError(v, msg.str());
-  }
-  
-  // pop objects and root table
-  sq_pop(v, 2);
-}
-
-// tries to find out the "real" class of an gameobject by some dynamic casting
-// and creates a matching squirrel instance for that object
-static inline void create_squirrel_instance(HSQUIRRELVM v, boost::shared_ptr<GameObject> object)
-{
-  if (dynamic_cast<ScriptableObject*>(object.get()))
-    {
-      create_squirrel_instance(v, new Scripting::ScriptableObject(object),
-                               true);
-      return;
-    }
-  
-  if (dynamic_cast<TestObject*>(object.get()))
-    {
-      create_squirrel_instance(v, new Scripting::TestObject(object), true);
-      return;
-    }                                                                             
-
-  if (dynamic_cast<Player*>(object.get()))
-    {
-      create_squirrel_instance(v, new Scripting::Player(object), true);
-      return;
-    }
-
-  create_squirrel_instance(v, new Scripting::GameObject(object), true);
-}
-
-void
-Sector::expose_object_to_squirrel(boost::shared_ptr<GameObject> object)
-{
-  using namespace Scripting;
-
-  // get objects table
-  HSQUIRRELVM v = ScriptManager::current()->get_vm();
-  sq_pushroottable(v);
-  sq_pushstring(v, OBJECTS_TABLE, -1);
-  if(SQ_FAILED(sq_get(v, -2)))
-  {
-    std::ostringstream msg;
-    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
-    throw SquirrelError(v, msg.str());
-  }
-  
-  // create squirrel instance and register in table
-  sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
-  create_squirrel_instance(v, object);
-  if(SQ_FAILED(sq_createslot(v, -3)))
-  {
-    std::ostringstream msg;
-    msg << "Couldn't register object in objects tab?e";
-    throw SquirrelError(v, msg.str());
-  }
-
-  // pop roottable and objects table
-  sq_pop(v, 2);
-}
-
 GameObject*
 Sector::get_object(const std::string& name) const
 {

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-08 18:36:20 UTC (rev 2569)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-08 19:10:34 UTC (rev 2570)
@@ -71,9 +71,6 @@
   void commit_adds();
   void commit_removes();
 
-  void expose_object_to_squirrel(boost::shared_ptr<GameObject> object);
-  void remove_object_from_squirrel(boost::shared_ptr<GameObject> object);
-
 public:
   Sector(const std::string& filename);
   ~Sector();



From grumbel at mail.berlios.de  Sun Mar  8 20:51:11 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 20:51:11 +0100
Subject: [Windstille-commit] r2571 - trunk/windstille/src/scripting
Message-ID: <200903081951.n28JpBtq016253@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 20:51:10 +0100 (Sun, 08 Mar 2009)
New Revision: 2571

Modified:
   trunk/windstille/src/scripting/squirrel_error.cpp
   trunk/windstille/src/scripting/squirrel_error.hpp
Log:
Added context/filename to SquirrelError

Modified: trunk/windstille/src/scripting/squirrel_error.cpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.cpp	2009-03-08 19:10:34 UTC (rev 2570)
+++ trunk/windstille/src/scripting/squirrel_error.cpp	2009-03-08 19:51:10 UTC (rev 2571)
@@ -19,8 +19,26 @@
 #include "squirrel_error.hpp"
 #include <sstream>
 
-namespace Scripting
+namespace Scripting {
+
+SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message) throw()
 {
+  std::ostringstream msg;
+  msg << "Squirrel error: " << context << ": " << message << " (";
+  const char* lasterr;
+  sq_getlasterror(v);
+  if(sq_gettype(v, -1) != OT_STRING)
+  {
+    lasterr = "no error info";
+  }
+  else
+  {
+    sq_getstring(v, -1, &lasterr);
+  }
+  sq_pop(v, 1);
+  msg << lasterr << ")";
+  this->message = msg.str();
+}
 
 SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& message) throw()
 {
@@ -50,6 +68,6 @@
   return message.c_str();
 }
 
-}
+} // namespace Scripting
 
 /* EOF */

Modified: trunk/windstille/src/scripting/squirrel_error.hpp
===================================================================
--- trunk/windstille/src/scripting/squirrel_error.hpp	2009-03-08 19:10:34 UTC (rev 2570)
+++ trunk/windstille/src/scripting/squirrel_error.hpp	2009-03-08 19:51:10 UTC (rev 2571)
@@ -32,6 +32,7 @@
 class SquirrelError : public std::exception
 {
 public:
+  SquirrelError(HSQUIRRELVM v, const std::string& context, const std::string& message) throw();
   SquirrelError(HSQUIRRELVM v, const std::string& message) throw();
   virtual ~SquirrelError() throw();
 



From grumbel at mail.berlios.de  Sun Mar  8 20:54:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 20:54:19 +0100
Subject: [Windstille-commit] r2572 - in trunk/windstille/src: app engine
	screen
Message-ID: <200903081954.n28JsJpe016468@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 20:54:18 +0100 (Sun, 08 Mar 2009)
New Revision: 2572

Modified:
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/screen/game_session.cpp
Log:
Include filename on Squirrel errors, added 'bool global' to execute scripts in the global environment

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-08 19:51:10 UTC (rev 2571)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-08 19:54:18 UTC (rev 2572)
@@ -166,7 +166,7 @@
   sprite2d_manager = new SpriteManager();
   sprite3d_manager = new sprite3d::Manager();
 
-  ScriptManager::current()->run_script_file("scripts/windstille.nut");
+  ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
 
   { // Fill controller_description with data
     controller_description.add_button("primary-button",   PRIMARY_BUTTON);

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 19:51:10 UTC (rev 2571)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 19:54:18 UTC (rev 2572)
@@ -42,6 +42,19 @@
 static const char* OBJECTS_TABLE = "objects";
 
 ScriptManager* ScriptManager::current_ = 0;
+
+// FIXME: Replace this with sq_compilebufer()
+static SQInteger squirrel_read_char(SQUserPointer file)
+{
+  std::istream* in = reinterpret_cast<std::istream*> (file);
+
+  char c = in->get();
+
+  if (in->eof())
+    return 0;
+  else
+    return c;
+}
 
 static void printfunc(HSQUIRRELVM, const char* str, ...)
 {
@@ -115,27 +128,51 @@
 }
 
 void
-ScriptManager::run_script_file(const std::string& filename)
+ScriptManager::run_script_file(const std::string& filename, bool global)
 {
   IFileStream in(filename);
-  run_script(in, filename);
+  run_script(in, filename, global);
 }
 
 void
 ScriptManager::run_script(const std::string& the_string,
-                          const std::string& sourcename)
+                          const std::string& sourcename, 
+                          bool global)
 {
   std::istringstream stream(the_string);
-  run_script(stream, sourcename);
+  run_script(stream, sourcename, global);
 }
 
 void
-ScriptManager::run_script(std::istream& in, const std::string& sourcename)
+ScriptManager::run_script(std::istream& in, const std::string& sourcename, bool global)
 {
-  // Add VM to the list of VMs
-  squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));
-  squirrel_vms.back()->run();
-  already_run_scripts[sourcename] = true;   
+  if (global)
+    {
+      // Scripts run in the global namespace must not suspend
+
+      // Compile the script and push it on the stack
+      if(sq_compile(vm, squirrel_read_char, &in, sourcename.c_str(), true) < 0)
+        throw SquirrelError(vm, "Couldn't parse script");
+
+      // Set 'this' environment
+      sq_pushroottable(vm);
+
+      // Execute the script
+      if (SQ_FAILED(sq_call(vm, 1, false, true)))
+        throw SquirrelError(vm, "SquirrelVM::run(): " + sourcename + ": Couldn't start script");
+
+      if (sq_getvmstate(vm) != SQ_VMSTATE_IDLE)
+        {
+          throw std::runtime_error("ScriptManager::run_script(): " + sourcename + ": global scripts must not suspend");
+        }
+    }
+  else
+    {
+      // Add VM to the list of VMs
+      squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));
+      squirrel_vms.back()->run();
+      already_run_scripts[sourcename] = true;
+    }
 }
 
 void

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-08 19:51:10 UTC (rev 2571)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-08 19:54:18 UTC (rev 2572)
@@ -84,15 +84,15 @@
   void update();
 
   /** Load script from \a filename and runs it */
-  void run_script_file(const std::string& filename);
+  void run_script_file(const std::string& filename, bool global = false);
 
   /** Takes the Squirrel expression in \a script and evaluates it, \a
       sourcename is the filename and used in error messages */
-  void run_script(const std::string& script, const std::string& sourcename);
+  void run_script(const std::string& script, const std::string& sourcename, bool global = false);
 
   /** Load script from \a in and runs it, \a sourcename is the
       filename and used in error messages */
-  void run_script(std::istream& in, const std::string& sourcename);
+  void run_script(std::istream& in, const std::string& sourcename, bool global = false);
 
   HSQUIRRELVM get_vm() const { return vm; }
 

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 19:51:10 UTC (rev 2571)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 19:54:18 UTC (rev 2572)
@@ -44,7 +44,7 @@
 
   if (vm == 0)
     {
-      throw SquirrelError(vm, "Couldn't create new VM");
+      throw SquirrelError(vm, name, "Couldn't create new VM");
     }
   else
     {
@@ -56,7 +56,7 @@
       // store thread created by sq_newthread into vm_obj
       if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
         {
-          throw SquirrelError(parent_vm, "Couldn't get coroutine vm from stack");
+          throw SquirrelError(parent_vm, name, "Couldn't get coroutine vm from stack");
         }
       else
         {
@@ -69,7 +69,7 @@
       sq_resetobject(&env);
 
       sq_newtable(vm);
-      if(sq_getstackobj(vm, -1, &env) < 0) throw SquirrelError(parent_vm, "Couldn't get table from stack");
+      if(sq_getstackobj(vm, -1, &env) < 0) throw SquirrelError(parent_vm, name, "Couldn't get table from stack");
       sq_addref(vm, &env); // FIXME: needs to be freed
 
       // Create a completly empty environment and set delegate it to the roottable
@@ -81,9 +81,10 @@
       sq_pushobject(vm, env);
       sq_setroottable(vm);
 
+      // FIXME: Belongs in run(), but there we don't have the 'in' anymore
       // Compile the script and push it on the stack
       if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
-        throw SquirrelError(vm, "Couldn't parse script");
+        throw SquirrelError(vm, name, "Couldn't parse script");
     }
 }
 
@@ -95,15 +96,13 @@
 void 
 SquirrelVM::run()
 {
-  // FIXME: a script that gets run shouldn't have direct access to the root table
-  // http://wiki.squirrel-lang.org/default.aspx/SquirrelWiki/MultiVMs.html
   sq_pushroottable(vm);
   
   std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
 
   // Start the script that was previously compiled
   if (SQ_FAILED(sq_call(vm, 1, false, true)))
-    throw SquirrelError(vm, "SquirrelVM::run(): " + name + ": Couldn't start script");
+    throw SquirrelError(vm, name, "SquirrelVM::run(): Couldn't start script");
 
   if (sq_getvmstate(vm) == SQ_VMSTATE_IDLE)
     {
@@ -170,7 +169,7 @@
               {
                 if (sq_wakeupvm(vm, false, false, true) < 0)
                   {
-                    throw SquirrelError(vm, "Couldn't resume script");
+                    throw SquirrelError(vm, name, "Couldn't resume script");
                   }
                 return true;
               }
@@ -214,7 +213,7 @@
       if (SQ_FAILED(sq_call(vm, 1, false, true)))
         {
           // FIXME: doesn't this mess up the stack?
-          throw SquirrelError(vm, "SquirrelVM: " + name + ": couldn't call '" + function + "'");
+          throw SquirrelError(vm, name, "SquirrelVM: couldn't call '" + function + "'");
         }
 
       // Cleanup

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-08 19:51:10 UTC (rev 2571)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-08 19:54:18 UTC (rev 2572)
@@ -125,8 +125,7 @@
 
   impl->pause = false;
   
-  if (1)
-    ScriptManager::current()->run_script_file("scripts/init_script_vars.nut");
+  ScriptManager::current()->run_script_file("scripts/init_script_vars.nut", true);
     
   set_sector(impl->filename);
 }



From grumbel at mail.berlios.de  Sun Mar  8 20:55:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 20:55:47 +0100
Subject: [Windstille-commit] r2573 - trunk/windstille/data/scripts
Message-ID: <200903081955.n28Jtl0u016692@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 20:55:46 +0100 (Sun, 08 Mar 2009)
New Revision: 2573

Modified:
   trunk/windstille/data/scripts/init_script_vars.nut
   trunk/windstille/data/scripts/windstille.nut
Log:
Added '::' to some functions since they aren't found for some reason when its missing with the new structure

Modified: trunk/windstille/data/scripts/init_script_vars.nut
===================================================================
--- trunk/windstille/data/scripts/init_script_vars.nut	2009-03-08 19:54:18 UTC (rev 2572)
+++ trunk/windstille/data/scripts/init_script_vars.nut	2009-03-08 19:55:46 UTC (rev 2573)
@@ -1,6 +1,13 @@
 // FIXME: Global variables are evil, so never use: "foo <- 5", instead use "local foo = 5"
 
-like_frank <- false;
+// The following two variables are evil, they should be either
+// declared in a sector specific file or stored somewhere on the C++
+// side. These variables are 'special' because they contain state that
+// survise the execution of the character script
+
+// Used in data/sector/newformat2/bob.nut
 bob_seen_before <- false;
+
+// Used in data/sector/newformat2/bob.nut
 bob_knows_you_mercenary <- false;
 

Modified: trunk/windstille/data/scripts/windstille.nut
===================================================================
--- trunk/windstille/data/scripts/windstille.nut	2009-03-08 19:54:18 UTC (rev 2572)
+++ trunk/windstille/data/scripts/windstille.nut	2009-03-08 19:55:46 UTC (rev 2573)
@@ -32,9 +32,13 @@
 RENDER_MASK_HIGHLIGHTMAP   <- 1<<2
 RENDER_MASK_LIGHTMAPSCREEN <- 1<<3
 RENDER_MASK_BLURMAP        <- 1<<4
-RENDER_MASK_ALL            <- (RENDER_MASK_HIGHLIGHTMAP | RENDER_MASK_LIGHTMAP | RENDER_MASK_COLORMAP | RENDER_MASK_BLURMAP)
+RENDER_MASK_ALL            <- (RENDER_MASK_HIGHLIGHTMAP | 
+                               RENDER_MASK_LIGHTMAP | 
+                               RENDER_MASK_COLORMAP | 
+                               RENDER_MASK_BLURMAP)
 
 has_nightvision <- false;
+
 function nightvision_enabled(...)
 {
   if (vargc == 1) 
@@ -82,14 +86,14 @@
 
   function say(text)
   {
-    dialog_show(align, character, portrait, text);
-    wait_for_dialog();
+    ::dialog_show(align, character, portrait, text);
+    ::wait_for_dialog();
   }
 
   function show(text)
   {
-    dialog_show(align, character, portrait, text);
-    wait_for_dialog();
+    ::dialog_show(align, character, portrait, text);
+    ::wait_for_dialog();
   }
 
   align = null;
@@ -99,8 +103,8 @@
 
 function add_dialog(align, character, portrait, text)
 {
-  dialog_show(align, character, portrait, text);
-  wait_for_dialog();  
+  ::dialog_show(align, character, portrait, text);
+  ::wait_for_dialog();  
 }
 
 /* Some debugging/testing stuff */



From grumbel at mail.berlios.de  Sun Mar  8 21:11:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 21:11:46 +0100
Subject: [Windstille-commit] r2574 - trunk/windstille/src/app
Message-ID: <200903082011.n28KBkQZ018087@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 21:11:45 +0100 (Sun, 08 Mar 2009)
New Revision: 2574

Modified:
   trunk/windstille/src/app/console.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-03-08 19:55:46 UTC (rev 2573)
+++ trunk/windstille/src/app/console.cpp	2009-03-08 20:11:45 UTC (rev 2574)
@@ -329,11 +329,11 @@
   sq_pushnull(v);  //null iterator
   while(SQ_SUCCEEDED(sq_next(v,-2)))
     {
-      //here -1 is the value and -2 is the key
+      // here -1 is the value and -2 is the key
       const SQChar *s;
       if (SQ_SUCCEEDED(sq_getstring(v,-2, &s)))
         {
-          roottable.push_back((char*)s);
+          roottable.push_back((char*)s); // FIXME: likely not going to work on 64bit
         }
       else
         {
@@ -493,30 +493,32 @@
   const char* buffer = str.c_str();
 
   HSQUIRRELVM vm = ScriptManager::current()->get_vm();
+
+  // Remember old stack position
   int oldtop = sq_gettop(vm); 
-  try {
-    int retval = 1;
 
-    if(i > 0) 
-      {
-        if(SQ_SUCCEEDED(sq_compilebuffer(vm, buffer, i, _SC("interactive console"), SQTrue)))
-          {
-            sq_pushroottable(vm);
-            if(SQ_SUCCEEDED(sq_call(vm, 1, retval, true))) 
-              {
-                // FIXME: This does only work when somebody is doing a 'return', i.e. almost never
-                if (sq_gettype(vm, -1) != OT_NULL)
-                  console << Scripting::squirrel2string(vm, -1) << std::endl;
-                // else
-                //   console << "(null)" << std::endl;
-              }
-          }
-      }
-  } catch(std::exception& e) {
-    std::cerr << "Couldn't execute command '" << str_ << "': "
-              << e.what() << "\n";
-  }
+  try 
+    {
+      if(SQ_SUCCEEDED(sq_compilebuffer(vm, buffer, i, _SC("interactive console"), SQTrue)))
+        {
+          sq_pushroottable(vm);
+          if(SQ_SUCCEEDED(sq_call(vm, 1, 1/*retval*/, true))) 
+            {
+              // FIXME: This does only work when somebody is doing a 'return', i.e. almost never
+              if (sq_gettype(vm, -1) != OT_NULL)
+                console << Scripting::squirrel2string(vm, -1) << std::endl;
+              // else
+              //   console << "(null)" << std::endl;
+            }
+        }
+    } 
+  catch(std::exception& e) 
+    {
+      std::cerr << "Couldn't execute command '" << str_ << "': "
+                << e.what() << "\n";
+    }
 
+  // Reset to old stack position
   sq_settop(vm, oldtop);
 }
 



From grumbel at mail.berlios.de  Sun Mar  8 21:12:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 21:12:27 +0100
Subject: [Windstille-commit] r2575 - trunk/windstille/data/sectors/apartment
Message-ID: <200903082012.n28KCRrw018143@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 21:12:27 +0100 (Sun, 08 Mar 2009)
New Revision: 2575

Modified:
   trunk/windstille/data/sectors/apartment/barrobot.nut
   trunk/windstille/data/sectors/apartment/yagor.nut
Log:
Added ';' at line ends, fixed indention

Modified: trunk/windstille/data/sectors/apartment/barrobot.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-08 20:11:45 UTC (rev 2574)
+++ trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-08 20:12:27 UTC (rev 2575)
@@ -1,14 +1,17 @@
-function run()
+function init()
 {
   barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-  jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
+  jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite"); 
+}
 
-  jane.say("So, what do you have to offer?")
-    barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani")
-    jane.say("Anything else?")
-    barrobot.say("Wiskey, Milk all that stuff, what do you want?")
+function run()
+{
+  jane.say("So, what do you have to offer?");
+  barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani");
+  jane.say("Anything else?");
+  barrobot.say("Wiskey, Milk all that stuff, what do you want?");
 
-    conversation_add2("Milk",   "Haven't drank any milk in a while.");
+  conversation_add2("Milk",   "Haven't drank any milk in a while.");
   conversation_add2("Wiskey", "I don't think my stomach can take it.");
   conversation_add2("Beer",   "The old classic, always good, never great.");
 
@@ -30,7 +33,7 @@
         break;
     }
 
-  quit();
+  return;
 
   conversation_add("Choice 1");
   conversation_add("Choice 2");

Modified: trunk/windstille/data/sectors/apartment/yagor.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/yagor.nut	2009-03-08 20:11:45 UTC (rev 2574)
+++ trunk/windstille/data/sectors/apartment/yagor.nut	2009-03-08 20:12:27 UTC (rev 2575)
@@ -1,20 +1,24 @@
-cutscene_begin();
-wait(1);
-yagor <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
+function run()
+{
+  cutscene_begin();
+  wait(1);
 
-yagor.show("How are you?<sleep>\nEverything fine today?")
-jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
-yagor.show("Sure, here take....")
-fadeout()
-wait_for_fade()
-fadein();
-yagor.show("Here it is.")
-jane.show("Ok, thanks, time to explore this apartment a bit.")
+  yagor <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
+  jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
 
-objects.flashlight.set_active(true);
-objects.flashlight.set_parent("player");
+  yagor.show("How are you?<sleep>\nEverything fine today?");
+  jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?");
+  yagor.show("Sure, here take....");
+  fadeout();
+  wait_for_fade();
+  fadein();
+  yagor.show("Here it is.");
+  jane.show("Ok, thanks, time to explore this apartment a bit.");
 
-cutscene_end();
+  objects.flashlight.set_active(true);
+  objects.flashlight.set_parent("player");
 
+  cutscene_end();
+}
+
 /* EOF */



From grumbel at mail.berlios.de  Sun Mar  8 21:13:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 21:13:10 +0100
Subject: [Windstille-commit] r2576 - trunk/windstille
Message-ID: <200903082013.n28KDApb018229@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 21:13:10 +0100 (Sun, 08 Mar 2009)
New Revision: 2576

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-08 20:12:27 UTC (rev 2575)
+++ trunk/windstille/TODO	2009-03-08 20:13:10 UTC (rev 2576)
@@ -1,6 +1,41 @@
 Windstille ToDo
 ===============
 
+* scripts should be able to be persisstant, so that you could call a
+  function on an event in a script
+
+* scripts need to be split into sections/functions, so that we can
+  have a section that is run only once for creating variables (doable via run_before(), but ugly)
+
+* join Player and Character somewhat or derive one from the other
+
+* implement aspect-ration switching at runtime (menu entry is there, just no code)
+
+* objects are currently all exported to squirrel, while we should
+  probally use id-tags and accessor functions instead:
+
+  bob = get_object("barkeeper")
+  bob.say()
+
+* add support for empty sectors (sectors without a player character,
+  for use in intro.wst and similar cutscenes)
+
+* figure out proper 'namespaces' for the scripting, i.e. gfx_ or
+  video_ for all display related stuff and so on, so that
+  tab-completion works better and things become more readable
+
+* implement quit() scripting command that aborts a script in the middle (used for debugging)
+
+* HUD elements are whole screens, should be something simpler, also a
+  seperation between HUD (energybar, speech, etc.) and Overlays
+  (inventory, PDA, etc.) might be good
+
+* do not save options given on the command line by default
+
+* make lightmap resolution independent
+
+* remodel titlescreen as 3D model
+
 * seperate and document components better:
 
   - collision engine
@@ -13,6 +48,8 @@
 
 * unify copyright header and #ifdef guards
 
+ for i in */*.hpp; do echo $i; NAME=$(echo $i | sed "s/[\/\.]/_/g;s/^/HEADER_WINDSTILLE_/" | tr [a-z] [A-Z]);  sed  -i "s/^\(#[a-z]*\) *HEADER_WINDSTILLE_.*/\1 $NAME/" $i; done
+
 * Update Random number generator: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
 
 * document scripting tricks somewhere:
@@ -23,7 +60,7 @@
 * find a astyle/bcpp/whatever configuration that matches the current
   coding style, maybe a little script that uses Emacs would do
 
-* write a LucasArts-like dialog system (i.e. non-blocking text, instead of JRPG like boxes with portraits)
+* write a LucasArts-like dialog system (i.e. non-blocking text, instead of JRPG like boxes with portraits), see SpeechManager
 
 * PDA needs scrolling text thing (right analog stick?)
 
@@ -62,8 +99,7 @@
  15.21      1.14     0.54 37910690     0.00     0.00  VertexArrayDrawingRequest::texcoord(float, float)
  14.37      1.65     0.51 37974070     0.00     0.00  VertexArrayDrawingRequest::vertex(float, float, float)
  11.55      2.06     0.41    79225     0.00     0.00  Sprite3D::draw(Vector2f const&, Matrix const&) const
-
-
+  3.94      2.20     0.14  1133610     0.00     0.00  OpenGLState::activate()
 
 Windstille Bugs
 ===============



From grumbel at mail.berlios.de  Sun Mar  8 23:38:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 23:38:02 +0100
Subject: [Windstille-commit] r2577 - trunk/windstille/data/sectors/newformat2
Message-ID: <200903082238.n28Mc2CB000998@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 23:38:02 +0100 (Sun, 08 Mar 2009)
New Revision: 2577

Modified:
   trunk/windstille/data/sectors/newformat2/newformat2.wst
Log:
Fixed script path

Modified: trunk/windstille/data/sectors/newformat2/newformat2.wst
===================================================================
--- trunk/windstille/data/sectors/newformat2/newformat2.wst	2009-03-08 20:13:10 UTC (rev 2576)
+++ trunk/windstille/data/sectors/newformat2/newformat2.wst	2009-03-08 22:38:02 UTC (rev 2577)
@@ -5,7 +5,7 @@
   (name   "")
   (music  "music/techdemo.ogg")
   (ambient-color .4 .4 .4)
-  (init-script "levels/newformat2.nut")
+  (init-script "newformat2.nut")
   (spawnpoint
     (name "default")
     (pos 300 650)



From grumbel at mail.berlios.de  Sun Mar  8 23:38:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 23:38:25 +0100
Subject: [Windstille-commit] r2578 - in trunk/windstille/data/sectors: intro
	newformat2
Message-ID: <200903082238.n28McPUi001208@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 23:38:24 +0100 (Sun, 08 Mar 2009)
New Revision: 2578

Modified:
   trunk/windstille/data/sectors/intro/intro.nut
   trunk/windstille/data/sectors/newformat2/bob.nut
   trunk/windstille/data/sectors/newformat2/frank.nut
   trunk/windstille/data/sectors/newformat2/newformat2.nut
Log:
Moved script code into run() function

Modified: trunk/windstille/data/sectors/intro/intro.nut
===================================================================
--- trunk/windstille/data/sectors/intro/intro.nut	2009-03-08 22:38:02 UTC (rev 2577)
+++ trunk/windstille/data/sectors/intro/intro.nut	2009-03-08 22:38:24 UTC (rev 2578)
@@ -5,78 +5,80 @@
   fadeout(0.2, r,g,b);
   wait_for_fade();
   wait(1)
-  caption_clear();
+    caption_clear();
   fadein(3);
   wait_for_fade();
 }
 
-//render_mask_set(RENDER_MASK_COLORMAP);
-fadeout(0);
+function run()
+{
+  //render_mask_set(RENDER_MASK_COLORMAP);
+  fadeout(0);
 
-objects.player.set_active(false);
-spawn_object("scriptable-object", { name="planet", pos=[0,0],
-                 sprite="images/planet.sprite", z_pos=1001 });
+  objects.player.set_active(false);
+  spawn_object("scriptable-object", { name="planet", pos=[0,0],
+        sprite="images/planet.sprite", z_pos=1001 });
 
-camera_set_active(false);
-camera_set_pos(400, 300); // USA
-camera_set_zoom(4.0);
-fadein(1);
-wait_for_fade();
-cutscene_begin();
-wait(2);
+  camera_set_active(false);
+  camera_set_pos(400, 300); // USA
+  camera_set_zoom(4.0);
+  fadein(1);
+  wait_for_fade();
+  cutscene_begin();
+  wait(2);
 
-caption_add(BOTTOM, "Location: USA");
-wait_for_dialog();
+  caption_add(BOTTOM, "Location: USA");
+  wait_for_dialog();
 
-camera_continue_path();
-camera_add_point(533, 248, 6.0); // greenland
-camera_end_path();
-wait_for_camera();
+  camera_continue_path();
+  camera_add_point(533, 248, 6.0); // greenland
+  camera_end_path();
+  wait_for_camera();
 
-caption_add(BOTTOM, "Location: Greenland");
-wait_for_dialog();
+  caption_add(BOTTOM, "Location: Greenland");
+  wait_for_dialog();
 
-camera_continue_path();
-camera_add_point(445, 513, 3.0); // antarctica
-camera_end_path();
-wait_for_camera();
+  camera_continue_path();
+  camera_add_point(445, 513, 3.0); // antarctica
+  camera_end_path();
+  wait_for_camera();
 
-caption_add(BOTTOM, "Location: Antarctica");
-wait_for_dialog();
+  caption_add(BOTTOM, "Location: Antarctica");
+  wait_for_dialog();
 
-camera_add_point(400, 300, 1.0);
-camera_add_point(400, 300, 1.0);
-camera_end_path();
-// wait_for_camera();
+  camera_add_point(400, 300, 1.0);
+  camera_add_point(400, 300, 1.0);
+  camera_end_path();
+  // wait_for_camera();
 
-caption_add(BOTTOM, "The Big Boom. Humanity found out it could travel to the stars, and it did, en masse.");
+  caption_add(BOTTOM, "The Big Boom. Humanity found out it could travel to the stars, and it did, en masse.");
 
-wait_for_dialog();
-fade_in_out(1,0,0)
+  wait_for_dialog();
+  fade_in_out(1,0,0)
 
-caption_add(BOTTOM, "But it didn't take long for it to turn into The Big Bust. The guilds, the governments and the corporations staked out the best worlds.");
+    caption_add(BOTTOM, "But it didn't take long for it to turn into The Big Bust. The guilds, the governments and the corporations staked out the best worlds.");
 
-wait_for_dialog();
-fade_in_out(1,1,1)
+  wait_for_dialog();
+  fade_in_out(1,1,1)
 
-caption_add(BOTTOM, "Still, many individuals took their chances, even without military hardware and terraformers. Most worlds were so barren or so dangerous that whole colonies died out. In the Free Colonies that survive, life isn't easy.");
+    caption_add(BOTTOM, "Still, many individuals took their chances, even without military hardware and terraformers. Most worlds were so barren or so dangerous that whole colonies died out. In the Free Colonies that survive, life isn't easy.");
 
-wait_for_dialog();
+  wait_for_dialog();
 
-caption_end();
+  caption_end();
 
-fadeout(1);
-wait_for_fade();
-objects.player.set_active(true);
-objects.planet.remove();
+  fadeout(1);
+  wait_for_fade();
+  objects.player.set_active(true);
+  objects.planet.remove();
 
-cutscene_end();
-camera_set_active(true);
+  cutscene_end();
+  camera_set_active(true);
 
-render_mask_set(RENDER_MASK_ALL);
-wait(1);
-wait_for_fade();
-fadein(1);
+  render_mask_set(RENDER_MASK_ALL);
+  wait(1);
+  wait_for_fade();
+  fadein(1);
+}
 
-
 /* EOF */

Modified: trunk/windstille/data/sectors/newformat2/bob.nut
===================================================================
--- trunk/windstille/data/sectors/newformat2/bob.nut	2009-03-08 22:38:02 UTC (rev 2577)
+++ trunk/windstille/data/sectors/newformat2/bob.nut	2009-03-08 22:38:24 UTC (rev 2578)
@@ -8,13 +8,13 @@
   conversation_add("Choice 2"); 
   conversation_add("Choice 3"); 
   if (!conversation_get())
-  {
-    ask_questions();
-  }
+    {
+      ask_questions();
+    }
   else
-  {
-    bye();
-  }
+    {
+      bye();
+    }
 }
 
 function hello_again()
@@ -34,10 +34,10 @@
   conversation_add("I work as a mercenary.");
   conversation_add("Not much");
   if (!conversation_get())
-  {
+    {
       bob_knows_you_mercenary = true;
       offer_job();
-  }
+    }
   else
     bye();
 }
@@ -49,7 +49,7 @@
   conversation_add("No thanks.");
   if (!conversation_get()) {
     add_objective("Kill spider", "You must kill the spider at the end of the level");
-      explain_job();
+    explain_job();
   }
   else
     bye();
@@ -68,14 +68,17 @@
     dialog.show("See you again some time");
 }
 
-dialog <- Dialog(0, "Bob", "images/portraits/bob.sprite");
-if (is_objective_given("Kill spider"))
-  explain_job();
-else if (bob_knows_you_mercenary)
-  offer_job();
-else if (bob_seen_before)
-  hello_again();
-else
-  intro();
+function run()
+{
+  dialog <- Dialog(0, "Bob", "images/portraits/bob.sprite");
+  if (is_objective_given("Kill spider"))
+    explain_job();
+  else if (bob_knows_you_mercenary)
+    offer_job();
+  else if (bob_seen_before)
+    hello_again();
+  else
+    intro();
+}
 
 /* EOF */

Modified: trunk/windstille/data/sectors/newformat2/frank.nut
===================================================================
--- trunk/windstille/data/sectors/newformat2/frank.nut	2009-03-08 22:38:02 UTC (rev 2577)
+++ trunk/windstille/data/sectors/newformat2/frank.nut	2009-03-08 22:38:24 UTC (rev 2578)
@@ -1,12 +1,14 @@
+function run()
+{
+  /* play_sound("sounds/speech/vr_intro.ogg"); */
+  println("Dislaying dialog");
+  add_dialog(TOP, "Frank", "images/portraits/sophie.sprite", 
+             "<sin>Welcome</sin> to the <large>VR training program</large>. Here you " +
+             "will learn the <sin>basic manoeuvering</sin> abilities of <large>your</large> " +
+             "powersuit,<sleep> jumping,<sleep> running, <sleep> climbing<sleep> and shooting. " +
+             "We will start with <small>climbing</small>. See the <i>block</i> in front " +
+             "of you? Press <b>Right</b> and <b>Jump</b> to hang on the ledge.");
+  println("Dislaying done");
+}
 
-/* play_sound("sounds/speech/vr_intro.ogg"); */
-println("Dislaying dialog");
-add_dialog(TOP, "Frank", "images/portraits/sophie.sprite", 
-       "<sin>Welcome</sin> to the <large>VR training program</large>. Here you " +
-       "will learn the <sin>basic manoeuvering</sin> abilities of <large>your</large> " +
-       "powersuit,<sleep> jumping,<sleep> running, <sleep> climbing<sleep> and shooting. " +
-       "We will start with <small>climbing</small>. See the <i>block</i> in front " +
-       "of you? Press <b>Right</b> and <b>Jump</b> to hang on the ledge.");
-println("Dislaying done");
-
 /* EOF */

Modified: trunk/windstille/data/sectors/newformat2/newformat2.nut
===================================================================
--- trunk/windstille/data/sectors/newformat2/newformat2.nut	2009-03-08 22:38:02 UTC (rev 2577)
+++ trunk/windstille/data/sectors/newformat2/newformat2.nut	2009-03-08 22:38:24 UTC (rev 2578)
@@ -1,7 +1,3 @@
-set_controller_help_active(true);
-objects.player_flames2.set_active(false);
-objects.player_flames.set_active(false);      
-
 /* Some fun with fire */
 function startfire()
 {
@@ -21,7 +17,14 @@
   objects.player_flames.set_active(false);
 }
 
-objects.Block0Sign.start_flash(0.7);
-objects.Block0Sign.move_to(100, 370, 100, 2);
+function run()
+{
+  set_controller_help_active(true);
+  objects.player_flames2.set_active(false);
+  objects.player_flames.set_active(false);      
 
+  objects.Block0Sign.start_flash(0.7);
+  objects.Block0Sign.move_to(100, 370, 100, 2);
+}
+
 /* EOF */



From grumbel at mail.berlios.de  Sun Mar  8 23:39:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 23:39:29 +0100
Subject: [Windstille-commit] r2579 - trunk/windstille/src/input
Message-ID: <200903082239.n28MdTCb001337@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 23:39:29 +0100 (Sun, 08 Mar 2009)
New Revision: 2579

Modified:
   trunk/windstille/src/input/input_manager_sdl.hpp
Log:
Mini cleanup

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-03-08 22:38:24 UTC (rev 2578)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-03-08 22:39:29 UTC (rev 2579)
@@ -133,6 +133,7 @@
 
   std::auto_ptr<InputManagerSDLImpl> impl;
 
+private:
   InputManagerSDL (const InputManagerSDL&);
   InputManagerSDL& operator= (const InputManagerSDL&);
 };



From grumbel at mail.berlios.de  Sun Mar  8 23:41:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 23:41:35 +0100
Subject: [Windstille-commit] r2580 - in trunk/windstille/src: engine
	scripting
Message-ID: <200903082241.n28MfZuH001607@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 23:41:35 +0100 (Sun, 08 Mar 2009)
New Revision: 2580

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/engine/squirrel_vm.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Scripts are no longer deleted after being run, instead the VM stays there and the run() method is called when the script is executed again

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -108,7 +108,7 @@
       // register windstille API
       Scripting::register_windstille_wrapper(vm);
 
-      // Create the "objects" table
+      // Create the empty "objects" table
       sq_pushroottable(vm);
       sq_pushstring(vm, OBJECTS_TABLE, -1);
       sq_newtable(vm);
@@ -168,26 +168,44 @@
     }
   else
     {
-      // Add VM to the list of VMs
-      squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));
-      squirrel_vms.back()->run();
-      already_run_scripts[sourcename] = true;
+      SquirrelVMs::iterator it = squirrel_vms.end();
+
+      // Look if the VM is associated with the source file
+      for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
+        {
+          if ((*i)->get_name() == sourcename)
+            {
+              it = i;
+              break;
+            }
+        }
+      
+      if (it != squirrel_vms.end())
+        {
+          // Call the run method
+          if ((*it)->is_idle())
+            {
+              (*it)->call("run");
+            }
+          else
+            {
+              throw std::runtime_error(sourcename + ": ScriptManager::run_script(): Script must be idle to be 'run()'");
+            }
+        }
+      else
+        { // Add VM to the list of VMs
+          squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));     
+          squirrel_vms.back()->run();
+        }
     }
 }
 
 void
 ScriptManager::update()
 {
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ) 
+  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
     {
-      if ((*i)->update())
-        {
-          ++i;
-        }
-      else
-        {
-          i = squirrel_vms.erase(i);
-        }
+      (*i)->update();
     }
 }
 
@@ -199,7 +217,7 @@
   // find the VM in the list and update it
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
-      if((*i)->vm == vm) 
+      if((*i)->get_vm() == vm) 
         {
           (*i)->set_wakeup_event(event, timeout);
           return;
@@ -229,23 +247,6 @@
 {
   fire_wakeup_event(WakeupData(event));
 }
-
-bool
-ScriptManager::run_before(HSQUIRRELVM vm)
-{
-  std::string name;
-
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
-    {
-      if ((*i)->vm == vm)
-        name = (*i)->name;
-    }
-  
-  if (already_run_scripts.find(name) == already_run_scripts.end())
-    return false;
-  else
-    return true;
-}
 
 void
 ScriptManager::remove_object_from_squirrel(boost::shared_ptr<GameObject> object)

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -73,7 +73,6 @@
 private:  
   typedef std::list<boost::shared_ptr<SquirrelVM> > SquirrelVMs;
   SquirrelVMs squirrel_vms;
-  std::map<std::string, bool> already_run_scripts;
 
   HSQUIRRELVM vm;
 
@@ -104,10 +103,6 @@
   
   void expose_object_to_squirrel(boost::shared_ptr<GameObject> object);
   void remove_object_from_squirrel(boost::shared_ptr<GameObject> object);
-
-  /** Returns true if the given vm as been used in a run_script() call
-      before, if the vm is run for the first time return true */
-  bool run_before(HSQUIRRELVM vm);
 };
 
 #endif

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -152,7 +152,7 @@
     }
 }
 
-bool
+void
 SquirrelVM::update()
 {
   int vm_state = sq_getvmstate(vm);
@@ -171,29 +171,39 @@
                   {
                     throw SquirrelError(vm, name, "Couldn't resume script");
                   }
-                return true;
               }
             catch(std::exception& e) 
               {
                 std::cerr << "Problem executing script: " << e.what() << "\n";
-                return false;
               }
           }
-        else
-          {
-            return true;
-          }
         break;
 
       case SQ_VMSTATE_IDLE:
-      case SQ_VMSTATE_RUNNING: // FIXME: How can this happen?
-        return false;
+        break;
 
+      case SQ_VMSTATE_RUNNING: // FIXME: Can this happen without multithreading?
+        break;
+
       default: 
         assert(!"never reached");
     }
 }
 
+bool
+SquirrelVM::is_suspended() const
+{
+  int vm_state = sq_getvmstate(vm);
+  return vm_state == SQ_VMSTATE_SUSPENDED;
+}
+
+bool
+SquirrelVM::is_idle() const
+{
+  int vm_state = sq_getvmstate(vm);
+  return vm_state == SQ_VMSTATE_IDLE;
+}
+
 void
 SquirrelVM::call(const std::string& function)
 {

Modified: trunk/windstille/src/engine/squirrel_vm.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -26,13 +26,10 @@
 
 class SquirrelVM
 {
-public:
+private:
   std::string name;
-private:
   HSQUIRRELVM parent_vm;
-public:
   HSQUIRRELVM vm;
-private:
   HSQOBJECT   vm_obj;
     
   ScriptManager::WakeupData  waiting_for_events;
@@ -50,8 +47,13 @@
 
   /** Resumes the evaluation of the VM if a wakeup has happened.
       \return false when the VM is done and can be removed */
-  bool update();
+  void update();
 
+  bool is_suspended() const;
+  bool is_idle() const;
+
+  std::string get_name() const { return name; }
+  HSQUIRRELVM get_vm() const { return vm; }
   void call(const std::string& function);
 };
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -175,11 +175,6 @@
   return GameSession::current()->get_pda().is_objective_given(name);
 }
 
-bool run_before(HSQUIRRELVM vm)
-{
-  return ScriptManager::current()->run_before(vm);
-}
-
 void load_state(HSQUIRRELVM v, const std::string& filename)
 {
   sq_pushroottable(v);

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -74,9 +74,6 @@
 bool is_objective_given(const std::string& name);
 bool is_objective_complete(const std::string& name);
 
-/** Return true if the script was already run earlier */
-bool run_before(HSQUIRRELVM vm);
-
 // for testing
 void save_state(HSQUIRRELVM v, const std::string& filename);
 void load_state(HSQUIRRELVM v, const std::string& filename);

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-08 22:39:29 UTC (rev 2579)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-08 22:41:35 UTC (rev 2580)
@@ -1109,26 +1109,6 @@
 
 }
 
-static SQInteger run_before_wrapper(HSQUIRRELVM vm)
-{
-  HSQUIRRELVM arg0 = vm;
-
-  try {
-    bool return_value = Scripting::run_before(arg0);
-
-    sq_pushbool(vm, return_value);
-    return 1;
-
-  } catch(std::exception& e) {
-    sq_throwerror(vm, e.what());
-    return SQ_ERROR;
-  } catch(...) {
-    sq_throwerror(vm, _SC("Unexpected exception while executing function 'run_before'"));
-    return SQ_ERROR;
-  }
-
-}
-
 static SQInteger save_state_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
@@ -1911,13 +1891,6 @@
     throw SquirrelError(v, "Couldn't register function 'is_objective_complete'");
   }
 
-  sq_pushstring(v, "run_before", -1);
-  sq_newclosure(v, &run_before_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . ");
-  if(SQ_FAILED(sq_createslot(v, -3))) {
-    throw SquirrelError(v, "Couldn't register function 'run_before'");
-  }
-
   sq_pushstring(v, "save_state", -1);
   sq_newclosure(v, &save_state_wrapper, 0);
   sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . s ");



From grumbel at mail.berlios.de  Sun Mar  8 23:41:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 23:41:56 +0100
Subject: [Windstille-commit] r2581 - trunk/windstille
Message-ID: <200903082241.n28Mfubr001649@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 23:41:56 +0100 (Sun, 08 Mar 2009)
New Revision: 2581

Modified:
   trunk/windstille/TODO
Log:
New point

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-08 22:41:35 UTC (rev 2580)
+++ trunk/windstille/TODO	2009-03-08 22:41:56 UTC (rev 2581)
@@ -1,6 +1,8 @@
 Windstille ToDo
 ===============
 
+* "bounce collision" error is caused by grenade that spawns into a wall
+
 * scripts should be able to be persisstant, so that you could call a
   function on an event in a script
 



From grumbel at mail.berlios.de  Sun Mar  8 23:53:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 8 Mar 2009 23:53:58 +0100
Subject: [Windstille-commit] r2582 - trunk/windstille/src/engine
Message-ID: <200903082253.n28MrwXI002449@sheep.berlios.de>

Author: grumbel
Date: 2009-03-08 23:53:58 +0100 (Sun, 08 Mar 2009)
New Revision: 2582

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/engine/squirrel_vm.hpp
Log:
Removed SquirrelVM::run(), now done via call("init") and call("run")

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 22:41:56 UTC (rev 2581)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-08 22:53:58 UTC (rev 2582)
@@ -195,7 +195,8 @@
       else
         { // Add VM to the list of VMs
           squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));     
-          squirrel_vms.back()->run();
+          squirrel_vms.back()->call("init");
+          squirrel_vms.back()->call("run");
         }
     }
 }

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 22:41:56 UTC (rev 2581)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-08 22:53:58 UTC (rev 2582)
@@ -85,6 +85,12 @@
       // Compile the script and push it on the stack
       if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
         throw SquirrelError(vm, name, "Couldn't parse script");
+
+      sq_pushroottable(vm);
+
+      // Start the script that was previously compiled
+      if (SQ_FAILED(sq_call(vm, 1, false, true)))
+        throw SquirrelError(vm, name, "SquirrelVM::run(): Couldn't start script");
     }
 }
 
@@ -93,28 +99,6 @@
   sq_release(vm, &vm_obj);  
 }
 
-void 
-SquirrelVM::run()
-{
-  sq_pushroottable(vm);
-  
-  std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
-
-  // Start the script that was previously compiled
-  if (SQ_FAILED(sq_call(vm, 1, false, true)))
-    throw SquirrelError(vm, name, "SquirrelVM::run(): Couldn't start script");
-
-  if (sq_getvmstate(vm) == SQ_VMSTATE_IDLE)
-    {
-      call("init");
-    }
-
-  if (sq_getvmstate(vm) == SQ_VMSTATE_IDLE)
-    {
-      call("run");
-    }
-}
-
 void
 SquirrelVM::set_wakeup_event(const ScriptManager::WakeupData& event, float timeout)
 {
@@ -209,9 +193,9 @@
 {
   sq_pushroottable(vm);
 
-  std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
+  //std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
   sq_getdelegate(vm, -1);
-  std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
+  //std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
   sq_pop(vm, 1);
 
   // Lookup the function in the roottable and put it on the stack

Modified: trunk/windstille/src/engine/squirrel_vm.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 22:41:56 UTC (rev 2581)
+++ trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-08 22:53:58 UTC (rev 2582)
@@ -42,9 +42,6 @@
   void set_wakeup_event(const ScriptManager::WakeupData& event, float timeout);
   void fire_wakeup_event(const ScriptManager::WakeupData& event);
 
-  /** Evaluates the scripts */
-  void run();
-
   /** Resumes the evaluation of the VM if a wakeup has happened.
       \return false when the VM is done and can be removed */
   void update();



From grumbel at mail.berlios.de  Mon Mar  9 00:04:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 00:04:19 +0100
Subject: [Windstille-commit] r2583 - trunk/windstille/src/app
Message-ID: <200903082304.n28N4JWR003184@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 00:04:18 +0100 (Mon, 09 Mar 2009)
New Revision: 2583

Modified:
   trunk/windstille/src/app/menu_manager.cpp
Log:
Disabled ArmatureMenu

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-08 22:53:58 UTC (rev 2582)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-08 23:04:18 UTC (rev 2583)
@@ -158,9 +158,12 @@
   navigation_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_navigation_test, this));
   menu->add_item(navigation_test_button.release());
 
-  std::auto_ptr<ButtonMenuItem> armature_test_button(new ButtonMenuItem(menu.get(), "Armature Test"));
-  armature_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_armature_test, this));
-  menu->add_item(armature_test_button.release());
+  if (0)
+    {
+      std::auto_ptr<ButtonMenuItem> armature_test_button(new ButtonMenuItem(menu.get(), "Armature Test"));
+      armature_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_armature_test, this));
+      menu->add_item(armature_test_button.release());
+    }
 
   std::auto_ptr<ButtonMenuItem> geometry_test_button(new ButtonMenuItem(menu.get(), "Geometry Test"));
   geometry_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_geometry_test, this));



From grumbel at mail.berlios.de  Mon Mar  9 00:04:42 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 00:04:42 +0100
Subject: [Windstille-commit] r2584 - trunk/windstille/data/sectors/apartment
Message-ID: <200903082304.n28N4gg2003269@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 00:04:42 +0100 (Mon, 09 Mar 2009)
New Revision: 2584

Modified:
   trunk/windstille/data/sectors/apartment/barrobot.nut
Log:
Little println for debugging

Modified: trunk/windstille/data/sectors/apartment/barrobot.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-08 23:04:18 UTC (rev 2583)
+++ trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-08 23:04:42 UTC (rev 2584)
@@ -1,11 +1,15 @@
 function init()
 {
+  println("barrobot.nut: init()");
+
   barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
   jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite"); 
 }
 
 function run()
 {
+  println("barrobot.nut: run()");
+
   jane.say("So, what do you have to offer?");
   barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani");
   jane.say("Anything else?");



From grumbel at mail.berlios.de  Mon Mar  9 00:26:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 00:26:45 +0100
Subject: [Windstille-commit] r2585 - in trunk/windstille: data/scripts
	data/sectors/newformat2 src/screen
Message-ID: <200903082326.n28NQjTp005031@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 00:26:45 +0100 (Mon, 09 Mar 2009)
New Revision: 2585

Modified:
   trunk/windstille/data/scripts/init_script_vars.nut
   trunk/windstille/data/sectors/newformat2/bob.nut
   trunk/windstille/src/screen/game_session.cpp
Log:
Removed init_script_vars.nut and moved the variables into their script

Modified: trunk/windstille/data/scripts/init_script_vars.nut
===================================================================
--- trunk/windstille/data/scripts/init_script_vars.nut	2009-03-08 23:04:42 UTC (rev 2584)
+++ trunk/windstille/data/scripts/init_script_vars.nut	2009-03-08 23:26:45 UTC (rev 2585)
@@ -1,13 +0,0 @@
-// FIXME: Global variables are evil, so never use: "foo <- 5", instead use "local foo = 5"
-
-// The following two variables are evil, they should be either
-// declared in a sector specific file or stored somewhere on the C++
-// side. These variables are 'special' because they contain state that
-// survise the execution of the character script
-
-// Used in data/sector/newformat2/bob.nut
-bob_seen_before <- false;
-
-// Used in data/sector/newformat2/bob.nut
-bob_knows_you_mercenary <- false;
-

Modified: trunk/windstille/data/sectors/newformat2/bob.nut
===================================================================
--- trunk/windstille/data/sectors/newformat2/bob.nut	2009-03-08 23:04:42 UTC (rev 2584)
+++ trunk/windstille/data/sectors/newformat2/bob.nut	2009-03-08 23:26:45 UTC (rev 2585)
@@ -1,3 +1,9 @@
+function init()
+{
+  bob_seen_before <- false;
+  bob_knows_you_mercenary <- false;
+}
+
 function intro()
 {
   bob_seen_before = true;

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-08 23:04:42 UTC (rev 2584)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-08 23:26:45 UTC (rev 2585)
@@ -125,8 +125,6 @@
 
   impl->pause = false;
   
-  ScriptManager::current()->run_script_file("scripts/init_script_vars.nut", true);
-    
   set_sector(impl->filename);
 }
 



From grumbel at mail.berlios.de  Mon Mar  9 00:59:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 00:59:48 +0100
Subject: [Windstille-commit] r2586 - in trunk/media/wiki: . images
Message-ID: <200903082359.n28Nxm6G030773@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 00:59:46 +0100 (Mon, 09 Mar 2009)
New Revision: 2586

Added:
   trunk/media/wiki/Squirrel.wiki
   trunk/media/wiki/images/favicon.png
Modified:
   trunk/media/wiki/SConstruct
   trunk/media/wiki/Scripting.wiki
   trunk/media/wiki/Windstille.wiki
   trunk/media/wiki/wiki2html.py
Log:
Added a basic Squirrel intro

Modified: trunk/media/wiki/SConstruct
===================================================================
--- trunk/media/wiki/SConstruct	2009-03-08 23:26:45 UTC (rev 2585)
+++ trunk/media/wiki/SConstruct	2009-03-08 23:59:46 UTC (rev 2586)
@@ -11,13 +11,17 @@
 env.Command("build/default.css", "default.css",
             Copy("$TARGET", "$SOURCE"))
 
+output_files = []
 for i in glob.glob('*.wiki'):
     (filename, ext) = os.path.splitext(i)
-    Depends(env.Wiki("build/" + filename + ".html", i), 
+    output_files.append("build/" + filename + ".html")
+    Depends(env.Wiki(output_files[-1], i), 
             ["./wiki2html.py", 
              "template.xml"])
 
 sys_env = Environment(ENV = os.environ)
-sys_env.AlwaysBuild(sys_env.Alias('upload', [], "rsync -vrPcLC  build/ grumbel at shell.berlios.de:/home/groups/windstille/htdocs/wiki"))
+sys_env.AlwaysBuild(Depends(sys_env.Alias('upload', [], 
+                                          "rsync -vrPcLC  build/ grumbel at shell.berlios.de:/home/groups/windstille/htdocs/wiki"),
+                            output_files))
 
 # EOF #

Modified: trunk/media/wiki/Scripting.wiki
===================================================================
--- trunk/media/wiki/Scripting.wiki	2009-03-08 23:26:45 UTC (rev 2585)
+++ trunk/media/wiki/Scripting.wiki	2009-03-08 23:59:46 UTC (rev 2586)
@@ -2,9 +2,9 @@
 Needs update, specifically on how script functions get exported, on how scripts related to sectors, levels or dialog and on what scripting is used for.
 <</note>>
 
-Windstille uses [[http://www.squirrel-lang.org/|Squirrel]] for scripting. The full source code of squirrel is included within the {{{external/SQUIRREL2/}}} subdirectory of Windstille's source and it is automatically built into the game. The <<class>>ScriptManager<</class>> is for most part responsible for actually running scripts.
+Windstille uses [[http://www.squirrel-lang.org/|Squirrel]] for scripting. The full source code of it is included within the {{{external/SQUIRREL2/}}} subdirectory of Windstille's source and it is automatically built into the game. The <<class>>ScriptManager<</class>> is for most part responsible for actually running scripts.
 
-C++ functions are exposed to scripts via the interface in the {{{scripting/}}} subdirectory. Miniswig, found in the {{{tools/miniswig}}} subdirectory, is a tool that creates wrapper functions to allow the interface functions to be called from squirrel. If you have bison and flex installed then miniswig will be built automatically, and any changes you make to the scripting interface will automatically be added to the wrapper functions when you execute scons.
+C++ functions are exposed to scripts via the interface in the {{{scripting/}}} subdirectory. Miniswig, found in the {{{tools/miniswig}}} subdirectory, is a tool that creates wrapper functions to allow the interface functions to be called from squirrel. If you have bison and flex installed then miniswig will be built automatically and any changes you make to the scripting interface will automatically be added to the wrapper functions when you execute scons.
 
 The plan is that scripts can then be associated with these .wst sectors, or indeed with individual bad guys or objects within these sectors. Multiple scripts can be run simultanously. Some examples of things scripts might be used for:
 
@@ -14,6 +14,62 @@
 * to control dialog with NPCs
 * to control when and where new information is provided to the player
 
+== Environments
+
+There are currently two environments in which scripts can be evaluated. These different environments ensure that scripts do not polute the global namespace and that they are cleanly seperated.
+
+=== Global Environment
+
+The global environment contains all the native Squirrel functions, exported C++ functions as well as things defined in global scripts. It is currently used only for {{{data/scripts/windstille.nut}}}. It also contains the {{{objects}}} table which contains all the objects in the current sector.
+
+=== Child Environment
+
+Each script that is started from a {{{.wst}}} file is a child to the global environment, meaning all functions not defined in the child environment will be looked up in the global environment. Newly defined functions and variables will stay local to the single script.
+
+== Basic Script
+
+A basic script should contains currently two functions, {{{init()}}} and {{{run()}}}, new functions might be added later. The functions need not to be defined, so leaving them out when they are not needed is ok. However no code should be placed outside of these function, since it will screw things up when the script is run multiple times.
+
+Global scripts are directly evaluted in the global environment and thus don't need either of those.
+
+{{{
+function init()
+{
+  // The init() section is run exactly once when the script is loaded
+}
+
+function run()
+{
+  // The run() section is called on each run of the script
+}
+}}}
+
+== Script Suspend/Wakeup
+
+Scripts can be suspended an resumed at a later point, a very simple use case would be:
+
+{{{
+jane.walkto("bar");
+jane.say("Jane, nice bar");
+jane.walkto("door");
+}}}
+
+The {{{walkto()}}} instructions gives the character object the task to reach the given location, installs a wake-up signal and then suspends the script. When the character reaches its target it fires a wake-up signal which in turn then wakes up the script and continues with the {{{say()}}} instruction.
+
+== Types of Scripting
+
+* interaction/event scripts: scripts that are triggered when the user looks/uses/talks to an object or character
+* background scripts: scripts that control background animation or events in the scene
+* character/ai scripts: scripts that define the AI of computer controled characters and also there reaction to events (ducking when a grenade explodes near by)
+
+Trouble: scripts are not limited to a single entity, thus multiple scripts might want to access the same entity at the same time.
+
+== Export Objects to Squirrel
+
+Currently objects get exported into the table {{{objects}}} in Squirrel, so if a object has the name {{{(name "Painting1")}}} it is accessible as {{{objects.Painting1}}}. Its not quite clear if that is the right way to do it or if it shouldn't be handled via handles/accessors instead, i.e. {{{painting = get_object("Painting1")}}}. One reason is that it would limit the export objects to only those that are actually needed and another is that it would make the exporting more clear in the code. For normal usage one would likely do it 'accessor-style' anyway, i.e. {{{bob = objects.bob}}} to not have write the whole {{{objects...}}} things.
+
+One disadvantage is that objects would no longer be equal, if one does {{{get_object("bob")}}} twice the resulting Squirrel object is different, while the C++ one is the name. Not sure if that is important enough to matter.
+
 == Background AI Scripts
 
 <<note>>
@@ -59,6 +115,47 @@
 
 This might work for such a simple script, but it not quite clear if and how this would work in more complex situations, say when multiple characters are involved in a background script and how exactly the background script can be resumed at the exact right spot. Its also not clear if lock() and unlock() should be explicit calls or if certain functions should have automatic priority over other things.
 
+== Syncronisation
+
+<<note>>
+Random idea, not sure how to implement or if at all
+<</note>>
+
+Current scripting handles sequential events just fine, but how to handle multiple parallel ones?
+
+{{{
+// Have two characters walk to a target, wait for both of them to arrive
+bob.walkto(door, DO_NOT_WAIT)
+jane.walkto(door, DO_NOT_WAIT)
+
+wait_for([bob, jane])
+}}}
+
+{{{
+// Have two characters walk to a target, wait for both of them to arrive
+execute_in_parallel {
+  bob.walkto(door);
+  jane.walkto(door);
+}
+}}}
+
+{{{
+// Create use Squirrels newthread() to 
+function bob_script() {
+  // ...
+}
+
+function jane_script() {
+  // ...
+}
+
+threads = [newthread(bob_script), newthread(jane_script)]
+while(1) {
+   bob_script.wakeup();
+   jane_script.wakeup();
+}
+}}}
+
 == VM Serialization
 
 Serialization of the VM is needed so that a savegame can continue at exactly the same point where it left. This however doesn't seem to be nativly supported by Squirrel. See this [[http://squirrel-lang.org/forums/thread/691.aspx | forum discussion]] or this [[http://squirrel-lang.org/forums/thread/1213.aspx | forum discussion]].

Added: trunk/media/wiki/Squirrel.wiki
===================================================================
--- trunk/media/wiki/Squirrel.wiki	2009-03-08 23:26:45 UTC (rev 2585)
+++ trunk/media/wiki/Squirrel.wiki	2009-03-08 23:59:46 UTC (rev 2586)
@@ -0,0 +1,86 @@
+This text gives a quick introduction to Squirrel, its not meant to be complete, just a quick reference of common use cases, for a more complete guide refer to the official documentation:
+
+* [[http://squirrel-lang.org/doc/squirrel2.html | Squirrel Reference Manual ]]
+* [[http://squirrel-lang.org/doc/sqstdlib2.html | Squirrel Standard Library ]]
+
+== Declaration
+
+{{{
+// Creates a new entry in the roottable
+a <- 5;
+
+{
+  // Local to the current block
+  local a = 5;
+
+  // do stuff
+}
+}}}
+
+== Functions
+
+{{{
+function foobar() {
+  // do stuff
+}
+}}}
+
+== Classes
+
+{{{
+class Foobar {
+  static static_variable = 5;
+  local_variable = 10;
+
+  constructor() {
+    print(static_variable)
+    print("\n")
+
+    print(local_variable)
+    print("\n")
+  }
+
+  function bar() {
+    // do stuff
+  }
+}
+
+obj <- Foobar()
+}}}
+
+== Looping
+
+{{{
+tbl <- {
+   key1 = "value1",
+   key2 = "value2",  
+   key3 = "value3" 
+}
+
+foreach(i,val in tbl) {
+   print(i);
+   print(" -> ");
+   print(val);
+   print("\n");
+}
+}}}
+
+{{{
+for(local i = 0; i < 10; ++i) {
+   print(i);
+   print("\n");
+}
+}}}
+
+== Namespaces
+
+Squirrel doesn't support real namespaces, but they can be easily faked with tables.
+
+{{{
+your_namespace <- {}
+
+function your_namespace::func() {
+  // do something
+}
+}}}
+

Modified: trunk/media/wiki/Windstille.wiki
===================================================================
--- trunk/media/wiki/Windstille.wiki	2009-03-08 23:26:45 UTC (rev 2585)
+++ trunk/media/wiki/Windstille.wiki	2009-03-08 23:59:46 UTC (rev 2586)
@@ -17,6 +17,7 @@
 * [[Navigation Mesh]]
 * [[Dialog]]
 * [[Scripting]]
+* [[Squirrel]]
 * [[Drawing Model]]
 * [[Drawing Primitives]]
 * [[Editor]]

Added: trunk/media/wiki/images/favicon.png
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/images/favicon.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/media/wiki/wiki2html.py
===================================================================
--- trunk/media/wiki/wiki2html.py	2009-03-08 23:26:45 UTC (rev 2585)
+++ trunk/media/wiki/wiki2html.py	2009-03-08 23:59:46 UTC (rev 2586)
@@ -48,6 +48,7 @@
              'Navigation Mesh',
              'Dialog',
              'Scripting',
+             'Squirrel',
              'Drawing Model',
              'Drawing Primitives',
              'Editor',



From grumbel at mail.berlios.de  Mon Mar  9 01:46:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 01:46:02 +0100
Subject: [Windstille-commit] r2587 - in trunk/windstille:
	data/sectors/newformat2 src/engine src/objects
Message-ID: <200903090046.n290k2Jd020002@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 01:46:01 +0100 (Mon, 09 Mar 2009)
New Revision: 2587

Modified:
   trunk/windstille/data/sectors/newformat2/newformat2.wst
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/trigger.cpp
   trunk/windstille/src/objects/trigger.hpp
Log:
Trigger callbacks are now functions evaluated in the Sectors own SquirrelVM, which is created by init-script

Modified: trunk/windstille/data/sectors/newformat2/newformat2.wst
===================================================================
--- trunk/windstille/data/sectors/newformat2/newformat2.wst	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/data/sectors/newformat2/newformat2.wst	2009-03-09 00:46:01 UTC (rev 2587)
@@ -189,7 +189,7 @@
      (y 686)
      (width 95)
      (height 146)
-     (script "startfire()"))
+     (callback "startfire"))
 
     (trigger
      (name "water-trigger")
@@ -197,7 +197,7 @@
      (y 687)
      (width 25)
      (height 146)
-     (script "stopfire()"))
+     (callback "stopfire"))
 
     (box
       (name "Box0")

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -127,31 +127,17 @@
   current_ = 0;
 }
 
-void
+boost::shared_ptr<SquirrelVM>
 ScriptManager::run_script_file(const std::string& filename, bool global)
 {
   IFileStream in(filename);
-  run_script(in, filename, global);
-}
 
-void
-ScriptManager::run_script(const std::string& the_string,
-                          const std::string& sourcename, 
-                          bool global)
-{
-  std::istringstream stream(the_string);
-  run_script(stream, sourcename, global);
-}
-
-void
-ScriptManager::run_script(std::istream& in, const std::string& sourcename, bool global)
-{
   if (global)
     {
       // Scripts run in the global namespace must not suspend
 
       // Compile the script and push it on the stack
-      if(sq_compile(vm, squirrel_read_char, &in, sourcename.c_str(), true) < 0)
+      if(sq_compile(vm, squirrel_read_char, &in, filename.c_str(), true) < 0)
         throw SquirrelError(vm, "Couldn't parse script");
 
       // Set 'this' environment
@@ -159,12 +145,14 @@
 
       // Execute the script
       if (SQ_FAILED(sq_call(vm, 1, false, true)))
-        throw SquirrelError(vm, "SquirrelVM::run(): " + sourcename + ": Couldn't start script");
+        throw SquirrelError(vm, "SquirrelVM::run(): " + filename + ": Couldn't start script");
 
       if (sq_getvmstate(vm) != SQ_VMSTATE_IDLE)
         {
-          throw std::runtime_error("ScriptManager::run_script(): " + sourcename + ": global scripts must not suspend");
+          throw std::runtime_error("ScriptManager::run_script(): " + filename + ": global scripts must not suspend");
         }
+
+      return boost::shared_ptr<SquirrelVM>();
     }
   else
     {
@@ -173,7 +161,7 @@
       // Look if the VM is associated with the source file
       for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
         {
-          if ((*i)->get_name() == sourcename)
+          if ((*i)->get_name() == filename)
             {
               it = i;
               break;
@@ -186,17 +174,19 @@
           if ((*it)->is_idle())
             {
               (*it)->call("run");
+              return *it;
             }
           else
             {
-              throw std::runtime_error(sourcename + ": ScriptManager::run_script(): Script must be idle to be 'run()'");
+              throw std::runtime_error(filename + ": ScriptManager::run_script(): Script must be idle to be 'run()'");
             }
         }
       else
         { // Add VM to the list of VMs
-          squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, sourcename, vm)));     
+          squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, filename, vm)));     
           squirrel_vms.back()->call("init");
           squirrel_vms.back()->call("run");
+          return squirrel_vms.back();
         }
     }
 }

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -83,16 +83,8 @@
   void update();
 
   /** Load script from \a filename and runs it */
-  void run_script_file(const std::string& filename, bool global = false);
+  boost::shared_ptr<SquirrelVM> run_script_file(const std::string& filename, bool global = false);
 
-  /** Takes the Squirrel expression in \a script and evaluates it, \a
-      sourcename is the filename and used in error messages */
-  void run_script(const std::string& script, const std::string& sourcename, bool global = false);
-
-  /** Load script from \a in and runs it, \a sourcename is the
-      filename and used in error messages */
-  void run_script(std::istream& in, const std::string& sourcename, bool global = false);
-
   HSQUIRRELVM get_vm() const { return vm; }
 
   void set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout = -1);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -47,6 +47,7 @@
 #include "objects/scriptable_object.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "scripting/squirrel_error.hpp"
+#include "squirrel_vm.hpp"
 
 #include "sector.hpp"
 
@@ -178,8 +179,11 @@
   commit_removes();
 
   sound_manager->play_music(music);
+
   if (!init_script.empty())
-    ScriptManager::current()->run_script_file(get_directory() + init_script);
+    {
+      vm = ScriptManager::current()->run_script_file(get_directory() + init_script);
+    }
 }
 
 void
@@ -309,4 +313,24 @@
   return directory;
 }
 
+void
+Sector::call_script_function(const std::string& name)
+{
+  if (!vm.get())
+    {
+      throw std::runtime_error("Sector::call_script_function(): Can't call function '" + name + "' without a init script");
+    }
+  else
+    {
+      if (!vm->is_idle())
+        {
+          throw std::runtime_error("Sector::call_script_function(): VM must be idle to call  '" + name + "'");
+        }
+      else
+        {
+          vm->call(name);
+        }
+    }
+}
+
 /* EOF */

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -34,6 +34,7 @@
 class CollisionEngine;
 class NavigationGraph;
 class Entity;
+class SquirrelVM;
 
 /** */
 class Sector
@@ -48,6 +49,8 @@
   std::string name;
   std::string music;
   std::string init_script;
+  
+  boost::shared_ptr<SquirrelVM> vm;
 
   typedef std::vector<boost::shared_ptr<GameObject> > Objects;
   Objects objects;
@@ -107,10 +110,12 @@
   TileMap* get_tilemap() const { return interactive_tilemap; }
   TileMap* get_tilemap2() const { return interactivebackground_tilemap; }
   void     set_tilemap(TileMap* t);
-  Player* get_player() const
+  Player*  get_player() const
   {
     return player;
   }
+
+  void call_script_function(const std::string& name);
   
 private:
   Sector (const Sector&);

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -16,11 +16,10 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-
+#include "engine/sector.hpp"
 #include "app/globals.hpp"
 #include "scriptable_object.hpp"
 #include "sprite2d/manager.hpp"
-#include "engine/script_manager.hpp"
 
 ScriptableObject::ScriptableObject(FileReader& props)
   : z_pos(50),
@@ -114,7 +113,9 @@
 ScriptableObject::use()
 {
   if (!use_script.empty())
-    ScriptManager::current()->run_script(use_script, name);
+    {
+      Sector::current()->call_script_function(use_script);
+    }
 }
 
 void

Modified: trunk/windstille/src/objects/trigger.cpp
===================================================================
--- trunk/windstille/src/objects/trigger.cpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/objects/trigger.cpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -35,7 +35,7 @@
   props.get("y", y);
   props.get("width", width);
   props.get("height", height);
-  props.get("script", script);
+  props.get("callback", callback);
   props.get("one-time-trigger", one_time_trigger);
   props.print_unused_warnings("trigger");
 
@@ -58,7 +58,7 @@
 }
 
 void
-Trigger::update (float )
+Trigger::update(float delta)
 {
   //FIXME use proper collision detection
   Player* player = Player::current();
@@ -72,11 +72,14 @@
 
   if(last_trigger == false) {
     triggered = true;
-    try {
-      ScriptManager::current()->run_script(script, "TriggerObject");
-    } catch(std::exception& e) {
-      std::cerr << "Couldn't run trigger-script: " << e.what() << "\n";
-    }
+    try 
+      {
+        Sector::current()->call_script_function(callback);
+      }
+    catch(std::exception& e) 
+      {
+        std::cerr << "Couldn't run trigger-script: " << e.what() << "\n";
+      }
   }
   last_trigger = true;
 }

Modified: trunk/windstille/src/objects/trigger.hpp
===================================================================
--- trunk/windstille/src/objects/trigger.hpp	2009-03-08 23:59:46 UTC (rev 2586)
+++ trunk/windstille/src/objects/trigger.hpp	2009-03-09 00:46:01 UTC (rev 2587)
@@ -27,7 +27,7 @@
 {
 private:
   Rectf area;
-  std::string script;
+  std::string callback;
   /// has the trigger been activated at least once
   bool triggered;
   /// trigger active in last frame



From grumbel at mail.berlios.de  Mon Mar  9 01:50:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 01:50:55 +0100
Subject: [Windstille-commit] r2588 - trunk/media/wiki
Message-ID: <200903090050.n290otSQ020367@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 01:50:54 +0100 (Mon, 09 Mar 2009)
New Revision: 2588

Modified:
   trunk/media/wiki/Scripting.wiki
Log:
Short note about trigger scripts

Modified: trunk/media/wiki/Scripting.wiki
===================================================================
--- trunk/media/wiki/Scripting.wiki	2009-03-09 00:46:01 UTC (rev 2587)
+++ trunk/media/wiki/Scripting.wiki	2009-03-09 00:50:54 UTC (rev 2588)
@@ -56,6 +56,10 @@
 
 The {{{walkto()}}} instructions gives the character object the task to reach the given location, installs a wake-up signal and then suspends the script. When the character reaches its target it fires a wake-up signal which in turn then wakes up the script and continues with the {{{say()}}} instruction.
 
+== Trigger Functions
+
+Some game objects such as <<class>>Trigger<</class>> allow users to define callbacks. The callback is the name of a function that is defined in the sectors {{{init-script}}} and it will be evaluated in the VM created by {{{init-script}}}. Note that trigger scripts must always return and never suspend the VM. Functionality for spawing new background scripts might be added later.
+
 == Types of Scripting
 
 * interaction/event scripts: scripts that are triggered when the user looks/uses/talks to an object or character



From grumbel at mail.berlios.de  Mon Mar  9 02:24:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 02:24:32 +0100
Subject: [Windstille-commit] r2589 - trunk/windstille
Message-ID: <200903090124.n291OWd2024060@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 02:24:31 +0100 (Mon, 09 Mar 2009)
New Revision: 2589

Modified:
   trunk/windstille/TODO
Log:
TODO update

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-09 00:50:54 UTC (rev 2588)
+++ trunk/windstille/TODO	2009-03-09 01:24:31 UTC (rev 2589)
@@ -1,13 +1,13 @@
 Windstille ToDo
 ===============
 
-* "bounce collision" error is caused by grenade that spawns into a wall
+* some functions in scripts require '::' before them so that they can
+  be found, not quite clear why or exactly when this happens
 
-* scripts should be able to be persisstant, so that you could call a
-  function on an event in a script
+* currently the ScriptManager is global, meaning scripts are never
+  cleaned up on Sector changes, this needs to be fixed
 
-* scripts need to be split into sections/functions, so that we can
-  have a section that is run only once for creating variables (doable via run_before(), but ugly)
+* "bounce collision" error is caused by grenade that spawns into a wall
 
 * join Player and Character somewhat or derive one from the other
 



From grumbel at mail.berlios.de  Mon Mar  9 12:14:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 12:14:24 +0100
Subject: [Windstille-commit] r2590 - trunk/windstille/src/objects
Message-ID: <200903091114.n29BEOkf029504@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 12:14:24 +0100 (Mon, 09 Mar 2009)
New Revision: 2590

Modified:
   trunk/windstille/src/objects/player.cpp
Log:
Disabled grenade throwing code, since it just causes the game to freeze

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-09 01:24:31 UTC (rev 2589)
+++ trunk/windstille/src/objects/player.cpp	2009-03-09 11:14:24 UTC (rev 2590)
@@ -354,14 +354,19 @@
     } 
   else if (controller.button_was_pressed(AIM_BUTTON))
     {
-      // TODO remove me later, just here for testing
-      Grenade* grenade = new Grenade();
-      grenade->set_pos(get_pos() + Vector2f(50, -300));
-      grenade->set_velocity(Vector2f(20, -10));
-      Sector::current()->add(grenade);
-      
-      sprite.set_action("PullGun");
-      state = PULL_GUN;
+      if (0)
+        {
+          // TODO remove me later, just here for testing
+          Grenade* grenade = new Grenade();
+          grenade->set_pos(get_pos() + Vector2f(50, -300));
+          grenade->set_velocity(Vector2f(20, -10));
+          Sector::current()->add(grenade);
+        }
+      else
+        {
+          sprite.set_action("PullGun");
+          state = PULL_GUN;
+        }
     }
   else if (controller.get_axis_state(X_AXIS) < -0.5f) 
     {



From grumbel at mail.berlios.de  Mon Mar  9 12:17:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 12:17:28 +0100
Subject: [Windstille-commit] r2591 - in trunk/windstille/src: app engine gui
	screen scripting sound
Message-ID: <200903091117.n29BHSOu029783@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 12:17:27 +0100 (Mon, 09 Mar 2009)
New Revision: 2591

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/sound_manager.hpp
Log:
Added music/voice/sfx volume controls, only dummy in SoundManager so far, replaced sound_manager with SoundManager::current()

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/app/config.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -59,6 +59,9 @@
   add(new ConfigValue<std::string>("playback-file",   _("File from which a demo is played"), false));
 
   add(new ConfigValue<int>("master-volume",  _("Master Volume"), true, 100));
+  add(new ConfigValue<int>("music-volume",   _("Music Volume"),  true, 100));
+  add(new ConfigValue<int>("voice-volume",   _("Voice Volume"),  true, 100));
+  add(new ConfigValue<int>("sfx-volume",     _("SFX Volume"),    true, 100));
 
   add(new ConfigValue<bool>("wiimote", _("Try to connect to Wiimote on startup"), true, false));
 }

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -65,17 +65,34 @@
 
   menu->set_font(Fonts::vera20);
 
-  std::auto_ptr<SliderMenuItem> music_volume_item(new SliderMenuItem(menu.get(), "Master Volume",   
-                                                                     config.get_int("master-volume"), 0, 100, 10));
-  music_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_music_volume, this, _1));
-  menu->add_item(music_volume_item.release());
+  {
+    std::auto_ptr<SliderMenuItem> master_volume_item(new SliderMenuItem(menu.get(), "Master Volume",   
+                                                                        config.get_int("master-volume"), 0, 100, 10));
+    master_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_master_volume, this, _1));
+    menu->add_item(master_volume_item.release());
+  }
 
-  std::auto_ptr<SliderMenuItem> sfx_volume_item(new SliderMenuItem(menu.get(), "SFX Volume",   100, 0, 100, 10));
-  menu->add_item(sfx_volume_item.release());
+  {
+    std::auto_ptr<SliderMenuItem> music_volume_item(new SliderMenuItem(menu.get(), "Music Volume",   
+                                                                       config.get_int("music-volume"), 0, 100, 10));
+    music_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_music_volume, this, _1));
+    menu->add_item(music_volume_item.release());
+  }
 
-  std::auto_ptr<SliderMenuItem> voice_volume_item(new SliderMenuItem(menu.get(), "Voice Volume", 100, 0, 100, 10));
-  menu->add_item(voice_volume_item.release());
+  {
+    std::auto_ptr<SliderMenuItem> sfx_volume_item(new SliderMenuItem(menu.get(), "SFX Volume",  
+                                                                     config.get_int("sfx-volume"), 0, 100, 10));
+    sfx_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_sfx_volume, this, _1));
+    menu->add_item(sfx_volume_item.release());
+  }
 
+  {
+    std::auto_ptr<SliderMenuItem> voice_volume_item(new SliderMenuItem(menu.get(), "Voice Volume", 
+                                                                       config.get_int("voice-volume"), 0, 100, 10));
+    voice_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_voice_volume, this, _1));
+    menu->add_item(voice_volume_item.release());
+  }
+
   std::auto_ptr<EnumMenuItem> aspect_item(new EnumMenuItem(menu.get(), "Aspect Ratio", 0));
   aspect_item->add_pair(0, "4:3");
   aspect_item->add_pair(1, "5:4");
@@ -608,10 +625,31 @@
 }
 
 void
-MenuManager::menu_music_volume(int i)
+MenuManager::menu_master_volume(int i)
 {
   config.set_int("master-volume", i);
-  sound_manager->set_listener_gain((i/100.0f));
+  SoundManager::current()->set_master_volume((i/100.0f));
 }
 
+void
+MenuManager::menu_music_volume(int i)
+{
+  config.set_int("music-volume", i);
+  SoundManager::current()->set_music_volume((i/100.0f));
+}
+
+void
+MenuManager::menu_voice_volume(int i)
+{
+  config.set_int("voice-volume", i);
+  SoundManager::current()->set_voice_volume((i/100.0f));
+}
+
+void
+MenuManager::menu_sfx_volume(int i)
+{
+  config.set_int("sfx-volume", i);
+  SoundManager::current()->set_sfx_volume((i/100.0f));
+}
+
 /* EOF */

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -46,7 +46,12 @@
   void menu_show_fps(int i);
   void menu_fullscreen(int i);
   void menu_continue();
+
+  void menu_master_volume(int i);
+  void menu_voice_volume(int i);
+  void menu_sfx_volume(int i);
   void menu_music_volume(int i);
+
   void menu_ambient_light(int i, int component);
   void menu_start_scenario(std::string scenario);
   void menu_show_model(std::string scenario);
@@ -56,6 +61,7 @@
   void menu_show_particle_system(std::string file);
   void menu_gamma(int i);
   void menu_wiimote();
+
 private:
   MenuManager (const MenuManager&);
   MenuManager& operator= (const MenuManager&);

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -154,10 +154,10 @@
 
   if (debug) std::cout << "Initialising Fonts" << std::endl;
   Fonts::init(); 
-  sound_manager = new SoundManager();
-  sound_manager->set_listener_gain(config.get_int("master-volume")/100.0f);
-  sound_manager->enable_sound(config.get_bool("sound"));
-  sound_manager->enable_music(config.get_bool("music"));
+  new SoundManager();
+  SoundManager::current()->set_master_volume(config.get_int("master-volume")/100.0f);
+  SoundManager::current()->enable_sound(config.get_bool("sound"));
+  SoundManager::current()->enable_music(config.get_bool("music"));
 
   if (debug) std::cout << "Initialising ScriptManager" << std::endl;
   texture_manager  = new TextureManager();
@@ -232,8 +232,7 @@
   delete texture_manager;
   texture_manager = 0;
   
-  delete sound_manager;
-  sound_manager = 0;
+  delete SoundManager::current();
   Fonts::deinit();
 
   TTFFont::deinit();

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -178,7 +178,7 @@
   commit_adds();
   commit_removes();
 
-  sound_manager->play_music(music);
+  SoundManager::current()->play_music(music);
 
   if (!init_script.empty())
     {

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -121,7 +121,7 @@
             {
               if (allow_cancel) // FIXME: Could use a signal instead
                 {
-                  sound_manager->play("sounds/menu_click.wav");
+                  SoundManager::current()->play("sounds/menu_click.wav");
                   set_active(false);
                 }
             }
@@ -135,7 +135,7 @@
             }          
           else if (i->button.name == MENU_UP_BUTTON)
             {
-              sound_manager->play("sounds/menu_change.wav");
+              SoundManager::current()->play("sounds/menu_change.wav");
               
               current_item = current_item - 1;
               if (current_item < 0)
@@ -155,7 +155,7 @@
             }
           else if (i->button.name == MENU_DOWN_BUTTON)
             {
-              sound_manager->play("sounds/menu_change.wav");
+              SoundManager::current()->play("sounds/menu_change.wav");
 
               if (dynamic_cast<TabComponent*>(parent))
                 {

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -93,7 +93,7 @@
 void
 EnumMenuItem::incr()
 {
-  sound_manager->play("sounds/menu_click.wav");           
+  SoundManager::current()->play("sounds/menu_click.wav");           
 
   index -= 1;
   if (index < 0)
@@ -104,7 +104,7 @@
 void
 EnumMenuItem::decr()
 {
-  sound_manager->play("sounds/menu_click.wav");
+  SoundManager::current()->play("sounds/menu_click.wav");
 
   index += 1;
   if (index >= static_cast<int>(labels.size()))
@@ -147,7 +147,7 @@
 void
 SliderMenuItem::decr()
 {
-  sound_manager->play("sounds/menu_click.wav");
+  SoundManager::current()->play("sounds/menu_click.wav");
 
   value += step;
   if (value > max_value)
@@ -158,7 +158,7 @@
 void
 SliderMenuItem::incr()
 {
-  sound_manager->play("sounds/menu_click.wav");
+  SoundManager::current()->play("sounds/menu_click.wav");
 
   value -= step;
   if (value < min_value)
@@ -203,7 +203,7 @@
 void
 ButtonMenuItem::click()
 {
-  sound_manager->play("sounds/menu_click.wav");
+  SoundManager::current()->play("sounds/menu_click.wav");
 
   on_click();
 }

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -290,7 +290,7 @@
 {
   impl->filename = arg_filename;
  
-  sound_manager->stop_music();
+  SoundManager::current()->stop_music();
 
   if (impl->fade_state == GameSessionImpl::FADEOUT)
     {
@@ -388,7 +388,7 @@
 {
   if (impl->fade_state != GameSessionImpl::FADEOUT)
     {
-      sound_manager->stop_music();
+      SoundManager::current()->stop_music();
       impl->fade_state  = GameSessionImpl::FADEOUT;
       impl->fade_time   = 1.0f;
       impl->next_action = GameSessionImpl::QUIT_ACTION;

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -116,7 +116,7 @@
 
       overlap_delta = delta;
 
-      sound_manager->update();
+      SoundManager::current()->update();
 
       if (!screens.empty())
         screens.back()->draw();

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -45,17 +45,17 @@
 
 void play_music(const std::string& musicfile)
 {
-  sound_manager->play_music(musicfile);
+  SoundManager::current()->play_music(musicfile);
 }
 
 void stop_music(float fadetime)
 {
-  sound_manager->stop_music(fadetime);
+  SoundManager::current()->stop_music(fadetime);
 }
 
 void play_sound(const std::string& soundfile)
 {
-  sound_manager->play(soundfile);
+  SoundManager::current()->play(soundfile);
 }
 
 void caption_clear()

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -1,5 +1,22 @@
-#include "sound_manager.hpp"
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
 
+#include <assert.h>
 #include <stdexcept>
 #include <iostream>
 #include <sstream>
@@ -9,36 +26,46 @@
 #include "sound_source.hpp"
 #include "stream_sound_source.hpp"
 
-SoundManager* sound_manager = 0;
+#include "sound_manager.hpp"
 
+SoundManager* SoundManager::current_ = 0;
+
 SoundManager::SoundManager()
   : device(0), context(0), sound_enabled(false), music_source(0),
     next_music_source(0), music_enabled(true)
 {
-  try {
-    device = alcOpenDevice(0);
-    if(device == 0) {
+  assert(current_ == 0);
+  current_ = this; 
+
+  try 
+    {
+      device = alcOpenDevice(0);
+      if(device == 0) 
+        {
+          print_openal_version();
+          throw std::runtime_error("Couldn't open audio device.");
+        }
+
+      int attributes[] = { 0 };
+
+      context = alcCreateContext(device, attributes);
+      check_alc_error("Couldn't create audio context: ");
+      alcMakeContextCurrent(context);
+      check_alc_error("Couldn't select audio context: ");
+
+      check_al_error("Audio error after init: ");
+      sound_enabled = true;
+    } 
+  catch(std::exception& e) 
+    {
+      device = 0;
+      context = 0;
+      std::cerr << "Couldn't initialize audio device:" << e.what() << "\n";
       print_openal_version();
-      throw std::runtime_error("Couldn't open audio device.");
+      // disable sound
+      enable_sound(false);
+      std::cout << "Disabling sound\n";
     }
-
-    int attributes[] = { 0 };
-    context = alcCreateContext(device, attributes);
-    check_alc_error("Couldn't create audio context: ");
-    alcMakeContextCurrent(context);
-    check_alc_error("Couldn't select audio context: ");
-
-    check_al_error("Audio error after init: ");
-    sound_enabled = true;
-  } catch(std::exception& e) {
-    device = 0;
-    context = 0;
-    std::cerr << "Couldn't initialize audio device:" << e.what() << "\n";
-    print_openal_version();
-    // disable sound
-    enable_sound(false);
-    std::cout << "Disabling sound\n";
-  }
 }
 
 SoundManager::~SoundManager()
@@ -61,6 +88,8 @@
   if(device != 0) {
     alcCloseDevice(device);
   }
+
+  current_ = 0; 
 }
 
 ALuint
@@ -214,12 +243,30 @@
 }
 
 void
-SoundManager::set_listener_gain(float volume)
+SoundManager::set_master_volume(float volume)
 {
   alListenerf(AL_GAIN, volume);
 }
 
 void
+SoundManager::set_voice_volume(float volume)
+{
+  std::cout << "SoundManager::set_voice_volume(" << volume << "): unimplemented" << std::endl;
+}
+
+void
+SoundManager::set_sfx_volume(float volume)
+{
+  std::cout << "SoundManager::set_sfx_volume(" << volume << "): unimplemented" << std::endl;
+}
+
+void
+SoundManager::set_music_volume(float volume)
+{
+  std::cout << "SoundManager::set_music_volume(" << volume << "): unimplemented" << std::endl;
+}
+
+void
 SoundManager::update()
 {
   if (!sound_enabled)
@@ -306,5 +353,5 @@
     throw std::runtime_error(msg.str());
   }  
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/sound/sound_manager.hpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 11:14:24 UTC (rev 2590)
+++ trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 11:17:27 UTC (rev 2591)
@@ -33,7 +33,7 @@
 class SoundFile;
 class SoundSource;
 class StreamSoundSource;
-
+
 class SoundManager
 {
 public:
@@ -41,24 +41,21 @@
   virtual ~SoundManager();
 
   void enable_sound(bool sound_enabled);
+  void enable_music(bool music_enabled);
+
+  void set_listener_position(const Vector2f& position);
+  void set_listener_velocity(const Vector2f& velocity);
+
+  void set_master_volume(float volume);
+  void set_voice_volume(float volume);
+  void set_sfx_volume(float volume);
+  void set_music_volume(float volume);
+
   /**
-   * Creates a new sound source object which plays the specified soundfile.
-   * You are responsible for deleting the sound source later (this will stop the
-   * sound).
-   * This function might throw exceptions. It returns 0 if no audio device is
-   * available.
-   */
-  SoundSource* create_sound_source(const std::string& filename);
-  /**
    * Convenience function to simply play a sound at a given position.
    */
   void play(const std::string& name, const Vector2f& pos = Vector2f(-1, -1));
 
-  void set_listener_position(const Vector2f& position);
-  void set_listener_velocity(const Vector2f& velocity);
-  void set_listener_gain(float volume);
-
-  void enable_music(bool music_enabled);
   void play_music(const std::string& filename, bool fade = true);
   void stop_music(bool fade = true);
 
@@ -68,6 +65,15 @@
   friend class SoundSource;
   friend class StreamSoundSource;
 
+  /**
+   * Creates a new sound source object which plays the specified soundfile.
+   * You are responsible for deleting the sound source later (this will stop the
+   * sound).
+   * This function might throw exceptions. It returns 0 if no audio device is
+   * available.
+   */
+  SoundSource* create_sound_source(const std::string& filename);
+
   static ALuint load_file_into_buffer(const std::string& filename);
   static ALenum get_sample_format(SoundFile* file);
 
@@ -89,10 +95,13 @@
 
   bool music_enabled;
   std::string current_music;
+
+private:
+  static SoundManager* current_; 
+public:
+  static SoundManager* current() { return current_; } 
 };
-
-extern SoundManager* sound_manager;
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Mon Mar  9 13:06:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 13:06:31 +0100
Subject: [Windstille-commit] r2592 - in trunk/windstille: data/controller
	src/input
Message-ID: <200903091206.n29C6Vhb002944@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 13:06:29 +0100 (Mon, 09 Mar 2009)
New Revision: 2592

Added:
   trunk/windstille/data/controller/xboxdrv.scm
Modified:
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/input_manager_sdl.hpp
Log:
Added support for JoystickAxisButtonBinding

Added: trunk/windstille/data/controller/xboxdrv.scm
===================================================================
--- trunk/windstille/data/controller/xboxdrv.scm	2009-03-09 11:17:27 UTC (rev 2591)
+++ trunk/windstille/data/controller/xboxdrv.scm	2009-03-09 12:06:29 UTC (rev 2592)
@@ -0,0 +1,30 @@
+;; -*- scheme -*-
+;; Configuration for a XBox360 pad which can be used with the xpad driver
+
+(windstille-controller
+ (x-axis  (joystick-axis (device 0)  (axis 0)))
+ (y-axis  (joystick-axis (device 0)  (axis 1)))
+ 
+ (x2-axis (joystick-axis (device 0)  (axis 2)))
+ (y2-axis (joystick-axis (device 0)  (axis 3)))
+
+ (view-center-button (joystick-button (device 0)  (button 10)))
+
+ (primary-button    (joystick-button (device 0)  (button 0)))
+ (secondary-button  (joystick-button (device 0)  (button 1)))
+ (tertiary-button   (joystick-button (device 0)  (button 2)))
+
+ (pda-button        (joystick-button (device 0)  (button 3)))
+
+ (aim-button        (joystick-button (device 0)  (button 5)))
+ (pause-button      (joystick-button (device 0)  (button 7)))
+ (inventory-button  (joystick-button (device 0)  (button 6)))
+
+ ;; allow to use the dpad for menu navigation
+ (menu-up-button    (joystick-axis-button (device 0) (axis 7) (up #t)))
+ (menu-down-button  (joystick-axis-button (device 0) (axis 7) (up #f)))
+ (menu-left-button  (joystick-axis-button (device 0) (axis 6) (up #t)))
+ (menu-right-button (joystick-axis-button (device 0) (axis 6) (up #f)))
+)
+
+;; EOF ;;

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-03-09 11:17:27 UTC (rev 2591)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-03-09 12:06:29 UTC (rev 2592)
@@ -43,6 +43,7 @@
   std::vector<JoystickButtonBinding>     joystick_button_bindings;
   std::vector<JoystickButtonAxisBinding> joystick_button_axis_bindings;
   std::vector<JoystickAxisBinding>       joystick_axis_bindings;
+  std::vector<JoystickAxisButtonBinding> joystick_axis_button_bindings;
 
   std::vector<KeyboardButtonBinding> keyboard_button_bindings;
   std::vector<KeyboardAxisBinding>   keyboard_axis_bindings;
@@ -136,6 +137,19 @@
                   bind_joystick_button(controller_description.get_definition(i->get_name()).id,
                                        device, button);
                 }
+              else if (j->get_name() == "joystick-axis-button")
+                {
+                  int  device;
+                  int  axis;
+                  bool up;
+
+                  j->get("device", device);
+                  j->get("axis", axis);
+                  j->get("up", up);
+
+                  bind_joystick_axis_button(controller_description.get_definition(i->get_name()).id,
+                                            device, axis, up);
+                }
               else if (j->get_name() == "wiimote-button")
                 {
                   int device = 0;
@@ -378,6 +392,30 @@
             }
         }
     }
+
+  for(std::vector<JoystickAxisButtonBinding>::const_iterator i = impl->joystick_axis_button_bindings.begin();
+      i != impl->joystick_axis_button_bindings.end();
+      ++i)
+    {
+      if (event.which == i->device &&
+          event.axis  == i->axis)
+        {
+          if (i->up)
+            {
+              if (event.value < -dead_zone)
+                add_button_event(i->event, true);
+              else 
+                add_button_event(i->event, false);
+            }
+          else
+            {
+              if (event.value > dead_zone)
+                add_button_event(i->event, true);
+              else 
+                add_button_event(i->event, false);              
+            }
+        }
+    }
 }
 
 void
@@ -581,6 +619,21 @@
 }
 
 void
+InputManagerSDL::bind_joystick_axis_button(int event, int device, int axis, bool up)
+{
+  ensure_open_joystick(device);
+
+  JoystickAxisButtonBinding binding;
+
+  binding.event  = event;
+  binding.device = device;
+  binding.axis   = axis;
+  binding.up   = up;
+
+  impl->joystick_axis_button_bindings.push_back(binding);
+}
+
+void
 InputManagerSDL::bind_keyboard_button(int event, SDLKey key)
 {
   KeyboardButtonBinding binding;
@@ -633,6 +686,7 @@
   impl->joystick_button_bindings.clear();
   impl->joystick_axis_bindings.clear();
   impl->joystick_button_axis_bindings.clear();
+  impl->joystick_axis_button_bindings.clear();
   
   impl->keyboard_button_bindings.clear();
   impl->keyboard_axis_bindings.clear();

Modified: trunk/windstille/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.hpp	2009-03-09 11:17:27 UTC (rev 2591)
+++ trunk/windstille/src/input/input_manager_sdl.hpp	2009-03-09 12:06:29 UTC (rev 2592)
@@ -49,6 +49,14 @@
   int plus;
 };
 
+struct JoystickAxisButtonBinding
+{
+  int  event;
+  int  device;
+  int  axis;
+  bool up;
+};
+
 struct MouseButtonBinding
 {
   int event;
@@ -91,6 +99,7 @@
 public:
   static InputManagerSDL* current() { return current_; }
 
+public:
   InputManagerSDL();
   virtual ~InputManagerSDL();
 
@@ -103,6 +112,7 @@
   void bind_joystick_axis(int event, int device, int axis, bool invert);
   void bind_joystick_button_axis(int event, int device, int minus, int plus);
   void bind_joystick_button(int event, int device, int button);
+  void bind_joystick_axis_button(int event, int device, int axis, bool up);
 
   void bind_keyboard_button(int event, SDLKey key);
   void bind_keyboard_axis(int event, SDLKey minus, SDLKey plus);
@@ -120,6 +130,7 @@
   void on_event(const SDL_Event& event);
 
   void add_axis_event  (int name, float pos);
+
 private:
   void on_key_event(const SDL_KeyboardEvent& key);
   void on_mouse_button_event(const SDL_MouseButtonEvent& button);



From grumbel at mail.berlios.de  Mon Mar  9 14:34:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 14:34:23 +0100
Subject: [Windstille-commit] r2593 - trunk/windstille/src/sound
Message-ID: <200903091334.n29DYN3G023400@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 14:34:22 +0100 (Mon, 09 Mar 2009)
New Revision: 2593

Modified:
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/sound_manager.hpp
Log:
Some cleanup

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 12:06:29 UTC (rev 2592)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 13:34:22 UTC (rev 2593)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <boost/scoped_array.hpp>
 #include <assert.h>
 #include <stdexcept>
 #include <iostream>
@@ -31,8 +32,10 @@
 SoundManager* SoundManager::current_ = 0;
 
 SoundManager::SoundManager()
-  : device(0), context(0), sound_enabled(false), music_source(0),
-    next_music_source(0), music_enabled(true)
+  : device(0), 
+    context(0), 
+    sound_enabled(false), 
+    music_enabled(true)
 {
   assert(current_ == 0);
   current_ = this; 
@@ -40,7 +43,7 @@
   try 
     {
       device = alcOpenDevice(0);
-      if(device == 0) 
+      if (device == 0) 
         {
           print_openal_version();
           throw std::runtime_error("Couldn't open audio device.");
@@ -70,25 +73,30 @@
 
 SoundManager::~SoundManager()
 {
-  delete music_source;
-  delete next_music_source;
+  music_source.reset();
+  next_music_source.reset();
 
-  for(SoundSources::iterator i = sources.begin(); i != sources.end(); ++i) {
-    delete *i;
-  }
+  for(SoundSources::iterator i = sources.begin(); i != sources.end(); ++i) 
+    {
+      delete *i;
+    }
 
-  for(SoundBuffers::iterator i = buffers.begin(); i != buffers.end(); ++i) {
-    ALuint buffer = i->second;
-    alDeleteBuffers(1, &buffer);
-  }
+  for(SoundBuffers::iterator i = buffers.begin(); i != buffers.end(); ++i) 
+    {
+      ALuint buffer = i->second;
+      alDeleteBuffers(1, &buffer);
+    }
 
-  if(context != 0) {
-    alcDestroyContext(context);
-  }
-  if(device != 0) {
-    alcCloseDevice(device);
-  }
+  if (context != 0) 
+    {
+      alcDestroyContext(context);
+    }
 
+  if (device != 0)
+    {
+      alcCloseDevice(device);
+    }
+
   current_ = 0; 
 }
 
@@ -102,132 +110,173 @@
   ALuint buffer;
   alGenBuffers(1, &buffer);
   check_al_error("Couldn't create audio buffer: ");
-  char* samples = new char[file->size];
-  try {
-    file->read(samples, file->size);
-    alBufferData(buffer, format, samples,
-        static_cast<ALsizei> (file->size),
-        static_cast<ALsizei> (file->rate));
-    check_al_error("Couldn't fill audio buffer: ");
-  } catch(...) {
-    delete[] samples;
-    throw;
-  }
-  delete[] samples;
 
+  boost::scoped_array<char> samples(new char[file->size]);
+
+  try 
+    {
+      file->read(samples.get(), file->size);
+
+      alBufferData(buffer, format, samples.get(),
+                   static_cast<ALsizei> (file->size),
+                   static_cast<ALsizei> (file->rate));
+
+      check_al_error("Couldn't fill audio buffer: ");
+    }
+  catch(...) 
+    {
+      throw;
+    }
+
   return buffer;
 }
 
-SoundSource*
+std::auto_ptr<SoundSource>
 SoundManager::create_sound_source(const std::string& filename)
 {
-  if(!sound_enabled)
-    return 0;
-
-  ALuint buffer;
+  if (!sound_enabled)
+    {
+      return std::auto_ptr<SoundSource>();
+    }
+  else
+    {
+      ALuint buffer;
   
-  // reuse an existing static sound buffer            
-  SoundBuffers::iterator i = buffers.find(filename);
-  if(i != buffers.end()) {
-    buffer = i->second;
-  } else {
-    buffer = load_file_into_buffer(filename);
-    buffers.insert(std::make_pair(filename, buffer));
-  }
+      // reuse an existing static sound buffer            
+      SoundBuffers::iterator i = buffers.find(filename);
+      if (i != buffers.end()) 
+        {
+          buffer = i->second;
+        } 
+      else 
+        {
+          buffer = load_file_into_buffer(filename);
+          buffers.insert(std::make_pair(filename, buffer));
+        }
   
-  SoundSource* source = new SoundSource();
-  alSourcei(source->source, AL_BUFFER, buffer);
-  return source;  
+      std::auto_ptr<SoundSource> source(new SoundSource());
+
+      alSourcei(source->source, AL_BUFFER, buffer);
+
+      return source;
+    }
 }
 
 void
 SoundManager::play(const std::string& filename, const Vector2f& pos)
 {
-  try {
-    SoundSource* source = create_sound_source(filename);
-    if(source == 0)
-      return;
-    if(pos == Vector2f(-1, -1)) {
-      alSourcef(source->source, AL_ROLLOFF_FACTOR, 0);
-    } else {
-      source->set_position(pos);
+  try
+    {
+      std::auto_ptr<SoundSource> source = create_sound_source(filename);
+
+      if (source.get())
+        {
+          if (pos == Vector2f(-1, -1)) 
+            {
+              alSourcef(source->source, AL_ROLLOFF_FACTOR, 0);
+            } 
+          else
+            {
+              source->set_position(pos);
+            }
+
+          source->play();
+          sources.push_back(source.release());
+        }
+    } 
+  catch(std::exception& e) 
+    {
+      std::cout << "Couldn't play sound " << filename << ": " << e.what() << "\n";
     }
-    source->play();
-    sources.push_back(source);
-  } catch(std::exception& e) {
-    std::cout << "Couldn't play sound " << filename << ": " << e.what() << "\n";
-  }
 }
 
 void
 SoundManager::enable_sound(bool enable)
 {
-  if(device == 0)
-    return;
-  sound_enabled = enable;
+  if (device)
+    {
+      sound_enabled = enable;
+    }
 }
 
 void
 SoundManager::enable_music(bool enable)
 {
-  if(device == 0)
-    return;
-  music_enabled = enable;
-  if(music_enabled) {
-    play_music(current_music);
-  } else {
-    if(music_source) {
-      delete music_source;
-      music_source = 0;
+  if (device)
+    {
+      music_enabled = enable;
+
+      if (music_enabled) 
+        {
+          play_music(current_music);
+        } 
+      else 
+        {
+          if (music_source.get())
+            {
+              music_source.reset();
+            }
+        }
     }
-  }
 }
 
 void
 SoundManager::stop_music(bool fade)
 {
-  if(fade) {
-    if(music_source
-        && music_source->getFadeState() != StreamSoundSource::FadingOff)
-      music_source->setFading(StreamSoundSource::FadingOff, .7f);
-  } else {
-    delete music_source;
-    music_source = 0;
-  }
+  if (fade) 
+    {
+      if (music_source.get() &&
+          music_source->getFadeState() != StreamSoundSource::FadingOff)
+        {
+          music_source->setFading(StreamSoundSource::FadingOff, .7f);
+        }
+    } 
+  else 
+    {
+      music_source.reset();
+    }
 }
 
 void
 SoundManager::play_music(const std::string& filename, bool fade)
 {
-  if(filename == current_music)
-    return;
-  current_music = filename;
-  if(!music_enabled)
-    return;
+  if (filename != current_music)
+    {
+      current_music = filename;
+      if (!music_enabled)
+        return;
 
-  try {
-    StreamSoundSource* newmusic 
-      = new StreamSoundSource(SoundFile::load(filename));
+      try 
+        {
+          std::auto_ptr<StreamSoundSource> newmusic(new StreamSoundSource(SoundFile::load(filename)));
 
-    alSourcef(newmusic->source, AL_ROLLOFF_FACTOR, 0);
+          alSourcef(newmusic->source, AL_ROLLOFF_FACTOR, 0);
  
-    if(fade) {
-      if(music_source 
-          && music_source->getFadeState() != StreamSoundSource::FadingOff)
-        music_source->setFading(StreamSoundSource::FadingOff, .7f);
-      delete next_music_source;
-      next_music_source = newmusic;
-    } else {
-      delete music_source;
-      music_source = newmusic;
-      music_source->play();
-      delete next_music_source;
-      next_music_source = 0;
+          if (fade) 
+            {
+              if (music_source.get() &&
+                  music_source->getFadeState() != StreamSoundSource::FadingOff)
+                {
+                  music_source->setFading(StreamSoundSource::FadingOff, .7f);
+                }
+
+              next_music_source = newmusic;
+            } 
+          else 
+            {
+              music_source = newmusic;
+
+              music_source->play();
+
+              next_music_source.reset();
+            }
+        }
+      catch(std::exception& e) 
+        {
+          std::cerr << "Couldn't play music file '" << filename << "': "
+                    << e.what() << "\n";
+        }
     }
-  } catch(std::exception& e) {
-    std::cerr << "Couldn't play music file '" << filename << "': "
-      << e.what() << "\n";
-  }
 }
 
 void
@@ -269,58 +318,78 @@
 void
 SoundManager::update()
 {
-  if (!sound_enabled)
-    return;
+  if (sound_enabled)
+    {
+      // check for finished sound sources
+      for(SoundSources::iterator i = sources.begin(); i != sources.end(); ) 
+        {
+          SoundSource* source = *i;
+          if (!source->playing()) 
+            {
+              delete source;
+              i = sources.erase(i);
+            } 
+          else 
+            {
+              ++i;
+            }
+        }
 
-  // check for finished sound sources
-  for(SoundSources::iterator i = sources.begin(); i != sources.end(); ) {
-    SoundSource* source = *i;
-    if(!source->playing()) {
-      delete source;
-      i = sources.erase(i);
-    } else {
-      ++i;
-    }
-  }
-  // check streaming sounds
-  if(music_source) {
-    music_source->update();
-  }
+      // check streaming sounds
+      if (music_source.get()) 
+        {
+          music_source->update();
+        }
   
-  if(next_music_source && (!music_source || !music_source->playing())) {
-    delete music_source;
-    music_source = next_music_source;
-    //music_source->setFading(StreamSoundSource::FadingOn, 1.0f);
-    music_source->play();
-    next_music_source = 0;
-  }
+      if (next_music_source.get() && (!music_source.get() || !music_source->playing())) 
+        {
+          music_source = next_music_source;
+          //music_source->setFading(StreamSoundSource::FadingOn, 1.0f);
+          music_source->play();
+        }
   
-  alcProcessContext(context);
-  check_alc_error("Error while processing audio context: ");
+      alcProcessContext(context);
+      check_alc_error("Error while processing audio context: ");
+    }
 }
 
 ALenum
 SoundManager::get_sample_format(SoundFile* file)
 {
-  if(file->channels == 2) {
-    if(file->bits_per_sample == 16) {
-      return AL_FORMAT_STEREO16;
-    } else if(file->bits_per_sample == 8) {
-      return AL_FORMAT_STEREO8;
-    } else {
-      throw std::runtime_error("Only 16 and 8 bit samples supported");
+  if (file->channels == 2) 
+    {
+      if (file->bits_per_sample == 16) 
+        {
+          return AL_FORMAT_STEREO16;
+        } 
+      else if (file->bits_per_sample == 8) 
+        {
+          return AL_FORMAT_STEREO8;
+        }
+      else 
+        {
+          throw std::runtime_error("Only 16 and 8 bit samples supported");
+        }
+    } 
+  else if (file->channels == 1) 
+    {
+      if (file->bits_per_sample == 16) 
+        {
+          return AL_FORMAT_MONO16;
+        }
+      else if (file->bits_per_sample == 8) 
+        {
+          return AL_FORMAT_MONO8;
+        }
+      else 
+        {
+          throw std::runtime_error("Only 16 and 8 bit samples supported");
+        }
     }
-  } else if(file->channels == 1) {
-    if(file->bits_per_sample == 16) {
-      return AL_FORMAT_MONO16;
-    } else if(file->bits_per_sample == 8) {
-      return AL_FORMAT_MONO8;
-    } else {
-      throw std::runtime_error("Only 16 and 8 bit samples supported");
+  else 
+    {
+      throw std::runtime_error("Only 1 and 2 channel samples supported");
     }
-  }
-  
-  throw std::runtime_error("Only 1 and 2 channel samples supported");
 }
 
 void
@@ -336,22 +405,26 @@
 SoundManager::check_alc_error(const char* message)
 {
   int err = alcGetError(device);
-  if(err != ALC_NO_ERROR) {
-    std::stringstream msg;
-    msg << message << alcGetString(device, err);
-    throw std::runtime_error(msg.str());
-  }                
+
+  if (err != ALC_NO_ERROR) 
+    {
+      std::stringstream msg;
+      msg << message << alcGetString(device, err);
+      throw std::runtime_error(msg.str());
+    }                
 }
 
 void
 SoundManager::check_al_error(const char* message)
 {
   int err = alGetError();
-  if(err != AL_NO_ERROR) {
-    std::stringstream msg;
-    msg << message << alGetString(err);
-    throw std::runtime_error(msg.str());
-  }  
+
+  if (err != AL_NO_ERROR) 
+    {
+      std::stringstream msg;
+      msg << message << alGetString(err);
+      throw std::runtime_error(msg.str());
+    }  
 }
 
 /* EOF */

Modified: trunk/windstille/src/sound/sound_manager.hpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 12:06:29 UTC (rev 2592)
+++ trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 13:34:22 UTC (rev 2593)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SOUND_SOUND_MANAGER_HPP
 #define HEADER_WINDSTILLE_SOUND_SOUND_MANAGER_HPP
 
+#include <memory>
 #include <string>
 #include <vector>
 #include <map>
@@ -72,7 +73,7 @@
    * This function might throw exceptions. It returns 0 if no audio device is
    * available.
    */
-  SoundSource* create_sound_source(const std::string& filename);
+  std::auto_ptr<SoundSource> create_sound_source(const std::string& filename);
 
   static ALuint load_file_into_buffer(const std::string& filename);
   static ALenum get_sample_format(SoundFile* file);
@@ -90,8 +91,8 @@
   typedef std::vector<SoundSource*> SoundSources;
   SoundSources sources;
 
-  StreamSoundSource* music_source;
-  StreamSoundSource* next_music_source;
+  std::auto_ptr<StreamSoundSource> music_source;
+  std::auto_ptr<StreamSoundSource> next_music_source;
 
   bool music_enabled;
   std::string current_music;



From grumbel at mail.berlios.de  Mon Mar  9 14:39:40 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 14:39:40 +0100
Subject: [Windstille-commit] r2594 - trunk/windstille/src/sound
Message-ID: <200903091339.n29DdeF5023855@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 14:39:39 +0100 (Mon, 09 Mar 2009)
New Revision: 2594

Modified:
   trunk/windstille/src/sound/stream_sound_source.cpp
Log:
Some cleanup

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-03-09 13:34:22 UTC (rev 2593)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-03-09 13:39:39 UTC (rev 2594)
@@ -17,23 +17,30 @@
 */
 
 #include <SDL.h>
+#include <boost/scoped_array.hpp>
 #include "stream_sound_source.hpp"
 #include "sound_manager.hpp"
 #include "sound_file.hpp"
 
-StreamSoundSource::StreamSoundSource(SoundFile* file)
+StreamSoundSource::StreamSoundSource(SoundFile* file_)
 {
-  this->file = file;
+  file = file_;
+
   alGenBuffers(STREAMFRAGMENTS, buffers);
   SoundManager::check_al_error("Couldn't allocate audio buffers: ");
   format = SoundManager::get_sample_format(file);
-  try {
-    for(size_t i = 0; i < STREAMFRAGMENTS; ++i) {
-      fillBufferAndQueue(buffers[i]);
+
+  try 
+    {
+      for(size_t i = 0; i < STREAMFRAGMENTS; ++i) 
+        {
+          fillBufferAndQueue(buffers[i]);
+        }
     }
-  } catch(...) {
-    alDeleteBuffers(STREAMFRAGMENTS, buffers);
-  }
+  catch(...) 
+    {
+      alDeleteBuffers(STREAMFRAGMENTS, buffers);
+    }
 }
 
 StreamSoundSource::~StreamSoundSource()
@@ -45,73 +52,90 @@
 void
 StreamSoundSource::update()
 {
-  if(!playing())
-    return;
+  if (playing())
+    {
+      ALint processed = 0;
+      alGetSourcei(source, AL_BUFFERS_PROCESSED, &processed);
 
-  ALint processed = 0;
-  alGetSourcei(source, AL_BUFFERS_PROCESSED, &processed);
-  while(processed > 0) {
-    processed--;
+      while (processed > 0) 
+        {
+          processed--;
 
-    ALuint buffer;
-    alSourceUnqueueBuffers(source, 1, &buffer);
-    SoundManager::check_al_error("Couldn't unqueu audio buffer: ");
+          ALuint buffer;
+          alSourceUnqueueBuffers(source, 1, &buffer);
+          SoundManager::check_al_error("Couldn't unqueu audio buffer: ");
 
-    fillBufferAndQueue(buffer);
-  }
+          fillBufferAndQueue(buffer);
+        }
   
-  // we might have to restart the source if we had a buffer underrun
-  if(!playing()) {
-    std::cerr << "Restarting audio source because of buffer underrun.\n";
-    alSourcePlay(source);
-    SoundManager::check_al_error("Couldn't restart audio source: ");
-  }
+      // we might have to restart the source if we had a buffer underrun
+      if (!playing()) {
+        std::cerr << "Restarting audio source because of buffer underrun.\n";
+        alSourcePlay(source);
+        SoundManager::check_al_error("Couldn't restart audio source: ");
+      }
 
-  if(fade_state == FadingOn) {
-    unsigned int ticks = SDL_GetTicks();
-    float time = (ticks - fade_start_ticks) / 1000.0;
-    if(time >= fade_time) {
-      set_gain(1.0);
-      fade_state = NoFading;
-    } else {
-      set_gain(time / fade_time);
+      if (fade_state == FadingOn) 
+        {
+          unsigned int ticks = SDL_GetTicks();
+          float time = (ticks - fade_start_ticks) / 1000.0;
+          if (time >= fade_time)
+            {
+              set_gain(1.0);
+              fade_state = NoFading;
+            } 
+          else 
+            {
+              set_gain(time / fade_time);
+            }
+        } 
+      else if (fade_state == FadingOff) 
+        {
+          unsigned int ticks = SDL_GetTicks();
+          float time = (ticks - fade_start_ticks) / 1000.0;
+
+          if (time >= fade_time) 
+            {
+              stop();
+              fade_state = NoFading;
+            } 
+          else 
+            {
+              set_gain( (fade_time-time) / fade_time);
+            }
+        }
     }
-  } else if(fade_state == FadingOff) {
-    unsigned int ticks = SDL_GetTicks();
-    float time = (ticks - fade_start_ticks) / 1000.0;
-    if(time >= fade_time) {                              
-      stop();
-      fade_state = NoFading;
-    } else {
-      set_gain( (fade_time-time) / fade_time);
-    }
-  }
 }
 
 void
-StreamSoundSource::setFading(FadeState state, float fade_time)
+StreamSoundSource::setFading(FadeState state_, float fade_time_)
 {
-  this->fade_state = state;
-  this->fade_time = fade_time;
-  this->fade_start_ticks = SDL_GetTicks();
+  fade_state       = state_;
+  fade_time        = fade_time_;
+  fade_start_ticks = SDL_GetTicks();
 }
 
 void
 StreamSoundSource::fillBufferAndQueue(ALuint buffer)
 {
   // fill buffer
-  char* bufferdata = new char[STREAMFRAGMENTSIZE];
+  boost::scoped_array<char> bufferdata(new char[STREAMFRAGMENTSIZE]);
   size_t bytesread = 0;
-  do {
-    bytesread += file->read(bufferdata + bytesread,
-        STREAMFRAGMENTSIZE - bytesread);
-    if(bytesread < STREAMFRAGMENTSIZE) {
-      file->reset();
-    }
-  } while(bytesread < STREAMFRAGMENTSIZE);
+
+  do 
+    {
+      bytesread += file->read(bufferdata.get() + bytesread,
+                              STREAMFRAGMENTSIZE - bytesread);
+      
+      if (bytesread < STREAMFRAGMENTSIZE) 
+        {
+          file->reset();
+        }
+    } 
+  while(bytesread < STREAMFRAGMENTSIZE);
   
-  alBufferData(buffer, format, bufferdata, STREAMFRAGMENTSIZE, file->rate);
-  delete[] bufferdata;
+  alBufferData(buffer, format, bufferdata.get(), STREAMFRAGMENTSIZE, file->rate);
+
   SoundManager::check_al_error("Couldn't refill audio buffer: ");
 
   alSourceQueueBuffers(source, 1, &buffer);



From grumbel at mail.berlios.de  Mon Mar  9 14:51:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 14:51:10 +0100
Subject: [Windstille-commit] r2595 - trunk/windstille/src/sound
Message-ID: <200903091351.n29DpARI025769@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 14:51:10 +0100 (Mon, 09 Mar 2009)
New Revision: 2595

Modified:
   trunk/windstille/src/sound/sound_file.cpp
   trunk/windstille/src/sound/sound_file.hpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/sound_manager.hpp
   trunk/windstille/src/sound/stream_sound_source.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/sound/sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/sound_file.cpp	2009-03-09 13:39:39 UTC (rev 2594)
+++ trunk/windstille/src/sound/sound_file.cpp	2009-03-09 13:51:10 UTC (rev 2595)
@@ -38,28 +38,47 @@
 SoundFile::load(const std::string& filename)
 {
   PHYSFS_file* file = PHYSFS_openRead(filename.c_str());
-  if(!file) {
-    std::stringstream msg;
-    msg << "Couldn't open '" << filename << "': " << PHYSFS_getLastError();
-    throw std::runtime_error(msg.str());
-  }
-    
-  try {
-    char magic[4];
-    if(PHYSFS_read(file, magic, sizeof(magic), 1) != 1)
-      throw std::runtime_error("Couldn't read magic, file too short");
-    PHYSFS_seek(file, 0);
-    if(strncmp(magic, "RIFF", 4) == 0)
-      return new WavSoundFile(file);
-    else if(strncmp(magic, "OggS", 4) == 0)
-      return new OggSoundFile(file);
-    else
-      throw std::runtime_error("Unknown file format");
-  } catch(std::exception& e) {
-    std::stringstream msg;
-    msg << "Couldn't read '" << filename << "': " << e.what();
-    throw std::runtime_error(msg.str());
-  }
+
+  if (!file) 
+    {
+      std::stringstream msg;
+      msg << "Couldn't open '" << filename << "': " << PHYSFS_getLastError();
+      throw std::runtime_error(msg.str());
+    }
+  else
+    {
+      try {
+        char magic[4];
+
+        if (PHYSFS_read(file, magic, sizeof(magic), 1) != 1)
+          {
+            throw std::runtime_error("Couldn't read magic, file too short");
+          }
+        else
+          {
+            PHYSFS_seek(file, 0);
+
+            if (strncmp(magic, "RIFF", 4) == 0)
+              {
+                return new WavSoundFile(file);
+              }
+            else if (strncmp(magic, "OggS", 4) == 0)
+              {
+                return new OggSoundFile(file);
+              }
+            else
+              {
+                throw std::runtime_error("Unknown file format");
+              }
+          }
+      } 
+      catch(std::exception& e) 
+        {
+          std::stringstream msg;
+          msg << "Couldn't read '" << filename << "': " << e.what();
+          throw std::runtime_error(msg.str());
+        }
+    }
 }
 
 /* EOF */

Modified: trunk/windstille/src/sound/sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/sound_file.hpp	2009-03-09 13:39:39 UTC (rev 2594)
+++ trunk/windstille/src/sound/sound_file.hpp	2009-03-09 13:51:10 UTC (rev 2595)
@@ -25,8 +25,8 @@
 class SoundFile
 {
 public:
-  virtual ~SoundFile()
-  { }
+  SoundFile() {}
+  virtual ~SoundFile() {}
 
   virtual size_t read(void* buffer, size_t buffer_size) = 0;
   virtual void reset() = 0;
@@ -37,6 +37,7 @@
   /// size in bytes
   size_t size;
 
+public:
   static SoundFile* load(const std::string& filename);
 };
 

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 13:39:39 UTC (rev 2594)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 13:51:10 UTC (rev 2595)
@@ -243,39 +243,40 @@
   if (filename != current_music)
     {
       current_music = filename;
-      if (!music_enabled)
-        return;
 
-      try 
+      if (music_enabled)
         {
-          std::auto_ptr<StreamSoundSource> newmusic(new StreamSoundSource(SoundFile::load(filename)));
+          try 
+            {
+              std::auto_ptr<StreamSoundSource> newmusic(new StreamSoundSource(SoundFile::load(filename)));
 
-          alSourcef(newmusic->source, AL_ROLLOFF_FACTOR, 0);
+              alSourcef(newmusic->source, AL_ROLLOFF_FACTOR, 0);
  
-          if (fade) 
-            {
-              if (music_source.get() &&
-                  music_source->getFadeState() != StreamSoundSource::FadingOff)
+              if (fade) 
                 {
-                  music_source->setFading(StreamSoundSource::FadingOff, .7f);
-                }
+                  if (music_source.get() &&
+                      music_source->getFadeState() != StreamSoundSource::FadingOff)
+                    {
+                      music_source->setFading(StreamSoundSource::FadingOff, .7f);
+                    }
 
-              next_music_source = newmusic;
-            } 
-          else 
-            {
-              music_source = newmusic;
+                  next_music_source = newmusic;
+                } 
+              else 
+                {
+                  music_source = newmusic;
 
-              music_source->play();
+                  music_source->play();
 
-              next_music_source.reset();
+                  next_music_source.reset();
+                }
             }
+          catch(std::exception& e) 
+            {
+              std::cerr << "Couldn't play music file '" << filename << "': "
+                        << e.what() << "\n";
+            }
         }
-      catch(std::exception& e) 
-        {
-          std::cerr << "Couldn't play music file '" << filename << "': "
-                    << e.what() << "\n";
-        }
     }
 }
 
@@ -324,6 +325,7 @@
       for(SoundSources::iterator i = sources.begin(); i != sources.end(); ) 
         {
           SoundSource* source = *i;
+
           if (!source->playing()) 
             {
               delete source;

Modified: trunk/windstille/src/sound/sound_manager.hpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 13:39:39 UTC (rev 2594)
+++ trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 13:51:10 UTC (rev 2595)
@@ -82,7 +82,7 @@
   void check_alc_error(const char* message);
   static void check_al_error(const char* message);
 
-  ALCdevice* device;
+  ALCdevice*  device;
   ALCcontext* context;
   bool sound_enabled;
 

Modified: trunk/windstille/src/sound/stream_sound_source.hpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.hpp	2009-03-09 13:39:39 UTC (rev 2594)
+++ trunk/windstille/src/sound/stream_sound_source.hpp	2009-03-09 13:51:10 UTC (rev 2595)
@@ -40,10 +40,9 @@
   void update();
   
 private:
-  static const size_t STREAMBUFFERSIZE = 1024 * 500;
-  static const size_t STREAMFRAGMENTS = 5;
-  static const size_t STREAMFRAGMENTSIZE 
-    = STREAMBUFFERSIZE / STREAMFRAGMENTS;
+  static const size_t STREAMBUFFERSIZE   = 1024 * 500;
+  static const size_t STREAMFRAGMENTS    = 5;
+  static const size_t STREAMFRAGMENTSIZE = STREAMBUFFERSIZE / STREAMFRAGMENTS;
 
   void fillBufferAndQueue(ALuint buffer);
   SoundFile* file;



From grumbel at mail.berlios.de  Mon Mar  9 14:58:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 14:58:37 +0100
Subject: [Windstille-commit] r2596 - trunk/windstille/src/sound
Message-ID: <200903091358.n29Dwbel027261@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 14:58:36 +0100 (Mon, 09 Mar 2009)
New Revision: 2596

Modified:
   trunk/windstille/src/sound/sound_file.cpp
   trunk/windstille/src/sound/sound_file.hpp
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/stream_sound_source.cpp
   trunk/windstille/src/sound/stream_sound_source.hpp
Log:
More cleanup, fixed memory leak in StreamSoundSource

Modified: trunk/windstille/src/sound/sound_file.cpp
===================================================================
--- trunk/windstille/src/sound/sound_file.cpp	2009-03-09 13:51:10 UTC (rev 2595)
+++ trunk/windstille/src/sound/sound_file.cpp	2009-03-09 13:58:36 UTC (rev 2596)
@@ -34,7 +34,7 @@
 
 #include <fstream>
 
-SoundFile*
+std::auto_ptr<SoundFile>
 SoundFile::load(const std::string& filename)
 {
   PHYSFS_file* file = PHYSFS_openRead(filename.c_str());
@@ -47,31 +47,32 @@
     }
   else
     {
-      try {
-        char magic[4];
+      try 
+        {
+          char magic[4];
 
-        if (PHYSFS_read(file, magic, sizeof(magic), 1) != 1)
-          {
-            throw std::runtime_error("Couldn't read magic, file too short");
-          }
-        else
-          {
-            PHYSFS_seek(file, 0);
+          if (PHYSFS_read(file, magic, sizeof(magic), 1) != 1)
+            {
+              throw std::runtime_error("Couldn't read magic, file too short");
+            }
+          else
+            {
+              PHYSFS_seek(file, 0);
 
-            if (strncmp(magic, "RIFF", 4) == 0)
-              {
-                return new WavSoundFile(file);
-              }
-            else if (strncmp(magic, "OggS", 4) == 0)
-              {
-                return new OggSoundFile(file);
-              }
-            else
-              {
-                throw std::runtime_error("Unknown file format");
-              }
-          }
-      } 
+              if (strncmp(magic, "RIFF", 4) == 0)
+                {
+                  return std::auto_ptr<SoundFile>(new WavSoundFile(file));
+                }
+              else if (strncmp(magic, "OggS", 4) == 0)
+                {
+                  return std::auto_ptr<SoundFile>(new OggSoundFile(file));
+                }
+              else
+                {
+                  throw std::runtime_error("Unknown file format");
+                }
+            }
+        } 
       catch(std::exception& e) 
         {
           std::stringstream msg;

Modified: trunk/windstille/src/sound/sound_file.hpp
===================================================================
--- trunk/windstille/src/sound/sound_file.hpp	2009-03-09 13:51:10 UTC (rev 2595)
+++ trunk/windstille/src/sound/sound_file.hpp	2009-03-09 13:58:36 UTC (rev 2596)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SOUND_SOUND_FILE_HPP
 #define HEADER_WINDSTILLE_SOUND_SOUND_FILE_HPP
 
+#include <memory>
 #include <stdio.h>
 #include <iostream>
 
@@ -38,7 +39,7 @@
   size_t size;
 
 public:
-  static SoundFile* load(const std::string& filename);
+  static std::auto_ptr<SoundFile> load(const std::string& filename);
 };
 
 #endif

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 13:51:10 UTC (rev 2595)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 13:58:36 UTC (rev 2596)
@@ -265,9 +265,7 @@
               else 
                 {
                   music_source = newmusic;
-
                   music_source->play();
-
                   next_music_source.reset();
                 }
             }

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-03-09 13:51:10 UTC (rev 2595)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-03-09 13:58:36 UTC (rev 2596)
@@ -22,14 +22,15 @@
 #include "sound_manager.hpp"
 #include "sound_file.hpp"
 
-StreamSoundSource::StreamSoundSource(SoundFile* file_)
+StreamSoundSource::StreamSoundSource(std::auto_ptr<SoundFile> file_)
 {
   file = file_;
 
   alGenBuffers(STREAMFRAGMENTS, buffers);
   SoundManager::check_al_error("Couldn't allocate audio buffers: ");
-  format = SoundManager::get_sample_format(file);
 
+  format = SoundManager::get_sample_format(file.get());
+
   try 
     {
       for(size_t i = 0; i < STREAMFRAGMENTS; ++i) 

Modified: trunk/windstille/src/sound/stream_sound_source.hpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.hpp	2009-03-09 13:51:10 UTC (rev 2595)
+++ trunk/windstille/src/sound/stream_sound_source.hpp	2009-03-09 13:58:36 UTC (rev 2596)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SOUND_STREAM_SOUND_SOURCE_HPP
 #define HEADER_WINDSTILLE_SOUND_STREAM_SOUND_SOURCE_HPP
 
+#include <memory>
 #include <stdio.h>
 #include "sound_source.hpp"
 
@@ -27,31 +28,31 @@
 class StreamSoundSource : public SoundSource
 {
 public:
-  StreamSoundSource(SoundFile* file);
-  virtual ~StreamSoundSource();
-
   enum FadeState { NoFading, FadingOn, FadingOff };
 
-  void setFading(FadeState state, float fadetime);
-  FadeState getFadeState() const
-  {
-    return fade_state;
-  }
-  void update();
-  
 private:
   static const size_t STREAMBUFFERSIZE   = 1024 * 500;
   static const size_t STREAMFRAGMENTS    = 5;
   static const size_t STREAMFRAGMENTSIZE = STREAMBUFFERSIZE / STREAMFRAGMENTS;
 
-  void fillBufferAndQueue(ALuint buffer);
-  SoundFile* file;
+  std::auto_ptr<SoundFile> file;
   ALuint buffers[STREAMFRAGMENTS];
   ALenum format;
 
   FadeState fade_state;
   unsigned int fade_start_ticks;
   float fade_time;
+
+public:
+  StreamSoundSource(std::auto_ptr<SoundFile> file);
+  virtual ~StreamSoundSource();
+
+  void setFading(FadeState state, float fadetime);
+  FadeState getFadeState() const { return fade_state; }
+  void update();
+  
+private:
+  void fillBufferAndQueue(ALuint buffer);
 };
 
 #endif



From grumbel at mail.berlios.de  Mon Mar  9 15:22:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 15:22:43 +0100
Subject: [Windstille-commit] r2597 - trunk/windstille/src/sound
Message-ID: <200903091422.n29EMheE031126@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 15:22:43 +0100 (Mon, 09 Mar 2009)
New Revision: 2597

Modified:
   trunk/windstille/src/sound/stream_sound_source.cpp
Log:
stop() SoundSource before alDeleteBuffers'ing the buffers, since buffers attached to a sound source canet' be freed

Modified: trunk/windstille/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/windstille/src/sound/stream_sound_source.cpp	2009-03-09 13:58:36 UTC (rev 2596)
+++ trunk/windstille/src/sound/stream_sound_source.cpp	2009-03-09 14:22:43 UTC (rev 2597)
@@ -41,11 +41,14 @@
   catch(...) 
     {
       alDeleteBuffers(STREAMFRAGMENTS, buffers);
+      throw;
     }
 }
 
 StreamSoundSource::~StreamSoundSource()
 {
+  stop();
+
   alDeleteBuffers(STREAMFRAGMENTS, buffers);
   SoundManager::check_al_error("Couldn't delete audio buffers: ");
 }
@@ -70,11 +73,12 @@
         }
   
       // we might have to restart the source if we had a buffer underrun
-      if (!playing()) {
-        std::cerr << "Restarting audio source because of buffer underrun.\n";
-        alSourcePlay(source);
-        SoundManager::check_al_error("Couldn't restart audio source: ");
-      }
+      if (!playing()) 
+        {
+          std::cerr << "Restarting audio source because of buffer underrun.\n";
+          alSourcePlay(source);
+          SoundManager::check_al_error("Couldn't restart audio source: ");
+        }
 
       if (fade_state == FadingOn) 
         {



From grumbel at mail.berlios.de  Mon Mar  9 15:25:00 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 15:25:00 +0100
Subject: [Windstille-commit] r2598 - trunk/htdocs
Message-ID: <200903091425.n29EP0Qf031749@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 15:25:00 +0100 (Mon, 09 Mar 2009)
New Revision: 2598

Modified:
   trunk/htdocs/news.xml
Log:
--- some unknown new stuff (automatically inserted by the upload script) ---

Modified: trunk/htdocs/news.xml
===================================================================
--- trunk/htdocs/news.xml	2009-03-09 14:22:43 UTC (rev 2597)
+++ trunk/htdocs/news.xml	2009-03-09 14:25:00 UTC (rev 2598)
@@ -3,6 +3,10 @@
   
   <section title="News">
     <news>
+      <item date="1. Mar 2009">
+        New <a href="wiki/">Windstille Wiki</a> got launched.
+      </item>
+
       <item date="15. Feb 2009">
         Some Windstille development is going on again, check out the 
         <a href="http://grumbel.blogspot.com/search/label/Windstille">Blog</a>. Windstille



From grumbel at mail.berlios.de  Mon Mar  9 15:25:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 15:25:23 +0100
Subject: [Windstille-commit] r2599 - trunk/htdocs
Message-ID: <200903091425.n29EPNxl031897@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 15:25:17 +0100 (Mon, 09 Mar 2009)
New Revision: 2599

Modified:
   trunk/htdocs/news.xml
Log:
--- some unknown new stuff (automatically inserted by the upload script) ---

Modified: trunk/htdocs/news.xml
===================================================================
--- trunk/htdocs/news.xml	2009-03-09 14:25:00 UTC (rev 2598)
+++ trunk/htdocs/news.xml	2009-03-09 14:25:17 UTC (rev 2599)
@@ -3,7 +3,7 @@
   
   <section title="News">
     <news>
-      <item date="1. Mar 2009">
+      <item date="22. Feb 2009">
         New <a href="wiki/">Windstille Wiki</a> got launched.
       </item>
 



From grumbel at mail.berlios.de  Mon Mar  9 16:17:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 16:17:37 +0100
Subject: [Windstille-commit] r2600 - trunk/windstille/src/sound
Message-ID: <200903091517.n29FHbS9006657@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 16:17:36 +0100 (Mon, 09 Mar 2009)
New Revision: 2600

Modified:
   trunk/windstille/src/sound/sound_manager.cpp
   trunk/windstille/src/sound/sound_manager.hpp
Log:
Minor cleanup, replaced raw pointer with boost::shared_ptr

Modified: trunk/windstille/src/sound/sound_manager.cpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 14:25:17 UTC (rev 2599)
+++ trunk/windstille/src/sound/sound_manager.cpp	2009-03-09 15:17:36 UTC (rev 2600)
@@ -43,30 +43,35 @@
   try 
     {
       device = alcOpenDevice(0);
-      if (device == 0) 
+
+      if (!device)
         {
           print_openal_version();
           throw std::runtime_error("Couldn't open audio device.");
         }
+      else
+        {
+          int attributes[] = { 0 };
 
-      int attributes[] = { 0 };
+          context = alcCreateContext(device, attributes);
+          check_alc_error("Couldn't create audio context: ");
 
-      context = alcCreateContext(device, attributes);
-      check_alc_error("Couldn't create audio context: ");
-      alcMakeContextCurrent(context);
-      check_alc_error("Couldn't select audio context: ");
+          alcMakeContextCurrent(context);
+          check_alc_error("Couldn't select audio context: ");
 
-      check_al_error("Audio error after init: ");
-      sound_enabled = true;
+          check_al_error("Audio error after init: ");
+          sound_enabled = true;
+        }
     } 
   catch(std::exception& e) 
-    {
-      device = 0;
+    { // disable sound
+      device  = 0;
       context = 0;
+      sound_enabled = false;
+
       std::cerr << "Couldn't initialize audio device:" << e.what() << "\n";
       print_openal_version();
-      // disable sound
-      enable_sound(false);
+      
       std::cout << "Disabling sound\n";
     }
 }
@@ -76,10 +81,7 @@
   music_source.reset();
   next_music_source.reset();
 
-  for(SoundSources::iterator i = sources.begin(); i != sources.end(); ++i) 
-    {
-      delete *i;
-    }
+  sources.clear();
 
   for(SoundBuffers::iterator i = buffers.begin(); i != buffers.end(); ++i) 
     {
@@ -181,9 +183,9 @@
             }
 
           source->play();
-          sources.push_back(source.release());
+          sources.push_back(boost::shared_ptr<SoundSource>(source.release()));
         }
-    } 
+    }
   catch(std::exception& e) 
     {
       std::cout << "Couldn't play sound " << filename << ": " << e.what() << "\n";
@@ -322,11 +324,8 @@
       // check for finished sound sources
       for(SoundSources::iterator i = sources.begin(); i != sources.end(); ) 
         {
-          SoundSource* source = *i;
-
-          if (!source->playing()) 
+          if (!(*i)->playing())
             {
-              delete source;
               i = sources.erase(i);
             } 
           else 

Modified: trunk/windstille/src/sound/sound_manager.hpp
===================================================================
--- trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 14:25:17 UTC (rev 2599)
+++ trunk/windstille/src/sound/sound_manager.hpp	2009-03-09 15:17:36 UTC (rev 2600)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_SOUND_SOUND_MANAGER_HPP
 #define HEADER_WINDSTILLE_SOUND_SOUND_MANAGER_HPP
 
+#include <boost/shared_ptr.hpp>
 #include <memory>
 #include <string>
 #include <vector>
@@ -88,7 +89,7 @@
 
   typedef std::map<std::string, ALuint> SoundBuffers;
   SoundBuffers buffers;
-  typedef std::vector<SoundSource*> SoundSources;
+  typedef std::vector<boost::shared_ptr<SoundSource> > SoundSources;
   SoundSources sources;
 
   std::auto_ptr<StreamSoundSource> music_source;



From grumbel at mail.berlios.de  Mon Mar  9 16:52:20 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 16:52:20 +0100
Subject: [Windstille-commit] r2601 - trunk/windstille/src/display
Message-ID: <200903091552.n29FqK7B009733@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 16:52:20 +0100 (Mon, 09 Mar 2009)
New Revision: 2601

Modified:
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/scene_context.hpp
Log:
Adjust lightmap size to the screen size properly

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-03-09 15:17:36 UTC (rev 2600)
+++ trunk/windstille/src/display/scene_context.cpp	2009-03-09 15:52:20 UTC (rev 2601)
@@ -34,7 +34,7 @@
 
 // The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
 #define LIGHTMAP_DIV 4
-#define BLURMAP_DIV 1
+#define BLURMAP_DIV  1
 
 class SceneContextImpl
 {
@@ -51,9 +51,9 @@
     Framebuffer lightmap;   
 
     Framebuffers() 
-      : screen  (GL_TEXTURE_RECTANGLE_ARB, 800, 600),
-        tmp     (GL_TEXTURE_RECTANGLE_ARB, 800, 600),
-        lightmap(GL_TEXTURE_RECTANGLE_ARB, 800/LIGHTMAP_DIV, 600/LIGHTMAP_DIV)
+      : screen  (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
+        tmp     (GL_TEXTURE_RECTANGLE_ARB, Display::get_width(), Display::get_height()),
+        lightmap(GL_TEXTURE_RECTANGLE_ARB, Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
     {
     }
   };
@@ -68,7 +68,7 @@
                   SceneContext::LIGHTMAPSCREEN |
                   SceneContext::BLURMAP),
       framebuffers(0), //new Framebuffers())
-      lightmap(800/LIGHTMAP_DIV, 600/LIGHTMAP_DIV)
+      lightmap(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
   {
   }
 
@@ -79,13 +79,12 @@
 };
 
 SceneContext::SceneContext()
+  : impl(new SceneContextImpl())
 {
-  impl = new SceneContextImpl();
 }
 
 SceneContext::~SceneContext()
 {
-  delete impl;
 }
 
 DrawingContext&
@@ -267,7 +266,7 @@
       glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
       glPushMatrix();
-      glTranslatef(0, 600-(600/LIGHTMAP_DIV), 0);
+      glTranslatef(0, Display::get_height()-(Display::get_height()/LIGHTMAP_DIV), 0);
       glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
       impl->light.render(*this);
       glPopMatrix();
@@ -321,13 +320,13 @@
       glVertex2f(0, 0);
 
       glTexCoord2f(uv.right, uv.bottom);
-      glVertex2f(800, 0);
+      glVertex2f(Display::get_width(), 0);
 
       glTexCoord2f(uv.right, uv.top);
-      glVertex2f(800, 600);
+      glVertex2f(Display::get_width(), Display::get_height());
 
       glTexCoord2f(uv.left, uv.top);
-      glVertex2f(0, 600);
+      glVertex2f(0, Display::get_height());
 
       glEnd();
     }
@@ -347,7 +346,7 @@
       glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
       glPushMatrix();
-      glTranslatef(0, 600-(600/LIGHTMAP_DIV), 0);
+      glTranslatef(0, Display::get_height() - (Display::get_height()/LIGHTMAP_DIV), 0);
       glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
       impl->light.render(*this);
       glPopMatrix();

Modified: trunk/windstille/src/display/scene_context.hpp
===================================================================
--- trunk/windstille/src/display/scene_context.hpp	2009-03-09 15:17:36 UTC (rev 2600)
+++ trunk/windstille/src/display/scene_context.hpp	2009-03-09 15:52:20 UTC (rev 2601)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_SCENE_CONTEXT_HPP
 #define HEADER_WINDSTILLE_DISPLAY_SCENE_CONTEXT_HPP
 
+#include <memory>
 #include "drawing_context.hpp"
 
 class SceneContextImpl;
@@ -92,8 +93,9 @@
   void render_highlightmap();
 
   void eval(DrawingRequest* request);
+
 private:
-  SceneContextImpl* impl;
+  std::auto_ptr<SceneContextImpl> impl;
 
   SceneContext (const SceneContext&);
   SceneContext& operator= (const SceneContext&);



From grumbel at mail.berlios.de  Mon Mar  9 17:39:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 17:39:37 +0100
Subject: [Windstille-commit] r2602 - in trunk/windstille/src: app screen
Message-ID: <200903091639.n29GdbIh013628@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 17:39:36 +0100 (Mon, 09 Mar 2009)
New Revision: 2602

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/title_screen.cpp
Log:
Removed menu_manager global variable, replaced with stati class functions, added auto-center for menus when screen is different size

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 15:52:20 UTC (rev 2601)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 16:39:36 UTC (rev 2602)
@@ -43,12 +43,6 @@
 #endif
 #include "app/windstille.hpp"
 #include "menu_manager.hpp"
-
-MenuManager menu_manager;
-
-MenuManager::MenuManager()
-{
-}
 
 void
 MenuManager::display_option_menu()
@@ -56,7 +50,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-250, 300-170), Sizef(500, 340)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 340),
                                                          "Options",
                                                          manager->get_root()));
 
@@ -68,28 +62,28 @@
   {
     std::auto_ptr<SliderMenuItem> master_volume_item(new SliderMenuItem(menu.get(), "Master Volume",   
                                                                         config.get_int("master-volume"), 0, 100, 10));
-    master_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_master_volume, this, _1));
+    master_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_master_volume, _1));
     menu->add_item(master_volume_item.release());
   }
 
   {
     std::auto_ptr<SliderMenuItem> music_volume_item(new SliderMenuItem(menu.get(), "Music Volume",   
                                                                        config.get_int("music-volume"), 0, 100, 10));
-    music_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_music_volume, this, _1));
+    music_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_music_volume, _1));
     menu->add_item(music_volume_item.release());
   }
 
   {
     std::auto_ptr<SliderMenuItem> sfx_volume_item(new SliderMenuItem(menu.get(), "SFX Volume",  
                                                                      config.get_int("sfx-volume"), 0, 100, 10));
-    sfx_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_sfx_volume, this, _1));
+    sfx_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_sfx_volume, _1));
     menu->add_item(sfx_volume_item.release());
   }
 
   {
     std::auto_ptr<SliderMenuItem> voice_volume_item(new SliderMenuItem(menu.get(), "Voice Volume", 
                                                                        config.get_int("voice-volume"), 0, 100, 10));
-    voice_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_voice_volume, this, _1));
+    voice_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_voice_volume, _1));
     menu->add_item(voice_volume_item.release());
   }
 
@@ -104,13 +98,13 @@
   std::auto_ptr<EnumMenuItem> show_fps_item(new EnumMenuItem(menu.get(), "Show FPS", config.get_bool("show-fps")));
   show_fps_item->add_pair(0, "off");
   show_fps_item->add_pair(1, "on");
-  show_fps_item->sig_change().connect(boost::bind(&MenuManager::menu_show_fps, this, _1));
+  show_fps_item->sig_change().connect(boost::bind(&MenuManager::menu_show_fps, _1));
   menu->add_item(show_fps_item.release());
 
   std::auto_ptr<EnumMenuItem> fullscreen_item(new EnumMenuItem(menu.get(), "Fullscreen", config.get_bool("fullscreen")));
   fullscreen_item->add_pair(0, "off");
   fullscreen_item->add_pair(1, "on");
-  fullscreen_item->sig_change().connect(boost::bind(&MenuManager::menu_fullscreen, this, _1));
+  fullscreen_item->sig_change().connect(boost::bind(&MenuManager::menu_fullscreen, _1));
   menu->add_item(fullscreen_item.release());
 
   std::auto_ptr<EnumMenuItem> difficulty_item(new EnumMenuItem(menu.get(), "Difficulty", 1));
@@ -120,14 +114,14 @@
   menu->add_item(difficulty_item.release());
 
   std::auto_ptr<SliderMenuItem> gamma_item(new SliderMenuItem(menu.get(), "Gamma",  100, 10, 200, 10));
-  gamma_item->sig_change().connect(boost::bind(&MenuManager::menu_gamma, this, _1));
+  gamma_item->sig_change().connect(boost::bind(&MenuManager::menu_gamma, _1));
   menu->add_item(gamma_item.release());
 
 #ifdef HAVE_CWIID
   if (wiimote)
     {
       std::auto_ptr<ButtonMenuItem> wiimote_button(new ButtonMenuItem(menu.get(), "Try to Connect Wiimote"));
-      wiimote_button->sig_click().connect(boost::bind(&MenuManager::menu_wiimote, this));
+      wiimote_button->sig_click().connect(boost::bind(&MenuManager::menu_wiimote));
       menu->add_item(wiimote_button.release());
     }
 #endif
@@ -168,46 +162,46 @@
   menu->set_font(Fonts::vera20);
 
   std::auto_ptr<ButtonMenuItem> select_scenario_button(new ButtonMenuItem(menu.get(), "Select Scenario"));
-  select_scenario_button->sig_click().connect(boost::bind(&MenuManager::display_scenario_menu, this));
+  select_scenario_button->sig_click().connect(boost::bind(&MenuManager::display_scenario_menu));
   menu->add_item(select_scenario_button.release());
 
   std::auto_ptr<ButtonMenuItem> navigation_test_button(new ButtonMenuItem(menu.get(), "Navigation Test"));
-  navigation_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_navigation_test, this));
+  navigation_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_navigation_test));
   menu->add_item(navigation_test_button.release());
 
   if (0)
     {
       std::auto_ptr<ButtonMenuItem> armature_test_button(new ButtonMenuItem(menu.get(), "Armature Test"));
-      armature_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_armature_test, this));
+      armature_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_armature_test));
       menu->add_item(armature_test_button.release());
     }
 
   std::auto_ptr<ButtonMenuItem> geometry_test_button(new ButtonMenuItem(menu.get(), "Geometry Test"));
-  geometry_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_geometry_test, this));
+  geometry_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_geometry_test));
   menu->add_item(geometry_test_button.release());
 
   std::auto_ptr<ButtonMenuItem> model_viewer_button(new ButtonMenuItem(menu.get(), "Model Viewer"));
-  model_viewer_button->sig_click().connect(boost::bind(&MenuManager::display_models_menu, this));
+  model_viewer_button->sig_click().connect(boost::bind(&MenuManager::display_models_menu));
   menu->add_item(model_viewer_button.release());
 
   std::auto_ptr<ButtonMenuItem> particles_button(new ButtonMenuItem(menu.get(), "Particle Systems"));
-  particles_button->sig_click().connect(boost::bind(&MenuManager::display_particle_menu, this));
+  particles_button->sig_click().connect(boost::bind(&MenuManager::display_particle_menu));
   menu->add_item(particles_button.release());
 
   std::auto_ptr<ButtonMenuItem> options_button(new ButtonMenuItem(menu.get(), "Options"));
-  options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu, this));
+  options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu));
   menu->add_item(options_button.release());
 
   std::auto_ptr<ButtonMenuItem> credits_button(new ButtonMenuItem(menu.get(), "Credits"));
-  credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits, this));
+  credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits));
   menu->add_item(credits_button.release());
 
   std::auto_ptr<ButtonMenuItem> help_button(new ButtonMenuItem(menu.get(), "Help"));
-  help_button->sig_click().connect(boost::bind(&MenuManager::display_help, this));
+  help_button->sig_click().connect(boost::bind(&MenuManager::display_help));
   menu->add_item(help_button.release());
 
   std::auto_ptr<ButtonMenuItem> quit_button(new ButtonMenuItem(menu.get(), "Quit"));
-  quit_button->sig_click().connect(boost::bind(&MenuManager::menu_quit, this));
+  quit_button->sig_click().connect(boost::bind(&MenuManager::menu_quit));
   menu->add_item(quit_button.release());
   // End: Option Menu
 
@@ -222,41 +216,40 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-200, 300-170), Sizef(400, 300)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(400, 300), 
                                                          "Pause Menu",
                                                          manager->get_root()));
 
   // Begin Menu
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(Rectf(Vector2f(400-150, 200), Sizef(300, 500)), true,
-                                                      group.get()));
+  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
   menu->set_font(Fonts::vera20);
 
   std::auto_ptr<ButtonMenuItem> continue_button(new ButtonMenuItem(menu.get(), "Resume Game"));
-  continue_button->sig_click().connect(boost::bind(&MenuManager::menu_continue, this));
+  continue_button->sig_click().connect(boost::bind(&MenuManager::menu_continue));
   menu->add_item(continue_button.release());
 
   //  std::auto_ptr<ButtonMenuItem> select_scenario_button(new ButtonMenuItem(menu.get(), "Select Scenario"));
-  //  select_scenario_button->sig_click().connect(boost::bind(&MenuManager::display_scenario_menu, this));
+  //  select_scenario_button->sig_click().connect(boost::bind(&MenuManager::display_scenario_menu));
   // menu->add_item(select_scenario_button);
 
   std::auto_ptr<ButtonMenuItem> options_button(new ButtonMenuItem(menu.get(), "Options"));
-  options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu, this));
+  options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu));
   menu->add_item(options_button.release());
 
   std::auto_ptr<ButtonMenuItem> debug_button(new ButtonMenuItem(menu.get(), "Debug"));
-  debug_button->sig_click().connect(boost::bind(&MenuManager::display_debug_menu, this));
+  debug_button->sig_click().connect(boost::bind(&MenuManager::display_debug_menu));
   menu->add_item(debug_button.release());
 
   std::auto_ptr<ButtonMenuItem> credits_button(new ButtonMenuItem(menu.get(), "Credits"));
-  credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits, this));
+  credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits));
   menu->add_item(credits_button.release());
 
   std::auto_ptr<ButtonMenuItem> help_button(new ButtonMenuItem(menu.get(), "Help"));
-  help_button->sig_click().connect(boost::bind(&MenuManager::display_help, this));
+  help_button->sig_click().connect(boost::bind(&MenuManager::display_help));
   menu->add_item(help_button.release());
 
   std::auto_ptr<ButtonMenuItem> quit_button(new ButtonMenuItem(menu.get(), "Return to Title Screen"));
-  quit_button->sig_click().connect(boost::bind(&MenuManager::menu_exit, this));
+  quit_button->sig_click().connect(boost::bind(&MenuManager::menu_exit));
   menu->add_item(quit_button.release());
   // End: Option Menu
 
@@ -271,7 +264,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-275, 100), Sizef(550, 376)),  // 378
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(550, 376),
                                                          "Select Model",
                                                          manager->get_root()));
 
@@ -295,7 +288,7 @@
   for(std::vector<std::string>::iterator i = models.begin(); i != models.end(); ++i)
     {
       std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), *i));
-      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_show_model, this, std::string(*i)));
+      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_show_model, std::string(*i)));
       menu->add_item(scenario_button.release());
     }
 
@@ -310,7 +303,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-200, 300-170), Sizef(400, 340)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(400, 340), 
                                                          "Particle Systems",
                                                          manager->get_root()));
 
@@ -323,7 +316,7 @@
   for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {
       std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), *i));
-      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_show_particle_system, this, *i));
+      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_show_particle_system, *i));
       menu->add_item(scenario_button.release());
     }
 
@@ -338,7 +331,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-250, 300-170), Sizef(500, 340)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 340),
                                                          "Select Scenario",
                                                          manager->get_root()));
 
@@ -357,7 +350,7 @@
   for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {
       std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), *i));
-      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_start_scenario, this, *i));
+      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_start_scenario, *i));
       menu->add_item(scenario_button.release());
     }
 
@@ -372,7 +365,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-250, 300-170), Sizef(500, 340)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 340),
                                                          "Debug",
                                                          manager->get_root()));
 
@@ -383,15 +376,15 @@
   Color amb = Sector::current()->get_ambient_light();
 
   std::auto_ptr<SliderMenuItem> r_ambient_light_item(new SliderMenuItem(menu.get(), "Ambient Light (Red)", int(amb.r*100), 0, 100, 10));
-  r_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, this, _1, 0));
+  r_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, _1, 0));
   menu->add_item(r_ambient_light_item.release());
 
   std::auto_ptr<SliderMenuItem> g_ambient_light_item(new SliderMenuItem(menu.get(), "Ambient Light (Green)", int(amb.g*100), 0, 100, 10));
-  g_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, this, _1, 1));
+  g_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, _1, 1));
   menu->add_item(g_ambient_light_item.release());
 
   std::auto_ptr<SliderMenuItem> b_ambient_light_item(new SliderMenuItem(menu.get(), "Ambient Light (Blue)", int(amb.b*100), 0, 100, 10));
-  b_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, this, _1, 2));
+  b_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, _1, 2));
   menu->add_item(b_ambient_light_item.release());
 
   group->pack(menu.release());
@@ -405,7 +398,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-250, 300-200), Sizef(500, 400)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 400),
                                                          "Help",
                                                          manager->get_root()));
 
@@ -445,7 +438,7 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-250, 300-200), Sizef(500, 400)), 
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 400), 
                                                          "Credits",
                                                          manager->get_root()));
 
@@ -480,6 +473,14 @@
   manager->get_root()->add_child(group.release());
   screen_manager.push_overlay(manager.release());
 }
+
+Rectf
+MenuManager::create_centered_rect(float w, float h)
+{
+  return Rectf(Vector2f((Display::get_width()  - w)/2.0f,
+                        (Display::get_height() - h)/2.0f),
+               Sizef(w, h));
+}
   
 // Callbacks
 

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-03-09 15:52:20 UTC (rev 2601)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-03-09 16:39:36 UTC (rev 2602)
@@ -20,55 +20,49 @@
 #define HEADER_WINDSTILLE_APP_MENU_MANAGER_HPP
 
 #include <vector>
-
+#include "math/rect.hpp"
+
 /** */
-class MenuManager
+class MenuManager 
 {
+public:
+  static void display_option_menu();
+  static void display_debug_menu();
+  static void display_main_menu();
+  static void display_pause_menu();
+  static void display_scenario_menu();
+  static void display_particle_menu();
+  static void display_models_menu();
+  static void display_credits();
+  static void display_help();
+  
 private:
+  static Rectf create_centered_rect(float w, float h);
 
-public:
-  MenuManager();
+  // Callbacks
+  static void menu_start_game();
+  static void menu_quit();
+  static void menu_exit();
+  static void menu_show_fps(int i);
+  static void menu_fullscreen(int i);
+  static void menu_continue();
 
-  void display_option_menu();
-  void display_debug_menu();
-  void display_main_menu();
-  void display_pause_menu();
-  void display_scenario_menu();
-  void display_particle_menu();
-  void display_models_menu();
-  void display_credits();
-  void display_help();
+  static void menu_master_volume(int i);
+  static void menu_voice_volume(int i);
+  static void menu_sfx_volume(int i);
+  static void menu_music_volume(int i);
 
-  // Callbacks
-  void menu_start_game();
-  void menu_quit();
-  void menu_exit();
-  void menu_show_fps(int i);
-  void menu_fullscreen(int i);
-  void menu_continue();
-
-  void menu_master_volume(int i);
-  void menu_voice_volume(int i);
-  void menu_sfx_volume(int i);
-  void menu_music_volume(int i);
-
-  void menu_ambient_light(int i, int component);
-  void menu_start_scenario(std::string scenario);
-  void menu_show_model(std::string scenario);
-  void menu_show_geometry_test();
-  void menu_show_armature_test();
-  void menu_show_navigation_test();
-  void menu_show_particle_system(std::string file);
-  void menu_gamma(int i);
-  void menu_wiimote();
-
-private:
-  MenuManager (const MenuManager&);
-  MenuManager& operator= (const MenuManager&);
+  static void menu_ambient_light(int i, int component);
+  static void menu_start_scenario(std::string scenario);
+  static void menu_show_model(std::string scenario);
+  static void menu_show_geometry_test();
+  static void menu_show_armature_test();
+  static void menu_show_navigation_test();
+  static void menu_show_particle_system(std::string file);
+  static void menu_gamma(int i);
+  static void menu_wiimote();
 };
-
-extern MenuManager menu_manager;
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-09 15:52:20 UTC (rev 2601)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-09 16:39:36 UTC (rev 2602)
@@ -281,7 +281,7 @@
   else if (controller.button_was_pressed(ESCAPE_BUTTON) ||
            controller.button_was_pressed(PAUSE_BUTTON))
     {
-      menu_manager.display_pause_menu();
+      MenuManager::display_pause_menu();
     }
 }
 
@@ -364,7 +364,7 @@
               break;
 
             case SDLK_F2:
-              menu_manager.display_debug_menu();
+              MenuManager::display_debug_menu();
               break;
         
             default:

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-03-09 15:52:20 UTC (rev 2601)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-03-09 16:39:36 UTC (rev 2602)
@@ -32,7 +32,7 @@
 void
 TitleScreen::on_startup()
 {
-  menu_manager.display_main_menu();
+  MenuManager::display_main_menu();
 }
 
 void



From grumbel at mail.berlios.de  Mon Mar  9 18:06:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 18:06:12 +0100
Subject: [Windstille-commit] r2603 - trunk/windstille/src/app
Message-ID: <200903091706.n29H6Cnh015910@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 18:06:12 +0100 (Mon, 09 Mar 2009)
New Revision: 2603

Modified:
   trunk/windstille/src/app/menu_manager.cpp
Log:
Center Copyright at the bottom of the screen 

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 16:39:36 UTC (rev 2602)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 17:06:12 UTC (rev 2603)
@@ -137,7 +137,10 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> text_group(new GroupComponent(Rectf(10, 500, 800-10, 600-10),
+  std::auto_ptr<GroupComponent> text_group(new GroupComponent(Rectf(Vector2f(Display::get_width()/2 - 390,
+                                                                             Display::get_height() - 100),
+                                                                    Size(800 - 20, 
+                                                                         100 - 10)),
                                                               "",
                                                               manager->get_root()));
 
@@ -152,7 +155,8 @@
   text_group->pack(text.release());
   manager->get_root()->add_child(text_group.release());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(Rectf(Vector2f(400-20, 200), Sizef(250, 254)),
+  std::auto_ptr<GroupComponent> group(new GroupComponent(//create_centered_rect(250, 254),
+                                                         Rectf(Vector2f(400-20, 200), Sizef(250, 254)),
                                                          "",
                                                          manager->get_root()));
 



From grumbel at mail.berlios.de  Mon Mar  9 18:14:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 18:14:01 +0100
Subject: [Windstille-commit] r2604 - trunk/windstille/src/screen
Message-ID: <200903091714.n29HE1CQ016736@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 18:14:01 +0100 (Mon, 09 Mar 2009)
New Revision: 2604

Modified:
   trunk/windstille/src/screen/title_screen.cpp
Log:
Fill the background in the main menu

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-03-09 17:06:12 UTC (rev 2603)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-03-09 17:14:01 UTC (rev 2604)
@@ -17,12 +17,15 @@
 */
 
 #include <iostream>
+#include "display/display.hpp"
 #include "app/menu_manager.hpp"
 #include "title_screen.hpp"
 
 TitleScreen::TitleScreen()
 {
   background = Sprite("images/titlescreen.sprite");
+  background.set_scale(std::max(float(Display::get_width())  / background.get_width(),
+                                float(Display::get_height()) / background.get_height()));
 }
 
 TitleScreen::~TitleScreen()
@@ -38,7 +41,8 @@
 void
 TitleScreen::draw()
 {
-  background.draw(Vector2f(0, 0));
+  background.draw(Vector2f(Display::get_width() /2  - (background.get_width()  * background.get_scale()/2),
+                           Display::get_height()/2  - (background.get_height() * background.get_scale()/2)));
 }
 
 void



From grumbel at mail.berlios.de  Mon Mar  9 19:47:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 19:47:29 +0100
Subject: [Windstille-commit] r2605 - in trunk/windstille/src: app objects
Message-ID: <200903091847.n29IlTXf008272@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 19:47:29 +0100 (Mon, 09 Mar 2009)
New Revision: 2605

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/nightvision.cpp
Log:
Properly scale things on non-800x600 screens

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 17:14:01 UTC (rev 2604)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 18:47:29 UTC (rev 2605)
@@ -155,8 +155,8 @@
   text_group->pack(text.release());
   manager->get_root()->add_child(text_group.release());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(//create_centered_rect(250, 254),
-                                                         Rectf(Vector2f(400-20, 200), Sizef(250, 254)),
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_positioned_rect(Vector2f(400-20, 200), 
+                                                                                Sizef(250, 254)),
                                                          "",
                                                          manager->get_root()));
 
@@ -479,6 +479,26 @@
 }
 
 Rectf
+MenuManager::create_positioned_rect(const Vector2f& pos_, const Sizef& size)
+{
+  Vector2f pos = pos_;
+
+  // move pos to center of rect
+  pos.x += size.width  / 2.0f;
+  pos.y += size.height / 2.0f;
+
+  // scale the coordinates
+  pos.x = pos.x * Display::get_width() / 800;
+  pos.y = pos.y * Display::get_height() / 600;
+
+  // move pos back to top/left
+  pos.x -= size.width  / 2.0f;
+  pos.y -= size.height / 2.0f;
+
+  return Rectf(pos, size);
+}
+
+Rectf
 MenuManager::create_centered_rect(float w, float h)
 {
   return Rectf(Vector2f((Display::get_width()  - w)/2.0f,

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-03-09 17:14:01 UTC (rev 2604)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-03-09 18:47:29 UTC (rev 2605)
@@ -22,7 +22,12 @@
 #include <vector>
 #include "math/rect.hpp"
 
-/** */
+/** 
+ *  The MenuManager creates and displays the metagame menus (main,
+ *  pause, options, ...) in Windstille. All the input redirection and
+ *  displaying is handled in ScreenManager, so MenuManager itself is
+ *  completly stateless.
+ */
 class MenuManager 
 {
 public:
@@ -37,8 +42,14 @@
   static void display_help();
   
 private:
+  /** Position a menu with the given size \a w, \a h at the center of
+      the screen */
   static Rectf create_centered_rect(float w, float h);
 
+  /** Position a menu at the given positions, while thread the
+      positions relative to the 800x600 ration */
+  static Rectf create_positioned_rect(const Vector2f& pos, const Sizef& size);
+
   // Callbacks
   static void menu_start_game();
   static void menu_quit();

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-03-09 17:14:01 UTC (rev 2604)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-03-09 18:47:29 UTC (rev 2605)
@@ -18,6 +18,7 @@
 
 #include <iostream>
 #include "display/vertex_array_drawing_request.hpp"
+#include "display/display.hpp"
 #include "background_gradient.hpp"
 
 BackgroundGradient::BackgroundGradient(FileReader& props)
@@ -66,7 +67,7 @@
   Color topcolor(0.0f, 0.0f, 0.5f);
   Color bottomcolor(0.5f, 0.5f, 1.0f);
 
-  Rect rect(0, 0, 800, 600);
+  Rect rect(0, 0, Display::get_width(), Display::get_height());
   VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0, 0), z_pos, 
                                                                    sc.color().get_modelview());
 

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-03-09 17:14:01 UTC (rev 2604)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-03-09 18:47:29 UTC (rev 2605)
@@ -20,6 +20,7 @@
 #include "math/random.hpp"
 #include "math/matrix.hpp"
 #include "display/vertex_array_drawing_request.hpp"
+#include "display/display.hpp"
 #include "display/texture_manager.hpp"
 #include "nightvision.hpp"
 
@@ -68,13 +69,13 @@
       array->vertex(0, 0);
 
       array->texcoord(u + w, v);
-      array->vertex(800, 0);
+      array->vertex(Display::get_width(), 0);
 
       array->texcoord(u + w, v + h);
-      array->vertex(800, 600);
+      array->vertex(Display::get_width(), Display::get_height());
 
       array->texcoord(u, v + h);
-      array->vertex(0, 600);
+      array->vertex(0, Display::get_height());
       
       if (0) // second noise level
         {
@@ -86,13 +87,13 @@
           array->vertex(0, 0, 1.0f);
 
           array->texcoord(u + size, v);
-          array->vertex(800, 0, 1.0f);
+          array->vertex(Display::get_width(), 0, 1.0f);
 
           array->texcoord(u + size, v + size);
-          array->vertex(800, 600, 1.0f);
+          array->vertex(Display::get_width(), Display::get_height(), 1.0f);
 
           array->texcoord(u, v + size);
-          array->vertex(0, 600, 1.0f);
+          array->vertex(0, Display::get_height(), 1.0f);
         }
 
       sc.light().draw(array);
@@ -108,9 +109,16 @@
 
       sc.highlight().push_modelview();
       sc.highlight().set_modelview(Matrix::identity());
+
       nightvision.set_alpha(0.5f);
       nightvision.set_blend_func(GL_SRC_ALPHA, GL_ONE);
-      sc.highlight().draw(nightvision, Vector2f(0, 0), 10000);
+      nightvision.set_scale(std::max(float(Display::get_width())  / nightvision.get_width(),
+                                     float(Display::get_height()) / nightvision.get_height()));
+
+      sc.highlight().draw(nightvision, 
+                          Vector2f(Display::get_width() /2  - (nightvision.get_width()  * nightvision.get_scale()/2),
+                                   Display::get_height()/2  - (nightvision.get_height() * nightvision.get_scale()/2)),
+                          10000);
       sc.highlight().pop_modelview();
     }
 }



From grumbel at mail.berlios.de  Mon Mar  9 20:53:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 20:53:35 +0100
Subject: [Windstille-commit] r2606 - trunk/windstille/src/scripting
Message-ID: <200903091953.n29JrZMq020670@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 20:53:34 +0100 (Mon, 09 Mar 2009)
New Revision: 2606

Modified:
   trunk/windstille/src/scripting/game_objects.cpp
   trunk/windstille/src/scripting/game_objects.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Added is_active()

Modified: trunk/windstille/src/scripting/game_objects.cpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.cpp	2009-03-09 18:47:29 UTC (rev 2605)
+++ trunk/windstille/src/scripting/game_objects.cpp	2009-03-09 19:53:34 UTC (rev 2606)
@@ -41,6 +41,12 @@
   object.lock()->set_active(active);
 }
 
+bool
+GameObject::is_active() const
+{
+  return object.lock()->is_active();
+}
+
 void
 GameObject::set_parent(const std::string& name)
 {

Modified: trunk/windstille/src/scripting/game_objects.hpp
===================================================================
--- trunk/windstille/src/scripting/game_objects.hpp	2009-03-09 18:47:29 UTC (rev 2605)
+++ trunk/windstille/src/scripting/game_objects.hpp	2009-03-09 19:53:34 UTC (rev 2606)
@@ -47,6 +47,7 @@
   const std::string& get_name() const;
   void remove();
   void set_active(bool active);
+  bool is_active() const;
   void set_parent(const std::string& name);
 };
 

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-09 18:47:29 UTC (rev 2605)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-09 19:53:34 UTC (rev 2606)
@@ -103,6 +103,31 @@
 
 }
 
+static SQInteger GameObject_is_active_wrapper(HSQUIRRELVM vm)
+{
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0)) || !data) {
+    sq_throwerror(vm, _SC("'is_active' called without instance"));
+    return SQ_ERROR;
+  }
+  Scripting::GameObject* _this = reinterpret_cast<Scripting::GameObject*> (data);
+
+  try {
+    bool return_value = _this->is_active();
+
+    sq_pushbool(vm, return_value);
+    return 1;
+
+  } catch(std::exception& e) {
+    sq_throwerror(vm, e.what());
+    return SQ_ERROR;
+  } catch(...) {
+    sq_throwerror(vm, _SC("Unexpected exception while executing function 'is_active'"));
+    return SQ_ERROR;
+  }
+
+}
+
 static SQInteger GameObject_set_parent_wrapper(HSQUIRRELVM vm)
 {
   SQUserPointer data;
@@ -2063,6 +2088,13 @@
     throw SquirrelError(v, "Couldn't register function 'set_active'");
   }
 
+  sq_pushstring(v, "is_active", -1);
+  sq_newclosure(v, &GameObject_is_active_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'is_active'");
+  }
+
   sq_pushstring(v, "set_parent", -1);
   sq_newclosure(v, &GameObject_set_parent_wrapper, 0);
   sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");



From grumbel at mail.berlios.de  Mon Mar  9 20:53:57 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 20:53:57 +0100
Subject: [Windstille-commit] r2607 - in trunk/windstille: .
	data/sectors/apartment src/hud src/objects
Message-ID: <200903091953.n29Jrv1v020749@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 20:53:55 +0100 (Mon, 09 Mar 2009)
New Revision: 2607

Added:
   trunk/windstille/data/sectors/apartment/yagor2.nut
Modified:
   trunk/windstille/TODO
   trunk/windstille/data/sectors/apartment/apartment.wst
   trunk/windstille/data/sectors/apartment/barrobot.nut
   trunk/windstille/src/hud/conversation.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/scriptable_object.hpp
Log:
Added nightvision toggle to apartment.wst

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/TODO	2009-03-09 19:53:55 UTC (rev 2607)
@@ -1,6 +1,32 @@
 Windstille ToDo
 ===============
 
+* create a simplified syntax for creating menus (could allow resize menu to the font):
+
+  Menu menu("Debug");
+
+  menu.add_slider("Ambient Light (Red)", int(amb.r*100), 0, 100, 10,
+                  boost::bind(&MenuManager::menu_ambient_light, _1, 0))
+
+  menu.add_enum("Aspect Ratio", 0, boost::bind(&MenuManager::change_aspect_ratio, _1))
+    .add_pair(0, "16:9");
+    .add_pair(1, "4:3");
+
+  screen_manager.push_overlay(menu.create())
+
+* using a screen size != 800x600 breaks menu (missplaced), background object
+
+  loads to ugly fonts, should render
+  the fonts so that we get 1:1 pixel mapping, can be just calculate
+  their needed size and blit with floats, or do we need magic to blit
+  with ints to avoid rounding errors?
+
+* player can launch PDA or inventory when in a dialog, this will break the script
+
+* add zoom via xbox360 analog trigger buttons
+
+* add pause menu to all screens that don't already have it
+
 * some functions in scripts require '::' before them so that they can
   be found, not quite clear why or exactly when this happens
 
@@ -11,7 +37,9 @@
 
 * join Player and Character somewhat or derive one from the other
 
-* implement aspect-ration switching at runtime (menu entry is there, just no code)
+* implement aspect-ration switching at runtime (menu entry is there,
+  just no code) and change default screen ration to that seen in the
+  artwork pictures
 
 * objects are currently all exported to squirrel, while we should
   probally use id-tags and accessor functions instead:
@@ -32,7 +60,8 @@
   seperation between HUD (energybar, speech, etc.) and Overlays
   (inventory, PDA, etc.) might be good
 
-* do not save options given on the command line by default
+* do not save command line options given on the command line by
+  default or add a --vanilla option or so
 
 * make lightmap resolution independent
 
@@ -52,7 +81,7 @@
 
  for i in */*.hpp; do echo $i; NAME=$(echo $i | sed "s/[\/\.]/_/g;s/^/HEADER_WINDSTILLE_/" | tr [a-z] [A-Z]);  sed  -i "s/^\(#[a-z]*\) *HEADER_WINDSTILLE_.*/\1 $NAME/" $i; done
 
-* Update Random number generator: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
+* update random number generator: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
 
 * document scripting tricks somewhere:
   spawn_object("shockwave", {pos=[0,0]})
@@ -68,7 +97,7 @@
 
 * mouse support for menu
 
-* Add more markup to TextArea: 
+* Add more markup to TextArea: (not really needed with LucasArts-like dialog)
     <font color="#ffbbcc"></font>: Use arbitary color
     <b></b>: make text properly bold
     <i></i>: make text properly italic 
@@ -106,13 +135,14 @@
 Windstille Bugs
 ===============
 
-- Jane's hat is white, caused by one mesh using two textures, could be
-  fixed in either the exporter or in the model itself
+* Jane's hat is white, caused by one mesh using two textures, could be
+  fixed in either the exporter or in the model itself (FIXME: still an
+  issue? Seems to be fixed)
   
-- quickly tapping forward-back-hold down forward makes your character play
+* quickly tapping forward-back-hold down forward makes your character play
   the walking animation without actually moving anywhere
    
-- Pressing left (or right), jump and and run at the same time throws an
+* Pressing left (or right), jump and and run at the same time throws an
   exception that causes the game to exit:
 
   std::exception: No marker with name 'RightFoot' defined in action 'Stand'
@@ -122,12 +152,6 @@
 
 http://orange.blender.org/blog/the-amazing-incredible-monkey-brush#more-49
 
-- add bison checks
-
-- collision detection
-- virtual tiles in the editor
-- animated tiles
-
 Input Handling:
 ---------------
 - add option to configure dead zone
@@ -139,30 +163,14 @@
 - split music, voice and sound fx into seperate context or allow to
   change their volume by other means
 
-Screen Handling:
-----------------
-- using a screen size != 800x600 breaks the lighting
-- using a screen size != 800x600 loads to ugly fonts, should render
-  the fonts so that we get 1:1 pixel mapping, can be just calculate
-  their needed size and blit with floats, or do we need magic to blit
-  with ints to avoid rounding errors?
-
 Misc:
 -----
 
-- polish/test scripting interface
 - create doll class
-- figure out how to do background animation (coroutines, multiple VM, etc.)
-- provide decent default keyboard config
-- polish dialog system
 - a mission that is playable
 - polish PDA
 - bone animation
-- add "save options" button
-- reduce tilesize of the large sets, figure out a easy way to resize
-  them without messing up alpha
 - print and println behave different on console
-- calling functions as character scripts instead of files doesn't work
 - change the game to a righthand coordinate system
 - rewrite Config class and properly seperate config from command line
   and config done via option menu, i.e. command line settings

Modified: trunk/windstille/data/sectors/apartment/apartment.wst
===================================================================
--- trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-09 19:53:55 UTC (rev 2607)
@@ -159,7 +159,6 @@
       (z-pos -100)
       (sprite "images/objects/painting1.sprite")
       (active true)
-      (script "")
       (use-verb "Look")
     )
     (scriptable-object
@@ -168,7 +167,6 @@
       (z-pos -100)
       (sprite "images/objects/painting1.sprite")
       (active true)
-      (script "")
       (use-verb "Look")
     )
     (scriptable-object
@@ -177,7 +175,6 @@
       (z-pos -100)
       (sprite "images/objects/painting2.sprite")
       (active true)
-      (script "")
       (use-verb "Look")
     )
     (scriptable-object
@@ -186,7 +183,6 @@
       (z-pos -100)
       (sprite "images/objects/painting3.sprite")
       (active true)
-      (script "")
       (use-verb "Look")
     )
     (character
@@ -203,20 +199,20 @@
     )
 
     (character
-      (name "barrobot")
+      (name "yagor2")
       (pos 370 256)
       (z-pos -450)
       (sprite3d "models/characters/yagor/yagor.wsprite")
     )
 
     (scriptable-object
-      (name "Barrobot2")
+      (name "barrobot")
       (pos 470 177)
       (z-pos -100)
       (sprite  "models/objects/barrobot/barrobotsprite.sprite")
       (active true)
-      ;;(script "barrobot.nut")
       (use-verb "Look")
+      (script "barrobot.nut")
     )
     
     (scriptable-object      

Modified: trunk/windstille/data/sectors/apartment/barrobot.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-09 19:53:55 UTC (rev 2607)
@@ -1,136 +1,23 @@
 function init()
 {
-  println("barrobot.nut: init()");
-
-  barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-  jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite"); 
+  println("Hello World: init");
 }
 
 function run()
 {
-  println("barrobot.nut: run()");
+  conversation_add2("Night Vision [On]", "A little dark here, can I get night vision.");
+  conversation_add2("Night Vision [Off]", "This green look gets annoying.");
 
-  jane.say("So, what do you have to offer?");
-  barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani");
-  jane.say("Anything else?");
-  barrobot.say("Wiskey, Milk all that stuff, what do you want?");
-
-  conversation_add2("Milk",   "Haven't drank any milk in a while.");
-  conversation_add2("Wiskey", "I don't think my stomach can take it.");
-  conversation_add2("Beer",   "The old classic, always good, never great.");
-
   switch (conversation_get())
     {
       case 0:
-        jane.say("Give me a Milk.");
-        barrobot.say("Milk drinker? Here you go.");
+        nightvision_enabled(true)
         break;
 
       case 1:
-        jane.say("Give me a Wiskey, the best you have"); 
-        barrobot.say("Here is the wiskey.");
+        nightvision_enabled(false)
         break;
-
-      case 2:
-        jane.say("Give me a beer, that finest of Nugani");
-        barrobot.say("Here is the beer.");
-        break;
     }
-
-  return;
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_add("Choice 5");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_add("Choice 5");
-  conversation_add("Choice 6");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_add("Choice 5");
-  conversation_add("Choice 6");
-  conversation_add("Choice 7");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_add("Choice 5");
-  conversation_add("Choice 6");
-  conversation_add("Choice 7");
-  conversation_add("Choice 8");
-  conversation_get();
-
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_add("Choice 5");
-  conversation_add("Choice 6");
-  conversation_add("Choice 7");
-  conversation_add("Choice 8");
-  conversation_add("Choice 9");
-  conversation_get();
-  
-  conversation_add("Choice 1");
-  conversation_add("Choice 2");
-  conversation_add("Choice 3");
-  conversation_add("Choice 4");
-  conversation_add("Choice 5");
-  conversation_add("Choice 6");
-  conversation_add("Choice 7");
-  conversation_add("Choice 8");
-  conversation_add("Choice 9");
-  conversation_add("Choice 10");
-  conversation_get();
-  
-  // cutscene_begin();
-
-  // barrobot <- Dialog(TOP, "Bar Robot", "images/portraits/barrobot.sprite");
-  // jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
-
-  // barrobot.show("Hello how are you?")
-
-  // // yagor.show("How are you?<sleep>\nEverything fine today?")
-  // // jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
-  // // yagor.show("Sure, here take....")
-  // // fadeout()
-  // // wait_for_fade()
-  // // fadein();
-  // // yagor.show("Here it is.")
-  // // jane.show("Ok, thanks, time to explore this apartment a bit.")
-
-  // // objects.flashlight.set_active(true);
-  // // objects.flashlight.set_parent("player");
-
-  // cutscene_end();
 }
 
 /* EOF */

Added: trunk/windstille/data/sectors/apartment/yagor2.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/yagor2.nut	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/data/sectors/apartment/yagor2.nut	2009-03-09 19:53:55 UTC (rev 2607)
@@ -0,0 +1,141 @@
+function init()
+{
+  println("barrobot.nut: init()");
+
+  barrobot <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
+  jane     <- Dialog(TOP, "Jane", "images/portraits/jane.sprite"); 
+}
+
+function run()
+{
+  println("barrobot.nut: run()");
+
+  jane.say("So, what do you have to offer?");
+  barrobot.say("Beer, plenty of bear, the finest brew in all of Nugani");
+  jane.say("Anything else?");
+  barrobot.say("Wiskey, Milk all that stuff, what do you want?");
+
+  conversation_add2("Milk",    "Haven't drank any milk in a while.");
+  conversation_add2("Wiskey",  "I don't think my stomach can take it.");
+  conversation_add2("Beer",    "The old classic, always good, never great.");
+  conversation_add2("Nothing", "Not thirsty.");
+
+  switch (conversation_get())
+    {
+      case 0:
+        jane.say("Give me a Milk.");
+        barrobot.say("Milk drinker? Here you go.");
+        break;
+
+      case 1:
+        jane.say("Give me a Wiskey, the best you have"); 
+        barrobot.say("Here is the wiskey.");
+        break;
+
+      case 2:
+        jane.say("Give me a beer, that finest of Nugani");
+        barrobot.say("Here is the beer.");
+        break;
+
+      case 3:
+        return;
+        break;
+    }
+
+  return;
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_add("Choice 8");
+  conversation_get();
+
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_add("Choice 8");
+  conversation_add("Choice 9");
+  conversation_get();
+  
+  conversation_add("Choice 1");
+  conversation_add("Choice 2");
+  conversation_add("Choice 3");
+  conversation_add("Choice 4");
+  conversation_add("Choice 5");
+  conversation_add("Choice 6");
+  conversation_add("Choice 7");
+  conversation_add("Choice 8");
+  conversation_add("Choice 9");
+  conversation_add("Choice 10");
+  conversation_get();
+  
+  // cutscene_begin();
+
+  // barrobot <- Dialog(TOP, "Bar Robot", "images/portraits/barrobot.sprite");
+  // jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
+
+  // barrobot.show("Hello how are you?")
+
+  // // yagor.show("How are you?<sleep>\nEverything fine today?")
+  // // jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?")
+  // // yagor.show("Sure, here take....")
+  // // fadeout()
+  // // wait_for_fade()
+  // // fadein();
+  // // yagor.show("Here it is.")
+  // // jane.show("Ok, thanks, time to explore this apartment a bit.")
+
+  // // objects.flashlight.set_active(true);
+  // // objects.flashlight.set_parent("player");
+
+  // cutscene_end();
+}
+
+/* EOF */

Modified: trunk/windstille/src/hud/conversation.cpp
===================================================================
--- trunk/windstille/src/hud/conversation.cpp	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/src/hud/conversation.cpp	2009-03-09 19:53:55 UTC (rev 2607)
@@ -82,8 +82,8 @@
 
       Vector2f textpos = pos + Vector2f(0, 16.0f);
       // FIXME: Doesn't handle multi line text
-      Sizef size(Fonts::vera20->get_width(choices[i].topic) + 50,
-                 Fonts::vera20->get_height() + 30);
+      Sizef size(Fonts::vera20->get_width(choices[i].topic) + 40,
+                 Fonts::vera20->get_height() + 25);
       Rectf  rect(textpos + distance * offset - Vector2f(size.width/2, size.height - 15), size);
 
       if (i == selection)
@@ -92,23 +92,24 @@
           
           Display::fill_arc(pos, 42.0f, start, end, Color(1.0f, 1.0f, 1.0f, 0.5f), 24);
           Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f));
+
           Fonts::vera20->draw_center(Vector2f(textpos.x + distance * offset.x,
                                             textpos.y + distance * offset.y), 
-                                     choices[i].topic, Color(1.0f, 1.0f, 1.0f));
+                                     choices[i].topic, Color(1.0f, 1.0f, 0.0f));
 
-          Fonts::vera20->draw_center(Vector2f(400, 600 - 64),
+          Fonts::vera20->draw_center(Vector2f(400, Display::get_height() - 32),
                                      choices[i].text, Color(1.0f, 1.0f, 1.0f));
+          Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 0.0f));
         }
       else
         {
           Display::fill_rounded_rect(rect, 5.0f, Color(0.25f, 0.25f, 0.25f, 0.75f));
           Fonts::vera20->draw_center(Vector2f(textpos.x + distance * offset.x,
                                             textpos.y + distance * offset.y),
-                                     choices[i].topic, Color(0.5f, 0.5f, 0.5f));
+                                     choices[i].topic, Color(0.8f, 0.8f, 0.8f));
+          Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f));
         }
 
-      Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f));
-
       //Display::draw_arc(pos + 5.0f * offset, 32.0f,
       //                  start, end,
       //                  Color(1.0f, 1.0f, 1.0f, 1.0f), 24);

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-03-09 19:53:55 UTC (rev 2607)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "app/console.hpp"
+#include "engine/script_manager.hpp"
 #include "engine/sector.hpp"
 #include "app/globals.hpp"
 #include "scriptable_object.hpp"
@@ -36,7 +38,7 @@
   props.get("highlight", highlightname);
   props.get("light",   lightname);
   props.get("pos", pos);
-  props.get("script", use_script);
+  props.get("script", script_file);
   props.get("use-verb", use_verb);
   props.get("active", active);
   props.get("flash-speed", flash_speed); // FIXME: bad name, should be something more generic
@@ -112,9 +114,18 @@
 void
 ScriptableObject::use()
 {
-  if (!use_script.empty())
+  std::cout << "Use: " << script_file << std::endl;
+
+  if (!script_file.empty())
     {
-      Sector::current()->call_script_function(use_script);
+      try 
+        {
+          ScriptManager::current()->run_script_file(Sector::current()->get_directory() + name + ".nut");
+        }
+      catch (std::exception& e) 
+        {
+          console << e.what() << std::endl;
+        }
     }
 }
 

Modified: trunk/windstille/src/objects/scriptable_object.hpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.hpp	2009-03-09 19:53:34 UTC (rev 2606)
+++ trunk/windstille/src/objects/scriptable_object.hpp	2009-03-09 19:53:55 UTC (rev 2607)
@@ -41,7 +41,7 @@
   float z_pos;
   
   //useable stuff
-  std::string use_script;
+  std::string script_file;
   
   //movement stuff
   float target_x;



From grumbel at mail.berlios.de  Mon Mar  9 23:04:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:04:41 +0100
Subject: [Windstille-commit] r2608 - trunk/windstille/src/screen
Message-ID: <200903092204.n29M4fSf012312@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:04:40 +0100 (Mon, 09 Mar 2009)
New Revision: 2608

Modified:
   trunk/windstille/src/screen/geometry_test.cpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/sprite3dview.cpp
Log:
Added pause menu everywhere

Modified: trunk/windstille/src/screen/geometry_test.cpp
===================================================================
--- trunk/windstille/src/screen/geometry_test.cpp	2009-03-09 19:53:55 UTC (rev 2607)
+++ trunk/windstille/src/screen/geometry_test.cpp	2009-03-09 22:04:40 UTC (rev 2608)
@@ -25,6 +25,7 @@
 #include "app/controller_def.hpp"
 #include "input/controller.hpp"
 #include "screen_manager.hpp"
+#include "app/menu_manager.hpp"
 #include "display/display.hpp"
 
 GeometryTest::GeometryTest()
@@ -76,7 +77,7 @@
   if (controller.button_was_pressed(ESCAPE_BUTTON) ||
       controller.button_was_pressed(PAUSE_BUTTON))
     {
-      screen_manager.pop_screen();
+      MenuManager::display_pause_menu();
     }
 
   cursor.x += controller.get_axis_state(X_AXIS) * 500.0f * delta;

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-03-09 19:53:55 UTC (rev 2607)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-03-09 22:04:40 UTC (rev 2608)
@@ -24,6 +24,7 @@
 #include "input/controller.hpp"
 #include "display/display.hpp"
 #include "screen_manager.hpp"
+#include "app/menu_manager.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "navigation/node.hpp"
 #include "navigation/segment_position.hpp"
@@ -104,7 +105,7 @@
   if (controller.button_was_pressed(ESCAPE_BUTTON) ||
       controller.button_was_pressed(PAUSE_BUTTON))
     {
-      screen_manager.pop_screen();
+      MenuManager::display_pause_menu();
     }
 
   cursor += Vector2f(controller.get_axis_state(X_AXIS) * 500.0f * delta,

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-03-09 19:53:55 UTC (rev 2607)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-03-09 22:04:40 UTC (rev 2608)
@@ -16,11 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include "util/sexpr_file_reader.hpp"
+#include "app/menu_manager.hpp"
+#include "gui/gui_manager.hpp"
 #include "input/controller.hpp"
+#include "screen/particle_viewer.hpp"
 #include "screen_manager.hpp"
-#include "gui/gui_manager.hpp"
-#include "screen/particle_viewer.hpp"
+#include "util/sexpr_file_reader.hpp"
 
 // Components
 #include "gui/button.hpp"
@@ -182,10 +183,10 @@
           show_gui = true;
           manager->get_root()->get_focus()->set_active(true);
         }
-      else if (controller.button_was_pressed(CANCEL_BUTTON) ||
+      else if (controller.button_was_pressed(PAUSE_BUTTON) ||
                controller.button_was_pressed(ESCAPE_BUTTON))
         {
-          screen_manager.pop_screen();
+          MenuManager::display_pause_menu();
         }
     }
   else

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-03-09 19:53:55 UTC (rev 2607)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-03-09 22:04:40 UTC (rev 2608)
@@ -22,6 +22,7 @@
 #include "app/console.hpp"
 #include "font/ttf_font.hpp"
 #include "font/fonts.hpp"
+#include "app/menu_manager.hpp"
 #include "screen_manager.hpp"
 #include "sprite3dview.hpp"
 
@@ -149,8 +150,10 @@
     }
 
   if (controller.button_was_pressed(ESCAPE_BUTTON) ||
-      controller.button_was_pressed(CANCEL_BUTTON))
-    screen_manager.pop_screen();
+      controller.button_was_pressed(PAUSE_BUTTON))
+    {
+      MenuManager::display_pause_menu();
+    }
 }
 
 void



From grumbel at mail.berlios.de  Mon Mar  9 23:05:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:05:10 +0100
Subject: [Windstille-commit] r2609 - trunk/windstille/src/gui
Message-ID: <200903092205.n29M5Ak9012423@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:05:10 +0100 (Mon, 09 Mar 2009)
New Revision: 2609

Modified:
   trunk/windstille/src/gui/gui_manager.hpp
Log:
Include fix

Modified: trunk/windstille/src/gui/gui_manager.hpp
===================================================================
--- trunk/windstille/src/gui/gui_manager.hpp	2009-03-09 22:04:40 UTC (rev 2608)
+++ trunk/windstille/src/gui/gui_manager.hpp	2009-03-09 22:05:10 UTC (rev 2609)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 #define HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 
+#include <memory>
 #include "screen/screen.hpp"
 
 namespace gui {



From grumbel at mail.berlios.de  Mon Mar  9 23:05:30 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:05:30 +0100
Subject: [Windstille-commit] r2610 - trunk/windstille/src/gui
Message-ID: <200903092205.n29M5UTV012515@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:05:30 +0100 (Mon, 09 Mar 2009)
New Revision: 2610

Modified:
   trunk/windstille/src/gui/menu_item.cpp
   trunk/windstille/src/gui/menu_item.hpp
Log:
Return reference on add_pair() to allow chaining of calls

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-03-09 22:05:10 UTC (rev 2609)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-03-09 22:05:30 UTC (rev 2610)
@@ -81,13 +81,15 @@
 {
 }
 
-void
+EnumMenuItem&
 EnumMenuItem::add_pair(int value, const std::string& label)
 {
   EnumValue enum_value;
   enum_value.value = value;
   enum_value.label = label;
   labels.push_back(enum_value);
+
+  return *this;
 }
 
 void

Modified: trunk/windstille/src/gui/menu_item.hpp
===================================================================
--- trunk/windstille/src/gui/menu_item.hpp	2009-03-09 22:05:10 UTC (rev 2609)
+++ trunk/windstille/src/gui/menu_item.hpp	2009-03-09 22:05:30 UTC (rev 2610)
@@ -63,7 +63,7 @@
   EnumMenuItem(MenuComponent* parent_, 
                const std::string& label_, int index_ = 0);
   
-  void add_pair(int value, const std::string& label);
+  EnumMenuItem& add_pair(int value, const std::string& label);
 
   void incr();
   void decr();



From grumbel at mail.berlios.de  Mon Mar  9 23:06:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:06:02 +0100
Subject: [Windstille-commit] r2611 - in trunk/windstille/src: app gui
Message-ID: <200903092206.n29M62WG012617@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:06:01 +0100 (Mon, 09 Mar 2009)
New Revision: 2611

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/gui/menu_component.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 22:05:30 UTC (rev 2610)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 22:06:01 UTC (rev 2611)
@@ -228,7 +228,7 @@
   std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
   menu->set_font(Fonts::vera20);
 
-  std::auto_ptr<ButtonMenuItem> continue_button(new ButtonMenuItem(menu.get(), "Resume Game"));
+  std::auto_ptr<ButtonMenuItem> continue_button(new ButtonMenuItem(menu.get(), "Resume"));
   continue_button->sig_click().connect(boost::bind(&MenuManager::menu_continue));
   menu->add_item(continue_button.release());
 
@@ -240,9 +240,12 @@
   options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu));
   menu->add_item(options_button.release());
 
-  std::auto_ptr<ButtonMenuItem> debug_button(new ButtonMenuItem(menu.get(), "Debug"));
-  debug_button->sig_click().connect(boost::bind(&MenuManager::display_debug_menu));
-  menu->add_item(debug_button.release());
+  if (Sector::current())
+    {
+      std::auto_ptr<ButtonMenuItem> debug_button(new ButtonMenuItem(menu.get(), "Debug"));
+      debug_button->sig_click().connect(boost::bind(&MenuManager::display_debug_menu));
+      menu->add_item(debug_button.release());
+    }
 
   std::auto_ptr<ButtonMenuItem> credits_button(new ButtonMenuItem(menu.get(), "Credits"));
   credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits));

Modified: trunk/windstille/src/gui/menu_component.hpp
===================================================================
--- trunk/windstille/src/gui/menu_component.hpp	2009-03-09 22:05:30 UTC (rev 2610)
+++ trunk/windstille/src/gui/menu_component.hpp	2009-03-09 22:06:01 UTC (rev 2611)
@@ -52,6 +52,7 @@
   float item_height() const;
 
   void adjust_scroll_offset();
+
 public:
   MenuComponent(const Rectf& rect, bool allow_cancel_, Component* parent);
   virtual ~MenuComponent();



From grumbel at mail.berlios.de  Mon Mar  9 23:06:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:06:26 +0100
Subject: [Windstille-commit] r2612 - in trunk/windstille/src: . gui
Message-ID: <200903092206.n29M6QdC012727@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:06:25 +0100 (Mon, 09 Mar 2009)
New Revision: 2612

Added:
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu.hpp
Modified:
   trunk/windstille/src/SConscript
Log:
Added Menu class to ease menu creation

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-09 22:06:01 UTC (rev 2611)
+++ trunk/windstille/src/SConscript	2009-03-09 22:06:25 UTC (rev 2612)
@@ -87,6 +87,7 @@
 'gui/gui_manager.cpp',
 'gui/label.cpp',
 'gui/list_view.cpp',
+'gui/menu.cpp',
 'gui/menu_component.cpp',
 'gui/menu_item.cpp',
 'gui/root_component.cpp',

Added: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-09 22:06:01 UTC (rev 2611)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-09 22:06:25 UTC (rev 2612)
@@ -0,0 +1,80 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "component.hpp"
+#include "root_component.hpp"
+#include "gui_manager.hpp"
+#include "menu_item.hpp"
+#include "menu_component.hpp"
+#include "group_component.hpp"
+#include "screen/screen_manager.hpp"
+#include "menu.hpp"
+
+namespace gui {
+
+Menu::Menu(const std::string& name, const Rectf& rect)
+{
+  manager.reset(new GUIManager());
+  group.reset(new GroupComponent(rect, name, manager->get_root()));
+  menu.reset(new MenuComponent(group->get_child_rect(), true, group.get()));
+}
+
+Menu::~Menu()
+{
+}
+
+EnumMenuItem&
+Menu::add_enum(const std::string& name, int index,
+               boost::function<void (int)>& callback)
+{
+  std::auto_ptr<EnumMenuItem> enum_item(new EnumMenuItem(menu.get(), name));
+  EnumMenuItem& obj = *enum_item;
+  menu->add_item(enum_item.release());
+  return obj;
+}
+
+void
+Menu::add_slider(const std::string& name, 
+                 int value, int min_value, int max_value, int step,
+                 boost::function<void (int)>& callback)
+{
+  std::auto_ptr<SliderMenuItem> slider(new SliderMenuItem(menu.get(), name, value, min_value, max_value, step));
+  slider->sig_change().connect(callback);
+  menu->add_item(slider.release());
+}
+
+void
+Menu::add_button(const std::string& name,
+                 boost::function<void ()>& callback)
+{
+  std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), name));
+  scenario_button->sig_click().connect(callback);
+  menu->add_item(scenario_button.release());
+}
+
+void
+Menu::push_screen()
+{
+  group->pack(menu.release());
+  manager->get_root()->add_child(group.release());
+  screen_manager.push_overlay(manager.release());
+}
+
+} // namespace gui
+
+/* EOF */


Property changes on: trunk/windstille/src/gui/menu.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-03-09 22:06:01 UTC (rev 2611)
+++ trunk/windstille/src/gui/menu.hpp	2009-03-09 22:06:25 UTC (rev 2612)
@@ -0,0 +1,68 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_MENU_HPP
+#define HEADER_WINDSTILLE_GUI_MENU_HPP
+
+#include <memory>
+
+namespace gui {
+
+class GUIManager;
+class Component;
+class GroupComponent;
+class MenuComponent;
+class EnumMenuItem;
+
+/** 
+ *  Little helper class around MenuItem and MenuComponent to reduce code clutter.
+ */
+class Menu
+{
+private:
+  std::auto_ptr<GUIManager>     manager;
+  std::auto_ptr<GroupComponent> group;
+  std::auto_ptr<MenuComponent>  menu;
+
+public:
+  Menu(const std::string& name, const Rectf& rect);
+  ~Menu();
+
+  EnumMenuItem& add_enum(const std::string& name,  
+                         int index,
+                         boost::function<void (int)>& callback);
+
+  void  add_slider(const std::string& name, 
+                   int value, int mix_value, int max_value, int step,
+                   boost::function<void (int)>& callback);
+
+  void  add_button(const std::string& name,
+                   boost::function<void ()>& callback);
+
+  void push_screen();
+
+private:
+  Menu (const Menu&);
+  Menu& operator= (const Menu&);
+};
+
+} // namespace gui
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/gui/menu.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Mon Mar  9 23:14:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:14:17 +0100
Subject: [Windstille-commit] r2613 - trunk/windstille/src/gui
Message-ID: <200903092214.n29MEHar014285@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:14:17 +0100 (Mon, 09 Mar 2009)
New Revision: 2613

Modified:
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu.hpp
Log:
Fixed lack of const issue

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-09 22:06:25 UTC (rev 2612)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-09 22:14:17 UTC (rev 2613)
@@ -24,6 +24,7 @@
 #include "group_component.hpp"
 #include "screen/screen_manager.hpp"
 #include "menu.hpp"
+#include "font/fonts.hpp"
 
 namespace gui {
 
@@ -32,6 +33,8 @@
   manager.reset(new GUIManager());
   group.reset(new GroupComponent(rect, name, manager->get_root()));
   menu.reset(new MenuComponent(group->get_child_rect(), true, group.get()));
+
+  menu->set_font(Fonts::vera20);
 }
 
 Menu::~Menu()
@@ -40,7 +43,7 @@
 
 EnumMenuItem&
 Menu::add_enum(const std::string& name, int index,
-               boost::function<void (int)>& callback)
+               const boost::function<void (int)>& callback)
 {
   std::auto_ptr<EnumMenuItem> enum_item(new EnumMenuItem(menu.get(), name));
   EnumMenuItem& obj = *enum_item;
@@ -51,7 +54,7 @@
 void
 Menu::add_slider(const std::string& name, 
                  int value, int min_value, int max_value, int step,
-                 boost::function<void (int)>& callback)
+                 const boost::function<void (int)>& callback)
 {
   std::auto_ptr<SliderMenuItem> slider(new SliderMenuItem(menu.get(), name, value, min_value, max_value, step));
   slider->sig_change().connect(callback);
@@ -60,7 +63,7 @@
 
 void
 Menu::add_button(const std::string& name,
-                 boost::function<void ()>& callback)
+                 const boost::function<void ()>& callback)
 {
   std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), name));
   scenario_button->sig_click().connect(callback);

Modified: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-03-09 22:06:25 UTC (rev 2612)
+++ trunk/windstille/src/gui/menu.hpp	2009-03-09 22:14:17 UTC (rev 2613)
@@ -45,14 +45,14 @@
 
   EnumMenuItem& add_enum(const std::string& name,  
                          int index,
-                         boost::function<void (int)>& callback);
+                         const boost::function<void (int)>& callback);
 
   void  add_slider(const std::string& name, 
                    int value, int mix_value, int max_value, int step,
-                   boost::function<void (int)>& callback);
+                   const boost::function<void (int)>& callback);
 
   void  add_button(const std::string& name,
-                   boost::function<void ()>& callback);
+                   const boost::function<void ()>& callback);
 
   void push_screen();
 



From grumbel at mail.berlios.de  Mon Mar  9 23:14:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:14:35 +0100
Subject: [Windstille-commit] r2614 - trunk/windstille/src/app
Message-ID: <200903092214.n29MEZKj014410@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:14:35 +0100 (Mon, 09 Mar 2009)
New Revision: 2614

Modified:
   trunk/windstille/src/app/menu_manager.cpp
Log:
Converted Pause menu to new simplified syntax

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 22:14:17 UTC (rev 2613)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 22:14:35 UTC (rev 2614)
@@ -41,6 +41,7 @@
 #ifdef HAVE_CWIID
 #include "input/wiimote.hpp"
 #endif
+#include "gui/menu.hpp"
 #include "app/windstille.hpp"
 #include "menu_manager.hpp"
 
@@ -217,52 +218,20 @@
 void
 MenuManager::display_pause_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
+  gui::Menu menu("Pause Menu", create_centered_rect(400, 300));
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(400, 300), 
-                                                         "Pause Menu",
-                                                         manager->get_root()));
-
-  // Begin Menu
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
-  menu->set_font(Fonts::vera20);
-
-  std::auto_ptr<ButtonMenuItem> continue_button(new ButtonMenuItem(menu.get(), "Resume"));
-  continue_button->sig_click().connect(boost::bind(&MenuManager::menu_continue));
-  menu->add_item(continue_button.release());
-
-  //  std::auto_ptr<ButtonMenuItem> select_scenario_button(new ButtonMenuItem(menu.get(), "Select Scenario"));
-  //  select_scenario_button->sig_click().connect(boost::bind(&MenuManager::display_scenario_menu));
-  // menu->add_item(select_scenario_button);
-
-  std::auto_ptr<ButtonMenuItem> options_button(new ButtonMenuItem(menu.get(), "Options"));
-  options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu));
-  menu->add_item(options_button.release());
-
+  menu.add_button("Resume",  boost::bind(&MenuManager::menu_continue));
   if (Sector::current())
     {
-      std::auto_ptr<ButtonMenuItem> debug_button(new ButtonMenuItem(menu.get(), "Debug"));
-      debug_button->sig_click().connect(boost::bind(&MenuManager::display_debug_menu));
-      menu->add_item(debug_button.release());
+      menu.add_button("Debug", boost::bind(&MenuManager::display_debug_menu));
+      //menu.add_button("Select Scenario", boost::bind(&MenuManager::display_scenario_menu));
     }
-
-  std::auto_ptr<ButtonMenuItem> credits_button(new ButtonMenuItem(menu.get(), "Credits"));
-  credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits));
-  menu->add_item(credits_button.release());
-
-  std::auto_ptr<ButtonMenuItem> help_button(new ButtonMenuItem(menu.get(), "Help"));
-  help_button->sig_click().connect(boost::bind(&MenuManager::display_help));
-  menu->add_item(help_button.release());
-
-  std::auto_ptr<ButtonMenuItem> quit_button(new ButtonMenuItem(menu.get(), "Return to Title Screen"));
-  quit_button->sig_click().connect(boost::bind(&MenuManager::menu_exit));
-  menu->add_item(quit_button.release());
-  // End: Option Menu
-
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release()); 
+  menu.add_button("Options", boost::bind(&MenuManager::display_option_menu));
+  menu.add_button("Credits", boost::bind(&MenuManager::display_credits));
+  menu.add_button("Help", boost::bind(&MenuManager::display_help));
+  menu.add_button("Return to Title Screen", boost::bind(&MenuManager::menu_exit));
+  
+  menu.push_screen();
 }
 
 void



From grumbel at mail.berlios.de  Mon Mar  9 23:33:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 9 Mar 2009 23:33:19 +0100
Subject: [Windstille-commit] r2615 - in trunk/windstille/src: app gui
Message-ID: <200903092233.n29MXJiF017828@sheep.berlios.de>

Author: grumbel
Date: 2009-03-09 23:33:19 +0100 (Mon, 09 Mar 2009)
New Revision: 2615

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu.hpp
Log:
Converted some more menus to simplified syntax

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-09 22:14:35 UTC (rev 2614)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-09 22:33:19 UTC (rev 2615)
@@ -48,88 +48,50 @@
 void
 MenuManager::display_option_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
+  gui::Menu menu("Options", create_centered_rect(500, 340));
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 340),
-                                                         "Options",
-                                                         manager->get_root()));
+  menu.add_slider("Master Volume",  config.get_int("master-volume"), 0, 100, 10,
+                 boost::bind(&MenuManager::menu_master_volume, _1));
 
-  // Begin Menu
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
+  menu.add_slider("Music Volume", config.get_int("music-volume"), 0, 100, 10,
+                  boost::bind(&MenuManager::menu_music_volume, _1));
 
-  menu->set_font(Fonts::vera20);
+  menu.add_slider("SFX Volume", config.get_int("sfx-volume"), 0, 100, 10, 
+                  boost::bind(&MenuManager::menu_sfx_volume, _1));
 
-  {
-    std::auto_ptr<SliderMenuItem> master_volume_item(new SliderMenuItem(menu.get(), "Master Volume",   
-                                                                        config.get_int("master-volume"), 0, 100, 10));
-    master_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_master_volume, _1));
-    menu->add_item(master_volume_item.release());
-  }
-
-  {
-    std::auto_ptr<SliderMenuItem> music_volume_item(new SliderMenuItem(menu.get(), "Music Volume",   
-                                                                       config.get_int("music-volume"), 0, 100, 10));
-    music_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_music_volume, _1));
-    menu->add_item(music_volume_item.release());
-  }
-
-  {
-    std::auto_ptr<SliderMenuItem> sfx_volume_item(new SliderMenuItem(menu.get(), "SFX Volume",  
-                                                                     config.get_int("sfx-volume"), 0, 100, 10));
-    sfx_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_sfx_volume, _1));
-    menu->add_item(sfx_volume_item.release());
-  }
-
-  {
-    std::auto_ptr<SliderMenuItem> voice_volume_item(new SliderMenuItem(menu.get(), "Voice Volume", 
-                                                                       config.get_int("voice-volume"), 0, 100, 10));
-    voice_volume_item->sig_change().connect(boost::bind(&MenuManager::menu_voice_volume, _1));
-    menu->add_item(voice_volume_item.release());
-  }
-
-  std::auto_ptr<EnumMenuItem> aspect_item(new EnumMenuItem(menu.get(), "Aspect Ratio", 0));
-  aspect_item->add_pair(0, "4:3");
-  aspect_item->add_pair(1, "5:4");
-  aspect_item->add_pair(2, "16:9");
-  aspect_item->add_pair(3, "16:10");
-  aspect_item->add_pair(4, "letterbox");
-  menu->add_item(aspect_item.release());
+  menu.add_slider("Voice Volume", config.get_int("voice-volume"), 0, 100, 10, 
+                  boost::bind(&MenuManager::menu_voice_volume, _1));
   
-  std::auto_ptr<EnumMenuItem> show_fps_item(new EnumMenuItem(menu.get(), "Show FPS", config.get_bool("show-fps")));
-  show_fps_item->add_pair(0, "off");
-  show_fps_item->add_pair(1, "on");
-  show_fps_item->sig_change().connect(boost::bind(&MenuManager::menu_show_fps, _1));
-  menu->add_item(show_fps_item.release());
+  menu.add_enum("Aspect Ratio", 0)
+    .add_pair(0, "4:3")
+    .add_pair(1, "5:4")
+    .add_pair(2, "16:9")
+    .add_pair(3, "16:10")
+    .add_pair(4, "letterbox");
+  
+  menu.add_enum("Show FPS", config.get_bool("show-fps"), 
+                boost::bind(&MenuManager::menu_show_fps, _1))
+    .add_pair(0, "off")
+    .add_pair(1, "on");
+  
+  menu.add_enum("Fullscreen", config.get_bool("fullscreen"),
+                boost::bind(&MenuManager::menu_fullscreen, _1))
+    .add_pair(0, "off")
+    .add_pair(1, "on");
+  
+  menu.add_enum("Difficulty", 1)
+    .add_pair(0, "easy")
+    .add_pair(1, "medium")
+    .add_pair(2, "hard");
 
-  std::auto_ptr<EnumMenuItem> fullscreen_item(new EnumMenuItem(menu.get(), "Fullscreen", config.get_bool("fullscreen")));
-  fullscreen_item->add_pair(0, "off");
-  fullscreen_item->add_pair(1, "on");
-  fullscreen_item->sig_change().connect(boost::bind(&MenuManager::menu_fullscreen, _1));
-  menu->add_item(fullscreen_item.release());
+  menu.add_slider("Gamma",  100, 10, 200, 10, boost::bind(&MenuManager::menu_gamma, _1));
 
-  std::auto_ptr<EnumMenuItem> difficulty_item(new EnumMenuItem(menu.get(), "Difficulty", 1));
-  difficulty_item->add_pair(0, "easy");
-  difficulty_item->add_pair(1, "medium");
-  difficulty_item->add_pair(2, "hard");
-  menu->add_item(difficulty_item.release());
-
-  std::auto_ptr<SliderMenuItem> gamma_item(new SliderMenuItem(menu.get(), "Gamma",  100, 10, 200, 10));
-  gamma_item->sig_change().connect(boost::bind(&MenuManager::menu_gamma, _1));
-  menu->add_item(gamma_item.release());
-
 #ifdef HAVE_CWIID
   if (wiimote)
-    {
-      std::auto_ptr<ButtonMenuItem> wiimote_button(new ButtonMenuItem(menu.get(), "Try to Connect Wiimote"));
-      wiimote_button->sig_click().connect(boost::bind(&MenuManager::menu_wiimote));
-      menu->add_item(wiimote_button.release());
-    }
+    menu.add_button("Try to Connect Wiimote", boost::bind(&MenuManager::menu_wiimote));
 #endif
 
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  menu.show();
 }
 
 void
@@ -231,22 +193,14 @@
   menu.add_button("Help", boost::bind(&MenuManager::display_help));
   menu.add_button("Return to Title Screen", boost::bind(&MenuManager::menu_exit));
   
-  menu.push_screen();
+  menu.show();
 }
 
 void
 MenuManager::display_models_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
-
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(550, 376),
-                                                         "Select Model",
-                                                         manager->get_root()));
-
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
-  menu->set_font(Fonts::vera20);
-
+  gui::Menu menu("Select Model", create_centered_rect(550, 376));
+  
   std::vector<std::string> models;
   models.push_back("models/characters/bob/bob.wsprite");
   models.push_back("models/characters/jane/jane.wsprite");
@@ -263,57 +217,33 @@
 
   for(std::vector<std::string>::iterator i = models.begin(); i != models.end(); ++i)
     {
-      std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), *i));
-      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_show_model, std::string(*i)));
-      menu->add_item(scenario_button.release());
+      menu.add_button(*i, boost::bind(&MenuManager::menu_show_model, std::string(*i)));
     }
-
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());  
+  
+  menu.show();
 }
 
 void
 MenuManager::display_particle_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
+  gui::Menu menu("Particle Systems", create_centered_rect(400, 340));
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(400, 340), 
-                                                         "Particle Systems",
-                                                         manager->get_root()));
-
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
-  menu->set_font(Fonts::vera20);
-
   std::vector<std::string> scenarios;
   scenarios.push_back("particlesystems/fire.particles");
   
   for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {
-      std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), *i));
-      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_show_particle_system, *i));
-      menu->add_item(scenario_button.release());
+      menu.add_button(*i, boost::bind(&MenuManager::menu_show_particle_system, *i));
     }
 
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  menu.show();
 }
 
 void
 MenuManager::display_scenario_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
+  gui::Menu menu("Select Scenario", create_centered_rect(500, 340));
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 340),
-                                                         "Select Scenario",
-                                                         manager->get_root()));
-
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
-  menu->set_font(Fonts::vera20);
-
   std::vector<std::string> scenarios;
   scenarios.push_back("sectors/apartment/apartment.wst");
   scenarios.push_back("sectors/bluestone/bluestone.wst");
@@ -325,47 +255,29 @@
   
   for(std::vector<std::string>::iterator i = scenarios.begin(); i != scenarios.end(); ++i)
     {
-      std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), *i));
-      scenario_button->sig_click().connect(boost::bind(&MenuManager::menu_start_scenario, *i));
-      menu->add_item(scenario_button.release());
+      menu.add_button(*i, boost::bind(&MenuManager::menu_start_scenario, *i));
     }
 
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  menu.show();
 }
 
 void
 MenuManager::display_debug_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
+  gui::Menu menu("Debug", create_centered_rect(500, 340));
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 340),
-                                                         "Debug",
-                                                         manager->get_root()));
-
-  // Begin Menu
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), true, group.get()));
-  menu->set_font(Fonts::vera20);
-
   Color amb = Sector::current()->get_ambient_light();
 
-  std::auto_ptr<SliderMenuItem> r_ambient_light_item(new SliderMenuItem(menu.get(), "Ambient Light (Red)", int(amb.r*100), 0, 100, 10));
-  r_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, _1, 0));
-  menu->add_item(r_ambient_light_item.release());
+  menu.add_slider("Ambient Light (Red)", int(amb.r*100), 0, 100, 10, 
+                  boost::bind(&MenuManager::menu_ambient_light, _1, 0));
 
-  std::auto_ptr<SliderMenuItem> g_ambient_light_item(new SliderMenuItem(menu.get(), "Ambient Light (Green)", int(amb.g*100), 0, 100, 10));
-  g_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, _1, 1));
-  menu->add_item(g_ambient_light_item.release());
+  menu.add_slider("Ambient Light (Green)", int(amb.g*100), 0, 100, 10, 
+                  boost::bind(&MenuManager::menu_ambient_light, _1, 1));
 
-  std::auto_ptr<SliderMenuItem> b_ambient_light_item(new SliderMenuItem(menu.get(), "Ambient Light (Blue)", int(amb.b*100), 0, 100, 10));
-  b_ambient_light_item->sig_change().connect(boost::bind(&MenuManager::menu_ambient_light, _1, 2));
-  menu->add_item(b_ambient_light_item.release());
+  menu.add_slider("Ambient Light (Blue)", int(amb.b*100), 0, 100, 10, 
+                  boost::bind(&MenuManager::menu_ambient_light, _1, 2));
 
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release()); 
+  menu.show();
 }
 
 void

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-09 22:14:35 UTC (rev 2614)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-09 22:33:19 UTC (rev 2615)
@@ -46,6 +46,10 @@
                const boost::function<void (int)>& callback)
 {
   std::auto_ptr<EnumMenuItem> enum_item(new EnumMenuItem(menu.get(), name));
+
+  if (callback)
+    enum_item->sig_change().connect(callback);
+
   EnumMenuItem& obj = *enum_item;
   menu->add_item(enum_item.release());
   return obj;
@@ -57,7 +61,8 @@
                  const boost::function<void (int)>& callback)
 {
   std::auto_ptr<SliderMenuItem> slider(new SliderMenuItem(menu.get(), name, value, min_value, max_value, step));
-  slider->sig_change().connect(callback);
+  if (callback)
+    slider->sig_change().connect(callback);
   menu->add_item(slider.release());
 }
 
@@ -66,12 +71,13 @@
                  const boost::function<void ()>& callback)
 {
   std::auto_ptr<ButtonMenuItem> scenario_button(new ButtonMenuItem(menu.get(), name));
-  scenario_button->sig_click().connect(callback);
+  if (callback)
+    scenario_button->sig_click().connect(callback);
   menu->add_item(scenario_button.release());
 }
 
 void
-Menu::push_screen()
+Menu::show()
 {
   group->pack(menu.release());
   manager->get_root()->add_child(group.release());

Modified: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-03-09 22:14:35 UTC (rev 2614)
+++ trunk/windstille/src/gui/menu.hpp	2009-03-09 22:33:19 UTC (rev 2615)
@@ -45,16 +45,16 @@
 
   EnumMenuItem& add_enum(const std::string& name,  
                          int index,
-                         const boost::function<void (int)>& callback);
+                         const boost::function<void (int)>& callback = boost::function<void (int)>());
 
   void  add_slider(const std::string& name, 
                    int value, int mix_value, int max_value, int step,
-                   const boost::function<void (int)>& callback);
+                   const boost::function<void (int)>& callback = boost::function<void (int)>());
 
   void  add_button(const std::string& name,
-                   const boost::function<void ()>& callback);
+                   const boost::function<void ()>& callback = boost::function<void ()>());
 
-  void push_screen();
+  void show();
 
 private:
   Menu (const Menu&);



From grumbel at mail.berlios.de  Tue Mar 10 00:14:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 00:14:04 +0100
Subject: [Windstille-commit] r2616 - trunk/windstille
Message-ID: <200903092314.n29NE4UP020987@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 00:14:04 +0100 (Tue, 10 Mar 2009)
New Revision: 2616

Modified:
   trunk/windstille/TODO
Log:
TODO update

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-09 22:33:19 UTC (rev 2615)
+++ trunk/windstille/TODO	2009-03-09 23:14:04 UTC (rev 2616)
@@ -1,19 +1,8 @@
 Windstille ToDo
 ===============
 
-* create a simplified syntax for creating menus (could allow resize menu to the font):
+* create a UTF32 string class, maybe based on basic_string<>, for use in console
 
-  Menu menu("Debug");
-
-  menu.add_slider("Ambient Light (Red)", int(amb.r*100), 0, 100, 10,
-                  boost::bind(&MenuManager::menu_ambient_light, _1, 0))
-
-  menu.add_enum("Aspect Ratio", 0, boost::bind(&MenuManager::change_aspect_ratio, _1))
-    .add_pair(0, "16:9");
-    .add_pair(1, "4:3");
-
-  screen_manager.push_overlay(menu.create())
-
 * using a screen size != 800x600 breaks menu (missplaced), background object
 
   loads to ugly fonts, should render



From grumbel at mail.berlios.de  Tue Mar 10 02:24:05 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 02:24:05 +0100
Subject: [Windstille-commit] r2617 - trunk/windstille/src/screen
Message-ID: <200903100124.n2A1O54m006573@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 02:24:03 +0100 (Tue, 10 Mar 2009)
New Revision: 2617

Modified:
   trunk/windstille/src/screen/particle_viewer.cpp
Log:
Fill whole screen on non 800x600 resolutions

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-03-09 23:14:04 UTC (rev 2616)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-03-10 01:24:03 UTC (rev 2617)
@@ -22,6 +22,7 @@
 #include "screen/particle_viewer.hpp"
 #include "screen_manager.hpp"
 #include "util/sexpr_file_reader.hpp"
+#include "display/display.hpp"
 
 // Components
 #include "gui/button.hpp"
@@ -146,10 +147,18 @@
 {
   sc.reset_modelview();
 
-  for(int y = -background.get_width(); y < 600 + background.get_height(); y += background.get_height())
-    for(int x = -background.get_width(); x < 800 + background.get_width(); x += background.get_width())
-      sc.color().draw(background, Vector2f(x + int(pos.x) % background.get_width(),
-                                         y + int(pos.y) % background.get_height()), -900);
+  for(int y = -background.get_width(); 
+      y < Display::get_height() + background.get_height(); 
+      y += background.get_height())
+    {
+      for(int x = -background.get_width(); 
+          x < Display::get_width() + background.get_width(); 
+          x += background.get_width())
+        {
+          sc.color().draw(background, Vector2f(x + int(pos.x) % background.get_width(),
+                                               y + int(pos.y) % background.get_height()), -900);
+        }
+    }
 
   sc.translate(400 + pos.x, 600 + pos.y);
   sc.light().fill_screen(Color(0.4, 0.4, 0.4));



From grumbel at mail.berlios.de  Tue Mar 10 02:25:36 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 02:25:36 +0100
Subject: [Windstille-commit] r2618 - in trunk/windstille/src: app gui
Message-ID: <200903100125.n2A1PaGb006732@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 02:25:35 +0100 (Tue, 10 Mar 2009)
New Revision: 2618

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu.hpp
Log:
Converted main menu to new syntax

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-10 01:24:03 UTC (rev 2617)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-10 01:25:35 UTC (rev 2618)
@@ -51,7 +51,7 @@
   gui::Menu menu("Options", create_centered_rect(500, 340));
 
   menu.add_slider("Master Volume",  config.get_int("master-volume"), 0, 100, 10,
-                 boost::bind(&MenuManager::menu_master_volume, _1));
+                  boost::bind(&MenuManager::menu_master_volume, _1));
 
   menu.add_slider("Music Volume", config.get_int("music-volume"), 0, 100, 10,
                   boost::bind(&MenuManager::menu_music_volume, _1));
@@ -97,84 +97,41 @@
 void
 MenuManager::display_main_menu()
 {
-  using namespace gui;
-  std::auto_ptr<GUIManager> manager(new GUIManager());
+  gui::Menu menu("", create_positioned_rect(Vector2f(400-20, 200), Sizef(250, 254)));
 
-  std::auto_ptr<GroupComponent> text_group(new GroupComponent(Rectf(Vector2f(Display::get_width()/2 - 390,
-                                                                             Display::get_height() - 100),
-                                                                    Size(800 - 20, 
-                                                                         100 - 10)),
-                                                              "",
-                                                              manager->get_root()));
+  menu.add_button("Select Scenario", boost::bind(&MenuManager::display_scenario_menu));
+  menu.add_button("Navigation Test", boost::bind(&MenuManager::menu_show_navigation_test));
+  if (0) menu.add_button("Armature Test", boost::bind(&MenuManager::menu_show_armature_test));
+  menu.add_button("Geometry Test", boost::bind(&MenuManager::menu_show_geometry_test));
+  menu.add_button("Model Viewer", boost::bind(&MenuManager::display_models_menu));
+  menu.add_button("Particle Systems", boost::bind(&MenuManager::display_particle_menu));
+  menu.add_button("Options", boost::bind(&MenuManager::display_option_menu));
+  menu.add_button("Credits", boost::bind(&MenuManager::display_credits));
+  menu.add_button("Help", boost::bind(&MenuManager::display_help));
+  menu.add_button("Quit", boost::bind(&MenuManager::menu_quit));
+    
+  { // Construct Copyright box
+    std::auto_ptr<gui::GroupComponent> text_group
+      (new gui::GroupComponent(Rectf(Vector2f(Display::get_width()/2 - 390,
+                                              Display::get_height() - 100),
+                                     Size(800 - 20, 
+                                          100 - 10)),
+                               "",
+                               menu.get_root()));
 
-  std::auto_ptr<TextView> text(new TextView(text_group->get_child_rect(), text_group.get()));
-  text->set_font(Fonts::vera12);
-  text->set_text("Windstille " WINDSTILLE_VERSION " - Copyright (C) 2009 Ingo Ruhnke &lt;grumbel at gmx.de&gt;\n"
-                 "\n"
-                 "This program is free software: you can redistribute it and/or modify "
-                 "it under the terms of the GNU General Public License as published by "
-                 "the Free Software Foundation, either version 3 of the License, or "
-                 "(at your option) any later version.");
-  text_group->pack(text.release());
-  manager->get_root()->add_child(text_group.release());
+    std::auto_ptr<gui::TextView> text(new gui::TextView(text_group->get_child_rect(), text_group.get()));
+    text->set_font(Fonts::vera12);
+    text->set_text("Windstille " WINDSTILLE_VERSION " - Copyright (C) 2009 Ingo Ruhnke &lt;grumbel at gmx.de&gt;\n"
+                   "\n"
+                   "This program is free software: you can redistribute it and/or modify "
+                   "it under the terms of the GNU General Public License as published by "
+                   "the Free Software Foundation, either version 3 of the License, or "
+                   "(at your option) any later version.");
+    text_group->pack(text.release());
+    menu.get_root()->add_child(text_group.release());
+  }
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_positioned_rect(Vector2f(400-20, 200), 
-                                                                                Sizef(250, 254)),
-                                                         "",
-                                                         manager->get_root()));
-
-  // Begin Menu
-  std::auto_ptr<MenuComponent> menu(new MenuComponent(group->get_child_rect(), false, group.get()));
-
-  menu->set_font(Fonts::vera20);
-
-  std::auto_ptr<ButtonMenuItem> select_scenario_button(new ButtonMenuItem(menu.get(), "Select Scenario"));
-  select_scenario_button->sig_click().connect(boost::bind(&MenuManager::display_scenario_menu));
-  menu->add_item(select_scenario_button.release());
-
-  std::auto_ptr<ButtonMenuItem> navigation_test_button(new ButtonMenuItem(menu.get(), "Navigation Test"));
-  navigation_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_navigation_test));
-  menu->add_item(navigation_test_button.release());
-
-  if (0)
-    {
-      std::auto_ptr<ButtonMenuItem> armature_test_button(new ButtonMenuItem(menu.get(), "Armature Test"));
-      armature_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_armature_test));
-      menu->add_item(armature_test_button.release());
-    }
-
-  std::auto_ptr<ButtonMenuItem> geometry_test_button(new ButtonMenuItem(menu.get(), "Geometry Test"));
-  geometry_test_button->sig_click().connect(boost::bind(&MenuManager::menu_show_geometry_test));
-  menu->add_item(geometry_test_button.release());
-
-  std::auto_ptr<ButtonMenuItem> model_viewer_button(new ButtonMenuItem(menu.get(), "Model Viewer"));
-  model_viewer_button->sig_click().connect(boost::bind(&MenuManager::display_models_menu));
-  menu->add_item(model_viewer_button.release());
-
-  std::auto_ptr<ButtonMenuItem> particles_button(new ButtonMenuItem(menu.get(), "Particle Systems"));
-  particles_button->sig_click().connect(boost::bind(&MenuManager::display_particle_menu));
-  menu->add_item(particles_button.release());
-
-  std::auto_ptr<ButtonMenuItem> options_button(new ButtonMenuItem(menu.get(), "Options"));
-  options_button->sig_click().connect(boost::bind(&MenuManager::display_option_menu));
-  menu->add_item(options_button.release());
-
-  std::auto_ptr<ButtonMenuItem> credits_button(new ButtonMenuItem(menu.get(), "Credits"));
-  credits_button->sig_click().connect(boost::bind(&MenuManager::display_credits));
-  menu->add_item(credits_button.release());
-
-  std::auto_ptr<ButtonMenuItem> help_button(new ButtonMenuItem(menu.get(), "Help"));
-  help_button->sig_click().connect(boost::bind(&MenuManager::display_help));
-  menu->add_item(help_button.release());
-
-  std::auto_ptr<ButtonMenuItem> quit_button(new ButtonMenuItem(menu.get(), "Quit"));
-  quit_button->sig_click().connect(boost::bind(&MenuManager::menu_quit));
-  menu->add_item(quit_button.release());
-  // End: Option Menu
-
-  group->pack(menu.release());
-  manager->get_root()->add_child(group.release());
-  screen_manager.push_overlay(manager.release());
+  menu.show();
 }
 
 void
@@ -286,11 +243,12 @@
   using namespace gui;
   std::auto_ptr<GUIManager> manager(new GUIManager());
 
-  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 400),
+  std::auto_ptr<GroupComponent> group(new GroupComponent(create_centered_rect(500, 400), 
                                                          "Help",
                                                          manager->get_root()));
 
-  std::auto_ptr<TextView> text(new TextView(group->get_child_rect(), group.get()));
+  std::auto_ptr<TextView> text(new TextView(group->get_child_rect(), 
+                                            group.get()));
 
   text->set_font(Fonts::vera12);
   text->set_text("This is a tech-demo of Windstille. Its not meant "
@@ -314,7 +272,7 @@
                  "s - jump/ok\n"
                  );
   text->set_active(true);
-
+  
   group->pack(text.release());
   manager->get_root()->add_child(group.release());
   screen_manager.push_overlay(manager.release());

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-10 01:24:03 UTC (rev 2617)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-10 01:25:35 UTC (rev 2618)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <assert.h>
 #include "component.hpp"
 #include "root_component.hpp"
 #include "gui_manager.hpp"
@@ -28,10 +29,15 @@
 
 namespace gui {
 
-Menu::Menu(const std::string& name, const Rectf& rect)
+Menu::Menu(const std::string& name, const Rectf& rect, Component* parent)
 {
-  manager.reset(new GUIManager());
-  group.reset(new GroupComponent(rect, name, manager->get_root()));
+  if (!parent)
+    {
+      manager.reset(new GUIManager());
+      parent = manager->get_root();
+    }  
+
+  group.reset(new GroupComponent(rect, name, parent));
   menu.reset(new MenuComponent(group->get_child_rect(), true, group.get()));
 
   menu->set_font(Fonts::vera20);
@@ -76,13 +82,36 @@
   menu->add_item(scenario_button.release());
 }
 
+RootComponent*
+Menu::get_root() const
+{
+  assert(manager.get());
+  return manager->get_root();
+}
+
+GroupComponent*
+Menu::get_group() const
+{
+  return group.get();
+}
+
 void
 Menu::show()
 {
+  assert(manager.get());
+
   group->pack(menu.release());
   manager->get_root()->add_child(group.release());
   screen_manager.push_overlay(manager.release());
 }
+
+std::auto_ptr<GroupComponent>
+Menu::create_group()
+{
+  assert(manager.get() == 0);
+  group->pack(menu.release());
+  return group;
+}
 
 } // namespace gui
 

Modified: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-03-10 01:24:03 UTC (rev 2617)
+++ trunk/windstille/src/gui/menu.hpp	2009-03-10 01:25:35 UTC (rev 2618)
@@ -40,7 +40,12 @@
   std::auto_ptr<MenuComponent>  menu;
 
 public:
-  Menu(const std::string& name, const Rectf& rect);
+  /** 
+   *  Construct a Menu, if \a parent is given no GUIManager will be
+   *  created and show() will not work, use create_group() instead and
+   *  add the result to your parent component.
+   */
+  Menu(const std::string& name, const Rectf& rect, Component* parent = 0);
   ~Menu();
 
   EnumMenuItem& add_enum(const std::string& name,  
@@ -54,7 +59,11 @@
   void  add_button(const std::string& name,
                    const boost::function<void ()>& callback = boost::function<void ()>());
 
+  RootComponent*  get_root() const;
+  GroupComponent* get_group() const;
+
   void show();
+  std::auto_ptr<GroupComponent> create_group();
 
 private:
   Menu (const Menu&);



From grumbel at mail.berlios.de  Tue Mar 10 02:26:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 02:26:51 +0100
Subject: [Windstille-commit] r2619 - trunk/windstille
Message-ID: <200903100126.n2A1QpI1006817@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 02:26:50 +0100 (Tue, 10 Mar 2009)
New Revision: 2619

Modified:
   trunk/windstille/TODO
Log:
Some TODO cleanup

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-10 01:25:35 UTC (rev 2618)
+++ trunk/windstille/TODO	2009-03-10 01:26:50 UTC (rev 2619)
@@ -1,6 +1,55 @@
 Windstille ToDo
 ===============
+
+Scripting
+=========
 
+* Currently we wakeup on conditions that are broadcasted to all
+  scripts, in some situation it might make more sense to attach the
+  script directly to the object that sends the signal
+
+* some functions in scripts require '::' before them so that they can
+  be found, not quite clear why or exactly when this happens
+
+* objects are currently all exported to squirrel, while we should
+  probally use id-tags and accessor functions instead:
+
+  bob = get_object("barkeeper")
+  bob.say()
+
+* player can launch PDA or inventory when in a dialog, this will break the script
+
+* currently the ScriptManager is global, meaning scripts are never
+  cleaned up on Sector changes, this needs to be fixed
+
+* figure out proper 'namespaces' for the scripting, i.e. gfx_ or
+  video_ for all display related stuff and so on, so that
+  tab-completion works better and things become more readable
+
+* document scripting tricks somewhere:
+  spawn_object("shockwave", {pos=[0,0]})
+
+* conversations really should be data with hooks for scripts, not pure
+  scripts
+
+* print and println behave different on console
+
+Input Handling
+==============
+
+* implement proper dead-zone in input handling
+
+* allow to load multiple controller config files at once
+
+Sound Handling
+==============
+
+* split music, voice and sound fx into seperate context or allow to
+  change their volume by other means
+
+Miscellaneous
+=============
+
 * create a UTF32 string class, maybe based on basic_string<>, for use in console
 
 * using a screen size != 800x600 breaks menu (missplaced), background object
@@ -10,18 +59,10 @@
   their needed size and blit with floats, or do we need magic to blit
   with ints to avoid rounding errors?
 
-* player can launch PDA or inventory when in a dialog, this will break the script
-
 * add zoom via xbox360 analog trigger buttons
 
 * add pause menu to all screens that don't already have it
 
-* some functions in scripts require '::' before them so that they can
-  be found, not quite clear why or exactly when this happens
-
-* currently the ScriptManager is global, meaning scripts are never
-  cleaned up on Sector changes, this needs to be fixed
-
 * "bounce collision" error is caused by grenade that spawns into a wall
 
 * join Player and Character somewhat or derive one from the other
@@ -30,21 +71,9 @@
   just no code) and change default screen ration to that seen in the
   artwork pictures
 
-* objects are currently all exported to squirrel, while we should
-  probally use id-tags and accessor functions instead:
-
-  bob = get_object("barkeeper")
-  bob.say()
-
 * add support for empty sectors (sectors without a player character,
   for use in intro.wst and similar cutscenes)
 
-* figure out proper 'namespaces' for the scripting, i.e. gfx_ or
-  video_ for all display related stuff and so on, so that
-  tab-completion works better and things become more readable
-
-* implement quit() scripting command that aborts a script in the middle (used for debugging)
-
 * HUD elements are whole screens, should be something simpler, also a
   seperation between HUD (energybar, speech, etc.) and Overlays
   (inventory, PDA, etc.) might be good
@@ -66,22 +95,12 @@
   - particle systems
   - Dialog/Conversation
 
-* unify copyright header and #ifdef guards
+* update random number generator:
+  http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
 
- for i in */*.hpp; do echo $i; NAME=$(echo $i | sed "s/[\/\.]/_/g;s/^/HEADER_WINDSTILLE_/" | tr [a-z] [A-Z]);  sed  -i "s/^\(#[a-z]*\) *HEADER_WINDSTILLE_.*/\1 $NAME/" $i; done
+* write a LucasArts-like dialog system (i.e. non-blocking text,
+  instead of JRPG like boxes with portraits), see SpeechManager
 
-* update random number generator: http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
-
-* document scripting tricks somewhere:
-  spawn_object("shockwave", {pos=[0,0]})
-
-* miniswig causes bison++ to crash
-
-* find a astyle/bcpp/whatever configuration that matches the current
-  coding style, maybe a little script that uses Emacs would do
-
-* write a LucasArts-like dialog system (i.e. non-blocking text, instead of JRPG like boxes with portraits), see SpeechManager
-
 * PDA needs scrolling text thing (right analog stick?)
 
 * mouse support for menu
@@ -93,9 +112,6 @@
 
 * Specify the capabilites that the different subsystems need to have
 
-* conversations really should be data with hooks for scripts, not pure
-  scripts
-
 * menu_manager.cpp doesn't use auto_ptr everywhere since
   pack(Component* ) needs to be done before some other actions, which
   can't be done in a streightforward manner with auto_ptr
@@ -104,15 +120,18 @@
     child->set_rect()     
   child->add_item(menuitem) <- doesn't work when size isn't set
 
-* figure out why running the game engine is extremely slow in
-  valgrind, while pause menu is fast
-
 * make Console not derive from ostream
 
 * GridComponent and ParticleViewer leak
 
 * Screens might fit better into app/
+
+Profiling
+=========
 
+* figure out why running the game engine is extremely slow in
+  valgrind, while pause menu is fast
+
 * gprof results:
 
  16.90      0.60     0.60    47535     0.00     0.00  TileMap::draw(SceneContext&)
@@ -121,15 +140,11 @@
  11.55      2.06     0.41    79225     0.00     0.00  Sprite3D::draw(Vector2f const&, Matrix const&) const
   3.94      2.20     0.14  1133610     0.00     0.00  OpenGLState::activate()
 
-Windstille Bugs
-===============
+Bugs
+====
 
-* Jane's hat is white, caused by one mesh using two textures, could be
-  fixed in either the exporter or in the model itself (FIXME: still an
-  issue? Seems to be fixed)
-  
-* quickly tapping forward-back-hold down forward makes your character play
-  the walking animation without actually moving anywhere
+* quickly tapping forward-back-hold down forward makes your character
+  play the walking animation without actually moving anywhere
    
 * Pressing left (or right), jump and and run at the same time throws an
   exception that causes the game to exit:
@@ -138,36 +153,43 @@
 
   in general the game shouldn't crash when stuff isn't found, but
   instead fallback to placeholders and give a error message on the console
+
+* miniswig causes bison++ to crash
 
-http://orange.blender.org/blog/the-amazing-incredible-monkey-brush#more-49
+Random Things
+=============
 
-Input Handling:
----------------
-- add option to configure dead zone
-- implement proper dead-zone in input handling
-- allow to load multiple controller config files
+* create doll class or enhance character class, so that they can
+  perform tasks, walk around, etc.
 
-Sound Handling:
----------------
-- split music, voice and sound fx into seperate context or allow to
-  change their volume by other means
+* create a mission that is playable
 
-Misc:
------
+* bone animation
 
-- create doll class
-- a mission that is playable
-- polish PDA
-- bone animation
-- print and println behave different on console
-- change the game to a righthand coordinate system
-- rewrite Config class and properly seperate config from command line
+* change the game to a righthand coordinate system
+
+* rewrite Config class and properly seperate config from command line
   and config done via option menu, i.e. command line settings
   shouldn't be persistent unless told so
-- add line numbers to error messages from lisp
-- fix memory leak in SExprFileReader
-- use non-euler angles in the model viewer
-- setting glLineWidth() leads to some interesting artefacts on the
+
+* add line numbers to error messages from lisp
+
+* use non-euler angles in the model viewer
+
+* setting glLineWidth() leads to some interesting artefacts on the
   menus which might be a cool effect
+
+Code Cleanup
+============
 
+* unify copyright header and #ifdef guards
+
+ for i in */*.hpp; do echo $i; NAME=$(echo $i | sed "s/[\/\.]/_/g;s/^/HEADER_WINDSTILLE_/" | tr [a-z] [A-Z]);  sed  -i "s/^\(#[a-z]*\) *HEADER_WINDSTILLE_.*/\1 $NAME/" $i; done
+
+* find a astyle/bcpp/whatever configuration that matches the current
+  coding style, maybe a little script that uses Emacs would do
+
+
+http://orange.blender.org/blog/the-amazing-incredible-monkey-brush#more-49
+
 # EOF #



From grumbel at mail.berlios.de  Tue Mar 10 02:54:59 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 02:54:59 +0100
Subject: [Windstille-commit] r2620 - trunk/windstille
Message-ID: <200903100154.n2A1sxBq011807@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 02:54:58 +0100 (Tue, 10 Mar 2009)
New Revision: 2620

Modified:
   trunk/windstille/TODO
Log:
TODO update

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-10 01:26:50 UTC (rev 2619)
+++ trunk/windstille/TODO	2009-03-10 01:54:58 UTC (rev 2620)
@@ -1,5 +1,11 @@
 Windstille ToDo
 ===============
+
+This is a list of tasks that need to be done in Windstille. This list
+is neither complete nor authoritative, so don't just blindly implement
+from this list, instead use this list just as guide for things that
+might be worth to implement, but not necesarrily have to. Some ideas
+in this list might actually be bad and better solved by other means.
 
 Scripting
 =========
@@ -17,7 +23,8 @@
   bob = get_object("barkeeper")
   bob.say()
 
-* player can launch PDA or inventory when in a dialog, this will break the script
+* player can launch PDA or inventory when in a dialog, this will break
+  the script
 
 * currently the ScriptManager is global, meaning scripts are never
   cleaned up on Sector changes, this needs to be fixed
@@ -30,7 +37,8 @@
   spawn_object("shockwave", {pos=[0,0]})
 
 * conversations really should be data with hooks for scripts, not pure
-  scripts
+  scripts (FIXME: not clear if there is enough benefit and flexibilty
+  to try that)
 
 * print and println behave different on console
 
@@ -40,6 +48,10 @@
 * implement proper dead-zone in input handling
 
 * allow to load multiple controller config files at once
+
+* add zoom via xbox360 analog trigger buttons
+
+* mouse support for menu
 
 Sound Handling
 ==============
@@ -50,26 +62,19 @@
 Miscellaneous
 =============
 
+* add support for dynamic resize to Menu's, currently Menus have
+  scroll bars on large resolutions and empty space when they have to
+  few items
+
 * create a UTF32 string class, maybe based on basic_string<>, for use in console
 
-* using a screen size != 800x600 breaks menu (missplaced), background object
+* join Player and Character somewhat or derive one from the other, so
+  that one can have scripted people running and jumping around
 
-  loads to ugly fonts, should render
-  the fonts so that we get 1:1 pixel mapping, can be just calculate
-  their needed size and blit with floats, or do we need magic to blit
-  with ints to avoid rounding errors?
-
-* add zoom via xbox360 analog trigger buttons
-
-* add pause menu to all screens that don't already have it
-
-* "bounce collision" error is caused by grenade that spawns into a wall
-
-* join Player and Character somewhat or derive one from the other
-
 * implement aspect-ration switching at runtime (menu entry is there,
   just no code) and change default screen ration to that seen in the
-  artwork pictures
+  artwork pictures (FIXME: full resolution switch would be more useful
+  then just aspect-ratio switch)
 
 * add support for empty sectors (sectors without a player character,
   for use in intro.wst and similar cutscenes)
@@ -81,50 +86,20 @@
 * do not save command line options given on the command line by
   default or add a --vanilla option or so
 
-* make lightmap resolution independent
+* make lightmap resolution independent (done, but an artifact remains
+  when the resolution isn't dividable by LIGHTMAP_DIV)
 
-* remodel titlescreen as 3D model
-
-* seperate and document components better:
-
-  - collision engine
-  - BabyXML
-  - tinygettext
-  - Sprite2D
-  - Sprite3D
-  - particle systems
-  - Dialog/Conversation
-
-* update random number generator:
-  http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
-
 * write a LucasArts-like dialog system (i.e. non-blocking text,
   instead of JRPG like boxes with portraits), see SpeechManager
 
 * PDA needs scrolling text thing (right analog stick?)
 
-* mouse support for menu
-
-* Add more markup to TextArea: (not really needed with LucasArts-like dialog)
-    <font color="#ffbbcc"></font>: Use arbitary color
-    <b></b>: make text properly bold
-    <i></i>: make text properly italic 
-
 * Specify the capabilites that the different subsystems need to have
 
-* menu_manager.cpp doesn't use auto_ptr everywhere since
-  pack(Component* ) needs to be done before some other actions, which
-  can't be done in a streightforward manner with auto_ptr
-
-  pack(child)
-    child->set_rect()     
-  child->add_item(menuitem) <- doesn't work when size isn't set
-
 * make Console not derive from ostream
 
-* GridComponent and ParticleViewer leak
-
-* Screens might fit better into app/
+* GridComponent and ParticleViewer leak (FIXME: Kick out
+  GridComponent, since it doesn't work anyway?)
 
 Profiling
 =========
@@ -159,8 +134,10 @@
 Random Things
 =============
 
-* create doll class or enhance character class, so that they can
-  perform tasks, walk around, etc.
+* Add more markup to TextArea: (not really needed with LucasArts-like dialog)
+    <font color="#ffbbcc"></font>: Use arbitary color
+    <b></b>: make text properly bold
+    <i></i>: make text properly italic 
 
 * create a mission that is playable
 
@@ -178,10 +155,32 @@
 
 * setting glLineWidth() leads to some interesting artefacts on the
   menus which might be a cool effect
+
+* using a non-square pixel aspect ratio leads to ugly fonts, fonts
+  could be rendered with that aspect ratio in mind so that they are
+  'pixel-perfect', instead of scaled by OpenGL
+
+* remodel titlescreen as 3D model
+
+* update random number generator:
+  http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
+
 
 Code Cleanup
 ============
 
+* seperate and document components better:
+
+  - collision engine
+  - BabyXML
+  - tinygettext
+  - Sprite2D
+  - Sprite3D
+  - particle systems
+  - Dialog/Conversation
+
+* Screens might fit better into app/ then screen/
+
 * unify copyright header and #ifdef guards
 
  for i in */*.hpp; do echo $i; NAME=$(echo $i | sed "s/[\/\.]/_/g;s/^/HEADER_WINDSTILLE_/" | tr [a-z] [A-Z]);  sed  -i "s/^\(#[a-z]*\) *HEADER_WINDSTILLE_.*/\1 $NAME/" $i; done



From grumbel at mail.berlios.de  Tue Mar 10 13:22:59 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 13:22:59 +0100
Subject: [Windstille-commit] r2621 - in trunk/windstille/src: app gui
Message-ID: <200903101222.n2ACMxiY030646@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 13:22:51 +0100 (Tue, 10 Mar 2009)
New Revision: 2621

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu.hpp
Log:
Pass allow_cancel thru Menu

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-10 01:54:58 UTC (rev 2620)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-10 12:22:51 UTC (rev 2621)
@@ -97,7 +97,7 @@
 void
 MenuManager::display_main_menu()
 {
-  gui::Menu menu("", create_positioned_rect(Vector2f(400-20, 200), Sizef(250, 254)));
+  gui::Menu menu("", create_positioned_rect(Vector2f(400-20, 200), Sizef(250, 254)), false);
 
   menu.add_button("Select Scenario", boost::bind(&MenuManager::display_scenario_menu));
   menu.add_button("Navigation Test", boost::bind(&MenuManager::menu_show_navigation_test));

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-10 01:54:58 UTC (rev 2620)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-10 12:22:51 UTC (rev 2621)
@@ -29,7 +29,7 @@
 
 namespace gui {
 
-Menu::Menu(const std::string& name, const Rectf& rect, Component* parent)
+Menu::Menu(const std::string& name, const Rectf& rect, bool allow_cancel, Component* parent)
 {
   if (!parent)
     {
@@ -38,7 +38,7 @@
     }  
 
   group.reset(new GroupComponent(rect, name, parent));
-  menu.reset(new MenuComponent(group->get_child_rect(), true, group.get()));
+  menu.reset(new MenuComponent(group->get_child_rect(), allow_cancel, group.get()));
 
   menu->set_font(Fonts::vera20);
 }

Modified: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-03-10 01:54:58 UTC (rev 2620)
+++ trunk/windstille/src/gui/menu.hpp	2009-03-10 12:22:51 UTC (rev 2621)
@@ -45,7 +45,7 @@
    *  created and show() will not work, use create_group() instead and
    *  add the result to your parent component.
    */
-  Menu(const std::string& name, const Rectf& rect, Component* parent = 0);
+  Menu(const std::string& name, const Rectf& rect, bool allow_cancel = true, Component* parent = 0);
   ~Menu();
 
   EnumMenuItem& add_enum(const std::string& name,  



From grumbel at mail.berlios.de  Tue Mar 10 13:30:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 13:30:37 +0100
Subject: [Windstille-commit] r2622 - trunk/windstille/src/screen
Message-ID: <200903101230.n2ACUbw9006317@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 13:30:29 +0100 (Tue, 10 Mar 2009)
New Revision: 2622

Modified:
   trunk/windstille/src/screen/particle_viewer.cpp
   trunk/windstille/src/screen/particle_viewer.hpp
Log:
Removed disfunctional GUI from ParticleSystem, properly center on non-800x600 screen sizes

Modified: trunk/windstille/src/screen/particle_viewer.cpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.cpp	2009-03-10 12:22:51 UTC (rev 2621)
+++ trunk/windstille/src/screen/particle_viewer.cpp	2009-03-10 12:30:29 UTC (rev 2622)
@@ -35,75 +35,13 @@
 #include "gui/text_view.hpp"
 #include "gui/automap.hpp"
 
-class ParticleSystemGUI
-{
-private:
-  ParticleSystem* psystem;
-  gui::GridComponent* grid;
-  gui::Slider* gravity_slider;
-  gui::Slider* velocity_slider;
-  gui::Slider* count_slider;
-  
-public:
-  ParticleSystemGUI(gui::Component* parent, ParticleSystem* psystem_)
-    : psystem(psystem_)
-  {
-    using namespace gui;
-
-    grid = new GridComponent(Rectf(200, 120, 600, 220), 2, 3, parent);
-    grid->set_padding(4);
-
-    gravity_slider  = new Slider(grid);
-    velocity_slider = new Slider(grid);
-    count_slider    = new Slider(grid);
-
-    gravity_slider->set_range(-10, 10);
-    gravity_slider->set_step(3);
-    gravity_slider->set_pos(1);
-
-    velocity_slider->set_range(-500, 500);
-    velocity_slider->set_step(50);
-    velocity_slider->set_pos(10);//psystem->get_count());
-
-    count_slider->set_range(1, 500);
-    count_slider->set_step(10);
-    count_slider->set_pos(psystem->get_count());
-
-    grid->pack(new Label("Gravitation:"), 0, 0);
-    grid->pack(new Label("Velocity:"),    0, 1);
-    grid->pack(new Label("Count:"),       0, 2);
-
-    grid->pack(gravity_slider,  1, 0);
-    grid->pack(velocity_slider, 1, 1);
-    grid->pack(count_slider,    1, 2);    
-  }
-
-  void update()
-  {
-    psystem->set_count(count_slider->get_pos());
-  }
-
-  gui::Component* get_component() { return grid; }
-};
-
 ParticleViewer::ParticleViewer()
 {
   background = Sprite("images/greychess.sprite");
-  show_gui = false;
-
-  manager = std::auto_ptr<gui::GUIManager>(new gui::GUIManager());
-  manager->get_root()->add_child(tab = new gui::TabComponent(Rectf(200, 50, 600, 250), manager->get_root()));
 }
 
 ParticleViewer::~ParticleViewer()
 {
-  for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
-    delete *i;
-  systems.clear();
-
-  for(ParticleSystemGUIs::iterator i = guis.begin(); i != guis.end(); ++i)
-    delete *i;
-  guis.clear();
 }
 
 void
@@ -112,13 +50,7 @@
   std::cout << "ParticleViewer: loading " << filename << std::endl;
 
   // Cleanup
-  for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
-    delete *i;
   systems.clear();
-
-  for(ParticleSystemGUIs::iterator i = guis.begin(); i != guis.end(); ++i)
-    delete *i;
-  guis.clear();
   
   FileReader root_reader = FileReader::parse(filename);
   if(root_reader.get_name() != "particle-systems") {
@@ -131,14 +63,11 @@
   for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
     { 
       if (i->get_name() == "particle-system")
-      {
-        systems.push_back(new ParticleSystem(*i));
+        {
+          systems.push_back(boost::shared_ptr<ParticleSystem>(new ParticleSystem(*i)));
+        }
+    }
 
-        guis.push_back(new ParticleSystemGUI(tab, systems.back()));
-        tab->pack("Testomap", guis.back()->get_component());
-      }
-  }
-
   std::cout << systems.size() << " particle systems ready to go" << std::endl;
 }
   
@@ -160,7 +89,8 @@
         }
     }
 
-  sc.translate(400 + pos.x, 600 + pos.y);
+  sc.translate(Display::get_width()/2 + pos.x, 
+               Display::get_height()/2 + pos.y);
   sc.light().fill_screen(Color(0.4, 0.4, 0.4));
   //sc.light().fill_screen(Color(1.0, 1.0, 1.0));
   sc.color().fill_screen(Color(0.0, 0.0, 0.0));
@@ -169,11 +99,6 @@
     (*i)->draw(sc);
 
   sc.render();
-
-  if (show_gui)
-    {
-      manager->draw();
-    }
 }
 
 void
@@ -182,41 +107,15 @@
   for(Systems::iterator i = systems.begin(); i != systems.end(); ++i)
     (*i)->update(delta);
 
-  if (!show_gui)
-    {
-      pos.x += controller.get_axis_state(X_AXIS) * delta * 100.0f;
-      pos.y += controller.get_axis_state(Y_AXIS) * delta * 100.0f;
 
-      if (controller.button_was_pressed(OK_BUTTON))
-        {
-          show_gui = true;
-          manager->get_root()->get_focus()->set_active(true);
-        }
-      else if (controller.button_was_pressed(PAUSE_BUTTON) ||
-               controller.button_was_pressed(ESCAPE_BUTTON))
-        {
-          MenuManager::display_pause_menu();
-        }
-    }
-  else
-    {
-      if (!manager->get_root()->is_active())
-        {
-          show_gui = false;
-        }
-      else
-        {
-          manager->update(delta, controller);
-        }
-    }
+  pos.x -= controller.get_axis_state(X_AXIS) * delta * 400.0f;
+  pos.y -= controller.get_axis_state(Y_AXIS) * delta * 400.0f;
 
-  for(ParticleSystemGUIs::iterator i = guis.begin(); i != guis.end(); ++i)
+  if (controller.button_was_pressed(PAUSE_BUTTON) ||
+      controller.button_was_pressed(ESCAPE_BUTTON))
     {
-      (*i)->update();
+      MenuManager::display_pause_menu();
     }
-
-  //systems[3]->set_count(count_slider->get_pos());
-  //systems[3]->set_velocity(velocity_slider->get_pos(), velocity_slider->get_pos());
 }
 
 /* EOF */

Modified: trunk/windstille/src/screen/particle_viewer.hpp
===================================================================
--- trunk/windstille/src/screen/particle_viewer.hpp	2009-03-10 12:22:51 UTC (rev 2621)
+++ trunk/windstille/src/screen/particle_viewer.hpp	2009-03-10 12:30:29 UTC (rev 2622)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_SCREEN_PARTICLE_VIEWER_HPP
 
 #include <memory>
+#include <boost/shared_ptr.hpp>
 #include "screen.hpp"
 #include "sprite2d/sprite.hpp"
 #include "gui/gui_manager.hpp"
@@ -37,18 +38,12 @@
 {
 private:
   SceneContext sc;
-  typedef std::vector<ParticleSystem*> Systems;
+  typedef std::vector<boost::shared_ptr<ParticleSystem> > Systems;
   Systems systems;
   Sprite background;
 
   Vector2f pos;
-  bool   show_gui;
-  std::auto_ptr<gui::GUIManager> manager;
-  gui::TabComponent* tab;
 
-  typedef std::vector<ParticleSystemGUI*> ParticleSystemGUIs;
-  ParticleSystemGUIs guis;
-
 public:
   ParticleViewer();
   ~ParticleViewer();



From grumbel at mail.berlios.de  Tue Mar 10 13:31:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 13:31:02 +0100
Subject: [Windstille-commit] r2623 - trunk/windstille
Message-ID: <200903101231.n2ACV2Fj006661@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 13:31:01 +0100 (Tue, 10 Mar 2009)
New Revision: 2623

Modified:
   trunk/windstille/TODO
Log:
TODO cleanup

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-10 12:30:29 UTC (rev 2622)
+++ trunk/windstille/TODO	2009-03-10 12:31:01 UTC (rev 2623)
@@ -86,6 +86,12 @@
 * do not save command line options given on the command line by
   default or add a --vanilla option or so
 
+  or
+   
+  rewrite Config class and properly seperate config from command line
+  and config done via option menu, i.e. command line settings
+  shouldn't be persistent unless told so
+
 * make lightmap resolution independent (done, but an artifact remains
   when the resolution isn't dividable by LIGHTMAP_DIV)
 
@@ -131,6 +137,13 @@
 
 * miniswig causes bison++ to crash
 
+3D Things
+==========
+
+* bone animation
+
+* change the game to a righthand coordinate system
+
 Random Things
 =============
 
@@ -141,30 +154,24 @@
 
 * create a mission that is playable
 
-* bone animation
-
-* change the game to a righthand coordinate system
-
-* rewrite Config class and properly seperate config from command line
-  and config done via option menu, i.e. command line settings
-  shouldn't be persistent unless told so
-
 * add line numbers to error messages from lisp
 
 * use non-euler angles in the model viewer
 
-* setting glLineWidth() leads to some interesting artefacts on the
-  menus which might be a cool effect
-
 * using a non-square pixel aspect ratio leads to ugly fonts, fonts
   could be rendered with that aspect ratio in mind so that they are
   'pixel-perfect', instead of scaled by OpenGL
 
-* remodel titlescreen as 3D model
-
 * update random number generator:
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
+
+Graphics
+========
 
+* remodel titlescreen as 3D model
+
+* setting glLineWidth() leads to some interesting artefacts on the
+  menus which might be a cool effect
 
 Code Cleanup
 ============



From grumbel at mail.berlios.de  Tue Mar 10 14:47:33 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 14:47:33 +0100
Subject: [Windstille-commit] r2624 - trunk/windstille/src/screen
Message-ID: <200903101347.n2ADlXgM030187@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 14:47:31 +0100 (Tue, 10 Mar 2009)
New Revision: 2624

Modified:
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Replaced delete with shared_ptr

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-03-10 12:31:01 UTC (rev 2623)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-03-10 13:47:31 UTC (rev 2624)
@@ -59,22 +59,14 @@
     do_quit(false)
 {
   screen_action = NONE;
-  screen_screen = 0;
-
   overlay_screen_action = NONE;
-  overlay_screen_screen = 0;
 
   ticks = 0;
 }
 
 ScreenManager::~ScreenManager()
 {
-  for(std::vector<Screen*>::iterator i = screens.begin(); i != screens.end(); ++i)
-    delete *i;
   screens.clear();
-    
-  for(std::vector<Screen*>::iterator i = overlay_screens.begin(); i != overlay_screens.end(); ++i)
-    delete *i;
   overlay_screens.clear();
 }
 
@@ -137,7 +129,7 @@
         {
         case PUSH_SCREEN:
           overlay_screens.push_back(overlay_screen_screen);
-          overlay_screen_screen = 0;
+          overlay_screen_screen = boost::shared_ptr<Screen>();
           break;
 
         case POP_SCREEN:
@@ -147,14 +139,11 @@
             }
           else
             {
-              delete overlay_screens.back();
               overlay_screens.pop_back();
             }
           break;
 
         case CLEAR_SCREENS:
-          for(std::vector<Screen*>::iterator i = overlay_screens.begin(); i != overlay_screens.end(); ++i)
-            delete *i;
           overlay_screens.clear();
           break;
 
@@ -168,20 +157,17 @@
         {
         case PUSH_SCREEN:
           screens.push_back(screen_screen);
-          screen_screen = 0;
+          screen_screen = boost::shared_ptr<Screen>();
           screens.back()->on_startup();
           break;
 
         case POP_SCREEN:
-          delete screens.back();
           screens.pop_back();
           if (!screens.empty())
             screens.back()->on_startup();
           break;
 
         case CLEAR_SCREENS:
-          for(std::vector<Screen*>::iterator i = screens.begin(); i != screens.end(); ++i)
-            delete *i;
           screens.clear();
           break;
 
@@ -346,7 +332,7 @@
   assert(screen_screen == 0);
 
   screen_action = PUSH_SCREEN;
-  screen_screen = s;
+  screen_screen = boost::shared_ptr<Screen>(s);
 }
 
 void
@@ -358,10 +344,10 @@
 void
 ScreenManager::push_overlay(Screen* s)
 {
-  assert(overlay_screen_screen == 0);
+  assert(!overlay_screen_screen.get());
 
   overlay_screen_action = PUSH_SCREEN;
-  overlay_screen_screen = s;
+  overlay_screen_screen = boost::shared_ptr<Screen>(s);
 }
 
 void

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-03-10 12:31:01 UTC (rev 2623)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-03-10 13:47:31 UTC (rev 2624)
@@ -19,6 +19,8 @@
 #ifndef HEADER_WINDSTILLE_SCREEN_SCREEN_MANAGER_HPP
 #define HEADER_WINDSTILLE_SCREEN_SCREEN_MANAGER_HPP
 
+#include <boost/shared_ptr.hpp>
+
 class Screen;
 
 /**
@@ -30,13 +32,14 @@
 private:
   enum ScreenAction { NONE, POP_SCREEN, PUSH_SCREEN, CLEAR_SCREENS };
 
-  std::vector<Screen*> screens;
+  typedef std::vector<boost::shared_ptr<Screen> > Screens;
+  Screens screens;
   ScreenAction screen_action;
-  Screen*      screen_screen;
+  boost::shared_ptr<Screen> screen_screen;
 
-  std::vector<Screen*> overlay_screens;
+  Screens overlay_screens;
   ScreenAction overlay_screen_action;
-  Screen*      overlay_screen_screen;
+  boost::shared_ptr<Screen> overlay_screen_screen;
 
   unsigned int ticks;
 



From grumbel at mail.berlios.de  Tue Mar 10 16:45:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 16:45:29 +0100
Subject: [Windstille-commit] r2625 - in trunk/windstille/src: engine
	scripting
Message-ID: <200903101545.n2AFjTOb005125@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 16:45:26 +0100 (Tue, 10 Mar 2009)
New Revision: 2625

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/engine/squirrel_vm.hpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Moved set_wakeup_event() completly into SquirrelVM

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-10 13:47:31 UTC (rev 2624)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-10 15:45:26 UTC (rev 2625)
@@ -200,26 +200,16 @@
     }
 }
 
-void
-ScriptManager::set_wakeup_event(HSQUIRRELVM vm, WakeupData event, float timeout)
+boost::shared_ptr<SquirrelVM>
+ScriptManager::get_vm(HSQUIRRELVM v) const
 {
-  assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
-
-  // find the VM in the list and update it
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
+  for(SquirrelVMs::const_iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
-      if((*i)->get_vm() == vm) 
-        {
-          (*i)->set_wakeup_event(event, timeout);
-          return;
-        }
+      if ((*i)->get_vm() == v)
+        return *i;
     }
-}
 
-void
-ScriptManager::set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout)
-{
-  set_wakeup_event(vm, WakeupData(event), timeout);
+  return boost::shared_ptr<SquirrelVM>();
 }
 
 void
@@ -247,11 +237,11 @@
   sq_pushroottable(v);
   sq_pushstring(v, OBJECTS_TABLE, -1);
   if(SQ_FAILED(sq_get(v, -2)))
-  {
-    std::ostringstream msg;
-    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
-    throw SquirrelError(v, msg.str());
-  }
+    {
+      std::ostringstream msg;
+      msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
+      throw SquirrelError(v, msg.str());
+    }
 
   // remove object from table
   sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
@@ -300,21 +290,21 @@
   sq_pushroottable(v);
   sq_pushstring(v, OBJECTS_TABLE, -1);
   if(SQ_FAILED(sq_get(v, -2)))
-  {
-    std::ostringstream msg;
-    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
-    throw SquirrelError(v, msg.str());
-  }
+    {
+      std::ostringstream msg;
+      msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
+      throw SquirrelError(v, msg.str());
+    }
   
   // create squirrel instance and register in table
   sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
   create_squirrel_instance(v, object);
   if(SQ_FAILED(sq_createslot(v, -3)))
-  {
-    std::ostringstream msg;
-    msg << "Couldn't register object in objects tab?e";
-    throw SquirrelError(v, msg.str());
-  }
+    {
+      std::ostringstream msg;
+      msg << "Couldn't register object in objects tab?e";
+      throw SquirrelError(v, msg.str());
+    }
 
   // pop roottable and objects table
   sq_pop(v, 2);

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-10 13:47:31 UTC (rev 2624)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-10 15:45:26 UTC (rev 2625)
@@ -87,8 +87,7 @@
 
   HSQUIRRELVM get_vm() const { return vm; }
 
-  void set_wakeup_event(HSQUIRRELVM vm, WakeupEvent event, float timeout = -1);
-  void set_wakeup_event(HSQUIRRELVM vm, WakeupData  event, float timeout = -1);
+  boost::shared_ptr<SquirrelVM> get_vm(HSQUIRRELVM v) const;
 
   void fire_wakeup_event(WakeupEvent event);
   void fire_wakeup_event(WakeupData  event);

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-10 13:47:31 UTC (rev 2624)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-10 15:45:26 UTC (rev 2625)
@@ -100,6 +100,12 @@
 }
 
 void
+SquirrelVM::set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout)
+{
+  set_wakeup_event(ScriptManager::WakeupData(event), timeout);
+}
+
+void
 SquirrelVM::set_wakeup_event(const ScriptManager::WakeupData& event, float timeout)
 {
   waiting_for_events = event;

Modified: trunk/windstille/src/engine/squirrel_vm.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-10 13:47:31 UTC (rev 2624)
+++ trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-10 15:45:26 UTC (rev 2625)
@@ -39,7 +39,9 @@
   SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
   ~SquirrelVM();
 
-  void set_wakeup_event(const ScriptManager::WakeupData& event, float timeout);
+  void set_wakeup_event(const ScriptManager::WakeupData&  event, float timeout = -1);
+  void set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout = -1);
+
   void fire_wakeup_event(const ScriptManager::WakeupData& event);
 
   /** Resumes the evaluation of the VM if a wakeup has happened.

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-10 13:47:31 UTC (rev 2624)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-10 15:45:26 UTC (rev 2625)
@@ -33,6 +33,7 @@
 #include "hud/pda.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "display/display.hpp"
+#include "engine/squirrel_vm.hpp"
 #include "hud/controller_help_window.hpp"
 
 namespace Scripting
@@ -125,22 +126,42 @@
 
 void wait(HSQUIRRELVM vm, float time)
 {
-  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::TIME, time);
+  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+
+  if (ptr.get())
+    {
+      ptr->set_wakeup_event(ScriptManager::TIME, time);
+    }
 }
 
 void wait_for_dialog(HSQUIRRELVM vm)
 {
-  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::DIALOG_CLOSED);
+  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+
+  if (ptr.get())
+    {
+      ptr->set_wakeup_event(ScriptManager::DIALOG_CLOSED);
+    }
 }
 
 void wait_for_camera(HSQUIRRELVM vm)
 {
-  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::CAMERA_DONE);
+  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+
+  if (ptr.get())
+    {
+      ptr->set_wakeup_event(ScriptManager::CAMERA_DONE);
+    }
 }
 
 void wait_for_fade(HSQUIRRELVM vm)
 {
-  ScriptManager::current()->set_wakeup_event(vm, ScriptManager::FADE_DONE);
+  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+
+  if (ptr.get())
+    {
+      ptr->set_wakeup_event(ScriptManager::FADE_DONE);
+    }
 }
 
 void speech_show(const std::string& text, float x, float y)
@@ -231,9 +252,14 @@
   return Conversation::current()->get_selection();
 }
 
-void wait_for_conversation(HSQUIRRELVM v)
+void wait_for_conversation(HSQUIRRELVM vm)
 {
-  ScriptManager::current()->set_wakeup_event(v, ScriptManager::CONVERSATION_CLOSED);
+  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+
+  if (ptr.get())
+    {
+      ptr->set_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
+    }
 }
 
 SQInteger display(HSQUIRRELVM v) __custom



From grumbel at mail.berlios.de  Tue Mar 10 19:53:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 19:53:10 +0100
Subject: [Windstille-commit] r2626 - trunk/windstille/data/scripts
Message-ID: <200903101853.n2AIrAE1020104@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 19:53:10 +0100 (Tue, 10 Mar 2009)
New Revision: 2626

Removed:
   trunk/windstille/data/scripts/init_script_vars.nut
Log:
Removed unneeded file

Deleted: trunk/windstille/data/scripts/init_script_vars.nut
===================================================================



From grumbel at mail.berlios.de  Tue Mar 10 19:53:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 19:53:37 +0100
Subject: [Windstille-commit] r2627 - trunk/windstille/src/scripting
Message-ID: <200903101853.n2AIrbpk020203@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 19:53:36 +0100 (Tue, 10 Mar 2009)
New Revision: 2627

Modified:
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Added spawn_script()

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-10 18:53:10 UTC (rev 2626)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-10 18:53:36 UTC (rev 2627)
@@ -367,6 +367,11 @@
   return 0;
 }
 
+void spawn_script(const std::string& filename)
+{
+  ScriptManager::current()->run_script_file(filename);
+}
+
 } // namespace Scripting
 
 /* EOF */

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-10 18:53:10 UTC (rev 2626)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-10 18:53:36 UTC (rev 2627)
@@ -116,6 +116,8 @@
  */
 SQInteger spawn_object(HSQUIRRELVM v) __custom;
 
+void spawn_script(const std::string& filename);
+
 } // namespace Scripting
 
 #endif

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-10 18:53:10 UTC (rev 2626)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-10 18:53:36 UTC (rev 2627)
@@ -1568,6 +1568,29 @@
   return Scripting::spawn_object(vm);
 }
 
+static SQInteger spawn_script_wrapper(HSQUIRRELVM vm)
+{
+  const SQChar* arg0;
+  if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
+    sq_throwerror(vm, _SC("Argument 1 not a string"));
+    return SQ_ERROR;
+  }
+
+  try {
+    Scripting::spawn_script(arg0);
+
+    return 0;
+
+  } catch(std::exception& e) {
+    sq_throwerror(vm, e.what());
+    return SQ_ERROR;
+  } catch(...) {
+    sq_throwerror(vm, _SC("Unexpected exception while executing function 'spawn_script'"));
+    return SQ_ERROR;
+  }
+
+}
+
 } // end of namespace Wrapper
 void create_squirrel_instance(HSQUIRRELVM v, Scripting::GameObject* object, bool setup_releasehook)
 {
@@ -2060,6 +2083,13 @@
     throw SquirrelError(v, "Couldn't register function 'spawn_object'");
   }
 
+  sq_pushstring(v, "spawn_script", -1);
+  sq_newclosure(v, &spawn_script_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'spawn_script'");
+  }
+
   // Register class GameObject
   sq_pushstring(v, "GameObject", -1);
   if(sq_newclass(v, SQFalse) < 0) {



From grumbel at mail.berlios.de  Tue Mar 10 19:54:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 19:54:27 +0100
Subject: [Windstille-commit] r2628 - in trunk/windstille: data/scripts
	src/engine
Message-ID: <200903101854.n2AIsR1I020348@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 19:54:27 +0100 (Tue, 10 Mar 2009)
New Revision: 2628

Modified:
   trunk/windstille/data/scripts/windstille.nut
   trunk/windstille/src/engine/squirrel_vm.cpp
Log:
Playing around with return values from a suspend(), behaves weird in some situations

Modified: trunk/windstille/data/scripts/windstille.nut
===================================================================
--- trunk/windstille/data/scripts/windstille.nut	2009-03-10 18:53:36 UTC (rev 2627)
+++ trunk/windstille/data/scripts/windstille.nut	2009-03-10 18:54:27 UTC (rev 2628)
@@ -72,7 +72,7 @@
 function conversation_get()
 {
   conversation_show();
-  wait_for_conversation();
+  println("wait_for_conversation: " + wait_for_conversation());
   return conversation_get_selection();
 }
 

Modified: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-10 18:53:36 UTC (rev 2627)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-10 18:54:27 UTC (rev 2628)
@@ -157,7 +157,9 @@
 
             try 
               {
-                if (sq_wakeupvm(vm, false, false, true) < 0)
+                // Try to return a value
+                sq_pushinteger(vm, 45); 
+                if (sq_wakeupvm(vm, SQTrue, SQTrue, SQTrue) < 0)
                   {
                     throw SquirrelError(vm, name, "Couldn't resume script");
                   }



From grumbel at mail.berlios.de  Tue Mar 10 21:43:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 21:43:43 +0100
Subject: [Windstille-commit] r2629 - trunk/windstille/src/app
Message-ID: <200903102043.n2AKhhOo008543@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 21:43:42 +0100 (Tue, 10 Mar 2009)
New Revision: 2629

Modified:
   trunk/windstille/src/app/console.cpp
Log:
Expand console to the whole width

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-03-10 18:54:27 UTC (rev 2628)
+++ trunk/windstille/src/app/console.cpp	2009-03-10 20:43:42 UTC (rev 2629)
@@ -156,7 +156,7 @@
   int num_lines = 600 / (Fonts::ttffont->get_height() + 2);
 
   if (console.is_active())
-    Display::fill_rect(Rect(0,0, 800, 600),
+    Display::fill_rect(Rect(0,0, Display::get_width(), 600),
                        Color(0, 0, 0, 0.5f));
 
   for(int i = buffer.size()-1 - scroll_offset; i >= 0 && i > int(buffer.size()) - num_lines - scroll_offset; --i)



From grumbel at mail.berlios.de  Tue Mar 10 21:54:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 21:54:39 +0100
Subject: [Windstille-commit] r2630 - trunk/windstille/data/sectors/apartment
Message-ID: <200903102054.n2AKsd6p010450@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 21:54:38 +0100 (Tue, 10 Mar 2009)
New Revision: 2630

Modified:
   trunk/windstille/data/sectors/apartment/apartment.wst
   trunk/windstille/data/sectors/apartment/barrobot.nut
Log:
Added ability to switch of the light in apartment

Modified: trunk/windstille/data/sectors/apartment/apartment.wst
===================================================================
--- trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-10 20:43:42 UTC (rev 2629)
+++ trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-10 20:54:38 UTC (rev 2630)
@@ -2,7 +2,7 @@
 ;; Generated by Flexlay Editor
 (windstille-sector
   (version 2)
-  (ambient-color .3 .3 .3)  (name   "")
+  (ambient-color .1 .1 .1)  (name   "")
   (music  "")
   (init-script "init.nut")
   (objects
@@ -136,18 +136,21 @@
       (z-pos -100)
     )
     (scriptable-object
+      (name "lamp1")
       (sprite "images/objects/apartmentlamp.sprite")
       (highlight "images/objects/apartmentlamp_highlight.sprite")
       (light "images/objects/apartmentlamp_light.sprite")
       (pos 1280 64)
     )
     (scriptable-object
+      (name "lamp2")
       (sprite "images/objects/apartmentlamp.sprite")
       (highlight "images/objects/apartmentlamp_highlight.sprite")
       (light "images/objects/apartmentlamp_light.sprite")
       (pos 768 64)
     )
     (scriptable-object
+      (name "lamp3")
       (sprite "images/objects/apartmentlamp.sprite")
       (highlight "images/objects/apartmentlamp_highlight.sprite")
       (light "images/objects/apartmentlamp_light.sprite")

Modified: trunk/windstille/data/sectors/apartment/barrobot.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-10 20:43:42 UTC (rev 2629)
+++ trunk/windstille/data/sectors/apartment/barrobot.nut	2009-03-10 20:54:38 UTC (rev 2630)
@@ -6,7 +6,9 @@
 function run()
 {
   conversation_add2("Night Vision [On]", "A little dark here, can I get night vision.");
+  conversation_add2("Lights [Off]", "Lets make it dark before playing with nightvision.");
   conversation_add2("Night Vision [Off]", "This green look gets annoying.");
+  conversation_add2("Lights [On]", "Let there be light.");
 
   switch (conversation_get())
     {
@@ -14,9 +16,27 @@
         nightvision_enabled(true)
         break;
 
-      case 1:
+      case 2:
         nightvision_enabled(false)
         break;
+
+      case 1:
+        wait(0.4)
+        objects.lamp1.set_active(false);
+        wait(0.4)
+        objects.lamp2.set_active(false);
+        wait(0.4)
+        objects.lamp3.set_active(false);
+        break;
+
+      case 3:
+        wait(0.4)
+        objects.lamp3.set_active(true);
+        wait(0.4)
+        objects.lamp2.set_active(true);
+        wait(0.4)
+        objects.lamp1.set_active(true);
+        break;
     }
 }
 



From grumbel at mail.berlios.de  Tue Mar 10 22:04:59 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 22:04:59 +0100
Subject: [Windstille-commit] r2631 - trunk/windstille
Message-ID: <200903102104.n2AL4xmL012539@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 22:04:58 +0100 (Tue, 10 Mar 2009)
New Revision: 2631

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-10 20:54:38 UTC (rev 2630)
+++ trunk/windstille/TODO	2009-03-10 21:04:58 UTC (rev 2631)
@@ -10,6 +10,17 @@
 Scripting
 =========
 
+* add a way to print content of stack
+
+* miniswig does not support __suspend with a return value, should be
+  fixed, since Squirrel can handle it. Trouble is that the return
+  value is created by the sq_wakeupvm() call, not by the
+  sq_suspendvm() one, so its not actually in the wrapper code, but in
+  the normal C++ code
+
+  Return value has problem, works in same cases, but returns NULL for
+  barrobot.nut in apartment.wst
+
 * Currently we wakeup on conditions that are broadcasted to all
   scripts, in some situation it might make more sense to attach the
   script directly to the object that sends the signal
@@ -62,6 +73,8 @@
 Miscellaneous
 =============
 
+* console doesn't adopt to screen size
+
 * add support for dynamic resize to Menu's, currently Menus have
   scroll bars on large resolutions and empty space when they have to
   few items
@@ -144,6 +157,38 @@
 
 * change the game to a righthand coordinate system
 
+Level Design
+============
+
+* implement light switches in apartment
+
+  Currently the light switch-off sequence is done in the use script,
+  this however makes it blocking, it would be nice if the switch-off
+  sequence could be handled in a seperate script, but that would
+  require a way to apport that script, since else a switch-on could
+  collide with a switch-off script
+
+  possible solution:
+
+  function init() {
+    lamp_sequence = spawn_script_norun("lamp_sequence.nut");
+  }
+
+  function init() {
+      ...
+      lamp_sequence.call("switch_on");
+      ...
+      lamp_sequence.call("switch_off");
+      ...
+  }
+
+  The lamp_sequence.nut script would take control over the process and
+  buffer call's when it is busy, once no longer busy it would pick the
+  next task from the stack. Different scripts could use different
+  stack behaviour, i.e. in the lamp_sequence() it would be useful to
+  have a task-stack of size 1 and discard everything else
+  
+
 Random Things
 =============
 



From grumbel at mail.berlios.de  Tue Mar 10 22:05:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 10 Mar 2009 22:05:32 +0100
Subject: [Windstille-commit] r2632 - trunk/windstille/src/objects
Message-ID: <200903102105.n2AL5Vdv012691@sheep.berlios.de>

Author: grumbel
Date: 2009-03-10 22:05:31 +0100 (Tue, 10 Mar 2009)
New Revision: 2632

Modified:
   trunk/windstille/src/objects/scriptable_object.cpp
Log:
Removed debug std::cout

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-03-10 21:04:58 UTC (rev 2631)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-03-10 21:05:31 UTC (rev 2632)
@@ -114,8 +114,6 @@
 void
 ScriptableObject::use()
 {
-  std::cout << "Use: " << script_file << std::endl;
-
   if (!script_file.empty())
     {
       try 



From grumbel at mail.berlios.de  Wed Mar 11 01:08:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 01:08:16 +0100
Subject: [Windstille-commit] r2633 - in trunk/windstille/src: . engine
	scripting
Message-ID: <200903110008.n2B08Gq9012855@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 01:08:11 +0100 (Wed, 11 Mar 2009)
New Revision: 2633

Added:
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
Removed:
   trunk/windstille/src/engine/squirrel_vm.cpp
   trunk/windstille/src/engine/squirrel_vm.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Renamed SquirrelVM to SquirrelThread

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/SConscript	2009-03-11 00:08:11 UTC (rev 2633)
@@ -72,7 +72,7 @@
 'engine/game_object.cpp',
 'engine/physics.cpp',
 'engine/script_manager.cpp',
-'engine/squirrel_vm.cpp',
+'engine/squirrel_thread.cpp',
 'engine/sector.cpp',
 'font/border_font_effect.cpp',
 'font/no_font_effect.cpp',

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -127,7 +127,7 @@
   current_ = 0;
 }
 
-boost::shared_ptr<SquirrelVM>
+boost::shared_ptr<SquirrelThread>
 ScriptManager::run_script_file(const std::string& filename, bool global)
 {
   IFileStream in(filename);
@@ -145,21 +145,21 @@
 
       // Execute the script
       if (SQ_FAILED(sq_call(vm, 1, false, true)))
-        throw SquirrelError(vm, "SquirrelVM::run(): " + filename + ": Couldn't start script");
+        throw SquirrelError(vm, "SquirrelThread::run(): " + filename + ": Couldn't start script");
 
       if (sq_getvmstate(vm) != SQ_VMSTATE_IDLE)
         {
           throw std::runtime_error("ScriptManager::run_script(): " + filename + ": global scripts must not suspend");
         }
 
-      return boost::shared_ptr<SquirrelVM>();
+      return boost::shared_ptr<SquirrelThread>();
     }
   else
     {
-      SquirrelVMs::iterator it = squirrel_vms.end();
+      SquirrelThreads::iterator it = squirrel_vms.end();
 
       // Look if the VM is associated with the source file
-      for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
+      for(SquirrelThreads::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
         {
           if ((*i)->get_name() == filename)
             {
@@ -183,7 +183,7 @@
         }
       else
         { // Add VM to the list of VMs
-          squirrel_vms.push_back(boost::shared_ptr<SquirrelVM>(new SquirrelVM(in, filename, vm)));     
+          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(in, filename, vm)));     
           squirrel_vms.back()->call("init");
           squirrel_vms.back()->call("run");
           return squirrel_vms.back();
@@ -194,22 +194,22 @@
 void
 ScriptManager::update()
 {
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
+  for(SquirrelThreads::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
     {
       (*i)->update();
     }
 }
 
-boost::shared_ptr<SquirrelVM>
+boost::shared_ptr<SquirrelThread>
 ScriptManager::get_vm(HSQUIRRELVM v) const
 {
-  for(SquirrelVMs::const_iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
+  for(SquirrelThreads::const_iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
       if ((*i)->get_vm() == v)
         return *i;
     }
 
-  return boost::shared_ptr<SquirrelVM>();
+  return boost::shared_ptr<SquirrelThread>();
 }
 
 void
@@ -217,7 +217,7 @@
 {
   assert(event.type >= 0 && event.type < MAX_WAKEUP_EVENT_COUNT);
 
-  for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
+  for(SquirrelThreads::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
       (*i)->fire_wakeup_event(event);
     }

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -29,7 +29,7 @@
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
 
-class SquirrelVM;
+class SquirrelThread;
 
 /**
  * This class is responsible for managing all running squirrel threads
@@ -71,8 +71,8 @@
   };
 
 private:  
-  typedef std::list<boost::shared_ptr<SquirrelVM> > SquirrelVMs;
-  SquirrelVMs squirrel_vms;
+  typedef std::list<boost::shared_ptr<SquirrelThread> > SquirrelThreads;
+  SquirrelThreads squirrel_vms;
 
   HSQUIRRELVM vm;
 
@@ -83,11 +83,11 @@
   void update();
 
   /** Load script from \a filename and runs it */
-  boost::shared_ptr<SquirrelVM> run_script_file(const std::string& filename, bool global = false);
+  boost::shared_ptr<SquirrelThread> run_script_file(const std::string& filename, bool global = false);
 
   HSQUIRRELVM get_vm() const { return vm; }
 
-  boost::shared_ptr<SquirrelVM> get_vm(HSQUIRRELVM v) const;
+  boost::shared_ptr<SquirrelThread> get_vm(HSQUIRRELVM v) const;
 
   void fire_wakeup_event(WakeupEvent event);
   void fire_wakeup_event(WakeupData  event);

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -34,7 +34,7 @@
 class CollisionEngine;
 class NavigationGraph;
 class Entity;
-class SquirrelVM;
+class SquirrelThread;
 
 /** */
 class Sector
@@ -50,7 +50,7 @@
   std::string music;
   std::string init_script;
   
-  boost::shared_ptr<SquirrelVM> vm;
+  boost::shared_ptr<SquirrelThread> vm;
 
   typedef std::vector<boost::shared_ptr<GameObject> > Objects;
   Objects objects;

Copied: trunk/windstille/src/engine/squirrel_thread.cpp (from rev 2632, trunk/windstille/src/engine/squirrel_vm.cpp)
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -0,0 +1,230 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "scripting/util.hpp"
+#include "scripting/squirrel_error.hpp"
+#include "squirrel_vm.hpp"
+
+using Scripting::SquirrelError;
+
+static SQInteger squirrel_read_char(SQUserPointer file)
+{
+  std::istream* in = reinterpret_cast<std::istream*> (file);
+
+  char c = in->get();
+
+  if (in->eof())
+    return 0;
+  else
+    return c;
+}
+
+SquirrelThread::SquirrelThread(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm)
+  : name(arg_name),
+    parent_vm(parent_vm),
+    waiting_for_events(ScriptManager::NO_EVENT),
+    wakeup_time(0)
+{
+  vm = sq_newthread(parent_vm, 1024);
+
+  if (vm == 0)
+    {
+      throw SquirrelError(vm, name, "Couldn't create new VM");
+    }
+  else
+    {
+      // retrieve reference to thread from stack and increase refcounter
+
+      // Init the object
+      sq_resetobject(&vm_obj);
+
+      // store thread created by sq_newthread into vm_obj
+      if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
+        {
+          throw SquirrelError(parent_vm, name, "Couldn't get coroutine vm from stack");
+        }
+      else
+        {
+          // Add reference and remove object from stack
+          sq_addref(parent_vm, &vm_obj);
+          sq_pop(parent_vm, 1);
+        }
+      
+      HSQOBJECT env;
+      sq_resetobject(&env);
+
+      sq_newtable(vm);
+      if(sq_getstackobj(vm, -1, &env) < 0) throw SquirrelError(parent_vm, name, "Couldn't get table from stack");
+      sq_addref(vm, &env); // FIXME: needs to be freed
+
+      // Create a completly empty environment and set delegate it to the roottable
+      sq_pushobject(vm, env); // table
+      sq_pushroottable(vm);   // table, root
+      sq_setdelegate(vm, -2); // table.set_delegate(root)
+      sq_pop(vm, 1);          //
+
+      sq_pushobject(vm, env);
+      sq_setroottable(vm);
+
+      // FIXME: Belongs in run(), but there we don't have the 'in' anymore
+      // Compile the script and push it on the stack
+      if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
+        throw SquirrelError(vm, name, "Couldn't parse script");
+
+      sq_pushroottable(vm);
+
+      // Start the script that was previously compiled
+      if (SQ_FAILED(sq_call(vm, 1, false, true)))
+        throw SquirrelError(vm, name, "SquirrelThread::run(): Couldn't start script");
+    }
+}
+
+SquirrelThread::~SquirrelThread()
+{
+  sq_release(vm, &vm_obj);  
+}
+
+void
+SquirrelThread::set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout)
+{
+  set_wakeup_event(ScriptManager::WakeupData(event), timeout);
+}
+
+void
+SquirrelThread::set_wakeup_event(const ScriptManager::WakeupData& event, float timeout)
+{
+  waiting_for_events = event;
+
+  if (timeout < 0) 
+    {
+      wakeup_time = -1;
+    } 
+  else 
+    {
+      wakeup_time = game_time + timeout;
+    }
+}
+
+void
+SquirrelThread::fire_wakeup_event(const ScriptManager::WakeupData& event)
+{ 
+  if (waiting_for_events.type == event.type && 
+      waiting_for_events.type != ScriptManager::NO_EVENT)
+    {
+      switch (event.type)
+        {
+          case ScriptManager::GAMEOBJECT_DONE:
+            if (waiting_for_events.game_object == event.game_object)
+              {
+                wakeup_time = game_time;
+              }
+            break;
+
+          default:
+            wakeup_time = game_time;
+            break;
+        }
+    }
+}
+
+void
+SquirrelThread::update()
+{
+  int vm_state = sq_getvmstate(vm);
+    
+  switch(vm_state)
+    {
+      case SQ_VMSTATE_SUSPENDED:
+        if (wakeup_time > 0 && 
+            game_time >= wakeup_time) 
+          {
+            waiting_for_events = ScriptManager::WakeupData(ScriptManager::NO_EVENT);
+
+            try 
+              {
+                // Try to return a value
+                sq_pushinteger(vm, 45); 
+                if (sq_wakeupvm(vm, SQTrue, SQTrue, SQTrue) < 0)
+                  {
+                    throw SquirrelError(vm, name, "Couldn't resume script");
+                  }
+              }
+            catch(std::exception& e) 
+              {
+                std::cerr << "Problem executing script: " << e.what() << "\n";
+              }
+          }
+        break;
+
+      case SQ_VMSTATE_IDLE:
+        break;
+
+      case SQ_VMSTATE_RUNNING: // FIXME: Can this happen without multithreading?
+        break;
+
+      default: 
+        assert(!"never reached");
+    }
+}
+
+bool
+SquirrelThread::is_suspended() const
+{
+  int vm_state = sq_getvmstate(vm);
+  return vm_state == SQ_VMSTATE_SUSPENDED;
+}
+
+bool
+SquirrelThread::is_idle() const
+{
+  int vm_state = sq_getvmstate(vm);
+  return vm_state == SQ_VMSTATE_IDLE;
+}
+
+void
+SquirrelThread::call(const std::string& function)
+{
+  sq_pushroottable(vm);
+
+  //std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
+  sq_getdelegate(vm, -1);
+  //std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
+  sq_pop(vm, 1);
+
+  // Lookup the function in the roottable and put it on the stack
+  sq_pushstring(vm, function.c_str(), -1);
+  if (SQ_SUCCEEDED(sq_get(vm, -2)))
+    {
+      // Call the function
+      sq_pushroottable(vm); // 'this' (function environment object)
+      if (SQ_FAILED(sq_call(vm, 1, false, true)))
+        {
+          // FIXME: doesn't this mess up the stack?
+          throw SquirrelError(vm, name, "SquirrelThread: couldn't call '" + function + "'");
+        }
+
+      // Cleanup
+      sq_pop(vm, 2); //pops the roottable and the function
+    }
+  else
+    {
+      sq_pop(vm, 1); //pops the roottable
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/engine/squirrel_thread.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/engine/squirrel_thread.hpp (from rev 2632, trunk/windstille/src/engine/squirrel_vm.hpp)
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -0,0 +1,61 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
+#define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
+
+#include <string>
+#include <squirrel.h>
+
+#include "script_manager.hpp"
+
+class SquirrelThread
+{
+private:
+  std::string name;
+  HSQUIRRELVM parent_vm;
+  HSQUIRRELVM vm;
+  HSQOBJECT   vm_obj;
+    
+  ScriptManager::WakeupData  waiting_for_events;
+  float       wakeup_time;
+
+public:
+  SquirrelThread(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
+  ~SquirrelThread();
+
+  void set_wakeup_event(const ScriptManager::WakeupData&  event, float timeout = -1);
+  void set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout = -1);
+
+  void fire_wakeup_event(const ScriptManager::WakeupData& event);
+
+  /** Resumes the evaluation of the VM if a wakeup has happened.
+      \return false when the VM is done and can be removed */
+  void update();
+
+  bool is_suspended() const;
+  bool is_idle() const;
+
+  std::string get_name() const { return name; }
+  HSQUIRRELVM get_vm() const { return vm; }
+  void call(const std::string& function);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/engine/squirrel_thread.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/windstille/src/engine/squirrel_vm.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/squirrel_vm.cpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -1,230 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "scripting/util.hpp"
-#include "scripting/squirrel_error.hpp"
-#include "squirrel_vm.hpp"
-
-using Scripting::SquirrelError;
-
-static SQInteger squirrel_read_char(SQUserPointer file)
-{
-  std::istream* in = reinterpret_cast<std::istream*> (file);
-
-  char c = in->get();
-
-  if (in->eof())
-    return 0;
-  else
-    return c;
-}
-
-SquirrelVM::SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm)
-  : name(arg_name),
-    parent_vm(parent_vm),
-    waiting_for_events(ScriptManager::NO_EVENT),
-    wakeup_time(0)
-{
-  vm = sq_newthread(parent_vm, 1024);
-
-  if (vm == 0)
-    {
-      throw SquirrelError(vm, name, "Couldn't create new VM");
-    }
-  else
-    {
-      // retrieve reference to thread from stack and increase refcounter
-
-      // Init the object
-      sq_resetobject(&vm_obj);
-
-      // store thread created by sq_newthread into vm_obj
-      if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
-        {
-          throw SquirrelError(parent_vm, name, "Couldn't get coroutine vm from stack");
-        }
-      else
-        {
-          // Add reference and remove object from stack
-          sq_addref(parent_vm, &vm_obj);
-          sq_pop(parent_vm, 1);
-        }
-      
-      HSQOBJECT env;
-      sq_resetobject(&env);
-
-      sq_newtable(vm);
-      if(sq_getstackobj(vm, -1, &env) < 0) throw SquirrelError(parent_vm, name, "Couldn't get table from stack");
-      sq_addref(vm, &env); // FIXME: needs to be freed
-
-      // Create a completly empty environment and set delegate it to the roottable
-      sq_pushobject(vm, env); // table
-      sq_pushroottable(vm);   // table, root
-      sq_setdelegate(vm, -2); // table.set_delegate(root)
-      sq_pop(vm, 1);          //
-
-      sq_pushobject(vm, env);
-      sq_setroottable(vm);
-
-      // FIXME: Belongs in run(), but there we don't have the 'in' anymore
-      // Compile the script and push it on the stack
-      if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
-        throw SquirrelError(vm, name, "Couldn't parse script");
-
-      sq_pushroottable(vm);
-
-      // Start the script that was previously compiled
-      if (SQ_FAILED(sq_call(vm, 1, false, true)))
-        throw SquirrelError(vm, name, "SquirrelVM::run(): Couldn't start script");
-    }
-}
-
-SquirrelVM::~SquirrelVM()
-{
-  sq_release(vm, &vm_obj);  
-}
-
-void
-SquirrelVM::set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout)
-{
-  set_wakeup_event(ScriptManager::WakeupData(event), timeout);
-}
-
-void
-SquirrelVM::set_wakeup_event(const ScriptManager::WakeupData& event, float timeout)
-{
-  waiting_for_events = event;
-
-  if (timeout < 0) 
-    {
-      wakeup_time = -1;
-    } 
-  else 
-    {
-      wakeup_time = game_time + timeout;
-    }
-}
-
-void
-SquirrelVM::fire_wakeup_event(const ScriptManager::WakeupData& event)
-{ 
-  if (waiting_for_events.type == event.type && 
-      waiting_for_events.type != ScriptManager::NO_EVENT)
-    {
-      switch (event.type)
-        {
-          case ScriptManager::GAMEOBJECT_DONE:
-            if (waiting_for_events.game_object == event.game_object)
-              {
-                wakeup_time = game_time;
-              }
-            break;
-
-          default:
-            wakeup_time = game_time;
-            break;
-        }
-    }
-}
-
-void
-SquirrelVM::update()
-{
-  int vm_state = sq_getvmstate(vm);
-    
-  switch(vm_state)
-    {
-      case SQ_VMSTATE_SUSPENDED:
-        if (wakeup_time > 0 && 
-            game_time >= wakeup_time) 
-          {
-            waiting_for_events = ScriptManager::WakeupData(ScriptManager::NO_EVENT);
-
-            try 
-              {
-                // Try to return a value
-                sq_pushinteger(vm, 45); 
-                if (sq_wakeupvm(vm, SQTrue, SQTrue, SQTrue) < 0)
-                  {
-                    throw SquirrelError(vm, name, "Couldn't resume script");
-                  }
-              }
-            catch(std::exception& e) 
-              {
-                std::cerr << "Problem executing script: " << e.what() << "\n";
-              }
-          }
-        break;
-
-      case SQ_VMSTATE_IDLE:
-        break;
-
-      case SQ_VMSTATE_RUNNING: // FIXME: Can this happen without multithreading?
-        break;
-
-      default: 
-        assert(!"never reached");
-    }
-}
-
-bool
-SquirrelVM::is_suspended() const
-{
-  int vm_state = sq_getvmstate(vm);
-  return vm_state == SQ_VMSTATE_SUSPENDED;
-}
-
-bool
-SquirrelVM::is_idle() const
-{
-  int vm_state = sq_getvmstate(vm);
-  return vm_state == SQ_VMSTATE_IDLE;
-}
-
-void
-SquirrelVM::call(const std::string& function)
-{
-  sq_pushroottable(vm);
-
-  //std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
-  sq_getdelegate(vm, -1);
-  //std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
-  sq_pop(vm, 1);
-
-  // Lookup the function in the roottable and put it on the stack
-  sq_pushstring(vm, function.c_str(), -1);
-  if (SQ_SUCCEEDED(sq_get(vm, -2)))
-    {
-      // Call the function
-      sq_pushroottable(vm); // 'this' (function environment object)
-      if (SQ_FAILED(sq_call(vm, 1, false, true)))
-        {
-          // FIXME: doesn't this mess up the stack?
-          throw SquirrelError(vm, name, "SquirrelVM: couldn't call '" + function + "'");
-        }
-
-      // Cleanup
-      sq_pop(vm, 2); //pops the roottable and the function
-    }
-  else
-    {
-      sq_pop(vm, 1); //pops the roottable
-    }
-}
-
-/* EOF */

Deleted: trunk/windstille/src/engine/squirrel_vm.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/engine/squirrel_vm.hpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -1,61 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Matthias Braun <matze at braunis.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
-#define HEADER_WINDSTILLE_ENGINE_SQUIRREL_VM_HPP
-
-#include <string>
-#include <squirrel.h>
-
-#include "script_manager.hpp"
-
-class SquirrelVM
-{
-private:
-  std::string name;
-  HSQUIRRELVM parent_vm;
-  HSQUIRRELVM vm;
-  HSQOBJECT   vm_obj;
-    
-  ScriptManager::WakeupData  waiting_for_events;
-  float       wakeup_time;
-
-public:
-  SquirrelVM(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
-  ~SquirrelVM();
-
-  void set_wakeup_event(const ScriptManager::WakeupData&  event, float timeout = -1);
-  void set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout = -1);
-
-  void fire_wakeup_event(const ScriptManager::WakeupData& event);
-
-  /** Resumes the evaluation of the VM if a wakeup has happened.
-      \return false when the VM is done and can be removed */
-  void update();
-
-  bool is_suspended() const;
-  bool is_idle() const;
-
-  std::string get_name() const { return name; }
-  HSQUIRRELVM get_vm() const { return vm; }
-  void call(const std::string& function);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-10 21:05:31 UTC (rev 2632)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-11 00:08:11 UTC (rev 2633)
@@ -33,7 +33,7 @@
 #include "hud/pda.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "display/display.hpp"
-#include "engine/squirrel_vm.hpp"
+#include "engine/squirrel_thread.hpp"
 #include "hud/controller_help_window.hpp"
 
 namespace Scripting
@@ -126,7 +126,7 @@
 
 void wait(HSQUIRRELVM vm, float time)
 {
-  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
 
   if (ptr.get())
     {
@@ -136,7 +136,7 @@
 
 void wait_for_dialog(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
 
   if (ptr.get())
     {
@@ -146,7 +146,7 @@
 
 void wait_for_camera(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
 
   if (ptr.get())
     {
@@ -156,7 +156,7 @@
 
 void wait_for_fade(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
 
   if (ptr.get())
     {
@@ -254,7 +254,7 @@
 
 void wait_for_conversation(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelVM> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
 
   if (ptr.get())
     {



From grumbel at mail.berlios.de  Wed Mar 11 03:17:20 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 03:17:20 +0100
Subject: [Windstille-commit] r2634 - in trunk/windstille/src: engine
	scripting
Message-ID: <200903110217.n2B2HKpl013412@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 03:17:19 +0100 (Wed, 11 Mar 2009)
New Revision: 2634

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/util.cpp
Log:
Cleaned up SquirrelThread and fixed some bugs

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -29,7 +29,7 @@
 #include <sqstdmath.h>
 #include <sqstdstring.h>
 
-#include "squirrel_vm.hpp"
+#include "squirrel_thread.hpp"
 #include "app/console.hpp"
 #include "scripting/wrapper.hpp"
 #include "scripting/util.hpp"
@@ -161,7 +161,7 @@
       // Look if the VM is associated with the source file
       for(SquirrelThreads::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i)
         {
-          if ((*i)->get_name() == filename)
+          if ((*i)->get_filename() == filename)
             {
               it = i;
               break;
@@ -183,7 +183,7 @@
         }
       else
         { // Add VM to the list of VMs
-          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(in, filename, vm)));     
+          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm, in, filename)));     
           squirrel_vms.back()->call("init");
           squirrel_vms.back()->call("run");
           return squirrel_vms.back();
@@ -201,11 +201,11 @@
 }
 
 boost::shared_ptr<SquirrelThread>
-ScriptManager::get_vm(HSQUIRRELVM v) const
+ScriptManager::get_thread(HSQUIRRELVM v) const
 {
   for(SquirrelThreads::const_iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) 
     {
-      if ((*i)->get_vm() == v)
+      if ((*i)->get_thread() == v)
         return *i;
     }
 

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -87,7 +87,7 @@
 
   HSQUIRRELVM get_vm() const { return vm; }
 
-  boost::shared_ptr<SquirrelThread> get_vm(HSQUIRRELVM v) const;
+  boost::shared_ptr<SquirrelThread> get_thread(HSQUIRRELVM v) const;
 
   void fire_wakeup_event(WakeupEvent event);
   void fire_wakeup_event(WakeupData  event);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -47,7 +47,7 @@
 #include "objects/scriptable_object.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "scripting/squirrel_error.hpp"
-#include "squirrel_vm.hpp"
+#include "squirrel_thread.hpp"
 
 #include "sector.hpp"
 

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -18,7 +18,7 @@
 
 #include "scripting/util.hpp"
 #include "scripting/squirrel_error.hpp"
-#include "squirrel_vm.hpp"
+#include "squirrel_thread.hpp"
 
 using Scripting::SquirrelError;
 
@@ -34,69 +34,97 @@
     return c;
 }
 
-SquirrelThread::SquirrelThread(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm)
-  : name(arg_name),
-    parent_vm(parent_vm),
-    waiting_for_events(ScriptManager::NO_EVENT),
-    wakeup_time(0)
+void
+SquirrelThread::create_thread()
 {
-  vm = sq_newthread(parent_vm, 1024);
+  assert(!thread);
 
-  if (vm == 0)
+  thread = sq_newthread(parent_vm, 1024);  // create thread and store it on the stack
+
+  if (thread == 0)
     {
-      throw SquirrelError(vm, name, "Couldn't create new VM");
+      throw SquirrelError(thread, filename, "Couldn't create new THREAD");
     }
   else
-    {
-      // retrieve reference to thread from stack and increase refcounter
+    { // Create a HSQOBJECT to hold a reference to the thread
 
-      // Init the object
-      sq_resetobject(&vm_obj);
+      sq_resetobject(&thread_obj); // init the object
 
-      // store thread created by sq_newthread into vm_obj
-      if(sq_getstackobj(parent_vm, -1, &vm_obj) < 0)
+      // store thread created by sq_newthread into thread_obj
+      if (sq_getstackobj(parent_vm, -1, &thread_obj) < 0)
         {
-          throw SquirrelError(parent_vm, name, "Couldn't get coroutine vm from stack");
+          throw SquirrelError(parent_vm, filename, "Couldn't get coroutine thread from stack");
         }
       else
         {
-          // Add reference and remove object from stack
-          sq_addref(parent_vm, &vm_obj);
-          sq_pop(parent_vm, 1);
+          sq_addref(parent_vm, &thread_obj); // add reference
+          sq_pop(parent_vm, 1); // remove the thread from the stack
         }
-      
-      HSQOBJECT env;
-      sq_resetobject(&env);
+    }
+}
 
-      sq_newtable(vm);
-      if(sq_getstackobj(vm, -1, &env) < 0) throw SquirrelError(parent_vm, name, "Couldn't get table from stack");
-      sq_addref(vm, &env); // FIXME: needs to be freed
+SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm, std::istream& in, const std::string& filename)
+  : filename(filename),
+    parent_vm(parent_vm),
+    thread(0),
+    oldtop(-1),
+    waiting_for_events(ScriptManager::NO_EVENT),
+    wakeup_time(0)
+{
+  create_thread();
 
-      // Create a completly empty environment and set delegate it to the roottable
-      sq_pushobject(vm, env); // table
-      sq_pushroottable(vm);   // table, root
-      sq_setdelegate(vm, -2); // table.set_delegate(root)
-      sq_pop(vm, 1);          //
+  { // create a local environment for the thread
+    HSQOBJECT env;
+    sq_resetobject(&env);
 
-      sq_pushobject(vm, env);
-      sq_setroottable(vm);
+    sq_newtable(thread);
 
-      // FIXME: Belongs in run(), but there we don't have the 'in' anymore
-      // Compile the script and push it on the stack
-      if(sq_compile(vm, squirrel_read_char, &in, name.c_str(), true) < 0)
-        throw SquirrelError(vm, name, "Couldn't parse script");
+    // store the object in env
+    if(sq_getstackobj(thread, -1, &env) < 0) 
+      {
+        throw SquirrelError(parent_vm, filename, "couldn't get table from stack");
+      }
+    else
+      {
+        {
+          sq_addref(thread, &env); 
+          sq_pop(thread, 1); // remove env from stack
+    
+          // set old roottable as delegate on env
+          sq_pushobject(thread, env); // push env
+          sq_pushroottable(thread);   // [env, root]
+          sq_setdelegate(thread, -2); // env.set_delegate(root)
+          sq_pop(thread, 1);          // pop env
 
-      sq_pushroottable(vm);
+          // set env as new roottable
+          sq_pushobject(thread, env);
+          sq_setroottable(thread);
 
-      // Start the script that was previously compiled
-      if (SQ_FAILED(sq_call(vm, 1, false, true)))
-        throw SquirrelError(vm, name, "SquirrelThread::run(): Couldn't start script");
+          sq_release(thread, &env);
+        }
+      }
+  }
+
+  // compile the script and push it on the stack
+  if(sq_compile(thread, squirrel_read_char, &in, filename.c_str(), SQTrue) < 0)
+    throw SquirrelError(thread, filename, "Couldn't parse script");
+
+  // start the script that was previously compiled
+  sq_pushroottable(thread);
+  if (SQ_FAILED(sq_call(thread, 1, SQFalse, SQTrue)))
+    {
+      sq_pop(thread, 1); // pop the compiled closure
+      throw SquirrelError(thread, filename, "SquirrelThread::run(): Couldn't start script");
     }
+  else
+    {
+      sq_pop(thread, 1); // pop the compiled closure
+    }
 }
 
 SquirrelThread::~SquirrelThread()
 {
-  sq_release(vm, &vm_obj);  
+  sq_release(parent_vm, &thread_obj);
 }
 
 void
@@ -145,24 +173,36 @@
 void
 SquirrelThread::update()
 {
-  int vm_state = sq_getvmstate(vm);
+  int thread_state = sq_getvmstate(thread);
     
-  switch(vm_state)
+  switch(thread_state)
     {
       case SQ_VMSTATE_SUSPENDED:
-        if (wakeup_time > 0 && 
-            game_time >= wakeup_time) 
+        if (wakeup_time > 0 && game_time >= wakeup_time)
           {
             waiting_for_events = ScriptManager::WakeupData(ScriptManager::NO_EVENT);
 
             try 
               {
+                std::cout << "Before: WakeUp: " << std::endl;
+                Scripting::print_squirrel_stack(thread);
+
                 // Try to return a value
-                sq_pushinteger(vm, 45); 
-                if (sq_wakeupvm(vm, SQTrue, SQTrue, SQTrue) < 0)
+                if (sq_wakeupvm(thread, SQFalse, SQFalse, SQTrue) < 0)
                   {
-                    throw SquirrelError(vm, name, "Couldn't resume script");
+                    throw SquirrelError(thread, filename, "Couldn't resume script");
                   }
+                else
+                  {
+                    if(sq_getvmstate(thread) == SQ_VMSTATE_IDLE) 
+                      { // Cleanup stack
+                        std::cout << "XXXXXXXX Cleanup stack" << std::endl;
+                        sq_settop(thread, oldtop);
+                      }
+                  }
+               
+                std::cout << "After: WakeUp: " << std::endl;
+                Scripting::print_squirrel_stack(thread);
               }
             catch(std::exception& e) 
               {
@@ -185,46 +225,65 @@
 bool
 SquirrelThread::is_suspended() const
 {
-  int vm_state = sq_getvmstate(vm);
-  return vm_state == SQ_VMSTATE_SUSPENDED;
+  int thread_state = sq_getvmstate(thread);
+  return thread_state == SQ_VMSTATE_SUSPENDED;
 }
 
 bool
 SquirrelThread::is_idle() const
 {
-  int vm_state = sq_getvmstate(vm);
-  return vm_state == SQ_VMSTATE_IDLE;
+  int thread_state = sq_getvmstate(thread);
+  return thread_state == SQ_VMSTATE_IDLE;
 }
 
 void
 SquirrelThread::call(const std::string& function)
 {
-  sq_pushroottable(vm);
+  if (0)
+    { // Debug stuff that prints the current roottable and its delegate
+      sq_pushroottable(thread);
+      std::cout << ".------------------------------------------" << std::endl;
+      std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(thread, -1) << "\n}}}" << std::endl;
+      sq_getdelegate(thread, -1);
+      std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(thread, -1) << "\n}}}" << std::endl;
+      sq_pop(thread, 2);
+      std::cout << "'------------------------------------------" << std::endl;
+    }
 
-  //std::cout << "################\nRootTable:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
-  sq_getdelegate(vm, -1);
-  //std::cout << "################\nDelegate:\n{{{" << Scripting::squirrel2string(vm, -1) << "\n}}}" << std::endl;
-  sq_pop(vm, 1);
+  std::cout << "SquirrelThread::call(\"" << function << "\")" << std::endl;
 
+  oldtop = sq_gettop(thread);
+
   // Lookup the function in the roottable and put it on the stack
-  sq_pushstring(vm, function.c_str(), -1);
-  if (SQ_SUCCEEDED(sq_get(vm, -2)))
+  sq_pushroottable(thread);
+  sq_pushstring(thread, function.c_str(), -1);
+  if (SQ_SUCCEEDED(sq_get(thread, -2)))
     {
-      // Call the function
-      sq_pushroottable(vm); // 'this' (function environment object)
-      if (SQ_FAILED(sq_call(vm, 1, false, true)))
+      sq_pushroottable(thread);
+
+      if (SQ_FAILED(sq_call(thread, 1, SQFalse, SQTrue)))
         {
-          // FIXME: doesn't this mess up the stack?
-          throw SquirrelError(vm, name, "SquirrelThread: couldn't call '" + function + "'");
+          sq_settop(thread, oldtop);
+          throw SquirrelError(thread, filename, "SquirrelThread: couldn't call '" + function + "'");
         }
-
-      // Cleanup
-      sq_pop(vm, 2); //pops the roottable and the function
+      else
+        {
+          if(sq_getvmstate(thread) != SQ_VMSTATE_SUSPENDED) 
+            {
+              sq_settop(thread, oldtop);
+            }
+        }
     }
   else
     {
-      sq_pop(vm, 1); //pops the roottable
+      sq_settop(thread, oldtop);
+
+      if (1)
+        std::cout << filename << ": Function '" << function << "' not found in roottable" << std::endl;
     }
+
+  std::cout << "Call: " << function << std::endl;
+  Scripting::print_squirrel_stack(thread);
 }
 
 /* EOF */

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -27,16 +27,20 @@
 class SquirrelThread
 {
 private:
-  std::string name;
+  std::string filename;
   HSQUIRRELVM parent_vm;
-  HSQUIRRELVM vm;
-  HSQOBJECT   vm_obj;
+  HSQUIRRELVM thread;
+  HSQOBJECT   thread_obj;
+
+  SQInteger oldtop;
     
   ScriptManager::WakeupData  waiting_for_events;
   float       wakeup_time;
 
+  void create_thread();
+
 public:
-  SquirrelThread(std::istream& in, const std::string& arg_name, HSQUIRRELVM parent_vm);
+  SquirrelThread(HSQUIRRELVM parent_vm, std::istream& in, const std::string& arg_name);
   ~SquirrelThread();
 
   void set_wakeup_event(const ScriptManager::WakeupData&  event, float timeout = -1);
@@ -51,9 +55,13 @@
   bool is_suspended() const;
   bool is_idle() const;
 
-  std::string get_name() const { return name; }
-  HSQUIRRELVM get_vm() const { return vm; }
+  std::string get_filename() const { return filename; }
+  HSQUIRRELVM get_thread() const { return thread; }
   void call(const std::string& function);
+
+private:
+  SquirrelThread(const SquirrelThread&);
+  SquirrelThread& operator=(const SquirrelThread&);
 };
 
 #endif

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -126,7 +126,7 @@
 
 void wait(HSQUIRRELVM vm, float time)
 {
-  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
     {
@@ -136,7 +136,7 @@
 
 void wait_for_dialog(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
     {
@@ -146,7 +146,7 @@
 
 void wait_for_camera(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
     {
@@ -156,7 +156,7 @@
 
 void wait_for_fade(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
     {
@@ -254,7 +254,7 @@
 
 void wait_for_conversation(HSQUIRRELVM vm)
 {
-  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_vm(vm);
+  boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);
 
   if (ptr.get())
     {

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-03-11 00:08:11 UTC (rev 2633)
+++ trunk/windstille/src/scripting/util.cpp	2009-03-11 02:17:19 UTC (rev 2634)
@@ -223,10 +223,10 @@
 
 void print_squirrel_stack(HSQUIRRELVM v)
 {
-    printf("--------------------------------------------------------------\n");
+    printf(",-------------------------------------------------------------\n");
     int count = sq_gettop(v);
     for(int i = 1; i <= count; ++i) {
-        printf("%d: ",i);
+        printf("| %d: ",i);
         switch(sq_gettype(v, i))
         {
             case OT_NULL:
@@ -286,7 +286,7 @@
         }
         printf("\n");
     }
-    printf("--------------------------------------------------------------\n");
+    printf("'-------------------------------------------------------------\n");
 }
 
 void load_squirrel_table(HSQUIRRELVM v, int table_idx, const lisp::Lisp* lisp)



From grumbel at mail.berlios.de  Wed Mar 11 04:01:08 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 04:01:08 +0100
Subject: [Windstille-commit] r2635 - trunk/windstille/data/sectors/apartment
Message-ID: <200903110301.n2B318WH020729@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 04:01:08 +0100 (Wed, 11 Mar 2009)
New Revision: 2635

Modified:
   trunk/windstille/data/sectors/apartment/yagor.nut
Log:
Added init() function

Modified: trunk/windstille/data/sectors/apartment/yagor.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/yagor.nut	2009-03-11 02:17:19 UTC (rev 2634)
+++ trunk/windstille/data/sectors/apartment/yagor.nut	2009-03-11 03:01:08 UTC (rev 2635)
@@ -1,3 +1,9 @@
+function init()
+{
+  yagor <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
+  jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
+}
+
 function run()
 {
   cutscene_begin();
@@ -3,7 +9,4 @@
   wait(1);
 
-  yagor <- Dialog(TOP, "Yagor", "images/portraits/yagor.sprite");
-  jane  <- Dialog(TOP, "Jane", "images/portraits/jane.sprite");
-
   yagor.show("How are you?<sleep>\nEverything fine today?");
   jane.show("Jep, thanks for asking. Buts its a bit dark here. Do you have a flashlight?");
@@ -12,6 +15,7 @@
   fadeout();
   wait_for_fade();
   fadein();
+
   yagor.show("Here it is.");
   jane.show("Ok, thanks, time to explore this apartment a bit.");
 



From grumbel at mail.berlios.de  Wed Mar 11 14:40:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 14:40:56 +0100
Subject: [Windstille-commit] r2636 - trunk/windstille/data/sectors/apartment
Message-ID: <200903111340.n2BDeucv028065@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 14:40:55 +0100 (Wed, 11 Mar 2009)
New Revision: 2636

Added:
   trunk/windstille/data/sectors/apartment/flicker.nut
Modified:
   trunk/windstille/data/sectors/apartment/init.nut
Log:
Added light flicker script

Added: trunk/windstille/data/sectors/apartment/flicker.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/flicker.nut	2009-03-11 03:01:08 UTC (rev 2635)
+++ trunk/windstille/data/sectors/apartment/flicker.nut	2009-03-11 13:40:55 UTC (rev 2636)
@@ -0,0 +1,15 @@
+function run()
+{
+  while (true)
+    {
+        wait(0.1)
+        objects.lamp3.set_active(false);
+        wait(0.1)
+        objects.lamp3.set_active(true);
+        wait(0.1)
+        objects.lamp3.set_active(false);
+        wait(0.1)
+        objects.lamp3.set_active(true);
+        wait(1.0)
+    }
+}

Modified: trunk/windstille/data/sectors/apartment/init.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/init.nut	2009-03-11 03:01:08 UTC (rev 2635)
+++ trunk/windstille/data/sectors/apartment/init.nut	2009-03-11 13:40:55 UTC (rev 2636)
@@ -1,2 +1,5 @@
+function run() {
+  spawn_script("flicker.nut");
+}
 
 /* EOF */



From grumbel at mail.berlios.de  Wed Mar 11 15:20:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 15:20:56 +0100
Subject: [Windstille-commit] r2637 - in trunk/windstille: . data/scripts
	src/engine src/scripting
Message-ID: <200903111420.n2BEKuN6002153@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 15:20:55 +0100 (Wed, 11 Mar 2009)
New Revision: 2637

Modified:
   trunk/windstille/TODO
   trunk/windstille/data/scripts/windstille.nut
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/scripting/util.hpp
Log:
Removed/improved some debugging output, fixed stack polution when executing global scripts

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/TODO	2009-03-11 14:20:55 UTC (rev 2637)
@@ -10,8 +10,18 @@
 Scripting
 =========
 
-* add a way to print content of stack
+* ScriptableObject is a bad name, since all objects should be
+  scriptable in one form or another
 
+* add typechecking to __custom functions in miniswig, something like
+  this might work:
+
+  void foobar(HSQUIRRELVM vm) __custom("if")
+
+  where the string is in the syntax of sq_setparamscheck()
+
+* implement more advanced tab-completion for console
+
 * miniswig does not support __suspend with a return value, should be
   fixed, since Squirrel can handle it. Trouble is that the return
   value is created by the sq_wakeupvm() call, not by the
@@ -25,8 +35,12 @@
   scripts, in some situation it might make more sense to attach the
   script directly to the object that sends the signal
 
-* some functions in scripts require '::' before them so that they can
-  be found, not quite clear why or exactly when this happens
+* some functions in data/scripts/windstille.nut require '::' before
+  them so that they can be found, not quite clear why or exactly when
+  this happens, seems to happen only in classes, not in normal
+  function, in theory at least they should get resolved by delegation
+  from the current environment to the roottable, but that doesn't
+  happen
 
 * objects are currently all exported to squirrel, while we should
   probally use id-tags and accessor functions instead:
@@ -73,6 +87,8 @@
 Miscellaneous
 =============
 
+* When starting sector directly from command line, "Return to title screen" doesn't work
+
 * console doesn't adopt to screen size
 
 * add support for dynamic resize to Menu's, currently Menus have
@@ -186,7 +202,23 @@
   buffer call's when it is busy, once no longer busy it would pick the
   next task from the stack. Different scripts could use different
   stack behaviour, i.e. in the lamp_sequence() it would be useful to
-  have a task-stack of size 1 and discard everything else
+  have a task-stack of size 1 and discard everything else.
+
+  In addition to spawning a script, it would be good if there would be
+  a way to spawn an object or a function, since that way the logic can
+  be kept in one file.
+
+  spawn_function(function() {
+     obj <- FoobarObject();
+     obj.run();
+  })
+
+* implement a door with two segments that slide sideways when the door
+  opens, think about how that can be implemented properly in scripting
+  (two parallel events that have to be waited for)
+
+  -> a solution in scripting isn't a good idea here, this is something
+     that would be much better solved by a 2D animation system
   
 
 Random Things

Modified: trunk/windstille/data/scripts/windstille.nut
===================================================================
--- trunk/windstille/data/scripts/windstille.nut	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/data/scripts/windstille.nut	2009-03-11 14:20:55 UTC (rev 2637)
@@ -103,8 +103,8 @@
 
 function add_dialog(align, character, portrait, text)
 {
-  ::dialog_show(align, character, portrait, text);
-  ::wait_for_dialog();  
+  dialog_show(align, character, portrait, text);
+  wait_for_dialog();  
 }
 
 /* Some debugging/testing stuff */

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-11 14:20:55 UTC (rev 2637)
@@ -81,32 +81,36 @@
     {
       // register default error handlers
       sqstd_seterrorhandlers(vm);
-      // register squirrel libs
-      sq_pushroottable(vm);
 
-      /* FIXME: None of these should be needed for scripts
+      { // register squirrel libs in the root table
+        
+        sq_pushroottable(vm);
+      
+        /* FIXME: None of these should be needed for scripts
 
-         if(sqstd_register_bloblib(v) < 0)
-         throw SquirrelError(v, "Couldn't register blob lib");
+           if(SQ_FAILED(sqstd_register_bloblib(v)))
+           throw SquirrelError(v, "Couldn't register blob lib");
 
-         if(sqstd_register_iolib(v) < 0)
-         throw SquirrelError(v, "Couldn't register io lib");
+           if(SQ_FAILED(sqstd_register_iolib(v)))
+           throw SquirrelError(v, "Couldn't register io lib");
 
-         if(sqstd_register_systemlib(v) < 0)
-         throw SquirrelError(v, "Couldn't register system lib");
-      */
+           if(SQ_FAILED(sqstd_register_systemlib(v)))
+           throw SquirrelError(v, "Couldn't register system lib");
+        */
 
-      if(sqstd_register_mathlib(vm) < 0)
-        throw SquirrelError(vm, "Couldn't register math lib");
+        if(SQ_FAILED(sqstd_register_mathlib(vm)))
+          throw SquirrelError(vm, "Couldn't register math lib");
 
-      if(sqstd_register_stringlib(vm) < 0)
-        throw SquirrelError(vm, "Couldn't register string lib");
+        if(SQ_FAILED(sqstd_register_stringlib(vm)))
+          throw SquirrelError(vm, "Couldn't register string lib");
 
-      // register print function
-      sq_setprintfunc(vm, printfunc);
+        // register print function
+        sq_setprintfunc(vm, printfunc);
   
-      // register windstille API
-      Scripting::register_windstille_wrapper(vm);
+        // register windstille API
+        Scripting::register_windstille_wrapper(vm);
+        sq_pop(vm, 1);
+      }
 
       // Create the empty "objects" table
       sq_pushroottable(vm);
@@ -145,14 +149,20 @@
 
       // Execute the script
       if (SQ_FAILED(sq_call(vm, 1, false, true)))
-        throw SquirrelError(vm, "SquirrelThread::run(): " + filename + ": Couldn't start script");
-
-      if (sq_getvmstate(vm) != SQ_VMSTATE_IDLE)
         {
-          throw std::runtime_error("ScriptManager::run_script(): " + filename + ": global scripts must not suspend");
+          throw SquirrelError(vm, "SquirrelThread::run(): " + filename + ": Couldn't start script");
         }
+      else
+        {
+          sq_pop(vm, 1);
 
-      return boost::shared_ptr<SquirrelThread>();
+          if (sq_getvmstate(vm) != SQ_VMSTATE_IDLE)
+            {
+              throw std::runtime_error("ScriptManager::run_script(): '" + filename + "': global scripts must not suspend");
+            }
+
+          return boost::shared_ptr<SquirrelThread>();
+        }
     }
   else
     {

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-11 14:20:55 UTC (rev 2637)
@@ -184,9 +184,6 @@
 
             try 
               {
-                std::cout << "Before: WakeUp: " << std::endl;
-                Scripting::print_squirrel_stack(thread);
-
                 // Try to return a value
                 if (sq_wakeupvm(thread, SQFalse, SQFalse, SQTrue) < 0)
                   {
@@ -196,13 +193,9 @@
                   {
                     if(sq_getvmstate(thread) == SQ_VMSTATE_IDLE) 
                       { // Cleanup stack
-                        std::cout << "XXXXXXXX Cleanup stack" << std::endl;
                         sq_settop(thread, oldtop);
                       }
                   }
-               
-                std::cout << "After: WakeUp: " << std::endl;
-                Scripting::print_squirrel_stack(thread);
               }
             catch(std::exception& e) 
               {
@@ -250,7 +243,7 @@
       std::cout << "'------------------------------------------" << std::endl;
     }
 
-  std::cout << "SquirrelThread::call(\"" << function << "\")" << std::endl;
+  //std::cout << "SquirrelThread::call(\"" << function << "\")" << std::endl;
 
   oldtop = sq_gettop(thread);
 
@@ -278,12 +271,9 @@
     {
       sq_settop(thread, oldtop);
 
-      if (1)
+      if (0)
         std::cout << filename << ": Function '" << function << "' not found in roottable" << std::endl;
     }
-
-  std::cout << "Call: " << function << std::endl;
-  Scripting::print_squirrel_stack(thread);
 }
 
 /* EOF */

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-11 14:20:55 UTC (rev 2637)
@@ -369,7 +369,7 @@
 
 void spawn_script(const std::string& filename)
 {
-  ScriptManager::current()->run_script_file(filename);
+  ScriptManager::current()->run_script_file(Sector::current()->get_directory() + filename);
 }
 
 } // namespace Scripting

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/src/scripting/util.cpp	2009-03-11 14:20:55 UTC (rev 2637)
@@ -17,6 +17,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include <sstream>
 #include <memory>
 
@@ -118,175 +119,180 @@
   std::ostringstream os;
   switch(sq_gettype(v, i))
     {
-    case OT_NULL:
-      os << "<null>";        
-      break;
-    case OT_BOOL: {
-      SQBool p;
-      sq_getbool(v, i, &p);
-      if (p) 
-        os << "true";
-      else
-        os << "false";
-      break;
-    }
-    case OT_INTEGER: {
-      SQInteger val;
-      sq_getinteger(v, i, &val);
-      os << val;
-      break;
-    }
-    case OT_FLOAT: {
-      float val;
-      sq_getfloat(v, i, &val);
-      os << val;
-      break;
-    }
-    case OT_STRING: {
-      const char* val;
-      sq_getstring(v, i, &val);
-      os << "\"" << val << "\"";
-      break;    
-    }
-    case OT_TABLE: {
-      bool first = true;
-      os << "{";
-      sq_pushnull(v);  //null iterator
-      while(SQ_SUCCEEDED(sq_next(v,i-1)))
-        {
-          if (!first) {
-            os << ", \n";
-          }
-          first = false;
+      case OT_NULL:
+        os << "<null>";        
+        break;
+      case OT_BOOL: {
+        SQBool p;
+        sq_getbool(v, i, &p);
+        if (p) 
+          os << "true";
+        else
+          os << "false";
+        break;
+      }
+      case OT_INTEGER: {
+        SQInteger val;
+        sq_getinteger(v, i, &val);
+        os << val;
+        break;
+      }
+      case OT_FLOAT: {
+        float val;
+        sq_getfloat(v, i, &val);
+        os << val;
+        break;
+      }
+      case OT_STRING: {
+        const char* val;
+        sq_getstring(v, i, &val);
+        os << "\"" << val << "\"";
+        break;    
+      }
+      case OT_TABLE: {
+        bool first = true;
+        os << "{";
+        sq_pushnull(v);  //null iterator
+        while(SQ_SUCCEEDED(sq_next(v,i-1)))
+          {
+            if (!first) {
+              os << ", \n";
+            }
+            first = false;
 
-          //here -1 is the value and -2 is the key
-          os << squirrel2string(v, -2) << " => " 
-             << squirrel2string(v, -1);
+            //here -1 is the value and -2 is the key
+            os << squirrel2string(v, -2) << " => " 
+               << squirrel2string(v, -1);
                               
-          sq_pop(v,2); //pops key and val before the nex iteration
-        }
-      sq_pop(v, 1);
-      os << "}";
-      break;
-    }
-    case OT_ARRAY: {
-      bool first = true;
-      os << "[";
-      sq_pushnull(v);  //null iterator
-      while(SQ_SUCCEEDED(sq_next(v,i-1)))
-        {
-          if (!first) {
-            os << ", ";
+            sq_pop(v,2); //pops key and val before the nex iteration
           }
-          first = false;
+        sq_pop(v, 1);
+        os << "}";
+        break;
+      }
+      case OT_ARRAY: {
+        bool first = true;
+        os << "[";
+        sq_pushnull(v);  //null iterator
+        while(SQ_SUCCEEDED(sq_next(v,i-1)))
+          {
+            if (!first) {
+              os << ", ";
+            }
+            first = false;
 
-          //here -1 is the value and -2 is the key
-          // we ignore the key, since that is just the index in an array
-          os << squirrel2string(v, -1);
+            //here -1 is the value and -2 is the key
+            // we ignore the key, since that is just the index in an array
+            os << squirrel2string(v, -1);
                               
-          sq_pop(v,2); //pops key and val before the nex iteration
-        }
-      sq_pop(v, 1);
-      os << "]";
-      break;
+            sq_pop(v,2); //pops key and val before the nex iteration
+          }
+        sq_pop(v, 1);
+        os << "]";
+        break;
+      }
+      case OT_USERDATA:
+        os << "<userdata>";
+        break;
+      case OT_CLOSURE:        
+        os << "<closure (function)>";
+        break;
+      case OT_NATIVECLOSURE:
+        os << "<native closure (C function)>";
+        break;
+      case OT_GENERATOR:
+        os << "<generator>";
+        break;
+      case OT_USERPOINTER:
+        os << "userpointer";
+        break;
+      case OT_THREAD:
+        os << "<thread>";
+        break;
+      case OT_CLASS:
+        os << "<class>";
+        break;
+      case OT_INSTANCE:
+        os << "<instance>";
+        break;
+      default:
+        os << "<unknown>";
+        break;
     }
-    case OT_USERDATA:
-      os << "<userdata>";
-      break;
-    case OT_CLOSURE:        
-      os << "<closure (function)>";
-      break;
-    case OT_NATIVECLOSURE:
-      os << "<native closure (C function)>";
-      break;
-    case OT_GENERATOR:
-      os << "<generator>";
-      break;
-    case OT_USERPOINTER:
-      os << "userpointer";
-      break;
-    case OT_THREAD:
-      os << "<thread>";
-      break;
-    case OT_CLASS:
-      os << "<class>";
-      break;
-    case OT_INSTANCE:
-      os << "<instance>";
-      break;
-    default:
-      os << "<unknown>";
-      break;
-    }
   return os.str();
 }
 
-void print_squirrel_stack(HSQUIRRELVM v)
+void print_squirrel_stack(HSQUIRRELVM v, const std::string& context)
 {
+  if (context.empty())
     printf(",-------------------------------------------------------------\n");
-    int count = sq_gettop(v);
-    for(int i = 1; i <= count; ++i) {
-        printf("| %d: ",i);
-        switch(sq_gettype(v, i))
+  else
+    printf(",-------------[ %s ]---------------------------------------\n", context.c_str());
+
+  int count = sq_gettop(v);
+  for(int i = 1; i <= count; ++i) 
+    {
+      printf("| %d: ",i);
+      switch(sq_gettype(v, i))
         {
-            case OT_NULL:
-                printf("null");        
-                break;
-            case OT_INTEGER: {
-                SQInteger val;
-                sq_getinteger(v, i, &val);
-                printf("integer (%d)", static_cast<int>(val));
-                break;
-            }
-            case OT_FLOAT: {
-                float val;
-                sq_getfloat(v, i, &val);
-                printf("float (%f)", val);
-                break;
-            }
-            case OT_STRING: {
-                const char* val;
-                sq_getstring(v, i, &val);
-                printf("string (%s)", val);
-                break;    
-            }
-            case OT_TABLE:
-                printf("table");
-                break;
-            case OT_ARRAY:
-                printf("array");
-                break;
-            case OT_USERDATA:
-                printf("userdata");
-                break;
-            case OT_CLOSURE:        
-                printf("closure(function)");    
-                break;
-            case OT_NATIVECLOSURE:
-                printf("native closure(C function)");
-                break;
-            case OT_GENERATOR:
-                printf("generator");
-                break;
-            case OT_USERPOINTER:
-                printf("userpointer");
-                break;
-            case OT_THREAD:
-                printf("thread");
-                break;
-            case OT_CLASS:
-                printf("class");
-                break;
-            case OT_INSTANCE:
-                printf("instance");
-                break;
-            default:
-                printf("unknown?!?");
-                break;
+          case OT_NULL:
+            printf("null");        
+            break;
+          case OT_INTEGER: {
+            SQInteger val;
+            sq_getinteger(v, i, &val);
+            printf("integer (%d)", static_cast<int>(val));
+            break;
+          }
+          case OT_FLOAT: {
+            float val;
+            sq_getfloat(v, i, &val);
+            printf("float (%f)", val);
+            break;
+          }
+          case OT_STRING: {
+            const char* val;
+            sq_getstring(v, i, &val);
+            printf("string (%s)", val);
+            break;    
+          }
+          case OT_TABLE:
+            printf("table");
+            break;
+          case OT_ARRAY:
+            printf("array");
+            break;
+          case OT_USERDATA:
+            printf("userdata");
+            break;
+          case OT_CLOSURE:        
+            printf("closure(function)");    
+            break;
+          case OT_NATIVECLOSURE:
+            printf("native closure(C function)");
+            break;
+          case OT_GENERATOR:
+            printf("generator");
+            break;
+          case OT_USERPOINTER:
+            printf("userpointer");
+            break;
+          case OT_THREAD:
+            printf("thread");
+            break;
+          case OT_CLASS:
+            printf("class");
+            break;
+          case OT_INSTANCE:
+            printf("instance");
+            break;
+          default:
+            printf("unknown?!?");
+            break;
         }
-        printf("\n");
+      printf("\n");
     }
-    printf("'-------------------------------------------------------------\n");
+  printf("'-------------------------------------------------------------\n");
 }
 
 void load_squirrel_table(HSQUIRRELVM v, int table_idx, const lisp::Lisp* lisp)

Modified: trunk/windstille/src/scripting/util.hpp
===================================================================
--- trunk/windstille/src/scripting/util.hpp	2009-03-11 13:40:55 UTC (rev 2636)
+++ trunk/windstille/src/scripting/util.hpp	2009-03-11 14:20:55 UTC (rev 2637)
@@ -36,7 +36,7 @@
 std::string sq_to_lisp_string(std::string sq_str);
 std::string squirrel2string(HSQUIRRELVM v, int i);
 
-void print_squirrel_stack(HSQUIRRELVM v);
+void print_squirrel_stack(HSQUIRRELVM v, const std::string& context = std::string());
 
 
 // serialisation



From grumbel at mail.berlios.de  Wed Mar 11 18:14:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 18:14:45 +0100
Subject: [Windstille-commit] r2638 - in trunk/windstille/src: app hud
	scripting
Message-ID: <200903111714.n2BHEjtj012947@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 18:14:44 +0100 (Wed, 11 Mar 2009)
New Revision: 2638

Modified:
   trunk/windstille/src/app/controller_def.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/controller_help_window.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Made ControllerHelpWindow a little more useful

Modified: trunk/windstille/src/app/controller_def.hpp
===================================================================
--- trunk/windstille/src/app/controller_def.hpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/app/controller_def.hpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -40,6 +40,8 @@
     PRIMARY_BUTTON,   // used to ok a dialog or for running
     SECONDARY_BUTTON, // used to cancel a dialog or for jumping
     TERTIARY_BUTTON,  // used to cancel a dialog or for jumping
+    QUATERNARY_BUTTON, 
+
     PDA_BUTTON,       // display the PDA
     INVENTORY_BUTTON, // display inventory button
     
@@ -61,7 +63,9 @@
 
 #define JUMP_BUTTON   PRIMARY_BUTTON
 #define RUN_BUTTON    TERTIARY_BUTTON
-#define USE_BUTTON    SECONDARY_BUTTON
+#define USE_BUTTON    QUATERNARY_BUTTON
+#define CRAWL_BUTTON  SECONDARY_BUTTON
+
 #define OK_BUTTON     PRIMARY_BUTTON
 #define CANCEL_BUTTON SECONDARY_BUTTON
 

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -169,9 +169,10 @@
   ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
 
   { // Fill controller_description with data
-    controller_description.add_button("primary-button",   PRIMARY_BUTTON);
-    controller_description.add_button("secondary-button", SECONDARY_BUTTON);
-    controller_description.add_button("tertiary-button",  TERTIARY_BUTTON);
+    controller_description.add_button("primary-button",    PRIMARY_BUTTON);
+    controller_description.add_button("secondary-button",  SECONDARY_BUTTON);
+    controller_description.add_button("tertiary-button",   TERTIARY_BUTTON);
+    controller_description.add_button("quaternary-button", QUATERNARY_BUTTON);
 
     controller_description.add_button("menu-up-button",   MENU_UP_BUTTON);
     controller_description.add_button("menu-down-button", MENU_DOWN_BUTTON);

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -25,91 +25,83 @@
 
 ControllerHelpWindow* ControllerHelpWindow::current_ = 0;
 
-class ControllerHelpWindowImpl
-{
-public:
-  std::auto_ptr<TextArea> text_area;
-  bool active;
-};
-
 ControllerHelpWindow::ControllerHelpWindow()
-  : impl(new ControllerHelpWindowImpl)
 {
   current_ = this;
-  int width  = 200;
-  int height = 120;
-  
-  impl->active = false;
-  impl->text_area = std::auto_ptr<TextArea>(new TextArea(Rect(Point(Display::get_width() - width - 16,
-                                                                    Display::get_height() - height - 16),
-                                                              Size(width, height)), false));
-  impl->text_area->set_font(Fonts::ttffont);
-  impl->text_area->set_text("Control Help\n"
-                            "------------\n"
-                            "walk: left/right\n"
-                            "duck: down\n\n"
-                            "primary/run:    s\n"
-                            "secondary/jump: d\n"
-                            "tertiary:       a\n"
-                            "pda:            w\n"
-                            );
 }
 
 void
+ControllerHelpWindow::draw_button(const Vector2f& pos, bool pressed)
+{  
+  if (pressed)
+    {
+      Display::fill_circle(pos, 12.0f, Color(0.8f, 0.0f, 0.0f));
+      Display::draw_circle(pos, 12.0f, Color(1.0f, 0.0f, 0.0f));
+    }
+  else
+    {
+      Display::fill_circle(pos, 12.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
+      Display::draw_circle(pos, 12.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+    }
+}
+
+void
+ControllerHelpWindow::draw_stick(const Vector2f& pos, bool pressed, float x, float y)
+{
+  Size size(75, 75);
+  Rectf rect(pos - Vector2f(size.width, size.height)/2, size);
+
+  Display::fill_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
+  Display::draw_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+  Vector2f stick_pos(rect.left + rect.get_width()/2  + x * (rect.get_width()-16.0f)/2,
+                     rect.top  + rect.get_height()/2 + y * (rect.get_width()-16.0f)/2);
+
+  if (pressed)
+    Display::fill_circle(stick_pos, 10.0f, Color(0.8f, 0, 0));
+  else
+    Display::fill_circle(stick_pos, 10.0f, Color(1.0f, 0, 0, 0.25f));
+
+  Display::draw_circle(stick_pos, 10.0f, Color(1.0f, 0, 0)); 
+}
+
+void
 ControllerHelpWindow::draw()
 {
-  if (!impl->active)
-    return;
-    
-  const Rectf& rect = impl->text_area->get_rect().grow(8.0f);
+  const Controller& controller = InputManager::get_controller();
 
-  Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
-  Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
-  impl->text_area->draw();
+  Display::fill_rounded_rect(Rectf(50, 50, 400, 250), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9));
+  Display::draw_rounded_rect(Rectf(50, 50, 400, 250), 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
-  Controller controller = InputManager::get_controller();
-  
-  Rectf crect(Vector2f(rect.right - 100, rect.top - 100 - 8.0f),
-              Size(100, 100));
+  draw_stick(Vector2f(100, 100),
+             controller.get_button_state(VIEW_CENTER_BUTTON),
+             controller.get_axis_state(X_AXIS),
+             controller.get_axis_state(Y_AXIS));
 
-  Display::fill_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
-  Display::draw_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  draw_stick(Vector2f(300, 200),
+             controller.get_button_state(VIEW_CENTER_BUTTON),
+             controller.get_axis_state(X2_AXIS),
+             controller.get_axis_state(Y2_AXIS));
 
-  Vector2f pos(crect.left + crect.get_width()/2  + controller.get_axis_state(X_AXIS) * (crect.get_width()-16.0f)/2,
-             crect.top  + crect.get_height()/2 + controller.get_axis_state(Y_AXIS)   * (crect.get_width()-16.0f)/2);
+  draw_button(Vector2f(175, 100), controller.get_button_state(INVENTORY_BUTTON));
+  draw_button(Vector2f(275, 100), controller.get_button_state(PAUSE_BUTTON));
 
-  Display::fill_circle(pos, 10.0f, Color(0.8f, 0, 0));
-  Display::draw_circle(pos, 10.0f, Color(1.0f, 0, 0));
+  Vector2f face_pos(350, 100);
+  draw_button(face_pos + Vector2f(  0,  25), controller.get_button_state(PRIMARY_BUTTON));
+  draw_button(face_pos + Vector2f (25,   0), controller.get_button_state(SECONDARY_BUTTON));
+  draw_button(face_pos + Vector2f(-25,   0), controller.get_button_state(TERTIARY_BUTTON));
+  draw_button(face_pos + Vector2f(  0, -25), controller.get_button_state(QUATERNARY_BUTTON));
 
-  for(int i = 0; i < 6; ++i)
-    {
-      if (controller.get_button_state(i))
-        {
-          Display::fill_circle(Vector2f(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f, Color(0.8f, 0, 0));
-          Display::draw_circle(Vector2f(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f, Color(1.0f, 0.0f, 0.0f));
-        }
-      else
-        {
-          Display::fill_circle(Vector2f(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
-          Display::draw_circle(Vector2f(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f,  Color(1.0f, 1.0f, 1.0f, 0.5f));
-        }
-    }
+  Vector2f dpad_pos(150, 200);
+  draw_button(dpad_pos + Vector2f(  0,  25), controller.get_button_state(MENU_DOWN_BUTTON));
+  draw_button(dpad_pos + Vector2f (25,   0), controller.get_button_state(MENU_RIGHT_BUTTON));
+  draw_button(dpad_pos + Vector2f(-25,   0), controller.get_button_state(MENU_LEFT_BUTTON));
+  draw_button(dpad_pos + Vector2f(  0, -25), controller.get_button_state(MENU_UP_BUTTON));
 }
 
 void
 ControllerHelpWindow::update(float delta, const Controller& )
 {
-  impl->text_area->update(delta);
 }
 
-void
-ControllerHelpWindow::set_active(bool active)
-{
-  impl->active = active;
-}
-
 /* EOF */

Modified: trunk/windstille/src/hud/controller_help_window.hpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.hpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/hud/controller_help_window.hpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -27,12 +27,16 @@
 /** */
 class ControllerHelpWindow : public Screen
 {
+private:
+  void draw_button(const Vector2f& pos, bool pressed);
+  void draw_stick(const Vector2f& pos, bool pressed, float x, float y);
+  
 public:
   ControllerHelpWindow(); 
 
   void draw();
   void update(float delta, const Controller& controller);
-  void set_active(bool active);
+
   static ControllerHelpWindow* current() { return current_; }
 
 private:

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -119,11 +119,6 @@
     Camera::current()->set_mode(Camera::CAMERA_INACTIVE);
 }
 
-void set_controller_help_active(bool active)
-{
-  ControllerHelpWindow::current()->set_active(active);
-}
-
 void wait(HSQUIRRELVM vm, float time)
 {
   boost::shared_ptr<SquirrelThread> ptr = ScriptManager::current()->get_thread(vm);

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -46,7 +46,6 @@
 
 void camera_set_pos(float x, float y);
 void camera_set_zoom(float z);
-void set_controller_help_active(bool active);
 
 // dialog alignment constants
 static const int VCENTER = 0x00;

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-11 14:20:55 UTC (rev 2637)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-11 17:14:44 UTC (rev 2638)
@@ -776,29 +776,6 @@
 
 }
 
-static SQInteger set_controller_help_active_wrapper(HSQUIRRELVM vm)
-{
-  SQBool arg0;
-  if(SQ_FAILED(sq_getbool(vm, 2, &arg0))) {
-    sq_throwerror(vm, _SC("Argument 1 not a bool"));
-    return SQ_ERROR;
-  }
-
-  try {
-    Scripting::set_controller_help_active(arg0 == SQTrue);
-
-    return 0;
-
-  } catch(std::exception& e) {
-    sq_throwerror(vm, e.what());
-    return SQ_ERROR;
-  } catch(...) {
-    sq_throwerror(vm, _SC("Unexpected exception while executing function 'set_controller_help_active'"));
-    return SQ_ERROR;
-  }
-
-}
-
 static SQInteger speech_show_wrapper(HSQUIRRELVM vm)
 {
   const SQChar* arg0;
@@ -1834,13 +1811,6 @@
     throw SquirrelError(v, "Couldn't register function 'camera_set_zoom'");
   }
 
-  sq_pushstring(v, "set_controller_help_active", -1);
-  sq_newclosure(v, &set_controller_help_active_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
-  if(SQ_FAILED(sq_createslot(v, -3))) {
-    throw SquirrelError(v, "Couldn't register function 'set_controller_help_active'");
-  }
-
   sq_pushstring(v, "speech_show", -1);
   sq_newclosure(v, &speech_show_wrapper, 0);
   sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s f|i f|i ");



From grumbel at mail.berlios.de  Wed Mar 11 18:27:40 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 18:27:40 +0100
Subject: [Windstille-commit] r2639 - trunk/windstille/src/hud
Message-ID: <200903111727.n2BHReux015385@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 18:27:40 +0100 (Wed, 11 Mar 2009)
New Revision: 2639

Modified:
   trunk/windstille/src/hud/controller_help_window.cpp
Log:
Moved ControllerHelpWindow into bottom/right

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 17:14:44 UTC (rev 2638)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 17:27:40 UTC (rev 2639)
@@ -70,33 +70,36 @@
 {
   const Controller& controller = InputManager::get_controller();
 
-  Display::fill_rounded_rect(Rectf(50, 50, 400, 250), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9));
-  Display::draw_rounded_rect(Rectf(50, 50, 400, 250), 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  Vector2f pos(Display::get_width()  - 350 - 16, 
+               Display::get_height() - 200 - 16);
 
-  draw_stick(Vector2f(100, 100),
+  Display::fill_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9));
+  Display::draw_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+  draw_stick(pos + Vector2f(50, 50),
              controller.get_button_state(VIEW_CENTER_BUTTON),
              controller.get_axis_state(X_AXIS),
              controller.get_axis_state(Y_AXIS));
 
-  draw_stick(Vector2f(300, 200),
+  draw_stick(pos + Vector2f(250, 150),
              controller.get_button_state(VIEW_CENTER_BUTTON),
              controller.get_axis_state(X2_AXIS),
              controller.get_axis_state(Y2_AXIS));
 
-  draw_button(Vector2f(175, 100), controller.get_button_state(INVENTORY_BUTTON));
-  draw_button(Vector2f(275, 100), controller.get_button_state(PAUSE_BUTTON));
+  draw_button(pos + Vector2f(125, 50), controller.get_button_state(INVENTORY_BUTTON));
+  draw_button(pos + Vector2f(225, 50), controller.get_button_state(PAUSE_BUTTON));
 
-  Vector2f face_pos(350, 100);
-  draw_button(face_pos + Vector2f(  0,  25), controller.get_button_state(PRIMARY_BUTTON));
-  draw_button(face_pos + Vector2f (25,   0), controller.get_button_state(SECONDARY_BUTTON));
-  draw_button(face_pos + Vector2f(-25,   0), controller.get_button_state(TERTIARY_BUTTON));
-  draw_button(face_pos + Vector2f(  0, -25), controller.get_button_state(QUATERNARY_BUTTON));
+  Vector2f face_pos(300, 50);
+  draw_button(pos + face_pos + Vector2f(  0,  25), controller.get_button_state(PRIMARY_BUTTON));
+  draw_button(pos + face_pos + Vector2f (25,   0), controller.get_button_state(SECONDARY_BUTTON));
+  draw_button(pos + face_pos + Vector2f(-25,   0), controller.get_button_state(TERTIARY_BUTTON));
+  draw_button(pos + face_pos + Vector2f(  0, -25), controller.get_button_state(QUATERNARY_BUTTON));
 
-  Vector2f dpad_pos(150, 200);
-  draw_button(dpad_pos + Vector2f(  0,  25), controller.get_button_state(MENU_DOWN_BUTTON));
-  draw_button(dpad_pos + Vector2f (25,   0), controller.get_button_state(MENU_RIGHT_BUTTON));
-  draw_button(dpad_pos + Vector2f(-25,   0), controller.get_button_state(MENU_LEFT_BUTTON));
-  draw_button(dpad_pos + Vector2f(  0, -25), controller.get_button_state(MENU_UP_BUTTON));
+  Vector2f dpad_pos(100, 150);
+  draw_button(pos + dpad_pos + Vector2f(  0,  25), controller.get_button_state(MENU_DOWN_BUTTON));
+  draw_button(pos + dpad_pos + Vector2f (25,   0), controller.get_button_state(MENU_RIGHT_BUTTON));
+  draw_button(pos + dpad_pos + Vector2f(-25,   0), controller.get_button_state(MENU_LEFT_BUTTON));
+  draw_button(pos + dpad_pos + Vector2f(  0, -25), controller.get_button_state(MENU_UP_BUTTON));
 }
 
 void



From grumbel at mail.berlios.de  Wed Mar 11 21:01:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 21:01:24 +0100
Subject: [Windstille-commit] r2640 - in trunk/windstille: data/controller
	src/app src/hud src/input src/screen
Message-ID: <200903112001.n2BK1OXZ022548@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 21:01:22 +0100 (Wed, 11 Mar 2009)
New Revision: 2640

Modified:
   trunk/windstille/data/controller/xboxdrv.scm
   trunk/windstille/src/app/controller_def.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/hud/controller_help_window.hpp
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/controller.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Extended ControllerHelpWindow to all Xbox360 gamepad buttons, added some support for trigger, renamed event macros to physical names

Modified: trunk/windstille/data/controller/xboxdrv.scm
===================================================================
--- trunk/windstille/data/controller/xboxdrv.scm	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/data/controller/xboxdrv.scm	2009-03-11 20:01:22 UTC (rev 2640)
@@ -8,17 +8,22 @@
  (x2-axis (joystick-axis (device 0)  (axis 2)))
  (y2-axis (joystick-axis (device 0)  (axis 3)))
 
- (view-center-button (joystick-button (device 0)  (button 10)))
+ (left-trigger-axis   (joystick-axis (device 0)  (axis 5)))
+ (right-trigger-axis  (joystick-axis (device 0)  (axis 4)))
 
+ (left-stick-button  (joystick-button (device 0)  (button  9)))
+ (right-stick-button (joystick-button (device 0)  (button 10)))
+
  (primary-button    (joystick-button (device 0)  (button 0)))
  (secondary-button  (joystick-button (device 0)  (button 1)))
  (tertiary-button   (joystick-button (device 0)  (button 2)))
+ (quaternary-button (joystick-button (device 0)  (button 3)))
 
- (pda-button        (joystick-button (device 0)  (button 3)))
+ (left-shoulder-button    (joystick-button (device 0)  (button 4)))
+ (right-shoulder-button   (joystick-button (device 0)  (button 5)))
 
- (aim-button        (joystick-button (device 0)  (button 5)))
- (pause-button      (joystick-button (device 0)  (button 7)))
- (inventory-button  (joystick-button (device 0)  (button 6)))
+ (select-button     (joystick-button (device 0)  (button 6)))
+ (start-button      (joystick-button (device 0)  (button 7)))
 
  ;; allow to use the dpad for menu navigation
  (menu-up-button    (joystick-axis-button (device 0) (axis 7) (up #t)))

Modified: trunk/windstille/src/app/controller_def.hpp
===================================================================
--- trunk/windstille/src/app/controller_def.hpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/app/controller_def.hpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -29,25 +29,29 @@
     MOUSE_MOTION_X, 
     MOUSE_MOTION_Y, 
 
-    X_AXIS, // used to run left/right
-    Y_AXIS,  // used to aim up/down
+    X_AXIS,
+    Y_AXIS,
 
     X2_AXIS,
     Y2_AXIS, 
-    
-    VIEW_CENTER_BUTTON,
 
-    PRIMARY_BUTTON,   // used to ok a dialog or for running
-    SECONDARY_BUTTON, // used to cancel a dialog or for jumping
-    TERTIARY_BUTTON,  // used to cancel a dialog or for jumping
-    QUATERNARY_BUTTON, 
+    LEFT_STICK_BUTTON,    
+    RIGHT_STICK_BUTTON,
 
-    PDA_BUTTON,       // display the PDA
-    INVENTORY_BUTTON, // display inventory button
+    PRIMARY_BUTTON,
+    SECONDARY_BUTTON,
+    TERTIARY_BUTTON,
+    QUATERNARY_BUTTON,
+
+    LEFT_SHOULDER_BUTTON,
+    RIGHT_SHOULDER_BUTTON,
+
+    LEFT_TRIGGER_AXIS,
+    RIGHT_TRIGGER_AXIS,
+
+    SELECT_BUTTON,
+    START_BUTTON,
     
-    PAUSE_BUTTON,     // used to pause the game
-    AIM_BUTTON,       // used to draw the gun and aim
-
     // Keys for menu navigation, they come with hardcoded defaults for
     // the keyboard, a joystick might emmit them as well
     ESCAPE_BUTTON,
@@ -61,6 +65,7 @@
     LAST_EVENT
   };
 
+// Map the physical buttons to logical names
 #define JUMP_BUTTON   PRIMARY_BUTTON
 #define RUN_BUTTON    TERTIARY_BUTTON
 #define USE_BUTTON    QUATERNARY_BUTTON
@@ -69,6 +74,13 @@
 #define OK_BUTTON     PRIMARY_BUTTON
 #define CANCEL_BUTTON SECONDARY_BUTTON
 
+#define VIEW_CENTER_BUTTON RIGHT_STICK_BUTTON
+#define PAUSE_BUTTON       START_BUTTON
+#define PDA_BUTTON         SELECT_BUTTON
+
+#define INVENTORY_BUTTON   LEFT_SHOULDER_BUTTON
+#define AIM_BUTTON         RIGHT_SHOULDER_BUTTON
+
 extern ControllerDescription controller_description;
 
 #endif

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -169,24 +169,33 @@
   ScriptManager::current()->run_script_file("scripts/windstille.nut", true);
 
   { // Fill controller_description with data
+    
+    // DPad
+    controller_description.add_button("menu-up-button",    MENU_UP_BUTTON);
+    controller_description.add_button("menu-down-button",  MENU_DOWN_BUTTON);
+    controller_description.add_button("menu-left-button",  MENU_LEFT_BUTTON);
+    controller_description.add_button("menu-right-button", MENU_RIGHT_BUTTON);
+
+    // Face Button
     controller_description.add_button("primary-button",    PRIMARY_BUTTON);
     controller_description.add_button("secondary-button",  SECONDARY_BUTTON);
     controller_description.add_button("tertiary-button",   TERTIARY_BUTTON);
     controller_description.add_button("quaternary-button", QUATERNARY_BUTTON);
 
-    controller_description.add_button("menu-up-button",   MENU_UP_BUTTON);
-    controller_description.add_button("menu-down-button", MENU_DOWN_BUTTON);
+    // Stick Buttons
+    controller_description.add_button("left-stick-button",  LEFT_STICK_BUTTON);
+    controller_description.add_button("right-stick-button", RIGHT_STICK_BUTTON);
 
-    controller_description.add_button("menu-left-button",  MENU_LEFT_BUTTON);
-    controller_description.add_button("menu-right-button", MENU_RIGHT_BUTTON);
-  
-    controller_description.add_button("view-center-button", VIEW_CENTER_BUTTON);
+    // Shoulder Button
+    controller_description.add_button("left-shoulder-button",  LEFT_SHOULDER_BUTTON);
+    controller_description.add_button("right-shoulder-button", RIGHT_SHOULDER_BUTTON);
 
-    controller_description.add_button("pda-button",       PDA_BUTTON);
-    controller_description.add_button("inventory-button", INVENTORY_BUTTON);
+    // Back/Start
+    controller_description.add_button("select-button",    SELECT_BUTTON);
+    controller_description.add_button("start-button",     START_BUTTON);
 
-    controller_description.add_button("aim-button",       AIM_BUTTON);
-    controller_description.add_button("pause-button",     PAUSE_BUTTON);
+    controller_description.add_axis("left-trigger-axis",  LEFT_TRIGGER_AXIS);
+    controller_description.add_axis("right-trigger-axis", RIGHT_TRIGGER_AXIS);
 
     controller_description.add_axis("x-axis", X_AXIS);
     controller_description.add_axis("y-axis", Y_AXIS);

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include <memory>
 #include "input/input_manager.hpp"
 #include "display/display.hpp"
@@ -66,6 +67,23 @@
 }
 
 void
+ControllerHelpWindow::draw_trigger(const Vector2f& pos, float value)
+{
+  Sizef size(60, 20);
+  Rectf rect(pos - Vector2f(size.width/2, size.height/2), size);
+
+  Display::fill_rect(rect,  Color(1.0f, 1.0f, 1.0f, 0.2f));
+  
+  if (value > 0.0f)
+    Display::fill_rect(Rectf(Vector2f(rect.left, rect.top),
+                                     Sizef(rect.get_width() * value,
+                                           rect.get_height())),
+                       Color(1.0f, 0.0f, 0.0f));
+
+  Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+}
+
+void
 ControllerHelpWindow::draw()
 {
   const Controller& controller = InputManager::get_controller();
@@ -76,20 +94,26 @@
   Display::fill_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(0.0f, 0.0f, 0.25f, 0.9));
   Display::draw_rounded_rect(Rectf(pos, Sizef(350, 200)), 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
-  draw_stick(pos + Vector2f(50, 50),
-             controller.get_button_state(VIEW_CENTER_BUTTON),
+  draw_stick(pos + Vector2f(50, 75),
+             controller.get_button_state(LEFT_STICK_BUTTON),
              controller.get_axis_state(X_AXIS),
              controller.get_axis_state(Y_AXIS));
 
   draw_stick(pos + Vector2f(250, 150),
-             controller.get_button_state(VIEW_CENTER_BUTTON),
+             controller.get_button_state(RIGHT_STICK_BUTTON),
              controller.get_axis_state(X2_AXIS),
              controller.get_axis_state(Y2_AXIS));
 
-  draw_button(pos + Vector2f(125, 50), controller.get_button_state(INVENTORY_BUTTON));
-  draw_button(pos + Vector2f(225, 50), controller.get_button_state(PAUSE_BUTTON));
+  draw_trigger(pos + Vector2f(45,  20), controller.get_trigger_state(LEFT_TRIGGER_AXIS));
+  draw_trigger(pos + Vector2f(305, 20), controller.get_trigger_state(RIGHT_TRIGGER_AXIS));
 
-  Vector2f face_pos(300, 50);
+  draw_button(pos + Vector2f(125, 75), controller.get_button_state(SELECT_BUTTON));
+  draw_button(pos + Vector2f(225, 75), controller.get_button_state(START_BUTTON));
+
+  draw_button(pos + Vector2f(100, 22), controller.get_button_state(LEFT_SHOULDER_BUTTON));
+  draw_button(pos + Vector2f(250, 22), controller.get_button_state(RIGHT_SHOULDER_BUTTON));
+
+  Vector2f face_pos(300, 75);
   draw_button(pos + face_pos + Vector2f(  0,  25), controller.get_button_state(PRIMARY_BUTTON));
   draw_button(pos + face_pos + Vector2f (25,   0), controller.get_button_state(SECONDARY_BUTTON));
   draw_button(pos + face_pos + Vector2f(-25,   0), controller.get_button_state(TERTIARY_BUTTON));

Modified: trunk/windstille/src/hud/controller_help_window.hpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.hpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/hud/controller_help_window.hpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -30,6 +30,7 @@
 private:
   void draw_button(const Vector2f& pos, bool pressed);
   void draw_stick(const Vector2f& pos, bool pressed, float x, float y);
+  void draw_trigger(const Vector2f& pos, float value);
   
 public:
   ControllerHelpWindow(); 

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/input/controller.cpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -28,6 +28,24 @@
 }
 
 float
+Controller::get_trigger_state(int name) const
+{
+  float value = get_axis_state(name)/2.0f + 0.5f;
+  if (value < 0.001f)
+    {
+      return 0;
+    }
+  else if (value > 0.999f)
+    {
+      return 1.0f;
+    }
+  else
+    {
+      return value;
+    }
+}
+
+float
 Controller::get_axis_state(int id) const
 {
   assert(id < int(states.size()));

Modified: trunk/windstille/src/input/controller.hpp
===================================================================
--- trunk/windstille/src/input/controller.hpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/input/controller.hpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -42,6 +42,7 @@
 public:
   Controller();
 
+  float get_trigger_state(int name) const;
   float get_axis_state  (int name) const;
   bool  get_button_state(int name) const;
   float get_ball_state  (int name) const;

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -85,8 +85,6 @@
 
   Color fade_color;
 
-  // GUI Elements
-  ControllerHelpWindow controller_help_window;
   SpeechManager speech_manager;
 
   // Active GUI Elements
@@ -140,12 +138,6 @@
   // Render the scene to the screen
   sc.render();
 
-  if (!cutscene_mode)
-    {
-      // Draw HUD
-      controller_help_window.draw();
-    }
-
   if (cutscene_mode || cutscene_value > 0.0f)
     {
       int border_size = static_cast<int>(75 * cutscene_value);
@@ -259,7 +251,6 @@
           break;
         }
       
-      controller_help_window.update(delta, controller);
       speech_manager.update(delta, controller);
     }
 

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -32,6 +32,7 @@
 #include "input/input_configurator.hpp"
 #include "sound/sound_manager.hpp"
 #include "gui/gui_manager.hpp"
+#include "hud/controller_help_window.hpp"
 #include "screen_manager.hpp"
 
 // GUI Stuff, can be removed if gui is a bit better organised
@@ -50,13 +51,14 @@
 #endif
 
 ScreenManager screen_manager; 
-
+
 ScreenManager::ScreenManager()
   : time_counter(0),
     frame_counter(0),
     last_fps(0),
     overlap_delta(0),
-    do_quit(false)
+    do_quit(false),
+    show_controller_help_window(false)
 {
   screen_action = NONE;
   overlay_screen_action = NONE;
@@ -77,6 +79,8 @@
 
   ticks = SDL_GetTicks();
 
+  ControllerHelpWindow controller_help_window;
+
   while (!do_quit)
     {
       /// Amount of time the world moves forward each update(), this is
@@ -105,7 +109,7 @@
   
           delta -= step;
         }
-
+      
       overlap_delta = delta;
 
       SoundManager::current()->update();
@@ -116,6 +120,9 @@
       if (!overlay_screens.empty())
         overlay_screens.back()->draw();
 
+      if (show_controller_help_window)
+        controller_help_window.draw();
+
       console.draw();
 
       if (config.get_bool("show-fps"))
@@ -127,53 +134,53 @@
       // Commit any pending screen actions
       switch(overlay_screen_action)
         {
-        case PUSH_SCREEN:
-          overlay_screens.push_back(overlay_screen_screen);
-          overlay_screen_screen = boost::shared_ptr<Screen>();
-          break;
+          case PUSH_SCREEN:
+            overlay_screens.push_back(overlay_screen_screen);
+            overlay_screen_screen = boost::shared_ptr<Screen>();
+            break;
 
-        case POP_SCREEN:
-          if (overlay_screens.empty())
-            {
-              std::cout << "Error: ScreenManager: trying to pop_overlay with empty stack" << std::endl;
-            }
-          else
-            {
-              overlay_screens.pop_back();
-            }
-          break;
+          case POP_SCREEN:
+            if (overlay_screens.empty())
+              {
+                std::cout << "Error: ScreenManager: trying to pop_overlay with empty stack" << std::endl;
+              }
+            else
+              {
+                overlay_screens.pop_back();
+              }
+            break;
 
-        case CLEAR_SCREENS:
-          overlay_screens.clear();
-          break;
+          case CLEAR_SCREENS:
+            overlay_screens.clear();
+            break;
 
-        case NONE:
-          // nothing
-          break;
+          case NONE:
+            // nothing
+            break;
         }
       overlay_screen_action = NONE;
 
       switch(screen_action)
         {
-        case PUSH_SCREEN:
-          screens.push_back(screen_screen);
-          screen_screen = boost::shared_ptr<Screen>();
-          screens.back()->on_startup();
-          break;
-
-        case POP_SCREEN:
-          screens.pop_back();
-          if (!screens.empty())
+          case PUSH_SCREEN:
+            screens.push_back(screen_screen);
+            screen_screen = boost::shared_ptr<Screen>();
             screens.back()->on_startup();
-          break;
+            break;
 
-        case CLEAR_SCREENS:
-          screens.clear();
-          break;
+          case POP_SCREEN:
+            screens.pop_back();
+            if (!screens.empty())
+              screens.back()->on_startup();
+            break;
 
-        case NONE:
-          // nothing
-          break;
+          case CLEAR_SCREENS:
+            screens.clear();
+            break;
+
+          case NONE:
+            // nothing
+            break;
         }
       screen_action = NONE;
 
@@ -189,123 +196,127 @@
     {
       switch(event.type)
         {
-        case SDL_QUIT:
-          // FIXME: This should be a bit more gentle, but will do for now
-          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
-          quit();
-          break;
+          case SDL_QUIT:
+            // FIXME: This should be a bit more gentle, but will do for now
+            std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
+            quit();
+            break;
           
-        case SDL_ACTIVEEVENT:
-          // event.active
-          break;
+          case SDL_ACTIVEEVENT:
+            // event.active
+            break;
           
-        case SDL_VIDEORESIZE:
-          // event.resize
-          break;
+          case SDL_VIDEORESIZE:
+            // event.resize
+            break;
               
-        case SDL_VIDEOEXPOSE:
-          // event.expose
-          break;
+          case SDL_VIDEOEXPOSE:
+            // event.expose
+            break;
                 
-        case SDL_USEREVENT:
-          // event.user
-          break;
+          case SDL_USEREVENT:
+            // event.user
+            break;
                     
-        case SDL_SYSWMEVENT:
-          // event.syswm
-          break;
-          break;
+          case SDL_SYSWMEVENT:
+            // event.syswm
+            break;
+            break;
 
-        case SDL_KEYDOWN:
-        case SDL_KEYUP:
-          if (event.key.state)
-            {    
-              switch (event.key.keysym.sym)
-                {
-                case SDLK_F6:
-                  SDL_ShowCursor(SDL_ENABLE);   // SDL_ENABLE to show the mouse cursor (default)
-                  SDL_WM_GrabInput(SDL_GRAB_OFF); // SDL_GRAB_OFF to not grab input (default)
-                  break;
+          case SDL_KEYDOWN:
+          case SDL_KEYUP:
+            if (event.key.state)
+              {    
+                switch (event.key.keysym.sym)
+                  {
+                    case SDLK_F6:
+                      SDL_ShowCursor(SDL_ENABLE);   // SDL_ENABLE to show the mouse cursor (default)
+                      SDL_WM_GrabInput(SDL_GRAB_OFF); // SDL_GRAB_OFF to not grab input (default)
+                      break;
 
-                case SDLK_F7:
-                  SDL_ShowCursor(SDL_DISABLE);   // SDL_ENABLE to show the mouse cursor (default)
-                  SDL_WM_GrabInput(SDL_GRAB_ON); // SDL_GRAB_OFF to not grab input (default)
-                  break;
-      
-                case SDLK_F9:
-                  push_overlay(new InputConfigurator());
-                  break;
+                    case SDLK_F7:
+                      SDL_ShowCursor(SDL_DISABLE);   // SDL_ENABLE to show the mouse cursor (default)
+                      SDL_WM_GrabInput(SDL_GRAB_ON); // SDL_GRAB_OFF to not grab input (default)
+                      break;
+                  
+                    case SDLK_F8:
+                      show_controller_help_window = !show_controller_help_window;
+                      break;
 
-                case SDLK_F10:
-                  config.set_bool("show-fps", !config.get_bool("show-fps"));
-                  break;
+                    case SDLK_F9:
+                      push_overlay(new InputConfigurator());
+                      break;
+
+                    case SDLK_F10:
+                      config.set_bool("show-fps", !config.get_bool("show-fps"));
+                      break;
               
-                case SDLK_F11:
-                  config.set_bool("fullscreen", !config.get_bool("fullscreen"));
-                  Display::set_fullscreen(config.get_bool("fullscreen"));
-                  break;
+                    case SDLK_F11:
+                      config.set_bool("fullscreen", !config.get_bool("fullscreen"));
+                      Display::set_fullscreen(config.get_bool("fullscreen"));
+                      break;
               
 #ifndef WIN32
-                case SDLK_F12:
-                  {
-                    // FIXME: Replace this with Physfs stuff
-                    int count = 0;
-                    std::string filename;
-                    do {
-                      filename = (boost::format("/tmp/windstille%04d.png") % count).str();
-                      count += 1;
-                    } while(access(filename.c_str(), F_OK) == 0);
+                    case SDLK_F12:
+                      {
+                        // FIXME: Replace this with Physfs stuff
+                        int count = 0;
+                        std::string filename;
+                        do {
+                          filename = (boost::format("/tmp/windstille%04d.png") % count).str();
+                          count += 1;
+                        } while(access(filename.c_str(), F_OK) == 0);
 
-                    Display::save_screenshot(filename);
-                    console << "Writing screenshot to: '" << filename << "'" << std::endl;
-                  }
-                  break;
+                        Display::save_screenshot(filename);
+                        console << "Writing screenshot to: '" << filename << "'" << std::endl;
+                      }
+                      break;
 #endif
               
-                default:
-                  if (!console.is_active())
-                    {
-                      if (!overlay_screens.empty())
-                        overlay_screens.back()->handle_event(event);
-                      else if (!screens.empty())
-                        screens.back()->handle_event(event);
-                    }
-                  break;
-                }
-            }
+                    default:
+                      if (!console.is_active())
+                        {
+                          if (!overlay_screens.empty())
+                            overlay_screens.back()->handle_event(event);
+                          else if (!screens.empty())
+                            screens.back()->handle_event(event);
+                        }
+                      break;
+                  }
+              }
               
-          if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
-            {
-              console.activate();
-            }
-          else
-            {
-              if (InputManagerSDL::current())
-                InputManagerSDL::current()->on_event(event);
-            }
-          break;
+            if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
+              {
+                console.activate();
+              }
+            else
+              {
+                if (InputManagerSDL::current())
+                  InputManagerSDL::current()->on_event(event);
+              }
+            break;
 
-        case SDL_MOUSEBUTTONUP:
-        case SDL_MOUSEBUTTONDOWN:
-        case SDL_MOUSEMOTION:
-        case SDL_JOYAXISMOTION:
-        case SDL_JOYBALLMOTION:
-        case SDL_JOYHATMOTION:
-        case SDL_JOYBUTTONUP:
-        case SDL_JOYBUTTONDOWN:
-          if (InputManagerSDL::current())
-            InputManagerSDL::current()->on_event(event);
+          case SDL_MOUSEBUTTONUP:
+          case SDL_MOUSEBUTTONDOWN:
+          case SDL_MOUSEMOTION:
+          case SDL_JOYAXISMOTION:
+          case SDL_JOYBALLMOTION:
+          case SDL_JOYHATMOTION:
+          case SDL_JOYBUTTONUP:
+          case SDL_JOYBUTTONDOWN:
+            if (InputManagerSDL::current())
+              InputManagerSDL::current()->on_event(event);
 
-          if (!overlay_screens.empty())
-            overlay_screens.back()->handle_event(event);
-          break;
+            if (!overlay_screens.empty())
+              overlay_screens.back()->handle_event(event);
+            break;
         
-        default:
-          if (!overlay_screens.empty())
-            overlay_screens.back()->handle_event(event);
-          else if (!screens.empty())
-            screens.back()->handle_event(event);
-          break;
+          default:
+            if (!overlay_screens.empty())
+              overlay_screens.back()->handle_event(event);
+            else if (!screens.empty())
+              screens.back()->handle_event(event);
+            break;
         }
     }
 }
@@ -367,5 +378,5 @@
 {
   do_quit = true;
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-03-11 17:27:40 UTC (rev 2639)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-03-11 20:01:22 UTC (rev 2640)
@@ -48,6 +48,7 @@
   int   last_fps;
   float overlap_delta;
   bool  do_quit;
+  bool show_controller_help_window;
 
 public:
   ScreenManager();



From grumbel at mail.berlios.de  Wed Mar 11 21:33:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 21:33:55 +0100
Subject: [Windstille-commit] r2641 - trunk/windstille/src/hud
Message-ID: <200903112033.n2BKXtAS026097@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 21:33:55 +0100 (Wed, 11 Mar 2009)
New Revision: 2641

Modified:
   trunk/windstille/src/hud/controller_help_window.cpp
Log:
Removed border around buttons

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 20:01:22 UTC (rev 2640)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-03-11 20:33:55 UTC (rev 2641)
@@ -37,12 +37,12 @@
   if (pressed)
     {
       Display::fill_circle(pos, 12.0f, Color(0.8f, 0.0f, 0.0f));
-      Display::draw_circle(pos, 12.0f, Color(1.0f, 0.0f, 0.0f));
+      //Display::draw_circle(pos, 12.0f, Color(1.0f, 0.0f, 0.0f));
     }
   else
     {
       Display::fill_circle(pos, 12.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
-      Display::draw_circle(pos, 12.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+      //Display::draw_circle(pos, 12.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
     }
 }
 
@@ -53,7 +53,7 @@
   Rectf rect(pos - Vector2f(size.width, size.height)/2, size);
 
   Display::fill_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
-  Display::draw_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  //Display::draw_rounded_rect(rect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
   Vector2f stick_pos(rect.left + rect.get_width()/2  + x * (rect.get_width()-16.0f)/2,
                      rect.top  + rect.get_height()/2 + y * (rect.get_width()-16.0f)/2);
@@ -80,7 +80,7 @@
                                            rect.get_height())),
                        Color(1.0f, 0.0f, 0.0f));
 
-  Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  //Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
 }
 
 void



From grumbel at mail.berlios.de  Wed Mar 11 21:42:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 21:42:48 +0100
Subject: [Windstille-commit] r2642 - trunk/windstille/data/controller
Message-ID: <200903112042.n2BKgmnL027312@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 21:42:48 +0100 (Wed, 11 Mar 2009)
New Revision: 2642

Removed:
   trunk/windstille/data/controller/gamepad.scm
   trunk/windstille/data/controller/gamepad2.scm
   trunk/windstille/data/controller/xbox360.scm
Modified:
   trunk/windstille/data/controller/dvorak.scm
   trunk/windstille/data/controller/keyboard.scm
Log:
Updated controller files, removed old ones

Modified: trunk/windstille/data/controller/dvorak.scm
===================================================================
--- trunk/windstille/data/controller/dvorak.scm	2009-03-11 20:33:55 UTC (rev 2641)
+++ trunk/windstille/data/controller/dvorak.scm	2009-03-11 20:42:48 UTC (rev 2642)
@@ -4,19 +4,25 @@
  (y-axis   (keyboard-axis (minus "up") (plus "down")))
   
  (x2-axis  (keyboard-axis (minus "[4]") (plus "[6]"))) 
- (y2-axis  (keyboard-axis (minus "[2]") (plus "[8]")))
+ (y2-axis  (keyboard-axis (minus "[8]") (plus "[2]")))
 
- (view-center-button  (keyboard-button (key "[5]")))
+ (left-trigger-axis)
+ (right-trigger-axis)
 
- (primary-button      (keyboard-button (key "o")))
- (secondary-button    (keyboard-button (key "a")))
- (tertiary-button     (keyboard-button (key "e")))
+ (left-stick-button  (keyboard-button (key "q")))
+ (right-stick-button (keyboard-button (key "[5]")))
 
- (pda-button          (keyboard-button (key ",")))
- (aim-button          (keyboard-button (key "'")))
- (pause-button        (keyboard-button (key "p")))
- (inventory-button    (keyboard-button (key ".")))
+ (primary-button    (keyboard-button (key "o")))
+ (secondary-button  (keyboard-button (key "a")))
+ (tertiary-button   (keyboard-button (key "e")))
+ (quaternary-button (keyboard-button (key ",")))
 
+ (left-shoulder-button   (keyboard-button (key "'")))
+ (right-shoulder-button  (keyboard-button (key ".")))
+
+ (select-button     (keyboard-button (key "p")))
+ (start-button      (keyboard-button (key "u")))
+
  ;; don't bind those, since they only make sense on analog gamepads
  ;; with an additional dpad, on digital devices x-axs and y-axis
  ;; already serve the same purpose

Deleted: trunk/windstille/data/controller/gamepad.scm
===================================================================
--- trunk/windstille/data/controller/gamepad.scm	2009-03-11 20:33:55 UTC (rev 2641)
+++ trunk/windstille/data/controller/gamepad.scm	2009-03-11 20:42:48 UTC (rev 2642)
@@ -1,11 +0,0 @@
-(windstille-controller
- (up    (axis-button (joystick-axis 0 1) #f))
- (down  (axis-button (joystick-axis 0 1) #t))
- (left  (axis-button (joystick-axis 0 0) #f))
- (right (axis-button (joystick-axis 0 0) #t))
-
- (fire  (joystick-button 0 1))
- (jump  (joystick-button 0 0))
- )
-
-;; EOF ;;

Deleted: trunk/windstille/data/controller/gamepad2.scm
===================================================================
--- trunk/windstille/data/controller/gamepad2.scm	2009-03-11 20:33:55 UTC (rev 2641)
+++ trunk/windstille/data/controller/gamepad2.scm	2009-03-11 20:42:48 UTC (rev 2642)
@@ -1,11 +0,0 @@
-(windstille-controller
- (up    (axis-button (joystick-axis 1 1) #f))
- (down  (axis-button (joystick-axis 1 1) #t))
- (left  (axis-button (joystick-axis 1 0) #f))
- (right (axis-button (joystick-axis 1 0) #t))
-
- (fire  (joystick-button 1 1))
- (jump  (joystick-button 1 0))
- )
-
-;; EOF ;;

Modified: trunk/windstille/data/controller/keyboard.scm
===================================================================
--- trunk/windstille/data/controller/keyboard.scm	2009-03-11 20:33:55 UTC (rev 2641)
+++ trunk/windstille/data/controller/keyboard.scm	2009-03-11 20:42:48 UTC (rev 2642)
@@ -4,19 +4,25 @@
  (y-axis   (keyboard-axis (minus "up") (plus "down")))
   
  (x2-axis  (keyboard-axis (minus "[4]") (plus "[6]"))) 
- (y2-axis  (keyboard-axis (minus "[2]") (plus "[8]")))
+ (y2-axis  (keyboard-axis (minus "[8]") (plus "[2]")))
 
- (view-center-button  (keyboard-button (key "[5]")))
+ (left-trigger-axis)
+ (right-trigger-axis)
 
- (primary-button      (keyboard-button (key "s")))
- (secondary-button    (keyboard-button (key "d")))
- (tertiary-button     (keyboard-button (key "a")))
+ (left-stick-button  (keyboard-button (key "x")))
+ (right-stick-button (keyboard-button (key "[5]")))
 
- (pda-button          (keyboard-button (key "w")))
- (aim-button          (keyboard-button (key "k")))
- (pause-button        (keyboard-button (key "p")))
- (inventory-button    (keyboard-button (key "e")))
+ (primary-button    (keyboard-button (key "s")))
+ (secondary-button  (keyboard-button (key "d")))
+ (tertiary-button   (keyboard-button (key "a")))
+ (quaternary-button (keyboard-button (key "w")))
 
+ (left-shoulder-button   (keyboard-button (key "q")))
+ (right-shoulder-button  (keyboard-button (key "e")))
+
+ (select-button     (keyboard-button (key "r")))
+ (start-button      (keyboard-button (key "f")))
+
  ;; don't bind those, since they only make sense on analog gamepads
  ;; with an additional dpad, on digital devices x-axs and y-axis
  ;; already serve the same purpose

Deleted: trunk/windstille/data/controller/xbox360.scm
===================================================================
--- trunk/windstille/data/controller/xbox360.scm	2009-03-11 20:33:55 UTC (rev 2641)
+++ trunk/windstille/data/controller/xbox360.scm	2009-03-11 20:42:48 UTC (rev 2642)
@@ -1,30 +0,0 @@
-;; -*- scheme -*-
-;; Configuration for a XBox360 pad which can be used with the xpad driver
-
-(windstille-controller
- (x-axis  (joystick-axis (device 0)  (axis 0)))
- (y-axis  (joystick-axis (device 0)  (axis 1)))
- 
- (x2-axis (joystick-axis (device 0)  (axis 4)))
- (y2-axis (joystick-axis (device 0)  (axis 3) (invert #t)))
-
- (view-center-button (joystick-button (device 0)  (button 9)))
-
- (primary-button    (joystick-button (device 0)  (button 0)))
- (secondary-button  (joystick-button (device 0)  (button 1)))
- (tertiary-button   (joystick-button (device 0)  (button 3)))
-
- (pda-button        (joystick-button (device 0)  (button 2)))
-
- (aim-button        (joystick-button (device 0)  (button 5)))
- (pause-button      (joystick-button (device 0)  (button 6)))
- (inventory-button  (joystick-button (device 0)  (button 14)))
-
- ;; allow to use the dpad for menu navigation
- (menu-up-button    (joystick-button (device 0)  (button 10)))
- (menu-down-button  (joystick-button (device 0)  (button 11)))
- (menu-left-button  (joystick-button (device 0)  (button 12)))
- (menu-right-button (joystick-button (device 0)  (button 13)))
- )
-
-;; EOF ;;



From grumbel at mail.berlios.de  Wed Mar 11 23:07:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 23:07:04 +0100
Subject: [Windstille-commit] r2643 - in trunk/windstille/src: hud math
Message-ID: <200903112207.n2BM74B9002130@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 23:07:03 +0100 (Wed, 11 Mar 2009)
New Revision: 2643

Modified:
   trunk/windstille/src/hud/inventory.cpp
   trunk/windstille/src/math/line.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/hud/inventory.cpp
===================================================================
--- trunk/windstille/src/hud/inventory.cpp	2009-03-11 20:42:48 UTC (rev 2642)
+++ trunk/windstille/src/hud/inventory.cpp	2009-03-11 22:07:03 UTC (rev 2643)
@@ -172,7 +172,8 @@
 
   if (moving == 0)
     {
-      if (controller.button_was_pressed(USE_BUTTON) ||
+      if (controller.button_was_pressed(OK_BUTTON) ||
+          controller.button_was_pressed(CANCEL_BUTTON) ||
           controller.button_was_pressed(INVENTORY_BUTTON))
         {
           GameSession::current()->set_control_state(GameSession::GAME);

Modified: trunk/windstille/src/math/line.cpp
===================================================================
--- trunk/windstille/src/math/line.cpp	2009-03-11 20:42:48 UTC (rev 2642)
+++ trunk/windstille/src/math/line.cpp	2009-03-11 22:07:03 UTC (rev 2643)
@@ -55,22 +55,33 @@
 
   float quotient = ((y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1));
 
-  ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / quotient;
-  ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / quotient;
+  if (quotient == 0.0f)
+    {
+      return false; // FIXME
+    }
+  else
+    {
+      ua = ((x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3)) / quotient;
+      ub = ((x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3)) / quotient;
 
-  return (ua >= 0.0f && ua <= 1.0f &&
-          ub >= 0.0f && ub <= 1.0f);
+      return (ua >= 0.0f && ua <= 1.0f &&
+              ub >= 0.0f && ub <= 1.0f);
+    }
 }
 
 bool
 Line::intersect(const Line& line, Vector2f& colpos) const
 {
   float ua, ub;
-  bool do_collide = intersect(line, ua, ub);
-
-  colpos = p1 + ((p2 - p1) * ua);
-
-  return do_collide;
+  if (intersect(line, ua, ub))
+    {
+      colpos = p1 + ((p2 - p1) * ua);
+      return true;
+    }
+  else
+    {
+      return false;
+    }
 }
 
 float



From grumbel at mail.berlios.de  Wed Mar 11 23:07:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 11 Mar 2009 23:07:44 +0100
Subject: [Windstille-commit] r2644 - trunk/windstille
Message-ID: <200903112207.n2BM7it3002162@sheep.berlios.de>

Author: grumbel
Date: 2009-03-11 23:07:44 +0100 (Wed, 11 Mar 2009)
New Revision: 2644

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-11 22:07:03 UTC (rev 2643)
+++ trunk/windstille/TODO	2009-03-11 22:07:44 UTC (rev 2644)
@@ -10,6 +10,12 @@
 Scripting
 =========
 
+* reentering a sector twice barfs because:
+
+  std::exception: Squirrel error: sectors/apartment/init.nut:
+  SquirrelThread: couldn't call 'run' (sectors/apartment/flicker.nut:
+  ScriptManager::run_script(): Script must be idle to be 'run()')
+
 * ScriptableObject is a bad name, since all objects should be
   scriptable in one form or another
 
@@ -70,6 +76,16 @@
 Input Handling
 ==============
 
+* change of input context is troublesome: when the user selects a
+  dialog and confirms it, the character starts to walk into the
+  direction that the player indicated.
+
+  Possible solution: wait till the controller is in neutral position
+  before sending events to the next Screen
+
+* reconfigure the controls to behave like Tomb Raider (Xbox360 pad:
+  A:jump, B:duck, X:run, Y:interact), move PDA elsewhere
+
 * implement proper dead-zone in input handling
 
 * allow to load multiple controller config files at once
@@ -87,6 +103,8 @@
 Miscellaneous
 =============
 
+* scrap inventory and redesign it
+
 * When starting sector directly from command line, "Return to title screen" doesn't work
 
 * console doesn't adopt to screen size



From grumbel at mail.berlios.de  Thu Mar 12 01:35:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 01:35:34 +0100
Subject: [Windstille-commit] r2645 - in trunk/windstille/src: app display gui
Message-ID: <200903120035.n2C0ZYQJ025777@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 01:35:33 +0100 (Thu, 12 Mar 2009)
New Revision: 2645

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/display/text_area.hpp
   trunk/windstille/src/gui/group_component.cpp
   trunk/windstille/src/gui/text_view.cpp
Log:
Hacked together scrolling text, a little ugly, needs cleanup

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-11 22:07:44 UTC (rev 2644)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-12 00:35:33 UTC (rev 2645)
@@ -270,6 +270,32 @@
                  "cursor keys - walk\n"
                  "d - run/cancel\n"
                  "s - jump/ok\n"
+                 "\n"
+                 "Windstille Informations\n"
+                 "=======================\n"
+                 "\n"
+                 "Windstille is a classic 2d jump'n shoot game in which the player will\n"
+                 "be placed in a foreign alien world and has to find its way back into\n"
+                 "safety. Windstille is currently available for GNU/Linux and Windows.\n"
+                 "Its webpage at which one might find new versions, source code,\n"
+                 "artworks and more informations is located at:\n"
+                 "\n"
+                 " * http://windstille.berlios.de/\n"
+                 "\n"
+                 "The latest development version can be obtained by:\n"
+                 "\n"
+                 " $ svn co svn://svn.berlios.de/windstille/trunk/windstille\n"
+                 "\n"
+                 "For informations on how to compile and run Windstille see the file\n"
+                 "INSTALL. Windstille makes use of OpenGL so you will need working\n"
+                 "hardware 3d support.\n"
+                 "\n"
+                 "Windstille is covered under the GNU GPL, which means that you can copy\n"
+                 "and even modify it pretty much as you like, as long as you keep the\n"
+                 "copyright headers in place and distribute the source too if you\n"
+                 "distribute binaries, see the file COPYING for details.\n"
+                 "\n"
+                 "# EOF #\n"
                  );
   text->set_active(true);
   

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-03-11 22:07:44 UTC (rev 2644)
+++ trunk/windstille/src/display/text_area.cpp	2009-03-12 00:35:33 UTC (rev 2645)
@@ -17,13 +17,14 @@
 */
 
 #include <assert.h>
-
+#include <iostream>
 #include "display/opengl_state.hpp"
 #include "font/ttf_font.hpp"
 #include "text_area.hpp"
 #include "util/baby_xml.hpp"
 #include "font/fonts.hpp"
 #include "text_area.hpp"
+#include "display.hpp"
 
 struct TextAreaCommand 
 {
@@ -48,6 +49,8 @@
   bool progress_complete;
   std::vector<TextAreaCommand> commands;
   Vector2f cursor_pos;
+  float scroll_offset;
+  float max_scroll_offset;
 };
 
 TextArea::TextArea(const Rectf& rect, bool letter_by_letter)
@@ -60,11 +63,12 @@
   impl->letter_by_letter = letter_by_letter;
   impl->progress_complete = false;
   impl->passed_time = 0;
+  impl->scroll_offset = 0.0f;
+  impl->max_scroll_offset = -1.0f; // FIXME: Bad magick value
 }
 
 TextArea::~TextArea()
 {
-  delete impl;
 }
 
 void
@@ -76,6 +80,9 @@
 void
 TextArea::set_text(const std::string& str)
 {
+  impl->scroll_offset     = 0.0f;
+  impl->max_scroll_offset = -1.0f;
+
   impl->commands.clear();
 
   BabyXML xml(str);
@@ -154,7 +161,8 @@
   state.activate();
 
   glPushMatrix();
-  glTranslatef(impl->rect.left, impl->rect.top + impl->font->get_height(), 0);
+  glTranslatef(impl->rect.left, impl->rect.top + impl->font->get_height() - impl->scroll_offset, 0);
+
   // Voodoo to get non-blurry fonts
   float mx = -0.375;
   float my = -0.375; 
@@ -170,6 +178,7 @@
   float eat_time = impl->passed_time;
   bool sinus = false;
   bool break_writing = false;
+
   std::vector<TextAreaCommand>::const_iterator i = impl->commands.begin();
   for(; i != impl->commands.end(); ++i)
     {
@@ -178,178 +187,197 @@
         
       switch (i->type)
         {
-        case TextAreaCommand::START:
-          if (i->content == "b")
-            {
-              top_color    = Color(1.0f, 0.0f, 0.0f);
-              bottom_color = Color(0.8f, 0.0f, 0.0f);
-            }
-          else if (i->content == "i")
-            {
-              top_color    = Color(0.65f, 0.7f, 1.0f);
-              bottom_color = Color(0.65f, 0.7f, 1.0f);
-            }
-          else if (i->content == "small")
-            {
-              is_small = true;
-            }
-          else if (i->content == "large")
-            {
-              is_large = true;
-            }
-          else if (i->content == "sleep")
-            {
-              eat_time -= 1.0f;
-            }
-          else if (i->content == "sin")
-            {
-              sinus = true;
-            }
-          break;
+          case TextAreaCommand::START:
+            if (i->content == "b")
+              {
+                top_color    = Color(1.0f, 0.0f, 0.0f);
+                bottom_color = Color(0.8f, 0.0f, 0.0f);
+              }
+            else if (i->content == "i")
+              {
+                top_color    = Color(0.65f, 0.7f, 1.0f);
+                bottom_color = Color(0.65f, 0.7f, 1.0f);
+              }
+            else if (i->content == "small")
+              {
+                is_small = true;
+              }
+            else if (i->content == "large")
+              {
+                is_large = true;
+              }
+            else if (i->content == "sleep")
+              {
+                eat_time -= 1.0f;
+              }
+            else if (i->content == "sin")
+              {
+                sinus = true;
+              }
+            break;
 
-        case TextAreaCommand::END:
-          if (i->content == "b" || i->content == "i")
-            {
-              top_color    = Color(1.0f, 1.0f, 1.0f);
-              bottom_color = Color(1.0f, 1.0f, 1.0f);
-            }
-          else if (i->content == "small")
-            {
-              is_small = false;
-            }
-          else if (i->content == "large")
-            {
-              is_large = false;
-            }
-          else if (i->content == "sin")
-            {
-              sinus = false;
-            }
-          break;
+          case TextAreaCommand::END:
+            if (i->content == "b" || i->content == "i")
+              {
+                top_color    = Color(1.0f, 1.0f, 1.0f);
+                bottom_color = Color(1.0f, 1.0f, 1.0f);
+              }
+            else if (i->content == "small")
+              {
+                is_small = false;
+              }
+            else if (i->content == "large")
+              {
+                is_large = false;
+              }
+            else if (i->content == "sin")
+              {
+                sinus = false;
+              }
+            break;
           
-        case TextAreaCommand::WORD:
-        retry:
-          int word_width;
+          case TextAreaCommand::WORD:
+            retry:
+            int word_width;
 
-          if (is_small)
-            word_width = static_cast<int>(impl->font->get_width(i->content) * 0.6f);
-          else if (is_large)
-            word_width = static_cast<int>(impl->font->get_width(i->content) * 2.0f);
-          else
-            word_width = impl->font->get_width(i->content);
+            if (is_small)
+              word_width = static_cast<int>(impl->font->get_width(i->content) * 0.6f);
+            else if (is_large)
+              word_width = static_cast<int>(impl->font->get_width(i->content) * 2.0f);
+            else
+              word_width = impl->font->get_width(i->content);
           
-          if (i->content == "\n")
-            {
-              x_pos = 0;
-              y_pos += impl->font->get_height() + impl->v_space;
-            }
-          else if (x_pos + word_width > impl->rect.get_width() && word_width <= impl->rect.get_width())
-            {
-              x_pos = 0;
-              y_pos += impl->font->get_height() + impl->v_space;
-              goto retry;
-            }
-          else
-            {
-              if (x_pos == 0 && i->content == " ")
-                {
-                  // ignore space at the beginning of a line
-                }
-              else
-                {
-                  for(std::string::const_iterator j = i->content.begin(); j != i->content.end(); ++j)
-                    {
-                      if (impl->letter_by_letter && eat_time <= 0)
-                        {
-                          break_writing = true;
-                          break;
-                        }
+            if (i->content == "\n")
+              {
+                x_pos = 0;
+                y_pos += impl->font->get_height() + impl->v_space;
+              }
+            else if (x_pos + word_width > impl->rect.get_width() && word_width <= impl->rect.get_width())
+              {
+                x_pos = 0;
+                y_pos += impl->font->get_height() + impl->v_space;
+                goto retry;
+              }
+            else
+              {
+                if (x_pos == 0 && i->content == " ")
+                  {
+                    // ignore space at the beginning of a line
+                  }
+                else
+                  {
+                    for(std::string::const_iterator j = i->content.begin(); j != i->content.end(); ++j)
+                      {
+                        if (impl->letter_by_letter && eat_time <= 0)
+                          {
+                            break_writing = true;
+                            break;
+                          }
                         
-                      int x = x_pos;
-                      int y = y_pos;
+                        int x = x_pos;
+                        int y = y_pos;
 
-                      if (sinus) // FIXME: this could actually work per vertex
-                        y += static_cast<int>(sin(impl->passed_time * 10.0f + x_pos / 15.0f) * 5.0f);
+                        if (sinus) // FIXME: this could actually work per vertex
+                          y += static_cast<int>(sin(impl->passed_time * 10.0f + x_pos / 15.0f) * 5.0f);
 
-                      if (*j == '.' || *j == '\n')
-                        eat_time -= 0.50f;
-                      else
-                        eat_time -= 0.05f;
+                        if (*j == '.' || *j == '\n')
+                          eat_time -= 0.50f;
+                        else
+                          eat_time -= 0.05f;
 
-                      const TTFCharacter& character = impl->font->get_character(*j);
+                        const TTFCharacter& character = impl->font->get_character(*j);
                       
-                      if (is_small)
-                        {
-                          float scale = 0.6f;
-                          glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
-                          glTexCoord2f(character.uv.left, character.uv.top);
-                          glVertex2f(x + scale * character.pos.left + mx,
-                                     y + scale * (character.pos.top  + my));
+                        bool draw_it = (y_pos >= impl->scroll_offset && 
+                                        y_pos < impl->scroll_offset + impl->rect.get_height() 
+                                        - (impl->font->get_height()));
+                        if (is_small)
+                          {
+                            float scale = 0.6f;
+                            if (draw_it)
+                              {
+                                glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
+                                glTexCoord2f(character.uv.left, character.uv.top);
+                                glVertex2f(x + scale * character.pos.left + mx,
+                                           y + scale * (character.pos.top  + my));
 
-                          glTexCoord2f(character.uv.right, character.uv.top);
-                          glVertex2f(x + scale * character.pos.right + mx, 
-                                     y + scale * (character.pos.top) + my);
+                                glTexCoord2f(character.uv.right, character.uv.top);
+                                glVertex2f(x + scale * character.pos.right + mx, 
+                                           y + scale * (character.pos.top) + my);
 
-                          glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
-                          glTexCoord2f(character.uv.right, character.uv.bottom);
-                          glVertex2f(x + scale * character.pos.right  + mx, 
-                                     y + scale * (character.pos.bottom) + my);
+                                glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
+                                glTexCoord2f(character.uv.right, character.uv.bottom);
+                                glVertex2f(x + scale * character.pos.right  + mx, 
+                                           y + scale * (character.pos.bottom) + my);
 
-                          glTexCoord2f(character.uv.left, character.uv.bottom);
-                          glVertex2f(x + scale * character.pos.left   + mx, 
-                                     y + scale * (character.pos.bottom) + my);
-                          x_pos += static_cast<int>(scale * character.advance);
-                        }
-                      else if (is_large)
-                        {
-                          float scale = 2.0f;
-                          glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
-                          glTexCoord2f(character.uv.left, character.uv.top);
-                          glVertex2f(x + scale * character.pos.left + mx,
-                                     y + (character.pos.top  + my));
+                                glTexCoord2f(character.uv.left, character.uv.bottom);
+                                glVertex2f(x + scale * character.pos.left   + mx, 
+                                           y + scale * (character.pos.bottom) + my);
+                              }
+                            x_pos += static_cast<int>(scale * character.advance);
+                          }
+                        else if (is_large)
+                          {
+                            float scale = 2.0f;
+                            if (draw_it)
+                              {
+                                glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
+                                glTexCoord2f(character.uv.left, character.uv.top);
+                                glVertex2f(x + scale * character.pos.left + mx,
+                                           y + (character.pos.top  + my));
 
-                          glTexCoord2f(character.uv.right, character.uv.top);
-                          glVertex2f(x + scale * character.pos.right + mx, 
-                                     y + (character.pos.top) + my);
+                                glTexCoord2f(character.uv.right, character.uv.top);
+                                glVertex2f(x + scale * character.pos.right + mx, 
+                                           y + (character.pos.top) + my);
 
-                          glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
-                          glTexCoord2f(character.uv.right, character.uv.bottom);
-                          glVertex2f(x + scale * character.pos.right  + mx, 
-                                     y + (character.pos.bottom) + my);
+                                glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
+                                glTexCoord2f(character.uv.right, character.uv.bottom);
+                                glVertex2f(x + scale * character.pos.right  + mx, 
+                                           y + (character.pos.bottom) + my);
 
-                          glTexCoord2f(character.uv.left, character.uv.bottom);
-                          glVertex2f(x + scale * character.pos.left   + mx, 
-                                     y + (character.pos.bottom) + my);
-                          x_pos += static_cast<int>(scale * character.advance);
-                        }
-                      else   
-                        {
-                          glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
-                          glTexCoord2f(character.uv.left, character.uv.top);
-                          glVertex2f(x + character.pos.left + mx,
-                                     y + character.pos.top  + my);
+                                glTexCoord2f(character.uv.left, character.uv.bottom);
+                                glVertex2f(x + scale * character.pos.left   + mx, 
+                                           y + (character.pos.bottom) + my);
+                              }
+                            x_pos += static_cast<int>(scale * character.advance);
+                          }
+                        else   
+                          {
+                            if (draw_it)
+                              {
+                                glColor4f(top_color.r, top_color.g, top_color.b, top_color.a);
+                                glTexCoord2f(character.uv.left, character.uv.top);
+                                glVertex2f(x + character.pos.left + mx,
+                                           y + character.pos.top  + my);
 
-                          glTexCoord2f(character.uv.right, character.uv.top);
-                          glVertex2f(x + character.pos.right + mx, 
-                                     y + character.pos.top   + my);
+                                glTexCoord2f(character.uv.right, character.uv.top);
+                                glVertex2f(x + character.pos.right + mx, 
+                                           y + character.pos.top   + my);
 
-                          glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
-                          glTexCoord2f(character.uv.right, character.uv.bottom);
-                          glVertex2f(x + character.pos.right  + mx, 
-                                     y + character.pos.bottom + my);
+                                glColor4f(bottom_color.r, bottom_color.g, bottom_color.b, bottom_color.a);
+                                glTexCoord2f(character.uv.right, character.uv.bottom);
+                                glVertex2f(x + character.pos.right  + mx, 
+                                           y + character.pos.bottom + my);
 
-                          glTexCoord2f(character.uv.left, character.uv.bottom);
-                          glVertex2f(x + character.pos.left   + mx, 
-                                     y + character.pos.bottom + my);
-                          x_pos += character.advance;
-                        }
-                    }
-                }
-            }
-          break;
+                                glTexCoord2f(character.uv.left, character.uv.bottom);
+                                glVertex2f(x + character.pos.left   + mx, 
+                                           y + character.pos.bottom + my);
+                              }
+                            x_pos += character.advance;
+                          }
+                      }
+                  }
+              }
+            break;
         }
     }
 
+  if (impl->max_scroll_offset == -1.0f)
+    {
+      impl->max_scroll_offset = y_pos - impl->rect.get_height();
+      if (impl->max_scroll_offset < 0)
+        impl->max_scroll_offset = 0;
+    }
+
   // FIXME: This is not correct, since the last command itself might
   // not be completly excecuted
   if (i == impl->commands.end())
@@ -379,4 +407,21 @@
   return impl->cursor_pos;
 }
 
+float
+TextArea::get_scroll_offset() const
+{
+  return impl->scroll_offset;
+}
+
+void
+TextArea::set_scroll_offset(float s)
+{
+  if (s < 0.0f)
+    impl->scroll_offset = 0.0f;
+  else if (impl->max_scroll_offset > 0 && s > impl->max_scroll_offset)
+    impl->scroll_offset = impl->max_scroll_offset;
+  else
+    impl->scroll_offset = s;
+}
+
 /* EOF */

Modified: trunk/windstille/src/display/text_area.hpp
===================================================================
--- trunk/windstille/src/display/text_area.hpp	2009-03-11 22:07:44 UTC (rev 2644)
+++ trunk/windstille/src/display/text_area.hpp	2009-03-12 00:35:33 UTC (rev 2645)
@@ -19,8 +19,9 @@
 #ifndef HEADER_WINDSTILLE_DISPLAY_TEXT_AREA_HPP
 #define HEADER_WINDSTILLE_DISPLAY_TEXT_AREA_HPP
 
+#include <memory>
+#include <string>
 #include "math/rect.hpp"
-#include <string>
 
 class TTFFont;
 class TextAreaImpl;
@@ -59,8 +60,12 @@
   /** Return the position of the last character in the TextArea,
       usefull to display a blinking cursor or things like that */
   Vector2f get_cursor_pos() const;
+
+  float get_scroll_offset() const;
+  void  set_scroll_offset(float s);
+
 private:
-  TextAreaImpl* impl;
+  std::auto_ptr<TextAreaImpl> impl;
 };
 
 #endif

Modified: trunk/windstille/src/gui/group_component.cpp
===================================================================
--- trunk/windstille/src/gui/group_component.cpp	2009-03-11 22:07:44 UTC (rev 2644)
+++ trunk/windstille/src/gui/group_component.cpp	2009-03-12 00:35:33 UTC (rev 2645)
@@ -78,8 +78,8 @@
 {
   int padding = 6;
 
-  return Rectf(rect.left + padding,
-               rect.top  + padding + (title.empty() ? 0 : Fonts::vera20->get_height() + 24),
+  return Rectf(rect.left   + padding,
+               rect.top    + padding + (title.empty() ? 0 : Fonts::vera20->get_height() + 18),
                rect.right  - padding,
                rect.bottom - padding);
 }

Modified: trunk/windstille/src/gui/text_view.cpp
===================================================================
--- trunk/windstille/src/gui/text_view.cpp	2009-03-11 22:07:44 UTC (rev 2644)
+++ trunk/windstille/src/gui/text_view.cpp	2009-03-12 00:35:33 UTC (rev 2645)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include "input/controller.hpp"
 #include "text_view.hpp"
 
@@ -42,6 +43,8 @@
 {
   text_area.update(delta);
 
+  text_area.set_scroll_offset(text_area.get_scroll_offset() + 500.0f * controller.get_axis_state(Y2_AXIS) * delta);
+
   for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
     {
       if (i->type == BUTTON_EVENT && i->button.down)



From grumbel at mail.berlios.de  Thu Mar 12 01:51:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 01:51:29 +0100
Subject: [Windstille-commit] r2646 - trunk/windstille/src/display
Message-ID: <200903120051.n2C0pTFr026599@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 01:51:28 +0100 (Thu, 12 Mar 2009)
New Revision: 2646

Modified:
   trunk/windstille/src/display/text_area.cpp
Log:
Added scrollbar

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-03-12 00:35:33 UTC (rev 2645)
+++ trunk/windstille/src/display/text_area.cpp	2009-03-12 00:51:28 UTC (rev 2646)
@@ -151,7 +151,15 @@
 TextArea::draw()
 {
   assert(impl->font);
+  if (impl->max_scroll_offset > 0.0f)
+    {
+      float height = impl->max_scroll_offset + impl->rect.get_height();
 
+      Display::fill_rounded_rect(Rectf(Vector2f(impl->rect.right + 4,
+                                                impl->rect.top + impl->scroll_offset*impl->rect.get_height()/height), 
+                                       Sizef(8, impl->rect.get_height()*impl->rect.get_height()/height)),
+                                 4.0f, Color(1.0f, 1.0f, 1.0f, 0.25f));
+    }
   OpenGLState state;
   
   state.bind_texture(impl->font->get_texture());
@@ -418,7 +426,7 @@
 {
   if (s < 0.0f)
     impl->scroll_offset = 0.0f;
-  else if (impl->max_scroll_offset > 0 && s > impl->max_scroll_offset)
+  else if (s > impl->max_scroll_offset)
     impl->scroll_offset = impl->max_scroll_offset;
   else
     impl->scroll_offset = s;



From grumbel at mail.berlios.de  Thu Mar 12 02:09:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 02:09:10 +0100
Subject: [Windstille-commit] r2647 - trunk/windstille/src/gui
Message-ID: <200903120109.n2C19An1027467@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 02:09:09 +0100 (Thu, 12 Mar 2009)
New Revision: 2647

Modified:
   trunk/windstille/src/gui/menu_item.cpp
Log:
Made fadeout a little prettier

Modified: trunk/windstille/src/gui/menu_item.cpp
===================================================================
--- trunk/windstille/src/gui/menu_item.cpp	2009-03-12 00:51:28 UTC (rev 2646)
+++ trunk/windstille/src/gui/menu_item.cpp	2009-03-12 01:09:09 UTC (rev 2647)
@@ -42,14 +42,14 @@
       Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f));
       Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f));
       font_color = Color(1.0f, 1.0f, 1.0f);
-      fade_timer = 1.0f;
+      fade_timer = 2.0f;
     } 
   else 
     {
       if (fade_timer != 0.0f)
         {
-          Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f * fade_timer));
-          Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f * fade_timer));
+          //Display::fill_rounded_rect(rect, 5.0f, Color(0.5f, 0.5f, 0.5f, 0.75f * fade_timer));
+          //Display::draw_rounded_rect(rect, 5.0f, Color(1.0f, 1.0f, 1.0f, 1.0f * fade_timer));
           font_color = Color(0.75f + 0.25f * fade_timer, 
                              0.75f + 0.25f * fade_timer, 
                              0.75f + 0.25f * fade_timer, 



From grumbel at mail.berlios.de  Thu Mar 12 02:09:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 02:09:23 +0100
Subject: [Windstille-commit] r2648 - trunk/windstille/src/screen
Message-ID: <200903120109.n2C19NwV027502@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 02:09:22 +0100 (Thu, 12 Mar 2009)
New Revision: 2648

Modified:
   trunk/windstille/src/screen/navigation_test.cpp
Log:
Fixed some button mappings

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-03-12 01:09:09 UTC (rev 2647)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-03-12 01:09:22 UTC (rev 2648)
@@ -228,12 +228,12 @@
       }
     }
   
-  if (controller.button_was_pressed(VIEW_CENTER_BUTTON))
+  if (controller.button_was_pressed(SELECT_BUTTON))
     {
       graph->save(std::cout);
     }
 
-  if (controller.button_was_pressed(PDA_BUTTON))
+  if (controller.button_was_pressed(QUATERNARY_BUTTON))
     {
       if (selected_node) {
         graph->remove_node(selected_node);



From grumbel at mail.berlios.de  Thu Mar 12 02:09:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 02:09:53 +0100
Subject: [Windstille-commit] r2649 - trunk/windstille
Message-ID: <200903120109.n2C19rlu027549@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 02:09:53 +0100 (Thu, 12 Mar 2009)
New Revision: 2649

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-12 01:09:22 UTC (rev 2648)
+++ trunk/windstille/TODO	2009-03-12 01:09:53 UTC (rev 2649)
@@ -103,6 +103,11 @@
 Miscellaneous
 =============
 
+* Add option for ControllerHelpWindow to option menu
+
+* cleanup display/text_area.cpp, having scrolling and running text
+  together doesn't make all that much sense, also functions are too large 
+
 * scrap inventory and redesign it
 
 * When starting sector directly from command line, "Return to title screen" doesn't work
@@ -145,7 +150,8 @@
 * write a LucasArts-like dialog system (i.e. non-blocking text,
   instead of JRPG like boxes with portraits), see SpeechManager
 
-* PDA needs scrolling text thing (right analog stick?)
+* PDA needs scrolling text thing (right analog stick?), TextArea has
+  it implemented, but events don't to pass through PDA
 
 * Specify the capabilites that the different subsystems need to have
 
@@ -263,6 +269,11 @@
 Graphics
 ========
 
+* aspect-ratio/resolution options:
+
+  - let the user select a resolution from all the ones that are available from X11 (see Pingus for code)
+  - have "aspect-ratio: auto" (calc from resolution) and 5:4, 4:3, 16:9, 16:10 overrides
+
 * remodel titlescreen as 3D model
 
 * setting glLineWidth() leads to some interesting artefacts on the



From grumbel at mail.berlios.de  Thu Mar 12 02:10:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 02:10:13 +0100
Subject: [Windstille-commit] r2650 - trunk/media/wiki
Message-ID: <200903120110.n2C1ADus027591@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 02:10:12 +0100 (Thu, 12 Mar 2009)
New Revision: 2650

Added:
   trunk/media/wiki/Animation.wiki
   trunk/media/wiki/Input.wiki
Modified:
   trunk/media/wiki/Controls.wiki
   trunk/media/wiki/Scripting.wiki
   trunk/media/wiki/Windstille.wiki
   trunk/media/wiki/wiki2html.py
Log:
Wiki updates

Added: trunk/media/wiki/Animation.wiki
===================================================================
--- trunk/media/wiki/Animation.wiki	2009-03-12 01:09:53 UTC (rev 2649)
+++ trunk/media/wiki/Animation.wiki	2009-03-12 01:10:12 UTC (rev 2650)
@@ -0,0 +1,10 @@
+<<note>>
+Could/should we do this in Blender with 3D meshes? Might be simpler then writing yet another animation system.
+<</note>>
+
+Windstille currently has frame based animations, these Sprites well enough for organic things. However Windstille will feature plenty of mechanical things, doors, trains, etc. that aren't practical to do with sprite based animation. Therefore we need an animation system that is implemented on top of the frame based animation and allows moving those Sprites around. 
+
+== Example
+
+* a two segmented door slides open
+

Modified: trunk/media/wiki/Controls.wiki
===================================================================
--- trunk/media/wiki/Controls.wiki	2009-03-12 01:09:53 UTC (rev 2649)
+++ trunk/media/wiki/Controls.wiki	2009-03-12 01:10:12 UTC (rev 2650)
@@ -8,7 +8,25 @@
 * directional pad
 * rumble support
 
+== Analogsticks
 
+* Left Analogstick: Navigate, run, climb, etc.
+* Right Analogstick: Aim the weapon or look around
 
+== Analog Trigger
 
+* Left Trigger: draw gun(?)
+* Right Trigger: shoot (variable pressure for flamethrower)
 
+== Face Button
+
+{{{
+                          ___ [ interact ]
+                    ,--. /
+                   |    |
+  [ run ] ___ ,--.  '--'  ,--.
+             |    |      |    | ___ [ crawl/duck / cancel ]
+              '--'  ,--.  '--'
+                   |    |
+                    '--' \__ [ jump / ok ]
+}}}

Added: trunk/media/wiki/Input.wiki
===================================================================
--- trunk/media/wiki/Input.wiki	2009-03-12 01:09:53 UTC (rev 2649)
+++ trunk/media/wiki/Input.wiki	2009-03-12 01:10:12 UTC (rev 2650)
@@ -0,0 +1,41 @@
+<<note>>
+The input system has numerous unfinished features, since its mostly implemented on a 'as needed' basis.
+<</note>>
+
+The input system in Windstille offers plenty of ways of configuration and is implemnted in <<class>>InputManagerSDL<</class>>. Configuration files for multiple input devices are currently seperatly held from other configurations and can be found in {{{data/controller/}}}.
+
+== Example
+
+{{{
+;; -*- scheme -*-
+;; Configuration for a XBox360 pad which can be used with the xpad driver
+
+(windstille-controller
+ (x-axis  (joystick-axis (device 0)  (axis 0)))
+ (y-axis  (joystick-axis (device 0)  (axis 1)))
+ 
+ (x2-axis (joystick-axis (device 0)  (axis 2)))
+ (y2-axis (joystick-axis (device 0)  (axis 3)))
+
+ (view-center-button (joystick-button (device 0)  (button 10)))
+
+ (primary-button    (joystick-button (device 0)  (button 0)))
+ (secondary-button  (joystick-button (device 0)  (button 1)))
+ (tertiary-button   (joystick-button (device 0)  (button 2)))
+
+ (pda-button        (joystick-button (device 0)  (button 3)))
+
+ (aim-button        (joystick-button (device 0)  (button 5)))
+ (pause-button      (joystick-button (device 0)  (button 7)))
+ (inventory-button  (joystick-button (device 0)  (button 6)))
+
+ ;; allow to use the dpad for menu navigation
+ (menu-up-button    (joystick-axis-button (device 0) (axis 7) (up #t)))
+ (menu-down-button  (joystick-axis-button (device 0) (axis 7) (up #f)))
+ (menu-left-button  (joystick-axis-button (device 0) (axis 6) (up #t)))
+ (menu-right-button (joystick-axis-button (device 0) (axis 6) (up #f)))
+)
+
+;; EOF ;;
+}}}
+

Modified: trunk/media/wiki/Scripting.wiki
===================================================================
--- trunk/media/wiki/Scripting.wiki	2009-03-12 01:09:53 UTC (rev 2649)
+++ trunk/media/wiki/Scripting.wiki	2009-03-12 01:10:12 UTC (rev 2650)
@@ -176,3 +176,4 @@
 ** [[http://plib.sourceforge.net/psl/index.html | PSL: PLIB's Scripting Language]] (unknown)
 ** [[http://www.somedude.net/gamemonkey/ | GameMonkey]] (unknown)
 ** [[http://www.angelcode.com/angelscript/ | AngleScript]] (unknown)
+

Modified: trunk/media/wiki/Windstille.wiki
===================================================================
--- trunk/media/wiki/Windstille.wiki	2009-03-12 01:09:53 UTC (rev 2649)
+++ trunk/media/wiki/Windstille.wiki	2009-03-12 01:10:12 UTC (rev 2650)
@@ -20,7 +20,9 @@
 * [[Squirrel]]
 * [[Drawing Model]]
 * [[Drawing Primitives]]
+* [[Animation]]
 * [[Editor]]
+* [[Input]]
 
 == Game Mechanics
 

Modified: trunk/media/wiki/wiki2html.py
===================================================================
--- trunk/media/wiki/wiki2html.py	2009-03-12 01:09:53 UTC (rev 2649)
+++ trunk/media/wiki/wiki2html.py	2009-03-12 01:10:12 UTC (rev 2650)
@@ -51,7 +51,9 @@
              'Squirrel',
              'Drawing Model',
              'Drawing Primitives',
+             'Animation',
              'Editor',
+             'Input',
              'Controls',
              'Actions',
              'PDA',



From grumbel at mail.berlios.de  Thu Mar 12 13:04:05 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 13:04:05 +0100
Subject: [Windstille-commit] r2651 - in trunk/windstille:
	data/sectors/apartment src/engine src/scripting
Message-ID: <200903121204.n2CC45wl028998@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 13:04:01 +0100 (Thu, 12 Mar 2009)
New Revision: 2651

Modified:
   trunk/windstille/data/sectors/apartment/init.nut
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Added function to spawn functions into seperate threads

Modified: trunk/windstille/data/sectors/apartment/init.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/init.nut	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/data/sectors/apartment/init.nut	2009-03-12 12:04:01 UTC (rev 2651)
@@ -1,5 +1,22 @@
-function run() {
-  spawn_script("flicker.nut");
+function run() 
+{
+  // spawn_script("flicker.nut");
+
+  println("spawn_function()");
+  spawn_function(function() {
+      while (true)
+        {
+          wait(0.1);
+          objects.lamp3.set_active(false);
+          wait(0.1);
+          objects.lamp3.set_active(true);
+          wait(0.1);
+          objects.lamp3.set_active(false);
+          wait(0.1);
+          objects.lamp3.set_active(true);
+          wait(1.0);
+        }
+    });
 }
 
-/* EOF */
+    /* EOF */

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -132,6 +132,14 @@
 }
 
 boost::shared_ptr<SquirrelThread>
+ScriptManager::create_script()
+{
+  // Add VM to the list of VMs
+  squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm)));
+  return squirrel_vms.back();
+}
+
+boost::shared_ptr<SquirrelThread>
 ScriptManager::run_script_file(const std::string& filename, bool global)
 {
   IFileStream in(filename);
@@ -193,7 +201,8 @@
         }
       else
         { // Add VM to the list of VMs
-          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm, in, filename)));     
+          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm)));
+          squirrel_vms.back()->load(in, filename);
           squirrel_vms.back()->call("init");
           squirrel_vms.back()->call("run");
           return squirrel_vms.back();

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -84,6 +84,7 @@
 
   /** Load script from \a filename and runs it */
   boost::shared_ptr<SquirrelThread> run_script_file(const std::string& filename, bool global = false);
+  boost::shared_ptr<SquirrelThread> create_script();
 
   HSQUIRRELVM get_vm() const { return vm; }
 

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -63,62 +63,107 @@
     }
 }
 
-SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm, std::istream& in, const std::string& filename)
-  : filename(filename),
-    parent_vm(parent_vm),
+SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm, bool isolated)
+  : parent_vm(parent_vm),
+    isolated(isolated),
     thread(0),
+    filename("<unset>"),
     oldtop(-1),
     waiting_for_events(ScriptManager::NO_EVENT),
     wakeup_time(0)
 {
   create_thread();
 
-  { // create a local environment for the thread
-    HSQOBJECT env;
-    sq_resetobject(&env);
+  if (isolated)
+    { // create a local environment for the thread
+      HSQOBJECT env;
+      sq_resetobject(&env);
 
-    sq_newtable(thread);
+      sq_newtable(thread);
 
-    // store the object in env
-    if(sq_getstackobj(thread, -1, &env) < 0) 
-      {
-        throw SquirrelError(parent_vm, filename, "couldn't get table from stack");
-      }
-    else
-      {
+      // store the object in env
+      if(sq_getstackobj(thread, -1, &env) < 0) 
         {
-          sq_addref(thread, &env); 
-          sq_pop(thread, 1); // remove env from stack
+          throw SquirrelError(parent_vm, filename, "couldn't get table from stack");
+        }
+      else
+        {
+          {
+            sq_addref(thread, &env); 
+            sq_pop(thread, 1); // remove env from stack
     
-          // set old roottable as delegate on env
-          sq_pushobject(thread, env); // push env
-          sq_pushroottable(thread);   // [env, root]
-          sq_setdelegate(thread, -2); // env.set_delegate(root)
-          sq_pop(thread, 1);          // pop env
+            // set old roottable as delegate on env
+            sq_pushobject(thread, env); // push env
+            sq_pushroottable(thread);   // [env, root]
+            sq_setdelegate(thread, -2); // env.set_delegate(root)
+            sq_pop(thread, 1);          // pop env
 
-          // set env as new roottable
-          sq_pushobject(thread, env);
-          sq_setroottable(thread);
+            // set env as new roottable
+            sq_pushobject(thread, env);
+            sq_setroottable(thread);
 
-          sq_release(thread, &env);
+            sq_release(thread, &env);
+          }
         }
-      }
-  }
+    }
+}
 
+void
+SquirrelThread::load(std::istream& in, const std::string& filename_)
+{
+  filename = filename_;
+
+  oldtop = sq_gettop(thread);
+
   // compile the script and push it on the stack
-  if(sq_compile(thread, squirrel_read_char, &in, filename.c_str(), SQTrue) < 0)
-    throw SquirrelError(thread, filename, "Couldn't parse script");
+  if(SQ_FAILED(sq_compile(thread, squirrel_read_char, &in, filename.c_str(), SQTrue)))
+    {
+      throw SquirrelError(thread, filename, "Couldn't parse script");
+    }
+  else
+    {
+      // start the script that was previously compiled
+      sq_pushroottable(thread);
+      if (SQ_FAILED(sq_call(thread, 1, SQFalse, SQTrue)))
+        {
+          sq_pop(thread, 1); // pop the compiled closure
+          throw SquirrelError(thread, filename, "SquirrelThread::load(): Couldn't start script");
+        }
+      else
+        {
+          if (sq_getvmstate(thread) != SQ_VMSTATE_IDLE)
+            {
+              throw SquirrelError(thread, filename, "SquirrelThread::load(): Script '" + filename +
+                                  "' must not suspend outside of run call");
+            }
+          sq_pop(thread, 1); // pop the compiled closure
+        }
+    }
+}
 
-  // start the script that was previously compiled
+void
+SquirrelThread::load(HSQUIRRELVM vm, SQInteger idx)
+{
+  oldtop = sq_gettop(thread);
+
+  sq_move(thread, vm, idx);
+  // FIXME: Could check object type here
+
+  // Execute the function
   sq_pushroottable(thread);
   if (SQ_FAILED(sq_call(thread, 1, SQFalse, SQTrue)))
     {
-      sq_pop(thread, 1); // pop the compiled closure
+      if(sq_getvmstate(thread) == SQ_VMSTATE_IDLE)
+        { // Cleanup stack
+          sq_settop(thread, oldtop);
+        }
+
       throw SquirrelError(thread, filename, "SquirrelThread::run(): Couldn't start script");
     }
   else
     {
-      sq_pop(thread, 1); // pop the compiled closure
+      if(sq_getvmstate(thread) == SQ_VMSTATE_IDLE)
+        sq_settop(thread, oldtop);
     }
 }
 

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -27,11 +27,13 @@
 class SquirrelThread
 {
 private:
-  std::string filename;
   HSQUIRRELVM parent_vm;
+  bool isolated;
+
   HSQUIRRELVM thread;
   HSQOBJECT   thread_obj;
 
+  std::string filename;
   SQInteger oldtop;
     
   ScriptManager::WakeupData  waiting_for_events;
@@ -40,9 +42,16 @@
   void create_thread();
 
 public:
-  SquirrelThread(HSQUIRRELVM parent_vm, std::istream& in, const std::string& arg_name);
+  SquirrelThread(HSQUIRRELVM parent_vm, bool isolated = true);
   ~SquirrelThread();
 
+  /** Load a script into the new thread */
+  void load(std::istream& in, const std::string& filename);
+
+  /** Load function at position \a idx into this SquirrelThread and
+      execute it */
+  void load(HSQUIRRELVM vm, SQInteger idx);
+
   void set_wakeup_event(const ScriptManager::WakeupData&  event, float timeout = -1);
   void set_wakeup_event(const ScriptManager::WakeupEvent& event, float timeout = -1);
 

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -367,6 +367,15 @@
   ScriptManager::current()->run_script_file(Sector::current()->get_directory() + filename);
 }
 
+SQInteger spawn_function(HSQUIRRELVM v) __custom
+{
+  boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script();
+  thread->load(v, -1);
+  sq_pop(v, 1);
+
+  return 0;
+}
+
 } // namespace Scripting
 
 /* EOF */

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -116,6 +116,7 @@
 SQInteger spawn_object(HSQUIRRELVM v) __custom;
 
 void spawn_script(const std::string& filename);
+SQInteger spawn_function(HSQUIRRELVM v) __custom;
 
 } // namespace Scripting
 

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-12 01:10:12 UTC (rev 2650)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-12 12:04:01 UTC (rev 2651)
@@ -1568,6 +1568,11 @@
 
 }
 
+static SQInteger spawn_function_wrapper(HSQUIRRELVM vm)
+{
+  return Scripting::spawn_function(vm);
+}
+
 } // end of namespace Wrapper
 void create_squirrel_instance(HSQUIRRELVM v, Scripting::GameObject* object, bool setup_releasehook)
 {
@@ -2060,6 +2065,12 @@
     throw SquirrelError(v, "Couldn't register function 'spawn_script'");
   }
 
+  sq_pushstring(v, "spawn_function", -1);
+  sq_newclosure(v, &spawn_function_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'spawn_function'");
+  }
+
   // Register class GameObject
   sq_pushstring(v, "GameObject", -1);
   if(sq_newclass(v, SQFalse) < 0) {



From grumbel at mail.berlios.de  Thu Mar 12 13:27:18 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 13:27:18 +0100
Subject: [Windstille-commit] r2652 - in trunk/windstille/src: engine
	scripting
Message-ID: <200903121227.n2CCRIm0017746@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 13:27:16 +0100 (Thu, 12 Mar 2009)
New Revision: 2652

Modified:
   trunk/windstille/src/engine/script_manager.cpp
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/engine/squirrel_thread.hpp
   trunk/windstille/src/scripting/interface.cpp
Log:
Parent spawn_function()'s to their spawning VM, not to the root VM

Modified: trunk/windstille/src/engine/script_manager.cpp
===================================================================
--- trunk/windstille/src/engine/script_manager.cpp	2009-03-12 12:04:01 UTC (rev 2651)
+++ trunk/windstille/src/engine/script_manager.cpp	2009-03-12 12:27:16 UTC (rev 2652)
@@ -132,10 +132,10 @@
 }
 
 boost::shared_ptr<SquirrelThread>
-ScriptManager::create_script()
+ScriptManager::create_script(HSQUIRRELVM parent_vm, bool isolated)
 {
   // Add VM to the list of VMs
-  squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm)));
+  squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(parent_vm, isolated)));
   return squirrel_vms.back();
 }
 
@@ -201,7 +201,7 @@
         }
       else
         { // Add VM to the list of VMs
-          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm)));
+          squirrel_vms.push_back(boost::shared_ptr<SquirrelThread>(new SquirrelThread(vm, true)));
           squirrel_vms.back()->load(in, filename);
           squirrel_vms.back()->call("init");
           squirrel_vms.back()->call("run");

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-12 12:04:01 UTC (rev 2651)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-12 12:27:16 UTC (rev 2652)
@@ -84,7 +84,7 @@
 
   /** Load script from \a filename and runs it */
   boost::shared_ptr<SquirrelThread> run_script_file(const std::string& filename, bool global = false);
-  boost::shared_ptr<SquirrelThread> create_script();
+  boost::shared_ptr<SquirrelThread> create_script(HSQUIRRELVM parent_vm, bool isolated);
 
   HSQUIRRELVM get_vm() const { return vm; }
 

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-12 12:04:01 UTC (rev 2651)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-12 12:27:16 UTC (rev 2652)
@@ -63,9 +63,9 @@
     }
 }
 
-SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm, bool isolated)
+SquirrelThread::SquirrelThread(HSQUIRRELVM parent_vm, bool isolated_)
   : parent_vm(parent_vm),
-    isolated(isolated),
+    isolated(isolated_),
     thread(0),
     filename("<unset>"),
     oldtop(-1),
@@ -74,6 +74,7 @@
 {
   create_thread();
 
+  std::cout << "SquirrelThread: isolated = " << isolated << std::endl;
   if (isolated)
     { // create a local environment for the thread
       HSQOBJECT env;
@@ -88,22 +89,20 @@
         }
       else
         {
-          {
-            sq_addref(thread, &env); 
-            sq_pop(thread, 1); // remove env from stack
+          sq_addref(thread, &env); 
+          sq_pop(thread, 1); // remove env from stack
     
-            // set old roottable as delegate on env
-            sq_pushobject(thread, env); // push env
-            sq_pushroottable(thread);   // [env, root]
-            sq_setdelegate(thread, -2); // env.set_delegate(root)
-            sq_pop(thread, 1);          // pop env
+          // set old roottable as delegate on env
+          sq_pushobject(thread, env); // push env
+          sq_pushroottable(thread);   // [env, root]
+          sq_setdelegate(thread, -2); // env.set_delegate(root)
+          sq_pop(thread, 1);          // pop env
 
-            // set env as new roottable
-            sq_pushobject(thread, env);
-            sq_setroottable(thread);
+          // set env as new roottable
+          sq_pushobject(thread, env);
+          sq_setroottable(thread);
 
-            sq_release(thread, &env);
-          }
+          sq_release(thread, &env);
         }
     }
 }

Modified: trunk/windstille/src/engine/squirrel_thread.hpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-12 12:04:01 UTC (rev 2651)
+++ trunk/windstille/src/engine/squirrel_thread.hpp	2009-03-12 12:27:16 UTC (rev 2652)
@@ -42,7 +42,7 @@
   void create_thread();
 
 public:
-  SquirrelThread(HSQUIRRELVM parent_vm, bool isolated = true);
+  SquirrelThread(HSQUIRRELVM parent_vm, bool isolated);
   ~SquirrelThread();
 
   /** Load a script into the new thread */

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-12 12:04:01 UTC (rev 2651)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-12 12:27:16 UTC (rev 2652)
@@ -369,7 +369,7 @@
 
 SQInteger spawn_function(HSQUIRRELVM v) __custom
 {
-  boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script();
+  boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script(v, false);
   thread->load(v, -1);
   sq_pop(v, 1);
 



From grumbel at mail.berlios.de  Thu Mar 12 15:17:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 12 Mar 2009 15:17:54 +0100
Subject: [Windstille-commit] r2653 - trunk/windstille
Message-ID: <200903121417.n2CEHs4M027594@sheep.berlios.de>

Author: grumbel
Date: 2009-03-12 15:17:54 +0100 (Thu, 12 Mar 2009)
New Revision: 2653

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-12 12:27:16 UTC (rev 2652)
+++ trunk/windstille/TODO	2009-03-12 14:17:54 UTC (rev 2653)
@@ -10,6 +10,41 @@
 Scripting
 =========
 
+* add ability to wait on custom event and add ability to fire of a
+  custom event:
+
+    wait_for("bob arrives at bar");
+    ...
+    fire("bob arrives at bar");
+
+  also add abilty for callbacks:
+
+    register_callback("bob arrives at bar", function(){
+       // do stuff
+    });
+
+  In which VM shall this be executed? In a new one? Wouldn't that be
+  the same as:
+
+    spawn_function(function(){
+       // needed so that the callback can be called multiple times 
+       while(true) { 
+         wait_for("bob arrives at bar");
+         // do stuff
+       }
+    });
+
+* think about if scripts spawned in a sector should be parented to the
+  sectors init script or to the root_vm, the later one is currently
+  the case, the first one however would make it easier to share
+  variables between scripts, on the other shared variable should often
+  be available across sectors, so a better sharing mechanism is likely needed
+
+  -> scripts could share state via a 'state' table defined in windstille.nut
+
+* add option to SquirrelThread to be removed after its done or removed
+  when a specific function is called (useful for spawning functions)
+
 * reentering a sector twice barfs because:
 
   std::exception: Squirrel error: sectors/apartment/init.nut:
@@ -71,14 +106,15 @@
   scripts (FIXME: not clear if there is enough benefit and flexibilty
   to try that)
 
-* print and println behave different on console
+* print and println behave different on console (?)
 
 Input Handling
 ==============
 
 * change of input context is troublesome: when the user selects a
   dialog and confirms it, the character starts to walk into the
-  direction that the player indicated.
+  direction that the player indicated, because the stick still points
+  in that direction after OK_BUTTON is pressed.
 
   Possible solution: wait till the controller is in neutral position
   before sending events to the next Screen
@@ -200,6 +236,8 @@
 Level Design
 ============
 
+* fix the particle system in newformat2.wst, speed/lifetime is wrong
+
 * implement light switches in apartment
 
   Currently the light switch-off sequence is done in the use script,



From grumbel at mail.berlios.de  Fri Mar 13 04:00:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 13 Mar 2009 04:00:48 +0100
Subject: [Windstille-commit] r2654 - in trunk/windstille: . data/scripts
	data/sectors/apartment src/engine src/hud src/scripting
Message-ID: <200903130300.n2D30mcI012521@sheep.berlios.de>

Author: grumbel
Date: 2009-03-13 04:00:43 +0100 (Fri, 13 Mar 2009)
New Revision: 2654

Modified:
   trunk/windstille/TODO
   trunk/windstille/data/scripts/windstille.nut
   trunk/windstille/data/sectors/apartment/apartment.wst
   trunk/windstille/data/sectors/apartment/init.nut
   trunk/windstille/src/engine/script_manager.hpp
   trunk/windstille/src/engine/squirrel_thread.cpp
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/hud/speech_manager.hpp
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Implemented some more stuff in SpeechManager and experimented with it a bit

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/TODO	2009-03-13 03:00:43 UTC (rev 2654)
@@ -10,6 +10,11 @@
 Scripting
 =========
 
+* add function that clears all scripts and rereads them from file
+
+* add check that looks into a scripts root table to see if init()
+  and/or run() is present
+
 * add ability to wait on custom event and add ability to fire of a
   custom event:
 
@@ -111,6 +116,8 @@
 Input Handling
 ==============
 
+* get rid of global game_time variable
+
 * change of input context is troublesome: when the user selects a
   dialog and confirms it, the character starts to walk into the
   direction that the player indicated, because the stick still points
@@ -139,6 +146,9 @@
 Miscellaneous
 =============
 
+* implement proper word wrap in SpeechManager and also add code to
+  'unstuck' speech bubbles when they go over the window border
+
 * Add option for ControllerHelpWindow to option menu
 
 * cleanup display/text_area.cpp, having scrolling and running text
@@ -183,9 +193,6 @@
 * make lightmap resolution independent (done, but an artifact remains
   when the resolution isn't dividable by LIGHTMAP_DIV)
 
-* write a LucasArts-like dialog system (i.e. non-blocking text,
-  instead of JRPG like boxes with portraits), see SpeechManager
-
 * PDA needs scrolling text thing (right analog stick?), TextArea has
   it implemented, but events don't to pass through PDA
 

Modified: trunk/windstille/data/scripts/windstille.nut
===================================================================
--- trunk/windstille/data/scripts/windstille.nut	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/data/scripts/windstille.nut	2009-03-13 03:00:43 UTC (rev 2654)
@@ -37,7 +37,8 @@
                                RENDER_MASK_COLORMAP | 
                                RENDER_MASK_BLURMAP)
 
-has_nightvision <- false;
+state <- {}
+  has_nightvision <- false;
 
 function nightvision_enabled(...)
 {
@@ -72,10 +73,21 @@
 function conversation_get()
 {
   conversation_show();
-  println("wait_for_conversation: " + wait_for_conversation());
+  wait_for_conversation();
+  //println("wait_for_conversation: " + );
   return conversation_get_selection();
 }
 
+function conversation(arr)
+{
+  foreach(val in arr) {
+    conversation_add2(val[0], val[1])
+  }
+
+  return ::conversation_get();
+}
+
+
 class Dialog {
   constructor(arg_align, arg_character, arg_portrait)
   {

Modified: trunk/windstille/data/sectors/apartment/apartment.wst
===================================================================
--- trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/data/sectors/apartment/apartment.wst	2009-03-13 03:00:43 UTC (rev 2654)
@@ -217,6 +217,17 @@
       (use-verb "Look")
       (script "barrobot.nut")
     )
+
+
+    (scriptable-object
+      (name "barrobot2")
+      (pos 770 177)
+      (z-pos -100)
+      (sprite  "models/objects/barrobot/barrobotsprite.sprite")
+      (active true)
+      (use-verb "Look")
+      (script "barrobot2.nut")
+    )
     
     (scriptable-object      
      (name "flashlight")

Modified: trunk/windstille/data/sectors/apartment/init.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/init.nut	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/data/sectors/apartment/init.nut	2009-03-13 03:00:43 UTC (rev 2654)
@@ -3,20 +3,47 @@
   // spawn_script("flicker.nut");
 
   println("spawn_function()");
-  spawn_function(function() {
-      while (true)
-        {
-          wait(0.1);
-          objects.lamp3.set_active(false);
-          wait(0.1);
-          objects.lamp3.set_active(true);
-          wait(0.1);
-          objects.lamp3.set_active(false);
-          wait(0.1);
-          objects.lamp3.set_active(true);
-          wait(1.0);
-        }
-    });
+
+  do_flicker <- false;
+
+  if (false)
+    { // Test of variable sharing
+      spawn_function(function() {
+          while (true)
+            {
+              wait(0.1);
+              objects.lamp3.set_active(false);
+              wait(0.1);
+              objects.lamp3.set_active(true);
+              wait(0.1);
+              objects.lamp3.set_active(false);
+              wait(0.1);
+              objects.lamp3.set_active(true);
+              wait(1.0);
+              do_flicker = !do_flicker;
+            }
+        });
+
+      spawn_function(function() {
+          while (true)
+            {
+              wait(0.1);
+
+              if (::do_flicker)
+                {
+                  wait(0.1);
+                  objects.lamp2.set_active(false);
+                  wait(0.1);
+                  objects.lamp2.set_active(true);
+                  wait(0.1);
+                  objects.lamp2.set_active(false);
+                  wait(0.1);
+                  objects.lamp2.set_active(true);
+                  wait(1.0);
+                }
+            }
+        });
+    }
 }
 
-    /* EOF */
+/* EOF */

Modified: trunk/windstille/src/engine/script_manager.hpp
===================================================================
--- trunk/windstille/src/engine/script_manager.hpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/engine/script_manager.hpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -51,6 +51,7 @@
       TIME,
       DIALOG_CLOSED,
       CONVERSATION_CLOSED,
+      SPEECH_DONE,
       FADE_DONE,
       CAMERA_DONE,
       GAMEOBJECT_DONE,
@@ -67,6 +68,7 @@
     union {
       // GAMEOBJECT_DONE
       GameObject* game_object;
+      int id;
     };
   };
 

Modified: trunk/windstille/src/engine/squirrel_thread.cpp
===================================================================
--- trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/engine/squirrel_thread.cpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -200,6 +200,13 @@
     {
       switch (event.type)
         {
+          case ScriptManager::SPEECH_DONE:
+            if (waiting_for_events.id == event.id)
+              {
+                wakeup_time = game_time;
+              }
+            break;
+
           case ScriptManager::GAMEOBJECT_DONE:
             if (waiting_for_events.game_object == event.game_object)
               {

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -16,35 +16,55 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "engine/entity.hpp"
+#include "engine/script_manager.hpp"
 #include "font/fonts.hpp"
 #include "speech_manager.hpp"
 
 SpeechManager* SpeechManager::current_ = 0;
 
-SpeechManager::Speech::Speech(const std::string& text, const Vector2f& pos, const Color& color)
-  : text(text),
-    pos(pos),
-    color(color),
+class Speech 
+{
+public:
+  int id;
+  std::string text;
+  Vector2f    pos;
+  Color       color;
+  float       seconds_passed;
+  float       wpm;
+
+  Speech(int id, const std::string& text, const Vector2f& pos, const Color& color);
+    
+  void draw();
+  void update(float delta);
+  bool is_done() const;
+};
+
+Speech::Speech(int id_, const std::string& text_, const Vector2f& pos_, const Color& color_)
+  : id(id_),
+    text(text_),
+    pos(pos_),
+    color(color_),
     seconds_passed(0.0f)
 {
 }
 
 void 
-SpeechManager::Speech::draw()
+Speech::draw()
 {
-  Fonts::vera20->draw(pos, text, color);
+  Fonts::vera20->draw_center(pos, text, color);
 }
 
 void
-SpeechManager::Speech::update(float delta)
+Speech::update(float delta)
 {
   seconds_passed += delta;
 }
 
 bool
-SpeechManager::Speech::is_done() const
+Speech::is_done() const
 {
-  float words = 1 + text.size() / 5.0f;
+  float words = 2 + text.size() / 5.0f;
   float words_per_minute = 150.0f;
   float words_per_second = words_per_minute / 60.0f;
   
@@ -52,6 +72,7 @@
 }
 
 SpeechManager::SpeechManager()
+  : speech_id(1)
 {
   assert(current_ == 0);
   current_ = this;
@@ -68,12 +89,26 @@
   current_ = 0;
 }
 
-void
-SpeechManager::add(const std::string& text, const Vector2f& pos, const Color& color)
+int
+SpeechManager::add(const std::string& text, 
+                   const Entity& entity,
+                   const Color& color)
 {
-  speeches.push_back(new Speech(text, pos, color));
+  return add(text, entity.get_pos(), color);
 }
 
+
+int
+SpeechManager::add(const std::string& text, 
+                   const Vector2f& pos, 
+                   const Color& color)
+{
+  int this_speech_id = speech_id;
+  speeches.push_back(new Speech(this_speech_id, text, pos, color));
+  speech_id += 1;
+  return this_speech_id;
+}
+
 void
 SpeechManager::draw()
 {
@@ -97,6 +132,11 @@
     {  
       if ((*i)->is_done())
         {
+          ScriptManager::WakeupData event;
+          event.type = ScriptManager::SPEECH_DONE;
+          event.id   = (*i)->id;
+          ScriptManager::current()->fire_wakeup_event(event);
+
           delete *i;
           *i = 0;
         }

Modified: trunk/windstille/src/hud/speech_manager.hpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.hpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/hud/speech_manager.hpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -26,6 +26,7 @@
 #include "display/color.hpp"
 
 class Entity;
+class Speech;
 
 /** The SpeechManager displays speech text over characters or
     objects, similar to what you see in LucasArts games */
@@ -37,24 +38,9 @@
   static SpeechManager* current() { return current_; }
 
 private:
-  class Speech 
-  {
-  public:
-    std::string text;
-    Vector2f    pos;
-    Color       color;
-    float       seconds_passed;
-    float       wpm;
-
-    Speech(const std::string& text, const Vector2f& pos, const Color& color);
-    
-    void draw();
-    void update(float delta);
-    bool is_done() const;
-  };
-
   typedef std::vector<Speech*> Speeches;
   Speeches speeches;
+  int speech_id;
 
 public:
   SpeechManager();
@@ -68,9 +54,13 @@
    *  @param pos   The position of the speech bubble in screen coordinates
    *  @param color The color of the speech bubble
    */
-  void add(const std::string& text, 
-           const Vector2f& pos, 
-           const Color& color = Color(1.0f, 1.0f, 1.0f));
+  int add(const std::string& text, 
+          const Vector2f& pos, 
+          const Color& color = Color(1.0f, 1.0f, 1.0f));
+  
+  int add(const std::string& text, 
+          const Entity& entity,
+          const Color& color = Color(1.0f, 1.0f, 1.0f));
 
   void draw();
   void update(float delta, const Controller& controller);

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -17,6 +17,7 @@
 */
 
 #include <vector>
+#include <assert.h>
 #include "wrapper.interface.hpp"
 #include "util.hpp"
 #include "interface.hpp"
@@ -159,11 +160,19 @@
     }
 }
 
-void speech_show(const std::string& text, float x, float y)
+int speech_show(const std::string& text, float x, float y, float r, float g, float b)
 {
-  SpeechManager::current()->add(text, Vector2f(x, y));
+  return SpeechManager::current()->add(text, Vector2f(x, y), Color(r, g, b));
 }
 
+void wait_for_speech(HSQUIRRELVM vm, int i) __suspend
+{
+  ScriptManager::WakeupData data;
+  data.type = ScriptManager::SPEECH_DONE;
+  data.id   = i;
+  ScriptManager::current()->get_thread(vm)->set_wakeup_event(data);
+}
+
 void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text)
 {
   DialogManager::current()->add_dialog(alignment, portrait, text);

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -55,7 +55,8 @@
 static const int TOP     = 0x10;
 static const int BOTTOM  = 0x20;
 
-void speech_show(const std::string& text, float x, float y);
+int  speech_show(const std::string& text, float x, float y, float r, float g, float b);
+void wait_for_speech(HSQUIRRELVM vm, int i) __suspend;
 
 void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text);
 void wait_for_dialog(HSQUIRRELVM vm) __suspend;

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-12 14:17:54 UTC (rev 2653)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-13 03:00:43 UTC (rev 2654)
@@ -793,11 +793,27 @@
     sq_throwerror(vm, _SC("Argument 3 not a float"));
     return SQ_ERROR;
   }
+  SQFloat arg3;
+  if(SQ_FAILED(sq_getfloat(vm, 5, &arg3))) {
+    sq_throwerror(vm, _SC("Argument 4 not a float"));
+    return SQ_ERROR;
+  }
+  SQFloat arg4;
+  if(SQ_FAILED(sq_getfloat(vm, 6, &arg4))) {
+    sq_throwerror(vm, _SC("Argument 5 not a float"));
+    return SQ_ERROR;
+  }
+  SQFloat arg5;
+  if(SQ_FAILED(sq_getfloat(vm, 7, &arg5))) {
+    sq_throwerror(vm, _SC("Argument 6 not a float"));
+    return SQ_ERROR;
+  }
 
   try {
-    Scripting::speech_show(arg0, static_cast<float> (arg1), static_cast<float> (arg2));
+    int return_value = Scripting::speech_show(arg0, static_cast<float> (arg1), static_cast<float> (arg2), static_cast<float> (arg3), static_cast<float> (arg4), static_cast<float> (arg5));
 
-    return 0;
+    sq_pushinteger(vm, return_value);
+    return 1;
 
   } catch(std::exception& e) {
     sq_throwerror(vm, e.what());
@@ -809,6 +825,30 @@
 
 }
 
+static SQInteger wait_for_speech_wrapper(HSQUIRRELVM vm)
+{
+  HSQUIRRELVM arg0 = vm;
+  SQInteger arg1;
+  if(SQ_FAILED(sq_getinteger(vm, 2, &arg1))) {
+    sq_throwerror(vm, _SC("Argument 1 not an integer"));
+    return SQ_ERROR;
+  }
+
+  try {
+    Scripting::wait_for_speech(arg0, static_cast<int> (arg1));
+
+    return sq_suspendvm(vm);
+
+  } catch(std::exception& e) {
+    sq_throwerror(vm, e.what());
+    return SQ_ERROR;
+  } catch(...) {
+    sq_throwerror(vm, _SC("Unexpected exception while executing function 'wait_for_speech'"));
+    return SQ_ERROR;
+  }
+
+}
+
 static SQInteger dialog_show_wrapper(HSQUIRRELVM vm)
 {
   SQInteger arg0;
@@ -1818,11 +1858,18 @@
 
   sq_pushstring(v, "speech_show", -1);
   sq_newclosure(v, &speech_show_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s f|i f|i f|i f|i f|i ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'speech_show'");
   }
 
+  sq_pushstring(v, "wait_for_speech", -1);
+  sq_newclosure(v, &wait_for_speech_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i ");
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'wait_for_speech'");
+  }
+
   sq_pushstring(v, "dialog_show", -1);
   sq_newclosure(v, &dialog_show_wrapper, 0);
   sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i s s s ");



From grumbel at mail.berlios.de  Fri Mar 13 22:55:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 13 Mar 2009 22:55:23 +0100
Subject: [Windstille-commit] r2655 - in trunk/windstille/src: app screen
Message-ID: <200903132155.n2DLtNgs031095@sheep.berlios.de>

Author: grumbel
Date: 2009-03-13 22:55:22 +0100 (Fri, 13 Mar 2009)
New Revision: 2655

Modified:
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/menu_manager.hpp
   trunk/windstille/src/screen/screen_manager.cpp
   trunk/windstille/src/screen/screen_manager.hpp
Log:
Added 'Controller Debug' to menu

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-13 03:00:43 UTC (rev 2654)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-13 21:55:22 UTC (rev 2655)
@@ -78,7 +78,12 @@
                 boost::bind(&MenuManager::menu_fullscreen, _1))
     .add_pair(0, "off")
     .add_pair(1, "on");
-  
+
+  menu.add_enum("Controller Debug", screen_manager.get_show_controller_debug(),
+                boost::bind(&MenuManager::menu_controller_debug, _1))
+    .add_pair(0, "off")
+    .add_pair(1, "on");
+
   menu.add_enum("Difficulty", 1)
     .add_pair(0, "easy")
     .add_pair(1, "medium")
@@ -435,6 +440,12 @@
 }
 
 void
+MenuManager::menu_controller_debug(int i)
+{
+  screen_manager.show_controller_debug(i);
+}
+
+void
 MenuManager::menu_continue()
 {
   screen_manager.pop_overlay();

Modified: trunk/windstille/src/app/menu_manager.hpp
===================================================================
--- trunk/windstille/src/app/menu_manager.hpp	2009-03-13 03:00:43 UTC (rev 2654)
+++ trunk/windstille/src/app/menu_manager.hpp	2009-03-13 21:55:22 UTC (rev 2655)
@@ -56,6 +56,7 @@
   static void menu_exit();
   static void menu_show_fps(int i);
   static void menu_fullscreen(int i);
+  static void menu_controller_debug(int i);
   static void menu_continue();
 
   static void menu_master_volume(int i);

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-03-13 03:00:43 UTC (rev 2654)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-03-13 21:55:22 UTC (rev 2655)
@@ -378,5 +378,18 @@
 {
   do_quit = true;
 }
+
+void
+ScreenManager::show_controller_debug(bool v)
+{
+  show_controller_help_window = v;
+}
+
+bool
+ScreenManager::get_show_controller_debug() const
+{
+  return show_controller_help_window;
+}
+
 
 /* EOF */

Modified: trunk/windstille/src/screen/screen_manager.hpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.hpp	2009-03-13 03:00:43 UTC (rev 2654)
+++ trunk/windstille/src/screen/screen_manager.hpp	2009-03-13 21:55:22 UTC (rev 2655)
@@ -48,7 +48,7 @@
   int   last_fps;
   float overlap_delta;
   bool  do_quit;
-  bool show_controller_help_window;
+  bool  show_controller_help_window;
 
 public:
   ScreenManager();
@@ -64,13 +64,18 @@
   void push_screen(Screen* s);
   void pop_screen();
 
-  /** Push an overlay screen, the screen will be delete'ed once it is no longer needed */
+  /**
+   *  Push an overlay screen, the screen will be delete'ed once it is
+   *  no longer needed. An overlay is a non-fullscreen screen like a
+   *  menu that is layed over a fullscreen-screen and receives input.
+   */
   void push_overlay(Screen* s);
   void pop_overlay();
   void clear_overlay();
 
   // Callbacks, FIXME: Could be moved to a seperate class
-  void show_fps(int i);
+  void show_controller_debug(bool v);
+  bool get_show_controller_debug() const;
 
 private:
   void poll_events();



From grumbel at mail.berlios.de  Fri Mar 13 23:01:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 13 Mar 2009 23:01:29 +0100
Subject: [Windstille-commit] r2656 - trunk/windstille/src/gui
Message-ID: <200903132201.n2DM1TFA031560@sheep.berlios.de>

Author: grumbel
Date: 2009-03-13 23:01:29 +0100 (Fri, 13 Mar 2009)
New Revision: 2656

Modified:
   trunk/windstille/src/gui/menu.cpp
Log:
Pass index to EnumMenuItem

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-13 21:55:22 UTC (rev 2655)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-13 22:01:29 UTC (rev 2656)
@@ -51,7 +51,7 @@
 Menu::add_enum(const std::string& name, int index,
                const boost::function<void (int)>& callback)
 {
-  std::auto_ptr<EnumMenuItem> enum_item(new EnumMenuItem(menu.get(), name));
+  std::auto_ptr<EnumMenuItem> enum_item(new EnumMenuItem(menu.get(), name, index));
 
   if (callback)
     enum_item->sig_change().connect(callback);



From grumbel at mail.berlios.de  Fri Mar 13 23:43:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 13 Mar 2009 23:43:39 +0100
Subject: [Windstille-commit] r2657 - trunk/windstille/src/hud
Message-ID: <200903132243.n2DMhdS7002365@sheep.berlios.de>

Author: grumbel
Date: 2009-03-13 23:43:39 +0100 (Fri, 13 Mar 2009)
New Revision: 2657

Modified:
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/pda.hpp
Log:
Added scrolling to PDA (doesn't look good since 'UI' and text are in one text area)

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-03-13 22:01:29 UTC (rev 2656)
+++ trunk/windstille/src/hud/pda.cpp	2009-03-13 22:43:39 UTC (rev 2657)
@@ -38,14 +38,13 @@
 PDA::PDA()
   : state(PDA_OBJECTIVES)
 { 
-  text_area  = 0;
   background = Sprite("images/pda/pda.sprite");
 }
 
 void
 PDA::draw()
 {
-  if (text_area)
+  if (text_area.get())
     {
       // Darken the background a bit
       Display::fill_rect(Rect(0, 0, Display::get_width(), Display::get_height()), Color(0.0f, 0.0f, 0.0f, 0.25f));
@@ -66,41 +65,49 @@
 PDA::update(float delta, const Controller& controller)
 {
   const InputEventLst& events = controller.get_events();
-  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i) {
-    if (i->type == BUTTON_EVENT)
-      {
-        if (i->axis.name == MENU_LEFT_BUTTON && i->button.down) 
-          {
-            state = static_cast<pda_state>(state + 1);
-            if (state > PDA_DIALOGS)
-              state = PDA_OBJECTIVES;
-          }
-        else if (i->axis.name == MENU_RIGHT_BUTTON && i->button.down) 
-          {
-            state = static_cast<pda_state>(state - 1);
-            if (state < PDA_OBJECTIVES)
-              state = PDA_DIALOGS;
-          }
-      }
-  }
+
+  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT)
+        {
+          if (i->axis.name == MENU_LEFT_BUTTON && i->button.down) 
+            {
+              state = static_cast<pda_state>(state + 1);
+              if (state > PDA_DIALOGS)
+                state = PDA_OBJECTIVES;
+            }
+          else if (i->axis.name == MENU_RIGHT_BUTTON && i->button.down) 
+            {
+              state = static_cast<pda_state>(state - 1);
+              if (state < PDA_OBJECTIVES)
+                state = PDA_DIALOGS;
+            }
+        }
+    }
+  
+  if (text_area.get())
+    text_area->set_scroll_offset(text_area->get_scroll_offset() + 500.0f * controller.get_axis_state(Y2_AXIS) * delta);
     
-  switch (state) {
-  case PDA_OBJECTIVES:
-    show_objectives();
-    break;
-  case PDA_DIALOGS:
-    show_dialogs();
-    break;
-  }
+  switch (state) 
+    {
+      case PDA_OBJECTIVES:
+        show_objectives();
+        break;
+
+      case PDA_DIALOGS:
+        show_dialogs();
+        break;
+    }
  
-  if (new_text != old_text) {
-    delete text_area; // FIXME: Unneeded could just use set_text
-    text_area = new TextArea(Rectf(70, 83, 385, 520).grow(-12.0f), false);
-    text_area->set_font(Fonts::ttffont);
-    text_area->set_text(new_text);
+  if (new_text != old_text) 
+    {
+      // FIXME: Unneeded could just use set_text
+      text_area.reset(new TextArea(Rectf(70, 83, 385, 520).grow(-12.0f), false));
+      text_area->set_font(Fonts::ttffont);
+      text_area->set_text(new_text);
     
-    old_text = new_text;
-  }
+      old_text = new_text;
+    }
   
   text_area->update(delta);
 }
@@ -120,20 +127,22 @@
 void
 PDA::objective_complete(const std::string& name)
 {
-  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) {
-    if (i->name == name)
-      i->complete = true;
+  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) 
+    {
+      if (i->name == name)
+        i->complete = true;
       return;
-  }
+    }
 }
 
 bool
 PDA::is_objective_given(const std::string& name)
 {
-  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) {
-    if (i->name == name)
-      return true;
-  }
+  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) 
+    {
+      if (i->name == name)
+        return true;
+    }
   
   return false;
 }
@@ -141,10 +150,11 @@
 bool
 PDA::is_objective_complete(const std::string& name)
 {
-  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) {
-    if (i->name == name && i->complete)
-      return true;
-  }
+  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) 
+    {
+      if (i->name == name && i->complete)
+        return true;
+    }
   
   return false;
 }
@@ -155,15 +165,18 @@
   new_text = "<large>Personal Digital Assistant</large>\n";
   new_text += "<b>objectives</b> - dialogs\n\n";
   
-  for (std::vector<ObjectiveEntry>::reverse_iterator i = objectives.rbegin(); i != objectives.rend(); ++i) {
-    new_text += i->name;
-    new_text += ": ";
-    if (i->complete)
-      new_text += "complete\n";
-    else
-      new_text += "incomplete\n";
-    new_text += i->text + "\n\n";
-  }
+  for (std::vector<ObjectiveEntry>::reverse_iterator i = objectives.rbegin(); i != objectives.rend(); ++i) 
+    {
+      new_text += i->name;
+      new_text += ": ";
+
+      if (i->complete)
+        new_text += "complete\n";
+      else
+        new_text += "incomplete\n";
+
+      new_text += i->text + "\n\n";
+    }
 }
 
 void
@@ -172,11 +185,12 @@
   new_text = "<large>Personal Digital Assistant</large>\n";
   new_text += "objectives - <b>dialogs</b>\n\n";
   
-  for (std::vector<DialogEntry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) {
-    new_text += i->character;
-    new_text += ": ";
-    new_text += i->text + '\n';
-  }
+  for (std::vector<DialogEntry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) 
+    {
+      new_text += i->character;
+      new_text += ": ";
+      new_text += i->text + '\n';
+    }
 }
 
 /* EOF */

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-03-13 22:01:29 UTC (rev 2656)
+++ trunk/windstille/src/hud/pda.hpp	2009-03-13 22:43:39 UTC (rev 2657)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_HUD_PDA_HPP
 #define HEADER_WINDSTILLE_HUD_PDA_HPP
 
+#include <memory>
 #include "sprite2d/sprite.hpp"
 #include "screen/screen.hpp"
 
@@ -48,7 +49,7 @@
 {
 private:
   Sprite    background;
-  TextArea* text_area;
+  std::auto_ptr<TextArea>  text_area;
   std::vector<DialogEntry> dialogs;
   std::vector<ObjectiveEntry> objectives;   
   



From grumbel at mail.berlios.de  Fri Mar 13 23:44:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 13 Mar 2009 23:44:12 +0100
Subject: [Windstille-commit] r2658 - in trunk/windstille: . src/hud
Message-ID: <200903132244.n2DMiCep002445@sheep.berlios.de>

Author: grumbel
Date: 2009-03-13 23:44:11 +0100 (Fri, 13 Mar 2009)
New Revision: 2658

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/hud/speech_manager.cpp
Log:
Added 100msec empty gap between successive speech bubbles

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-13 22:43:39 UTC (rev 2657)
+++ trunk/windstille/TODO	2009-03-13 22:44:11 UTC (rev 2658)
@@ -1,17 +1,26 @@
 Windstille ToDo
 ===============
 
-This is a list of tasks that need to be done in Windstille. This list
-is neither complete nor authoritative, so don't just blindly implement
-from this list, instead use this list just as guide for things that
-might be worth to implement, but not necesarrily have to. Some ideas
-in this list might actually be bad and better solved by other means.
+This is a list of tasks that need to be done in Windstille. However
+this list is neither complete nor authoritative, so don't just blindly
+implement things from this list, instead use this list just as guide
+for things that might be worth to implement, but not necesarrily have
+to. Some ideas in this list might actually be bad and better solved by
+other means.
 
 Scripting
 =========
 
-* add function that clears all scripts and rereads them from file
+* maybe: introduce some cleaner seperation between scripts that are
+  allowed to suspend and those that aren't
 
+* NavigationGraph needs hooks into scripting, so that things can be
+  triggered when a character passes over a specific trigger node or
+  things like that.
+
+* add function that clears all scripts and rereads them from file (for
+  debugging)
+
 * add check that looks into a scripts root table to see if init()
   and/or run() is present
 
@@ -147,13 +156,20 @@
 =============
 
 * implement proper word wrap in SpeechManager and also add code to
-  'unstuck' speech bubbles when they go over the window border
+  'unstuck' speech bubbles when they go over the window border.
 
+  Also SpeechManager should act in worldspace, not screenspace or
+  something clever inbetween.
+
 * Add option for ControllerHelpWindow to option menu
 
-* cleanup display/text_area.cpp, having scrolling and running text
-  together doesn't make all that much sense, also functions are too large 
+* cleanup TextArea/text_area.cpp, having scrolling and running text
+  together doesn't make all that much sense, also functions are too
+  large
 
+  Scrollbar is to far on the left, outside of the actual Rect, need to
+  shrink horizontal width if text needs a scrollbar
+
 * scrap inventory and redesign it
 
 * When starting sector directly from command line, "Return to title screen" doesn't work
@@ -164,7 +180,8 @@
   scroll bars on large resolutions and empty space when they have to
   few items
 
-* create a UTF32 string class, maybe based on basic_string<>, for use in console
+* create a UTF32 string class, maybe based on basic_string<uint32_t>,
+  for use in console
 
 * join Player and Character somewhat or derive one from the other, so
   that one can have scripted people running and jumping around
@@ -191,17 +208,15 @@
   shouldn't be persistent unless told so
 
 * make lightmap resolution independent (done, but an artifact remains
-  when the resolution isn't dividable by LIGHTMAP_DIV)
+  when the resolution isn't dividable by LIGHTMAP_DIV):
 
-* PDA needs scrolling text thing (right analog stick?), TextArea has
-  it implemented, but events don't to pass through PDA
+  1680x1050 -> 1050 / 4 -> 262.5 -> 262 * 4 -> 1048
 
+  two pixel missing at the bottom
+
 * Specify the capabilites that the different subsystems need to have
 
 * make Console not derive from ostream
-
-* GridComponent and ParticleViewer leak (FIXME: Kick out
-  GridComponent, since it doesn't work anyway?)
 
 Profiling
 =========

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-03-13 22:43:39 UTC (rev 2657)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-03-13 22:44:11 UTC (rev 2658)
@@ -31,8 +31,8 @@
   Vector2f    pos;
   Color       color;
   float       seconds_passed;
-  float       wpm;
-
+  float       seconds_till_done;
+  
   Speech(int id, const std::string& text, const Vector2f& pos, const Color& color);
     
   void draw();
@@ -47,12 +47,22 @@
     color(color_),
     seconds_passed(0.0f)
 {
+  // FIXME: Calculate words by other means, this isn't good for long text
+  float words = 2 + text.size() / 5.0f;
+  float words_per_minute = 150.0f;
+  float words_per_second = words_per_minute / 60.0f;
+
+  seconds_till_done = words / words_per_second;
 }
 
 void 
 Speech::draw()
 {
-  Fonts::vera20->draw_center(pos, text, color);
+  // Do not display any text for 0.1 seconds before we are doen, so
+  // that we get an empty gap between succesive text on the screen,
+  // which is needed to make text look more like natural speech.
+  if (seconds_passed < (seconds_till_done - .1f))
+    Fonts::vera20->draw_center(pos, text, color);
 }
 
 void
@@ -64,11 +74,7 @@
 bool
 Speech::is_done() const
 {
-  float words = 2 + text.size() / 5.0f;
-  float words_per_minute = 150.0f;
-  float words_per_second = words_per_minute / 60.0f;
-  
-  return (seconds_passed * words_per_second) > words;
+  return seconds_passed > seconds_till_done;
 }
 
 SpeechManager::SpeechManager()



From grumbel at mail.berlios.de  Sat Mar 14 14:48:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 14:48:25 +0100
Subject: [Windstille-commit] r2659 - in trunk/windstille: .
	data/sectors/newformat2 src/hud src/objects src/screen
Message-ID: <200903141348.n2EDmP6r030388@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 14:48:23 +0100 (Sat, 14 Mar 2009)
New Revision: 2659

Modified:
   trunk/windstille/TODO
   trunk/windstille/data/sectors/newformat2/newformat2.nut
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/pda.hpp
   trunk/windstille/src/hud/speech_manager.cpp
   trunk/windstille/src/hud/speech_manager.hpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/screen/game_session.cpp
   trunk/windstille/src/screen/game_session.hpp
   trunk/windstille/src/screen/view.cpp
   trunk/windstille/src/screen/view.hpp
Log:
Random cleanup

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/TODO	2009-03-14 13:48:23 UTC (rev 2659)
@@ -14,6 +14,12 @@
 * maybe: introduce some cleaner seperation between scripts that are
   allowed to suspend and those that aren't
 
+  - name them differently
+  - name their trigger/hooks differently
+  - remove suspendable functions from roottable
+  - put suspendable functions into a different namespace
+  - ...
+
 * NavigationGraph needs hooks into scripting, so that things can be
   triggered when a character passes over a specific trigger node or
   things like that.
@@ -155,14 +161,23 @@
 Miscellaneous
 =============
 
+* No object shall grab input by itself, instead the Screen should
+  route it, i.e. Player is grabbing input itself, this leads to
+  problems
+
+* map laserpointer to the second analog-stick, make mapping absolute,
+  not relative, also add option to toggle between debugging mapping
+  and gameplay mapping (i.e. moving view via second analogstick)
+
+* maybe create an additional layer in SceneContext for drawing things
+  like Speech and other worldspace GUI elements to it
+
 * implement proper word wrap in SpeechManager and also add code to
   'unstuck' speech bubbles when they go over the window border.
 
   Also SpeechManager should act in worldspace, not screenspace or
   something clever inbetween.
 
-* Add option for ControllerHelpWindow to option menu
-
 * cleanup TextArea/text_area.cpp, having scrolling and running text
   together doesn't make all that much sense, also functions are too
   large
@@ -180,8 +195,9 @@
   scroll bars on large resolutions and empty space when they have to
   few items
 
-* create a UTF32 string class, maybe based on basic_string<uint32_t>,
-  for use in console
+* create a UTF32 string class for use in console, basically
+  basic_string<uint32_t> and a convert function to UTF-8 should be
+  enough
 
 * join Player and Character somewhat or derive one from the other, so
   that one can have scripted people running and jumping around

Modified: trunk/windstille/data/sectors/newformat2/newformat2.nut
===================================================================
--- trunk/windstille/data/sectors/newformat2/newformat2.nut	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/data/sectors/newformat2/newformat2.nut	2009-03-14 13:48:23 UTC (rev 2659)
@@ -19,7 +19,6 @@
 
 function run()
 {
-  set_controller_help_active(true);
   objects.player_flames2.set_active(false);
   objects.player_flames.set_active(false);      
 

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/hud/pda.cpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -41,6 +41,10 @@
   background = Sprite("images/pda/pda.sprite");
 }
 
+PDA::~PDA()
+{
+}
+
 void
 PDA::draw()
 {

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/hud/pda.hpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -62,6 +62,7 @@
 
 public:
   PDA();
+  virtual ~PDA();
 
   void draw();
   void update(float delta, const Controller& controller);

Modified: trunk/windstille/src/hud/speech_manager.cpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.cpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/hud/speech_manager.cpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -82,8 +82,6 @@
 {
   assert(current_ == 0);
   current_ = this;
-
-  add("Hello World", Vector2f(320, 200), Color(255, 255, 0));
 }
 
 SpeechManager::~SpeechManager()
@@ -96,18 +94,13 @@
 }
 
 int
-SpeechManager::add(const std::string& text, 
-                   const Entity& entity,
-                   const Color& color)
+SpeechManager::add(const std::string& text, const Entity& entity, const Color& color)
 {
   return add(text, entity.get_pos(), color);
 }
 
-
 int
-SpeechManager::add(const std::string& text, 
-                   const Vector2f& pos, 
-                   const Color& color)
+SpeechManager::add(const std::string& text, const Vector2f& pos, const Color& color)
 {
   int this_speech_id = speech_id;
   speeches.push_back(new Speech(this_speech_id, text, pos, color));
@@ -126,7 +119,7 @@
 }
 
 void
-SpeechManager::update(float delta, const Controller& controller)
+SpeechManager::update(float delta)
 {
   for(Speeches::iterator i= speeches.begin(); i != speeches.end(); ++i)
     {

Modified: trunk/windstille/src/hud/speech_manager.hpp
===================================================================
--- trunk/windstille/src/hud/speech_manager.hpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/hud/speech_manager.hpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -21,7 +21,6 @@
 
 #include <string>
 #include <vector>
-#include "screen/screen.hpp"
 #include "math/vector2f.hpp"
 #include "display/color.hpp"
 
@@ -30,7 +29,7 @@
 
 /** The SpeechManager displays speech text over characters or
     objects, similar to what you see in LucasArts games */
-class SpeechManager : public Screen
+class SpeechManager
 {
 private:
   static SpeechManager* current_;
@@ -63,7 +62,7 @@
           const Color& color = Color(1.0f, 1.0f, 1.0f));
 
   void draw();
-  void update(float delta, const Controller& controller);
+  void update(float delta);
 
 private:
   SpeechManager (const SpeechManager&);

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -767,7 +767,6 @@
       cur_vel.x = 0;
     }
   c_object->set_velocity (cur_vel);
-  
 }
 
 void 

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/objects/player.hpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -98,8 +98,8 @@
 
   int get_movement_state() { return state; }
 
-  void draw (SceneContext& gc);
-  void update (float delta);
+  void draw(SceneContext& gc);
+  void update(float delta);
 
   void start_listening();
   void stop_listening();
@@ -125,43 +125,44 @@
    * language for this?
    */
   
-  void update_walk_stand();
-  void set_stand();
+
+  void update_ducked();
+  void update_ducking();
+  void update_listen();
+  void update_run();
   void update_stand();
-  void set_walk(Direction direction);
+  void update_stand_to_listen();
+  void update_turnaround();
   void update_walk();
+  void update_walk_stand();
+  void update_jump_air();
+  void update_jump_begin();
+  void update_jump_land();
+  void update_jump_up_air();
+  void update_jump_up_begin();
+  void update_jump_up_land();
+  void update_pull_gun();
+  void update_stairs(float delta);
+
+  void leave_run();
   void leave_walk();
+  void set_ducked();
   void set_ducking();
-  void update_ducking();
-  void set_ducked();
-  void update_ducked();
-  void set_turnaround();
-  void update_turnaround();
-  void set_stand_to_listen(bool backwards);
-  void update_stand_to_listen();
   void set_listen();
-  void update_listen();
   void set_run();
-  void update_run();
-  void leave_run();
+  void set_stand();
+  void set_stand_to_listen(bool backwards);
+  void set_turnaround();
+  void set_walk(Direction direction);
   
+  void set_jump_air();
   void set_jump_begin();
-  void update_jump_begin();
-  void set_jump_air();
-  void update_jump_air();
   void set_jump_land();
-  void update_jump_land();
   
+  void set_jump_up_air();
   void set_jump_up_begin();
-  void update_jump_up_begin();
-  void set_jump_up_air();
-  void update_jump_up_air();
   void set_jump_up_land();
-  void update_jump_up_land();
 
-  void update_pull_gun();
-  void update_stairs(float delta);
-
   /**
    * Sets an action for the sprite. In contrast to sprite->set_action this
    * function will not restart the action if it was already running

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -93,9 +93,12 @@
   Inventory     inventory;
   PDA           pda;
 
+  /** Pointer to either pda, inventory, conversation or
+      dialog_manager. Receives input and gets drawn to the screen */
   Screen* current_gui;
 
-  GameSessionImpl() {
+  GameSessionImpl() 
+  {
     current_gui    = 0;
     cutscene_mode  = false;
     cutscene_value = 0.0f;
@@ -105,21 +108,29 @@
     fade_time      = 1.0f;
   }
 
-  ~GameSessionImpl() {
+  ~GameSessionImpl() 
+  {
   }
 
   void draw();
+
+  void update_cutscene(float delta);
+  void update_input(float delta);
+  void update_controller(float delta, const Controller& controller);
+  void update_game(float delta);
   void update(float delta, const Controller& controller);
+  
   void handle_event(const SDL_Event& event);
 };
 
 GameSession::GameSession(const std::string& arg_filename)
   : impl(new GameSessionImpl())
 {
+  current_ = this;
+
   impl->filename = arg_filename;
 
   if (debug) std::cout << "Creating new GameSession" << std::endl;
-  current_ = this;
 
   impl->pause = false;
   
@@ -128,6 +139,7 @@
 
 GameSession::~GameSession()
 {
+  current_ = 0;
 }
 
 void
@@ -153,7 +165,7 @@
   if (fade_state == FADEOUT || fade_state == FADEIN)
     {
       Display::fill_rect(Rect(0, 0, 
-                               Display::get_width(), Display::get_height()),
+                              Display::get_width(), Display::get_height()),
                          Color(fade_color.r, fade_color.g, fade_color.b, fadeout_value));
     }
 
@@ -167,8 +179,8 @@
 }
 
 void
-GameSessionImpl::update(float delta, const Controller& controller)
-{  
+GameSessionImpl::update_cutscene(float delta)
+{
   // Cutscene stuff (black bars that fade-in/out
   if (cutscene_mode)
     cutscene_value += delta * 0.75f;
@@ -178,55 +190,59 @@
   if (cutscene_value > 1.0f)
     cutscene_value = 1.0f;
   else if (cutscene_value < 0.0f)
-    cutscene_value = 0.0f;
+    cutscene_value = 0.0f;  
+}
 
-  // if (controller.button_was_pressed(PAUSE_BUTTON))
-  // pause = !pause;
-
+void
+GameSessionImpl::update_input(float delta)
+{
   Uint8 *keystate = SDL_GetKeyState(NULL);
   
   // Hacks to play around with the game speed
   if(keystate[SDLK_KP1])
     game_speed *= 1.0 - delta;
+
   if(keystate[SDLK_KP3])
     game_speed *= 1.0 + delta;
+
   if(keystate[SDLK_KP5])
-    game_speed = 1.0;
- 
-  delta *= game_speed;
+    game_speed = 1.0;  
+}
 
-  // Update the game
-  if (!pause)
-    {
-      game_time += delta;
-      ScriptManager::current()->update();
+void
+GameSessionImpl::update_game(float delta)
+{
+  game_time += delta;
+  ScriptManager::current()->update();
       
-      view.update(delta, controller);
-      sector->update(delta);
+  view.update(delta);
+  sector->update(delta);
+      
+  speech_manager.update(delta);
   
-      switch (fade_state)
-        {
-        case FADEIN:
-          if (fadeout_value <= 0.0f)
-            {
-              fade_state = RUNNING;
-              fadeout_value = 0.0f;
-              ScriptManager::current()->fire_wakeup_event(ScriptManager::FADE_DONE);
-            }
-          else
-            {
-              fadeout_value -= delta * fade_time;
-            }
-          break;
+  switch (fade_state)
+    {
+      case FADEIN:
+        if (fadeout_value <= 0.0f)
+          {
+            fade_state = RUNNING;
+            fadeout_value = 0.0f;
+            ScriptManager::current()->fire_wakeup_event(ScriptManager::FADE_DONE);
+          }
+        else
+          {
+            fadeout_value -= delta * fade_time;
+          }
+        break;
 
-        case FADEOUT:
-          if (fadeout_value >= 1.0f)
-            { 
-              fadeout_value = 1.0f;
-              ScriptManager::current()->fire_wakeup_event(ScriptManager::FADE_DONE);
+      case FADEOUT:
+        if (fadeout_value >= 1.0f)
+          { 
+            fadeout_value = 1.0f;
+            ScriptManager::current()->fire_wakeup_event(ScriptManager::FADE_DONE);
 
-              switch(next_action)
-                {
+            switch(next_action)
+              {
                 case CHANGE_SECTOR_ACTION:
                   GameSession::current()->set_sector(filename);
                   break;
@@ -237,23 +253,22 @@
 
                 default:
                   break;
-                }
-            }
-          else
-            {
-              fadeout_value += delta * fade_time;
-            }
-          break;
+              }
+          }
+        else
+          {
+            fadeout_value += delta * fade_time;
+          }
+        break;
 
-        case RUNNING:
-          if (current_gui)
-            current_gui->update(delta, controller);
-          break;
-        }
-      
-      speech_manager.update(delta, controller);
+      case RUNNING:
+        break;
     }
+}
 
+void
+GameSessionImpl::update_controller(float delta, const Controller& controller)
+{ 
   // Handle key presses
   if (controller.button_was_pressed(PDA_BUTTON))
     {
@@ -274,9 +289,34 @@
     {
       MenuManager::display_pause_menu();
     }
+
+  if (current_gui)
+    {
+      current_gui->update(delta, controller);
+    }
+  else
+    {
+      // FIXME: route controller to player
+    }
 }
 
 void
+GameSessionImpl::update(float delta, const Controller& controller)
+{  
+  update_cutscene(delta);
+
+  delta *= game_speed;
+
+  // Update the game
+  if (!pause)
+    {
+      update_game(delta);
+    }
+  
+  update_controller(delta, controller);
+}
+
+void
 GameSession::change_sector(const std::string& arg_filename)
 {
   impl->filename = arg_filename;
@@ -307,71 +347,72 @@
   
   impl->sector->activate();
   
-  if (debug) std::cout << "Finished changing sector" << std::endl;
+  if (debug) 
+    std::cout << "Finished changing sector" << std::endl;
 }
 
 void
 GameSessionImpl::handle_event(const SDL_Event& event)
 {
   switch(event.type)
-  {
-    case SDL_KEYDOWN:
-    case SDL_KEYUP:
-      if (event.key.state)
-        {    
-          switch (event.key.keysym.sym)
-            {
-            case SDLK_1:
-              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
-              console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
-              break;
+    {
+      case SDL_KEYDOWN:
+      case SDL_KEYUP:
+        if (event.key.state)
+          {    
+            switch (event.key.keysym.sym)
+              {
+                case SDLK_1:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
+                  console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
+                  break;
 
-            case SDLK_2:
-              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
-              console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
-              break;
+                case SDLK_2:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
+                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
+                  break;
       
-            case SDLK_3:
-              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
-              console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
-              break;      
+                case SDLK_3:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
+                  console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
+                  break;      
   
-            case SDLK_4:
-              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
-              console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
-              break;
+                case SDLK_4:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
+                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
+                  break;
 
-            case SDLK_5:
-              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::BLURMAP);
-              console << "Toggled blurmap: " << ((sc.get_render_mask() & SceneContext::BLURMAP) > 0) << std::endl;
-              break;
+                case SDLK_5:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::BLURMAP);
+                  console << "Toggled blurmap: " << ((sc.get_render_mask() & SceneContext::BLURMAP) > 0) << std::endl;
+                  break;
 
 
-            case SDLK_c:
-              if (debug) {
-                collision_debug = !collision_debug;
-                console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
-              }
-              break;
+                case SDLK_c:
+                  if (debug) {
+                    collision_debug = !collision_debug;
+                    console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
+                  }
+                  break;
 
-            case SDLK_F2:
-              MenuManager::display_debug_menu();
-              break;
+                case SDLK_F2:
+                  MenuManager::display_debug_menu();
+                  break;
         
-            default:
-              break;
-            }
+                default:
+                  break;
+              }
+          }
+        break;
+        
+      case SDL_MOUSEBUTTONDOWN:
+        {
+          Vector2f real_pos = GameSession::current()->get_view()->screen_to_world(Vector2f(event.button.x,
+                                                                                           event.button.y));      
+          console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
         }
-      break;
-        
-    case SDL_MOUSEBUTTONDOWN:
-      {
-        Vector2f real_pos = GameSession::current()->get_view()->screen_to_world(Vector2f(event.button.x,
-                                                                                  event.button.y));      
-        console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
-      }
-      break;
-  }
+        break;
+    }
 }
 
 void
@@ -421,17 +462,17 @@
 {
   switch(state)
     {
-    case DIALOG:
-      impl->current_gui = &impl->dialog_manager;
-      break;
+      case DIALOG:
+        impl->current_gui = &impl->dialog_manager;
+        break;
 
-    case CONVERSATION:
-      impl->current_gui = &impl->conversation;
-      break;
+      case CONVERSATION:
+        impl->current_gui = &impl->conversation;
+        break;
 
-    case GAME:
-      impl->current_gui = 0;
-      break;
+      case GAME:
+        impl->current_gui = 0;
+        break;
     }
 }
 

Modified: trunk/windstille/src/screen/game_session.hpp
===================================================================
--- trunk/windstille/src/screen/game_session.hpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/screen/game_session.hpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -45,6 +45,7 @@
   enum ControlState { DIALOG, GAME, CONVERSATION };
 private:
   static GameSession* current_; 
+
 public:
   static GameSession* current() { return current_; } 
 

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/screen/view.cpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -21,13 +21,15 @@
 #include "collision/collision_engine.hpp"
 #include "objects/player.hpp"
 #include "engine/sector.hpp"
+#include "input/input_manager.hpp"
 #include "view.hpp"
 
 View* View::current_ = 0;
 
 View::View()
   : state(Display::get_width(), Display::get_height()),
-    zoom(1.0), transform(0, 0)
+    zoom(1.0), 
+    transform(0, 0)
 {
   current_ = this;
 }
@@ -39,23 +41,30 @@
   // pixel-jitter when scrolling with subpixel values and pixel
   // precise images.
   if (camera.get_zoom() == 1.0)
-    state.set_pos(Vector2f(static_cast<int>(camera.get_pos().x),
-                         static_cast<int>(camera.get_pos().y)));
+    {
+      state.set_pos(Vector2f(static_cast<int>(camera.get_pos().x),
+                             static_cast<int>(camera.get_pos().y)));
+    }
   else
-    state.set_pos(camera.get_pos());
+    {
+      state.set_pos(camera.get_pos());
+    }
 
   state.set_zoom(camera.get_zoom() + (zoom - 1.0f));
   state.set_pos(state.get_pos() + Vector2f(transform.x, transform.y));
 
   state.push(sc);
+
   Sector::current()->draw(sc);
+
   if (collision_debug)
     Sector::current()->get_collision_engine()->draw(sc.highlight());
+
   state.pop(sc);
 }
 
 void
-View::update (float delta, const Controller& controller)
+View::update (float delta)
 {
   camera.update(delta);
 
@@ -63,13 +72,17 @@
 
   if (keystate[SDLK_KP_PLUS])
     zoom *= 1.0 + delta;
+
   if (keystate[SDLK_KP_MINUS])
     zoom *= 1.0 - delta;
 
-  if(controller.get_button_state(VIEW_CENTER_BUTTON)) {
+  const Controller& controller = InputManager::get_controller();
+
+  if (controller.get_button_state(VIEW_CENTER_BUTTON)) 
+    {
       transform = Vector2f(0, 0);
       zoom = 1.0;
-  }
+    }
 
   transform.x += 0.5f * controller.get_axis_state(X2_AXIS) / zoom;
   transform.y += 0.5f * controller.get_axis_state(Y2_AXIS) / zoom;

Modified: trunk/windstille/src/screen/view.hpp
===================================================================
--- trunk/windstille/src/screen/view.hpp	2009-03-13 22:44:11 UTC (rev 2658)
+++ trunk/windstille/src/screen/view.hpp	2009-03-14 13:48:23 UTC (rev 2659)
@@ -49,7 +49,7 @@
   Vector2f screen_to_world(const Vector2f& point);
 
   void draw(SceneContext& gc);
-  void update(float delta, const Controller& controller);
+  void update(float delta);
 
   static View* current() { return current_; }
 



From grumbel at mail.berlios.de  Sat Mar 14 15:06:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 15:06:19 +0100
Subject: [Windstille-commit] r2660 - trunk/windstille/src/objects
Message-ID: <200903141406.n2EE6JGp000584@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 15:06:19 +0100 (Sat, 14 Mar 2009)
New Revision: 2660

Modified:
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 13:48:23 UTC (rev 2659)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 14:06:19 UTC (rev 2660)
@@ -51,6 +51,8 @@
   flashlighthighlight("images/flashlighthighlight.sprite"),
   state(STAND)
 {
+  current_ = this;
+
   sprite = Sprite3D("models/characters/jane/jane.wsprite");
   pos.x = 320;
   pos.y = 200;
@@ -58,7 +60,6 @@
 
   jumping = false;
   energy = MAX_ENERGY;
-  current_ = this;
 
   hit_count = 0.0f;
   sprite.set_action("Stand");
@@ -82,6 +83,7 @@
 
 Player::~Player()
 {
+  current_ = 0;
 }
 
 void
@@ -132,7 +134,7 @@
 void
 Player::start_listening()
 {
-  if(state == STAND_TO_LISTEN || state == LISTEN)
+  if (state == STAND_TO_LISTEN || state == LISTEN)
     return;
 
   set_stand_to_listen(false);
@@ -141,7 +143,7 @@
 void
 Player::stop_listening()
 {
-  if(state != LISTEN && state != STAND_TO_LISTEN)
+  if (state != LISTEN && state != STAND_TO_LISTEN)
     return;
   
   set_stand_to_listen(true);
@@ -162,58 +164,59 @@
 
   if (GameSession::current()->is_active())
     {
-      switch(state) {
-        case STAND:
-        case WALK:
-          update_walk_stand();
-          break;
-        case RUN:
-          update_run();
-          break;
-        case DUCKING:
-          update_ducking();
-          break;
-        case DUCKED:
-          update_ducked();
-          break;
-        case TURNAROUND:
-          update_turnaround();
-          break;
-        case STAND_TO_LISTEN:
-          update_stand_to_listen();
-          break;
-        case LISTEN:
-          update_listen();
-          break;
-        case JUMP_BEGIN:
-          update_jump_begin();
-          break;
-        case JUMP_AIR:
-          update_jump_air();
-          break;
-        case JUMP_LAND:
-          update_jump_land();
-          break;
-        case JUMP_UP_BEGIN:
-          update_jump_up_begin();
-          break;
-        case JUMP_UP_AIR:
-          update_jump_up_air();
-          break;
-        case JUMP_UP_LAND:
-          update_jump_up_land();
-          break;
-        case PULL_GUN:
-          update_pull_gun();
-          break;
-        case STAIRS_DOWN:
-        case STAIRS_UP:
-          update_stairs(delta);
-          break;
-        default:
-          assert(false);
-          break;
-      }
+      switch(state)
+        {
+          case STAND:
+          case WALK:
+            update_walk_stand();
+            break;
+          case RUN:
+            update_run();
+            break;
+          case DUCKING:
+            update_ducking();
+            break;
+          case DUCKED:
+            update_ducked();
+            break;
+          case TURNAROUND:
+            update_turnaround();
+            break;
+          case STAND_TO_LISTEN:
+            update_stand_to_listen();
+            break;
+          case LISTEN:
+            update_listen();
+            break;
+          case JUMP_BEGIN:
+            update_jump_begin();
+            break;
+          case JUMP_AIR:
+            update_jump_air();
+            break;
+          case JUMP_LAND:
+            update_jump_land();
+            break;
+          case JUMP_UP_BEGIN:
+            update_jump_up_begin();
+            break;
+          case JUMP_UP_AIR:
+            update_jump_up_air();
+            break;
+          case JUMP_UP_LAND:
+            update_jump_up_land();
+            break;
+          case PULL_GUN:
+            update_pull_gun();
+            break;
+          case STAIRS_DOWN:
+          case STAIRS_UP:
+            update_stairs(delta);
+            break;
+          default:
+            assert(false);
+            break;
+        }
     }
 
   // fall down
@@ -237,55 +240,58 @@
 void
 Player::update_walk_stand()
 {
-  if (controller.get_axis_state(Y_AXIS) > 0.5f) {
-    TileMap* tilemap = Sector::current()->get_tilemap2();
-    if (tilemap)
-      {
-        Point p(int(pos.x)/32, (int(pos.y)/32 + 1));
-        unsigned int col = tilemap->get_pixel(p.x, p.y);
+  if (controller.get_axis_state(Y_AXIS) > 0.5f)
+    {
+      TileMap* tilemap = Sector::current()->get_tilemap2();
+      if (tilemap)
+        {
+          Point p(int(pos.x)/32, (int(pos.y)/32 + 1));
+          unsigned int col = tilemap->get_pixel(p.x, p.y);
 
-        if ((col & TILE_STAIRS) && ((get_direction() == WEST && (col & TILE_LEFT)) ||
-                                    (get_direction() == EAST && (col & TILE_RIGHT))))
-          {
-            delete contact;
-            contact = new StairContact(tilemap, p);
+          if ((col & TILE_STAIRS) && ((get_direction() == WEST && (col & TILE_LEFT)) ||
+                                      (get_direction() == EAST && (col & TILE_RIGHT))))
+            {
+              delete contact;
+              contact = new StairContact(tilemap, p);
 
-            std::cout << "Stair mode" << std::endl;
-            state = STAIRS_DOWN;
-            //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
-            Sector::current()->get_collision_engine()->remove(c_object);
-            z_pos = -10.0f;
-            return;
-          }
-        else
-          {
-            set_ducking();
-            return;
-          }
-      }
-  } else if (controller.get_axis_state(Y_AXIS) < -0.5f) {
-    TileMap* tilemap = Sector::current()->get_tilemap2();
-    if (tilemap)
-      {
-        Point p(int(pos.x)/32 + ((get_direction() == WEST) ? -1 : +1), (int(pos.y)/32));
-        unsigned int col = tilemap->get_pixel(p.x, p.y);
+              std::cout << "Stair mode" << std::endl;
+              state = STAIRS_DOWN;
+              //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
+              Sector::current()->get_collision_engine()->remove(c_object);
+              z_pos = -10.0f;
+              return;
+            }
+          else
+            {
+              set_ducking();
+              return;
+            }
+        }
+    }
+  else if (controller.get_axis_state(Y_AXIS) < -0.5f)
+    {
+      TileMap* tilemap = Sector::current()->get_tilemap2();
+      if (tilemap)
+        {
+          Point p(int(pos.x)/32 + ((get_direction() == WEST) ? -1 : +1), (int(pos.y)/32));
+          unsigned int col = tilemap->get_pixel(p.x, p.y);
 
-        if ((col & TILE_STAIRS) && ((get_direction() == EAST && (col & TILE_LEFT)) ||
-                                    (get_direction() == WEST && (col & TILE_RIGHT))))
-          {
-            delete contact;
-            contact = new StairContact(tilemap, p);
+          if ((col & TILE_STAIRS) && ((get_direction() == EAST && (col & TILE_LEFT)) ||
+                                      (get_direction() == WEST && (col & TILE_RIGHT))))
+            {
+              delete contact;
+              contact = new StairContact(tilemap, p);
 
-            state = STAIRS_UP;
-            //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
-            Sector::current()->get_collision_engine()->remove(c_object);
-            z_pos = -10.0f;
-            return;
-          }
-      }    
-  }
+              state = STAIRS_UP;
+              //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
+              Sector::current()->get_collision_engine()->remove(c_object);
+              z_pos = -10.0f;
+              return;
+            }
+        }    
+    }
 
-  if(state == STAND)
+  if (state == STAND)
     update_stand();
   else
     update_walk();
@@ -298,10 +304,14 @@
 
   if (controller.get_axis_state(X_AXIS) < -0.5f ||
       controller.get_axis_state(Y_AXIS) > 0.5f)
-    contact->advance(-WALK_SPEED * delta * 0.7f);
+    {
+      contact->advance(-WALK_SPEED * delta * 0.7f);
+    }
   else if (controller.get_axis_state(X_AXIS) > 0.5f ||
            controller.get_axis_state(Y_AXIS) < -0.5f)
-    contact->advance(WALK_SPEED * delta * 0.7f);
+    {
+      contact->advance(WALK_SPEED * delta * 0.7f);
+    }
 
   velocity = Vector2f(0, 0);
   c_object->set_pos(contact->get_pos());
@@ -339,7 +349,7 @@
 void
 Player::update_stand()
 { 
-  if(controller.button_was_pressed(USE_BUTTON))
+  if (controller.button_was_pressed(USE_BUTTON))
     {
       Entity* obj = find_useable_entity();
       if (obj)
@@ -347,8 +357,8 @@
       return;
     }
     
-  if(controller.button_was_pressed(JUMP_BUTTON)
-     && controller.get_axis_state(Y_AXIS) > 0.5f) 
+  if (controller.button_was_pressed(JUMP_BUTTON)
+      && controller.get_axis_state(Y_AXIS) > 0.5f) 
     {
       set_jump_up_begin();
     } 
@@ -370,14 +380,14 @@
     }
   else if (controller.get_axis_state(X_AXIS) < -0.5f) 
     {
-      if(get_direction() == WEST)
+      if (get_direction() == WEST)
         set_walk(WEST);
       else
         set_turnaround();
     }
   else if (controller.get_axis_state(X_AXIS) > 0.5f) 
     {
-      if(get_direction() == EAST)
+      if (get_direction() == EAST)
         set_walk(EAST);
       else
         set_turnaround();
@@ -390,7 +400,7 @@
   try_set_action("Walk");
   sprite.set_rot(direction == EAST);
   state = WALK;
-  if(direction == EAST)
+  if (direction == EAST)
     velocity.x = WALK_SPEED;
   else
     velocity.x = -WALK_SPEED;
@@ -404,24 +414,27 @@
 void
 Player::update_walk()
 {
-  if (controller.get_axis_state(X_AXIS) == 0) {
-    leave_walk();
-    set_stand();
-    return;
-  }
+  if (controller.get_axis_state(X_AXIS) == 0)
+    {
+      leave_walk();
+      set_stand();
+      return;
+    }
 
   if ((get_direction() == WEST && controller.get_axis_state(X_AXIS) > 0.5f) ||
-      (get_direction() == EAST && controller.get_axis_state(X_AXIS) < -0.5f)) {
-    leave_walk();
-    set_turnaround();
-    return;
-  }
+      (get_direction() == EAST && controller.get_axis_state(X_AXIS) < -0.5f))
+    {
+      leave_walk();
+      set_turnaround();
+      return;
+    }
   
-  if(controller.get_button_state(RUN_BUTTON)) {
-    leave_walk();
-    set_run();
-    return;
-  }
+  if (controller.get_button_state(RUN_BUTTON))
+    {
+      leave_walk();
+      set_run();
+      return;
+    }
 }
 
 void
@@ -444,22 +457,26 @@
 Player::update_ducking()
 {
   // ducking
-  if(sprite.switched_actions()) {
-    if(sprite.get_action() == "Ducking")
-      set_ducked();
-    else
-      set_stand();
-    return;
-  }
+  if (sprite.switched_actions()) 
+    {
+      if (sprite.get_action() == "Ducking")
+        set_ducked();
+      else
+        set_stand();
+      return;
+    }
   
-  if(!(controller.get_axis_state(Y_AXIS) > 0.5f) && sprite.get_speed() > 0) {
-    sprite.set_speed(-1.0);
-    sprite.set_next_action("Stand");
-    state = STAND;
-  } else if(controller.get_axis_state(Y_AXIS) > 0.5f && sprite.get_speed() < 0) {
-    sprite.set_speed(1.0);
-    sprite.set_next_action("Ducking");
-  }
+  if (!(controller.get_axis_state(Y_AXIS) > 0.5f) && sprite.get_speed() > 0) 
+    {
+      sprite.set_speed(-1.0);
+      sprite.set_next_action("Stand");
+      state = STAND;
+    } 
+  else if (controller.get_axis_state(Y_AXIS) > 0.5f && sprite.get_speed() < 0) 
+    {
+      sprite.set_speed(1.0);
+      sprite.set_next_action("Ducking");
+    }
 }
 
 void
@@ -472,11 +489,12 @@
 void
 Player::update_ducked()
 {
-  if(!controller.get_axis_state(Y_AXIS) > 0.5f) {
-    state = DUCKING;
-    sprite.set_action("StandToDuck", -1.0);
-    sprite.set_next_action("Stand");
-  }  
+  if (!controller.get_axis_state(Y_AXIS) > 0.5f)
+    {
+      state = DUCKING;
+      sprite.set_action("StandToDuck", -1.0);
+      sprite.set_next_action("Stand");
+    }  
 }
 
 void
@@ -492,43 +510,51 @@
 void
 Player::update_turnaround()
 {
-  if(sprite.switched_actions()) {
-    if(sprite.get_rot()) {
-      set_walk(EAST);
-    } else {
-      set_walk(WEST);
+  if (sprite.switched_actions()) 
+    {
+      if (sprite.get_rot())
+        {
+          set_walk(EAST);
+        }
+      else {
+        set_walk(WEST);
+      }
+    } 
+  if ((sprite.get_rot() && controller.get_axis_state(X_AXIS) > 0.5f) ||
+      (!sprite.get_rot() && controller.get_axis_state(X_AXIS) < -0.5f)) 
+    {
+      sprite.set_speed(-1.0);
+      sprite.set_next_action("Walk");
+      state = WALK;
     }
-  } 
-  if((sprite.get_rot() && controller.get_axis_state(X_AXIS) > 0.5f) ||
-     (!sprite.get_rot() && controller.get_axis_state(X_AXIS) < -0.5f)) {
-    sprite.set_speed(-1.0);
-    sprite.set_next_action("Walk");
-    state = WALK;
-  }
 }
 
 void
 Player::set_stand_to_listen(bool backwards)
 {
   try_set_action("StandtoListen", backwards ? -1.0 : 1.0);
-  if(!backwards) {
-    sprite.set_next_action("Listen");
-    velocity = Vector2f(0, 0);
-  } else {
-    sprite.set_next_action("Stand");
-  }
+  if (!backwards) 
+    {
+      sprite.set_next_action("Listen");
+      velocity = Vector2f(0, 0);
+    } 
+  else
+    {
+      sprite.set_next_action("Stand");
+    }
   state = STAND_TO_LISTEN;
 }
 
 void
 Player::update_stand_to_listen()
 {
-  if(sprite.switched_actions()) {
-    if(sprite.get_action() == "Stand")
-      set_stand();
-    else
-      set_listen();
-  }
+  if (sprite.switched_actions()) 
+    {
+      if (sprite.get_action() == "Stand")
+        set_stand();
+      else
+        set_listen();
+    }
 }
 
 void
@@ -548,7 +574,7 @@
 Player::set_run()
 {
   try_set_action("Run");
-  if(get_direction() == EAST)
+  if (get_direction() == EAST)
     velocity.x = RUN_SPEED;
   else
     velocity.x = -RUN_SPEED;  
@@ -563,16 +589,18 @@
 void
 Player::update_run()
 {
-  if(!controller.get_button_state(RUN_BUTTON)) {
-    leave_run();
-    set_walk(get_direction());
-    return;
-  }
-  if(controller.get_button_state(JUMP_BUTTON)) {
-    leave_run();
-    set_jump_begin();
-    return;
-  }
+  if (!controller.get_button_state(RUN_BUTTON)) 
+    {
+      leave_run();
+      set_walk(get_direction());
+      return;
+    }
+  if (controller.get_button_state(JUMP_BUTTON)) 
+    {
+      leave_run();
+      set_jump_begin();
+      return;
+    }
 }
 
 void
@@ -584,35 +612,46 @@
 void
 Player::set_jump_begin()
 {
-  if(sprite.before_marker("RightFoot")) {
-    sprite.set_next_action("JumpRightFoot");
-    sprite.abort_at_marker("RightFoot");
-    jump_foot = LEFT_FOOT;
-  } else if(sprite.before_marker("LeftFoot")) {
-    sprite.set_next_action("JumpLeftFoot");
-    sprite.abort_at_marker("LeftFoot");
-    jump_foot = RIGHT_FOOT;
-  } else {
-    sprite.set_next_action("JumpRightFoot");
-    sprite.abort_at_marker("RightFoot");
-    jump_foot = LEFT_FOOT;
-  }
+  if (sprite.before_marker("RightFoot")) 
+    {
+      sprite.set_next_action("JumpRightFoot");
+      sprite.abort_at_marker("RightFoot");
+      jump_foot = LEFT_FOOT;
+    } 
+  else if (sprite.before_marker("LeftFoot")) 
+    {
+      sprite.set_next_action("JumpLeftFoot");
+      sprite.abort_at_marker("LeftFoot");
+      jump_foot = RIGHT_FOOT;
+    } 
+  else 
+    {
+      sprite.set_next_action("JumpRightFoot");
+      sprite.abort_at_marker("RightFoot");
+      jump_foot = LEFT_FOOT;
+    }
   state = JUMP_BEGIN;
 }
 
 void
 Player::update_jump_begin()
 {
-  if(sprite.switched_actions()) {
-    if(sprite.get_action() == "JumpLeftFoot") {
-      sprite.set_next_action("JumpLeftFootAir");
-    } else if(sprite.get_action() == "JumpRightFoot") {
-      sprite.set_next_action("JumpRightFootAir");
-    } else {
-      set_jump_air();
-      return;
+  if (sprite.switched_actions()) 
+    {
+      if (sprite.get_action() == "JumpLeftFoot") 
+        {
+          sprite.set_next_action("JumpLeftFootAir");
+        } 
+      else if (sprite.get_action() == "JumpRightFoot") 
+        {
+          sprite.set_next_action("JumpRightFootAir");
+        } 
+      else
+        {
+          set_jump_air();
+          return;
+        }
     }
-  }
 }
 
 void
@@ -626,10 +665,11 @@
 void
 Player::update_jump_air()
 {
-  if(sprite.switched_actions()) {
-    set_jump_land();
-    return;
-  }
+  if (sprite.switched_actions()) 
+    {
+      set_jump_land();
+      return;
+    }
 }
 
 void
@@ -642,10 +682,11 @@
 void
 Player::update_jump_land()
 {
-  if(sprite.switched_actions()) {
-    set_run();
-    return;
-  }
+  if (sprite.switched_actions()) 
+    {
+      set_run();
+      return;
+    }
 }
 
 void
@@ -658,10 +699,11 @@
 void
 Player::update_jump_up_begin()
 {
-  if(sprite.switched_actions()) {
-    set_jump_up_air();
-    return;
-  }
+  if (sprite.switched_actions()) 
+    {
+      set_jump_up_air();
+      return;
+    }
 }
 
 void
@@ -675,10 +717,11 @@
 void
 Player::update_jump_up_air()
 {
-  if(sprite.switched_actions()) {
-    set_jump_up_land();
-    return;
-  }
+  if (sprite.switched_actions()) 
+    {
+      set_jump_up_land();
+      return;
+    }
 }
 
 void
@@ -691,10 +734,11 @@
 void
 Player::update_jump_up_land()
 {
-  if(sprite.switched_actions()) {
-    set_stand();
-    return;
-  }
+  if (sprite.switched_actions()) 
+    {
+      set_stand();
+      return;
+    }
 }
 
 void
@@ -716,10 +760,8 @@
 void
 Player::try_set_action(const std::string& name, float speed)
 {
-  if(sprite.get_action() == name)
-    return;
-  
-  sprite.set_action(name, speed);
+  if (sprite.get_action() != name)
+    sprite.set_action(name, speed);
 }
 
 int

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-03-14 13:48:23 UTC (rev 2659)
+++ trunk/windstille/src/objects/player.hpp	2009-03-14 14:06:19 UTC (rev 2660)
@@ -124,8 +124,6 @@
    * TODO: can we generalize this mechanism? Or create a small specification
    * language for this?
    */
-  
-
   void update_ducked();
   void update_ducking();
   void update_listen();



From grumbel at mail.berlios.de  Sat Mar 14 15:08:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 15:08:24 +0100
Subject: [Windstille-commit] r2661 - trunk/windstille/src/objects
Message-ID: <200903141408.n2EE8O1n000795@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 15:08:20 +0100 (Sat, 14 Mar 2009)
New Revision: 2661

Modified:
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
Log:
Removed unused lightsprites (handled in scripting now)

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 14:06:19 UTC (rev 2660)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 14:08:20 UTC (rev 2661)
@@ -45,11 +45,8 @@
 
 Player* Player::current_ = 0;
 
-Player::Player () :
-  light("images/light3.sprite"),
-  flashlight("images/flashlightlight.sprite"),
-  flashlighthighlight("images/flashlighthighlight.sprite"),
-  state(STAND)
+Player::Player () 
+ : state(STAND)
 {
   current_ = this;
 
@@ -89,15 +86,6 @@
 void
 Player::draw (SceneContext& sc)
 {
-  //light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
-  //light.set_scale(4.0f);
-
-  flashlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
-  flashlight.set_scale(2.0f);
-
-  flashlighthighlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
-  flashlighthighlight.set_scale(2.0f);
-
   if (1)
     { // draw the 'stand-on' tile
       sc.highlight().fill_rect(Rect(Point(int(pos.x)/32 * 32, (int(pos.y)/32 + 1) * 32),
@@ -105,8 +93,6 @@
                                Color(1.0f, 0.0f, 0.0f, 0.5f), 10000.0f);
     }
 
-  //sc.highlight().draw(flashlighthighlight, pos - Vector2f(40, 80), 100.0f);
-  //sc.light().draw(flashlight, pos - Vector2f(40, 80), 100.0f);
   sprite.draw(sc.color(), pos, z_pos);
 
   Entity* obj = find_useable_entity();

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-03-14 14:06:19 UTC (rev 2660)
+++ trunk/windstille/src/objects/player.hpp	2009-03-14 14:08:20 UTC (rev 2661)
@@ -39,9 +39,6 @@
 private:
   Controller controller;
 
-  Sprite   light;
-  Sprite   flashlight;
-  Sprite   flashlighthighlight;
   Sprite3D sprite;
   std::auto_ptr<SoundSource> sound_source;
 



From grumbel at mail.berlios.de  Sat Mar 14 15:43:08 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 15:43:08 +0100
Subject: [Windstille-commit] r2662 - in trunk/windstille/src: display objects
Message-ID: <200903141443.n2EEh8x0004252@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 15:43:08 +0100 (Sat, 14 Mar 2009)
New Revision: 2662

Modified:
   trunk/windstille/src/display/text_area.cpp
   trunk/windstille/src/objects/player.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/display/text_area.cpp
===================================================================
--- trunk/windstille/src/display/text_area.cpp	2009-03-14 14:08:20 UTC (rev 2661)
+++ trunk/windstille/src/display/text_area.cpp	2009-03-14 14:43:08 UTC (rev 2662)
@@ -62,8 +62,8 @@
   impl->v_space = 2;
   impl->letter_by_letter = letter_by_letter;
   impl->progress_complete = false;
-  impl->passed_time = 0;
-  impl->scroll_offset = 0.0f;
+  impl->passed_time       = 0;
+  impl->scroll_offset     = 0.0f;
   impl->max_scroll_offset = -1.0f; // FIXME: Bad magick value
 }
 

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 14:08:20 UTC (rev 2661)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 14:43:08 UTC (rev 2662)
@@ -98,6 +98,7 @@
   Entity* obj = find_useable_entity();
   if (obj)
     {
+      // FIXME: Highlight layer is the wrong place for this
       std::string use_str = "[" + obj->get_use_verb() + "]";
       sc.highlight().draw(use_str, obj->get_pos().x, obj->get_pos().y - 150, 1000);
     }



From grumbel at mail.berlios.de  Sat Mar 14 15:44:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 15:44:27 +0100
Subject: [Windstille-commit] r2663 - trunk/windstille/src/hud
Message-ID: <200903141444.n2EEiR9D004395@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 15:44:27 +0100 (Sat, 14 Mar 2009)
New Revision: 2663

Modified:
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/pda.hpp
Log:
Cleaned up PDA, uses proper font now and UI and Text are seperated, so scrolling works

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-03-14 14:43:08 UTC (rev 2662)
+++ trunk/windstille/src/hud/pda.cpp	2009-03-14 14:44:27 UTC (rev 2663)
@@ -16,12 +16,13 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <sstream>
 #include "input/input_manager.hpp"
 #include "display/display.hpp"
 #include "display/text_area.hpp"
 #include "font/fonts.hpp"
 #include "pda.hpp"
-
+
 DialogEntry::DialogEntry(const std::string& arg_character, const std::string& arg_text)
   : character(arg_character),
     text(arg_text)
@@ -34,11 +35,18 @@
     complete(false)
 {
 }
-
+
 PDA::PDA()
-  : state(PDA_OBJECTIVES)
+  : state(PDA_OBJECTIVES),
+    old_state(PDA_NONE)
 { 
   background = Sprite("images/pda/pda.sprite");
+
+  ui_area.reset(new TextArea(Rectf(70, 83, 385, 520).grow(-12.0f), false));
+  text_area.reset(new TextArea(Rectf(70, 83+56, 385, 520).grow(-12.0f), false));
+
+  ui_area->set_font(Fonts::vera12);
+  text_area->set_font(Fonts::vera12);
 }
 
 PDA::~PDA()
@@ -48,21 +56,18 @@
 void
 PDA::draw()
 {
-  if (text_area.get())
-    {
-      // Darken the background a bit
-      Display::fill_rect(Rect(0, 0, Display::get_width(), Display::get_height()), Color(0.0f, 0.0f, 0.0f, 0.25f));
+  // Darken the background a bit
+  Display::fill_rect(Rect(0, 0, Display::get_width(), Display::get_height()), Color(0.0f, 0.0f, 0.0f, 0.25f));
 
-      Rectf rect = text_area->get_rect().grow(8.0f);
+  background.draw(Vector2f(30, 30));
 
-      background.draw(Vector2f(30, 30));
-      
-      rect.top += 56;
-      Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
-      Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  Rectf rect = text_area->get_rect().grow(8.0f);
+  
+  Display::fill_rounded_rect(rect, 16.0f, Color(0.1f, 0.1f, 0.2f, 0.8f));
+  //Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
-      text_area->draw();
-    }
+  ui_area->draw();
+  text_area->draw();
 }
 
 void
@@ -76,13 +81,13 @@
         {
           if (i->axis.name == MENU_LEFT_BUTTON && i->button.down) 
             {
-              state = static_cast<pda_state>(state + 1);
+              state = static_cast<PDAState>(state + 1);
               if (state > PDA_DIALOGS)
                 state = PDA_OBJECTIVES;
             }
           else if (i->axis.name == MENU_RIGHT_BUTTON && i->button.down) 
             {
-              state = static_cast<pda_state>(state - 1);
+              state = static_cast<PDAState>(state - 1);
               if (state < PDA_OBJECTIVES)
                 state = PDA_DIALOGS;
             }
@@ -90,47 +95,57 @@
     }
   
   if (text_area.get())
-    text_area->set_scroll_offset(text_area->get_scroll_offset() + 500.0f * controller.get_axis_state(Y2_AXIS) * delta);
+    {
+      text_area->set_scroll_offset(text_area->get_scroll_offset() + 500.0f * controller.get_axis_state(Y2_AXIS) * delta);
+    }
     
-  switch (state) 
+  if (old_state != state) 
     {
-      case PDA_OBJECTIVES:
-        show_objectives();
-        break;
+      old_state = state;
 
-      case PDA_DIALOGS:
-        show_dialogs();
-        break;
+      switch (state) 
+        {
+          case PDA_NONE:
+            break;
+
+          case PDA_OBJECTIVES:
+            generate_objectives();
+            break;
+
+          case PDA_DIALOGS:
+            generate_dialogs();
+            break;
+        }
     }
- 
-  if (new_text != old_text) 
-    {
-      // FIXME: Unneeded could just use set_text
-      text_area.reset(new TextArea(Rectf(70, 83, 385, 520).grow(-12.0f), false));
-      text_area->set_font(Fonts::ttffont);
-      text_area->set_text(new_text);
-    
-      old_text = new_text;
-    }
   
   text_area->update(delta);
 }
 
 void
+PDA::force_regeneration()
+{
+  old_state = PDA_NONE;
+}
+
+void
 PDA::add_dialog(const std::string& character, const std::string& text)
 {
+  force_regeneration();
   dialogs.push_back(DialogEntry(character, text));
 }
 
 void
 PDA::add_objective(const std::string& name, const std::string& text)
 {
+  force_regeneration();
   objectives.push_back(ObjectiveEntry(name, text));
 }
 
 void
 PDA::objective_complete(const std::string& name)
-{
+{  
+  force_regeneration();
+
   for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) 
     {
       if (i->name == name)
@@ -164,37 +179,42 @@
 }
 
 void
-PDA::show_objectives()
+PDA::generate_objectives()
 {
-  new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "<b>objectives</b> - dialogs\n\n";
+  ui_area->set_text("<large>Personal Digital Assistant</large>\n"
+                    "<b>objectives</b> - dialogs");
   
+  std::ostringstream out;
   for (std::vector<ObjectiveEntry>::reverse_iterator i = objectives.rbegin(); i != objectives.rend(); ++i) 
     {
-      new_text += i->name;
-      new_text += ": ";
+      out << i->name << ": ";
 
       if (i->complete)
-        new_text += "complete\n";
+        out << "complete\n";
       else
-        new_text += "incomplete\n";
+        out << "incomplete\n";
 
-      new_text += i->text + "\n\n";
+      out << i->text + "\n\n";
     }
+
+  text_area->set_text(out.str());
 }
 
 void
-PDA::show_dialogs()
+PDA::generate_dialogs()
 {
-  new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "objectives - <b>dialogs</b>\n\n";
+  ui_area->set_text("<large>Personal Digital Assistant</large>\n"
+                    "objectives - <b>dialogs</b>");
   
+  std::ostringstream out;
   for (std::vector<DialogEntry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) 
     {
-      new_text += i->character;
-      new_text += ": ";
-      new_text += i->text + '\n';
+      if (i->character == "Jane")
+        out << "<i>" << i->character << ":</i> " << i->text << '\n';
+      else
+        out << "<b>" << i->character << ":</b> " << i->text << '\n';
     }
+  text_area->set_text(out.str());
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-03-14 14:43:08 UTC (rev 2662)
+++ trunk/windstille/src/hud/pda.hpp	2009-03-14 14:44:27 UTC (rev 2663)
@@ -24,7 +24,7 @@
 #include "screen/screen.hpp"
 
 class TextArea;
-
+
 class DialogEntry
 {
 public:
@@ -43,22 +43,26 @@
   std::string text;
   bool complete;
 };
-
+
 /** */
 class PDA : public Screen
 {
 private:
   Sprite    background;
+
+  std::auto_ptr<TextArea>  ui_area;
   std::auto_ptr<TextArea>  text_area;
+
   std::vector<DialogEntry> dialogs;
   std::vector<ObjectiveEntry> objectives;   
   
-  std::string new_text;  
-  std::string old_text;
-  enum pda_state { PDA_OBJECTIVES, PDA_DIALOGS } state;
+  enum PDAState { PDA_NONE, PDA_OBJECTIVES, PDA_DIALOGS };
+  PDAState state;
+  PDAState old_state;
 
-  void show_objectives();
-  void show_dialogs();
+  void generate_objectives();
+  void generate_dialogs();
+  void force_regeneration();
 
 public:
   PDA();
@@ -73,7 +77,7 @@
   bool is_objective_given(const std::string& name);
   bool is_objective_complete(const std::string& name);
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Sat Mar 14 16:39:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 16:39:24 +0100
Subject: [Windstille-commit] r2664 - in trunk/windstille: . data/controller
	src/app src/screen
Message-ID: <200903141539.n2EFdOtt009837@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 16:39:22 +0100 (Sat, 14 Mar 2009)
New Revision: 2664

Modified:
   trunk/windstille/TODO
   trunk/windstille/data/controller/xboxdrv.scm
   trunk/windstille/src/app/controller_def.hpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/screen/view.cpp
Log:
Added debug button, so that debug functions don't collide with normal game functions

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-14 14:44:27 UTC (rev 2663)
+++ trunk/windstille/TODO	2009-03-14 15:39:22 UTC (rev 2664)
@@ -166,8 +166,7 @@
   problems
 
 * map laserpointer to the second analog-stick, make mapping absolute,
-  not relative, also add option to toggle between debugging mapping
-  and gameplay mapping (i.e. moving view via second analogstick)
+  not relative
 
 * maybe create an additional layer in SceneContext for drawing things
   like Speech and other worldspace GUI elements to it

Modified: trunk/windstille/data/controller/xboxdrv.scm
===================================================================
--- trunk/windstille/data/controller/xboxdrv.scm	2009-03-14 14:44:27 UTC (rev 2663)
+++ trunk/windstille/data/controller/xboxdrv.scm	2009-03-14 15:39:22 UTC (rev 2664)
@@ -24,6 +24,7 @@
 
  (select-button     (joystick-button (device 0)  (button 6)))
  (start-button      (joystick-button (device 0)  (button 7)))
+ (debug-button      (joystick-button (device 0)  (button 8)))
 
  ;; allow to use the dpad for menu navigation
  (menu-up-button    (joystick-axis-button (device 0) (axis 7) (up #t)))

Modified: trunk/windstille/src/app/controller_def.hpp
===================================================================
--- trunk/windstille/src/app/controller_def.hpp	2009-03-14 14:44:27 UTC (rev 2663)
+++ trunk/windstille/src/app/controller_def.hpp	2009-03-14 15:39:22 UTC (rev 2664)
@@ -51,6 +51,7 @@
 
     SELECT_BUTTON,
     START_BUTTON,
+    DEBUG_BUTTON,
     
     // Keys for menu navigation, they come with hardcoded defaults for
     // the keyboard, a joystick might emmit them as well

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-14 14:44:27 UTC (rev 2663)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-14 15:39:22 UTC (rev 2664)
@@ -193,6 +193,7 @@
     // Back/Start
     controller_description.add_button("select-button",    SELECT_BUTTON);
     controller_description.add_button("start-button",     START_BUTTON);
+    controller_description.add_button("debug-button",     DEBUG_BUTTON);
 
     controller_description.add_axis("left-trigger-axis",  LEFT_TRIGGER_AXIS);
     controller_description.add_axis("right-trigger-axis", RIGHT_TRIGGER_AXIS);

Modified: trunk/windstille/src/screen/view.cpp
===================================================================
--- trunk/windstille/src/screen/view.cpp	2009-03-14 14:44:27 UTC (rev 2663)
+++ trunk/windstille/src/screen/view.cpp	2009-03-14 15:39:22 UTC (rev 2664)
@@ -78,14 +78,17 @@
 
   const Controller& controller = InputManager::get_controller();
 
-  if (controller.get_button_state(VIEW_CENTER_BUTTON)) 
+  if (controller.get_button_state(DEBUG_BUTTON))
     {
-      transform = Vector2f(0, 0);
-      zoom = 1.0;
+      if (controller.get_button_state(VIEW_CENTER_BUTTON)) 
+        {
+          transform = Vector2f(0, 0);
+          zoom = 1.0;
+        }
+
+      transform.x += 1.5f * controller.get_axis_state(X2_AXIS) / zoom;
+      transform.y += 1.5f * controller.get_axis_state(Y2_AXIS) / zoom;
     }
-
-  transform.x += 0.5f * controller.get_axis_state(X2_AXIS) / zoom;
-  transform.y += 0.5f * controller.get_axis_state(Y2_AXIS) / zoom;
 }
 
 Rectf



From grumbel at mail.berlios.de  Sat Mar 14 19:41:56 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 19:41:56 +0100
Subject: [Windstille-commit] r2665 - trunk/windstille/src/objects
Message-ID: <200903141841.n2EIfu3O001195@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 19:41:55 +0100 (Sat, 14 Mar 2009)
New Revision: 2665

Modified:
   trunk/windstille/src/objects/laser_pointer.cpp
   trunk/windstille/src/objects/laser_pointer.hpp
   trunk/windstille/src/objects/player.cpp
Log:
Map laserpointer to second analogstick, somewhat buggy due to deadzone

Modified: trunk/windstille/src/objects/laser_pointer.cpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.cpp	2009-03-14 15:39:22 UTC (rev 2664)
+++ trunk/windstille/src/objects/laser_pointer.cpp	2009-03-14 18:41:55 UTC (rev 2665)
@@ -42,10 +42,14 @@
 
 static float find_max(float pos, float v)
 {
-  if (v == 0) 
-    return 0;
+  if (v == 0)
+    { 
+      return 0;
+    }
   else if (v < 0)
-    return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
+    {
+      return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
+    }
   else // if (v > 0)
     {
       return fmodf(fmodf(-pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
@@ -108,6 +112,7 @@
   target = pos + Vector2f(t * direction.x, t * direction.y);
   
   Vector2f ray = target - pos;
+
   VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector2f(0,0), 10000,
                                                                    sc.highlight().get_modelview());
   array->set_mode(GL_LINES);

Modified: trunk/windstille/src/objects/laser_pointer.hpp
===================================================================
--- trunk/windstille/src/objects/laser_pointer.hpp	2009-03-14 15:39:22 UTC (rev 2664)
+++ trunk/windstille/src/objects/laser_pointer.hpp	2009-03-14 18:41:55 UTC (rev 2665)
@@ -42,6 +42,7 @@
 
   float get_angle() const;
   void  set_angle(float angle);
+
 private:
   LaserPointer (const LaserPointer&);
   LaserPointer& operator= (const LaserPointer&);

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 15:39:22 UTC (rev 2664)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 18:41:55 UTC (rev 2665)
@@ -144,9 +144,18 @@
 
   controller = InputManager::get_controller();
 
-  laser_pointer->set_angle(laser_pointer->get_angle() + controller.get_axis_state(Y_AXIS) * delta);
-  //laser_pointer->set_angle(controller.get_axis_state(Y2_AXIS) * M_PI);
+  {
+    if (fabsf(controller.get_axis_state(X2_AXIS)) > 0.2f ||
+        fabsf(controller.get_axis_state(Y2_AXIS)) > 0.2f)
+      {
+        float angle = atan2f(controller.get_axis_state(Y2_AXIS),
+                             controller.get_axis_state(X2_AXIS));
 
+        laser_pointer->set_angle(angle);
+      }
+    // laser_pointer->set_angle(laser_pointer->get_angle() + controller.get_axis_state(Y_AXIS) * delta);
+  }
+
   //std::cout << controller.get_axis_state(Y2_AXIS) * M_PI << std::endl;
 
   if (GameSession::current()->is_active())



From grumbel at mail.berlios.de  Sat Mar 14 20:36:33 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 20:36:33 +0100
Subject: [Windstille-commit] r2666 - trunk/windstille/src/input
Message-ID: <200903141936.n2EJaXUX005804@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 20:36:33 +0100 (Sat, 14 Mar 2009)
New Revision: 2666

Modified:
   trunk/windstille/src/input/input_manager_impl.cpp
Log:
Removed hardcoded deadzone

Modified: trunk/windstille/src/input/input_manager_impl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_impl.cpp	2009-03-14 18:41:55 UTC (rev 2665)
+++ trunk/windstille/src/input/input_manager_impl.cpp	2009-03-14 19:36:33 UTC (rev 2666)
@@ -22,11 +22,8 @@
 void
 InputManagerImpl::add_axis_event(int name, float pos)
 {
-  // FIXME: Hardcoding a deadzone might not be a good idea
-  if (fabsf(pos) < 0.125f)
-    pos = 0;
-
   InputEvent event;
+
   event.type = AXIS_EVENT;
   event.axis.name = name;
   event.axis.pos  = pos;
@@ -39,6 +36,7 @@
 InputManagerImpl::add_ball_event  (int name, float pos)
 {
   InputEvent event;
+
   event.type = BALL_EVENT;
   event.axis.name = name;
   event.axis.pos  = pos;



From grumbel at mail.berlios.de  Sat Mar 14 20:53:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 20:53:43 +0100
Subject: [Windstille-commit] r2667 - trunk/windstille/src/particles
Message-ID: <200903141953.n2EJrh7O007335@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 20:53:43 +0100 (Sat, 14 Mar 2009)
New Revision: 2667

Modified:
   trunk/windstille/src/particles/particle_system.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/particles/particle_system.hpp
===================================================================
--- trunk/windstille/src/particles/particle_system.hpp	2009-03-14 19:36:33 UTC (rev 2666)
+++ trunk/windstille/src/particles/particle_system.hpp	2009-03-14 19:53:43 UTC (rev 2667)
@@ -29,8 +29,9 @@
 class Randomizer;
 struct Particle;
 class ParticleSystem;
-
-struct Particle {
+
+struct Particle
+{
   /** Position of the particle */
   float x;
   float y;
@@ -46,9 +47,7 @@
       isn't active and ready to respawn */
   float t;
 };
-
-
-/** */
+
 class ParticleSystem : public Entity
 {
 public:
@@ -187,7 +186,7 @@
   ParticleSystem (const ParticleSystem&);
   ParticleSystem& operator= (const ParticleSystem&);
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Sat Mar 14 20:54:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 20:54:24 +0100
Subject: [Windstille-commit] r2668 - in trunk/windstille: . src/input
	src/objects
Message-ID: <200903141954.n2EJsOua007379@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 20:54:24 +0100 (Sat, 14 Mar 2009)
New Revision: 2668

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/objects/player.cpp
Log:
Mapped laserpointer to second analogstick, moved deadzone handling into application code

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-14 19:53:43 UTC (rev 2667)
+++ trunk/windstille/TODO	2009-03-14 19:54:24 UTC (rev 2668)
@@ -11,6 +11,13 @@
 Scripting
 =========
 
+* ParticleSystem could be hooked up to scripting
+
+* add a way to bind keys to script functions for use in debugging
+
+  bind("F9", "toggle_this")
+  bind("F9", function() { /* do stuff */ })
+
 * maybe: introduce some cleaner seperation between scripts that are
   allowed to suspend and those that aren't
 
@@ -119,9 +126,6 @@
   video_ for all display related stuff and so on, so that
   tab-completion works better and things become more readable
 
-* document scripting tricks somewhere:
-  spawn_object("shockwave", {pos=[0,0]})
-
 * conversations really should be data with hooks for scripts, not pure
   scripts (FIXME: not clear if there is enough benefit and flexibilty
   to try that)
@@ -131,7 +135,9 @@
 Input Handling
 ==============
 
-* get rid of global game_time variable
+* Input deadzone is problematic when trying to get angle of a stick,
+  deadzone needs to act different there then when X/Y are handled
+  seperatly
 
 * change of input context is troublesome: when the user selects a
   dialog and confirms it, the character starts to walk into the
@@ -161,6 +167,12 @@
 Miscellaneous
 =============
 
+* raycasting in laserpointer is broken, doesn't work if angle is 0
+  (maybe not worth to fix since it will be replaced with
+  NavigationMesh)
+
+* get rid of global game_time variable
+
 * No object shall grab input by itself, instead the Screen should
   route it, i.e. Player is grabbing input itself, this leads to
   problems

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-03-14 19:53:43 UTC (rev 2667)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-03-14 19:54:24 UTC (rev 2668)
@@ -35,7 +35,7 @@
 
 InputManagerSDL* InputManagerSDL::current_ = 0;
 
-const int dead_zone =  8192;
+const int dead_zone = 0;
 
 class InputManagerSDLImpl
 {
@@ -378,14 +378,10 @@
       if (event.which  == i->device &&
           event.axis   == i->axis)
         {
-          if (event.value < -dead_zone)
+          if (abs(event.value) > dead_zone)
             {
               add_axis_event(i->event, event.value/(i->invert?-32768.0f:32768.0f));
             }
-          else if (event.value > dead_zone)
-            {
-              add_axis_event(i->event, event.value/(i->invert?-32768.0f:32768.0f));
-            }
           else
             {
               add_axis_event(i->event, 0);
@@ -401,18 +397,18 @@
           event.axis  == i->axis)
         {
           if (i->up)
-            {
+            { // signal button press when axis is up
               if (event.value < -dead_zone)
                 add_button_event(i->event, true);
               else 
                 add_button_event(i->event, false);
             }
           else
-            {
+            { // signal button press when axis is down
               if (event.value > dead_zone)
                 add_button_event(i->event, true);
-              else 
-                add_button_event(i->event, false);              
+              else
+                add_button_event(i->event, false);
             }
         }
     }
@@ -698,7 +694,7 @@
 }
 
 void
-InputManagerSDL::add_axis_event  (int name, float pos)
+InputManagerSDL::add_axis_event(int name, float pos)
 {
   // Convert analog axis events into digital menu movements
   // FIXME: add key repeat

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 19:53:43 UTC (rev 2667)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 19:54:24 UTC (rev 2668)
@@ -111,11 +111,13 @@
   weapon->draw(sc);
   sc.pop_modelview();
 
-
+  if (laser_pointer->is_active())
+    {
   sc.push_modelview();
   sc.translate(pos.x, pos.y - 80);
   laser_pointer->draw(sc);
   sc.pop_modelview();
+    }
 }
 
 void
@@ -140,24 +142,26 @@
 Player::update(float delta)
 {
   weapon->update(delta);
-  laser_pointer->update(delta);
 
+  if (laser_pointer->is_active())
+    laser_pointer->update(delta);
+
   controller = InputManager::get_controller();
 
-  {
-    if (fabsf(controller.get_axis_state(X2_AXIS)) > 0.2f ||
-        fabsf(controller.get_axis_state(Y2_AXIS)) > 0.2f)
-      {
-        float angle = atan2f(controller.get_axis_state(Y2_AXIS),
-                             controller.get_axis_state(X2_AXIS));
+  if (fabsf(controller.get_axis_state(X2_AXIS)) > 0.25f ||
+      fabsf(controller.get_axis_state(Y2_AXIS)) > 0.25f)
+    {
+      float angle = atan2f(controller.get_axis_state(Y2_AXIS),
+                           controller.get_axis_state(X2_AXIS));
 
-        laser_pointer->set_angle(angle);
-      }
-    // laser_pointer->set_angle(laser_pointer->get_angle() + controller.get_axis_state(Y_AXIS) * delta);
-  }
+      laser_pointer->set_active(true);
+      laser_pointer->set_angle(angle);
+    }
+  else
+    {
+      laser_pointer->set_active(false);
+    }
 
-  //std::cout << controller.get_axis_state(Y2_AXIS) * M_PI << std::endl;
-
   if (GameSession::current()->is_active())
     {
       switch(state)
@@ -410,7 +414,7 @@
 void
 Player::update_walk()
 {
-  if (controller.get_axis_state(X_AXIS) == 0)
+  if (fabsf(controller.get_axis_state(X_AXIS)) < 0.5f) // Hardcoded DEAD_ZONE, somewhat evil 
     {
       leave_walk();
       set_stand();



From grumbel at mail.berlios.de  Sat Mar 14 23:53:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 23:53:54 +0100
Subject: [Windstille-commit] r2669 - trunk/windstille/src/objects
Message-ID: <200903142253.n2EMrs8I020991@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 23:53:53 +0100 (Sat, 14 Mar 2009)
New Revision: 2669

Modified:
   trunk/windstille/src/objects/player.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 19:54:24 UTC (rev 2668)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 22:53:53 UTC (rev 2669)
@@ -113,10 +113,10 @@
 
   if (laser_pointer->is_active())
     {
-  sc.push_modelview();
-  sc.translate(pos.x, pos.y - 80);
-  laser_pointer->draw(sc);
-  sc.pop_modelview();
+      sc.push_modelview();
+      sc.translate(pos.x, pos.y - 80);
+      laser_pointer->draw(sc);
+      sc.pop_modelview();
     }
 }
 



From grumbel at mail.berlios.de  Sat Mar 14 23:54:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 14 Mar 2009 23:54:13 +0100
Subject: [Windstille-commit] r2670 - in trunk/windstille: . src/gui
Message-ID: <200903142254.n2EMsD4m021030@sheep.berlios.de>

Author: grumbel
Date: 2009-03-14 23:54:12 +0100 (Sat, 14 Mar 2009)
New Revision: 2670

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/gui/group_component.hpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu.hpp
   trunk/windstille/src/gui/menu_component.cpp
   trunk/windstille/src/gui/menu_component.hpp
Log:
Hacked together automatic menu resize

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-14 22:53:53 UTC (rev 2669)
+++ trunk/windstille/TODO	2009-03-14 22:54:12 UTC (rev 2670)
@@ -137,8 +137,14 @@
 
 * Input deadzone is problematic when trying to get angle of a stick,
   deadzone needs to act different there then when X/Y are handled
-  seperatly
+  seperatly. Temporary workaround is to move deadzone out of the input
+  code into the app code, which is problematic as well. Alternatives
+  might be more high-level ways to access the stick:
 
+  void get_stick_state(X_AXIS, Y_AXIS, &angle, &length);
+  bool stick_is_centered(X_AXIS, Y_AXIS);
+  float get_axis_state(X_AXIS, bool ignore_deadzone = false);
+
 * change of input context is troublesome: when the user selects a
   dialog and confirms it, the character starts to walk into the
   direction that the player indicated, because the stick still points
@@ -167,6 +173,15 @@
 Miscellaneous
 =============
 
+* set dynamic maximum size for auto resizing Menus depending on
+  resolution
+
+* add way to jump without running
+
+* animation must be less strongly coupled to movement
+
+* add way to skip through SpeechManager Speech lines (B-button)
+
 * raycasting in laserpointer is broken, doesn't work if angle is 0
   (maybe not worth to fix since it will be replaced with
   NavigationMesh)
@@ -202,10 +217,6 @@
 
 * console doesn't adopt to screen size
 
-* add support for dynamic resize to Menu's, currently Menus have
-  scroll bars on large resolutions and empty space when they have to
-  few items
-
 * create a UTF32 string class for use in console, basically
   basic_string<uint32_t> and a convert function to UTF-8 should be
   enough
@@ -356,6 +367,8 @@
 Graphics
 ========
 
+* Model lower-poly version of Jane and stuff
+
 * aspect-ratio/resolution options:
 
   - let the user select a resolution from all the ones that are available from X11 (see Pingus for code)

Modified: trunk/windstille/src/gui/group_component.hpp
===================================================================
--- trunk/windstille/src/gui/group_component.hpp	2009-03-14 22:53:53 UTC (rev 2669)
+++ trunk/windstille/src/gui/group_component.hpp	2009-03-14 22:54:12 UTC (rev 2670)
@@ -45,6 +45,8 @@
 
   Rectf get_child_rect() const;
 
+  bool has_title() const { return !title.empty(); }
+
 private:
   GroupComponent (const GroupComponent&);
   GroupComponent& operator= (const GroupComponent&);

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-14 22:53:53 UTC (rev 2669)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-14 22:54:12 UTC (rev 2670)
@@ -89,29 +89,31 @@
   return manager->get_root();
 }
 
-GroupComponent*
-Menu::get_group() const
-{
-  return group.get();
-}
-
 void
 Menu::show()
 {
   assert(manager.get());
+  
+  {
+    Rectf rect = group->get_screen_rect();
 
+    Vector2f center((rect.left + rect.right) / 2.0f,
+                    (rect.top + rect.bottom) / 2.0f);
+
+    Sizef size(menu->get_prefered_width(), 
+               menu->get_prefered_height() + (group->has_title()?Fonts::vera20->get_height() + 18:0.0f));
+
+    group->set_screen_rect(Rectf(Vector2f(center.x - size.width/2.0f,
+                                          center.y - size.height/2.0f),
+                                 size));
+
+    menu->set_screen_rect(group->get_child_rect());
+  }
+
   group->pack(menu.release());
   manager->get_root()->add_child(group.release());
   screen_manager.push_overlay(manager.release());
 }
-
-std::auto_ptr<GroupComponent>
-Menu::create_group()
-{
-  assert(manager.get() == 0);
-  group->pack(menu.release());
-  return group;
-}
 
 } // namespace gui
 

Modified: trunk/windstille/src/gui/menu.hpp
===================================================================
--- trunk/windstille/src/gui/menu.hpp	2009-03-14 22:53:53 UTC (rev 2669)
+++ trunk/windstille/src/gui/menu.hpp	2009-03-14 22:54:12 UTC (rev 2670)
@@ -60,10 +60,8 @@
                    const boost::function<void ()>& callback = boost::function<void ()>());
 
   RootComponent*  get_root() const;
-  GroupComponent* get_group() const;
 
   void show();
-  std::auto_ptr<GroupComponent> create_group();
 
 private:
   Menu (const Menu&);

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-03-14 22:53:53 UTC (rev 2669)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-03-14 22:54:12 UTC (rev 2670)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <algorithm>
 #include <iostream>
 #include "sound/sound_manager.hpp"
 #include "input/controller.hpp"
@@ -198,14 +199,13 @@
     {
     width = std::max(get_width())
     }  */
-  return 200; // FIXME:
+  return rect.get_width();
 }
 
 float
 MenuComponent::get_prefered_height() const
 {
-  float step = font->get_height() + 20.0f;
-  return step * items.size();
+  return item_height() * std::min(10, int(items.size())) + 12.0f;
 }
 
 float
@@ -237,6 +237,26 @@
     }  
 }
 
+void
+MenuComponent::set_screen_rect(const Rectf& rect)
+{
+  num_displayable_items = static_cast<int>(rect.get_height() / item_height());  
+
+  if (num_displayable_items < int(items.size()))
+    {
+      scroll_mode   = true;
+      scroll_offset = 0;
+    }
+  else
+    {
+      scroll_mode   = false;
+      scroll_offset = 0;
+    }
+
+  
+  Component::set_screen_rect(rect);
+}
+
 } // namespace gui
 
 /* EOF */

Modified: trunk/windstille/src/gui/menu_component.hpp
===================================================================
--- trunk/windstille/src/gui/menu_component.hpp	2009-03-14 22:53:53 UTC (rev 2669)
+++ trunk/windstille/src/gui/menu_component.hpp	2009-03-14 22:54:12 UTC (rev 2670)
@@ -66,6 +66,9 @@
 
   void     set_font(TTFFont* font_);
   TTFFont* get_font();
+
+  virtual void set_screen_rect(const Rectf& rect);
+
 private:
   MenuComponent (const MenuComponent&);
   MenuComponent& operator= (const MenuComponent&);



From grumbel at mail.berlios.de  Sun Mar 15 00:21:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 15 Mar 2009 00:21:12 +0100
Subject: [Windstille-commit] r2671 - trunk/windstille/src/app
Message-ID: <200903142321.n2ENLCuR023163@sheep.berlios.de>

Author: grumbel
Date: 2009-03-15 00:21:12 +0100 (Sun, 15 Mar 2009)
New Revision: 2671

Modified:
   trunk/windstille/src/app/config.cpp
Log:
Changed default resolution to 1280x800

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-03-14 22:54:12 UTC (rev 2670)
+++ trunk/windstille/src/app/config.cpp	2009-03-14 23:21:12 UTC (rev 2671)
@@ -41,11 +41,11 @@
   add(new ConfigValue<bool>("music",          _("Enable Music"), true, true));
   add(new ConfigValue<bool>("sound",          _("Enable Sound"), true, true));
   
-  add(new ConfigValue<int>("aspect-width",    _("Aspect Width"),   true, 800));
-  add(new ConfigValue<int>("aspect-height",   _("Aspect Height"),  true, 600));
+  add(new ConfigValue<int>("aspect-width",    _("Aspect Width"),   true, 1280));
+  add(new ConfigValue<int>("aspect-height",   _("Aspect Height"),  true,  800));
 
-  add(new ConfigValue<int>("screen-width",    _("Screen Width"),   true, 800));
-  add(new ConfigValue<int>("screen-height",   _("Screen Height"), true, 600));
+  add(new ConfigValue<int>("screen-width",    _("Screen Width"),   true, 1280));
+  add(new ConfigValue<int>("screen-height",   _("Screen Height"),  true,  800));
 
   add(new ConfigValue<std::string>("levelfile",       _("Levelfile to be used at startup"), false));
 



From grumbel at mail.berlios.de  Sun Mar 15 00:34:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 15 Mar 2009 00:34:53 +0100
Subject: [Windstille-commit] r2672 - in trunk/windstille/src: input objects
Message-ID: <200903142334.n2ENYrYk027252@sheep.berlios.de>

Author: grumbel
Date: 2009-03-15 00:34:52 +0100 (Sun, 15 Mar 2009)
New Revision: 2672

Modified:
   trunk/windstille/src/input/controller.cpp
   trunk/windstille/src/input/controller.hpp
   trunk/windstille/src/objects/player.cpp
Log:
Made deadzone handling optional

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-03-14 23:21:12 UTC (rev 2671)
+++ trunk/windstille/src/input/controller.cpp	2009-03-14 23:34:52 UTC (rev 2672)
@@ -17,6 +17,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <math.h>
 #include <assert.h>
 #include "app/controller_def.hpp"
 #include "controller.hpp"
@@ -46,13 +47,23 @@
 }
 
 float
-Controller::get_axis_state(int id) const
+Controller::get_axis_state(int id, bool use_deadzone) const
 {
   assert(id < int(states.size()));
-  return states[id].axis;
-}
-        
 
+  if (use_deadzone)
+    {
+      if (fabsf(states[id].axis) > 0.1f) // FIXME: Hardcoded Deadzone
+        return states[id].axis;
+      else
+        return 0.0f;
+    }
+  else
+    {
+      return states[id].axis;
+    }
+}      
+
 bool
 Controller::get_button_state(int id) const
 {

Modified: trunk/windstille/src/input/controller.hpp
===================================================================
--- trunk/windstille/src/input/controller.hpp	2009-03-14 23:21:12 UTC (rev 2671)
+++ trunk/windstille/src/input/controller.hpp	2009-03-14 23:34:52 UTC (rev 2672)
@@ -43,7 +43,7 @@
   Controller();
 
   float get_trigger_state(int name) const;
-  float get_axis_state  (int name) const;
+  float get_axis_state  (int name, bool use_deadzone = true) const;
   bool  get_button_state(int name) const;
   float get_ball_state  (int name) const;
 

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-14 23:21:12 UTC (rev 2671)
+++ trunk/windstille/src/objects/player.cpp	2009-03-14 23:34:52 UTC (rev 2672)
@@ -148,11 +148,11 @@
 
   controller = InputManager::get_controller();
 
-  if (fabsf(controller.get_axis_state(X2_AXIS)) > 0.25f ||
-      fabsf(controller.get_axis_state(Y2_AXIS)) > 0.25f)
+  if (fabsf(controller.get_axis_state(X2_AXIS, false)) > 0.25f ||
+      fabsf(controller.get_axis_state(Y2_AXIS, false)) > 0.25f)
     {
-      float angle = atan2f(controller.get_axis_state(Y2_AXIS),
-                           controller.get_axis_state(X2_AXIS));
+      float angle = atan2f(controller.get_axis_state(Y2_AXIS, false),
+                           controller.get_axis_state(X2_AXIS, false));
 
       laser_pointer->set_active(true);
       laser_pointer->set_angle(angle);



From grumbel at mail.berlios.de  Sun Mar 15 00:36:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 15 Mar 2009 00:36:17 +0100
Subject: [Windstille-commit] r2673 - in trunk/windstille: . src/display
	src/screen
Message-ID: <200903142336.n2ENaHY6028639@sheep.berlios.de>

Author: grumbel
Date: 2009-03-15 00:36:16 +0100 (Sun, 15 Mar 2009)
New Revision: 2673

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/screen/sprite2dview.cpp
Log:
Minor cleanup and TODO update

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-14 23:34:52 UTC (rev 2672)
+++ trunk/windstille/TODO	2009-03-14 23:36:16 UTC (rev 2673)
@@ -173,6 +173,8 @@
 Miscellaneous
 =============
 
+* using aspect-ration different to screen resolution, lots of things break
+
 * set dynamic maximum size for auto resizing Menus depending on
   resolution
 

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-14 23:34:52 UTC (rev 2672)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-14 23:36:16 UTC (rev 2673)
@@ -267,7 +267,7 @@
 {
   // FIXME: Need to check the modelview matrix
   return Rectf(Vector2f(modelview_stack.back()[12],
-                      modelview_stack.back()[13]),
+                        modelview_stack.back()[13]),
                Sizef(800, 600));
 }
 

Modified: trunk/windstille/src/screen/sprite2dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite2dview.cpp	2009-03-14 23:34:52 UTC (rev 2672)
+++ trunk/windstille/src/screen/sprite2dview.cpp	2009-03-14 23:36:16 UTC (rev 2673)
@@ -138,7 +138,7 @@
               small.set_scale(scale);
 
               small.draw(Vector2f(DISPLAY_W - width,
-                                DISPLAY_H - height));
+                                  DISPLAY_H - height));
             }
           else
             {



From grumbel at mail.berlios.de  Sun Mar 15 01:43:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 15 Mar 2009 01:43:51 +0100
Subject: [Windstille-commit] r2674 - trunk/windstille/src/input
Message-ID: <200903150043.n2F0hpga005343@sheep.berlios.de>

Author: grumbel
Date: 2009-03-15 01:43:51 +0100 (Sun, 15 Mar 2009)
New Revision: 2674

Modified:
   trunk/windstille/src/input/controller.cpp
Log:
Little deadzone adjustment

Modified: trunk/windstille/src/input/controller.cpp
===================================================================
--- trunk/windstille/src/input/controller.cpp	2009-03-14 23:36:16 UTC (rev 2673)
+++ trunk/windstille/src/input/controller.cpp	2009-03-15 00:43:51 UTC (rev 2674)
@@ -53,7 +53,7 @@
 
   if (use_deadzone)
     {
-      if (fabsf(states[id].axis) > 0.1f) // FIXME: Hardcoded Deadzone
+      if (fabsf(states[id].axis) > 0.25f) // FIXME: Hardcoded Deadzone
         return states[id].axis;
       else
         return 0.0f;



From grumbel at mail.berlios.de  Sun Mar 15 01:44:09 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 15 Mar 2009 01:44:09 +0100
Subject: [Windstille-commit] r2675 - trunk/windstille/src/hud
Message-ID: <200903150044.n2F0i93p005380@sheep.berlios.de>

Author: grumbel
Date: 2009-03-15 01:44:09 +0100 (Sun, 15 Mar 2009)
New Revision: 2675

Modified:
   trunk/windstille/src/hud/pda.cpp
   trunk/windstille/src/hud/pda.hpp
Log:
Position PDA properly on the screen

Modified: trunk/windstille/src/hud/pda.cpp
===================================================================
--- trunk/windstille/src/hud/pda.cpp	2009-03-15 00:43:51 UTC (rev 2674)
+++ trunk/windstille/src/hud/pda.cpp	2009-03-15 00:44:09 UTC (rev 2675)
@@ -37,13 +37,16 @@
 }
 
 PDA::PDA()
-  : state(PDA_OBJECTIVES),
+  : pos(100.0f, 100.0f),
+    state(PDA_OBJECTIVES),
     old_state(PDA_NONE)
 { 
   background = Sprite("images/pda/pda.sprite");
 
-  ui_area.reset(new TextArea(Rectf(70, 83, 385, 520).grow(-12.0f), false));
-  text_area.reset(new TextArea(Rectf(70, 83+56, 385, 520).grow(-12.0f), false));
+  ui_area.reset(new TextArea(Rectf(pos + Vector2f(40.0f, 50.0f), 
+                                   Sizef(315.0f, 435.0f)).grow(-12.0f), false));
+  text_area.reset(new TextArea(Rectf(pos + Vector2f(40.0f, 50.0f) + Vector2f(0.0f, 56.0f),
+                                     Sizef(315.0f, 380.0f)).grow(-12.0f), false));
 
   ui_area->set_font(Fonts::vera12);
   text_area->set_font(Fonts::vera12);
@@ -59,7 +62,7 @@
   // Darken the background a bit
   Display::fill_rect(Rect(0, 0, Display::get_width(), Display::get_height()), Color(0.0f, 0.0f, 0.0f, 0.25f));
 
-  background.draw(Vector2f(30, 30));
+  background.draw(pos);
 
   Rectf rect = text_area->get_rect().grow(8.0f);
   

Modified: trunk/windstille/src/hud/pda.hpp
===================================================================
--- trunk/windstille/src/hud/pda.hpp	2009-03-15 00:43:51 UTC (rev 2674)
+++ trunk/windstille/src/hud/pda.hpp	2009-03-15 00:44:09 UTC (rev 2675)
@@ -48,6 +48,7 @@
 class PDA : public Screen
 {
 private:
+  Vector2f  pos;
   Sprite    background;
 
   std::auto_ptr<TextArea>  ui_area;



From grumbel at mail.berlios.de  Mon Mar 16 01:29:49 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 01:29:49 +0100
Subject: [Windstille-commit] r2676 - in trunk/windstille/src: . app display
	engine gui hud input navigation objects particles screen
	sprite2d sprite3d tile util
Message-ID: <200903160029.n2G0Tnn2014617@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 01:29:41 +0100 (Mon, 16 Mar 2009)
New Revision: 2676

Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/console.cpp
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/vertex_array_drawing_request.cpp
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/gui/automap.cpp
   trunk/windstille/src/gui/automap.hpp
   trunk/windstille/src/gui/button.cpp
   trunk/windstille/src/gui/button.hpp
   trunk/windstille/src/gui/grid_component.cpp
   trunk/windstille/src/gui/grid_component.hpp
   trunk/windstille/src/gui/label.cpp
   trunk/windstille/src/gui/slider.cpp
   trunk/windstille/src/gui/tab_component.cpp
   trunk/windstille/src/gui/tab_component.hpp
   trunk/windstille/src/hud/controller_help_window.cpp
   trunk/windstille/src/input/input_manager_sdl.cpp
   trunk/windstille/src/input/wiimote.cpp
   trunk/windstille/src/navigation/navigation_graph.hpp
   trunk/windstille/src/navigation/node.hpp
   trunk/windstille/src/navigation/segment.cpp
   trunk/windstille/src/objects/background_gradient.cpp
   trunk/windstille/src/objects/box.cpp
   trunk/windstille/src/objects/character.cpp
   trunk/windstille/src/objects/elevator.cpp
   trunk/windstille/src/objects/hedgehog.cpp
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/nightvision.cpp
   trunk/windstille/src/objects/scriptable_object.cpp
   trunk/windstille/src/objects/shockwave.cpp
   trunk/windstille/src/objects/spider_mine.cpp
   trunk/windstille/src/objects/swarm.cpp
   trunk/windstille/src/objects/test_object.cpp
   trunk/windstille/src/objects/trigger.cpp
   trunk/windstille/src/objects/vrdummy.cpp
   trunk/windstille/src/particles/deform_drawer.cpp
   trunk/windstille/src/particles/particle_system.cpp
   trunk/windstille/src/particles/surface_drawer.cpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/title_screen.cpp
   trunk/windstille/src/sprite2d/data.cpp
   trunk/windstille/src/sprite3d/sprite3d.cpp
   trunk/windstille/src/tile/tile_description.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_map.cpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
   trunk/windstille/src/util/util.hpp
Log:
Some cleanup, got rid of print_unused_warnings() and fixed some compiler warnings, code is now -W clean

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/SConscript	2009-03-16 00:29:41 UTC (rev 2676)
@@ -81,7 +81,6 @@
 'gui/automap.cpp',
 'gui/button.cpp',
 'gui/component.cpp',
-'gui/component_factory.cpp',
 'gui/grid_component.cpp',
 'gui/group_component.cpp',
 'gui/gui_manager.cpp',

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/app/config.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -343,52 +343,55 @@
 void
 Config::load()
 {
-  try {
-    FileReader reader = FileReader::parse("config");
-    if(reader.get_name() != "windstille-config") {
-      std::cerr << "Warning: Config file is not a windstille-config file.\n";
+  try 
+    {
+      FileReader reader = FileReader::parse("config");
+      if(reader.get_name() != "windstille-config") 
+        {
+          std::cerr << "Warning: Config file is not a windstille-config file.\n";
+          return;
+        }
+    
+      for(ConfigValues::iterator i = config_values.begin(); i != config_values.end(); ++i)
+        { // FIXME: all this dynamic_casting is overcomplicated crap
+          if (dynamic_cast<ConfigValue<int>*>(i->second))
+            {
+              int v;
+              if (reader.get(i->first.c_str(), v))
+                set_int(i->first, v);
+            }
+          else if (dynamic_cast<ConfigValue<bool>*>(i->second))
+            {
+              bool v;
+              if (reader.get(i->first.c_str(), v))
+                set_bool(i->first, v);
+            }
+          else if (dynamic_cast<ConfigValue<float>*>(i->second))
+            {
+              float v;
+              if (reader.get(i->first.c_str(), v))
+                set_float(i->first, v);
+            }
+          else if (dynamic_cast<ConfigValue<std::string>*>(i->second))
+            {
+              std::string v;
+              if (reader.get(i->first.c_str(), v))
+                set_string(i->first, v);
+            }
+          else 
+            {
+              std::cout << "Config: Unknown type for: " << i->first << std::endl;
+            }
+        }
+    
+      // TODO read controller config
+    } 
+  catch(std::exception& e) 
+    {
+      std::cerr << "Couldn't open config file: " << e.what() << "\n"
+                << "This is normal on first startup!\n";
       return;
     }
-    
-    for(ConfigValues::iterator i = config_values.begin(); i != config_values.end(); ++i)
-      { // FIXME: all this dynamic_casting is overcomplicated crap
-        if (dynamic_cast<ConfigValue<int>*>(i->second))
-          {
-            int v;
-            if (reader.get(i->first.c_str(), v))
-              set_int(i->first, v);
-          }
-        else if (dynamic_cast<ConfigValue<bool>*>(i->second))
-          {
-            bool v;
-            if (reader.get(i->first.c_str(), v))
-              set_bool(i->first, v);
-          }
-        else if (dynamic_cast<ConfigValue<float>*>(i->second))
-          {
-            float v;
-            if (reader.get(i->first.c_str(), v))
-              set_float(i->first, v);
-          }
-        else if (dynamic_cast<ConfigValue<std::string>*>(i->second))
-          {
-            std::string v;
-            if (reader.get(i->first.c_str(), v))
-              set_string(i->first, v);
-          }
-        else 
-          {
-            std::cout << "Config: Unknown type for: " << i->first << std::endl;
-          }
-      }
-    reader.print_unused_warnings("configfile");
-
-    // TODO read controller config
-  } catch(std::exception& e) {
-    std::cerr << "Couldn't open config file: " << e.what() << "\n"
-              << "This is normal on first startup!\n";
-    return;
-  }
 }
 
 void

Modified: trunk/windstille/src/app/console.cpp
===================================================================
--- trunk/windstille/src/app/console.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/app/console.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -359,7 +359,7 @@
 static std::string longest_prefix(const std::string& lhs, const std::string rhs)
 {
   std::string::size_type i;
-  for(i = 0; i < lhs.size() && i < rhs.size() && lhs[i] == rhs[i]; ++i);
+  for(i = 0; i < lhs.size() && i < rhs.size() && lhs[i] == rhs[i]; ++i) {};
   return lhs.substr(0, i);
 }
 

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/display/blitter.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -87,11 +87,11 @@
 {
 #if SDL_BYTEORDER == SDL_BIG_ENDIAN
   SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                                  1024, 1024, 32,
+                                                  width, height, 32,
                                                   0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
 #else
   SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                                  1024, 1024, 32,
+                                                  width, height, 32,
                                                   0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
 #endif
   return pixelbuffer;

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -48,7 +48,7 @@
   }
   virtual ~FillScreenDrawingRequest() {}
 
-  void draw(const Texture& tmp_texture) {
+  void draw(const Texture& /*tmp_texture*/) {
     OpenGLState state;
     // FIXME: move clear color to opengl_state
     state.activate();
@@ -68,7 +68,7 @@
   {}
   virtual ~TextDrawingRequest() {}
 
-  void draw(const Texture& tmp_texture) {
+  void draw(const Texture& /*tmp_texture*/) {
     glPushMatrix();
     glMultMatrixf(modelview.matrix);
     Fonts::ttffont->draw(pos, text);
@@ -90,7 +90,7 @@
   virtual ~SurfaceDrawingRequest()
   {}
 
-  void draw(const Texture& tmp_texture) 
+  void draw(const Texture& /*tmp_texture*/) 
   {
     glPushMatrix();
     glMultMatrixf(modelview.matrix);

Modified: trunk/windstille/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/display/vertex_array_drawing_request.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -37,7 +37,7 @@
 }
 
 void
-VertexArrayDrawingRequest::draw(const Texture& tmp_texture)
+VertexArrayDrawingRequest::draw(const Texture& /*tmp_texture*/)
 {
   draw(0, num_vertices());
 }

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -117,7 +117,6 @@
       add_object(*i);
     }
 
-  reader.print_unused_warnings("sector");
   if (debug) std::cout << "Finished parsing" << std::endl;
 }
 

Modified: trunk/windstille/src/gui/automap.cpp
===================================================================
--- trunk/windstille/src/gui/automap.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/automap.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -25,7 +25,7 @@
 
 namespace gui {
 
-Automap::Automap(FileReader& reader, Component* parent)
+Automap::Automap(Component* parent)
   : Component(parent)
 {
   assert(0);

Modified: trunk/windstille/src/gui/automap.hpp
===================================================================
--- trunk/windstille/src/gui/automap.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/automap.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -33,7 +33,7 @@
   float   zoom;
 
 public:
-  Automap(FileReader& reader, Component* parent);
+  Automap(Component* parent);
   Automap(const Rectf& rect, Component* parent);
   ~Automap();
 

Modified: trunk/windstille/src/gui/button.cpp
===================================================================
--- trunk/windstille/src/gui/button.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/button.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -24,7 +24,7 @@
 
 namespace gui {
 
-Button::Button(FileReader& reader, Component* parent)
+Button::Button(Component* parent)
   : Component(parent)
 {
   assert(0);

Modified: trunk/windstille/src/gui/button.hpp
===================================================================
--- trunk/windstille/src/gui/button.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/button.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -31,7 +31,7 @@
   std::string label;
 
 public:
-  Button(FileReader& reader, Component* parent);
+  Button(Component* parent);
   Button(const std::string& label, Component* parent);
   ~Button();
 

Modified: trunk/windstille/src/gui/grid_component.cpp
===================================================================
--- trunk/windstille/src/gui/grid_component.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/grid_component.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -23,7 +23,7 @@
 
 namespace gui {
 
-GridComponent::GridComponent(FileReader& reader, Component* parent)
+GridComponent::GridComponent(Component* parent)
   : Component(parent)
 {
   assert(0);  

Modified: trunk/windstille/src/gui/grid_component.hpp
===================================================================
--- trunk/windstille/src/gui/grid_component.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/grid_component.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -53,7 +53,7 @@
   float padding;
 
 public:
-  GridComponent(FileReader& reader, Component* parent);
+  GridComponent(Component* parent);
   GridComponent(const Rectf& rect, int weight, int height, Component* parent);
   virtual ~GridComponent();
   

Modified: trunk/windstille/src/gui/label.cpp
===================================================================
--- trunk/windstille/src/gui/label.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/label.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -42,7 +42,7 @@
 }
 
 void
-Label::update(float delta, const Controller& controller)
+Label::update(float /*delta*/, const Controller& /*controller*/)
 {
   set_active(false);
 }

Modified: trunk/windstille/src/gui/slider.cpp
===================================================================
--- trunk/windstille/src/gui/slider.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/slider.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -84,7 +84,7 @@
 }
 
 void
-Slider::update(float delta, const Controller& controller)
+Slider::update(float /*delta*/, const Controller& controller)
 {
   for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
     {

Modified: trunk/windstille/src/gui/tab_component.cpp
===================================================================
--- trunk/windstille/src/gui/tab_component.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/tab_component.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -24,7 +24,7 @@
 
 namespace gui {
 
-TabComponent::TabComponent(FileReader& reader, Component* parent)
+TabComponent::TabComponent(Component* parent)
   : Component(parent)
 {
   assert(0);

Modified: trunk/windstille/src/gui/tab_component.hpp
===================================================================
--- trunk/windstille/src/gui/tab_component.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/gui/tab_component.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -46,7 +46,7 @@
   int current_tab;
 
 public:
-  TabComponent(FileReader& reader, Component* parent);
+  TabComponent(Component* parent);
   TabComponent(const Rectf& rect, Component* parent);
   ~TabComponent();
 

Modified: trunk/windstille/src/hud/controller_help_window.cpp
===================================================================
--- trunk/windstille/src/hud/controller_help_window.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/hud/controller_help_window.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -127,7 +127,7 @@
 }
 
 void
-ControllerHelpWindow::update(float delta, const Controller& )
+ControllerHelpWindow::update(float /*delta*/, const Controller& )
 {
 }
 

Modified: trunk/windstille/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/windstille/src/input/input_manager_sdl.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/input/input_manager_sdl.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -478,7 +478,7 @@
 }
 
 void
-InputManagerSDL::update(float delta)
+InputManagerSDL::update(float /*delta*/)
 {
 #ifdef HAVE_CWIID
   if (wiimote && wiimote->is_connected())
@@ -565,9 +565,9 @@
 }
 
 void
-InputManagerSDL::bind_joystick_hat_axis(int event, int device, int axis)
+InputManagerSDL::bind_joystick_hat_axis(int /*event*/, int /*device*/, int /*axis*/)
 {
-  
+  assert(!"Implement me");
 }
 
 void

Modified: trunk/windstille/src/input/wiimote.cpp
===================================================================
--- trunk/windstille/src/input/wiimote.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/input/wiimote.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -200,7 +200,7 @@
 }
 
 void
-Wiimote::add_button_event(int device, int button, bool down)
+Wiimote::add_button_event(int /*device*/, int button, bool down)
 {
   // std::cout << "Wiimote::add_button_event: " << device << " " << button << " " << down << std::endl;
   WiimoteEvent event;
@@ -214,7 +214,7 @@
 }
 
 void
-Wiimote::add_axis_event(int device, int axis, float pos)
+Wiimote::add_axis_event(int /*device*/, int axis, float pos)
 {
   //std::cout << "Wiimote::add_axis_event: " << device << " " << axis << " " << pos << std::endl;
 
@@ -229,7 +229,7 @@
 }
 
 void
-Wiimote::add_acc_event(int device, int accelerometer, float x, float y, float z)
+Wiimote::add_acc_event(int /*device*/, int accelerometer, float x, float y, float z)
 {
   WiimoteEvent event;
 
@@ -270,7 +270,7 @@
 }
 
 void
-Wiimote::on_error(const cwiid_error_mesg& msg)
+Wiimote::on_error(const cwiid_error_mesg& /*msg*/)
 {
   std::cout << "On Error" << std::endl;
 
@@ -430,7 +430,7 @@
 }
 
 void
-Wiimote::mesg(cwiid_wiimote_t* w, int mesg_count, union cwiid_mesg mesg[])
+Wiimote::mesg(cwiid_wiimote_t* /*w*/, int mesg_count, union cwiid_mesg mesg[])
 {
   pthread_mutex_lock(&mutex);
 

Modified: trunk/windstille/src/navigation/navigation_graph.hpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/navigation/navigation_graph.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -111,6 +111,7 @@
 
   bool valid(Segment* segment);
   bool valid(Node*    node);
+
 private:
   NavigationGraph (const NavigationGraph&);
   NavigationGraph& operator= (const NavigationGraph&);

Modified: trunk/windstille/src/navigation/node.hpp
===================================================================
--- trunk/windstille/src/navigation/node.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/navigation/node.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -40,13 +40,14 @@
   ~Node();
 
   Vector2f get_pos() const { return pos; }
-  void   set_pos(const Vector2f& p) { pos = p; }
+  void     set_pos(const Vector2f& p) { pos = p; }
 
   /** Connect the given segment to the node, the position is used to
       mark the end of the segment that is actually connected */
   void add_segment(const SegmentPosition& segment);
 
   void remove_segment(Segment* segment);
+
 private:
   Node(const Node&);
   Node& operator=(const Node&);

Modified: trunk/windstille/src/navigation/segment.cpp
===================================================================
--- trunk/windstille/src/navigation/segment.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/navigation/segment.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -36,7 +36,7 @@
 }
 
 float
-Segment::angle(Segment* seg)
+Segment::angle(Segment* /*seg*/)
 {
   assert(!"Implement me");
   return 0.0f;

Modified: trunk/windstille/src/objects/background_gradient.cpp
===================================================================
--- trunk/windstille/src/objects/background_gradient.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/background_gradient.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -50,7 +50,7 @@
 }
   
 void
-BackgroundGradient::update(float delta)
+BackgroundGradient::update(float /*delta*/)
 {
 }
 

Modified: trunk/windstille/src/objects/box.cpp
===================================================================
--- trunk/windstille/src/objects/box.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/box.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -41,7 +41,6 @@
   props.get("vel", vel);
   props.get("name", name);
   props.get("gravity", gravity);
-  props.print_unused_warnings("box object");
   
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in Box");

Modified: trunk/windstille/src/objects/character.cpp
===================================================================
--- trunk/windstille/src/objects/character.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/character.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -43,7 +43,6 @@
   props.get("z-pos", z_pos);
   props.get("sprite3d", sprite3d_filename);
   props.get("action", action_name);
-  props.print_unused_warnings("character");
   
   sprite = Sprite3D(sprite3d_filename);
 

Modified: trunk/windstille/src/objects/elevator.cpp
===================================================================
--- trunk/windstille/src/objects/elevator.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/elevator.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -29,8 +29,7 @@
   props.get("sprite", spritename);
   props.get("pos", pos);
   props.get("name", name);
-  props.print_unused_warnings("elevator");
-
+  
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in Elevator");
 

Modified: trunk/windstille/src/objects/hedgehog.cpp
===================================================================
--- trunk/windstille/src/objects/hedgehog.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/hedgehog.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -29,8 +29,7 @@
 {
   props.get("name", name);
   props.get("pos",  pos);
-  props.print_unused_warnings("hedgehog");
-  
+    
   direction_left = false;
   state = WALKING;
   light.set_blend_func(GL_SRC_ALPHA, GL_ONE);

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/liquid.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -29,8 +29,7 @@
 
   props.get("pos",    pos);
   props.get("width",  width);
-  props.print_unused_warnings("Liquid");
-
+  
   heightfield1 = &heightfield_store1;
   heightfield2 = &heightfield_store2;
 

Modified: trunk/windstille/src/objects/nightvision.cpp
===================================================================
--- trunk/windstille/src/objects/nightvision.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/nightvision.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -24,7 +24,7 @@
 #include "display/texture_manager.hpp"
 #include "nightvision.hpp"
 
-Nightvision::Nightvision(FileReader& props)
+Nightvision::Nightvision(FileReader& /*props*/)
   : nightvision("images/nightvision.sprite")
 {
   name = "nightvision";

Modified: trunk/windstille/src/objects/scriptable_object.cpp
===================================================================
--- trunk/windstille/src/objects/scriptable_object.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/scriptable_object.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -43,8 +43,7 @@
   props.get("active", active);
   props.get("flash-speed", flash_speed); // FIXME: bad name, should be something more generic
   props.get("z-pos", z_pos);
-  props.print_unused_warnings("scriptable-object");
-  
+    
   if (use_verb != "")
     set_useable(true);
   

Modified: trunk/windstille/src/objects/shockwave.cpp
===================================================================
--- trunk/windstille/src/objects/shockwave.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/shockwave.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -223,8 +223,7 @@
   : noise("images/noise3.png")
 {
   props.get("pos", pos);
-  props.print_unused_warnings("Shockwave");
-
+  
   radius = 100.0f;
 
   noise.set_wrap(GL_REPEAT);

Modified: trunk/windstille/src/objects/spider_mine.cpp
===================================================================
--- trunk/windstille/src/objects/spider_mine.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/spider_mine.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -26,8 +26,7 @@
 {
   props.get("name", name);
   props.get("pos",  pos);
-  props.print_unused_warnings("spidermine");
-  
+    
   sprite = Sprite("images/spider_mine.sprite");
   //sprite.set_scale(.5, .5);
   initial_position = pos;

Modified: trunk/windstille/src/objects/swarm.cpp
===================================================================
--- trunk/windstille/src/objects/swarm.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/swarm.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -36,8 +36,7 @@
   props.get("pos",   pos);
   props.get("count", count);
   props.get("turn-speed", turn_speed);
-  props.print_unused_warnings("swarm");
-
+  
   agents.resize(count);
 
   for(Agents::iterator i = agents.begin(); i != agents.end(); ++i)

Modified: trunk/windstille/src/objects/test_object.cpp
===================================================================
--- trunk/windstille/src/objects/test_object.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/test_object.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -30,8 +30,7 @@
   props.get("sprite", spritename);
   props.get("pos", pos);
   props.get("name", name);
-  props.print_unused_warnings("testobject");
-
+  
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in TestObject");
   sprite = Sprite3D(spritename);

Modified: trunk/windstille/src/objects/trigger.cpp
===================================================================
--- trunk/windstille/src/objects/trigger.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/trigger.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -37,8 +37,7 @@
   props.get("height", height);
   props.get("callback", callback);
   props.get("one-time-trigger", one_time_trigger);
-  props.print_unused_warnings("trigger");
-
+  
   if(x < 0 || y < 0 || width < 0 || height < 0)
     throw std::runtime_error("Invalid or missing area in Trigger object");
  
@@ -58,29 +57,31 @@
 }
 
 void
-Trigger::update(float delta)
+Trigger::update(float /*delta*/)
 {
   //FIXME use proper collision detection
   Player* player = Player::current();
-  if(!area.is_inside(player->get_pos())) {
-    last_trigger = false;
-    return;
-  }
+  if(!area.is_inside(player->get_pos())) 
+    {
+      last_trigger = false;
+      return;
+    }
   
   if(triggered && one_time_trigger)
     return;
 
-  if(last_trigger == false) {
-    triggered = true;
-    try 
-      {
-        Sector::current()->call_script_function(callback);
-      }
-    catch(std::exception& e) 
-      {
-        std::cerr << "Couldn't run trigger-script: " << e.what() << "\n";
-      }
-  }
+  if(last_trigger == false) 
+    {
+      triggered = true;
+      try 
+        {
+          Sector::current()->call_script_function(callback);
+        }
+      catch(std::exception& e) 
+        {
+          std::cerr << "Couldn't run trigger-script: " << e.what() << "\n";
+        }
+    }
   last_trigger = true;
 }
 

Modified: trunk/windstille/src/objects/vrdummy.cpp
===================================================================
--- trunk/windstille/src/objects/vrdummy.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/objects/vrdummy.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -23,8 +23,7 @@
 {
   props.get("name", name);
   props.get("pos",  pos);
-  props.print_unused_warnings("VRDummy");
-  
+    
   sprite = Sprite3D("models/characters/vrdummy/vrdummy.wsprite");
   rotation = 0;
 

Modified: trunk/windstille/src/particles/deform_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/deform_drawer.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/particles/deform_drawer.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -162,7 +162,7 @@
   bool needs_prepare() { return true; }
 };
 
-DeformDrawer::DeformDrawer(FileReader& props)
+DeformDrawer::DeformDrawer(FileReader& /*props*/)
   : framebuffer(GL_TEXTURE_RECTANGLE_ARB, 800, 600),
     surface("images/particles/deform2.png")
 {

Modified: trunk/windstille/src/particles/particle_system.cpp
===================================================================
--- trunk/windstille/src/particles/particle_system.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/particles/particle_system.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -208,7 +208,6 @@
   //props.get("line-distribution",   ); // 2xvector2
   //props.get("circle", ); // float
   //props.get("rect-distribution", ); // vector2
-  props.print_unused_warnings("ParticleSystem");
 }
 
 ParticleSystem::ParticleSystem()
@@ -332,8 +331,9 @@
 }
 
 void
-ParticleSystem::set_cycles(float num)
+ParticleSystem::set_cycles(float /*num*/)
 {
+  assert(!"Implement me");
 }
 
 void

Modified: trunk/windstille/src/particles/surface_drawer.cpp
===================================================================
--- trunk/windstille/src/particles/surface_drawer.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/particles/surface_drawer.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -59,8 +59,7 @@
   props.get("image", surface_file);
   props.get("blendfunc-src", blendfunc_src_str);
   props.get("blendfunc-dst", blendfunc_dst_str);
-  props.print_unused_warnings("SurfaceDrawer");
-  
+    
   surface = SurfaceManager::current()->get(surface_file);
 
   blendfunc_src  = string2blendfunc(blendfunc_src_str);

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -109,10 +109,10 @@
     }
 
   cursor += Vector2f(controller.get_axis_state(X_AXIS) * 500.0f * delta,
-                   controller.get_axis_state(Y_AXIS) * 500.0f * delta);
+                     controller.get_axis_state(Y_AXIS) * 500.0f * delta);
 
   stick = Vector2f(controller.get_axis_state(X2_AXIS),
-                 controller.get_axis_state(Y2_AXIS));
+                   controller.get_axis_state(Y2_AXIS));
 
   if (controller.button_was_pressed(PRIMARY_BUTTON))
     {
@@ -222,10 +222,11 @@
         }
 
       std::vector<SegmentPosition> positions = graph->find_intersections(Line(old_player, player));
-      if (!positions.empty()) {
-        std::cout << "Doing connection" << std::endl;
-        connection.reset(new SegmentPosition(positions.front()));
-      }
+      if (!positions.empty()) 
+        {
+          std::cout << "Doing connection" << std::endl;
+          connection.reset(new SegmentPosition(positions.front()));
+        }
     }
   
   if (controller.button_was_pressed(SELECT_BUTTON))

Modified: trunk/windstille/src/screen/title_screen.cpp
===================================================================
--- trunk/windstille/src/screen/title_screen.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/screen/title_screen.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -46,7 +46,7 @@
 }
 
 void
-TitleScreen::update(float delta, const Controller& controller)
+TitleScreen::update(float delta, const Controller& /*controller*/)
 {
   background.update(delta);
 }

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -144,16 +144,13 @@
       grid_reader.get("x-size", x_size);
       grid_reader.get("y-size", y_size);
 
-      grid_reader.print_unused_warnings("action image-grid");
-
       if(filename == "" || x_size <= 0 || y_size <= 0)
         throw std::runtime_error("Invalid or too few data in image-grid");
       
       SurfaceManager::current()->load_grid(dir + "/" + filename,
                                            action->surfaces, x_size, y_size);
     }
-  reader.print_unused_warnings("sprite action");
-  
+    
   if(action->name == "")
     throw std::runtime_error("No Name defined for action");
   if(action->surfaces.size() == 0) {

Modified: trunk/windstille/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/windstille/src/sprite3d/sprite3d.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/sprite3d/sprite3d.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -246,7 +246,7 @@
     : DrawingRequest(pos, z_pos, modelview), sprite(sprite)
   {}
 
-  void draw(const Texture& tmp_texture)
+  void draw(const Texture& /*tmp_texture*/)
   {
     sprite->draw(pos, modelview);
   }

Modified: trunk/windstille/src/tile/tile_description.cpp
===================================================================
--- trunk/windstille/src/tile/tile_description.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/tile/tile_description.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -36,9 +36,7 @@
   props.get("colmap", colmap);
   props.get("width",  width);
   props.get("height", height);
-    
-  props.print_unused_warnings("tiles");
-
+  
   if(filename == "")
     throw std::runtime_error("Missing color-image");
 }

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -82,7 +82,6 @@
         // ignore
       }
     }
-  reader.print_unused_warnings("TileFactory");
 }
 
 TileFactory::~TileFactory()

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -93,10 +93,7 @@
         }
     }
 
-  props.print_unused_warnings("tilemap");
-
-
-  if(field.size() == 0)
+  if (field.size() == 0)
     throw std::runtime_error("No tiles defined in tilemap");  
 }
 

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/util/file_reader.cpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -160,10 +160,4 @@
     return std::vector<FileReader>();
 }
 
-void
-FileReader::print_unused_warnings(const std::string& title) const
-{
-  // unimplemented
-}
-
 /* EOF */

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/util/file_reader.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -75,8 +75,6 @@
   bool read(const char* name, std::vector<float>& v);
   bool read(const char* name, std::vector<std::string>& v);
 
-  void print_unused_warnings(const std::string& title) const;
-
 private:
   boost::shared_ptr<FileReaderImpl> impl;
 };

Modified: trunk/windstille/src/util/util.hpp
===================================================================
--- trunk/windstille/src/util/util.hpp	2009-03-15 00:44:09 UTC (rev 2675)
+++ trunk/windstille/src/util/util.hpp	2009-03-16 00:29:41 UTC (rev 2676)
@@ -54,6 +54,9 @@
         << gluErrorString(error);
     throw std::runtime_error(msg.str());
   }
+#else
+  // Stop compiler from issueing 'unused parameter'
+  do { (void)(message); } while (0);
 #endif
 }
 



From grumbel at mail.berlios.de  Mon Mar 16 02:17:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 02:17:31 +0100
Subject: [Windstille-commit] r2677 - trunk/windstille
Message-ID: <200903160117.n2G1HVP5008818@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 02:17:30 +0100 (Mon, 16 Mar 2009)
New Revision: 2677

Modified:
   trunk/windstille/TODO
Log:
Some new ToDo points

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-16 00:29:41 UTC (rev 2676)
+++ trunk/windstille/TODO	2009-03-16 01:17:30 UTC (rev 2677)
@@ -61,6 +61,13 @@
        }
     });
 
+  Also an ability to create unique events could be useful (not clear
+  for exactly what, so implementation can wait):
+
+    shared.event_id <- wait_for_unique_event()
+    ...
+    fire(shared.event_id);
+
 * think about if scripts spawned in a sector should be parented to the
   sectors init script or to the root_vm, the later one is currently
   the case, the first one however would make it easier to share
@@ -173,6 +180,9 @@
 Miscellaneous
 =============
 
+* why does src/navigation/node.hpp use SegmentPosition? Doesn't seem
+  right
+
 * using aspect-ration different to screen resolution, lots of things break
 
 * set dynamic maximum size for auto resizing Menus depending on
@@ -381,6 +391,13 @@
 * setting glLineWidth() leads to some interesting artefacts on the
   menus which might be a cool effect
 
+Editor
+======
+
+* make Windstille flexible enough so that it can work in non-SDL
+  settings, more exactly it should be embeddable into a GtkWidget (or
+  shall the editor be completly seperate?)
+
 Code Cleanup
 ============
 



From grumbel at mail.berlios.de  Mon Mar 16 03:10:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 03:10:31 +0100
Subject: [Windstille-commit] r2678 - trunk/windstille/src/display
Message-ID: <200903160210.n2G2AV0i014161@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 03:10:30 +0100 (Mon, 16 Mar 2009)
New Revision: 2678

Modified:
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
Log:
Seperated Display::get_width() into get_width() and get_window_width(), same with height

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-16 01:17:30 UTC (rev 2677)
+++ trunk/windstille/src/display/display.cpp	2009-03-16 02:10:30 UTC (rev 2678)
@@ -30,10 +30,11 @@
 #include "util/util.hpp"
 #include <assert.h>
 
-SDL_Surface* Display::window       = 0;
+Size              Display::aspect_size;
+SDL_Surface*      Display::window = 0;
 std::vector<Rect> Display::cliprects;
 std::vector<Framebuffer> framebuffers;
-
+
 void
 Display::draw_line(const Line& line, const Color& color)
 {
@@ -211,17 +212,29 @@
 }
 
 int
-Display::get_width()
+Display::get_window_width()
 {
   return window->w;
 }
 
 int
-Display::get_height()
+Display::get_window_height()
 {
   return window->h;
 }
 
+int
+Display::get_width()
+{
+  return Display::aspect_size.width;
+}
+
+int
+Display::get_height()
+{
+  return Display::aspect_size.height;
+}
+
 void
 Display::init()
 {
@@ -268,9 +281,11 @@
   //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
   
   // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
+  Display::aspect_size = Size(config.get_int("aspect-width"), 
+                              config.get_int("aspect-height"));
+
   glOrtho(0.0, 
-          config.get_int("aspect-width"), 
-          config.get_int("aspect-height"),
+          aspect_size.width, aspect_size.height,
           0.0, 1000.0, -1000.0);
   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
@@ -486,22 +501,22 @@
 void
 Display::save_screenshot(const std::string& filename)
 {
-  int len = get_width() * get_height() * 3;
+  int len = get_window_width() * get_window_height() * 3;
   GLbyte* pixels = new GLbyte[len];
-  glReadPixels(0, 0, get_width(), get_height(), GL_RGB, GL_UNSIGNED_BYTE, pixels);
+  glReadPixels(0, 0, get_window_width(), get_window_height(), GL_RGB, GL_UNSIGNED_BYTE, pixels);
 
   if (0)
     {
-      int pitch = get_width() * 3;
+      int pitch = get_window_width() * 3;
 
       // save to ppm
       std::ofstream out(filename.c_str());
       out << "P6\n"
           << "# Windstille Screenshot\n"
-          << get_width() << " " << get_height() << "\n"
+          << get_window_width() << " " << get_window_height() << "\n"
           << "255\n";
       
-      for(int y = get_height()-1; y >= 0; --y)
+      for(int y = get_window_height()-1; y >= 0; --y)
         out.write(reinterpret_cast<const char*>(pixels + y*pitch), pitch);
 
       out.close();
@@ -509,10 +524,10 @@
   else if (0) // BMP saving
     {
 #if SDL_BYTEORDER == SDL_BIG_ENDIAN
-      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels, get_width(), get_height(), 24, get_width()*3,
+      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels, get_window_width(), get_window_height(), 24, get_window_width()*3,
                                                       0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
 #else
-      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels, get_width(), get_height(), 24, get_width()*3,
+      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels, get_window_width(), get_window_height(), 24, get_window_width()*3,
                                                       0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
 #endif
 
@@ -530,7 +545,7 @@
         }
       else
         {
-          int pitch   = get_width() * 3;
+          int pitch   = get_window_width() * 3;
           png_structp png_ptr;
           png_infop   info_ptr;
 
@@ -540,7 +555,7 @@
           png_init_io(png_ptr, fp);
 
           png_set_IHDR(png_ptr, info_ptr, 
-                       get_width(), get_height(), 8 /* bitdepth */,
+                       get_window_width(), get_window_height(), 8 /* bitdepth */,
                        PNG_COLOR_TYPE_RGB,
                        PNG_INTERLACE_NONE, 
                        PNG_COMPRESSION_TYPE_BASE, 
@@ -549,9 +564,9 @@
           png_set_compression_level(png_ptr, 6);
           png_write_info(png_ptr, info_ptr);
 
-          png_uint_32 height = get_height();
+          png_uint_32 height = get_window_height();
 
-		  png_bytep* row_pointers = new png_bytep[height];
+          png_bytep* row_pointers = new png_bytep[height];
    
           // generate row pointers
           for (unsigned int k = 0; k < height; k++)
@@ -563,8 +578,8 @@
 
           fclose(fp);
 
-		  delete[] pixels;
-		  delete[] row_pointers;
+          delete[] pixels;
+          delete[] row_pointers;
         }
     }
 }

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-03-16 01:17:30 UTC (rev 2677)
+++ trunk/windstille/src/display/display.hpp	2009-03-16 02:10:30 UTC (rev 2678)
@@ -21,6 +21,7 @@
 
 #include <vector>
 #include <SDL.h>
+#include "math/size.hpp"
 #include "math/rect.hpp"
 #include "math/line.hpp"
 #include "color.hpp"
@@ -29,6 +30,7 @@
 class Display
 {
 private:
+  static Size aspect_size;
   static std::vector<Rect> cliprects;
   static SDL_Surface* window;
 
@@ -54,6 +56,9 @@
   static int  get_width();
   static int  get_height();
 
+  static int  get_window_width();
+  static int  get_window_height();
+
   static void set_fullscreen(bool fullscreen);
 
   static void push_cliprect(const Rect& rect);



From grumbel at mail.berlios.de  Mon Mar 16 21:01:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 21:01:38 +0100
Subject: [Windstille-commit] r2679 - trunk/windstille/src/scripting
Message-ID: <200903162001.n2GK1cQD009313@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 21:01:36 +0100 (Mon, 16 Mar 2009)
New Revision: 2679

Modified:
   trunk/windstille/src/scripting/interface.cpp
   trunk/windstille/src/scripting/interface.hpp
   trunk/windstille/src/scripting/util.cpp
   trunk/windstille/src/scripting/wrapper.cpp
   trunk/windstille/src/scripting/wrapper.interface.hpp
Log:
Added type checking to __custom scripts, rewrote parts of table_to_lisp()

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-16 02:10:30 UTC (rev 2678)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-16 20:01:36 UTC (rev 2679)
@@ -165,7 +165,7 @@
   return SpeechManager::current()->add(text, Vector2f(x, y), Color(r, g, b));
 }
 
-void wait_for_speech(HSQUIRRELVM vm, int i) __suspend
+void wait_for_speech(HSQUIRRELVM vm, int i)
 {
   ScriptManager::WakeupData data;
   data.type = ScriptManager::SPEECH_DONE;
@@ -266,18 +266,29 @@
     }
 }
 
-SQInteger display(HSQUIRRELVM v) __custom
+SQInteger display(HSQUIRRELVM v)
 {
   console << squirrel2string(v, -1);
+  sq_pop(v, 1);
   return 0;
 }
 
-SQInteger println(HSQUIRRELVM v) __custom
+SQInteger println(HSQUIRRELVM v)
 {
   console << squirrel2string(v, -1) << std::endl;
+  sq_pop(v, 1);
   return 0;
 }
 
+SQInteger print_stack(HSQUIRRELVM v) __custom("")
+{
+  SQInteger top = sq_gettop(v);
+  for(int i = 1; i <= top; ++i)
+    console << i << " " << squirrel2string(v, i) << std::endl;
+
+  return 0;
+}
+
 void set_debug(bool t)
 {
   debug = t;
@@ -350,18 +361,18 @@
   using namespace lisp;
   
   const char* objname;
-  sq_getstring(v, 2, &objname);
+  sq_getstring(v, -2, &objname);
 
   // FIXME: Do we memleak here?
   std::vector<lisp::Lisp*> entries;
   entries.push_back(new Lisp(Lisp::TYPE_SYMBOL, objname));
-  table_to_lisp(v, 3, entries);
+  table_to_lisp(v, -1, entries);
 
   try 
     {
       SExprFileReader reader(new Lisp(entries), true);
       Sector::current()->add_object(reader);
-    } 
+    }
   catch (std::exception& e) 
     {
       std::cerr << "Error parsing object in spawn_object: " << e.what()
@@ -376,7 +387,7 @@
   ScriptManager::current()->run_script_file(Sector::current()->get_directory() + filename);
 }
 
-SQInteger spawn_function(HSQUIRRELVM v) __custom
+SQInteger spawn_function(HSQUIRRELVM v)
 {
   boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script(v, false);
   thread->load(v, -1);
@@ -385,6 +396,25 @@
   return 0;
 }
 
+SQInteger lisp2string(HSQUIRRELVM v) 
+{
+  std::vector<lisp::Lisp*> entries;
+
+  entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, "TABLE"));
+  table_to_lisp(v, -1, entries);
+
+  for(std::vector<lisp::Lisp*>::iterator i = entries.begin(); i != entries.end(); ++i)
+    {
+      console << (i - entries.begin()) << ": ";
+      std::stringstream str;
+      (*i)->print(str);
+      console << str.str();
+      console << std::endl;
+    }
+   
+  return 0;
+}
+
 } // namespace Scripting
 
 /* EOF */

Modified: trunk/windstille/src/scripting/interface.hpp
===================================================================
--- trunk/windstille/src/scripting/interface.hpp	2009-03-16 02:10:30 UTC (rev 2678)
+++ trunk/windstille/src/scripting/interface.hpp	2009-03-16 20:01:36 UTC (rev 2679)
@@ -24,6 +24,29 @@
 #include <squirrel.h>
 #endif
 
+/*
+  List of sq_setparamscheck() types:
+
+  '|' can be used as 'or' to accept multiple type
+
+  'o' null
+  'i' integer
+  'f' float
+  'n' integer or float
+  's' string
+  't' table
+  'a' array
+  'u' userdata
+  'c' closure and nativeclosure
+  'g' generator
+  'p' userpointer
+  'v' thread
+  'x' instance(class instance)
+  'y' class
+  'b' bool
+  '.' any type
+*/
+
 namespace Scripting {
 
 void set_sector(const std::string& filename);
@@ -89,8 +112,9 @@
 //Waits the specified time in seconds.
 void wait(HSQUIRRELVM vm, float time) __suspend;
 
-SQInteger display(HSQUIRRELVM) __custom;
-SQInteger println(HSQUIRRELVM) __custom;
+SQInteger display(HSQUIRRELVM) __custom("t.");
+SQInteger println(HSQUIRRELVM) __custom("t.");
+SQInteger print_stack(HSQUIRRELVM) __custom("t");
 
 void set_console_font(const std::string& font, int size);
 void set_gamma(float g);
@@ -107,6 +131,8 @@
 int  render_mask_get();
 void render_mask_set(int mask);
 
+SQInteger lisp2string(HSQUIRRELVM v) __custom("tt|a");
+
 /**
  * Spawn object. Parameters:
  *    name:    string with name of object
@@ -114,10 +140,10 @@
  *
  * Example: spawn_object("scriptable-object", {name="blup", pos=[350,370], sprite="images/arrow.sprite"});
  */
-SQInteger spawn_object(HSQUIRRELVM v) __custom;
+SQInteger spawn_object(HSQUIRRELVM v) __custom("tst");
 
 void spawn_script(const std::string& filename);
-SQInteger spawn_function(HSQUIRRELVM v) __custom;
+SQInteger spawn_function(HSQUIRRELVM v) __custom("c");
 
 } // namespace Scripting
 

Modified: trunk/windstille/src/scripting/util.cpp
===================================================================
--- trunk/windstille/src/scripting/util.cpp	2009-03-16 02:10:30 UTC (rev 2678)
+++ trunk/windstille/src/scripting/util.cpp	2009-03-16 20:01:36 UTC (rev 2679)
@@ -33,85 +33,102 @@
 
 std::string sq_to_lisp_string(std::string sq_str)
 {
-  for (unsigned i = 0; i != sq_str.size(); ++i) {
-    if (sq_str[i] == '_')
-      sq_str[i] = '-';
-  }
+  for (unsigned i = 0; i != sq_str.size(); ++i)
+    {
+      if (sq_str[i] == '_')
+        sq_str[i] = '-';
+    }
   
   return sq_str;
 }
 
 void sq_to_lisp(HSQUIRRELVM v, std::vector<lisp::Lisp*>& entries)
 {
-  switch(sq_gettype(v, -1)) {
-    case OT_INTEGER: {
-      SQInteger val;
-      sq_getinteger(v, -1, &val);
-      entries.push_back(new lisp::Lisp(static_cast<int>(val)));
-      break;
+  switch(sq_gettype(v, -1))
+    {
+      case OT_INTEGER: {
+        SQInteger val;
+        sq_getinteger(v, -1, &val);
+        entries.push_back(new lisp::Lisp(static_cast<int>(val)));
+        break;
+      }
+      case OT_FLOAT: {
+        float val;
+        sq_getfloat(v, -1, &val);
+        entries.push_back(new lisp::Lisp(val));
+        break;
+      }
+      case OT_STRING: {
+        const char* str;
+        sq_getstring(v, -1, &str);      
+        entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_STRING, str));
+        break;
+      }                                                    
+      case OT_BOOL: {
+        SQBool boolean;
+        sq_getbool(v, -1, &boolean);
+        entries.push_back(new lisp::Lisp((bool) boolean));
+        break;
+      }
+      case OT_ARRAY:
+      case OT_TABLE: {
+        table_to_lisp(v, -1, entries);
+        break;
+      }
+      default:
+        std::cerr << "Unsupported value type in table\n";
+        break;
     }
-    case OT_FLOAT: {
-      float val;
-      sq_getfloat(v, -1, &val);
-      entries.push_back(new lisp::Lisp(val));
-      break;
-    }
-    case OT_STRING: {
-      const char* str;
-      sq_getstring(v, -1, &str);      
-      entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_STRING, str));
-      break;
-    }                                                    
-    case OT_BOOL: {
-      SQBool boolean;
-      sq_getbool(v, -1, &boolean);
-      entries.push_back(new lisp::Lisp((bool) boolean));
-      break;
-    }
-    case OT_ARRAY:
-    case OT_TABLE: {
-      table_to_lisp(v, -1, entries);
-      break;
-    }
-    default:
-      std::cerr << "Unsupported value type in table\n";
-      break;
-  }
 }
 
-void table_to_lisp(HSQUIRRELVM v, int table_idx, std::vector<lisp::Lisp*>& entries)
+void table_to_lisp(HSQUIRRELVM v, int idx, std::vector<lisp::Lisp*>& entries)
 {
-  // offset because of sq_pushnull
-  if(table_idx < 0)
-    table_idx--;
+  SQObjectType type = sq_gettype(v, idx);
 
-  // iterate table
-  sq_pushnull(v);
-  while(SQ_SUCCEEDED(sq_next(v, table_idx))) {
-    // key is -2, value -1 now
-    if(sq_gettype(v, table_idx) == OT_TABLE) {
-      if(sq_gettype(v, -2) != OT_STRING) {
-        std::cerr << "Table contains a non string key\n";
-        continue;
-      }
+  if (type != OT_TABLE && type != OT_ARRAY)
+    {
+      print_squirrel_stack(v, "table_to_lisp");
+      throw std::runtime_error("table_to_lisp: no table or array at the given index");
+    }
+  else
+    {
+      sq_push(v, idx);
 
-      const char* key;
-      sq_getstring(v, -2, &key);
-      std::string lisp_key = sq_to_lisp_string(key);
+      // iterate table
+      sq_pushnull(v);
+      while (SQ_SUCCEEDED(sq_next(v, -2)))
+        {
+          if (type == OT_ARRAY)
+            {
+              sq_to_lisp(v, entries);
+            }
+          else if (type == OT_TABLE)
+            {
+              // table/array is -3, key is -2, value -1 now
+              if (sq_gettype(v, -2) != OT_STRING)
+                {
+                  std::cerr << "Table contains a non string key\n";
+                }
+              else
+                {
+                  const char* key = 0;
+                  sq_getstring(v, -2, &key);
+                  std::string lisp_key = sq_to_lisp_string(key);
 
-      std::vector<lisp::Lisp*> childs;
-      childs.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, lisp_key));
-      sq_to_lisp(v, childs);
-      entries.push_back(new lisp::Lisp(childs));
-    } else {
-      sq_to_lisp(v, entries);
+                  std::vector<lisp::Lisp*> childs;
+                  childs.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, lisp_key));
+                  sq_to_lisp(v, childs);
+                  entries.push_back(new lisp::Lisp(childs));
+                }
+            }
+    
+          // pop key and value
+          sq_pop(v, 2);
+        }
+
+      // pop iterator and table
+      sq_pop(v, 2);
     }
-    
-    // pop table key and value
-    sq_pop(v, 2);
-  }
-  // pop iterator
-  sq_pop(v, 1);
 }
 
 std::string squirrel2string(HSQUIRRELVM v, int i)
@@ -155,9 +172,10 @@
         sq_pushnull(v);  //null iterator
         while(SQ_SUCCEEDED(sq_next(v,i-1)))
           {
-            if (!first) {
-              os << ", \n";
-            }
+            if (!first)
+              {
+                os << ", \n";
+              }
             first = false;
 
             //here -1 is the value and -2 is the key
@@ -176,9 +194,10 @@
         sq_pushnull(v);  //null iterator
         while(SQ_SUCCEEDED(sq_next(v,i-1)))
           {
-            if (!first) {
-              os << ", ";
-            }
+            if (!first)
+              {
+                os << ", ";
+              }
             first = false;
 
             //here -1 is the value and -2 is the key
@@ -301,39 +320,42 @@
   
   Properties props(lisp);
   PropertyIterator<const lisp::Lisp*> iter = props.get_iter();
-  while(iter.next()) {
-    sq_pushstring(v, iter.item().c_str(), iter.item().size());
-    switch((*iter)->get_type()) {
-      case lisp::Lisp::TYPE_LIST:
-        sq_newtable(v);
-        load_squirrel_table(v, sq_gettop(v), *iter);
-        break;
-      case lisp::Lisp::TYPE_INT:
-        sq_pushinteger(v, (*iter)->get_int());
-        break;
-      case lisp::Lisp::TYPE_FLOAT:
-        sq_pushfloat(v, (*iter)->get_float());
-        break;
-      case lisp::Lisp::TYPE_STRING:
-        sq_pushstring(v, (*iter)->get_string(), -1);
-        break;
-      case lisp::Lisp::TYPE_BOOL:
-        sq_pushbool(v, (*iter)->get_bool());
-        break;
-      case lisp::Lisp::TYPE_SYMBOL:
-        std::cerr << "Unexpected symbol in lisp file...";
-        sq_pushnull(v);
-        break;
-      default:
-        assert(false);
-        break;
+  while(iter.next())
+    {
+      sq_pushstring(v, iter.item().c_str(), iter.item().size());
+      switch((*iter)->get_type())
+        {
+          case lisp::Lisp::TYPE_LIST:
+            sq_newtable(v);
+            load_squirrel_table(v, sq_gettop(v), *iter);
+            break;
+          case lisp::Lisp::TYPE_INT:
+            sq_pushinteger(v, (*iter)->get_int());
+            break;
+          case lisp::Lisp::TYPE_FLOAT:
+            sq_pushfloat(v, (*iter)->get_float());
+            break;
+          case lisp::Lisp::TYPE_STRING:
+            sq_pushstring(v, (*iter)->get_string(), -1);
+            break;
+          case lisp::Lisp::TYPE_BOOL:
+            sq_pushbool(v, (*iter)->get_bool());
+            break;
+          case lisp::Lisp::TYPE_SYMBOL:
+            std::cerr << "Unexpected symbol in lisp file...";
+            sq_pushnull(v);
+            break;
+          default:
+            assert(false);
+            break;
+        }
+      if (table_idx < 0)
+        {
+          sq_createslot(v, table_idx - 2);
+        } else {
+        sq_createslot(v, table_idx);
+      }
     }
-    if(table_idx < 0) {
-      sq_createslot(v, table_idx - 2);
-    } else {
-      sq_createslot(v, table_idx);
-    }
-  }
 }
 
 void load_squirrel_table(HSQUIRRELVM v, int table_idx, const std::string& file)
@@ -343,7 +365,7 @@
 
   Properties rootp(root.get());
   const lisp::Lisp* table = 0;
-  if(rootp.get("squirrel-state", table) == false)
+  if (rootp.get("squirrel-state", table) == false)
     throw std::runtime_error("Not a squirrel-state file");
 
   load_squirrel_table(v, table_idx, table);
@@ -352,60 +374,63 @@
 void save_squirrel_table(HSQUIRRELVM v, int table_idx, lisp::Writer& writer)
 {
   // offset because of sq_pushnull
-  if(table_idx < 0)
+  if (table_idx < 0)
     table_idx--;
   
   //iterator table
   sq_pushnull(v);
-  while(SQ_SUCCEEDED(sq_next(v, table_idx))) {
-    if(sq_gettype(v, -2) != OT_STRING) {
-      std::cerr << "Table contains non-string key\n";
-      continue;
-    }
-    const char* key;
-    sq_getstring(v, -2, &key);
+  while(SQ_SUCCEEDED(sq_next(v, table_idx)))
+    {
+      if (sq_gettype(v, -2) != OT_STRING)
+        {
+          std::cerr << "Table contains non-string key\n";
+          continue;
+        }
+      const char* key;
+      sq_getstring(v, -2, &key);
 
-    switch(sq_gettype(v, -1)) {
-      case OT_INTEGER: {
-        SQInteger val;
-        sq_getinteger(v, -1, &val);
-        writer.write_int(key, val);
-        break;
-      }
-      case OT_FLOAT: {
-        float val;
-        sq_getfloat(v, -1, &val);
-        writer.write_float(key, val);
-        break;
-      }
-      case OT_BOOL: {
-        SQBool val;
-        sq_getbool(v, -1, &val);
-        writer.write_bool(key, val);
-        break;
-      }
-      case OT_STRING: {
-        const char* str;
-        sq_getstring(v, -1, &str);
-        writer.write_string(key, str);
-        break;
-      }
-      case OT_TABLE: {
-        writer.start_list(key);
-        save_squirrel_table(v, -1, writer);
-        writer.end_list(key);
-        break;
-      }
-      case OT_CLOSURE:
-        break; // ignore
-      case OT_NATIVECLOSURE:
-        break;
-      default:
-        std::cerr << "Can't serialize key '" << key << "' in table.\n";
-        break;
+      switch(sq_gettype(v, -1))
+        {
+          case OT_INTEGER: {
+            SQInteger val;
+            sq_getinteger(v, -1, &val);
+            writer.write_int(key, val);
+            break;
+          }
+          case OT_FLOAT: {
+            float val;
+            sq_getfloat(v, -1, &val);
+            writer.write_float(key, val);
+            break;
+          }
+          case OT_BOOL: {
+            SQBool val;
+            sq_getbool(v, -1, &val);
+            writer.write_bool(key, val);
+            break;
+          }
+          case OT_STRING: {
+            const char* str;
+            sq_getstring(v, -1, &str);
+            writer.write_string(key, str);
+            break;
+          }
+          case OT_TABLE: {
+            writer.start_list(key);
+            save_squirrel_table(v, -1, writer);
+            writer.end_list(key);
+            break;
+          }
+          case OT_CLOSURE:
+            break; // ignore
+          case OT_NATIVECLOSURE:
+            break;
+          default:
+            std::cerr << "Can't serialize key '" << key << "' in table.\n";
+            break;
+        }
+      sq_pop(v, 2);
     }
-    sq_pop(v, 2);
-  }
   sq_pop(v, 1);
 }
 

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-16 02:10:30 UTC (rev 2678)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-16 20:01:36 UTC (rev 2679)
@@ -1336,6 +1336,11 @@
   return Scripting::println(vm);
 }
 
+static SQInteger print_stack_wrapper(HSQUIRRELVM vm)
+{
+  return Scripting::print_stack(vm);
+}
+
 static SQInteger set_console_font_wrapper(HSQUIRRELVM vm)
 {
   const SQChar* arg0;
@@ -1580,6 +1585,11 @@
 
 }
 
+static SQInteger lisp2string_wrapper(HSQUIRRELVM vm)
+{
+  return Scripting::lisp2string(vm);
+}
+
 static SQInteger spawn_object_wrapper(HSQUIRRELVM vm)
 {
   return Scripting::spawn_object(vm);
@@ -1774,7 +1784,7 @@
 
   sq_pushstring(v, "stop_music", -1);
   sq_newclosure(v, &stop_music_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'stop_music'");
   }
@@ -1830,7 +1840,7 @@
 
   sq_pushstring(v, "camera_add_point", -1);
   sq_newclosure(v, &camera_add_point_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_add_point'");
   }
@@ -1844,21 +1854,21 @@
 
   sq_pushstring(v, "camera_set_pos", -1);
   sq_newclosure(v, &camera_set_pos_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_pos'");
   }
 
   sq_pushstring(v, "camera_set_zoom", -1);
   sq_newclosure(v, &camera_set_zoom_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_zoom'");
   }
 
   sq_pushstring(v, "speech_show", -1);
   sq_newclosure(v, &speech_show_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s f|i f|i f|i f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s n n n n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'speech_show'");
   }
@@ -2005,30 +2015,39 @@
 
   sq_pushstring(v, "set_game_speed", -1);
   sq_newclosure(v, &set_game_speed_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_game_speed'");
   }
 
   sq_pushstring(v, "wait", -1);
   sq_newclosure(v, &wait_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait'");
   }
 
   sq_pushstring(v, "display", -1);
   sq_newclosure(v, &display_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "t.");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'display'");
   }
 
   sq_pushstring(v, "println", -1);
   sq_newclosure(v, &println_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "t.");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'println'");
   }
 
+  sq_pushstring(v, "print_stack", -1);
+  sq_newclosure(v, &print_stack_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "t");
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'print_stack'");
+  }
+
   sq_pushstring(v, "set_console_font", -1);
   sq_newclosure(v, &set_console_font_wrapper, 0);
   sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s i ");
@@ -2038,14 +2057,14 @@
 
   sq_pushstring(v, "set_gamma", -1);
   sq_newclosure(v, &set_gamma_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_gamma'");
   }
 
   sq_pushstring(v, "set_gamma_rgb", -1);
   sq_newclosure(v, &set_gamma_rgb_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_gamma_rgb'");
   }
@@ -2073,14 +2092,14 @@
 
   sq_pushstring(v, "internal_fadeout_rgb", -1);
   sq_newclosure(v, &internal_fadeout_rgb_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'internal_fadeout_rgb'");
   }
 
   sq_pushstring(v, "internal_fadein", -1);
   sq_newclosure(v, &internal_fadein_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'internal_fadein'");
   }
@@ -2099,8 +2118,16 @@
     throw SquirrelError(v, "Couldn't register function 'render_mask_set'");
   }
 
+  sq_pushstring(v, "lisp2string", -1);
+  sq_newclosure(v, &lisp2string_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "tt|a");
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    throw SquirrelError(v, "Couldn't register function 'lisp2string'");
+  }
+
   sq_pushstring(v, "spawn_object", -1);
   sq_newclosure(v, &spawn_object_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "tst");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'spawn_object'");
   }
@@ -2114,6 +2141,7 @@
 
   sq_pushstring(v, "spawn_function", -1);
   sq_newclosure(v, &spawn_function_wrapper, 0);
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "c");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'spawn_function'");
   }
@@ -2189,7 +2217,7 @@
 
   sq_pushstring(v, "set_pos", -1);
   sq_newclosure(v, &TestObject_set_pos_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_pos'");
   }
@@ -2250,14 +2278,14 @@
   }
   sq_pushstring(v, "move_to", -1);
   sq_newclosure(v, &ScriptableObject_move_to_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i f|i f|i f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'move_to'");
   }
 
   sq_pushstring(v, "start_flash", -1);
   sq_newclosure(v, &ScriptableObject_start_flash_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t f|i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'start_flash'");
   }

Modified: trunk/windstille/src/scripting/wrapper.interface.hpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.interface.hpp	2009-03-16 02:10:30 UTC (rev 2678)
+++ trunk/windstille/src/scripting/wrapper.interface.hpp	2009-03-16 20:01:36 UTC (rev 2679)
@@ -17,7 +17,7 @@
 */
 
 #ifndef SCRIPTING_API
-#  define __custom
+#  define __custom(x)
 #  define __suspend
 #endif
 



From grumbel at mail.berlios.de  Mon Mar 16 21:20:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 21:20:04 +0100
Subject: [Windstille-commit] r2680 - trunk/windstille/src/scripting
Message-ID: <200903162020.n2GKK432010467@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 21:20:03 +0100 (Mon, 16 Mar 2009)
New Revision: 2680

Modified:
   trunk/windstille/src/scripting/wrapper.cpp
Log:
Updated wrapper code

Modified: trunk/windstille/src/scripting/wrapper.cpp
===================================================================
--- trunk/windstille/src/scripting/wrapper.cpp	2009-03-16 20:01:36 UTC (rev 2679)
+++ trunk/windstille/src/scripting/wrapper.cpp	2009-03-16 20:20:03 UTC (rev 2680)
@@ -1770,259 +1770,259 @@
 
   sq_pushstring(v, "set_sector", -1);
   sq_newclosure(v, &set_sector_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_sector'");
   }
 
   sq_pushstring(v, "play_music", -1);
   sq_newclosure(v, &play_music_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'play_music'");
   }
 
   sq_pushstring(v, "stop_music", -1);
   sq_newclosure(v, &stop_music_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'stop_music'");
   }
 
   sq_pushstring(v, "play_sound", -1);
   sq_newclosure(v, &play_sound_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'play_sound'");
   }
 
   sq_pushstring(v, "caption_add", -1);
   sq_newclosure(v, &caption_add_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tis");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'caption_add'");
   }
 
   sq_pushstring(v, "caption_clear", -1);
   sq_newclosure(v, &caption_clear_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'caption_clear'");
   }
 
   sq_pushstring(v, "caption_end", -1);
   sq_newclosure(v, &caption_end_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'caption_end'");
   }
 
   sq_pushstring(v, "camera_set_active", -1);
   sq_newclosure(v, &camera_set_active_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tb");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_active'");
   }
 
   sq_pushstring(v, "camera_continue_path", -1);
   sq_newclosure(v, &camera_continue_path_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_continue_path'");
   }
 
   sq_pushstring(v, "camera_begin_path", -1);
   sq_newclosure(v, &camera_begin_path_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_begin_path'");
   }
 
   sq_pushstring(v, "camera_add_point", -1);
   sq_newclosure(v, &camera_add_point_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tnnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_add_point'");
   }
 
   sq_pushstring(v, "camera_end_path", -1);
   sq_newclosure(v, &camera_end_path_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_end_path'");
   }
 
   sq_pushstring(v, "camera_set_pos", -1);
   sq_newclosure(v, &camera_set_pos_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_pos'");
   }
 
   sq_pushstring(v, "camera_set_zoom", -1);
   sq_newclosure(v, &camera_set_zoom_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'camera_set_zoom'");
   }
 
   sq_pushstring(v, "speech_show", -1);
   sq_newclosure(v, &speech_show_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s n n n n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tsnnnnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'speech_show'");
   }
 
   sq_pushstring(v, "wait_for_speech", -1);
   sq_newclosure(v, &wait_for_speech_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ti");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_speech'");
   }
 
   sq_pushstring(v, "dialog_show", -1);
   sq_newclosure(v, &dialog_show_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i s s s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tisss");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'dialog_show'");
   }
 
   sq_pushstring(v, "wait_for_dialog", -1);
   sq_newclosure(v, &wait_for_dialog_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_dialog'");
   }
 
   sq_pushstring(v, "wait_for_fade", -1);
   sq_newclosure(v, &wait_for_fade_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_fade'");
   }
 
   sq_pushstring(v, "wait_for_camera", -1);
   sq_newclosure(v, &wait_for_camera_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_camera'");
   }
 
   sq_pushstring(v, "conversation_add", -1);
   sq_newclosure(v, &conversation_add_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_add'");
   }
 
   sq_pushstring(v, "conversation_add2", -1);
   sq_newclosure(v, &conversation_add2_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tss");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_add2'");
   }
 
   sq_pushstring(v, "conversation_show", -1);
   sq_newclosure(v, &conversation_show_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_show'");
   }
 
   sq_pushstring(v, "conversation_get_selection", -1);
   sq_newclosure(v, &conversation_get_selection_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'conversation_get_selection'");
   }
 
   sq_pushstring(v, "wait_for_conversation", -1);
   sq_newclosure(v, &wait_for_conversation_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait_for_conversation'");
   }
 
   sq_pushstring(v, "add_objective", -1);
   sq_newclosure(v, &add_objective_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tss");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'add_objective'");
   }
 
   sq_pushstring(v, "objective_complete", -1);
   sq_newclosure(v, &objective_complete_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'objective_complete'");
   }
 
   sq_pushstring(v, "is_objective_given", -1);
   sq_newclosure(v, &is_objective_given_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'is_objective_given'");
   }
 
   sq_pushstring(v, "is_objective_complete", -1);
   sq_newclosure(v, &is_objective_complete_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'is_objective_complete'");
   }
 
   sq_pushstring(v, "save_state", -1);
   sq_newclosure(v, &save_state_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'save_state'");
   }
 
   sq_pushstring(v, "load_state", -1);
   sq_newclosure(v, &load_state_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t . s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'load_state'");
   }
 
   sq_pushstring(v, "list_objects", -1);
   sq_newclosure(v, &list_objects_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'list_objects'");
   }
 
   sq_pushstring(v, "set_debug", -1);
   sq_newclosure(v, &set_debug_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tb");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_debug'");
   }
 
   sq_pushstring(v, "get_debug", -1);
   sq_newclosure(v, &get_debug_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'get_debug'");
   }
 
   sq_pushstring(v, "get_game_speed", -1);
   sq_newclosure(v, &get_game_speed_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'get_game_speed'");
   }
 
   sq_pushstring(v, "set_game_speed", -1);
   sq_newclosure(v, &set_game_speed_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_game_speed'");
   }
 
   sq_pushstring(v, "wait", -1);
   sq_newclosure(v, &wait_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'wait'");
   }
@@ -2050,70 +2050,70 @@
 
   sq_pushstring(v, "set_console_font", -1);
   sq_newclosure(v, &set_console_font_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tsi");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_console_font'");
   }
 
   sq_pushstring(v, "set_gamma", -1);
   sq_newclosure(v, &set_gamma_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_gamma'");
   }
 
   sq_pushstring(v, "set_gamma_rgb", -1);
   sq_newclosure(v, &set_gamma_rgb_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tnnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_gamma_rgb'");
   }
 
   sq_pushstring(v, "show_config", -1);
   sq_newclosure(v, &show_config_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'show_config'");
   }
 
   sq_pushstring(v, "cutscene_begin", -1);
   sq_newclosure(v, &cutscene_begin_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'cutscene_begin'");
   }
 
   sq_pushstring(v, "cutscene_end", -1);
   sq_newclosure(v, &cutscene_end_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'cutscene_end'");
   }
 
   sq_pushstring(v, "internal_fadeout_rgb", -1);
   sq_newclosure(v, &internal_fadeout_rgb_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tnnnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'internal_fadeout_rgb'");
   }
 
   sq_pushstring(v, "internal_fadein", -1);
   sq_newclosure(v, &internal_fadein_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'internal_fadein'");
   }
 
   sq_pushstring(v, "render_mask_get", -1);
   sq_newclosure(v, &render_mask_get_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'render_mask_get'");
   }
 
   sq_pushstring(v, "render_mask_set", -1);
   sq_newclosure(v, &render_mask_set_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t i ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ti");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'render_mask_set'");
   }
@@ -2134,7 +2134,7 @@
 
   sq_pushstring(v, "spawn_script", -1);
   sq_newclosure(v, &spawn_script_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'spawn_script'");
   }
@@ -2155,35 +2155,35 @@
   }
   sq_pushstring(v, "get_name", -1);
   sq_newclosure(v, &GameObject_get_name_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'get_name'");
   }
 
   sq_pushstring(v, "remove", -1);
   sq_newclosure(v, &GameObject_remove_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'remove'");
   }
 
   sq_pushstring(v, "set_active", -1);
   sq_newclosure(v, &GameObject_set_active_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tb");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_active'");
   }
 
   sq_pushstring(v, "is_active", -1);
   sq_newclosure(v, &GameObject_is_active_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'is_active'");
   }
 
   sq_pushstring(v, "set_parent", -1);
   sq_newclosure(v, &GameObject_set_parent_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_parent'");
   }
@@ -2203,35 +2203,35 @@
   }
   sq_pushstring(v, "set_sprite", -1);
   sq_newclosure(v, &TestObject_set_sprite_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_sprite'");
   }
 
   sq_pushstring(v, "set_action", -1);
   sq_newclosure(v, &TestObject_set_action_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|ts");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_action'");
   }
 
   sq_pushstring(v, "set_pos", -1);
   sq_newclosure(v, &TestObject_set_pos_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_pos'");
   }
 
   sq_pushstring(v, "set_vflip", -1);
   sq_newclosure(v, &TestObject_set_vflip_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t b ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tb");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'set_vflip'");
   }
 
   sq_pushstring(v, "attach", -1);
   sq_newclosure(v, &TestObject_attach_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t s s ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tss");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'attach'");
   }
@@ -2251,14 +2251,14 @@
   }
   sq_pushstring(v, "start_listening", -1);
   sq_newclosure(v, &Player_start_listening_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'start_listening'");
   }
 
   sq_pushstring(v, "stop_listening", -1);
   sq_newclosure(v, &Player_stop_listening_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'stop_listening'");
   }
@@ -2278,14 +2278,14 @@
   }
   sq_pushstring(v, "move_to", -1);
   sq_newclosure(v, &ScriptableObject_move_to_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n n n n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tnnnn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'move_to'");
   }
 
   sq_pushstring(v, "start_flash", -1);
   sq_newclosure(v, &ScriptableObject_start_flash_wrapper, 0);
-  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|t n ");
+  sq_setparamscheck(v, SQ_MATCHTYPEMASKSTRING, "x|tn");
   if(SQ_FAILED(sq_createslot(v, -3))) {
     throw SquirrelError(v, "Couldn't register function 'start_flash'");
   }



From grumbel at mail.berlios.de  Mon Mar 16 21:20:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 21:20:43 +0100
Subject: [Windstille-commit] r2681 - in trunk/windstille/src: lisp scripting
Message-ID: <200903162020.n2GKKhca010538@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 21:20:43 +0100 (Mon, 16 Mar 2009)
New Revision: 2681

Modified:
   trunk/windstille/src/lisp/lisp.cpp
   trunk/windstille/src/scripting/interface.cpp
Log:
improved Lisp::print() a bit, far from perfect, but much more readable for small expressions

Modified: trunk/windstille/src/lisp/lisp.cpp
===================================================================
--- trunk/windstille/src/lisp/lisp.cpp	2009-03-16 20:20:03 UTC (rev 2680)
+++ trunk/windstille/src/lisp/lisp.cpp	2009-03-16 20:20:43 UTC (rev 2681)
@@ -79,15 +79,19 @@
  
   switch(type) {
     case TYPE_LIST:
-      out << "(\n";
+      out << "(";
+
       for(size_t i = 0; i < v.list.size; ++i)
-        v.list.entries[i]->print(out, indent+2);
-      for(int i = 0; i < indent; ++i)
-        out << ' ';                      
+        {
+          v.list.entries[i]->print(out, indent);
+          if (i != v.list.size-1)
+            out << ' ';
+        }
+
       out << ")";
       break;
     case TYPE_STRING:
-      out << '\'' << v.string << '\'';
+      out << '\"' << v.string << '\"';
       break;
     case TYPE_INT:
       out << v.int_;
@@ -102,10 +106,10 @@
       out << (v.bool_ ? "true" : "false");
       break;
     default:
-      out << "UNKNOWN?!?";
+      out << "#<unknown>";
       break;
   }
-  out << '\n';
+  //out << '\n';
 }
 
 } // end of namespace lisp

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-16 20:20:03 UTC (rev 2680)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-16 20:20:43 UTC (rev 2681)
@@ -400,7 +400,6 @@
 {
   std::vector<lisp::Lisp*> entries;
 
-  entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, "TABLE"));
   table_to_lisp(v, -1, entries);
 
   for(std::vector<lisp::Lisp*>::iterator i = entries.begin(); i != entries.end(); ++i)



From grumbel at mail.berlios.de  Mon Mar 16 22:47:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 22:47:02 +0100
Subject: [Windstille-commit] r2682 - trunk/windstille/src/scripting
Message-ID: <200903162147.n2GLl2g7015576@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 22:47:02 +0100 (Mon, 16 Mar 2009)
New Revision: 2682

Modified:
   trunk/windstille/src/scripting/interface.cpp
Log:
Check if current() objects are presented before accessing them

Modified: trunk/windstille/src/scripting/interface.cpp
===================================================================
--- trunk/windstille/src/scripting/interface.cpp	2009-03-16 20:20:43 UTC (rev 2681)
+++ trunk/windstille/src/scripting/interface.cpp	2009-03-16 21:47:02 UTC (rev 2682)
@@ -358,41 +358,44 @@
 
 SQInteger spawn_object(HSQUIRRELVM v)
 {
-  using namespace lisp;
-  
-  const char* objname;
-  sq_getstring(v, -2, &objname);
+  if (Sector::current())
+    {
+      const char* objname = 0;
+      sq_getstring(v, -2, &objname);
 
-  // FIXME: Do we memleak here?
-  std::vector<lisp::Lisp*> entries;
-  entries.push_back(new Lisp(Lisp::TYPE_SYMBOL, objname));
-  table_to_lisp(v, -1, entries);
+      // Newly created objects are deleted in ~SExprFileReader() and ~Lisp()
+      std::vector<lisp::Lisp*> entries;
+      entries.push_back(new lisp::Lisp(lisp::Lisp::TYPE_SYMBOL, objname));
+      table_to_lisp(v, -1, entries);
 
-  try 
-    {
-      SExprFileReader reader(new Lisp(entries), true);
-      Sector::current()->add_object(reader);
+      try 
+        {
+          SExprFileReader reader(new lisp::Lisp(entries), true);
+          Sector::current()->add_object(reader);
+        }
+      catch (std::exception& e) 
+        {
+          std::cerr << "Error parsing object in spawn_object: " << e.what()
+                    << "\n";
+        }
     }
-  catch (std::exception& e) 
-    {
-      std::cerr << "Error parsing object in spawn_object: " << e.what()
-                << "\n";
-    }
-
   return 0;
 }
 
 void spawn_script(const std::string& filename)
 {
-  ScriptManager::current()->run_script_file(Sector::current()->get_directory() + filename);
+  if (ScriptManager::current())
+    ScriptManager::current()->run_script_file(Sector::current()->get_directory() + filename);
 }
 
 SQInteger spawn_function(HSQUIRRELVM v)
 {
-  boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script(v, false);
-  thread->load(v, -1);
-  sq_pop(v, 1);
-
+  if (ScriptManager::current())
+    {
+      boost::shared_ptr<SquirrelThread> thread = ScriptManager::current()->create_script(v, false);
+      thread->load(v, -1);
+      sq_pop(v, 1);
+    }
   return 0;
 }
 



From grumbel at mail.berlios.de  Mon Mar 16 22:47:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 22:47:22 +0100
Subject: [Windstille-commit] r2683 - trunk/windstille/src/screen
Message-ID: <200903162147.n2GLlMHt015609@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 22:47:22 +0100 (Mon, 16 Mar 2009)
New Revision: 2683

Modified:
   trunk/windstille/src/screen/sprite3dview.cpp
Log:
Fixed button mapping a bit

Modified: trunk/windstille/src/screen/sprite3dview.cpp
===================================================================
--- trunk/windstille/src/screen/sprite3dview.cpp	2009-03-16 21:47:02 UTC (rev 2682)
+++ trunk/windstille/src/screen/sprite3dview.cpp	2009-03-16 21:47:22 UTC (rev 2683)
@@ -123,13 +123,13 @@
         current_action -= 1;
     }
 
-  if (controller.get_button_state(PRIMARY_BUTTON))
+  if (controller.get_button_state(RIGHT_SHOULDER_BUTTON))
     {
-      scale *= 1.0f + 0.3f * delta;
+      scale *= 1.0f + 0.6f * delta;
     }
-  else if (controller.get_button_state(PDA_BUTTON))
+  else if (controller.get_button_state(LEFT_SHOULDER_BUTTON))
     {
-      scale /= 1.0f + 0.3f * delta;
+      scale /= 1.0f + 0.6f * delta;
     }
   
   if (last_action != current_action && !actions.empty())
@@ -138,11 +138,11 @@
     }
 
   rotation = Quaternion(Vector3(0.0f, 1.0f, 0.0f),
-                        -controller.get_axis_state(X_AXIS) * delta * 4.0f) * rotation;
+                        -controller.get_axis_state(X2_AXIS) * delta * 4.0f) * rotation;
   rotation = Quaternion(Vector3(1.0f, 0.0f, 0.0f),
-                        controller.get_axis_state(X2_AXIS) * delta * 4.0f) * rotation;
+                        controller.get_axis_state(Y2_AXIS) * delta * 4.0f) * rotation;
   rotation = Quaternion(Vector3(0.0f, 0.0f, 1.0f),
-                        controller.get_axis_state(Y2_AXIS) * delta * 4.0f) * rotation;
+                        controller.get_axis_state(X_AXIS) * delta * 4.0f) * rotation;
 
   if (controller.get_button_state(VIEW_CENTER_BUTTON))
     {



From grumbel at mail.berlios.de  Mon Mar 16 23:25:07 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 23:25:07 +0100
Subject: [Windstille-commit] r2684 - in trunk/windstille: data src
	src/display src/navigation src/screen
Message-ID: <200903162225.n2GMP7WJ019013@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 23:25:06 +0100 (Mon, 16 Mar 2009)
New Revision: 2684

Added:
   trunk/windstille/src/navigation/edge.cpp
   trunk/windstille/src/navigation/edge.hpp
   trunk/windstille/src/navigation/edge_position.cpp
   trunk/windstille/src/navigation/edge_position.hpp
Removed:
   trunk/windstille/src/navigation/segment.cpp
   trunk/windstille/src/navigation/segment.hpp
   trunk/windstille/src/navigation/segment_position.cpp
   trunk/windstille/src/navigation/segment_position.hpp
Modified:
   trunk/windstille/data/navigation.nav
   trunk/windstille/src/SConscript
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/navigation/navigation_graph.cpp
   trunk/windstille/src/navigation/navigation_graph.hpp
   trunk/windstille/src/navigation/node.cpp
   trunk/windstille/src/navigation/node.hpp
   trunk/windstille/src/screen/navigation_test.cpp
   trunk/windstille/src/screen/navigation_test.hpp
Log:
Renamed Segment to Edge

Modified: trunk/windstille/data/navigation.nav
===================================================================
--- trunk/windstille/data/navigation.nav	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/data/navigation.nav	2009-03-16 22:25:06 UTC (rev 2684)
@@ -20,20 +20,20 @@
     (node (id  18) (pos 283.341 177.94))
  )
 
-  (segments
-    (segment (node1   1) (node2   2) (properties 0))
-    (segment (node1   2) (node2   3) (properties 0))
-    (segment (node1   3) (node2   4) (properties 0))
-    (segment (node1   4) (node2   5) (properties 0))
-    (segment (node1   5) (node2   6) (properties 0))
-    (segment (node1  10) (node2   9) (properties 0))
-    (segment (node1   9) (node2   8) (properties 0))
-    (segment (node1   8) (node2   7) (properties 0))
-    (segment (node1  11) (node2  12) (properties 0))
-    (segment (node1  12) (node2  13) (properties 0))
-    (segment (node1  13) (node2  14) (properties 0))
-    (segment (node1  15) (node2  16) (properties 0))
-    (segment (node1  17) (node2  18) (properties 0))
+  (edges
+    (edge (node1   1) (node2   2) (properties 0))
+    (edge (node1   2) (node2   3) (properties 0))
+    (edge (node1   3) (node2   4) (properties 0))
+    (edge (node1   4) (node2   5) (properties 0))
+    (edge (node1   5) (node2   6) (properties 0))
+    (edge (node1  10) (node2   9) (properties 0))
+    (edge (node1   9) (node2   8) (properties 0))
+    (edge (node1   8) (node2   7) (properties 0))
+    (edge (node1  11) (node2  12) (properties 0))
+    (edge (node1  12) (node2  13) (properties 0))
+    (edge (node1  13) (node2  14) (properties 0))
+    (edge (node1  15) (node2  16) (properties 0))
+    (edge (node1  17) (node2  18) (properties 0))
  )
 )
 

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/SConscript	2009-03-16 22:25:06 UTC (rev 2684)
@@ -122,8 +122,8 @@
 'navigation/navigation_graph.cpp',
 'navigation/node.cpp',
 'navigation/properties.cpp',
-'navigation/segment.cpp',
-'navigation/segment_position.cpp',
+'navigation/edge.cpp',
+'navigation/edge_position.cpp',
 'objects/background_gradient.cpp',
 'objects/bomb.cpp',
 'objects/box.cpp',

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/display/display.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -42,7 +42,7 @@
 }
 
 void
-Display::draw_segment(const Line& line, const Color& color)
+Display::draw_line_with_normal(const Line& line, const Color& color)
 {
   Vector2f normal = (line.p2 - line.p1);
 

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/display/display.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -42,7 +42,7 @@
   static void draw_rounded_rect(const Rectf& rect, float radius, const Color& color);
 
   /** Same as draw_line, but in addition draw a normal on top of the line */
-  static void draw_segment(const Line& line, const Color& color);
+  static void draw_line_with_normal(const Line& line, const Color& color);
 
   static void draw_line(const Line& line, const Color& color);
   static void draw_line(const Vector2f& pos1, const Vector2f& pos2, const Color& color);

Copied: trunk/windstille/src/navigation/edge.cpp (from rev 2683, trunk/windstille/src/navigation/segment.cpp)
===================================================================
--- trunk/windstille/src/navigation/segment.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/edge.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -0,0 +1,58 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <assert.h>
+#include "node.hpp"
+#include "edge.hpp"
+
+Edge::Edge(Node* node1_, Node* node2_, Properties props_)
+  : node1(node1_), 
+    node2(node2_),
+    properties(props_)
+{
+  node1->add_edge(EdgePosition(this, 0.0f));
+  node2->add_edge(EdgePosition(this, 1.0f));
+}
+
+Edge::~Edge()
+{
+  node1->remove_edge(this);
+  node2->remove_edge(this);
+}
+
+float
+Edge::angle(Edge* /*seg*/)
+{
+  assert(!"Implement me");
+  return 0.0f;
+}
+
+Line
+Edge::get_line() const
+{
+  return Line(node1->get_pos(),
+              node2->get_pos());
+}
+
+Vector2f
+Edge::get_vector() const
+{
+  return node2->get_pos() - node1->get_pos();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/navigation/edge.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/navigation/edge.hpp (from rev 2683, trunk/windstille/src/navigation/segment.hpp)
===================================================================
--- trunk/windstille/src/navigation/segment.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/edge.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -0,0 +1,59 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_NAVIGATION_SEGMENT_HPP
+#define HEADER_WINDSTILLE_NAVIGATION_SEGMENT_HPP
+
+#include "math/line.hpp"
+#include "math/vector2f.hpp"
+#include "properties.hpp"
+
+class Node;
+
+/** */
+class Edge
+{
+private:
+  Node* node1;
+  Node* node2;
+  
+  Properties properties;
+
+public:
+  Edge(Node* node1_, Node* node2_, Properties props_ = 0);
+  ~Edge();
+
+  /** Calculate the angle between two segments */
+  float angle(Edge* seg);
+  
+  Node* get_node1() const { return node1; } 
+  Node* get_node2() const { return node2; } 
+
+  Properties get_properties()  const { return properties; }
+
+  Line   get_line() const;
+  Vector2f get_vector() const;
+  
+private:
+  Edge (const Edge&);
+  Edge& operator= (const Edge&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/navigation/edge.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/navigation/edge_position.cpp (from rev 2683, trunk/windstille/src/navigation/segment_position.cpp)
===================================================================
--- trunk/windstille/src/navigation/segment_position.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/edge_position.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -0,0 +1,118 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "edge.hpp"
+#include "node.hpp"
+#include "display/display.hpp"
+#include "edge_position.hpp"
+
+EdgePosition::EdgePosition()
+  : edge(0),
+    pos(0.0f)
+{
+}
+
+EdgePosition::EdgePosition(Edge* edge_, float pos_)
+  : edge(edge_),
+    pos(pos_)
+{  
+}
+
+void
+EdgePosition::set_pos(Edge* edge_, float pos_)
+{
+  edge = edge_;
+  pos     = pos_;
+}
+
+void
+EdgePosition::advance(float& adv, Node*& next_node)
+{
+  Vector2f p1 = edge->get_node1()->get_pos();
+  Vector2f p2 = edge->get_node2()->get_pos();
+  
+  float length = (p2 - p1).length();
+  
+  // convert from world co to [0,1] range
+  float adv_01 = adv / length;
+
+  if (adv_01 > 0)
+    {
+      pos += adv_01;
+      if (pos > 1.0f) {
+        adv = (pos - 1.0f) * length;
+        pos = 1.0f;
+        next_node = edge->get_node2();
+      } else {
+        adv = 0;
+      }
+    }
+  else
+    {
+      pos += adv_01;
+      if (pos < 0.0f) {
+        adv = pos * length;
+        pos = 0;
+        next_node = edge->get_node1();
+      } else {
+        adv = 0;
+      }
+    }
+}
+
+void
+EdgePosition::advance(Vector2f& adv, Node*& next_node)
+{
+  // FIXME: This might be optimizable
+  Vector2f p1 = edge->get_node1()->get_pos();
+  Vector2f p2 = edge->get_node2()->get_pos();
+  
+  Vector2f edge_v = p2 - p1;
+
+  Vector2f proj = adv.project(edge_v);
+
+  float angle = atan2(edge_v.y, edge_v.x) - atan2(proj.y, proj.x);
+
+  // Check if we are going forward or backward
+  float advf;
+  if (angle > M_PI/2 || angle < -M_PI/2)
+    advf = -proj.length();
+  else
+    advf = proj.length();
+
+  // Move forward
+  advance(advf, next_node);
+  
+  // Calculate the rest Vector2f
+  // Calculate the rest Vector2f
+  if (advf == 0.0f)
+    adv = Vector2f(0,0);
+  else
+    adv -= (proj * ((proj.length() - advf)/proj.length()));
+}
+
+Vector2f
+EdgePosition::get_pos() const
+{
+  Vector2f p1 = edge->get_node1()->get_pos();
+  Vector2f p2 = edge->get_node2()->get_pos();
+
+  return p1 + pos*(p2 - p1);
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/navigation/edge_position.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/navigation/edge_position.hpp (from rev 2683, trunk/windstille/src/navigation/segment_position.hpp)
===================================================================
--- trunk/windstille/src/navigation/segment_position.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/edge_position.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -0,0 +1,78 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_NAVIGATION_EDGE_POSITION_HPP
+#define HEADER_WINDSTILLE_NAVIGATION_EDGE_POSITION_HPP
+
+#include "math/vector2f.hpp"
+
+class Edge;
+class Node;
+
+/** 
+ */
+class EdgePosition
+{
+public:
+  Edge* edge;
+
+  /** Position on the edge, stored with range [0,1], not
+      world-co */
+  float pos;
+
+public:
+  EdgePosition();
+  EdgePosition(Edge* edge_, float pos_);
+
+  void set_pos(Edge* edge_, float pos_);
+
+  /** Move forward \a adv of units in world-co, when a node is hit,
+   *  the function returns and let the user decide how to continue
+   *
+   *  @param[in,out] adv the amount of advancment to be done, the
+   *                     amount of units that wheren't use on the
+   *                     given edge
+   *
+   *  @param[out] next_node if the advance ends at a node, it gets
+   *                        returned in next_node
+   */
+  void advance(float& adv, Node*& next_node);
+  
+  /** Move forward \a adv of units in world-co, when a node is hit,
+   *  the function returns and let the user decide how to
+   *  continue. \a adv is projected onto the current edge to figure
+   *  out how far we should go
+   *
+   * @param[in,out] adv the amount of advancment to be done, the
+   *                    amount of units that wheren't use on the given
+   *                    edge
+   *
+   * @param[out] next_node if the advance ends at a node, it gets
+   *                       returned in next_node
+   */  
+  void advance(Vector2f& adv, Node*& next_node);
+
+  Edge* get_edge() const { return edge; }
+  float    get_float_pos() const { return pos; }
+
+  Vector2f get_pos() const;
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/navigation/edge_position.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/navigation/navigation_graph.cpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/navigation_graph.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -22,9 +22,9 @@
 #include <algorithm>
 #include "display/display.hpp"
 #include "node.hpp"
-#include "segment.hpp"
+#include "edge.hpp"
 #include "util/file_reader.hpp"
-#include "segment_position.hpp"
+#include "edge_position.hpp"
 #include "navigation_graph.hpp"
 
 NavigationGraph::NavigationGraph()
@@ -34,9 +34,9 @@
 
 NavigationGraph::~NavigationGraph()
 {
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     delete *i;
-  segments.clear();
+  edges.clear();
 
   for (Nodes::iterator i = nodes.begin(); i != nodes.end(); ++i)
     delete *i;
@@ -52,14 +52,14 @@
 }
 
 void
-NavigationGraph::remove_segment(SegmentHandle segment)
+NavigationGraph::remove_edge(EdgeHandle edge)
 {
   // FIXME: Slow
-  Segments::iterator i = std::find(segments.begin(), segments.end(), segment.get());
-  if (i != segments.end())
+  Edges::iterator i = std::find(edges.begin(), edges.end(), edge.get());
+  if (i != edges.end())
     {
-      segments.erase(i);
-      delete segment.get();
+      edges.erase(i);
+      delete edge.get();
     }
 
   // FIXME: Throw exception here
@@ -70,8 +70,8 @@
 {
   // FIXME: Slow
 
-  // Remove all segments that would get invalid by removing the node
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  // Remove all edges that would get invalid by removing the node
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     {
       if ((*i)->get_node1() == node.get() ||
           (*i)->get_node2() == node.get())
@@ -81,10 +81,10 @@
         }
     }
 
-  Segments::iterator new_end = std::remove(segments.begin(), segments.end(), (Segment*)0);
-  if (new_end != segments.end())
+  Edges::iterator new_end = std::remove(edges.begin(), edges.end(), (Edge*)0);
+  if (new_end != edges.end())
     { 
-      segments.erase(new_end, segments.end());
+      edges.erase(new_end, edges.end());
     }
   
   // Remove the node itself 
@@ -96,41 +96,41 @@
     }  
 }
 
-SegmentHandle
-NavigationGraph::add_segment(NodeHandle node1, NodeHandle node2)
+EdgeHandle
+NavigationGraph::add_edge(NodeHandle node1, NodeHandle node2)
 {
   if (node1.get() != node2.get()) // node links to themself are forbidden
-    { // FIXME: Find a way to figure out if the given segment already exists
-      Segment* segment = new Segment(node1.get(), node2.get());
-      segments.push_back(segment);
-      return SegmentHandle(segment);
+    { // FIXME: Find a way to figure out if the given edge already exists
+      Edge* edge = new Edge(node1.get(), node2.get());
+      edges.push_back(edge);
+      return EdgeHandle(edge);
     }
   else
     {
-      return SegmentHandle();
+      return EdgeHandle();
     }
 }
 
 void
-NavigationGraph::split_segment(SegmentHandle segment)
+NavigationGraph::split_edge(EdgeHandle edge)
 {
-  NodeHandle node1 = NodeHandle(segment->get_node1());
-  NodeHandle node3 = NodeHandle(segment->get_node2());
+  NodeHandle node1 = NodeHandle(edge->get_node1());
+  NodeHandle node3 = NodeHandle(edge->get_node2());
   NodeHandle node2 = add_node(0.5f * (node1->get_pos() + node3->get_pos()));
 
-  remove_segment(segment);
-  add_segment(node1, node2);  
-  add_segment(node2, node3);  
+  remove_edge(edge);
+  add_edge(node1, node2);  
+  add_edge(node2, node3);  
 }
 
-std::vector<SegmentPosition>
+std::vector<EdgePosition>
 NavigationGraph::find_intersections(const Line& line)
 {
   // FIXME: we might want to only return the first intersection, not
   // all of them or alternativly return ua
-  std::vector<SegmentPosition> ret;
+  std::vector<EdgePosition> ret;
  
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     {
       Line seg_line((*i)->get_node1()->get_pos(),
                     (*i)->get_node2()->get_pos());
@@ -138,7 +138,7 @@
       float ua, ub;
       if (line.intersect(seg_line, ua, ub))
         {
-          ret.push_back(SegmentPosition(*i, ub));
+          ret.push_back(EdgePosition(*i, ub));
         }
     }
 
@@ -163,18 +163,18 @@
   return ret;
 }
 
-std::vector<SegmentHandle>
-NavigationGraph::find_segments(const Vector2f& pos, float radius)
+std::vector<EdgeHandle>
+NavigationGraph::find_edges(const Vector2f& pos, float radius)
 {
-  std::vector<SegmentHandle> ret;
+  std::vector<EdgeHandle> ret;
  
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     {
       float distance = Line((*i)->get_node1()->get_pos(),
                             (*i)->get_node2()->get_pos()).distance(pos);
       if (distance < radius)
         {
-          ret.push_back(SegmentHandle(*i));
+          ret.push_back(EdgeHandle(*i));
         }
     }
 
@@ -201,34 +201,34 @@
   return NodeHandle(node);
 }
 
-SegmentHandle
-NavigationGraph::find_closest_segment(const Vector2f& pos, float radius)
+EdgeHandle
+NavigationGraph::find_closest_edge(const Vector2f& pos, float radius)
 {
-  Segment* segment   = 0;
+  Edge* edge   = 0;
   float min_distance = radius;
 
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     {
       float current_distance = Line((*i)->get_node1()->get_pos(),
                                     (*i)->get_node2()->get_pos()).distance(pos);
       if (current_distance < min_distance)
         {
           min_distance = current_distance;
-          segment = *i;
+          edge = *i;
         }
     }
 
-  return SegmentHandle(segment);
+  return EdgeHandle(edge);
 }
 
 void
 NavigationGraph::draw()
 {
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     {
-      Display::draw_segment(Line((*i)->get_node1()->get_pos(),
-                                 (*i)->get_node2()->get_pos()),
-                            Color(1.0f, 0.0f, 0.0f));
+      Display::draw_line_with_normal(Line((*i)->get_node1()->get_pos(),
+                                          (*i)->get_node2()->get_pos()),
+                                     Color(1.0f, 0.0f, 0.0f));
     }
 
   for(Nodes::iterator i = nodes.begin(); i != nodes.end(); ++i)
@@ -271,13 +271,13 @@
         }
     }
   
-  FileReader segments_group_reader;
-  if (reader.get("segments", segments_group_reader))
+  FileReader edges_group_reader;
+  if (reader.get("edges", edges_group_reader))
     {
-      std::vector<FileReader> segments_reader = segments_group_reader.get_sections();
-      for(std::vector<FileReader>::iterator i = segments_reader.begin(); i != segments_reader.end(); ++i)
+      std::vector<FileReader> edges_reader = edges_group_reader.get_sections();
+      for(std::vector<FileReader>::iterator i = edges_reader.begin(); i != edges_reader.end(); ++i)
         {
-          if (i->get_name() == "segment")
+          if (i->get_name() == "edge")
             {
               int node_left;
               int node_right;
@@ -292,23 +292,23 @@
 
                   if (node_left_ptr != id2ptr.end() && node_right_ptr != id2ptr.end())
                     {
-                      Segment* segment = new Segment(node_left_ptr->second, node_right_ptr->second, properties);
-                      segments.push_back(segment);
+                      Edge* edge = new Edge(node_left_ptr->second, node_right_ptr->second, properties);
+                      edges.push_back(edge);
                     }
                   else
                     {
-                      std::cout << "NavigationGraph: segment: Couldn't lookup ids: "
+                      std::cout << "NavigationGraph: edge: Couldn't lookup ids: "
                                 << node_left << " " << node_right << std::endl;
                     }
                 }
               else
                 {
-                  std::cout << "NavigationGraph:load: segments: segment: parse error" << std::endl;
+                  std::cout << "NavigationGraph:load: edges: edge: parse error" << std::endl;
                 }
             }
           else
             {
-              std::cout << "NavigationGraph:load: segments: Unknown tag: " << i->get_name() << std::endl;
+              std::cout << "NavigationGraph:load: edges: Unknown tag: " << i->get_name() << std::endl;
             }
         }      
     }
@@ -332,9 +332,9 @@
         << std::setw(3) << (*i)->get_pos().x << " " << (*i)->get_pos().y << "))\n";
   out << " )\n";
 
-  out << "  (segments\n";
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)  
-    out << "    (segment "
+  out << "  (edges\n";
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)  
+    out << "    (edge "
         << "(node1 " << std::setw(3) << ptr2id[(*i)->get_node1()] << ") "
         << "(node2 " << std::setw(3) << ptr2id[(*i)->get_node2()] << ") "
         << "(properties " << (*i)->get_properties() << "))\n";
@@ -346,10 +346,10 @@
 }
 
 bool
-NavigationGraph::valid(Segment* segment)
+NavigationGraph::valid(Edge* edge)
 {
   // FIXME: Slow
-  return std::find(segments.begin(), segments.end(), segment) != segments.end();
+  return std::find(edges.begin(), edges.end(), edge) != edges.end();
 }
 
 bool

Modified: trunk/windstille/src/navigation/navigation_graph.hpp
===================================================================
--- trunk/windstille/src/navigation/navigation_graph.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/navigation_graph.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -25,8 +25,8 @@
 
 class Node;
 class FileReader;
-class Segment;
-class SegmentPosition;
+class Edge;
+class EdgePosition;
 
 template<typename Data>
 class PointerHandle
@@ -60,18 +60,18 @@
   }
 };
 
-typedef PointerHandle<Node>    NodeHandle; 
-typedef PointerHandle<Segment> SegmentHandle; 
+typedef PointerHandle<Node> NodeHandle; 
+typedef PointerHandle<Edge> EdgeHandle; 
 
 /** */
 class NavigationGraph
 {
 private:
-  typedef std::vector<Node*>    Nodes;
-  typedef std::vector<Segment*> Segments;
+  typedef std::vector<Node*> Nodes;
+  typedef std::vector<Edge*> Edges;
 
-  Nodes    nodes;
-  Segments segments;
+  Nodes nodes;
+  Edges edges;
   
   // insert some spartial thingy here
 
@@ -81,16 +81,16 @@
 
   // FIXME: It might be worth it to return handles that can be
   // validated instead of pure pointers
-  NodeHandle    add_node(const Vector2f& pos);
-  SegmentHandle add_segment(NodeHandle node1, NodeHandle node2);
+  NodeHandle add_node(const Vector2f& pos);
+  EdgeHandle add_edge(NodeHandle node1, NodeHandle node2);
 
   void remove_node(NodeHandle node);
-  void remove_segment(SegmentHandle segment);
+  void remove_edge(EdgeHandle edge);
 
-  void split_segment(SegmentHandle segment);
+  void split_edge(EdgeHandle edge);
 
-  /** Find segments that intersect with the given line */
-  std::vector<SegmentPosition> find_intersections(const Line& line);
+  /** Find edges that intersect with the given line */
+  std::vector<EdgePosition> find_intersections(const Line& line);
 
   /** Find nodes that are near within the \a radius */
   std::vector<NodeHandle> find_nodes(const Vector2f& pos, float radius);
@@ -98,10 +98,10 @@
   /** Find the closest node, limit search to nodes in radius */
   NodeHandle find_closest_node(const Vector2f& pos, float radius);
 
-  SegmentHandle find_closest_segment(const Vector2f& pos, float radius);
+  EdgeHandle find_closest_edge(const Vector2f& pos, float radius);
 
-  /** Find segments that are near the given point */
-  std::vector<SegmentHandle> find_segments(const Vector2f& pos, float radius);
+  /** Find edges that are near the given point */
+  std::vector<EdgeHandle> find_edges(const Vector2f& pos, float radius);
 
   /** Draw the navigation graph, for debugging only */
   void draw();
@@ -109,8 +109,8 @@
   void load(FileReader& reader);
   void save(std::ostream& out);
 
-  bool valid(Segment* segment);
-  bool valid(Node*    node);
+  bool valid(Edge* edge);
+  bool valid(Node* node);
 
 private:
   NavigationGraph (const NavigationGraph&);

Modified: trunk/windstille/src/navigation/node.cpp
===================================================================
--- trunk/windstille/src/navigation/node.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/node.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -30,19 +30,19 @@
 }
 
 void
-Node::add_segment(const SegmentPosition& position)
+Node::add_edge(const EdgePosition& position)
 {
-  segments.push_back(position);
+  edges.push_back(position);
 }
 
 void
-Node::remove_segment(Segment* segment)
+Node::remove_edge(Edge* edge)
 {
-  for(Segments::iterator i = segments.begin(); i != segments.end(); ++i)
+  for(Edges::iterator i = edges.begin(); i != edges.end(); ++i)
     {
-      if (i->segment == segment)
+      if (i->edge == edge)
         {
-          segments.erase(i);
+          edges.erase(i);
           return;
         }
     }

Modified: trunk/windstille/src/navigation/node.hpp
===================================================================
--- trunk/windstille/src/navigation/node.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/node.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -22,7 +22,7 @@
 #include <vector>
 #include "math/vector2f.hpp"
 
-#include "segment_position.hpp"
+#include "edge_position.hpp"
 
 /** */
 class Node
@@ -31,9 +31,9 @@
   Vector2f pos;
   
 public:
-  /** Segments connected to this node */
-  typedef std::vector<SegmentPosition> Segments;
-  Segments segments;
+  /** Edges connected to this node */
+  typedef std::vector<EdgePosition> Edges;
+  Edges edges;
 
 public:
   Node(const Vector2f& pos_);
@@ -42,11 +42,11 @@
   Vector2f get_pos() const { return pos; }
   void     set_pos(const Vector2f& p) { pos = p; }
 
-  /** Connect the given segment to the node, the position is used to
-      mark the end of the segment that is actually connected */
-  void add_segment(const SegmentPosition& segment);
+  /** Connect the given edge to the node, the position is used to
+      mark the end of the edge that is actually connected */
+  void add_edge(const EdgePosition& edge);
 
-  void remove_segment(Segment* segment);
+  void remove_edge(Edge* edge);
 
 private:
   Node(const Node&);

Deleted: trunk/windstille/src/navigation/segment.cpp
===================================================================
--- trunk/windstille/src/navigation/segment.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/segment.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -1,58 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include <assert.h>
-#include "node.hpp"
-#include "segment.hpp"
-
-Segment::Segment(Node* node1_, Node* node2_, Properties props_)
-  : node1(node1_), 
-    node2(node2_),
-    properties(props_)
-{
-  node1->add_segment(SegmentPosition(this, 0.0f));
-  node2->add_segment(SegmentPosition(this, 1.0f));
-}
-
-Segment::~Segment()
-{
-  node1->remove_segment(this);
-  node2->remove_segment(this);
-}
-
-float
-Segment::angle(Segment* /*seg*/)
-{
-  assert(!"Implement me");
-  return 0.0f;
-}
-
-Line
-Segment::get_line() const
-{
-  return Line(node1->get_pos(),
-              node2->get_pos());
-}
-
-Vector2f
-Segment::get_vector() const
-{
-  return node2->get_pos() - node1->get_pos();
-}
-
-/* EOF */

Deleted: trunk/windstille/src/navigation/segment.hpp
===================================================================
--- trunk/windstille/src/navigation/segment.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/segment.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -1,59 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_NAVIGATION_SEGMENT_HPP
-#define HEADER_WINDSTILLE_NAVIGATION_SEGMENT_HPP
-
-#include "math/line.hpp"
-#include "math/vector2f.hpp"
-#include "properties.hpp"
-
-class Node;
-
-/** */
-class Segment
-{
-private:
-  Node* node1;
-  Node* node2;
-  
-  Properties properties;
-
-public:
-  Segment(Node* node1_, Node* node2_, Properties props_ = 0);
-  ~Segment();
-
-  /** Calculate the angle between two segments */
-  float angle(Segment* seg);
-  
-  Node* get_node1() const { return node1; } 
-  Node* get_node2() const { return node2; } 
-
-  Properties get_properties()  const { return properties; }
-
-  Line   get_line() const;
-  Vector2f get_vector() const;
-  
-private:
-  Segment (const Segment&);
-  Segment& operator= (const Segment&);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/windstille/src/navigation/segment_position.cpp
===================================================================
--- trunk/windstille/src/navigation/segment_position.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/segment_position.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -1,118 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "segment.hpp"
-#include "node.hpp"
-#include "display/display.hpp"
-#include "segment_position.hpp"
-
-SegmentPosition::SegmentPosition()
-  : segment(0),
-    pos(0.0f)
-{
-}
-
-SegmentPosition::SegmentPosition(Segment* segment_, float pos_)
-  : segment(segment_),
-    pos(pos_)
-{  
-}
-
-void
-SegmentPosition::set_pos(Segment* segment_, float pos_)
-{
-  segment = segment_;
-  pos     = pos_;
-}
-
-void
-SegmentPosition::advance(float& adv, Node*& next_node)
-{
-  Vector2f p1 = segment->get_node1()->get_pos();
-  Vector2f p2 = segment->get_node2()->get_pos();
-  
-  float length = (p2 - p1).length();
-  
-  // convert from world co to [0,1] range
-  float adv_01 = adv / length;
-
-  if (adv_01 > 0)
-    {
-      pos += adv_01;
-      if (pos > 1.0f) {
-        adv = (pos - 1.0f) * length;
-        pos = 1.0f;
-        next_node = segment->get_node2();
-      } else {
-        adv = 0;
-      }
-    }
-  else
-    {
-      pos += adv_01;
-      if (pos < 0.0f) {
-        adv = pos * length;
-        pos = 0;
-        next_node = segment->get_node1();
-      } else {
-        adv = 0;
-      }
-    }
-}
-
-void
-SegmentPosition::advance(Vector2f& adv, Node*& next_node)
-{
-  // FIXME: This might be optimizable
-  Vector2f p1 = segment->get_node1()->get_pos();
-  Vector2f p2 = segment->get_node2()->get_pos();
-  
-  Vector2f segment_v = p2 - p1;
-
-  Vector2f proj = adv.project(segment_v);
-
-  float angle = atan2(segment_v.y, segment_v.x) - atan2(proj.y, proj.x);
-
-  // Check if we are going forward or backward
-  float advf;
-  if (angle > M_PI/2 || angle < -M_PI/2)
-    advf = -proj.length();
-  else
-    advf = proj.length();
-
-  // Move forward
-  advance(advf, next_node);
-  
-  // Calculate the rest Vector2f
-  // Calculate the rest Vector2f
-  if (advf == 0.0f)
-    adv = Vector2f(0,0);
-  else
-    adv -= (proj * ((proj.length() - advf)/proj.length()));
-}
-
-Vector2f
-SegmentPosition::get_pos() const
-{
-  Vector2f p1 = segment->get_node1()->get_pos();
-  Vector2f p2 = segment->get_node2()->get_pos();
-
-  return p1 + pos*(p2 - p1);
-}
-
-/* EOF */

Deleted: trunk/windstille/src/navigation/segment_position.hpp
===================================================================
--- trunk/windstille/src/navigation/segment_position.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/navigation/segment_position.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -1,78 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_NAVIGATION_SEGMENT_POSITION_HPP
-#define HEADER_WINDSTILLE_NAVIGATION_SEGMENT_POSITION_HPP
-
-#include "math/vector2f.hpp"
-
-class Segment;
-class Node;
-
-/** 
- */
-class SegmentPosition
-{
-public:
-  Segment* segment;
-
-  /** Position on the segment, stored with range [0,1], not
-      world-co */
-  float pos;
-
-public:
-  SegmentPosition();
-  SegmentPosition(Segment* segment_, float pos_);
-
-  void set_pos(Segment* segment_, float pos_);
-
-  /** Move forward \a adv of units in world-co, when a node is hit,
-   *  the function returns and let the user decide how to continue
-   *
-   *  @param[in,out] adv the amount of advancment to be done, the
-   *                     amount of units that wheren't use on the
-   *                     given segment
-   *
-   *  @param[out] next_node if the advance ends at a node, it gets
-   *                        returned in next_node
-   */
-  void advance(float& adv, Node*& next_node);
-  
-  /** Move forward \a adv of units in world-co, when a node is hit,
-   *  the function returns and let the user decide how to
-   *  continue. \a adv is projected onto the current segment to figure
-   *  out how far we should go
-   *
-   * @param[in,out] adv the amount of advancment to be done, the
-   *                    amount of units that wheren't use on the given
-   *                    segment
-   *
-   * @param[out] next_node if the advance ends at a node, it gets
-   *                       returned in next_node
-   */  
-  void advance(Vector2f& adv, Node*& next_node);
-
-  Segment* get_segment() const { return segment; }
-  float    get_float_pos() const { return pos; }
-
-  Vector2f get_pos() const;
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/screen/navigation_test.cpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.cpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/screen/navigation_test.cpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -27,8 +27,8 @@
 #include "app/menu_manager.hpp"
 #include "navigation/navigation_graph.hpp"
 #include "navigation/node.hpp"
-#include "navigation/segment_position.hpp"
-#include "navigation/segment.hpp"
+#include "navigation/edge_position.hpp"
+#include "navigation/edge.hpp"
 #include "navigation_test.hpp"
 
 NavigationTest::NavigationTest()
@@ -36,7 +36,7 @@
     player(200,200),
     graph(new NavigationGraph()),
     connection(0),
-    selected_segment(0),
+    selected_edge(0),
     selected_node(0),
     node_to_connect(0)
 {
@@ -52,9 +52,9 @@
   //Node* node3 = graph->add_node(Vector2f(500, 300));
   //Node* node4 = graph->add_node(Vector2f(700, 400));
 
-  graph->add_segment(node1, node2);
-  //graph->add_segment(node2, node3);
-  //graph->add_segment(node3, node4);
+  graph->add_edge(node1, node2);
+  //graph->add_edge(node2, node3);
+  //graph->add_edge(node3, node4);
   
 }
 
@@ -84,8 +84,8 @@
   if (selected_node)
     Display::draw_circle(selected_node->get_pos(), 12.0f, Color(1.0f, 1.0f, 1.0f, 1.0f));
 
-  if (selected_segment)
-    Display::draw_line(selected_segment->get_line(), Color(1.0f, 1.0f, 1.0f, 1.0f));
+  if (selected_edge)
+    Display::draw_line(selected_edge->get_line(), Color(1.0f, 1.0f, 1.0f, 1.0f));
 
   Display::fill_circle(player, 12.0f, Color(0.0f, 0.0f, 1.0f, 1.0f));
 
@@ -119,7 +119,7 @@
       if (node_to_connect)
         {
           if (selected_node)
-            graph->add_segment(node_to_connect, selected_node);
+            graph->add_edge(node_to_connect, selected_node);
           
           node_to_connect = 0;
         }
@@ -127,10 +127,10 @@
         {
           node_to_connect = selected_node;
         }
-      else if (selected_segment)
+      else if (selected_edge)
         {
-          graph->split_segment(selected_segment);
-          selected_segment = 0;
+          graph->split_edge(selected_edge);
+          selected_edge = 0;
         }
       else
         {
@@ -164,28 +164,28 @@
       
       if (!advance.is_null())
         { // Not all advancement got used up, which means we have hit
-          // the end of a segment
+          // the end of a edge
 
           // FIXME: This should be a while loop, currently we are just
           // discarding the rest movement
 
-          SegmentPosition next_segment;
+          EdgePosition next_edge;
           float length = 0;
-          for(Node::Segments::iterator i = next_node->segments.begin(); i != next_node->segments.end(); ++i)
+          for(Node::Edges::iterator i = next_node->edges.begin(); i != next_node->edges.end(); ++i)
             {
-              if (connection->get_segment() != i->segment)
-                { // Find out into the direction of which segment the stick is pointing
-                  Vector2f proj = stick.project(i->segment->get_vector());
+              if (connection->get_edge() != i->edge)
+                { // Find out into the direction of which edge the stick is pointing
+                  Vector2f proj = stick.project(i->edge->get_vector());
                   
                   if (proj.length() > length)
                     {
-                      next_segment = *i;
+                      next_edge = *i;
                       length       = proj.length();
                     }
                 }
             }
               
-          if (!next_segment.segment)
+          if (!next_edge.edge)
             {
               std::cout << "Dead End" << std::endl;
               connection.reset();
@@ -197,7 +197,7 @@
           else
             {
               std::cout << "transition" << std::endl;
-              *connection = next_segment;
+              *connection = next_edge;
             }
         }
 
@@ -221,11 +221,11 @@
           player.y -= 0.5f * 512.0f * delta;
         }
 
-      std::vector<SegmentPosition> positions = graph->find_intersections(Line(old_player, player));
+      std::vector<EdgePosition> positions = graph->find_intersections(Line(old_player, player));
       if (!positions.empty()) 
         {
           std::cout << "Doing connection" << std::endl;
-          connection.reset(new SegmentPosition(positions.front()));
+          connection.reset(new EdgePosition(positions.front()));
         }
     }
   
@@ -241,19 +241,19 @@
         selected_node = 0;
       } 
       
-      if (selected_segment) {
-        graph->remove_segment(selected_segment);
-        selected_segment = 0;
+      if (selected_edge) {
+        graph->remove_edge(selected_edge);
+        selected_edge = 0;
       }      
     }
 
   selected_node = graph->find_closest_node(cursor, 32.0f);
   if (!selected_node)
-    selected_segment = graph->find_closest_segment(cursor, 32.0f);
+    selected_edge = graph->find_closest_edge(cursor, 32.0f);
   else
-    selected_segment = 0;
+    selected_edge = 0;
 
-  if (connection.get() && !graph->valid(connection->get_segment()))
+  if (connection.get() && !graph->valid(connection->get_edge()))
     {
       connection.reset();
     }

Modified: trunk/windstille/src/screen/navigation_test.hpp
===================================================================
--- trunk/windstille/src/screen/navigation_test.hpp	2009-03-16 21:47:22 UTC (rev 2683)
+++ trunk/windstille/src/screen/navigation_test.hpp	2009-03-16 22:25:06 UTC (rev 2684)
@@ -23,8 +23,8 @@
 #include "screen.hpp"
 
 class NavigationGraph;
-class SegmentPosition;
-class Segment;
+class EdgePosition;
+class Edge;
 class Node;
 
 /** */
@@ -37,10 +37,10 @@
   Vector2f old_player;
   
   std::auto_ptr<NavigationGraph> graph;
-  std::auto_ptr<SegmentPosition> connection;
+  std::auto_ptr<EdgePosition> connection;
 
-  SegmentHandle selected_segment;
-  NodeHandle    selected_node;
+  EdgeHandle selected_edge;
+  NodeHandle selected_node;
 
   NodeHandle node_to_connect;
 



From grumbel at mail.berlios.de  Mon Mar 16 23:27:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 16 Mar 2009 23:27:04 +0100
Subject: [Windstille-commit] r2685 - trunk/windstille
Message-ID: <200903162227.n2GMR4CH019602@sheep.berlios.de>

Author: grumbel
Date: 2009-03-16 23:27:03 +0100 (Mon, 16 Mar 2009)
New Revision: 2685

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-16 22:25:06 UTC (rev 2684)
+++ trunk/windstille/TODO	2009-03-16 22:27:03 UTC (rev 2685)
@@ -11,6 +11,10 @@
 Scripting
 =========
 
+* add Ctrl-k, Ctrl-k shortcuts to console
+
+* save command history of the console between runs
+
 * ParticleSystem could be hooked up to scripting
 
 * add a way to bind keys to script functions for use in debugging
@@ -88,13 +92,6 @@
 * ScriptableObject is a bad name, since all objects should be
   scriptable in one form or another
 
-* add typechecking to __custom functions in miniswig, something like
-  this might work:
-
-  void foobar(HSQUIRRELVM vm) __custom("if")
-
-  where the string is in the syntax of sq_setparamscheck()
-
 * implement more advanced tab-completion for console
 
 * miniswig does not support __suspend with a return value, should be
@@ -142,6 +139,9 @@
 Input Handling
 ==============
 
+* analog trigger handling is a little problematic, since the axis is
+  neutral at -32768, not at 0.
+
 * Input deadzone is problematic when trying to get angle of a stick,
   deadzone needs to act different there then when X/Y are handled
   seperatly. Temporary workaround is to move deadzone out of the input
@@ -180,11 +180,13 @@
 Miscellaneous
 =============
 
+* Display::push/pop_cliprect() doesn't handle different aspect-ratios properly
+
+* lightmap is broken with non-standard aspect-ratio
+
 * why does src/navigation/node.hpp use SegmentPosition? Doesn't seem
   right
 
-* using aspect-ration different to screen resolution, lots of things break
-
 * set dynamic maximum size for auto resizing Menus depending on
   resolution
 
@@ -422,5 +424,6 @@
 
 
 http://orange.blender.org/blog/the-amazing-incredible-monkey-brush#more-49
+Hypatia
 
 # EOF #



From grumbel at mail.berlios.de  Tue Mar 17 00:11:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 00:11:48 +0100
Subject: [Windstille-commit] r2686 - in trunk/windstille/src: font gui
Message-ID: <200903162311.n2GNBmtt022366@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 00:11:48 +0100 (Tue, 17 Mar 2009)
New Revision: 2686

Modified:
   trunk/windstille/src/font/fonts.cpp
   trunk/windstille/src/font/fonts.hpp
   trunk/windstille/src/gui/menu.cpp
   trunk/windstille/src/gui/menu_component.cpp
Log:
Removed unused fonts

Modified: trunk/windstille/src/font/fonts.cpp
===================================================================
--- trunk/windstille/src/font/fonts.cpp	2009-03-16 22:27:03 UTC (rev 2685)
+++ trunk/windstille/src/font/fonts.cpp	2009-03-16 23:11:48 UTC (rev 2686)
@@ -22,18 +22,14 @@
 
 TTFFont* Fonts::ttffont = 0;
 TTFFont* Fonts::vera12  = 0;
-TTFFont* Fonts::vera16  = 0;
 TTFFont* Fonts::vera20  = 0;
-TTFFont* Fonts::vera28  = 0;
 
 void
 Fonts::init()
 {
-  ttffont = new TTFFont("fonts/VeraMono.ttf", 12, BorderFontEffect(1, true));
+  ttffont = new TTFFont("fonts/VeraMono.ttf", 14, BorderFontEffect(1, true));
   vera12  = new TTFFont("fonts/Vera.ttf",     12, BorderFontEffect(2, true));
-  vera16  = new TTFFont("fonts/Vera.ttf",     16, BorderFontEffect(2, true));
   vera20  = new TTFFont("fonts/Vera.ttf",     20, BorderFontEffect(2, true));
-  vera28  = new TTFFont("fonts/Vera.ttf",     28, BorderFontEffect(2, true));
 }
 
 void
@@ -41,9 +37,7 @@
 {
   delete ttffont;
   delete vera12;
-  delete vera16;
   delete vera20;
-  delete vera28;
 }
 
 /* EOF */

Modified: trunk/windstille/src/font/fonts.hpp
===================================================================
--- trunk/windstille/src/font/fonts.hpp	2009-03-16 22:27:03 UTC (rev 2685)
+++ trunk/windstille/src/font/fonts.hpp	2009-03-16 23:11:48 UTC (rev 2686)
@@ -25,9 +25,7 @@
 public:
   static TTFFont* ttffont;
   static TTFFont* vera12;
-  static TTFFont* vera16;
   static TTFFont* vera20;
-  static TTFFont* vera28;
 
   static void init();
   static void deinit();

Modified: trunk/windstille/src/gui/menu.cpp
===================================================================
--- trunk/windstille/src/gui/menu.cpp	2009-03-16 22:27:03 UTC (rev 2685)
+++ trunk/windstille/src/gui/menu.cpp	2009-03-16 23:11:48 UTC (rev 2686)
@@ -39,7 +39,6 @@
 
   group.reset(new GroupComponent(rect, name, parent));
   menu.reset(new MenuComponent(group->get_child_rect(), allow_cancel, group.get()));
-
   menu->set_font(Fonts::vera20);
 }
 

Modified: trunk/windstille/src/gui/menu_component.cpp
===================================================================
--- trunk/windstille/src/gui/menu_component.cpp	2009-03-16 22:27:03 UTC (rev 2685)
+++ trunk/windstille/src/gui/menu_component.cpp	2009-03-16 23:11:48 UTC (rev 2686)
@@ -31,7 +31,7 @@
 MenuComponent::MenuComponent(const Rectf& rect, bool allow_cancel_, Component* parent)
   : Component(rect, parent),
     current_item(0),
-    font(Fonts::vera16),
+    font(Fonts::vera20),
     allow_cancel(allow_cancel_),
     scroll_mode(false),
     scroll_offset(0),



From grumbel at mail.berlios.de  Tue Mar 17 02:12:30 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 02:12:30 +0100
Subject: [Windstille-commit] r2687 - in trunk/windstille/src: engine objects
	screen
Message-ID: <200903170112.n2H1CUp2002725@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 02:12:29 +0100 (Tue, 17 Mar 2009)
New Revision: 2687

Modified:
   trunk/windstille/src/engine/sector.cpp
   trunk/windstille/src/objects/player.cpp
   trunk/windstille/src/objects/player.hpp
   trunk/windstille/src/screen/game_session.cpp
Log:
Player now gets its input from GameSession instead of directly from the input system

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-16 23:11:48 UTC (rev 2686)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-17 01:12:29 UTC (rev 2687)
@@ -212,10 +212,12 @@
 
   collision_engine->update(delta);
 
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i) {
-    if ((*i)->is_active())
-      (*i)->update(delta);
-  }
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i) 
+    {
+      if ((*i)->is_active())
+        (*i)->update(delta);
+    }
+
   commit_removes();
 }
 

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-16 23:11:48 UTC (rev 2686)
+++ trunk/windstille/src/objects/player.cpp	2009-03-17 01:12:29 UTC (rev 2687)
@@ -138,16 +138,19 @@
   set_stand_to_listen(true);
 }
 
+void
+Player::update(float /*delta*/)
+{
+}
+
 void 
-Player::update(float delta)
+Player::update(const Controller& controller, float delta)
 {
   weapon->update(delta);
 
   if (laser_pointer->is_active())
     laser_pointer->update(delta);
 
-  controller = InputManager::get_controller();
-
   if (fabsf(controller.get_axis_state(X2_AXIS, false)) > 0.25f ||
       fabsf(controller.get_axis_state(Y2_AXIS, false)) > 0.25f)
     {
@@ -168,50 +171,50 @@
         {
           case STAND:
           case WALK:
-            update_walk_stand();
+            update_walk_stand(controller);
             break;
           case RUN:
-            update_run();
+            update_run(controller);
             break;
           case DUCKING:
-            update_ducking();
+            update_ducking(controller);
             break;
           case DUCKED:
-            update_ducked();
+            update_ducked(controller);
             break;
           case TURNAROUND:
-            update_turnaround();
+            update_turnaround(controller);
             break;
           case STAND_TO_LISTEN:
-            update_stand_to_listen();
+            update_stand_to_listen(controller);
             break;
           case LISTEN:
-            update_listen();
+            update_listen(controller);
             break;
           case JUMP_BEGIN:
-            update_jump_begin();
+            update_jump_begin(controller);
             break;
           case JUMP_AIR:
-            update_jump_air();
+            update_jump_air(controller);
             break;
           case JUMP_LAND:
-            update_jump_land();
+            update_jump_land(controller);
             break;
           case JUMP_UP_BEGIN:
-            update_jump_up_begin();
+            update_jump_up_begin(controller);
             break;
           case JUMP_UP_AIR:
-            update_jump_up_air();
+            update_jump_up_air(controller);
             break;
           case JUMP_UP_LAND:
-            update_jump_up_land();
+            update_jump_up_land(controller);
             break;
           case PULL_GUN:
-            update_pull_gun();
+            update_pull_gun(controller);
             break;
           case STAIRS_DOWN:
           case STAIRS_UP:
-            update_stairs(delta);
+            update_stairs(controller, delta);
             break;
           default:
             assert(false);
@@ -238,7 +241,7 @@
 }
 
 void
-Player::update_walk_stand()
+Player::update_walk_stand(const Controller& controller)
 {
   if (controller.get_axis_state(Y_AXIS) > 0.5f)
     {
@@ -292,13 +295,13 @@
     }
 
   if (state == STAND)
-    update_stand();
+    update_stand(controller);
   else
-    update_walk();
+    update_walk(controller);
 }
 
 void
-Player::update_stairs(float delta)
+Player::update_stairs(const Controller& controller, float delta)
 {
   assert(contact);
 
@@ -347,7 +350,7 @@
 
 
 void
-Player::update_stand()
+Player::update_stand(const Controller& controller)
 { 
   if (controller.button_was_pressed(USE_BUTTON))
     {
@@ -412,7 +415,7 @@
 }
 
 void
-Player::update_walk()
+Player::update_walk(const Controller& controller)
 {
   if (fabsf(controller.get_axis_state(X_AXIS)) < 0.5f) // Hardcoded DEAD_ZONE, somewhat evil 
     {
@@ -454,7 +457,7 @@
 }
 
 void
-Player::update_ducking()
+Player::update_ducking(const Controller& controller)
 {
   // ducking
   if (sprite.switched_actions()) 
@@ -487,7 +490,7 @@
 }
 
 void
-Player::update_ducked()
+Player::update_ducked(const Controller& controller)
 {
   if (!controller.get_axis_state(Y_AXIS) > 0.5f)
     {
@@ -508,7 +511,7 @@
 }
 
 void
-Player::update_turnaround()
+Player::update_turnaround(const Controller& controller)
 {
   if (sprite.switched_actions()) 
     {
@@ -546,7 +549,7 @@
 }
 
 void
-Player::update_stand_to_listen()
+Player::update_stand_to_listen(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -565,7 +568,7 @@
 }
 
 void
-Player::update_listen()
+Player::update_listen(const Controller& /*controller*/)
 {
   // nothing
 }
@@ -587,7 +590,7 @@
 }
 
 void
-Player::update_run()
+Player::update_run(const Controller& controller)
 {
   if (!controller.get_button_state(RUN_BUTTON)) 
     {
@@ -634,7 +637,7 @@
 }
 
 void
-Player::update_jump_begin()
+Player::update_jump_begin(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -663,7 +666,7 @@
 }
 
 void
-Player::update_jump_air()
+Player::update_jump_air(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -680,7 +683,7 @@
 }
 
 void
-Player::update_jump_land()
+Player::update_jump_land(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -697,7 +700,7 @@
 }
 
 void
-Player::update_jump_up_begin()
+Player::update_jump_up_begin(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -715,7 +718,7 @@
 }
 
 void
-Player::update_jump_up_air()
+Player::update_jump_up_air(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -732,7 +735,7 @@
 }
 
 void
-Player::update_jump_up_land()
+Player::update_jump_up_land(const Controller& /*controller*/)
 {
   if (sprite.switched_actions()) 
     {
@@ -742,7 +745,7 @@
 }
 
 void
-Player::update_pull_gun()
+Player::update_pull_gun(const Controller& controller)
 {
   if (!controller.get_button_state(AIM_BUTTON))
     {

Modified: trunk/windstille/src/objects/player.hpp
===================================================================
--- trunk/windstille/src/objects/player.hpp	2009-03-16 23:11:48 UTC (rev 2686)
+++ trunk/windstille/src/objects/player.hpp	2009-03-17 01:12:29 UTC (rev 2687)
@@ -37,8 +37,6 @@
 class Player : public Entity
 {
 private:
-  Controller controller;
-
   Sprite3D sprite;
   std::auto_ptr<SoundSource> sound_source;
 
@@ -97,6 +95,7 @@
 
   void draw(SceneContext& gc);
   void update(float delta);
+  void update(const Controller& controller, float delta);
 
   void start_listening();
   void stop_listening();
@@ -121,23 +120,23 @@
    * TODO: can we generalize this mechanism? Or create a small specification
    * language for this?
    */
-  void update_ducked();
-  void update_ducking();
-  void update_listen();
-  void update_run();
-  void update_stand();
-  void update_stand_to_listen();
-  void update_turnaround();
-  void update_walk();
-  void update_walk_stand();
-  void update_jump_air();
-  void update_jump_begin();
-  void update_jump_land();
-  void update_jump_up_air();
-  void update_jump_up_begin();
-  void update_jump_up_land();
-  void update_pull_gun();
-  void update_stairs(float delta);
+  void update_ducked(const Controller& controller);
+  void update_ducking(const Controller& controller);
+  void update_listen(const Controller& controller);
+  void update_run(const Controller& controller);
+  void update_stand(const Controller& controller);
+  void update_stand_to_listen(const Controller& controller);
+  void update_turnaround(const Controller& controller);
+  void update_walk(const Controller& controller);
+  void update_walk_stand(const Controller& controller);
+  void update_jump_air(const Controller& controller);
+  void update_jump_begin(const Controller& controller);
+  void update_jump_land(const Controller& controller);
+  void update_jump_up_air(const Controller& controller);
+  void update_jump_up_begin(const Controller& controller);
+  void update_jump_up_land(const Controller& controller);
+  void update_pull_gun(const Controller& controller);
+  void update_stairs(const Controller& controller, float delta);
 
   void leave_run();
   void leave_walk();

Modified: trunk/windstille/src/screen/game_session.cpp
===================================================================
--- trunk/windstille/src/screen/game_session.cpp	2009-03-16 23:11:48 UTC (rev 2686)
+++ trunk/windstille/src/screen/game_session.cpp	2009-03-17 01:12:29 UTC (rev 2687)
@@ -289,6 +289,11 @@
     {
       MenuManager::display_pause_menu();
     }
+  else
+    {
+      if (!current_gui)
+        Player::current()->update(controller, delta);
+    }
 
   if (current_gui)
     {



From grumbel at mail.berlios.de  Tue Mar 17 02:16:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 02:16:41 +0100
Subject: [Windstille-commit] r2688 - trunk/windstille/src/objects
Message-ID: <200903170116.n2H1GfQh004266@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 02:16:40 +0100 (Tue, 17 Mar 2009)
New Revision: 2688

Modified:
   trunk/windstille/src/objects/player.cpp
Log:
Removed unneeded include

Modified: trunk/windstille/src/objects/player.cpp
===================================================================
--- trunk/windstille/src/objects/player.cpp	2009-03-17 01:12:29 UTC (rev 2687)
+++ trunk/windstille/src/objects/player.cpp	2009-03-17 01:16:40 UTC (rev 2688)
@@ -17,27 +17,27 @@
 */
 
 #include <boost/bind.hpp>
-#include "tile/tile_map.hpp"
-#include "engine/sector.hpp"
-#include "input/controller.hpp"
-#include "input/input_manager.hpp"
+
+#include "app/console.hpp"
 #include "app/controller_def.hpp"
-#include "player.hpp"
-#include "objects/bomb.hpp"
 #include "app/globals.hpp"
-#include "hud/pda.hpp"
-#include "tile/tile.hpp"
-#include "sprite3d/manager.hpp"
-#include "display/surface_manager.hpp"
-#include "particles/particle_system.hpp"
-#include "sound/sound_manager.hpp"
 #include "collision/collision_engine.hpp"
-#include "laser_pointer.hpp"
 #include "collision/stair_contact.hpp"
-#include "screen/game_session.hpp"
-#include "app/console.hpp"
+#include "display/surface_manager.hpp"
+#include "engine/sector.hpp"
 #include "grenade.hpp"
+#include "hud/pda.hpp"
+#include "input/controller.hpp"
+#include "laser_pointer.hpp"
+#include "objects/bomb.hpp"
+#include "particles/particle_system.hpp"
 #include "pistol.hpp"
+#include "player.hpp"
+#include "screen/game_session.hpp"
+#include "sound/sound_manager.hpp"
+#include "sprite3d/manager.hpp"
+#include "tile/tile.hpp"
+#include "tile/tile_map.hpp"
 
 static const int MAX_ENERGY = 16;
 static const float WALK_SPEED = 128.0;



From grumbel at mail.berlios.de  Tue Mar 17 05:33:40 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 05:33:40 +0100
Subject: [Windstille-commit] r2689 - trunk/windstille/data/sectors/bluestone
Message-ID: <200903170433.n2H4Xe6p027480@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 05:33:39 +0100 (Tue, 17 Mar 2009)
New Revision: 2689

Added:
   trunk/windstille/data/sectors/bluestone/init.nut
Modified:
   trunk/windstille/data/sectors/bluestone/bluestone.wst
Log:
Toying around with light

Modified: trunk/windstille/data/sectors/bluestone/bluestone.wst
===================================================================
--- trunk/windstille/data/sectors/bluestone/bluestone.wst	2009-03-17 01:16:40 UTC (rev 2688)
+++ trunk/windstille/data/sectors/bluestone/bluestone.wst	2009-03-17 04:33:39 UTC (rev 2689)
@@ -3,8 +3,17 @@
   (version 2)
   (name   "")
   (music  "")
+  (init-script "init.nut")
   (ambient-color .2 .2 .4)
   (objects
+
+   (scriptable-object
+    (name "lamp")
+    ;;(sprite    "images/objects/apartmentlamp.sprite")
+    ;;(highlight "images/objects/apartmentlamp_highlight.sprite")
+    (light     "images/objects/apartmentlamp_light.sprite")
+    (pos 0 -180))
+
   (tilemap (name "background") (width 100) (height 30) (z-pos 0)
     (data
       257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
@@ -46,10 +55,10 @@
       0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 0 0 0 0 0 0 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       1093 1094 1133 1134 1135 1136 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1099 1100 0 0 0 0 1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 1061 1062 

Added: trunk/windstille/data/sectors/bluestone/init.nut
===================================================================
--- trunk/windstille/data/sectors/bluestone/init.nut	2009-03-17 01:16:40 UTC (rev 2688)
+++ trunk/windstille/data/sectors/bluestone/init.nut	2009-03-17 04:33:39 UTC (rev 2689)
@@ -0,0 +1,4 @@
+function run()
+{
+  objects.lamp.set_parent("player");
+}



From grumbel at mail.berlios.de  Tue Mar 17 14:06:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 14:06:03 +0100
Subject: [Windstille-commit] r2690 - trunk/media/wiki
Message-ID: <200903171306.n2HD6393006484@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 14:06:03 +0100 (Tue, 17 Mar 2009)
New Revision: 2690

Added:
   trunk/media/wiki/Debug.wiki
Modified:
   trunk/media/wiki/Animation.wiki
   trunk/media/wiki/Navigation Mesh.wiki
   trunk/media/wiki/Sector.wiki
   trunk/media/wiki/Squirrel.wiki
   trunk/media/wiki/TODO
   trunk/media/wiki/Windstille.wiki
   trunk/media/wiki/wiki2html.py
Log:
Random Wiki updates

Modified: trunk/media/wiki/Animation.wiki
===================================================================
--- trunk/media/wiki/Animation.wiki	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/Animation.wiki	2009-03-17 13:06:03 UTC (rev 2690)
@@ -2,9 +2,68 @@
 Could/should we do this in Blender with 3D meshes? Might be simpler then writing yet another animation system.
 <</note>>
 
-Windstille currently has frame based animations, these Sprites well enough for organic things. However Windstille will feature plenty of mechanical things, doors, trains, etc. that aren't practical to do with sprite based animation. Therefore we need an animation system that is implemented on top of the frame based animation and allows moving those Sprites around. 
+Windstille currently has frame based animations, these Sprites work well enough for organic things. However Windstille will feature plenty of mechanical things, doors, trains, etc. that aren't practical to do with sprite based animation. Therefore we need an animation system that is implemented on top of the frame based animation and allows moving those Sprites around.
 
-== Example
+== Animation Objects
 
-* a two segmented door slides open
+<<note>>
+Just a proposed solution, not actually implemented at all.
+<</note>>
 
+The idea is to basically do something similar to [[http://wiki.blender.org/index.php/Doc:Manual/Animation/Basic/Tools/Ipo_Curves_and_Keyframes | Blenders Ipo Curves]], which means that each objects parameter can be animated via a curve. In addition to that it might be benefitial to have more simplistic animation that just rotates a or moves a sprite.
+
+{{{
+  (animate-simple-relative-rotate
+     (name "train-animation")
+     (object "train")
+     (angle 50) ;; rotate 50 degree forward
+     (speed 100) ;; meter-per-second? 
+      ...)
+
+  (animate-simple-rotate
+     (name "train-animation")
+     (object "train")
+     (target-angle 50)
+     (speed 100) ;; meter-per-second? 
+      ...)
+
+  (animate-simple-move
+     (name "train-animation")
+     (object "train")
+     (target-pos x y)
+     (speed 100) ;; meter-per-second? 
+      ...)
+
+  ;; simple move/stretch/rotate commands
+  (animate-move
+     (name "train-animation")
+     (object "train")
+     (curve (vertex (pos x y) 
+                    (time msec))
+             ...))
+
+  (animate-stretch
+     (name "mesh-animation")
+     (object "mesh")
+     (curve (vertex (scale w h)
+                    (time msec))
+             ...))
+
+  (animate-rotate
+     (name "psys-animation")
+     (object "particle-system")
+     (curve (vertex (rotate rot)
+                    (time msec))
+             ...))
+
+  ;; general parameter animation
+  (animate-parameter
+     (object "particlesystem")
+     (curve
+       (parameter "color")
+       (extend-mode cyclic/extrapolate/constant)
+       (interpolation linear/none/bspline)
+       (values (value (color 0.0 0.0 1.0)
+                      (time  msec))
+                ...)))
+}}}

Added: trunk/media/wiki/Debug.wiki
===================================================================
--- trunk/media/wiki/Debug.wiki	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/Debug.wiki	2009-03-17 13:06:03 UTC (rev 2690)
@@ -0,0 +1,23 @@
+== (debug-button ...)
+
+Debug button is can be configured in {{{data/controller/}}}, when pressed down the second analogstick can be used to move the view around, pressing the second analogstick centers the view again.
+
+== Debug Menu
+
+The pause menu has a **Debug** entry that can be used to change ambient light.
+
+== Console
+
+Console is available on F1 and allows full access to all scripting functions. Useful bits:
+
+{{{
+  // Create a shockwave object
+  spawn_object("shockwave", {pos=[0,0]})
+
+  // let run game twice as fast
+  set_gamespeed(2.0)
+}}}
+
+== Layer Toggle
+
+You can switch on/off layers by pressing 1, 2, 3, 4, ...

Modified: trunk/media/wiki/Navigation Mesh.wiki
===================================================================
--- trunk/media/wiki/Navigation Mesh.wiki	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/Navigation Mesh.wiki	2009-03-17 13:06:03 UTC (rev 2690)
@@ -2,4 +2,86 @@
 
 The Navigation Mesh is a graph structure that is used to represent the walkable area. Currently there exist a simple prototype in Windstille that is available from the main menu under **Navigation Test**.
 
-A Navigation Mesh is a graph and consists of edges and nodes
\ No newline at end of file
+A Navigation Mesh is a graph and consists of edges and nodes, the file that is used for the Navigation Test can be found at {{{data/navigation.nav}}}, the syntax is like this:
+
+{{{
+(navigation
+  (nodes
+    (node (id   1) (pos 100 200))
+    (node (id   2) (pos 300 400))
+    (node (id   3) (pos 444.861 410.437))
+    (node (id   4) (pos 534.858 436.132))
+    (node (id   5) (pos 615.372 436.622))
+    (node (id   6) (pos 681.084 263.793))
+    (node (id   7) (pos 597.783 288.682))
+    (node (id   8) (pos 491.216 288.682))
+    (node (id   9) (pos 421.02 285.146))
+    (node (id  10) (pos 332.645 268.294))
+    (node (id  11) (pos 362.944 159.5))
+    (node (id  12) (pos 436.191 163.735))
+    (node (id  13) (pos 513.665 163.235))
+    (node (id  14) (pos 594.374 162.168))
+    (node (id  15) (pos 132.505 83.9459))
+    (node (id  16) (pos 193.368 83.9459))
+    (node (id  17) (pos 161.409 177.94))
+    (node (id  18) (pos 283.341 177.94))
+ )
+
+  (segments
+    (segment (node1   1) (node2   2) (properties 0))
+    (segment (node1   2) (node2   3) (properties 0))
+    (segment (node1   3) (node2   4) (properties 0))
+    (segment (node1   4) (node2   5) (properties 0))
+    (segment (node1   5) (node2   6) (properties 0))
+    (segment (node1  10) (node2   9) (properties 0))
+    (segment (node1   9) (node2   8) (properties 0))
+    (segment (node1   8) (node2   7) (properties 0))
+    (segment (node1  11) (node2  12) (properties 0))
+    (segment (node1  12) (node2  13) (properties 0))
+    (segment (node1  13) (node2  14) (properties 0))
+    (segment (node1  15) (node2  16) (properties 0))
+    (segment (node1  17) (node2  18) (properties 0))
+ )
+)
+}}}
+
+== Node
+
+A node is an object that has a {{{position}}} and an {{{id}}} by which it can be identified, in addition it shall have a symbolic {{{name}}} by which scripts can access and manipulate it.
+
+{{{
+class Node 
+{
+  int      id;   // unique id
+  string   name; // symbolic name
+  Vector2f pos;  // position in the world
+};
+}}}
+
+== Segmet / Edge
+
+An segment or edge is an object connecting two nodes. Segments can have properties, which is currently implemented as bitmask.
+
+{{{
+class Segment
+{
+  Node   node1;      // node to which the segment is connected
+  Node   node2;      // node to which the segment is connected
+  uint32 properties; // list of properties
+};
+}}}
+
+== Segment Positon
+
+The <<class>>SegmentPosition<</class>> is used to connect to the graph and move around on it.
+
+== Functions
+
+Functions that can be applied to the navigation mesh include:
+
+* adding/removing nodes
+* adding/removing segments
+* casting a ray (start_pos, end_pos) and return where it collides with the navigation mesh
+* connection something to the graph and let it work
+* trigger script function when positions on the graph are passed over
+

Modified: trunk/media/wiki/Sector.wiki
===================================================================
--- trunk/media/wiki/Sector.wiki	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/Sector.wiki	2009-03-17 13:06:03 UTC (rev 2690)
@@ -7,14 +7,72 @@
 * {{{data/sectors/{SECTORNAME}/{SECTORNAME}.wst}}}
 * {{{data/sectors/{SECTORNAME}/{SCRIPTNAME}.nut}}}
 
-== Script Patch Syntax
+== Script Path
 
+Script paths are relative to the file that they are written in, i.e. a file {{{data/sector/apartment/apartment.wst}}} containing the entry {{{(initscript "init.nut")}}} will resolve to {{{data/sector/apartment/init.nut}}}.
+
+Absolute syntax is currently not supported, syntax should likely follow HTML like convention, i.e. {{{/scripts/init.nut}}} would refer to {{{data/scripts/init.nut}}}
+
+== Units
+
+<<note>>
+The pixel image value is subject to change, will likely end up as\\ 128 pixel == 1 meter.
+<</note>>
+
+* Blender Export Script: 1 meter == 2 blender units
+* Pixel Images: 1 meter == 64 pixel
+
+== Objects
+
+scriptable-object: complex 2D sprite object
+surface: simple 2D sprite object
+
+== Syntax
+
 {{{
-(script "barrobot.nut") ;; Script relative to the location of the .wst file
+(windstille-sector
+  (version 1)
+  (name   "")
+  (music  "music/techdemo.ogg")
 
-(script "/scripts/barrobot.nut") ;; Script relative to the data directory
+  (ambient-color .4 .4 .4)
+  (init-script "newformat2.nut")
 
-or 
+  (spawnpoint
+    (name "default")
+    (pos 300 650))
 
-(script "global:scripts/barrobot.nut") ;; Script relative to the data directory
+  (navigation
+    (nodes
+      (node (id   1) (pos 100 200))
+      (node (id   2) (pos 300 400))
+      (node (id   3) (pos 444.861 410.437))
+      (node (id   4) (pos 534.858 436.132))
+      ...)
+
+    (edges
+      (edge (node1   1) (node2   2) (properties 0))
+      (edge (node1   2) (node2   3) (properties 0))
+      (edge (node1   3) (node2   4) (properties 0))
+      ...)
+
+  (objects
+    (liquid
+      (pos 128 768)
+      (width 20))
+
+    (liquid
+      (pos 832 832)
+      (width 4))
+
+    (scriptable-object
+      (name "Block0Sign")
+      (pos 550 370)
+      (sprite "images/arrow.sprite")
+      (active #f))
+    
+    ...) ;; objects
+) ;; windstille-sector
+
+;; EOF ;;
 }}}

Modified: trunk/media/wiki/Squirrel.wiki
===================================================================
--- trunk/media/wiki/Squirrel.wiki	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/Squirrel.wiki	2009-03-17 13:06:03 UTC (rev 2690)
@@ -20,11 +20,75 @@
 == Functions
 
 {{{
+// Anonymous functions
+function() {
+}
+
+// Named function
 function foobar() {
   // do stuff
 }
 }}}
 
+== Array
+
+{{{
+arr = [1,2,3,4];
+arr[2];    // -> 3
+arr.len(); // -> 4
+arr.push(val);
+arr.extend(other_arr); // Append other_arr to arr
+arr.pop(); // removes and returns last element
+arr.insert(idx, val);
+arr.remove(idx);
+arr.resize(20, fill);
+arr.sort(compare_func);
+arr.reverse();
+arr.slice(start, [end]);
+arr.clear();
+
+arr2 = array(20, fill); // length 20, filled with 'fill' objects
+
+foreach(val in arr) {
+  print(val);
+}
+
+foreach(idx,val in arr) {
+  print(idx);
+  print(val);
+}
+}}}
+
+== Tables
+
+<<note>>
+What about key names that contain a space?
+<</note>>
+
+{{{
+tbl <- {
+   key1 = "value1",
+   key2 = "value2",  
+   key3 = "value3" 
+}
+
+if ("key1" in tbl) {
+   print(tbl["key1"]); // access "key1"
+   print(tbl.key1);    // access "key1"
+}
+
+print(tbl.len()); // length
+tbl.clear();      // removes all elements
+delete tbl.key1;  // removes key1 element from tbl
+
+foreach(i,val in tbl) {
+   print(i);
+   print(" -> ");
+   print(val);
+   print("\n");
+}
+}}}
+
 == Classes
 
 {{{
@@ -51,24 +115,13 @@
 == Looping
 
 {{{
-tbl <- {
-   key1 = "value1",
-   key2 = "value2",  
-   key3 = "value3" 
-}
-
-foreach(i,val in tbl) {
+for(local i = 0; i < 10; ++i) {
    print(i);
-   print(" -> ");
-   print(val);
    print("\n");
 }
-}}}
 
-{{{
-for(local i = 0; i < 10; ++i) {
-   print(i);
-   print("\n");
+while(true) {
+  // ...
 }
 }}}
 

Modified: trunk/media/wiki/TODO
===================================================================
--- trunk/media/wiki/TODO	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/TODO	2009-03-17 13:06:03 UTC (rev 2690)
@@ -1,9 +1,20 @@
-- http://creoleparser.googlepages.com/CheatSheetPlus.html
+* maybe a tag to directly include a file could be useful:
 
-- Add a 'last updated' time to the pages, take it from "svn info"
+  {{{
+  <<include file="data/file.txt">>
+  }}}
 
-- W3C clean would be nifty
+  So that long text files can be kept in SVN
 
-Notes:
-------
-- mime type for jpegs on berlios in broken, is text/plain instead of image/jpeg, worked around with .htdocs/
+* http://creoleparser.googlepages.com/CheatSheetPlus.html
+
+* Add a 'last updated' time to the pages, take it from "svn info"
+
+* W3C clean would be nifty
+
+Notes
+=====
+
+* mime type for jpegs on berlios in broken, is text/plain instead of image/jpeg, worked around with .htdocs/
+
+# EOF #

Modified: trunk/media/wiki/Windstille.wiki
===================================================================
--- trunk/media/wiki/Windstille.wiki	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/Windstille.wiki	2009-03-17 13:06:03 UTC (rev 2690)
@@ -1,3 +1,5 @@
+Windstille has the goal to create a 2D action adventure.
+
 * [[Rebirth]]
 
 == Plot/Story
@@ -13,6 +15,7 @@
 == Engine
 
 * [[Coding style]]
+* [[Debug]]
 * [[Particles]]
 * [[Navigation Mesh]]
 * [[Dialog]]

Modified: trunk/media/wiki/wiki2html.py
===================================================================
--- trunk/media/wiki/wiki2html.py	2009-03-17 04:33:39 UTC (rev 2689)
+++ trunk/media/wiki/wiki2html.py	2009-03-17 13:06:03 UTC (rev 2690)
@@ -44,6 +44,7 @@
              'Locations',
              'Missions',
              'Coding style',
+             'Debug',
              'Particles',
              'Navigation Mesh',
              'Dialog',



From grumbel at mail.berlios.de  Tue Mar 17 14:30:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 14:30:16 +0100
Subject: [Windstille-commit] r2691 - in trunk/windstille/src: app font
Message-ID: <200903171330.n2HDUGqD008843@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 14:30:15 +0100 (Tue, 17 Mar 2009)
New Revision: 2691

Modified:
   trunk/windstille/src/app/config.cpp
   trunk/windstille/src/app/config.hpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/font/ttf_font.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/app/config.cpp
===================================================================
--- trunk/windstille/src/app/config.cpp	2009-03-17 13:06:03 UTC (rev 2690)
+++ trunk/windstille/src/app/config.cpp	2009-03-17 13:30:15 UTC (rev 2691)
@@ -72,6 +72,7 @@
     {
       delete i->second;
     }
+  config_values.clear();
 }
 
 void 

Modified: trunk/windstille/src/app/config.hpp
===================================================================
--- trunk/windstille/src/app/config.hpp	2009-03-17 13:06:03 UTC (rev 2690)
+++ trunk/windstille/src/app/config.hpp	2009-03-17 13:30:15 UTC (rev 2691)
@@ -24,7 +24,7 @@
 #include <typeinfo>
 #include <stdexcept>
 #include "lisp/writer.hpp"
-
+
 class ConfigValueBase
 {
 private:
@@ -60,7 +60,7 @@
 
   virtual void write(lisp::Writer& writer) =0;
 };
-
+
 template<class T>
 class ConfigValue : public ConfigValueBase
 {
@@ -110,7 +110,7 @@
 {
   return value.print(o);
 }
-
+
 class Config
 {
 private:
@@ -118,6 +118,7 @@
   ConfigValues config_values;
 
   void add(ConfigValueBase*);
+
 public:
   Config();
   ~Config();
@@ -162,7 +163,7 @@
 
   void debug_print(std::ostream& out);
 };
-
+
 extern Config config;
 
 #endif

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-03-17 13:06:03 UTC (rev 2690)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-03-17 13:30:15 UTC (rev 2691)
@@ -25,14 +25,14 @@
 #include FT_FREETYPE_H
 #include FT_GLYPH_H
 
+#include "display/blitter.hpp"
 #include "display/opengl_state.hpp"
-#include "physfs/physfs_stream.hpp"
 #include "display/texture_manager.hpp"
-#include "display/blitter.hpp"
-#include "ttf_font.hpp"
 #include "font_effect.hpp"
+#include "physfs/physfs_stream.hpp"
+#include "ttf_font.hpp"
 #include "util/util.hpp"
-
+
 TTFCharacter::TTFCharacter(const Rect& pos_,
                            const Rectf& uv_, 
                            int advance_)
@@ -41,7 +41,7 @@
     advance(advance_)
 {
 }
-
+
 class TTFFontImpl
 {
 public:
@@ -58,9 +58,9 @@
   /** OpenGL Texture which holds all the characters */
   Texture texture;
 };
-
+
 FT_Library TTFFontImpl::library;
-
+
 TTFFont::TTFFont(const std::string& filename, int size_, const FontEffect& effect)
   : impl(new TTFFontImpl())
 {
@@ -161,7 +161,6 @@
 
 TTFFont::~TTFFont()
 {
-  delete impl;
 }
 
 const TTFCharacter&
@@ -241,7 +240,7 @@
 {
   return impl->texture;
 }
-
+
 void
 TTFFont::init()
 {
@@ -257,5 +256,5 @@
 {
   FT_Done_FreeType( TTFFontImpl::library );
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/font/ttf_font.hpp
===================================================================
--- trunk/windstille/src/font/ttf_font.hpp	2009-03-17 13:06:03 UTC (rev 2690)
+++ trunk/windstille/src/font/ttf_font.hpp	2009-03-17 13:30:15 UTC (rev 2691)
@@ -19,16 +19,19 @@
 #ifndef HEADER_WINDSTILLE_FONT_TTF_FONT_HPP
 #define HEADER_WINDSTILLE_FONT_TTF_FONT_HPP
 
-#include <string>
 #include <GL/glew.h>
 #include <GL/gl.h>
+#include <memory>
+#include <string>
+
 #include "display/color.hpp"
+#include "display/texture.hpp"
 #include "math/rect.hpp"
 #include "no_font_effect.hpp"
-#include "display/texture.hpp"
-
+
 class FontEffect;
-
+class TTFFontImpl;
+
 class TTFCharacter
 {
 public:
@@ -46,16 +49,14 @@
 
   TTFCharacter(const Rect& pos, const Rectf& uv, int advance);
 };
-
-class TTFFontImpl;
-
-/** */
+
 class TTFFont
 {
 public:
   static void init();
   static void deinit();
 
+public:
   TTFFont(const std::string& file, int size, const FontEffect& effect = NoFontEffect());
   ~TTFFont();
 
@@ -78,9 +79,9 @@
   void draw_center(const Vector2f& pos, const std::string& str, const Color& color = Color(1.0f, 1.0f, 1.0f));
 
 private:
-  TTFFontImpl* impl;
+  std::auto_ptr<TTFFontImpl> impl;
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Tue Mar 17 15:15:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 17 Mar 2009 15:15:44 +0100
Subject: [Windstille-commit] r2692 - in trunk/media/wiki: . images thumbnails
Message-ID: <200903171415.n2HEFimC015048@sheep.berlios.de>

Author: grumbel
Date: 2009-03-17 15:15:31 +0100 (Tue, 17 Mar 2009)
New Revision: 2692

Added:
   trunk/media/wiki/images/editor.png
   trunk/media/wiki/thumbnails/editor.png
Modified:
   trunk/media/wiki/Editor.wiki
Log:
Added editor mookup

Modified: trunk/media/wiki/Editor.wiki
===================================================================
--- trunk/media/wiki/Editor.wiki	2009-03-17 13:30:15 UTC (rev 2691)
+++ trunk/media/wiki/Editor.wiki	2009-03-17 14:15:31 UTC (rev 2692)
@@ -1,3 +1,28 @@
-The Windstille Editor will follow a sandbox model. The engine shall be
-flexible enough that it can run inside the editor and be manipulated. For this to work the engine must first be cleaned up enough so that it can be wrapped up into a GtkWidget.
+The Windstille Editor will follow a sandbox model. The engine shall be flexible enough that it can run inside the editor and be manipulated. For this to work the engine must first be cleaned up enough so that it can be wrapped up into a GtkWidget. The goal of going sandbox is to reduce code duplication and allow direct jumps into and out of the game.
 
+== Interface
+
+<<thumbnail src="editor.png">>
+
+The basic interface will be similar to that of other game editor such as SuperTux or Pingus. One notable exception is how the objects are organized, instead of a flat list, each object will have a parent object. Which allows both the grouping of objects as well as easier reuse of previous build objects (e.g. a train could be used in multiple sectors).
+
+== Property Editor
+
+The property editor will allow the manipulation of all of the objects properties:
+
+* position
+* color
+* animation speed
+* ...
+
+== Navigation Graph
+
+While the navigation graph is seen as a single thing from the game code, in the editor it should likely be build out of smaller segments, thus allowing to parent it to moving objects and such.
+
+== Toolkit
+
+The editor will likely be based on Gtkmm.
+
+== Flexlay
+
+Flexlay is the old Windstille editor and so far still somewhat functional.

Added: trunk/media/wiki/images/editor.png
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/images/editor.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/media/wiki/thumbnails/editor.png
===================================================================
(Binary files differ)


Property changes on: trunk/media/wiki/thumbnails/editor.png
___________________________________________________________________
Name: svn:mime-type
   + image/png



From grumbel at mail.berlios.de  Wed Mar 18 03:02:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 18 Mar 2009 03:02:19 +0100
Subject: [Windstille-commit] r2693 - trunk/windstille/src/editor
Message-ID: <200903180202.n2I22JCI015207@sheep.berlios.de>

Author: grumbel
Date: 2009-03-18 03:02:17 +0100 (Wed, 18 Mar 2009)
New Revision: 2693

Modified:
   trunk/windstille/src/editor/editor.cpp
   trunk/windstille/src/editor/windstille.glade
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Some experimentation with widgets and stuff

Modified: trunk/windstille/src/editor/editor.cpp
===================================================================
--- trunk/windstille/src/editor/editor.cpp	2009-03-17 14:15:31 UTC (rev 2692)
+++ trunk/windstille/src/editor/editor.cpp	2009-03-18 02:02:17 UTC (rev 2693)
@@ -1,17 +1,17 @@
 /*
-**  Galapix - an image viewer for large image collections
-**  Copyright (C) 2008 Ingo Ruhnke <grumbel at gmx.de>
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
 **
 **  This program is free software: you can redistribute it and/or modify
 **  it under the terms of the GNU General Public License as published by
 **  the Free Software Foundation, either version 3 of the License, or
 **  (at your option) any later version.
-**
+**  
 **  This program is distributed in the hope that it will be useful,
 **  but WITHOUT ANY WARRANTY; without even the implied warranty of
 **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 **  GNU General Public License for more details.
-**
+**  
 **  You should have received a copy of the GNU General Public License
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
@@ -22,6 +22,55 @@
 #include <libglademm/xml.h>
 #include <iostream>
 
+class MyModelColumns : public Gtk::TreeModel::ColumnRecord
+{
+public:
+  Gtk::TreeModelColumn<bool>          visible;
+  Gtk::TreeModelColumn<Glib::ustring> filename;
+  Gtk::TreeModelColumn<Glib::ustring> description;
+
+  MyModelColumns() { add(filename); add(visible); add(description); }
+};
+
+void create_tree(Gtk::TreeView& treeview)
+{
+  MyModelColumns m_columns;
+  Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(m_columns);
+
+  Gtk::TreeStore::iterator root = list_store->append();
+  (*root)[m_columns.visible]     = false;
+  (*root)[m_columns.filename]    = Glib::ustring("Hello World");
+  (*root)[m_columns.description] = Glib::ustring("Hello World");
+
+  for(int i = 0; i < 10; ++i)
+    {
+      Gtk::TreeStore::iterator it  = list_store->append(root->children());
+      (*it)[m_columns.visible]     = false;
+      (*it)[m_columns.filename]    = Glib::ustring("Hello World");
+      (*it)[m_columns.description] = Glib::ustring("Hello World");
+
+      Gtk::TreeModel::iterator it2  = list_store->append(it->children());
+      (*it)[m_columns.visible]      = true;
+      (*it2)[m_columns.filename]    = Glib::ustring("Hello World");
+      (*it2)[m_columns.description] = Glib::ustring("Hello World");
+    }
+
+  treeview.set_headers_clickable();
+  //treeview.set_headers_visible(false);
+  //treeview.set_grid_lines(Gtk::TREE_VIEW_GRID_LINES_BOTH);
+  treeview.set_enable_tree_lines();
+  treeview.set_model(list_store);
+
+
+  treeview.append_column("Name", m_columns.filename);
+  //treeview.append_column("Blaca", m_columns.description);
+  treeview.append_column_editable("Visible", m_columns.visible);
+
+  treeview.expand_all();
+
+  treeview.show();
+}
+
 int main(int argc, char** argv)
 {
   try 
@@ -31,13 +80,20 @@
 
       Glib::RefPtr<Gnome::Glade::Xml> xml = Gnome::Glade::Xml::create("windstille.glade");
 
+      Gtk::TreeView& treeview = dynamic_cast<Gtk::TreeView&>(*xml->get_widget("treeview1"));
+
+      create_tree(treeview);
+      
       Gtk::Window& window = dynamic_cast<Gtk::Window&>(*xml->get_widget("window1"));
-
       // Gtk::ScrolledWindow& hbox = dynamic_cast<Gtk::ScrolledWindow&>(*xml->get_widget("scrolledwindow1"));
       window.show();
 
       Gtk::Main::run(window);
     }
+  catch(std::exception& err)
+    {
+      std::cout << "Exception: " << err.what() << std::endl;
+    }
   catch(...)
     {
       std::cout << "Unknown exception catched" << std::endl;

Modified: trunk/windstille/src/editor/windstille.glade
===================================================================
--- trunk/windstille/src/editor/windstille.glade	2009-03-17 14:15:31 UTC (rev 2692)
+++ trunk/windstille/src/editor/windstille.glade	2009-03-18 02:02:17 UTC (rev 2693)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <!DOCTYPE glade-interface SYSTEM "glade-2.0.dtd">
-<!--Generated with glade3 3.4.5 on Sat Feb 14 18:05:56 2009 -->
+<!--Generated with glade3 3.4.5 on Wed Mar 18 03:01:47 2009 -->
 <glade-interface>
   <widget class="GtkWindow" id="window1">
     <property name="default_width">1024</property>
@@ -188,16 +188,185 @@
                 <property name="visible">True</property>
                 <property name="can_focus">True</property>
                 <child>
-                  <placeholder/>
+                  <widget class="GtkNotebook" id="notebook2">
+                    <property name="visible">True</property>
+                    <property name="can_focus">True</property>
+                    <child>
+                      <widget class="GtkTextView" id="textview4">
+                        <property name="visible">True</property>
+                        <property name="can_focus">True</property>
+                        <property name="text" translatable="yes">Windstille Informations
+=======================
+
+Windstille is a classic 2d jump'n shoot game in which the player will
+be placed in a foreign alien world and has to find its way back into
+safety. Windstille is currently available for GNU/Linux and Windows.
+Its webpage at which one might find new versions, source code,
+artworks and more informations is located at:
+
+ * http://windstille.berlios.de/
+
+The latest development version can be obtained by:
+
+ $ svn co svn://svn.berlios.de/windstille/trunk/windstille
+
+For informations on how to compile and run Windstille see the file
+INSTALL. Windstille makes use of OpenGL so you will need working
+hardware 3d support.
+
+Windstille is covered under the GNU GPL, which means that you can copy
+and even modify it pretty much as you like, as long as you keep the
+copyright headers in place and distribute the source too if you
+distribute binaries, see the file COPYING for details.
+
+
+# EOF #
+</property>
+                      </widget>
+                    </child>
+                    <child>
+                      <widget class="GtkLabel" id="label17">
+                        <property name="visible">True</property>
+                        <property name="label" translatable="yes">page 1</property>
+                      </widget>
+                      <packing>
+                        <property name="type">tab</property>
+                        <property name="tab_fill">False</property>
+                      </packing>
+                    </child>
+                  </widget>
+                  <packing>
+                    <property name="resize">False</property>
+                    <property name="shrink">False</property>
+                  </packing>
                 </child>
                 <child>
-                  <widget class="GtkTextView" id="textview2">
+                  <widget class="GtkVBox" id="vbox2">
                     <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <property name="text" translatable="yes">Add Object Selector here</property>
+                    <child>
+                      <widget class="GtkExpander" id="Object Selector">
+                        <property name="visible">True</property>
+                        <property name="can_focus">True</property>
+                        <child>
+                          <widget class="GtkTextView" id="textview2">
+                            <property name="height_request">300</property>
+                            <property name="visible">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="text" translatable="yes">Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+Add Object Selector here
+</property>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="Objects">
+                            <property name="visible">True</property>
+                            <property name="label" translatable="yes">Palette</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
+                      </widget>
+                      <packing>
+                        <property name="expand">False</property>
+                        <property name="fill">False</property>
+                      </packing>
+                    </child>
+                    <child>
+                      <widget class="GtkExpander" id="expander1">
+                        <property name="visible">True</property>
+                        <property name="can_focus">True</property>
+                        <child>
+                          <widget class="GtkTextView" id="textview1">
+                            <property name="height_request">200</property>
+                            <property name="visible">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="text" translatable="yes">Add Minimap here
+Add Minimap here
+Add Minimap here
+Add Minimap here
+Add Minimap here
+Add Minimap here
+</property>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="label1">
+                            <property name="visible">True</property>
+                            <property name="label" translatable="yes">Minimap</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
+                      </widget>
+                      <packing>
+                        <property name="expand">False</property>
+                        <property name="fill">False</property>
+                        <property name="position">1</property>
+                      </packing>
+                    </child>
+                    <child>
+                      <widget class="GtkExpander" id="expander2">
+                        <property name="visible">True</property>
+                        <property name="can_focus">True</property>
+                        <child>
+                          <widget class="GtkScrolledWindow" id="scrolledwindow2">
+                            <property name="height_request">300</property>
+                            <property name="visible">True</property>
+                            <property name="can_focus">True</property>
+                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
+                            <child>
+                              <widget class="GtkTreeView" id="treeview1">
+                                <property name="visible">True</property>
+                                <property name="can_focus">True</property>
+                              </widget>
+                            </child>
+                          </widget>
+                        </child>
+                        <child>
+                          <widget class="GtkLabel" id="label2">
+                            <property name="visible">True</property>
+                            <property name="label" translatable="yes">Objects</property>
+                          </widget>
+                          <packing>
+                            <property name="type">label_item</property>
+                          </packing>
+                        </child>
+                      </widget>
+                      <packing>
+                        <property name="expand">False</property>
+                        <property name="fill">False</property>
+                        <property name="position">2</property>
+                      </packing>
+                    </child>
                   </widget>
                   <packing>
-                    <property name="resize">False</property>
+                    <property name="resize">True</property>
                     <property name="shrink">True</property>
                   </packing>
                 </child>

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-17 14:15:31 UTC (rev 2692)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-18 02:02:17 UTC (rev 2693)
@@ -1,6 +1,6 @@
 /*
 **  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
 **
 **  This program is free software: you can redistribute it and/or modify
 **  it under the terms of the GNU General Public License as published by

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-17 14:15:31 UTC (rev 2692)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-18 02:02:17 UTC (rev 2693)
@@ -1,6 +1,6 @@
 /*
 **  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
 **
 **  This program is free software: you can redistribute it and/or modify
 **  it under the terms of the GNU General Public License as published by
@@ -23,6 +23,8 @@
 #include <gtkglmm.h>
 #include <gtkmm/gl/widget.h>
 
+/** OpenGL drawing area into which the Windstille game will be
+    embedded */
 class WindstilleWidget 
   : public Gtk::DrawingArea,
     public Gtk::GL::Widget<WindstilleWidget>



From grumbel at mail.berlios.de  Wed Mar 18 15:42:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 18 Mar 2009 15:42:32 +0100
Subject: [Windstille-commit] r2694 - trunk/htdocs
Message-ID: <200903181442.n2IEgWOt020928@sheep.berlios.de>

Author: grumbel
Date: 2009-03-18 15:42:31 +0100 (Wed, 18 Mar 2009)
New Revision: 2694

Modified:
   trunk/htdocs/contact.xml
Log:
--- some unknown new stuff (automatically inserted by the upload script) ---

Modified: trunk/htdocs/contact.xml
===================================================================
--- trunk/htdocs/contact.xml	2009-03-18 02:02:17 UTC (rev 2693)
+++ trunk/htdocs/contact.xml	2009-03-18 14:42:31 UTC (rev 2694)
@@ -17,7 +17,7 @@
         href="mailto:grumbel at gmx.de?subject=[Windstille] ">me</a> via
       ICQ (UIN: 59461927) or Jabber (ID: grumbel at jabber.org). You can
       also find me on IRC: <tt>irc.openprojects.net</tt>, Channel
-      <tt>#clanlib</tt>, Nick: grumbel.
+      <tt>#windstille</tt>, Nick: grumbel.
     </p>
   </section>
 



From grumbel at mail.berlios.de  Wed Mar 18 22:18:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 18 Mar 2009 22:18:41 +0100
Subject: [Windstille-commit] r2695 - trunk/windstille/src/editor
Message-ID: <200903182118.n2ILIfiD020666@sheep.berlios.de>

Author: grumbel
Date: 2009-03-18 22:18:40 +0100 (Wed, 18 Mar 2009)
New Revision: 2695

Added:
   trunk/windstille/src/editor/about_window.cpp
   trunk/windstille/src/editor/about_window.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/main.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
Modified:
   trunk/windstille/src/editor/SConstruct
Log:
Switched from Glade to bare Gtkmm code

Modified: trunk/windstille/src/editor/SConstruct
===================================================================
--- trunk/windstille/src/editor/SConstruct	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/SConstruct	2009-03-18 21:18:40 UTC (rev 2695)
@@ -9,7 +9,9 @@
 env.ParseConfig('pkg-config --cflags --libs libcurl')
 env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 libglademm-2.4 gtkglextmm-1.2')
 
-env.Program('editor', ['editor.cpp',
-                       'windstille_widget.cpp'])
+env.Program('editor', ['main.cpp',
+                       'object_tree.cpp',
+                       'about_window.cpp',
+                       'editor_window.cpp'])
 
 # EOF #

Added: trunk/windstille/src/editor/about_window.cpp
===================================================================
--- trunk/windstille/src/editor/about_window.cpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/about_window.cpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,53 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <gtkmm/stock.h>
+#include "about_window.hpp"
+
+AboutWindow::AboutWindow()
+{
+  //set_logo(0);
+  set_license("Windstille - A Sci-Fi Action-Adventure Game\n"
+              "Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>\n"
+              "\n"
+              "This program is free software: you can redistribute it and/or modify\n"
+              "it under the terms of the GNU General Public License as published by\n"
+              "the Free Software Foundation, either version 3 of the License, or\n"
+              "(at your option) any later version.\n"
+              "\n"
+              "This program is distributed in the hope that it will be useful,\n"
+              "but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
+              "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
+              "GNU General Public License for more details.\n"
+              "\n"
+              "You should have received a copy of the GNU General Public License\n"
+              "along with this program.  If not, see <http://www.gnu.org/licenses/>.\n");
+  set_name("Windstille Editor");
+  set_version("0.0.1");
+  set_comments("An Editor for Windstille");
+  
+  std::vector<Glib::ustring> authors;
+  authors.push_back("Ingo Ruhnke <grumbel at gmx.de>");
+  set_authors(authors);
+}
+
+AboutWindow::~AboutWindow()
+{
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/about_window.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/about_window.hpp
===================================================================
--- trunk/windstille/src/editor/about_window.hpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/about_window.hpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,42 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_ABOUT_WINDOW_HPP
+#define HEADER_ABOUT_WINDOW_HPP
+
+#include <gtkmm/aboutdialog.h>
+#include <gtkmm/box.h>
+#include <gtkmm/textview.h>
+#include <gtkmm/button.h>
+
+class AboutWindow : public Gtk::AboutDialog
+{
+private:
+
+public:
+  AboutWindow();
+  virtual ~AboutWindow();
+
+private:
+  AboutWindow(const AboutWindow&);
+  AboutWindow& operator=(const AboutWindow&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/about_window.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,168 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <iostream>
+#include <gtkmm/actiongroup.h>
+#include <gtkmm/uimanager.h>
+#include <gtkmm/toolbar.h>
+#include <gtkmm/stock.h>
+
+#include "about_window.hpp"
+#include "editor_window.hpp"
+
+EditorWindow::EditorWindow()
+{
+  set_title("Windstille Editor");
+
+  Glib::ustring ui_info =
+    "<ui>"
+    "  <menubar name='MenuBar'>"
+    "    <menu action='MenuFile'>"
+    "      <menuitem action='New'/>"
+    "      <menuitem action='Open'/>"
+    "      <menuitem action='Save'/>"
+    "      <separator/>"
+    "      <menuitem action='Quit'/>"
+    "    </menu>"
+    "    <menu action='MenuEdit'>"
+    "      <menuitem action='Cut'/>"
+    "      <menuitem action='Copy'/>"
+    "      <menuitem action='Paste'/>"
+    "    </menu>"
+    "    <menu action='MenuView'>"
+    "      <menuitem action='ZoomIn'/>"
+    "      <menuitem action='ZoomOut'/>"
+    "      <menuitem action='Zoom100'/>"
+    "    </menu>"
+    "    <menu action='MenuHelp'>"
+    "      <menuitem action='About'/>"
+    "    </menu>"
+    "  </menubar>"
+    "  <toolbar  name='ToolBar'>"
+    "    <toolitem action='New'/>"
+    "    <toolitem action='Open'/>"
+    "    <toolitem action='Save'/>"
+    "    <separator/>"
+    "    <toolitem action='Cut'/>"
+    "    <toolitem action='Copy'/>"
+    "    <toolitem action='Paste'/>"
+    "    <separator/>"
+    "    <toolitem action='ZoomIn'/>"
+    "    <toolitem action='ZoomOut'/>"
+    "    <toolitem action='Zoom100'/>"
+    "    <separator/>"
+    "    <toolitem action='Play'/>"
+    "    <separator/>"
+    "    <toolitem action='About'/>"
+    "    <toolitem action='Quit'/>"
+    "  </toolbar>"
+    "  <toolbar  name='ToolBox'>"
+    "    <toolitem action='Open'/>"
+    "    <toolitem action='Quit'/>"
+    "  </toolbar>"
+    "</ui>";
+
+  ui_manager   = Gtk::UIManager::create();
+  action_group = Gtk::ActionGroup::create();
+
+  action_group->add(Gtk::Action::create("MenuFile",    "_File"));
+  action_group->add(Gtk::Action::create("New",         Gtk::Stock::NEW));
+  action_group->add(Gtk::Action::create("Open",        Gtk::Stock::OPEN));
+  action_group->add(Gtk::Action::create("Save",        Gtk::Stock::SAVE));
+  action_group->add(Gtk::Action::create("Quit",        Gtk::Stock::QUIT),
+                    sigc::mem_fun(*this, &EditorWindow::on_quit));
+
+  action_group->add(Gtk::Action::create("MenuEdit",    "_Edit"));
+  action_group->add(Gtk::Action::create("Cut",         Gtk::Stock::CUT));
+  action_group->add(Gtk::Action::create("Copy",        Gtk::Stock::COPY));
+  action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE));
+
+  action_group->add(Gtk::Action::create("MenuView",    "_View"));
+  action_group->add(Gtk::Action::create("Zoom100",     Gtk::Stock::ZOOM_100));
+  action_group->add(Gtk::Action::create("ZoomIn",      Gtk::Stock::ZOOM_IN));
+  action_group->add(Gtk::Action::create("ZoomOut",     Gtk::Stock::ZOOM_OUT));
+
+  action_group->add(Gtk::Action::create("Play",        Gtk::Stock::MEDIA_PLAY));
+
+  action_group->add(Gtk::Action::create("MenuHelp",    "_Help"));
+  action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
+                    sigc::mem_fun(*this, &EditorWindow::on_about_clicked));
+
+  //sigc::mem_fun(*this, &EditorWindow::on_action_file_new) );
+  //sigc::mem_fun(*this, &EditorWindow::on_action_file_open) );
+  //sigc::mem_fun(*this, &EditorWindow::on_action_file_quit) );
+
+  ui_manager->insert_action_group(action_group);
+
+  ui_manager->add_ui_from_string(ui_info);
+
+  add_accel_group(ui_manager->get_accel_group());
+
+  // Vbox
+  vbox.pack_start(*ui_manager->get_widget("/MenuBar"), Gtk::PACK_SHRINK);
+  vbox.pack_start(*ui_manager->get_widget("/ToolBar"), Gtk::PACK_SHRINK);
+  vbox.add(hbox);
+  vbox.add(status);
+
+  // Hbox
+  hbox.pack_start(*ui_manager->get_widget("/ToolBox"), Gtk::PACK_SHRINK);
+  dynamic_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBox"))->set_orientation(Gtk::ORIENTATION_VERTICAL);
+  hbox.add(hpaned);
+
+  hpaned.add(text_view);
+  hpaned.add(vpaned);
+  vpaned.add1(object_tree);
+  vpaned.add2(object_tree2);
+
+  // Window
+  add(vbox);
+
+  text_view.set_size_request(800, 600);
+  //object_tree.set_size_request(300, 500);
+
+  // Show everything
+  text_view.show();
+  object_tree.show();
+  object_tree2.show();
+  status.show();
+
+  hpaned.show();
+  vpaned.show();
+
+  hbox.show();
+  vbox.show();
+}
+
+EditorWindow::~EditorWindow()
+{
+}
+
+void
+EditorWindow::on_about_clicked()
+{
+  AboutWindow about_dialog;
+  about_dialog.run();
+}
+
+void
+EditorWindow::on_quit()
+{
+  hide();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/editor_window.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,61 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_EDITOR_WINDOW_HPP
+#define HEADER_WINDSTILLE_EDITOR_EDITOR_WINDOW_HPP
+
+#include <gtkmm/box.h>
+#include <gtkmm/statusbar.h>
+#include <gtkmm/textview.h>
+#include <gtkmm/paned.h>
+#include <gtkmm/window.h>
+
+#include "object_tree.hpp"
+
+class EditorWindow : public Gtk::Window
+{
+private:
+  Gtk::VBox   vbox;
+  Gtk::HBox   hbox;
+  Gtk::HPaned hpaned;
+  Gtk::VPaned vpaned;
+  Gtk::Statusbar status;
+  
+  Gtk::TextView text_view;
+  ObjectTree    object_tree;
+  ObjectTree    object_tree2;
+
+  Glib::RefPtr<Gtk::UIManager>   ui_manager;
+  Glib::RefPtr<Gtk::ActionGroup> action_group;
+
+public:
+  EditorWindow();
+  virtual ~EditorWindow();
+
+protected:
+  void on_about_clicked();
+  void on_quit();
+
+private:
+  EditorWindow(const EditorWindow&);
+  EditorWindow& operator=(const EditorWindow&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/editor_window.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/main.cpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,48 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <iostream>
+#include <gtkmm.h>
+#include <gtkglmm.h>
+#include <gtkmm/gl/widget.h>
+
+#include "editor_window.hpp"
+#include "main.hpp"
+
+int main(int argc, char** argv)
+{
+  try 
+    {
+      Gtk::Main kit(&argc, &argv);
+      Gtk::GL::init(&argc, &argv);
+
+      EditorWindow window;
+
+      window.show();
+
+      Gtk::Main::run(window);
+    }
+  catch(std::exception& err)
+    {
+      std::cout << "Exception: " << err.what() << std::endl;
+    }
+
+  return 0;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/main.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/main.hpp
===================================================================
--- trunk/windstille/src/editor/main.hpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/main.hpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,24 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_MAIN_HPP
+#define HEADER_MAIN_HPP
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/main.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,81 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <gtkmm/treemodel.h>
+#include <gtkmm/treestore.h>
+#include <gtkmm/treemodelcolumn.h>
+#include "object_tree.hpp"
+
+class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
+{
+public:
+  Gtk::TreeModelColumn<Glib::ustring> type;
+  Gtk::TreeModelColumn<Glib::ustring> name;
+  Gtk::TreeModelColumn<bool>          visible;
+
+  ObjectTreeColumns() {
+    add(type); 
+    add(name); 
+    add(visible); 
+  }
+};
+
+ObjectTree::ObjectTree()
+{
+  ObjectTreeColumns columns;
+  Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(columns);
+
+  Gtk::TreeStore::iterator root = list_store->append();
+  (*root)[columns.type]    = Glib::ustring("Hello World");
+  (*root)[columns.name]    = Glib::ustring("Hello World");
+  (*root)[columns.visible] = false;
+
+  for(int i = 0; i < 10; ++i)
+    {
+      Gtk::TreeStore::iterator it  = list_store->append(root->children());
+      (*it)[columns.type]    = Glib::ustring("Hello World");
+      (*it)[columns.name]    = Glib::ustring("Hello World");
+      (*it)[columns.visible] = false;
+
+      Gtk::TreeModel::iterator it2  = list_store->append(it->children());
+      (*it2)[columns.type]    = Glib::ustring("Hello World");
+      (*it2)[columns.name]    = Glib::ustring("Hello World");
+      (*it2)[columns.visible] = false;
+    }
+
+  treeview.set_headers_clickable();
+  // set_headers_visible(false);
+  // set_grid_lines(Gtk::TREE_VIEW_GRID_LINES_BOTH);
+  treeview.set_enable_tree_lines();
+  treeview.set_model(list_store);
+
+  treeview.append_column("Type", columns.type);
+  treeview.append_column("Name", columns.name);
+  treeview.append_column_editable("Visible", columns.visible);
+
+  treeview.expand_all();
+
+  add(treeview);
+  treeview.show();
+}
+
+ObjectTree::~ObjectTree()
+{
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_tree.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-18 14:42:31 UTC (rev 2694)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-18 21:18:40 UTC (rev 2695)
@@ -0,0 +1,42 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_OBJECT_TREE_HPP
+#define HEADER_OBJECT_TREE_HPP
+
+#include <gtkmm/treeview.h>
+#include <gtkmm/scrolledwindow.h>
+
+class ObjectTree : public Gtk::ScrolledWindow
+{
+private:
+  Gtk::TreeView treeview;
+
+public:
+  ObjectTree();
+  virtual ~ObjectTree();
+  
+
+private:
+  ObjectTree(const ObjectTree&);
+  ObjectTree& operator=(const ObjectTree&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_tree.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Wed Mar 18 23:32:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 18 Mar 2009 23:32:28 +0100
Subject: [Windstille-commit] r2696 - trunk/windstille/src/editor
Message-ID: <200903182232.n2IMWSCG029779@sheep.berlios.de>

Author: grumbel
Date: 2009-03-18 23:32:28 +0100 (Wed, 18 Mar 2009)
New Revision: 2696

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/object_tree.cpp
Log:
Some placeholder stuff for load/save/etc.

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-18 21:18:40 UTC (rev 2695)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-18 22:32:28 UTC (rev 2696)
@@ -17,6 +17,7 @@
 */
 
 #include <iostream>
+#include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
 #include <gtkmm/uimanager.h>
 #include <gtkmm/toolbar.h>
@@ -36,6 +37,7 @@
     "      <menuitem action='New'/>"
     "      <menuitem action='Open'/>"
     "      <menuitem action='Save'/>"
+    "      <menuitem action='Close'/>"
     "      <separator/>"
     "      <menuitem action='Quit'/>"
     "    </menu>"
@@ -81,9 +83,14 @@
   action_group = Gtk::ActionGroup::create();
 
   action_group->add(Gtk::Action::create("MenuFile",    "_File"));
-  action_group->add(Gtk::Action::create("New",         Gtk::Stock::NEW));
-  action_group->add(Gtk::Action::create("Open",        Gtk::Stock::OPEN));
-  action_group->add(Gtk::Action::create("Save",        Gtk::Stock::SAVE));
+  action_group->add(Gtk::Action::create("New",         Gtk::Stock::NEW),
+                    sigc::mem_fun(*this, &EditorWindow::on_new));
+  action_group->add(Gtk::Action::create("Open",        Gtk::Stock::OPEN),
+                    sigc::mem_fun(*this, &EditorWindow::on_open));
+  action_group->add(Gtk::Action::create("Save",        Gtk::Stock::SAVE),
+                    sigc::mem_fun(*this, &EditorWindow::on_save));
+  action_group->add(Gtk::Action::create("Close",       Gtk::Stock::CLOSE),
+                    sigc::mem_fun(*this, &EditorWindow::on_close));
   action_group->add(Gtk::Action::create("Quit",        Gtk::Stock::QUIT),
                     sigc::mem_fun(*this, &EditorWindow::on_quit));
 
@@ -117,35 +124,25 @@
   vbox.pack_start(*ui_manager->get_widget("/MenuBar"), Gtk::PACK_SHRINK);
   vbox.pack_start(*ui_manager->get_widget("/ToolBar"), Gtk::PACK_SHRINK);
   vbox.add(hbox);
-  vbox.add(status);
+  vbox.pack_end(status, Gtk::PACK_SHRINK);
 
   // Hbox
   hbox.pack_start(*ui_manager->get_widget("/ToolBox"), Gtk::PACK_SHRINK);
   dynamic_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBox"))->set_orientation(Gtk::ORIENTATION_VERTICAL);
   hbox.add(hpaned);
 
-  hpaned.add(text_view);
+  notebook.set_size_request(1024, 640);
+
+  vpaned.set_size_request(300, -1);
+
+  hpaned.add(notebook);
   hpaned.add(vpaned);
   vpaned.add1(object_tree);
+  
   vpaned.add2(object_tree2);
 
   // Window
   add(vbox);
-
-  text_view.set_size_request(800, 600);
-  //object_tree.set_size_request(300, 500);
-
-  // Show everything
-  text_view.show();
-  object_tree.show();
-  object_tree2.show();
-  status.show();
-
-  hpaned.show();
-  vpaned.show();
-
-  hbox.show();
-  vbox.show();
 }
 
 EditorWindow::~EditorWindow()
@@ -164,5 +161,82 @@
 {
   hide();
 }
+
+void
+EditorWindow::on_new()
+{
+  std::cout << "on_new" << std::endl;
+  // FIXME: Memleaking placeholder
+  Gtk::TextView* page = new Gtk::TextView();
+  //page->set_text("Hello World");
+  notebook.append_page(*page, Glib::ustring::compose("Sector %1", notebook.get_n_pages()));
+  page->show();
+}
+
+void
+EditorWindow::on_open()
+{
+  Gtk::FileChooserDialog dialog("Open File",
+                                Gtk::FILE_CHOOSER_ACTION_OPEN);
+  dialog.set_transient_for(*this);
+
+  dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
+  dialog.add_button(Gtk::Stock::OPEN,   Gtk::RESPONSE_OK);
+
+  switch(dialog.run())
+    {
+      case(Gtk::RESPONSE_OK):
+        {
+          std::cout << "Select clicked." << std::endl;
+          std::cout << "Folder selected: " << dialog.get_filename()
+                    << std::endl;
+          break;
+        }
+
+      case(Gtk::RESPONSE_CANCEL):
+        {
+          std::cout << "Cancel clicked." << std::endl;
+          break;
+        }
+    }
+}
+
+void
+EditorWindow::on_save()
+{
+  Gtk::FileChooserDialog dialog("Save File",
+                                Gtk::FILE_CHOOSER_ACTION_SAVE);
+  dialog.set_transient_for(*this);
+
+  dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
+  dialog.add_button(Gtk::Stock::SAVE,   Gtk::RESPONSE_OK);
+
+  switch(dialog.run())
+    {
+      case(Gtk::RESPONSE_OK):
+        {
+          std::cout << "Select clicked." << std::endl;
+          std::cout << "Folder selected: " << dialog.get_filename()
+                    << std::endl;
+          break;
+        }
+
+      case(Gtk::RESPONSE_CANCEL):
+        {
+          std::cout << "Cancel clicked." << std::endl;
+          break;
+        }
+    }
+}
+
+void
+EditorWindow::on_close()
+{
+  int page = notebook.get_current_page();
+  if (page != -1)
+    {
+      notebook.remove_page(page);
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-18 21:18:40 UTC (rev 2695)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-18 22:32:28 UTC (rev 2696)
@@ -24,6 +24,7 @@
 #include <gtkmm/textview.h>
 #include <gtkmm/paned.h>
 #include <gtkmm/window.h>
+#include <gtkmm/notebook.h>
 
 #include "object_tree.hpp"
 
@@ -36,7 +37,7 @@
   Gtk::VPaned vpaned;
   Gtk::Statusbar status;
   
-  Gtk::TextView text_view;
+  Gtk::Notebook notebook;
   ObjectTree    object_tree;
   ObjectTree    object_tree2;
 
@@ -48,6 +49,11 @@
   virtual ~EditorWindow();
 
 protected:
+  void on_new();
+  void on_open();
+  void on_save();
+  void on_close();
+
   void on_about_clicked();
   void on_quit();
 

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-18 21:18:40 UTC (rev 2695)
+++ trunk/windstille/src/editor/main.cpp	2009-03-18 22:32:28 UTC (rev 2696)
@@ -33,7 +33,7 @@
 
       EditorWindow window;
 
-      window.show();
+      window.show_all();
 
       Gtk::Main::run(window);
     }

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-18 21:18:40 UTC (rev 2695)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-18 22:32:28 UTC (rev 2696)
@@ -71,7 +71,6 @@
   treeview.expand_all();
 
   add(treeview);
-  treeview.show();
 }
 
 ObjectTree::~ObjectTree()



From grumbel at mail.berlios.de  Thu Mar 19 01:01:14 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 01:01:14 +0100
Subject: [Windstille-commit] r2697 - trunk/windstille/src/editor
Message-ID: <200903190001.n2J01ESt028165@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 01:01:13 +0100 (Thu, 19 Mar 2009)
New Revision: 2697

Added:
   trunk/windstille/src/editor/icon.png
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_selector.hpp
Removed:
   trunk/windstille/src/editor/editor.cpp
Modified:
   trunk/windstille/src/editor/SConstruct
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Some more placeholder stuff for the editor

Modified: trunk/windstille/src/editor/SConstruct
===================================================================
--- trunk/windstille/src/editor/SConstruct	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/SConstruct	2009-03-19 00:01:13 UTC (rev 2697)
@@ -11,7 +11,9 @@
 
 env.Program('editor', ['main.cpp',
                        'object_tree.cpp',
+                       'object_selector.cpp',
                        'about_window.cpp',
+                       'windstille_widget.cpp',
                        'editor_window.cpp'])
 
 # EOF #

Deleted: trunk/windstille/src/editor/editor.cpp
===================================================================
--- trunk/windstille/src/editor/editor.cpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/editor.cpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -1,105 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include <gtkglmm.h>
-#include <gtkmm.h>
-#include <gtkmm/gl/widget.h>
-#include <libglademm/xml.h>
-#include <iostream>
-
-class MyModelColumns : public Gtk::TreeModel::ColumnRecord
-{
-public:
-  Gtk::TreeModelColumn<bool>          visible;
-  Gtk::TreeModelColumn<Glib::ustring> filename;
-  Gtk::TreeModelColumn<Glib::ustring> description;
-
-  MyModelColumns() { add(filename); add(visible); add(description); }
-};
-
-void create_tree(Gtk::TreeView& treeview)
-{
-  MyModelColumns m_columns;
-  Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(m_columns);
-
-  Gtk::TreeStore::iterator root = list_store->append();
-  (*root)[m_columns.visible]     = false;
-  (*root)[m_columns.filename]    = Glib::ustring("Hello World");
-  (*root)[m_columns.description] = Glib::ustring("Hello World");
-
-  for(int i = 0; i < 10; ++i)
-    {
-      Gtk::TreeStore::iterator it  = list_store->append(root->children());
-      (*it)[m_columns.visible]     = false;
-      (*it)[m_columns.filename]    = Glib::ustring("Hello World");
-      (*it)[m_columns.description] = Glib::ustring("Hello World");
-
-      Gtk::TreeModel::iterator it2  = list_store->append(it->children());
-      (*it)[m_columns.visible]      = true;
-      (*it2)[m_columns.filename]    = Glib::ustring("Hello World");
-      (*it2)[m_columns.description] = Glib::ustring("Hello World");
-    }
-
-  treeview.set_headers_clickable();
-  //treeview.set_headers_visible(false);
-  //treeview.set_grid_lines(Gtk::TREE_VIEW_GRID_LINES_BOTH);
-  treeview.set_enable_tree_lines();
-  treeview.set_model(list_store);
-
-
-  treeview.append_column("Name", m_columns.filename);
-  //treeview.append_column("Blaca", m_columns.description);
-  treeview.append_column_editable("Visible", m_columns.visible);
-
-  treeview.expand_all();
-
-  treeview.show();
-}
-
-int main(int argc, char** argv)
-{
-  try 
-    {
-      Gtk::Main kit(&argc, &argv);
-      Gtk::GL::init(&argc, &argv);
-
-      Glib::RefPtr<Gnome::Glade::Xml> xml = Gnome::Glade::Xml::create("windstille.glade");
-
-      Gtk::TreeView& treeview = dynamic_cast<Gtk::TreeView&>(*xml->get_widget("treeview1"));
-
-      create_tree(treeview);
-      
-      Gtk::Window& window = dynamic_cast<Gtk::Window&>(*xml->get_widget("window1"));
-      // Gtk::ScrolledWindow& hbox = dynamic_cast<Gtk::ScrolledWindow&>(*xml->get_widget("scrolledwindow1"));
-      window.show();
-
-      Gtk::Main::run(window);
-    }
-  catch(std::exception& err)
-    {
-      std::cout << "Exception: " << err.what() << std::endl;
-    }
-  catch(...)
-    {
-      std::cout << "Unknown exception catched" << std::endl;
-    }
-
-  return 0;
-}
-
-/* EOF */

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -23,6 +23,7 @@
 #include <gtkmm/toolbar.h>
 #include <gtkmm/stock.h>
 
+#include "windstille_widget.hpp"
 #include "about_window.hpp"
 #include "editor_window.hpp"
 
@@ -135,11 +136,13 @@
 
   vpaned.set_size_request(300, -1);
 
+  object_selector.set_size_request(-1, 300);
+
   hpaned.add(notebook);
   hpaned.add(vpaned);
-  vpaned.add1(object_tree);
-  
-  vpaned.add2(object_tree2);
+ 
+  vpaned.add1(object_selector);
+  vpaned.add2(object_tree);
 
   // Window
   add(vbox);
@@ -166,11 +169,21 @@
 EditorWindow::on_new()
 {
   std::cout << "on_new" << std::endl;
-  // FIXME: Memleaking placeholder
-  Gtk::TextView* page = new Gtk::TextView();
-  //page->set_text("Hello World");
-  notebook.append_page(*page, Glib::ustring::compose("Sector %1", notebook.get_n_pages()));
-  page->show();
+  if (0)
+    {
+      // FIXME: Memleaking placeholder
+      Gtk::TextView* page = new Gtk::TextView();
+      //page->set_text("Hello World");
+      notebook.append_page(*page, Glib::ustring::compose("Sector %1", notebook.get_n_pages()));
+      page->show();
+    }
+  else
+    {
+      WindstilleWidget* windstille = new WindstilleWidget();
+      notebook.set_current_page
+        (notebook.append_page(*windstille, Glib::ustring::compose("Sector %1", notebook.get_n_pages())));
+      windstille->show();
+    }
 }
 
 void

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -26,6 +26,7 @@
 #include <gtkmm/window.h>
 #include <gtkmm/notebook.h>
 
+#include "object_selector.hpp"
 #include "object_tree.hpp"
 
 class EditorWindow : public Gtk::Window
@@ -38,8 +39,8 @@
   Gtk::Statusbar status;
   
   Gtk::Notebook notebook;
-  ObjectTree    object_tree;
-  ObjectTree    object_tree2;
+  ObjectSelector object_selector;
+  ObjectTree     object_tree;
 
   Glib::RefPtr<Gtk::UIManager>   ui_manager;
   Glib::RefPtr<Gtk::ActionGroup> action_group;

Added: trunk/windstille/src/editor/icon.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/src/editor/icon.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -0,0 +1,70 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <gtkmm/liststore.h>
+#include <gtkmm/treemodelcolumn.h>
+#include "object_selector.hpp"
+
+class ObjectIconColumns : public Gtk::TreeModel::ColumnRecord
+{
+public:
+  Gtk::TreeModelColumn<Glib::ustring> pathname;
+  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> >   icon;
+  
+  ObjectIconColumns() {
+    add(pathname); 
+    add(icon);
+  }
+};
+
+ObjectSelector::ObjectSelector()
+  : label("Object Selector", Gtk::ALIGN_LEFT)
+{
+  ObjectIconColumns columns;
+  Glib::RefPtr<Gtk::ListStore> list_store = Gtk::ListStore::create(columns);
+
+  Glib::RefPtr<Gdk::Pixbuf> icon = Gdk::Pixbuf::create_from_file("icon.png");
+
+  iconview.modify_base(Gtk::STATE_NORMAL, Gdk::Color("grey"));
+  
+  for(int i = 0; i < 10; ++i)
+    {
+      Gtk::ListStore::iterator it  = list_store->append();
+      (*it)[columns.pathname] = Glib::ustring("Hello World");
+      (*it)[columns.icon]     = icon;
+    }
+  iconview.set_model(list_store);
+
+  iconview.set_pixbuf_column(columns.icon);
+  //iconview.set_text_column(columns.pathname);
+
+  iconview.set_model(list_store);
+
+  scrolled.add(iconview);
+  pack_start(label, Gtk::PACK_SHRINK);
+  add(scrolled);
+  
+  show_all();
+}
+
+ObjectSelector::~ObjectSelector()
+{
+
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_selector.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/object_selector.hpp
===================================================================
--- trunk/windstille/src/editor/object_selector.hpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/object_selector.hpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -0,0 +1,45 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_SELECTOR_HPP
+#define HEADER_WINDSTILLE_EDITOR_OBJECT_SELECTOR_HPP
+
+#include <gtkmm/box.h>
+#include <gtkmm/scrolledwindow.h>
+#include <gtkmm/label.h>
+#include <gtkmm/iconview.h>
+
+class ObjectSelector : public Gtk::VBox
+{
+private:
+  Gtk::Label label;
+  Gtk::ScrolledWindow scrolled;
+  Gtk::IconView iconview;
+  
+public:
+  ObjectSelector();
+  virtual ~ObjectSelector();
+
+private:
+  ObjectSelector(const ObjectSelector&);
+  ObjectSelector& operator=(const ObjectSelector&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_selector.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -16,6 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <gtkmm/stock.h>
+#include <gtkmm/toolbar.h>
 #include <gtkmm/treemodel.h>
 #include <gtkmm/treestore.h>
 #include <gtkmm/treemodelcolumn.h>
@@ -36,6 +38,7 @@
 };
 
 ObjectTree::ObjectTree()
+  : label("Scene Tree", Gtk::ALIGN_LEFT)
 {
   ObjectTreeColumns columns;
   Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(columns);
@@ -58,9 +61,8 @@
       (*it2)[columns.visible] = false;
     }
 
-  treeview.set_headers_clickable();
-  // set_headers_visible(false);
-  // set_grid_lines(Gtk::TREE_VIEW_GRID_LINES_BOTH);
+  //treeview.set_headers_clickable();
+  treeview.set_headers_visible(false);
   treeview.set_enable_tree_lines();
   treeview.set_model(list_store);
 
@@ -70,7 +72,32 @@
 
   treeview.expand_all();
 
-  add(treeview);
+  ui_manager   = Gtk::UIManager::create();
+  action_group = Gtk::ActionGroup::create();
+  
+  action_group->add(Gtk::Action::create("ExpandAll", Gtk::Stock::MEDIA_PLAY));
+  action_group->add(Gtk::Action::create("ShowAll",   Gtk::Stock::ZOOM_100));
+
+  ui_manager->insert_action_group(action_group);
+
+  ui_manager->add_ui_from_string("<ui>"
+                                 "  <toolbar  name='ToolBar'>"
+                                 "    <toolitem action='ExpandAll'/>"
+                                 "    <toolitem action='ShowAll'/>"
+                                 "  </toolbar>"
+                                 "</ui>");
+  
+  Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
+
+  toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
+
+  scrolled.add(treeview);
+
+  pack_start(label, Gtk::PACK_SHRINK);
+  pack_start(toolbar, Gtk::PACK_SHRINK);
+  add(scrolled);
+
+  show_all();
 }
 
 ObjectTree::~ObjectTree()

Modified: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -16,17 +16,26 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_OBJECT_TREE_HPP
-#define HEADER_OBJECT_TREE_HPP
+#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_TREE_HPP
+#define HEADER_WINDSTILLE_EDITOR_OBJECT_TREE_HPP
 
 #include <gtkmm/treeview.h>
 #include <gtkmm/scrolledwindow.h>
+#include <gtkmm/label.h>
+#include <gtkmm/box.h>
+#include <gtkmm/uimanager.h>
+#include <gtkmm/actiongroup.h>
 
-class ObjectTree : public Gtk::ScrolledWindow
+class ObjectTree : public Gtk::VBox
 {
 private:
+  Gtk::Label label;
+  Gtk::ScrolledWindow scrolled;
   Gtk::TreeView treeview;
 
+  Glib::RefPtr<Gtk::UIManager>   ui_manager;
+  Glib::RefPtr<Gtk::ActionGroup> action_group;
+
 public:
   ObjectTree();
   virtual ~ObjectTree();

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-18 22:32:28 UTC (rev 2696)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 00:01:13 UTC (rev 2697)
@@ -87,13 +87,13 @@
 
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
-  if (!glwindow->gl_begin(get_gl_context()))
-    return;
+  if (glwindow->gl_begin(get_gl_context()))
+    {
+      //Framebuffer::init();
+      //Framebuffer::reshape(Size(get_width(), get_height()));
 
-  //Framebuffer::init();
-  //Framebuffer::reshape(Size(get_width(), get_height()));
-
-  glwindow->gl_end();
+      glwindow->gl_end();
+    }
 }
 
 bool
@@ -102,7 +102,7 @@
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   // *** OpenGL BEGIN ***
-  if (!glwindow->gl_begin(get_gl_context()))
+  if (glwindow->gl_begin(get_gl_context()))
     return false;
 
   //Framebuffer::reshape(Size(get_width(), get_height()));



From grumbel at mail.berlios.de  Thu Mar 19 01:49:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 01:49:10 +0100
Subject: [Windstille-commit] r2698 - trunk/windstille/src/editor
Message-ID: <200903190049.n2J0nAsR014850@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 01:49:09 +0100 (Thu, 19 Mar 2009)
New Revision: 2698

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
More placehorder stuff, draw a first quad in OpenGL

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-19 00:01:13 UTC (rev 2697)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-19 00:49:09 UTC (rev 2698)
@@ -30,6 +30,7 @@
 EditorWindow::EditorWindow()
 {
   set_title("Windstille Editor");
+  set_default_size(800, 600);
 
   Glib::ustring ui_info =
     "<ui>"
@@ -132,17 +133,14 @@
   dynamic_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBox"))->set_orientation(Gtk::ORIENTATION_VERTICAL);
   hbox.add(hpaned);
 
-  notebook.set_size_request(1024, 640);
-
-  vpaned.set_size_request(300, -1);
-
-  object_selector.set_size_request(-1, 300);
-
-  hpaned.add(notebook);
-  hpaned.add(vpaned);
+  vpaned.set_size_request(250, -1);
+  //object_selector.set_size_request(-1, 300);
+  
+  hpaned.pack1(notebook, Gtk::EXPAND);
+  hpaned.pack2(vpaned,   Gtk::SHRINK);
  
-  vpaned.add1(object_selector);
-  vpaned.add2(object_tree);
+  vpaned.pack1(object_selector, Gtk::EXPAND);
+  vpaned.pack2(object_tree,     Gtk::SHRINK);
 
   // Window
   add(vbox);

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-19 00:01:13 UTC (rev 2697)
+++ trunk/windstille/src/editor/main.cpp	2009-03-19 00:49:09 UTC (rev 2698)
@@ -32,7 +32,7 @@
       Gtk::GL::init(&argc, &argv);
 
       EditorWindow window;
-
+      
       window.show_all();
 
       Gtk::Main::run(window);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 00:01:13 UTC (rev 2697)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 00:49:09 UTC (rev 2698)
@@ -89,9 +89,14 @@
 
   if (glwindow->gl_begin(get_gl_context()))
     {
-      //Framebuffer::init();
-      //Framebuffer::reshape(Size(get_width(), get_height()));
+      glViewport(0, 0, get_width(), get_height());
+      glMatrixMode(GL_PROJECTION);
+      glLoadIdentity();
+      glOrtho(0.0, get_width(), get_height(), 0.0, 1000.0, -1000.0);
 
+      glMatrixMode(GL_MODELVIEW);
+      glLoadIdentity();
+  
       glwindow->gl_end();
     }
 }
@@ -102,15 +107,25 @@
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   // *** OpenGL BEGIN ***
-  if (glwindow->gl_begin(get_gl_context()))
-    return false;
+  if (!glwindow->gl_begin(get_gl_context()))
+    {
+      return false;
+    }
+  else
+    {
+      glViewport(0, 0, get_width(), get_height());
+      glMatrixMode(GL_PROJECTION);
+      glLoadIdentity();
+      glOrtho(0.0, get_width(), get_height(), 0.0, 1000.0, -1000.0);
 
-  //Framebuffer::reshape(Size(get_width(), get_height()));
+      glMatrixMode(GL_MODELVIEW);
+      glLoadIdentity();
+  
 
-  glwindow->gl_end();
-  // *** OpenGL END ***
+      glwindow->gl_end();
 
-  return true;
+      return true;
+    }
 }
 
 bool
@@ -121,7 +136,15 @@
   if (!glwindow->gl_begin(get_gl_context()))
     return false;
 
-  //viewer->draw();
+  std::cout << "Draw" << std::endl;
+  {
+    glBegin(GL_QUADS);
+    glVertex2f(150, 100);
+    glVertex2f(200, 100);
+    glVertex2f(200, 200);
+    glVertex2f(100, 200);
+    glEnd();
+  }
 
   // Swap buffers.
   if (glwindow->is_double_buffered())



From grumbel at mail.berlios.de  Thu Mar 19 14:50:10 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 14:50:10 +0100
Subject: [Windstille-commit] r2699 - trunk/windstille/src/editor
Message-ID: <200903191350.n2JDoAam017799@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 14:50:09 +0100 (Thu, 19 Mar 2009)
New Revision: 2699

Added:
   trunk/windstille/src/editor/type.png
Removed:
   trunk/windstille/src/editor/catalog/
   trunk/windstille/src/editor/glade.sh
   trunk/windstille/src/editor/module/
   trunk/windstille/src/editor/windstille-editor.sh
   trunk/windstille/src/editor/windstille.glade
Modified:
   trunk/windstille/src/editor/SConstruct
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_selector.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Removed unused files, added some drag&drop

Modified: trunk/windstille/src/editor/SConstruct
===================================================================
--- trunk/windstille/src/editor/SConstruct	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/SConstruct	2009-03-19 13:50:09 UTC (rev 2699)
@@ -7,7 +7,7 @@
 env.ParseConfig('sdl-config --cflags --libs')
 env.ParseConfig('Magick++-config --libs --cppflags')
 env.ParseConfig('pkg-config --cflags --libs libcurl')
-env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 libglademm-2.4 gtkglextmm-1.2')
+env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
 env.Program('editor', ['main.cpp',
                        'object_tree.cpp',

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-19 13:50:09 UTC (rev 2699)
@@ -30,7 +30,7 @@
 EditorWindow::EditorWindow()
 {
   set_title("Windstille Editor");
-  set_default_size(800, 600);
+  set_default_size(1024, 768);
 
   Glib::ustring ui_info =
     "<ui>"
@@ -133,8 +133,9 @@
   dynamic_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBox"))->set_orientation(Gtk::ORIENTATION_VERTICAL);
   hbox.add(hpaned);
 
-  vpaned.set_size_request(250, -1);
-  //object_selector.set_size_request(-1, 300);
+  // vpaned.set_size_request(250, -1);
+  //object_selector.set_size_request(250, 300);
+  //object_tree.set_size_request(250, 300);
   
   hpaned.pack1(notebook, Gtk::EXPAND);
   hpaned.pack2(vpaned,   Gtk::SHRINK);
@@ -142,6 +143,9 @@
   vpaned.pack1(object_selector, Gtk::EXPAND);
   vpaned.pack2(object_tree,     Gtk::SHRINK);
 
+  hpaned.set_position(730);
+  vpaned.set_position(420);
+
   // Window
   add(vbox);
 }

Deleted: trunk/windstille/src/editor/glade.sh
===================================================================
--- trunk/windstille/src/editor/glade.sh	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/glade.sh	2009-03-19 13:50:09 UTC (rev 2699)
@@ -1,11 +0,0 @@
-#!/bin/sh
-
-GLADE_CATALOG_PATH=catalog/
-export GLADE_CATALOG_PATH
-
-GLADE_MODULE_PATH=module/
-export GLADE_MODULE_PATH
-
-exec glade-3 windstille.glade
-
-# EOF #

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-19 13:50:09 UTC (rev 2699)
@@ -55,6 +55,13 @@
 
   iconview.set_model(list_store);
 
+  std::vector<Gtk::TargetEntry> targets;
+  targets.push_back(Gtk::TargetEntry("WindstilleObject"));
+  iconview.drag_source_set(targets, Gdk::BUTTON1_MASK, Gdk::ACTION_COPY);
+  iconview.signal_drag_begin().connect(sigc::mem_fun(*this, &ObjectSelector::on_drag_begin));
+
+  scrolled.set_policy(Gtk::POLICY_NEVER, Gtk::POLICY_ALWAYS);
+
   scrolled.add(iconview);
   pack_start(label, Gtk::PACK_SHRINK);
   add(scrolled);
@@ -66,5 +73,11 @@
 {
 
 }
+
+void
+ObjectSelector::on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context)
+{
+  context->set_icon(Gdk::Pixbuf::create_from_file("icon.png"), 0, 0);
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_selector.hpp
===================================================================
--- trunk/windstille/src/editor/object_selector.hpp	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/object_selector.hpp	2009-03-19 13:50:09 UTC (rev 2699)
@@ -35,6 +35,9 @@
   ObjectSelector();
   virtual ~ObjectSelector();
 
+protected:
+  virtual void on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context);
+
 private:
   ObjectSelector(const ObjectSelector&);
   ObjectSelector& operator=(const ObjectSelector&);

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-19 13:50:09 UTC (rev 2699)
@@ -26,7 +26,7 @@
 class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
 {
 public:
-  Gtk::TreeModelColumn<Glib::ustring> type;
+  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type;
   Gtk::TreeModelColumn<Glib::ustring> name;
   Gtk::TreeModelColumn<bool>          visible;
 
@@ -43,20 +43,21 @@
   ObjectTreeColumns columns;
   Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(columns);
 
+ 
   Gtk::TreeStore::iterator root = list_store->append();
-  (*root)[columns.type]    = Glib::ustring("Hello World");
-  (*root)[columns.name]    = Glib::ustring("Hello World");
+  (*root)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
+  (*root)[columns.name]    = Glib::ustring("Scene");
   (*root)[columns.visible] = false;
 
   for(int i = 0; i < 10; ++i)
     {
       Gtk::TreeStore::iterator it  = list_store->append(root->children());
-      (*it)[columns.type]    = Glib::ustring("Hello World");
+      (*it)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
       (*it)[columns.name]    = Glib::ustring("Hello World");
       (*it)[columns.visible] = false;
 
       Gtk::TreeModel::iterator it2  = list_store->append(it->children());
-      (*it2)[columns.type]    = Glib::ustring("Hello World");
+      (*it2)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
       (*it2)[columns.name]    = Glib::ustring("Hello World");
       (*it2)[columns.visible] = false;
     }
@@ -65,6 +66,7 @@
   treeview.set_headers_visible(false);
   treeview.set_enable_tree_lines();
   treeview.set_model(list_store);
+  treeview.set_reorderable();
 
   treeview.append_column("Type", columns.type);
   treeview.append_column("Name", columns.name);
@@ -91,6 +93,7 @@
 
   toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
 
+  scrolled.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS);
   scrolled.add(treeview);
 
   pack_start(label, Gtk::PACK_SHRINK);

Added: trunk/windstille/src/editor/type.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/src/editor/type.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Deleted: trunk/windstille/src/editor/windstille-editor.sh
===================================================================
--- trunk/windstille/src/editor/windstille-editor.sh	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/windstille-editor.sh	2009-03-19 13:50:09 UTC (rev 2699)
@@ -1,11 +0,0 @@
-#!/bin/sh
-
-GLADE_CATALOG_PATH=catalog/
-export GLADE_CATALOG_PATH
-
-GLADE_MODULE_PATH=module/
-export GLADE_MODULE_PATH
-
-exec ./editor
-
-# EOF #

Deleted: trunk/windstille/src/editor/windstille.glade
===================================================================
--- trunk/windstille/src/editor/windstille.glade	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/windstille.glade	2009-03-19 13:50:09 UTC (rev 2699)
@@ -1,396 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<!DOCTYPE glade-interface SYSTEM "glade-2.0.dtd">
-<!--Generated with glade3 3.4.5 on Wed Mar 18 03:01:47 2009 -->
-<glade-interface>
-  <widget class="GtkWindow" id="window1">
-    <property name="default_width">1024</property>
-    <property name="default_height">768</property>
-    <child>
-      <widget class="GtkVBox" id="vbox1">
-        <property name="visible">True</property>
-        <child>
-          <widget class="GtkMenuBar" id="menubar1">
-            <property name="visible">True</property>
-            <child>
-              <widget class="GtkMenuItem" id="menuitem1">
-                <property name="visible">True</property>
-                <property name="label" translatable="yes">_File</property>
-                <property name="use_underline">True</property>
-                <child>
-                  <widget class="GtkMenu" id="menu1">
-                    <property name="visible">True</property>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem1">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-new</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem2">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-open</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem3">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-save</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem4">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-save-as</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkSeparatorMenuItem" id="separatormenuitem1">
-                        <property name="visible">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem5">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-quit</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                  </widget>
-                </child>
-              </widget>
-            </child>
-            <child>
-              <widget class="GtkMenuItem" id="menuitem2">
-                <property name="visible">True</property>
-                <property name="label" translatable="yes">_Edit</property>
-                <property name="use_underline">True</property>
-                <child>
-                  <widget class="GtkMenu" id="menu2">
-                    <property name="visible">True</property>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem6">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-cut</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem7">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-copy</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem8">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-paste</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem9">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-delete</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                  </widget>
-                </child>
-              </widget>
-            </child>
-            <child>
-              <widget class="GtkMenuItem" id="menuitem3">
-                <property name="visible">True</property>
-                <property name="label" translatable="yes">_View</property>
-                <property name="use_underline">True</property>
-              </widget>
-            </child>
-            <child>
-              <widget class="GtkMenuItem" id="menuitem4">
-                <property name="visible">True</property>
-                <property name="label" translatable="yes">_Help</property>
-                <property name="use_underline">True</property>
-                <child>
-                  <widget class="GtkMenu" id="menu3">
-                    <property name="visible">True</property>
-                    <child>
-                      <widget class="GtkImageMenuItem" id="imagemenuitem10">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">gtk-about</property>
-                        <property name="use_underline">True</property>
-                        <property name="use_stock">True</property>
-                      </widget>
-                    </child>
-                  </widget>
-                </child>
-              </widget>
-            </child>
-          </widget>
-          <packing>
-            <property name="expand">False</property>
-          </packing>
-        </child>
-        <child>
-          <widget class="GtkToolbar" id="toolbar1">
-            <property name="visible">True</property>
-            <child>
-              <widget class="GtkToolButton" id="toolbutton1">
-                <property name="visible">True</property>
-                <property name="stock_id">gtk-about</property>
-              </widget>
-              <packing>
-                <property name="homogeneous">True</property>
-              </packing>
-            </child>
-          </widget>
-          <packing>
-            <property name="expand">False</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-        <child>
-          <widget class="GtkHBox" id="hbox1">
-            <property name="visible">True</property>
-            <child>
-              <widget class="GtkToolbar" id="toolbar2">
-                <property name="visible">True</property>
-                <property name="orientation">GTK_ORIENTATION_VERTICAL</property>
-                <child>
-                  <widget class="GtkToolButton" id="toolbutton2">
-                    <property name="visible">True</property>
-                    <property name="stock_id">gtk-about</property>
-                  </widget>
-                  <packing>
-                    <property name="homogeneous">True</property>
-                  </packing>
-                </child>
-              </widget>
-              <packing>
-                <property name="expand">False</property>
-              </packing>
-            </child>
-            <child>
-              <widget class="GtkHPaned" id="hpaned1">
-                <property name="visible">True</property>
-                <property name="can_focus">True</property>
-                <child>
-                  <widget class="GtkNotebook" id="notebook2">
-                    <property name="visible">True</property>
-                    <property name="can_focus">True</property>
-                    <child>
-                      <widget class="GtkTextView" id="textview4">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <property name="text" translatable="yes">Windstille Informations
-=======================
-
-Windstille is a classic 2d jump'n shoot game in which the player will
-be placed in a foreign alien world and has to find its way back into
-safety. Windstille is currently available for GNU/Linux and Windows.
-Its webpage at which one might find new versions, source code,
-artworks and more informations is located at:
-
- * http://windstille.berlios.de/
-
-The latest development version can be obtained by:
-
- $ svn co svn://svn.berlios.de/windstille/trunk/windstille
-
-For informations on how to compile and run Windstille see the file
-INSTALL. Windstille makes use of OpenGL so you will need working
-hardware 3d support.
-
-Windstille is covered under the GNU GPL, which means that you can copy
-and even modify it pretty much as you like, as long as you keep the
-copyright headers in place and distribute the source too if you
-distribute binaries, see the file COPYING for details.
-
-
-# EOF #
-</property>
-                      </widget>
-                    </child>
-                    <child>
-                      <widget class="GtkLabel" id="label17">
-                        <property name="visible">True</property>
-                        <property name="label" translatable="yes">page 1</property>
-                      </widget>
-                      <packing>
-                        <property name="type">tab</property>
-                        <property name="tab_fill">False</property>
-                      </packing>
-                    </child>
-                  </widget>
-                  <packing>
-                    <property name="resize">False</property>
-                    <property name="shrink">False</property>
-                  </packing>
-                </child>
-                <child>
-                  <widget class="GtkVBox" id="vbox2">
-                    <property name="visible">True</property>
-                    <child>
-                      <widget class="GtkExpander" id="Object Selector">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <child>
-                          <widget class="GtkTextView" id="textview2">
-                            <property name="height_request">300</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="text" translatable="yes">Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-Add Object Selector here
-</property>
-                          </widget>
-                        </child>
-                        <child>
-                          <widget class="GtkLabel" id="Objects">
-                            <property name="visible">True</property>
-                            <property name="label" translatable="yes">Palette</property>
-                          </widget>
-                          <packing>
-                            <property name="type">label_item</property>
-                          </packing>
-                        </child>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <widget class="GtkExpander" id="expander1">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <child>
-                          <widget class="GtkTextView" id="textview1">
-                            <property name="height_request">200</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="text" translatable="yes">Add Minimap here
-Add Minimap here
-Add Minimap here
-Add Minimap here
-Add Minimap here
-Add Minimap here
-</property>
-                          </widget>
-                        </child>
-                        <child>
-                          <widget class="GtkLabel" id="label1">
-                            <property name="visible">True</property>
-                            <property name="label" translatable="yes">Minimap</property>
-                          </widget>
-                          <packing>
-                            <property name="type">label_item</property>
-                          </packing>
-                        </child>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                        <property name="position">1</property>
-                      </packing>
-                    </child>
-                    <child>
-                      <widget class="GtkExpander" id="expander2">
-                        <property name="visible">True</property>
-                        <property name="can_focus">True</property>
-                        <child>
-                          <widget class="GtkScrolledWindow" id="scrolledwindow2">
-                            <property name="height_request">300</property>
-                            <property name="visible">True</property>
-                            <property name="can_focus">True</property>
-                            <property name="hscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
-                            <property name="vscrollbar_policy">GTK_POLICY_AUTOMATIC</property>
-                            <child>
-                              <widget class="GtkTreeView" id="treeview1">
-                                <property name="visible">True</property>
-                                <property name="can_focus">True</property>
-                              </widget>
-                            </child>
-                          </widget>
-                        </child>
-                        <child>
-                          <widget class="GtkLabel" id="label2">
-                            <property name="visible">True</property>
-                            <property name="label" translatable="yes">Objects</property>
-                          </widget>
-                          <packing>
-                            <property name="type">label_item</property>
-                          </packing>
-                        </child>
-                      </widget>
-                      <packing>
-                        <property name="expand">False</property>
-                        <property name="fill">False</property>
-                        <property name="position">2</property>
-                      </packing>
-                    </child>
-                  </widget>
-                  <packing>
-                    <property name="resize">True</property>
-                    <property name="shrink">True</property>
-                  </packing>
-                </child>
-              </widget>
-              <packing>
-                <property name="position">1</property>
-              </packing>
-            </child>
-          </widget>
-          <packing>
-            <property name="position">2</property>
-          </packing>
-        </child>
-        <child>
-          <widget class="GtkStatusbar" id="statusbar1">
-            <property name="visible">True</property>
-            <property name="spacing">2</property>
-          </widget>
-          <packing>
-            <property name="expand">False</property>
-            <property name="position">3</property>
-          </packing>
-        </child>
-      </widget>
-    </child>
-  </widget>
-</glade-interface>

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 13:50:09 UTC (rev 2699)
@@ -65,9 +65,13 @@
   signal_key_press_event().connect(sigc::mem_fun(this, &WindstilleWidget::key_press));
   signal_key_release_event().connect(sigc::mem_fun(this, &WindstilleWidget::key_release));
 
+  signal_drag_data_received().connect(sigc::mem_fun(this, &WindstilleWidget::on_drag_data_received));
+  //signal_drag_finish().connect(sigc::mem_fun(this, &WindstilleWidget::on_drag_finish));
 
-  Glib::signal_timeout().connect(sigc::mem_fun(this, &WindstilleWidget::on_timeout),
-                                 33);
+  // Glib::signal_timeout().connect(sigc::mem_fun(this, &WindstilleWidget::on_timeout), 33);
+  std::vector<Gtk::TargetEntry> targets;
+  targets.push_back(Gtk::TargetEntry("WindstilleObject"));
+  drag_dest_set(targets, Gtk::DEST_DEFAULT_ALL, Gdk::ACTION_COPY);
 }
 
 WindstilleWidget::~WindstilleWidget()
@@ -136,7 +140,7 @@
   if (!glwindow->gl_begin(get_gl_context()))
     return false;
 
-  std::cout << "Draw" << std::endl;
+  //std::cout << "Draw" << std::endl;
   {
     glBegin(GL_QUADS);
     glVertex2f(150, 100);
@@ -172,8 +176,8 @@
 WindstilleWidget::mouse_down(GdkEventButton* event)
 {
   grab_focus();
-  //std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
-  // viewer->on_mouse_button_down(Vector2i(event->x, event->y), event->button);
+  std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
+  //ewer->on_mouse_button_down(Vector2i(event->x, event->y), event->button);
   return false;
 }
 
@@ -194,7 +198,7 @@
 bool
 WindstilleWidget::mouse_up(GdkEventButton* event)
 {
-  //std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
+  std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //viewer->on_mouse_button_up(Vector2i(event->x, event->y), event->button);
   return false;
 }
@@ -212,5 +216,26 @@
   std::cout << "KeyRelease: " << (int)event->keyval << std::endl;
   return true;
 }
+
+bool
+WindstilleWidget::on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time)
+{
+  std::cout << "on_drag_drop: " << x << ", " << y << ": " << std::endl;
+  return true;
+}
+
+void
+WindstilleWidget::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>& context,
+                                        int x, int y, const Gtk::SelectionData& data,
+                                        guint info, guint time)
+{
+  std::cout << "on_drag_data_received: " << x << ", " << y << ": " << std::endl;
+}
+
+void
+WindstilleWidget::on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& context)
+{
+  std::cout << "on_drag_finish()" << std::endl;
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-19 00:49:09 UTC (rev 2698)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-19 13:50:09 UTC (rev 2699)
@@ -21,6 +21,7 @@
 
 #include <iostream>
 #include <gtkglmm.h>
+#include <gdkmm/dragcontext.h>
 #include <gtkmm/gl/widget.h>
 
 /** OpenGL drawing area into which the Windstille game will be
@@ -49,6 +50,11 @@
   virtual bool key_press(GdkEventKey* event);
   virtual bool key_release(GdkEventKey* event);
 
+  virtual void on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& context);
+  virtual void on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>&, int x, int y,
+                                     const Gtk::SelectionData& data, guint info, guint time);
+  virtual bool on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time);
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Thu Mar 19 14:51:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 14:51:46 +0100
Subject: [Windstille-commit] r2700 - trunk/windstille/src/editor
Message-ID: <200903191351.n2JDpkaY017993@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 14:51:46 +0100 (Thu, 19 Mar 2009)
New Revision: 2700

Modified:
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Removed unused files, added some drag&drop

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 13:50:09 UTC (rev 2699)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 13:51:46 UTC (rev 2700)
@@ -65,7 +65,7 @@
   signal_key_press_event().connect(sigc::mem_fun(this, &WindstilleWidget::key_press));
   signal_key_release_event().connect(sigc::mem_fun(this, &WindstilleWidget::key_release));
 
-  signal_drag_data_received().connect(sigc::mem_fun(this, &WindstilleWidget::on_drag_data_received));
+  //signal_drag_data_received().connect(sigc::mem_fun(this, &WindstilleWidget::on_drag_data_received));
   //signal_drag_finish().connect(sigc::mem_fun(this, &WindstilleWidget::on_drag_finish));
 
   // Glib::signal_timeout().connect(sigc::mem_fun(this, &WindstilleWidget::on_timeout), 33);



From grumbel at mail.berlios.de  Thu Mar 19 15:43:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 15:43:35 +0100
Subject: [Windstille-commit] r2701 - trunk/windstille/src/editor
Message-ID: <200903191443.n2JEhZAK023914@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 15:43:34 +0100 (Thu, 19 Mar 2009)
New Revision: 2701

Modified:
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_selector.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Some placeholder data for drag&drop

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-19 13:51:46 UTC (rev 2700)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-19 14:43:34 UTC (rev 2701)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include <gtkmm/liststore.h>
 #include <gtkmm/treemodelcolumn.h>
 #include "object_selector.hpp"
@@ -58,7 +59,9 @@
   std::vector<Gtk::TargetEntry> targets;
   targets.push_back(Gtk::TargetEntry("WindstilleObject"));
   iconview.drag_source_set(targets, Gdk::BUTTON1_MASK, Gdk::ACTION_COPY);
+
   iconview.signal_drag_begin().connect(sigc::mem_fun(*this, &ObjectSelector::on_drag_begin));
+  iconview.signal_drag_data_get().connect(sigc::mem_fun(*this, &ObjectSelector::on_drag_data_get));
 
   scrolled.set_policy(Gtk::POLICY_NEVER, Gtk::POLICY_ALWAYS);
 
@@ -79,5 +82,14 @@
 {
   context->set_icon(Gdk::Pixbuf::create_from_file("icon.png"), 0, 0);
 }
+
+void
+ObjectSelector::on_drag_data_get(const Glib::RefPtr<Gdk::DragContext>& context, 
+                                 Gtk::SelectionData& selection_data, 
+                                 guint info, guint time)
+{
+  std::cout << "ObjectSelector: on_drag_data_get" << std::endl;
+  selection_data.set("raw", "data");
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_selector.hpp
===================================================================
--- trunk/windstille/src/editor/object_selector.hpp	2009-03-19 13:51:46 UTC (rev 2700)
+++ trunk/windstille/src/editor/object_selector.hpp	2009-03-19 14:43:34 UTC (rev 2701)
@@ -22,6 +22,7 @@
 #include <gtkmm/box.h>
 #include <gtkmm/scrolledwindow.h>
 #include <gtkmm/label.h>
+#include <gdkmm/dragcontext.h>
 #include <gtkmm/iconview.h>
 
 class ObjectSelector : public Gtk::VBox
@@ -36,8 +37,11 @@
   virtual ~ObjectSelector();
 
 protected:
-  virtual void on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context);
-
+  void on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context);
+  void on_drag_data_get(const Glib::RefPtr<Gdk::DragContext>& context,
+                        Gtk::SelectionData& selection_data, 
+                        guint info, guint time);
+  
 private:
   ObjectSelector(const ObjectSelector&);
   ObjectSelector& operator=(const ObjectSelector&);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 13:51:46 UTC (rev 2700)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 14:43:34 UTC (rev 2701)
@@ -220,7 +220,7 @@
 bool
 WindstilleWidget::on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time)
 {
-  std::cout << "on_drag_drop: " << x << ", " << y << ": " << std::endl;
+  std::cout << "WindstilleWidget: on_drag_drop: " << x << ", " << y << ": " << std::endl;
   return true;
 }
 
@@ -229,13 +229,14 @@
                                         int x, int y, const Gtk::SelectionData& data,
                                         guint info, guint time)
 {
-  std::cout << "on_drag_data_received: " << x << ", " << y << ": " << std::endl;
+  std::cout << "WindstilleWidget: on_drag_data_received: "
+            << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
 }
 
 void
 WindstilleWidget::on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& context)
 {
-  std::cout << "on_drag_finish()" << std::endl;
+  std::cout << "WindstilleWidget: on_drag_finish()" << std::endl;
 }
 
 /* EOF */



From grumbel at mail.berlios.de  Thu Mar 19 18:24:29 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 18:24:29 +0100
Subject: [Windstille-commit] r2702 - trunk/windstille/src/display
Message-ID: <200903191724.n2JHOTxB008271@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 18:24:28 +0100 (Thu, 19 Mar 2009)
New Revision: 2702

Modified:
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
Log:
Removed unused get_window_width/height(), added some more smartptr instead of delete[]

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-19 14:43:34 UTC (rev 2701)
+++ trunk/windstille/src/display/display.cpp	2009-03-19 17:24:28 UTC (rev 2702)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <boost/scoped_array.hpp>
 #include <png.h>
 #include <math.h>
 #include <errno.h>
@@ -212,18 +213,6 @@
 }
 
 int
-Display::get_window_width()
-{
-  return window->w;
-}
-
-int
-Display::get_window_height()
-{
-  return window->h;
-}
-
-int
 Display::get_width()
 {
   return Display::aspect_size.width;
@@ -501,33 +490,38 @@
 void
 Display::save_screenshot(const std::string& filename)
 {
-  int len = get_window_width() * get_window_height() * 3;
-  GLbyte* pixels = new GLbyte[len];
-  glReadPixels(0, 0, get_window_width(), get_window_height(), GL_RGB, GL_UNSIGNED_BYTE, pixels);
+  const int width  = window->w;
+  const int height = window->h;
 
+  int len = width * height * 3;
+
+  boost::scoped_array<GLbyte> pixels(new GLbyte[len]);
+
+  glReadPixels(0, 0, width, height, GL_RGB, GL_UNSIGNED_BYTE, pixels.get());
+
   if (0)
     {
-      int pitch = get_window_width() * 3;
+      int pitch = width * 3;
 
       // save to ppm
       std::ofstream out(filename.c_str());
       out << "P6\n"
           << "# Windstille Screenshot\n"
-          << get_window_width() << " " << get_window_height() << "\n"
+          << width << " " << height << "\n"
           << "255\n";
       
-      for(int y = get_window_height()-1; y >= 0; --y)
-        out.write(reinterpret_cast<const char*>(pixels + y*pitch), pitch);
+      for(int y = height-1; y >= 0; --y)
+        out.write(reinterpret_cast<const char*>(pixels.get() + y*pitch), pitch);
 
       out.close();
     }
   else if (0) // BMP saving
     {
 #if SDL_BYTEORDER == SDL_BIG_ENDIAN
-      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels, get_window_width(), get_window_height(), 24, get_window_width()*3,
+      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels.get(), width, height, 24, width*3,
                                                       0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
 #else
-      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels, get_window_width(), get_window_height(), 24, get_window_width()*3,
+      SDL_Surface* surface = SDL_CreateRGBSurfaceFrom(pixels.get(), width, height, 24, width*3,
                                                       0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
 #endif
 
@@ -545,7 +539,7 @@
         }
       else
         {
-          int pitch   = get_window_width() * 3;
+          int pitch   = width * 3;
           png_structp png_ptr;
           png_infop   info_ptr;
 
@@ -555,7 +549,7 @@
           png_init_io(png_ptr, fp);
 
           png_set_IHDR(png_ptr, info_ptr, 
-                       get_window_width(), get_window_height(), 8 /* bitdepth */,
+                       width, height, 8 /* bitdepth */,
                        PNG_COLOR_TYPE_RGB,
                        PNG_INTERLACE_NONE, 
                        PNG_COMPRESSION_TYPE_BASE, 
@@ -564,22 +558,17 @@
           png_set_compression_level(png_ptr, 6);
           png_write_info(png_ptr, info_ptr);
 
-          png_uint_32 height = get_window_height();
-
-          png_bytep* row_pointers = new png_bytep[height];
+          boost::scoped_array<png_bytep> row_pointers(new png_bytep[height]);
    
           // generate row pointers
-          for (unsigned int k = 0; k < height; k++)
-            row_pointers[k] = reinterpret_cast<png_byte*>(pixels + ((height - k - 1) * pitch));
+          for (int k = 0; k < height; k++)
+            row_pointers[k] = reinterpret_cast<png_byte*>(pixels.get() + ((height - k - 1) * pitch));
 
-          png_write_image(png_ptr, row_pointers);
+          png_write_image(png_ptr, row_pointers.get());
 
           png_write_end(png_ptr, info_ptr);
 
           fclose(fp);
-
-          delete[] pixels;
-          delete[] row_pointers;
         }
     }
 }

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-03-19 14:43:34 UTC (rev 2701)
+++ trunk/windstille/src/display/display.hpp	2009-03-19 17:24:28 UTC (rev 2702)
@@ -26,7 +26,7 @@
 #include "math/line.hpp"
 #include "color.hpp"
 #include "display/framebuffer.hpp"
-
+
 class Display
 {
 private:
@@ -56,9 +56,6 @@
   static int  get_width();
   static int  get_height();
 
-  static int  get_window_width();
-  static int  get_window_height();
-
   static void set_fullscreen(bool fullscreen);
 
   static void push_cliprect(const Rect& rect);
@@ -74,7 +71,7 @@
 
   static void init();
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Thu Mar 19 18:32:36 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 18:32:36 +0100
Subject: [Windstille-commit] r2703 - trunk/windstille/src/app
Message-ID: <200903191732.n2JHWa4Y010537@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 18:32:34 +0100 (Thu, 19 Mar 2009)
New Revision: 2703

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Minor cleanup and some more scoped_array's

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:24:28 UTC (rev 2702)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:32:34 UTC (rev 2703)
@@ -18,6 +18,7 @@
 
 #include "windstille.hpp"
 
+#include <boost/scoped_array.hpp>
 #include <stdio.h>
 #include <physfs.h>
 
@@ -129,11 +130,13 @@
     
     deinit_modules();
 
-  } catch (std::exception& err) {
-    std::cout << "std::exception: " << err.what() << std::endl;
-  } catch (...) {
-    std::cout << "Error catched something unknown?!" << std::endl;
-  }
+  } catch (std::exception& err)
+    {
+      std::cout << "std::exception: " << err.what() << std::endl;
+    } catch (...)
+    {
+      std::cout << "Error catched something unknown?!" << std::endl;
+    }
 
   config.save();
 
@@ -254,80 +257,86 @@
 {
 #ifdef DEBUG
   // I wanna have usefull backtraces in debug mode
-  if(SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK | SDL_INIT_NOPARACHUTE) < 0) {
+  Uint32 flags = SDL_INIT_VIDEO | SDL_INIT_JOYSTICK | SDL_INIT_NOPARACHUTE;
 #else
-  if(SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK) < 0) {
+  Uint32 flags = SDL_INIT_VIDEO | SDL_INIT_JOYSTICK;
 #endif
-    std::stringstream msg;
-    msg << "Couldn't initialize SDL: " << SDL_GetError();
-    throw std::runtime_error(msg.str());
-  }
 
+  if (SDL_Init(flags) < 0)
+      {
+        std::stringstream msg;
+        msg << "Couldn't initialize SDL: " << SDL_GetError();
+        throw std::runtime_error(msg.str());
+      }
+
   SDL_EnableUNICODE(1);
 }
 
 void
 WindstilleMain::init_physfs(const char* argv0)
 {
-  if(!PHYSFS_init(argv0)) {
-    std::stringstream msg;
-    msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
-    throw std::runtime_error(msg.str());
-  }
+  if (!PHYSFS_init(argv0))
+    {
+      std::stringstream msg;
+      msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
+      throw std::runtime_error(msg.str());
+    }
 
   // Initialize physfs (this is a slightly modified version of
   // PHYSFS_setSaneConfig
   const char* application = "windstille";
   const char* userdir = PHYSFS_getUserDir();
   const char* dirsep  = PHYSFS_getDirSeparator();
-  char* writedir = new char[strlen(userdir) + strlen(application) + 2];
+  boost::scoped_array<char> writedir(new char[strlen(userdir) + strlen(application) + 2]);
 
   // Set configuration directory
-  sprintf(writedir, "%s.%s", userdir, application);
-  if(!PHYSFS_setWriteDir(writedir)) {
-    // try to create the directory
-    char* mkdir = new char[strlen(application) + 2];
-    sprintf(mkdir, ".%s", application);
-    if(!PHYSFS_setWriteDir(userdir) || !PHYSFS_mkdir(mkdir)) {
-      std::ostringstream msg;
-      msg << "Failed creating configuration directory '"
-          << writedir << "': " << PHYSFS_getLastError();
-      delete[] writedir;
-      delete[] mkdir;
-      throw std::runtime_error(msg.str());
-    }
-    delete[] mkdir;
+  sprintf(writedir.get(), "%s.%s", userdir, application);
+  if (!PHYSFS_setWriteDir(writedir.get()))
+    {
+      // try to create the directory
+      boost::scoped_array<char> mkdir(new char[strlen(application) + 2]);
 
-    if(!PHYSFS_setWriteDir(writedir)) {
-      std::ostringstream msg;
-      msg << "Failed to use configuration directory '"
-          <<  writedir << "': " << PHYSFS_getLastError();
-      delete[] writedir;
-      throw std::runtime_error(msg.str());
+      sprintf(mkdir.get(), ".%s", application);
+
+      if (!PHYSFS_setWriteDir(userdir) || !PHYSFS_mkdir(mkdir.get())) 
+        {
+          std::ostringstream msg;
+          msg << "Failed creating configuration directory '"
+              << writedir << "': " << PHYSFS_getLastError();
+          throw std::runtime_error(msg.str());
+        }
+
+      if (!PHYSFS_setWriteDir(writedir.get())) 
+        {
+          std::ostringstream msg;
+          msg << "Failed to use configuration directory '"
+              <<  writedir << "': " << PHYSFS_getLastError();
+          throw std::runtime_error(msg.str());
+        }
     }
-  }
-  PHYSFS_addToSearchPath(writedir, 0);
-  delete[] writedir;
+  PHYSFS_addToSearchPath(writedir.get(), 0);
 
   // Search for archives and add them to the search path
   const char* archiveExt = "zip";
   char** rc = PHYSFS_enumerateFiles("/");
   size_t extlen = strlen(archiveExt);
 
-  for(char** i = rc; *i != 0; ++i) {
-    size_t l = strlen(*i);
-    if((l > extlen) && ((*i)[l - extlen - 1] == '.')) {
-      const char* ext = (*i) + (l - extlen);
+  for(char** i = rc; *i != 0; ++i)
+    {
+      size_t l = strlen(*i);
+      if ((l > extlen) && ((*i)[l - extlen - 1] == '.'))
+        {
+          const char* ext = (*i) + (l - extlen);
 
-      if(strcasecmp(ext, archiveExt) == 0) {
-        const char* d = PHYSFS_getRealDir(*i);
-        char* str = new char[strlen(d) + strlen(dirsep) + l + 1];
-        sprintf(str, "%s%s%s", d, dirsep, *i);
-        PHYSFS_addToSearchPath(str, 1);
-        delete[] str;
-      }
+          if (strcasecmp(ext, archiveExt) == 0)
+            {
+              const char* d = PHYSFS_getRealDir(*i);
+              boost::scoped_array<char> str(new char[strlen(d) + strlen(dirsep) + l + 1]);
+              sprintf(str.get(), "%s%s%s", d, dirsep, *i);
+              PHYSFS_addToSearchPath(str.get(), 1);
+            }
+        }
     }
-  }
 
   PHYSFS_freeList(rc);
 
@@ -338,31 +347,35 @@
   testfname += "tiles.scm";
   bool sourcedir = false;
   FILE* f = fopen(testfname.c_str(), "r");
-  if(f) {
-    fclose(f);
-    if(!PHYSFS_addToSearchPath(::datadir.c_str(), 1)) {
-      std::cout << "Warning: Couldn't add '" << ::datadir
-                << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
-    } else {
-      sourcedir = true;
+  if (f)
+    {
+      fclose(f);
+      if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
+        {
+          std::cout << "Warning: Couldn't add '" << ::datadir
+                    << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
+        } else {
+        sourcedir = true;
+      }
     }
-  }
 
-  if(!sourcedir) {
+  if (!sourcedir)
+    {
 #if defined(APPDATADIR) || defined(ENABLE_BINRELOC)
 #ifdef ENABLE_BINRELOC
-    char* brdatadir = br_strcat(DATADIR, "/" PACKAGE_NAME);
-    ::datadir = brdatadir;
-    free(brdatadir);
+      char* brdatadir = br_strcat(DATADIR, "/" PACKAGE_NAME);
+      ::datadir = brdatadir;
+      free(brdatadir);
 #else
-    ::datadir = APPDATADIR;
+      ::datadir = APPDATADIR;
 #endif
-    if(!PHYSFS_addToSearchPath(::datadir.c_str(), 1)) {
-      std::cout << "Couldn't add '" << ::datadir
-        << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
+      if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
+        {
+          std::cout << "Couldn't add '" << ::datadir
+                    << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
+        }
+#endif
     }
-#endif
-  }
 
   // allow symbolic links
   PHYSFS_permitSymbolicLinks(1);



From grumbel at mail.berlios.de  Thu Mar 19 18:34:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 18:34:48 +0100
Subject: [Windstille-commit] r2704 - trunk/windstille/src/hud
Message-ID: <200903191734.n2JHYmWM011382@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 18:34:46 +0100 (Thu, 19 Mar 2009)
New Revision: 2704

Modified:
   trunk/windstille/src/hud/dialog_manager.cpp
   trunk/windstille/src/hud/dialog_manager.hpp
Log:
Minor cleanup and some more scoped_ptr's

Modified: trunk/windstille/src/hud/dialog_manager.cpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.cpp	2009-03-19 17:32:34 UTC (rev 2703)
+++ trunk/windstille/src/hud/dialog_manager.cpp	2009-03-19 17:34:46 UTC (rev 2704)
@@ -32,12 +32,10 @@
 DialogManager::DialogManager()
 {
   current_ = this;
-  text_area = 0;
 }
 
 DialogManager::~DialogManager()
 {
-  delete text_area;
 }
 
 void
@@ -181,10 +179,8 @@
 
   Size dialog_size(dialog_width, dialog_height);
 
-
-  delete text_area;
-  text_area = new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::vera20->get_height()),
-                                Size(text_width, 200)), true);
+  text_area.reset(new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::vera20->get_height()),
+                                    Size(text_width, 200)), true));
   text_area->set_font(Fonts::vera20);
   text_area->set_text(text);
 }

Modified: trunk/windstille/src/hud/dialog_manager.hpp
===================================================================
--- trunk/windstille/src/hud/dialog_manager.hpp	2009-03-19 17:32:34 UTC (rev 2703)
+++ trunk/windstille/src/hud/dialog_manager.hpp	2009-03-19 17:34:46 UTC (rev 2704)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_HUD_DIALOG_MANAGER_HPP
 #define HEADER_WINDSTILLE_HUD_DIALOG_MANAGER_HPP
 
+#include <boost/scoped_ptr.hpp>
 #include <vector>
 #include <string>
 #include "sprite2d/sprite.hpp"
@@ -42,7 +43,7 @@
   Sprite portrait;
   std::string text;
   float delay;
-  TextArea* text_area;
+  boost::scoped_ptr<TextArea> text_area;
 
   enum Alignment {
     VCENTER = 0x00,



From grumbel at mail.berlios.de  Thu Mar 19 18:40:25 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 18:40:25 +0100
Subject: [Windstille-commit] r2705 - trunk/windstille/src/app
Message-ID: <200903191740.n2JHePa1016798@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 18:40:19 +0100 (Thu, 19 Mar 2009)
New Revision: 2705

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Removed .zip code, might be reintroduced later in a more configurable fashion

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:34:46 UTC (rev 2704)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:40:19 UTC (rev 2705)
@@ -286,7 +286,7 @@
   // PHYSFS_setSaneConfig
   const char* application = "windstille";
   const char* userdir = PHYSFS_getUserDir();
-  const char* dirsep  = PHYSFS_getDirSeparator();
+  
   boost::scoped_array<char> writedir(new char[strlen(userdir) + strlen(application) + 2]);
 
   // Set configuration directory
@@ -315,31 +315,7 @@
         }
     }
   PHYSFS_addToSearchPath(writedir.get(), 0);
-
-  // Search for archives and add them to the search path
-  const char* archiveExt = "zip";
-  char** rc = PHYSFS_enumerateFiles("/");
-  size_t extlen = strlen(archiveExt);
-
-  for(char** i = rc; *i != 0; ++i)
-    {
-      size_t l = strlen(*i);
-      if ((l > extlen) && ((*i)[l - extlen - 1] == '.'))
-        {
-          const char* ext = (*i) + (l - extlen);
-
-          if (strcasecmp(ext, archiveExt) == 0)
-            {
-              const char* d = PHYSFS_getRealDir(*i);
-              boost::scoped_array<char> str(new char[strlen(d) + strlen(dirsep) + l + 1]);
-              sprintf(str.get(), "%s%s%s", d, dirsep, *i);
-              PHYSFS_addToSearchPath(str.get(), 1);
-            }
-        }
-    }
-
-  PHYSFS_freeList(rc);
-
+  
   // when started from source dir...
   ::datadir = PHYSFS_getBaseDir();
   ::datadir += "data/";



From grumbel at mail.berlios.de  Thu Mar 19 18:43:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 18:43:16 +0100
Subject: [Windstille-commit] r2706 - trunk/windstille/src/app
Message-ID: <200903191743.n2JHhGbZ017868@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 18:43:11 +0100 (Thu, 19 Mar 2009)
New Revision: 2706

Modified:
   trunk/windstille/src/app/windstille_main.cpp
Log:
Removed .zip code, might be reintroduced later in a more configurable fashion

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:40:19 UTC (rev 2705)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:43:11 UTC (rev 2706)
@@ -282,76 +282,80 @@
       throw std::runtime_error(msg.str());
     }
 
-  // Initialize physfs (this is a slightly modified version of
-  // PHYSFS_setSaneConfig
-  const char* application = "windstille";
-  const char* userdir = PHYSFS_getUserDir();
+  { // Initialize physfs (this is a slightly modified version of
+    // PHYSFS_setSaneConfig
+    const char* application = "windstille";
+    const char* userdir = PHYSFS_getUserDir();
   
-  boost::scoped_array<char> writedir(new char[strlen(userdir) + strlen(application) + 2]);
+    boost::scoped_array<char> writedir(new char[strlen(userdir) + strlen(application) + 2]);
 
-  // Set configuration directory
-  sprintf(writedir.get(), "%s.%s", userdir, application);
-  if (!PHYSFS_setWriteDir(writedir.get()))
-    {
-      // try to create the directory
-      boost::scoped_array<char> mkdir(new char[strlen(application) + 2]);
+    // Set configuration directory
+    sprintf(writedir.get(), "%s.%s", userdir, application);
+    if (!PHYSFS_setWriteDir(writedir.get()))
+      {
+        // try to create the directory
+        boost::scoped_array<char> mkdir(new char[strlen(application) + 2]);
 
-      sprintf(mkdir.get(), ".%s", application);
+        sprintf(mkdir.get(), ".%s", application);
 
-      if (!PHYSFS_setWriteDir(userdir) || !PHYSFS_mkdir(mkdir.get())) 
-        {
-          std::ostringstream msg;
-          msg << "Failed creating configuration directory '"
-              << writedir << "': " << PHYSFS_getLastError();
-          throw std::runtime_error(msg.str());
-        }
+        if (!PHYSFS_setWriteDir(userdir) || !PHYSFS_mkdir(mkdir.get())) 
+          {
+            std::ostringstream msg;
+            msg << "Failed creating configuration directory '"
+                << writedir << "': " << PHYSFS_getLastError();
+            throw std::runtime_error(msg.str());
+          }
 
-      if (!PHYSFS_setWriteDir(writedir.get())) 
-        {
-          std::ostringstream msg;
-          msg << "Failed to use configuration directory '"
-              <<  writedir << "': " << PHYSFS_getLastError();
-          throw std::runtime_error(msg.str());
-        }
-    }
-  PHYSFS_addToSearchPath(writedir.get(), 0);
-  
-  // when started from source dir...
-  ::datadir = PHYSFS_getBaseDir();
-  ::datadir += "data/";
-  std::string testfname = ::datadir;
-  testfname += "tiles.scm";
-  bool sourcedir = false;
-  FILE* f = fopen(testfname.c_str(), "r");
-  if (f)
-    {
-      fclose(f);
-      if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
-        {
-          std::cout << "Warning: Couldn't add '" << ::datadir
-                    << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
-        } else {
-        sourcedir = true;
+        if (!PHYSFS_setWriteDir(writedir.get())) 
+          {
+            std::ostringstream msg;
+            msg << "Failed to use configuration directory '"
+                <<  writedir << "': " << PHYSFS_getLastError();
+            throw std::runtime_error(msg.str());
+          }
       }
-    }
+    PHYSFS_addToSearchPath(writedir.get(), 0);
+  }
 
-  if (!sourcedir)
-    {
+  { // when started from source dir...
+    ::datadir = PHYSFS_getBaseDir();
+    ::datadir += "data/";
+    std::string testfname = ::datadir;
+    testfname += "tiles.scm";
+    bool sourcedir = false;
+    FILE* f = fopen(testfname.c_str(), "r");
+    if (f)
+      {
+        fclose(f);
+        if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
+          {
+            std::cout << "Warning: Couldn't add '" << ::datadir
+                      << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
+          }
+        else 
+          {
+            sourcedir = true;
+          }
+      }
+  
+    if (!sourcedir)
+      {
 #if defined(APPDATADIR) || defined(ENABLE_BINRELOC)
 #ifdef ENABLE_BINRELOC
-      char* brdatadir = br_strcat(DATADIR, "/" PACKAGE_NAME);
-      ::datadir = brdatadir;
-      free(brdatadir);
+        char* brdatadir = br_strcat(DATADIR, "/" PACKAGE_NAME);
+        ::datadir = brdatadir;
+        free(brdatadir);
 #else
-      ::datadir = APPDATADIR;
+        ::datadir = APPDATADIR;
 #endif
-      if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
-        {
-          std::cout << "Couldn't add '" << ::datadir
-                    << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
-        }
+        if (!PHYSFS_addToSearchPath(::datadir.c_str(), 1))
+          {
+            std::cout << "Couldn't add '" << ::datadir
+                      << "' to physfs searchpath: " << PHYSFS_getLastError() << "\n";
+          }
 #endif
-    }
+      }
+  }
 
   // allow symbolic links
   PHYSFS_permitSymbolicLinks(1);



From grumbel at mail.berlios.de  Thu Mar 19 20:42:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 19 Mar 2009 20:42:13 +0100
Subject: [Windstille-commit] r2707 - in trunk/windstille/src: . app display
	engine font gui tile
Message-ID: <200903191942.n2JJgDCq028159@sheep.berlios.de>

Author: grumbel
Date: 2009-03-19 20:42:10 +0100 (Thu, 19 Mar 2009)
New Revision: 2707

Added:
   trunk/windstille/src/display/software_surface.cpp
   trunk/windstille/src/display/software_surface.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/blitter.hpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/framebuffer.cpp
   trunk/windstille/src/display/framebuffer.hpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/display/texture.hpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/display/texture_manager.hpp
   trunk/windstille/src/engine/sector.hpp
   trunk/windstille/src/font/border_font_effect.cpp
   trunk/windstille/src/font/border_font_effect.hpp
   trunk/windstille/src/font/font_effect.hpp
   trunk/windstille/src/font/no_font_effect.cpp
   trunk/windstille/src/font/no_font_effect.hpp
   trunk/windstille/src/font/ttf_font.cpp
   trunk/windstille/src/gui/automap.cpp
   trunk/windstille/src/tile/tile_description.cpp
   trunk/windstille/src/tile/tile_factory.cpp
   trunk/windstille/src/tile/tile_factory.hpp
   trunk/windstille/src/tile/tile_packer.cpp
   trunk/windstille/src/tile/tile_packer.hpp
Log:
Replaced raw SDL_Surface with refcounted SoftwareSurface

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/SConscript	2009-03-19 19:42:10 UTC (rev 2707)
@@ -61,6 +61,7 @@
 'display/scene_context.cpp',
 'display/shader_object.cpp',
 'display/shader_program.cpp',
+'display/software_surface.cpp',
 'display/surface.cpp',
 'display/surface_manager.cpp',
 'display/text_area.cpp',

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -62,78 +62,81 @@
 int 
 WindstilleMain::main(int argc, char** argv)
 {
-  try {
-    config.parse_args(argc, argv);
+  try 
+    {
+      config.parse_args(argc, argv);
 
-    init_physfs(argv[0]);
-    init_sdl();
+      init_physfs(argv[0]);
+      init_sdl();
 
-    config.load();
+      config.load();
     
-    config.parse_args(argc, argv);
+      config.parse_args(argc, argv);
 
-    init_modules();
+      init_modules();
     
-    if (debug) std::cout << "Starting file: '" << config.get_string("levelfile") << "'" 
-                         << std::endl;
+      if (debug) 
+        std::cout << "Starting file: '" << config.get_string("levelfile") << "'" << std::endl;
     
-    std::string levelfile;
-    if (config.get<std::string>("levelfile").is_set())
-      {
-        // FIXME: Looks a little hacky, doesn't it?
-        std::string leveldir = dirname(config.get_string("levelfile"));
-        PHYSFS_addToSearchPath(leveldir.c_str(), true);
-        levelfile = basename(config.get_string("levelfile"));
-      }
+      std::string levelfile;
+      if (config.get<std::string>("levelfile").is_set())
+        {
+          // FIXME: Looks a little hacky, doesn't it?
+          std::string leveldir = dirname(config.get_string("levelfile"));
+          PHYSFS_addToSearchPath(leveldir.c_str(), true);
+          levelfile = basename(config.get_string("levelfile"));
+        }
 
-    if (sprite3dview)
-      {
-        std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
+      if (sprite3dview)
+        {
+          std::auto_ptr<Sprite3DView> sprite3dview(new Sprite3DView());
 
-        if (!levelfile.empty())
-          sprite3dview->set_model(levelfile);
+          if (!levelfile.empty())
+            sprite3dview->set_model(levelfile);
 
-        // Launching Sprite3DView instead of game
-        screen_manager.push_screen(sprite3dview.release());
-      }
-    else if (sprite2dview)
-      {
-        std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
+          // Launching Sprite3DView instead of game
+          screen_manager.push_screen(sprite3dview.release());
+        }
+      else if (sprite2dview)
+        {
+          std::auto_ptr<Sprite2DView> sprite2dview(new Sprite2DView());
 
-        if (!levelfile.empty())
-          sprite2dview->set_sprite(levelfile);
+          if (!levelfile.empty())
+            sprite2dview->set_sprite(levelfile);
 
-        // Launching Sprite2DView instead of game
-        screen_manager.push_screen(sprite2dview.release());
-      }
-    else if (particleview)
-      {
-        ParticleViewer* particle_viewer = new ParticleViewer();
-        if (!levelfile.empty())
-          particle_viewer->load(levelfile);
-        screen_manager.push_screen(particle_viewer);
-      }
-    else
-      {
-        if (levelfile.empty())
-          {
-            //screen_manager.push_screen(new GameSession("levels/newformat2.wst"));
-            screen_manager.push_screen(new TitleScreen());
-          }
-        else
-          {
-            screen_manager.push_screen(new GameSession(levelfile));
-          }
-      }
+          // Launching Sprite2DView instead of game
+          screen_manager.push_screen(sprite2dview.release());
+        }
+      else if (particleview)
+        {
+          ParticleViewer* particle_viewer = new ParticleViewer();
+          if (!levelfile.empty())
+            particle_viewer->load(levelfile);
+          screen_manager.push_screen(particle_viewer);
+        }
+      else
+        {
+          if (levelfile.empty())
+            {
+              //screen_manager.push_screen(new GameSession("levels/newformat2.wst"));
+              screen_manager.push_screen(new TitleScreen());
+            }
+          else
+            {
+              screen_manager.push_screen(new GameSession(levelfile));
+            }
+        }
         
-    screen_manager.run();
+      screen_manager.run();
     
-    deinit_modules();
+      deinit_modules();
 
-  } catch (std::exception& err)
+    } 
+  catch (std::exception& err)
     {
       std::cout << "std::exception: " << err.what() << std::endl;
-    } catch (...)
+    }
+  catch (...)
     {
       std::cout << "Error catched something unknown?!" << std::endl;
     }
@@ -263,11 +266,11 @@
 #endif
 
   if (SDL_Init(flags) < 0)
-      {
-        std::stringstream msg;
-        msg << "Couldn't initialize SDL: " << SDL_GetError();
-        throw std::runtime_error(msg.str());
-      }
+    {
+      std::stringstream msg;
+      msg << "Couldn't initialize SDL: " << SDL_GetError();
+      throw std::runtime_error(msg.str());
+    }
 
   SDL_EnableUNICODE(1);
 }
@@ -370,10 +373,10 @@
       PHYSFS_freeList(search_path);
     }
 }
-
+
 int main(int argc, char** argv)
 {
   return WindstilleMain().main(argc, argv);
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -49,8 +49,6 @@
 
 #include "screen/screen.hpp"
 
-struct SDL_Surface;
-
 class WindstilleMain
 {  
 public:

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/blitter.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -21,21 +21,23 @@
 #include <iostream>
 #include <algorithm>
 #include <stdint.h>
+
+#include "display/software_surface.hpp"
 #include "blitter.hpp"
 
-void generate_border(SDL_Surface* surface,
+void generate_border(const SoftwareSurface& surface,
                      int x_pos, int y_pos, int width, int height)
 {
-  assert(surface->format->BitsPerPixel == 32);
-  SDL_LockSurface(surface);
+  assert(surface.get_bits_per_pixel() == 32);
  
-  uint8_t* data = static_cast<uint8_t*>(surface->pixels);
-  int pitch = surface->pitch;
+  uint8_t* data = static_cast<uint8_t*>(surface.get_pixels());
+  int pitch = surface.get_pitch();
 
   // duplicate the top line
   memcpy(data + (y_pos-1)*pitch + 4*x_pos, 
          data + (y_pos)*pitch + 4*x_pos,
          4*width);
+
   // duplicate the bottom line
   memcpy(data + (y_pos+height)*pitch + 4*x_pos, 
          data + (y_pos+height-1)*pitch + 4*x_pos,  
@@ -49,24 +51,20 @@
       p = reinterpret_cast<uint32_t*> (data + (y*pitch + 4*(x_pos + width)));
       *p = *(p-1);
     }
-
-  SDL_UnlockSurface(surface);
 }
 
 void 
-blit_ftbitmap(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos)
+blit_ftbitmap(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos)
 {
-  SDL_LockSurface(target);
-  
   int start_x = std::max(0, -x_pos);
   int start_y = std::max(0, -y_pos);
   
-  int end_x = std::min(brush.width, target->w  - x_pos);
-  int end_y = std::min(brush.rows,  target->h - y_pos);
+  int end_x = std::min(brush.width, target.get_width()  - x_pos);
+  int end_y = std::min(brush.rows,  target.get_height() - y_pos);
 
-  unsigned char* target_buf = static_cast<unsigned char*>(target->pixels);
+  unsigned char* target_buf = static_cast<unsigned char*>(target.get_pixels());
 
-  int target_pitch = target->pitch;
+  int target_pitch = target.get_pitch();
 
   for (int y = start_y; y < end_y; ++y)
     for (int x = start_x; x < end_x; ++x)
@@ -79,8 +77,6 @@
         target_buf[target_pos + 2] = 255;
         target_buf[target_pos + 3] = brush.buffer[brush_pos];
       }
-    
-  SDL_UnlockSurface(target);
 }
 
 SDL_Surface* create_surface_rgba(int width, int height)

Modified: trunk/windstille/src/display/blitter.hpp
===================================================================
--- trunk/windstille/src/display/blitter.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/blitter.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -18,12 +18,12 @@
 #ifndef HEADER_BLITTER_HPP
 #define HEADER_BLITTER_HPP
 
-#include <SDL.h>
-
 #include <ft2build.h>
 #include FT_FREETYPE_H
 #include FT_GLYPH_H
-
+
+class SoftwareSurface;
+
 /** Duplicate all the edge pixel of the given rectangle to the outside
     of the rectangle, thus creating a border around the given
     rectangle, this is needed for OpenGL textures to avoid filtering
@@ -34,10 +34,9 @@
     X 4 5 6 X  / 4 4 5 6 6
     X X X X X    4 4 5 6 6
 */
-void generate_border(SDL_Surface* surface, int x_pos, int y_pos, int width, int height);
-void blit_ftbitmap(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos);
-SDL_Surface* create_surface_rgba(int width, int height);
-
+void generate_border(const SoftwareSurface& surface, int x_pos, int y_pos, int width, int height);
+void blit_ftbitmap(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos);
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/display.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -244,48 +244,50 @@
     {
       throw std::runtime_error("Display:: Couldn't create window");
     }
+  else
+    {
+      SDL_WM_SetCaption("Windstille", 0 /* icon */);
 
-  SDL_WM_SetCaption("Windstille", 0 /* icon */);
+      GLenum err = glewInit();
+      if(err != GLEW_OK) {
+        std::ostringstream msg;
+        msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
+        throw std::runtime_error(msg.str());
+      }
+      /*
+        if(!GLEW_EXT_framebuffer_object) {
+        std::ostringstream msg;
+        msg << "Display:: Framebuffer opengl extension not supported";
+        throw std::runtime_error(msg.str());
+        }
+      */
 
-  GLenum err = glewInit();
-  if(err != GLEW_OK) {
-    std::ostringstream msg;
-    msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
-    throw std::runtime_error(msg.str());
-  }
-  /*
-    if(!GLEW_EXT_framebuffer_object) {
-    std::ostringstream msg;
-    msg << "Display:: Framebuffer opengl extension not supported";
-    throw std::runtime_error(msg.str());
-    }
-  */
+      glViewport(0, 0, window->w, window->h);
+      glMatrixMode(GL_PROJECTION);
+      glLoadIdentity();
 
-  glViewport(0, 0, window->w, window->h);
-  glMatrixMode(GL_PROJECTION);
-  glLoadIdentity();
+      static const float cl_pixelcenter_constant = 0.375;
 
-  static const float cl_pixelcenter_constant = 0.375;
-
-  //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+      //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
   
-  // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
-  Display::aspect_size = Size(config.get_int("aspect-width"), 
-                              config.get_int("aspect-height"));
+      // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
+      Display::aspect_size = Size(config.get_int("aspect-width"), 
+                                  config.get_int("aspect-height"));
 
-  glOrtho(0.0, 
-          aspect_size.width, aspect_size.height,
-          0.0, 1000.0, -1000.0);
-  glMatrixMode(GL_MODELVIEW);
-  glLoadIdentity();
-  glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
+      glOrtho(0.0, 
+              aspect_size.width, aspect_size.height,
+              0.0, 1000.0, -1000.0);
+      glMatrixMode(GL_MODELVIEW);
+      glLoadIdentity();
+      glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
 
-  if (config.get_int("anti-aliasing"))
-    glEnable(GL_MULTISAMPLE_ARB); 
+      if (config.get_int("anti-aliasing"))
+        glEnable(GL_MULTISAMPLE_ARB); 
 
-  assert_gl("setup projection");
+      assert_gl("setup projection");
 
-  OpenGLState::init();
+      OpenGLState::init();
+    }
 }
 
 void

Modified: trunk/windstille/src/display/framebuffer.cpp
===================================================================
--- trunk/windstille/src/display/framebuffer.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/framebuffer.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -22,7 +22,7 @@
 #include "texture.hpp"
 #include "render_buffer.hpp"
 #include "framebuffer.hpp"
-
+
 class FramebufferImpl
 {
 public:
@@ -56,7 +56,7 @@
     glDeleteFramebuffersEXT(1, &handle);
   }
 };
-
+
 Framebuffer::Framebuffer()
 {
 }
@@ -112,5 +112,5 @@
 {
   return impl.get() != other.impl.get();
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/display/framebuffer.hpp
===================================================================
--- trunk/windstille/src/display/framebuffer.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/framebuffer.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -20,10 +20,9 @@
 #define HEADER_WINDSTILLE_DISPLAY_FRAMEBUFFER_HPP
 
 #include "texture.hpp"
-
+
 class FramebufferImpl;
-
-/** */
+
 class Framebuffer
 {
 public:
@@ -48,7 +47,7 @@
 private:
   boost::shared_ptr<FramebufferImpl> impl;
 };
-
+
 #endif
 
 /* EOF */

Added: trunk/windstille/src/display/software_surface.cpp
===================================================================
--- trunk/windstille/src/display/software_surface.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/software_surface.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -0,0 +1,116 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <sstream>
+#include <stdexcept>
+#include <SDL_image.h>
+#include "physfs/physfs_sdl.hpp"
+#include "software_surface.hpp"
+
+class SoftwareSurfaceImpl
+{
+public:
+  SDL_Surface* surface;
+};
+
+SoftwareSurface::SoftwareSurface(const std::string& filename)
+  : impl(new SoftwareSurfaceImpl())
+{
+  impl->surface = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
+
+  if (!impl->surface)
+    {
+      std::ostringstream str;
+      str << "SoftwareSurface: Couldn't load: " << filename << std::endl;
+      throw std::runtime_error(str.str());
+    }
+  else
+    {
+      SDL_SetAlpha(impl->surface, 0, 0);
+
+      assert(!SDL_MUSTLOCK(impl->surface));
+    }
+}
+
+SoftwareSurface::SoftwareSurface(int width, int height, Format format)
+  : impl(new SoftwareSurfaceImpl())
+{
+  assert(format == RGBA);
+
+#if SDL_BYTEORDER == SDL_BIG_ENDIAN
+  impl->surface = SDL_CreateRGBSurface(SDL_SWSURFACE,
+                                       width, height, 32,
+                                       0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
+#else
+  impl->surface = SDL_CreateRGBSurface(SDL_SWSURFACE,
+                                       width, height, 32,
+                                       0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
+#endif
+
+  SDL_SetAlpha(impl->surface, 0, 0);
+
+  assert(!SDL_MUSTLOCK(impl->surface));
+}
+
+SoftwareSurface::~SoftwareSurface()
+{
+}
+
+int
+SoftwareSurface::get_bytes_per_pixel() const
+{
+  return impl->surface->format->BytesPerPixel;
+}
+
+int
+SoftwareSurface::get_bits_per_pixel() const
+{
+  return impl->surface->format->BitsPerPixel;
+}
+
+int
+SoftwareSurface::get_width() const
+{
+  return impl->surface->w;
+}
+
+int
+SoftwareSurface::get_height() const
+{
+  return impl->surface->h;
+}
+
+int
+SoftwareSurface::get_pitch() const
+{
+  return impl->surface->pitch;
+}
+
+void*
+SoftwareSurface::get_pixels() const
+{
+  return impl->surface->pixels;
+}
+
+SDL_Surface*
+SoftwareSurface::get_surface() const
+{
+  return impl->surface;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/display/software_surface.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/display/software_surface.hpp
===================================================================
--- trunk/windstille/src/display/software_surface.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/software_surface.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -0,0 +1,55 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_SOFTWARE_SURFACE_HPP
+#define HEADER_SOFTWARE_SURFACE_HPP
+
+#include "SDL.h"
+#include <boost/shared_ptr.hpp>
+#include <string>
+
+class SoftwareSurfaceImpl;
+
+class SoftwareSurface
+{
+public:
+  enum Format {
+    RGB,
+    RGBA
+  };
+
+  SoftwareSurface(const std::string& filename);
+  SoftwareSurface(int width, int height, Format format = RGBA);
+  ~SoftwareSurface();
+
+  int   get_bytes_per_pixel() const;
+  int   get_bits_per_pixel() const;
+  int   get_width() const;
+  int   get_pitch() const;
+  int   get_height() const;
+  void* get_pixels() const;
+
+  SDL_Surface* get_surface() const;
+
+private:
+  boost::shared_ptr<SoftwareSurfaceImpl> impl;
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/software_surface.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -21,13 +21,14 @@
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
-#include <SDL_image.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
+
 #include "util/util.hpp"
 #include "app/globals.hpp"
 #include "texture.hpp"
 #include "surface.hpp"
+#include "software_surface.hpp"
 #include "texture_manager.hpp"
 #include "physfs/physfs_sdl.hpp"
 
@@ -42,13 +43,13 @@
 SurfaceManager::~SurfaceManager()
 {
   if(debug)
-  {
-    for(Surfaces::iterator i = surfaces.begin(); i != surfaces.end(); ++i)
     {
-      //      if (i->second.use_count() > 1)
-        std::cerr << "Warning: Surface '" << i->first << "' not released.\n";
+      for(Surfaces::iterator i = surfaces.begin(); i != surfaces.end(); ++i)
+        {
+          //      if (i->second.use_count() > 1)
+          std::cerr << "Warning: Surface '" << i->first << "' not released.\n";
+        }
     }
-  }
 
   current_ = 0;
 }
@@ -59,36 +60,32 @@
   Surfaces::iterator i = surfaces.find(filename);
 
   if(i != surfaces.end())
-    return i->second;
+    { // Surface in cache, return it
+      return i->second;
+    }
+  else
+    {
+      SoftwareSurface image(filename);
 
-  SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
-  if(!image)
-  {
-    std::ostringstream msg;
-    msg << "Couldn't load image '" << filename << "' :" << SDL_GetError();
-    throw std::runtime_error(msg.str());
-  }
+      float maxu, maxv;
+      Texture texture;
 
-  float maxu, maxv;
-  Texture texture;
-  try
-  {
-    texture = create_texture(image, maxu, maxv);
-  }
-  catch(std::exception& e)
-  {
-    SDL_FreeSurface(image);
-    std::ostringstream msg;
-    msg << "Couldn't create texture for '" << filename << "': " << e.what();
-    throw std::runtime_error(msg.str());
-  }
+      try
+        {
+          texture = create_texture(image, maxu, maxv);
+        }
+      catch(std::exception& e)
+        {
+          std::ostringstream msg;
+          msg << "Couldn't create texture for '" << filename << "': " << e.what();
+          throw std::runtime_error(msg.str());
+        }
 
-  Surface result(texture, Rectf(0, 0, maxu, maxv), image->w, image->h);
-  surfaces.insert(std::make_pair(filename, result));
+      Surface result(texture, Rectf(0, 0, maxu, maxv), image.get_width(), image.get_height());
+      surfaces.insert(std::make_pair(filename, result));
   
-  SDL_FreeSurface(image);
-
-  return result;
+      return result;
+    }
 }
 
 void
@@ -96,42 +93,34 @@
                           std::vector<Surface>& surfaces,
                           int width, int height)
 {
-  SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
-  if(!image)
-  {
-    std::ostringstream msg;
-    msg << "Couldn't load image '" << filename << "' :" << SDL_GetError();
-    throw std::runtime_error(msg.str());
-  }
-
+  SoftwareSurface image(filename);
   float maxu, maxv;
 
   Texture texture;
+
   try
-  {                                                                       
-    texture = create_texture(image, maxu, maxv);
-  }
+    {                                                                       
+      texture = create_texture(image, maxu, maxv);
+    }
   catch(std::exception& e)
-  {
-    SDL_FreeSurface(image);
-    std::ostringstream msg;
-    msg << "Couldn't create texture for '" << filename << "': " << e.what();
-    throw std::runtime_error(msg.str());                                      
-  }
+    {
+      std::ostringstream msg;
+      msg << "Couldn't create texture for '" << filename << "': " << e.what();
+      throw std::runtime_error(msg.str());                                      
+    }
 
-  for(int y = 0; y <= image->h - height + 1; y += height)
-  {
-    for(int x = 0; x <= image->w - width + 1; x += width)
+  for(int y = 0; y <= image.get_height() - height + 1; y += height)
     {
-      float s_min_u = maxu * x / static_cast<float>(image->w);
-      float s_max_u = (maxu * (x + width)) / static_cast<float>(image->w);
-      float s_min_v = maxv * x / static_cast<float>(image->h);
-      float s_max_v = (maxv * (x + height)) / static_cast<float>(image->h);
+      for(int x = 0; x <= image.get_width() - width + 1; x += width)
+        {
+          float s_min_u = maxu * x / static_cast<float>(image.get_width());
+          float s_max_u = (maxu * (x + width)) / static_cast<float>(image.get_width());
+          float s_min_v = maxv * x / static_cast<float>(image.get_height());
+          float s_max_v = (maxv * (x + height)) / static_cast<float>(image.get_height());
 
-      surfaces.push_back(Surface(texture, Rectf(s_min_u, s_min_v, s_max_u, s_max_v), width, height));
+          surfaces.push_back(Surface(texture, Rectf(s_min_u, s_min_v, s_max_u, s_max_v), width, height));
+        }
     }
-  }
-  SDL_FreeSurface(image);
 }
 
 static int power_of_two(int val) {
@@ -142,43 +131,20 @@
 }
 
 Texture
-SurfaceManager::create_texture(SDL_Surface* image,
+SurfaceManager::create_texture(const SoftwareSurface& image,
                                float& maxu, float& maxv)
 {
-  int texture_w = power_of_two(image->w);
-  int texture_h = power_of_two(image->h);
-#if SDL_BYTEORDER == SDL_BIG_ENDIAN
-  SDL_Surface* convert = SDL_CreateRGBSurface(SDL_SWSURFACE,
-      texture_w, texture_h, 32,
-      0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
-#else
-  SDL_Surface* convert = SDL_CreateRGBSurface(SDL_SWSURFACE,
-      texture_w, texture_h, 32,
-      0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
-#endif
+  int texture_w = power_of_two(image.get_width());
+  int texture_h = power_of_two(image.get_height());
 
-  if(convert == 0) 
-  {
-    throw std::runtime_error("Couldn't create texture: out of memory");
-  }
-  SDL_SetAlpha(image, 0, 0);
-  SDL_BlitSurface(image, 0, convert, 0);
+  SoftwareSurface convert(texture_w, texture_h);
 
-  Texture texture;
+  SDL_BlitSurface(image.get_surface(), 0, convert.get_surface(), 0);
 
-  try 
-  {
-    texture = Texture(convert);
-  }
-  catch(...) 
-  {
-    SDL_FreeSurface(convert);
-    throw;
-  }
-  SDL_FreeSurface(convert);
+  Texture texture = Texture(convert);
   
-  maxu = static_cast<float>(image->w)/static_cast<float>(texture_w);
-  maxv = static_cast<float>(image->h)/static_cast<float>(texture_h);
+  maxu = static_cast<float>(image.get_width())/static_cast<float>(texture_w);
+  maxv = static_cast<float>(image.get_height())/static_cast<float>(texture_h);
 
   return texture;
 }

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -22,7 +22,6 @@
 #include <string>
 #include <vector>
 #include <map>
-#include <SDL.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include "texture.hpp"
@@ -53,7 +52,7 @@
   void load_grid(const std::string& filename,
       std::vector<Surface>& surfaces, int width, int height);
 
-  Texture create_texture(SDL_Surface* image, 
+  Texture create_texture(const SoftwareSurface& image,
                          float& maxu, float& maxv);
 
   /** Removes all cached Sprites that are no longer in use */

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/texture.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -22,6 +22,7 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include "texture.hpp"
+#include "display/software_surface.hpp"
 #include "display/opengl_state.hpp"
 #include "texture_manager.hpp"
 #include "util/util.hpp"
@@ -83,19 +84,17 @@
   return (v & (v-1)) == 0;
 }
 
-Texture::Texture(SDL_Surface* image, GLint glformat)
+Texture::Texture(const SoftwareSurface& image, GLint glformat)
   : impl(new TextureImpl())
 {
   impl->target = GL_TEXTURE_2D;
-  impl->width  = image->w;
-  impl->height = image->h;
+  impl->width  = image.get_width();
+  impl->height = image.get_height();
 
-  const SDL_PixelFormat* format = image->format;
-
-  if(!is_power_of_2(image->w) || !is_power_of_2(image->h))
+  if(!is_power_of_2(image.get_width()) || !is_power_of_2(image.get_height()))
     throw std::runtime_error("image has no power of 2 size");
 
-  if(format->BitsPerPixel != 24 && format->BitsPerPixel != 32)
+  if (image.get_bits_per_pixel() != 24 && image.get_bits_per_pixel() != 32)
     throw std::runtime_error("image has not 24 or 32 bit color depth");
 
   // FIXME: User SDL_ConvertSurface to bring images in the right format
@@ -105,17 +104,19 @@
     {
       GLint maxt;
       glGetIntegerv(GL_MAX_TEXTURE_SIZE, &maxt);
-      if(image->w > maxt || image->h > maxt)
+
+      if(image.get_width() > maxt || image.get_height() > maxt)
         {
           throw std::runtime_error("Texture size not supported");
         }
 
       GLint sdl_format;
-      if (format->BytesPerPixel == 3)
+
+      if (image.get_bytes_per_pixel() == 3)
         {
           sdl_format = GL_RGB;
         }
-      else if (format->BytesPerPixel == 4)
+      else if (image.get_bytes_per_pixel() == 4)
         {
           sdl_format = GL_RGBA;
         }
@@ -129,10 +130,10 @@
       state.activate();
 
       glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
-      glPixelStorei(GL_UNPACK_ROW_LENGTH, image->pitch/format->BytesPerPixel);
+      glPixelStorei(GL_UNPACK_ROW_LENGTH, image.get_pitch() / image.get_bytes_per_pixel());
       glTexImage2D(impl->target, 0, glformat,
-                   image->w, image->h, 0, sdl_format,
-                   GL_UNSIGNED_BYTE, image->pixels);
+                   image.get_width(), image.get_height(), 0, sdl_format,
+                   GL_UNSIGNED_BYTE, image.get_pixels());
 
       assert_gl("creating texture");
 
@@ -173,14 +174,15 @@
 }
 
 void
-Texture::put(SDL_Surface* image, int x, int y)
+Texture::put(const SoftwareSurface& image, int x, int y)
 {
   GLint sdl_format;
-  if (image->format->BytesPerPixel == 3)
+
+  if (image.get_bytes_per_pixel() == 3)
     {
       sdl_format = GL_RGB;
     }
-  else if (image->format->BytesPerPixel == 4)
+  else if (image.get_bytes_per_pixel() == 4)
     {
       sdl_format = GL_RGBA;
     }
@@ -196,11 +198,11 @@
   // FIXME: Add some checks here to make sure image has the right format 
   glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
   glPixelStorei(GL_UNPACK_ROW_LENGTH,
-                image->pitch / image->format->BytesPerPixel);
+                image.get_pitch() / image.get_bytes_per_pixel());
 
   glTexSubImage2D(impl->target, 0, x, y,
-                  image->w, image->h, sdl_format, GL_UNSIGNED_BYTE,
-                  image->pixels);
+                  image.get_width(), image.get_height(), sdl_format, GL_UNSIGNED_BYTE,
+                  image.get_pixels());
 }
 
 void

Modified: trunk/windstille/src/display/texture.hpp
===================================================================
--- trunk/windstille/src/display/texture.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/texture.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -23,11 +23,11 @@
 #include <string>
 #include <GL/glew.h>
 #include <GL/gl.h>
-#include <SDL.h>
 #include <boost/shared_ptr.hpp>
-
+
+class SoftwareSurface;
 class TextureImpl;
-
+
 class Texture
 {
 public:
@@ -39,10 +39,10 @@
   explicit Texture(const std::string& filename);
 
   /**
-   * Upload an SDL_Surface onto an OpenGL texture. The surface must have power
+   * Upload an SoftwareSurface onto an OpenGL texture. The surface must have power
    * of 2 dimensions
    * */
-  explicit Texture(SDL_Surface* image, GLint format = GL_RGBA);
+  explicit Texture(const SoftwareSurface& image, GLint format = GL_RGBA);
 
   /** 
    * Create an empty Texture with the given dimensions
@@ -65,7 +65,7 @@
   void set_filter(GLenum mode);
 
   /** Uploads the given image to the given coordinates */
-  void put(SDL_Surface* image, int x, int y);
+  void put(const SoftwareSurface& image, int x, int y);
 
   GLuint get_handle() const;
   
@@ -81,7 +81,7 @@
 private:
   boost::shared_ptr<TextureImpl> impl;
 };
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -21,12 +21,12 @@
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
-#include <SDL_image.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include "util/util.hpp"
 #include "app/globals.hpp"
 #include "texture.hpp"
+#include "software_surface.hpp"
 #include "physfs/physfs_sdl.hpp"
 
 TextureManager* texture_manager = 0;
@@ -50,35 +50,26 @@
 {
   Textures::iterator i = textures.find(filename);
   if(i != textures.end())
-    return i->second;
-
-  SDL_Surface* image = 0;
-  try {
-    image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
-    if(!image) {
-      std::ostringstream msg;
-      msg << "Couldn't load image '" << filename << "' :" << SDL_GetError();
-      throw std::runtime_error(msg.str());
+    {
+      return i->second;
     }
-  } catch(std::exception& e) {
-    std::cerr << e.what() << std::endl;
-    return get("images/404.png");
-  }
+  else
+    {
+      try 
+        {
+          SoftwareSurface image(filename);
+          Texture texture(image);
 
-  Texture texture;
-  try {
-    texture = Texture(image);
-  } catch(std::exception& e) {
-    SDL_FreeSurface(image);
-    std::ostringstream msg;
-    msg << "Couldn't create texture for '" << filename << "': " << e.what();
-    throw std::runtime_error(msg.str());
-  }
+          textures.insert(std::make_pair(filename, texture));
 
-  SDL_FreeSurface(image);
-  
-  textures.insert(std::make_pair(filename, texture));
-  return texture;
+          return texture;
+        } 
+      catch(std::exception& e) 
+        {
+          std::cerr << e.what() << std::endl;
+          return get("images/404.png");
+        }
+    }
 }
 
 /* EOF */

Modified: trunk/windstille/src/display/texture_manager.hpp
===================================================================
--- trunk/windstille/src/display/texture_manager.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/display/texture_manager.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -21,7 +21,6 @@
 
 #include <string>
 #include <map>
-#include <SDL.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
 

Modified: trunk/windstille/src/engine/sector.hpp
===================================================================
--- trunk/windstille/src/engine/sector.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/engine/sector.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -110,10 +110,6 @@
   TileMap* get_tilemap() const { return interactive_tilemap; }
   TileMap* get_tilemap2() const { return interactivebackground_tilemap; }
   void     set_tilemap(TileMap* t);
-  Player*  get_player() const
-  {
-    return player;
-  }
 
   void call_script_function(const std::string& name);
   

Modified: trunk/windstille/src/font/border_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/font/border_font_effect.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -17,6 +17,7 @@
 */
 
 #include <algorithm>
+#include "display/software_surface.hpp"
 #include "border_font_effect.hpp"
 
 BorderFontEffect::BorderFontEffect(int size_, bool outline_)
@@ -60,22 +61,20 @@
 }
 
 void
-BorderFontEffect::blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const
+BorderFontEffect::blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const
 {
-  SDL_LockSurface(target);
-  
   x_pos += size;
   y_pos += size;
 
   int start_x = std::max(0, -x_pos);
   int start_y = std::max(0, -y_pos);
   
-  int end_x = std::min(brush.width, target->w - x_pos);
-  int end_y = std::min(brush.rows,  target->h - y_pos);
+  int end_x = std::min(brush.width, target.get_width()  - x_pos);
+  int end_y = std::min(brush.rows,  target.get_height() - y_pos);
 
-  unsigned char* target_buf = static_cast<unsigned char*>(target->pixels);
+  unsigned char* target_buf = static_cast<unsigned char*>(target.get_pixels());
 
-  int target_pitch = target->pitch;
+  int target_pitch = target.get_pitch();
 
   uint8_t red   = 0;
   uint8_t blue  = 0;
@@ -120,8 +119,6 @@
             target_buf[target_pos + 3] = std::min(target_buf[target_pos + 3] + brush.buffer[brush_pos], 255);
           }
     }
+}  
 
-  SDL_UnlockSurface(target);
-}
-
 /* EOF */

Modified: trunk/windstille/src/font/border_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/border_font_effect.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/font/border_font_effect.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -45,7 +45,7 @@
   int get_x_offset(int orig_glyph_offset) const;
   int get_y_offset(int orig_glyph_offset) const;
   
-  void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
+  void blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
 
 private:
   BorderFontEffect (const BorderFontEffect&);

Modified: trunk/windstille/src/font/font_effect.hpp
===================================================================
--- trunk/windstille/src/font/font_effect.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/font/font_effect.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -19,11 +19,12 @@
 #ifndef HEADER_WINDSTILLE_FONT_FONT_EFFECT_HPP
 #define HEADER_WINDSTILLE_FONT_FONT_EFFECT_HPP
 
-#include <SDL.h>
 #include <ft2build.h>
 #include FT_FREETYPE_H
 #include FT_GLYPH_H
-
+
+class SoftwareSurface;
+
 /** 
  *  The FontEffect class manages the blitting from a glyph bitmap to
  *  the SDL_Surface, it allows to apply different kinds of effects to
@@ -45,13 +46,13 @@
   virtual int get_x_offset(int orig_glyph_offset) const =0;
   virtual int get_y_offset(int orig_glyph_offset) const =0;
   
-  virtual void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const =0;
+  virtual void blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const =0;
 
 private:
   FontEffect (const FontEffect&);
   FontEffect& operator= (const FontEffect&);
 };
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/font/no_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/font/no_font_effect.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -1,33 +1,27 @@
-/*  $Id$
-**   __      __ __             ___        __   __ __   __
-**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
-**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
-**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
-**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
-**         \/          \/      \/    \/                         \/
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
 **  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
 **
-**  This program is free software; you can redistribute it and/or
-**  modify it under the terms of the GNU General Public License
-**  as published by the Free Software Foundation; either version 2
-**  of the License, or (at your option) any later version.
-**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
 **  This program is distributed in the hope that it will be useful,
 **  but WITHOUT ANY WARRANTY; without even the implied warranty of
 **  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 **  GNU General Public License for more details.
-** 
+**  
 **  You should have received a copy of the GNU General Public License
-**  along with this program; if not, write to the Free Software
-**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-**  02111-1307, USA.
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 #include "display/blitter.hpp"
+#include "display/software_surface.hpp"
 #include "no_font_effect.hpp"
 
 void
-NoFontEffect::blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const
+NoFontEffect::blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const
 {
   blit_ftbitmap(target, brush, x_pos, y_pos);
 }

Modified: trunk/windstille/src/font/no_font_effect.hpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/font/no_font_effect.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -36,7 +36,7 @@
   int get_x_offset(int orig_glyph_offset) const { return orig_glyph_offset; }
   int get_y_offset(int orig_glyph_offset) const { return orig_glyph_offset; }
   
-  void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
+  void blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
   
 private:
   NoFontEffect (const NoFontEffect&);

Modified: trunk/windstille/src/font/ttf_font.cpp
===================================================================
--- trunk/windstille/src/font/ttf_font.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/font/ttf_font.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -27,6 +27,7 @@
 
 #include "display/blitter.hpp"
 #include "display/opengl_state.hpp"
+#include "display/software_surface.hpp"
 #include "display/texture_manager.hpp"
 #include "font_effect.hpp"
 #include "physfs/physfs_stream.hpp"
@@ -85,9 +86,8 @@
   FT_Select_Charmap(face,  FT_ENCODING_UNICODE);
 
   // FIXME: should calculate texture size, based on font size
-  SDL_Surface* pixelbuffer = create_surface_rgba(1024, 1024);
-  SDL_SetAlpha(pixelbuffer, 0, 0);
-
+  SoftwareSurface pixelbuffer(1024, 1024);
+  
   int x_pos = 1;
   int y_pos = 1;
   
@@ -124,39 +124,30 @@
                          effect.get_y_offset(-face->glyph->bitmap_top)),
                    Size(glyph_width, glyph_height));
 
-          Rectf uv(x_pos/float(pixelbuffer->w),
-                   y_pos/float(pixelbuffer->h),
-                   (x_pos + glyph_width)/float(pixelbuffer->w),
-                   (y_pos + glyph_height)/float(pixelbuffer->h));
+          Rectf uv(x_pos/float(pixelbuffer.get_width()),
+                   y_pos/float(pixelbuffer.get_height()),
+                   (x_pos + glyph_width)/float(pixelbuffer.get_width()),
+                   (y_pos + glyph_height)/float(pixelbuffer.get_height()));
       
           impl->characters.push_back(TTFCharacter(pos, uv,
                                                   face->glyph->advance.x >> 6));
 
           // we leave a one pixel border around the letters which we fill with generate_border
           x_pos += glyph_width + 2;
-          if (x_pos + max_glyph_height + 2 > pixelbuffer->w) // FIXME: should use glyph_width of the next glyph instead of max_glyph_height
+          if (x_pos + max_glyph_height + 2 > pixelbuffer.get_width()) // FIXME: should use glyph_width of the next glyph instead of max_glyph_height
             {
               y_pos += max_glyph_height + 2;
               x_pos = 1;
             }
 
-          if (y_pos + max_glyph_height + 2 > pixelbuffer->h)
+          if (y_pos + max_glyph_height + 2 > pixelbuffer.get_height())
             throw std::runtime_error("Font Texture to small");
         }
     }
   FT_Done_Face(face);
 
-  try 
-    {
-      impl->texture = Texture(pixelbuffer);
-      impl->texture.set_filter(GL_NEAREST);
-    }
-  catch(...) 
-    {
-      SDL_FreeSurface(pixelbuffer);
-      throw;
-    }
-  SDL_FreeSurface(pixelbuffer);
+  impl->texture = Texture(pixelbuffer);
+  impl->texture.set_filter(GL_NEAREST);
 }
 
 TTFFont::~TTFFont()

Modified: trunk/windstille/src/gui/automap.cpp
===================================================================
--- trunk/windstille/src/gui/automap.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/gui/automap.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -21,6 +21,7 @@
 #include "engine/sector.hpp"
 #include "tile/tile_map.hpp"
 #include "display/display.hpp"
+#include "display/software_surface.hpp"
 #include "automap.hpp"
 
 namespace gui {
@@ -37,47 +38,33 @@
     zoom(6.0f)
 {
   TileMap* tilemap = Sector::current()->get_tilemap();
-  
-#if SDL_BYTEORDER == SDL_BIG_ENDIAN
-  SDL_Surface* image = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                            tilemap->get_width(), tilemap->get_height(), 32,
-                                            0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
-#else
-  SDL_Surface* image = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                            tilemap->get_width(), tilemap->get_height(), 32,
-                                            0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
-#endif
 
-  SDL_LockSurface(image);
+  SoftwareSurface image(tilemap->get_width(), tilemap->get_height());
   
-  unsigned char* buffer = static_cast<unsigned char*>(image->pixels);
+  unsigned char* buffer = static_cast<unsigned char*>(image.get_pixels());
 
-  for(int y = 0; y < image->h; ++y)
-    for(int x = 0; x < image->w; ++x)
+  for(int y = 0; y < image.get_height(); ++y)
+    for(int x = 0; x < image.get_width(); ++x)
       {
         if (tilemap->get_pixel(x, y))
           {
-            buffer[image->pitch * y + 4*x + 0] = 255;
-            buffer[image->pitch * y + 4*x + 1] = 255;
-            buffer[image->pitch * y + 4*x + 2] = 255;
-            buffer[image->pitch * y + 4*x + 3] = 255;
+            buffer[image.get_pitch() * y + 4*x + 0] = 255;
+            buffer[image.get_pitch() * y + 4*x + 1] = 255;
+            buffer[image.get_pitch() * y + 4*x + 2] = 255;
+            buffer[image.get_pitch() * y + 4*x + 3] = 255;
           }
         else
           {
-            buffer[image->pitch * y + 4*x + 0] = 0;
-            buffer[image->pitch * y + 4*x + 1] = 0;
-            buffer[image->pitch * y + 4*x + 2] = 0;
-            buffer[image->pitch * y + 4*x + 3] = 255;
+            buffer[image.get_pitch() * y + 4*x + 0] = 0;
+            buffer[image.get_pitch() * y + 4*x + 1] = 0;
+            buffer[image.get_pitch() * y + 4*x + 2] = 0;
+            buffer[image.get_pitch() * y + 4*x + 3] = 255;
           }
       }
 
   surface = Surface(tilemap->get_width(), tilemap->get_height());
   surface.get_texture().set_filter(GL_NEAREST);
   surface.get_texture().put(image, 0, 0);
-
-  SDL_UnlockSurface(image);
-
-  SDL_FreeSurface(image);
 }
 
 Automap::~Automap()

Modified: trunk/windstille/src/tile/tile_description.cpp
===================================================================
--- trunk/windstille/src/tile/tile_description.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/tile/tile_description.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -19,10 +19,9 @@
 #include <iostream>
 #include <sstream>
 #include <stdexcept>
-#include <SDL.h>
-#include <SDL_image.h>
 #include "physfs/physfs_sdl.hpp"
 #include "app/globals.hpp"
+#include "display/software_surface.hpp"
 #include "tile.hpp"
 #include "tile_packer.hpp"
 #include "tile_factory.hpp"
@@ -47,55 +46,38 @@
   if (debug)
     std::cout << "Loading tiles: " << filename << std::endl;
 
-  SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
-  if(!image) 
+  SoftwareSurface image(filename);
+
+  int num_tiles = width * height; //(image->w/TILE_RESOLUTION) * (image->h/TILE_RESOLUTION);
+  if (int(colmap.size()) != num_tiles)
     {
-      std::ostringstream msg;
-      msg << "Couldn't load image '" << filename << "': " << SDL_GetError();
-      throw std::runtime_error(msg.str());
+      std::ostringstream str;
+      str << "'colmap' information and num_tiles mismatch (" 
+          << colmap.size() << " != " << num_tiles << ") for image '" << filename << "'";
+      throw std::runtime_error(str.str());
     }
-  else
+
+  if (int(ids.size()) != num_tiles)
     {
-      try 
+      std::ostringstream str;
+      str << "'ids' information and num_tiles mismatch (" 
+          << ids.size() << " != " << num_tiles << ") for image '" << filename << "'";
+      throw std::runtime_error(str.str());
+    }
+    
+  int i = 0;
+  for (int y = 0; y < height*TILE_RESOLUTION; y += TILE_RESOLUTION)
+    {
+      for (int x = 0; x < width*TILE_RESOLUTION; x += TILE_RESOLUTION)
         {
-          int num_tiles = width * height; //(image->w/TILE_RESOLUTION) * (image->h/TILE_RESOLUTION);
-          if (int(colmap.size()) != num_tiles)
+          if(ids[i] != -1)
             {
-              std::ostringstream str;
-              str << "'colmap' information and num_tiles mismatch (" 
-                  << colmap.size() << " != " << num_tiles << ") for image '" << filename << "'";
-              throw std::runtime_error(str.str());
+              factory->pack(ids[i], colmap[i], image,
+                            Rect(x, y, x+TILE_RESOLUTION, y+TILE_RESOLUTION));
             }
 
-          if (int(ids.size()) != num_tiles)
-            {
-              std::ostringstream str;
-              str << "'ids' information and num_tiles mismatch (" 
-                  << ids.size() << " != " << num_tiles << ") for image '" << filename << "'";
-              throw std::runtime_error(str.str());
-            }
-    
-          int i = 0;
-          for (int y = 0; y < height*TILE_RESOLUTION; y += TILE_RESOLUTION)
-            {
-              for (int x = 0; x < width*TILE_RESOLUTION; x += TILE_RESOLUTION)
-                {
-                  if(ids[i] != -1)
-                    {
-                      factory->pack(ids[i], colmap[i], image,
-                                    Rect(x, y, x+TILE_RESOLUTION, y+TILE_RESOLUTION));
-                    }
-
-                  i += 1; 
-                }
-            }
-        } 
-      catch(...) 
-        {
-          SDL_FreeSurface(image);
-          throw;
+          i += 1; 
         }
-      SDL_FreeSurface(image);
     }
 }
 

Modified: trunk/windstille/src/tile/tile_factory.cpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/tile/tile_factory.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -18,8 +18,6 @@
 
 #include <string>
 #include <sstream>
-#include <SDL.h>
-#include <SDL_image.h>
 #include <assert.h>
 #include <sstream>
 #include <iostream>
@@ -31,6 +29,7 @@
 #include "tile_description.hpp"
 #include "util/sexpr_file_reader.hpp"
 #include "display/surface_manager.hpp"
+#include "display/software_surface.hpp"
 #include "display/texture.hpp"
 #include "physfs/physfs_sdl.hpp"
 
@@ -39,23 +38,19 @@
 std::string TileFactory::tile_def_file = "tiles.scm";
 
 /** Check if the given region of the given image is fully transparent */
-bool surface_empty(SDL_Surface* image, int sx, int sy, int w, int h)
-{
-  SDL_LockSurface(image);
+bool surface_empty(const SoftwareSurface& image, int sx, int sy, int w, int h)
+{ 
+  unsigned char* data = static_cast<unsigned char*>(image.get_pixels());
   
-  unsigned char* data = static_cast<unsigned char*>(image->pixels);
-  
   for(int y = sy; y < sy + h; ++y)
     for(int x = sx; x < sx + w; ++x)
       {
-        if (data[y * image->pitch + 4*x + 3] != 0)
+        if (data[y * image.get_pitch() + 4*x + 3] != 0)
           { 
-            SDL_UnlockSurface(image);
             return false;
           }
       }
 
-  SDL_UnlockSurface(image);
   return true;
 }
 
@@ -129,7 +124,7 @@
 }
 
 void
-TileFactory::pack(int id, int colmap, SDL_Surface* image, const Rect& rect)
+TileFactory::pack(int id, int colmap, const SoftwareSurface& image, const Rect& rect)
 {
   if(id < int(tiles.size())
      && tiles[id] != 0

Modified: trunk/windstille/src/tile/tile_factory.hpp
===================================================================
--- trunk/windstille/src/tile/tile_factory.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/tile/tile_factory.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -63,7 +63,7 @@
   /** 
    * Adds a surface to the TileFactory
    */
-  void pack(int id, int colmap, SDL_Surface* image, const Rect& rect);
+  void pack(int id, int colmap, const SoftwareSurface& image, const Rect& rect);
 
   /** Create the default TileFactor*/
   static void init();

Modified: trunk/windstille/src/tile/tile_packer.cpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.cpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/tile/tile_packer.cpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -24,6 +24,7 @@
 #include "tile_packer.hpp"
 #include "util/util.hpp"
 #include "display/blitter.hpp"
+#include "display/software_surface.hpp"
 
 class TilePackerImpl
 {
@@ -60,40 +61,31 @@
 /** Pack a tile and return the position where it is placed in the
     pixel buffer */
 Rectf
-TilePacker::pack(SDL_Surface* image, int x, int y, int w, int h)
+TilePacker::pack(const SoftwareSurface& image, int x, int y, int w, int h)
 {
   assert(w == TILE_RESOLUTION && h == TILE_RESOLUTION);
   assert(!is_full());
 
-#if SDL_BYTEORDER == SDL_BIG_ENDIAN
-  SDL_Surface* convert = SDL_CreateRGBSurface(SDL_SWSURFACE,
-    w+2, h+2, 32,
-    0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
-#else
-  SDL_Surface* convert = SDL_CreateRGBSurface(SDL_SWSURFACE,
-    w+2, h+2, 32,
-      0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
-#endif
-  if(convert == 0)
-    throw std::runtime_error("Couldn't pack texture: out of memory");
+  SoftwareSurface convert(w+2, h+2);
 
   SDL_Rect source_rect;
   source_rect.x = x;
   source_rect.y = y;
   source_rect.w = w;
   source_rect.h = h;
+
   SDL_Rect dest_rect;
   dest_rect.x = 1;
   dest_rect.y = 1;
   dest_rect.w = w;
   dest_rect.h = h;
-  SDL_SetAlpha(image, 0, 0);
-  SDL_BlitSurface(image, &source_rect, convert, &dest_rect);
+
+  SDL_BlitSurface(image.get_surface(), &source_rect, convert.get_surface(), &dest_rect);
+
   generate_border(convert, 1, 1, TILE_RESOLUTION, TILE_RESOLUTION);
 
   impl->texture.put(convert, impl->x_pos, impl->y_pos);
-  SDL_FreeSurface(convert);
-
+  
   assert_gl("updating tilepacker texture");
 
   Rectf rect(Vector2f(static_cast<float>(impl->x_pos+1)/impl->width, 

Modified: trunk/windstille/src/tile/tile_packer.hpp
===================================================================
--- trunk/windstille/src/tile/tile_packer.hpp	2009-03-19 17:43:11 UTC (rev 2706)
+++ trunk/windstille/src/tile/tile_packer.hpp	2009-03-19 19:42:10 UTC (rev 2707)
@@ -19,12 +19,12 @@
 #ifndef HEADER_WINDSTILLE_TILE_TILE_PACKER_HPP
 #define HEADER_WINDSTILLE_TILE_TILE_PACKER_HPP
 
-#include <SDL.h>
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include "display/texture.hpp"
 #include "math/rect.hpp"
 
+class SoftwareSurface;
 class TilePackerImpl;
 
 /** Creates a pixelbuffer of the given size and packs 32x32 large
@@ -40,7 +40,7 @@
 
   /** Pack a tile and return the position where it is placed in the
       pixel buffer */
-  Rectf pack(SDL_Surface* image, int x, int y, int w, int h);
+  Rectf pack(const SoftwareSurface& image, int x, int y, int w, int h);
 
   /** Return true if the PixelBuffer is full */
   bool is_full() const;



From grumbel at mail.berlios.de  Fri Mar 20 00:08:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 20 Mar 2009 00:08:51 +0100
Subject: [Windstille-commit] r2708 - in trunk/windstille/src: . editor engine
Message-ID: <200903192308.n2JN8p0v028251@sheep.berlios.de>

Author: grumbel
Date: 2009-03-20 00:08:50 +0100 (Fri, 20 Mar 2009)
New Revision: 2708

Removed:
   trunk/windstille/src/editor/SConstruct
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/engine/sector.cpp
Log:
Moved editor build stuff into src/SConscript, experimenting a bit with drag&drop, some cleanup

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-19 19:42:10 UTC (rev 2707)
+++ trunk/windstille/src/SConscript	2009-03-19 23:08:50 UTC (rev 2708)
@@ -35,162 +35,180 @@
 env.ParseConfig('freetype-config --libs --cflags')
 
 env.Program('../windstille', [
-'app/config.cpp',
-'app/console.cpp',
-'app/controller_def.cpp',
-'app/globals.cpp',
-'app/menu_manager.cpp',
-'app/windstille_main.cpp',
-'armature/armature.cpp',
-'armature/bone.cpp',
-'armature/mesh.cpp',
-'armature/model.cpp',
-'armature/pose.cpp',
-'collision/collision_data.cpp',
-'collision/collision_engine.cpp',
-'collision/collision_object.cpp',
-'collision/collision_test.cpp',
-'collision/stair_contact.cpp',
-'display/blitter.cpp',
-'display/display.cpp',
-'display/drawing_context.cpp',
-'display/framebuffer.cpp',
-'display/graphic_context_state.cpp',
-'display/opengl_state.cpp',
-'display/render_buffer.cpp',
-'display/scene_context.cpp',
-'display/shader_object.cpp',
-'display/shader_program.cpp',
-'display/software_surface.cpp',
-'display/surface.cpp',
-'display/surface_manager.cpp',
-'display/text_area.cpp',
-'display/texture.cpp',
-'display/texture_manager.cpp',
-'display/vertex_array_drawing_request.cpp',
-'engine/camera.cpp',
-'engine/entity.cpp',
-'engine/game_object.cpp',
-'engine/physics.cpp',
-'engine/script_manager.cpp',
-'engine/squirrel_thread.cpp',
-'engine/sector.cpp',
-'font/border_font_effect.cpp',
-'font/no_font_effect.cpp',
-'font/fonts.cpp',
-'font/ttf_font.cpp',
-'gui/automap.cpp',
-'gui/button.cpp',
-'gui/component.cpp',
-'gui/grid_component.cpp',
-'gui/group_component.cpp',
-'gui/gui_manager.cpp',
-'gui/label.cpp',
-'gui/list_view.cpp',
-'gui/menu.cpp',
-'gui/menu_component.cpp',
-'gui/menu_item.cpp',
-'gui/root_component.cpp',
-'gui/slider.cpp',
-'gui/tab_component.cpp',
-'gui/text_view.cpp',
-'hud/controller_help_window.cpp',
-'hud/conversation.cpp',
-'hud/dialog_manager.cpp',
-'hud/inventory.cpp',
-'hud/pda.cpp',
-'hud/speech_manager.cpp',
-'input/controller.cpp',
-'input/controller_description.cpp',
-'input/input_configurator.cpp',
-'input/input_manager.cpp',
-'input/input_manager_impl.cpp',
-'input/input_manager_sdl.cpp',
-'input/wiimote.cpp',
-'lisp/getters.cpp',
-'lisp/lexer.cpp',
-'lisp/lisp.cpp',
-'lisp/parser.cpp',
-'lisp/properties.cpp',
-'lisp/writer.cpp',
-'math/line.cpp',
-'math/matrix.cpp',
-'math/origin.cpp',
-'math/quaternion.cpp',
-'math/random.cpp',
-'math/rect.cpp',
-'math/vector2f.cpp',
-'navigation/navigation_graph.cpp',
-'navigation/node.cpp',
-'navigation/properties.cpp',
-'navigation/edge.cpp',
-'navigation/edge_position.cpp',
-'objects/background_gradient.cpp',
-'objects/bomb.cpp',
-'objects/box.cpp',
-'objects/character.cpp',
-'objects/elevator.cpp',
-'objects/grenade.cpp',
-'objects/hedgehog.cpp',
-'objects/laser_pointer.cpp',
-'objects/liquid.cpp',
-'objects/nightvision.cpp',
-'objects/pistol.cpp',
-'objects/player.cpp',
-'objects/scriptable_object.cpp',
-'objects/shockwave.cpp',
-'objects/spider_mine.cpp',
-'objects/swarm.cpp',
-'objects/test_object.cpp',
-'objects/trigger.cpp',
-'objects/vrdummy.cpp',
-'particles/deform_drawer.cpp',
-'particles/particle_system.cpp',
-'particles/spark_drawer.cpp',
-'particles/surface_drawer.cpp',
-'physfs/physfs_sdl.cpp',
-'physfs/physfs_stream.cpp',
-'screen/armature_test.cpp',
-'screen/game_session.cpp',
-'screen/geometry_test.cpp',
-'screen/navigation_test.cpp',
-'screen/particle_viewer.cpp',
-'screen/screen.cpp',
-'screen/screen_manager.cpp',
-'screen/sprite2dview.cpp',
-'screen/sprite3dview.cpp',
-'screen/title_screen.cpp',
-'scripting/game_objects.cpp',
-'scripting/interface.cpp',
-'scripting/squirrel_error.cpp',
-'scripting/util.cpp',
-'scripting/wrapper.cpp',
-'sound/sound_file.cpp',
-'sound/wav_sound_file.cpp',
-'sound/ogg_sound_file.cpp',
-'sound/sound_manager.cpp',
-'sound/sound_source.cpp',
-'sound/stream_sound_source.cpp',
-'sprite2d/data.cpp',
-'sprite2d/manager.cpp',
-'sprite2d/sprite.cpp',
-'sprite3d/data.cpp',
-'sprite3d/manager.cpp',
-'sprite3d/sprite3d.cpp',
-'tile/tile.cpp',
-'tile/tile_description.cpp',
-'tile/tile_factory.cpp',
-'tile/tile_map.cpp',
-'tile/tile_packer.cpp',
-'util/baby_xml.cpp',
-'util/command_line.cpp',
-'util/command_line_generic.cpp',
-'util/file_reader.cpp',
-'util/getter.cpp',
-'util/response_curve.cpp',
-'util/sexpr_file_reader.cpp',
-'util/util.cpp',
-'screen/view.cpp',
-])
+        'app/config.cpp',
+        'app/console.cpp',
+        'app/controller_def.cpp',
+        'app/globals.cpp',
+        'app/menu_manager.cpp',
+        'app/windstille_main.cpp',
+        'armature/armature.cpp',
+        'armature/bone.cpp',
+        'armature/mesh.cpp',
+        'armature/model.cpp',
+        'armature/pose.cpp',
+        'collision/collision_data.cpp',
+        'collision/collision_engine.cpp',
+        'collision/collision_object.cpp',
+        'collision/collision_test.cpp',
+        'collision/stair_contact.cpp',
+        'display/blitter.cpp',
+        'display/display.cpp',
+        'display/drawing_context.cpp',
+        'display/framebuffer.cpp',
+        'display/graphic_context_state.cpp',
+        'display/opengl_state.cpp',
+        'display/render_buffer.cpp',
+        'display/scene_context.cpp',
+        'display/shader_object.cpp',
+        'display/shader_program.cpp',
+        'display/software_surface.cpp',
+        'display/surface.cpp',
+        'display/surface_manager.cpp',
+        'display/text_area.cpp',
+        'display/texture.cpp',
+        'display/texture_manager.cpp',
+        'display/vertex_array_drawing_request.cpp',
+        'engine/camera.cpp',
+        'engine/entity.cpp',
+        'engine/game_object.cpp',
+        'engine/physics.cpp',
+        'engine/script_manager.cpp',
+        'engine/squirrel_thread.cpp',
+        'engine/sector.cpp',
+        'font/border_font_effect.cpp',
+        'font/no_font_effect.cpp',
+        'font/fonts.cpp',
+        'font/ttf_font.cpp',
+        'gui/automap.cpp',
+        'gui/button.cpp',
+        'gui/component.cpp',
+        'gui/grid_component.cpp',
+        'gui/group_component.cpp',
+        'gui/gui_manager.cpp',
+        'gui/label.cpp',
+        'gui/list_view.cpp',
+        'gui/menu.cpp',
+        'gui/menu_component.cpp',
+        'gui/menu_item.cpp',
+        'gui/root_component.cpp',
+        'gui/slider.cpp',
+        'gui/tab_component.cpp',
+        'gui/text_view.cpp',
+        'hud/controller_help_window.cpp',
+        'hud/conversation.cpp',
+        'hud/dialog_manager.cpp',
+        'hud/inventory.cpp',
+        'hud/pda.cpp',
+        'hud/speech_manager.cpp',
+        'input/controller.cpp',
+        'input/controller_description.cpp',
+        'input/input_configurator.cpp',
+        'input/input_manager.cpp',
+        'input/input_manager_impl.cpp',
+        'input/input_manager_sdl.cpp',
+        'input/wiimote.cpp',
+        'lisp/getters.cpp',
+        'lisp/lexer.cpp',
+        'lisp/lisp.cpp',
+        'lisp/parser.cpp',
+        'lisp/properties.cpp',
+        'lisp/writer.cpp',
+        'math/line.cpp',
+        'math/matrix.cpp',
+        'math/origin.cpp',
+        'math/quaternion.cpp',
+        'math/random.cpp',
+        'math/rect.cpp',
+        'math/vector2f.cpp',
+        'navigation/navigation_graph.cpp',
+        'navigation/node.cpp',
+        'navigation/properties.cpp',
+        'navigation/edge.cpp',
+        'navigation/edge_position.cpp',
+        'objects/background_gradient.cpp',
+        'objects/bomb.cpp',
+        'objects/box.cpp',
+        'objects/character.cpp',
+        'objects/elevator.cpp',
+        'objects/grenade.cpp',
+        'objects/hedgehog.cpp',
+        'objects/laser_pointer.cpp',
+        'objects/liquid.cpp',
+        'objects/nightvision.cpp',
+        'objects/pistol.cpp',
+        'objects/player.cpp',
+        'objects/scriptable_object.cpp',
+        'objects/shockwave.cpp',
+        'objects/spider_mine.cpp',
+        'objects/swarm.cpp',
+        'objects/test_object.cpp',
+        'objects/trigger.cpp',
+        'objects/vrdummy.cpp',
+        'particles/deform_drawer.cpp',
+        'particles/particle_system.cpp',
+        'particles/spark_drawer.cpp',
+        'particles/surface_drawer.cpp',
+        'physfs/physfs_sdl.cpp',
+        'physfs/physfs_stream.cpp',
+        'screen/armature_test.cpp',
+        'screen/game_session.cpp',
+        'screen/geometry_test.cpp',
+        'screen/navigation_test.cpp',
+        'screen/particle_viewer.cpp',
+        'screen/screen.cpp',
+        'screen/screen_manager.cpp',
+        'screen/sprite2dview.cpp',
+        'screen/sprite3dview.cpp',
+        'screen/title_screen.cpp',
+        'scripting/game_objects.cpp',
+        'scripting/interface.cpp',
+        'scripting/squirrel_error.cpp',
+        'scripting/util.cpp',
+        'scripting/wrapper.cpp',
+        'sound/sound_file.cpp',
+        'sound/wav_sound_file.cpp',
+        'sound/ogg_sound_file.cpp',
+        'sound/sound_manager.cpp',
+        'sound/sound_source.cpp',
+        'sound/stream_sound_source.cpp',
+        'sprite2d/data.cpp',
+        'sprite2d/manager.cpp',
+        'sprite2d/sprite.cpp',
+        'sprite3d/data.cpp',
+        'sprite3d/manager.cpp',
+        'sprite3d/sprite3d.cpp',
+        'tile/tile.cpp',
+        'tile/tile_description.cpp',
+        'tile/tile_factory.cpp',
+        'tile/tile_map.cpp',
+        'tile/tile_packer.cpp',
+        'util/baby_xml.cpp',
+        'util/command_line.cpp',
+        'util/command_line_generic.cpp',
+        'util/file_reader.cpp',
+        'util/getter.cpp',
+        'util/response_curve.cpp',
+        'util/sexpr_file_reader.cpp',
+        'util/util.cpp',
+        'screen/view.cpp',
+        ])
+
+editor_env = Environment(CPPPATH=['.'],
+                         CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'],
+                         LIBS = ['GL', 'GLEW'])
 
+editor_env.ParseConfig('pkg-config libpng --libs --cflags')
+editor_env.ParseConfig('sdl-config --cflags --libs')
+editor_env.ParseConfig('Magick++-config --libs --cppflags')
+editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
+editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
+
+editor_env.Program('editor/editor', ['editor/main.cpp',
+                              'editor/object_tree.cpp',
+                              'editor/object_selector.cpp',
+                              'editor/about_window.cpp',
+                              'editor/windstille_widget.cpp',
+                              'editor/editor_window.cpp'])
+
+
 # EOF #

Deleted: trunk/windstille/src/editor/SConstruct
===================================================================
--- trunk/windstille/src/editor/SConstruct	2009-03-19 19:42:10 UTC (rev 2707)
+++ trunk/windstille/src/editor/SConstruct	2009-03-19 23:08:50 UTC (rev 2708)
@@ -1,19 +0,0 @@
-# -*- python -*-
-
-env = Environment(CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'],
-                  LIBS = ['GL', 'GLEW'])
-
-env.ParseConfig('pkg-config libpng --libs --cflags')
-env.ParseConfig('sdl-config --cflags --libs')
-env.ParseConfig('Magick++-config --libs --cppflags')
-env.ParseConfig('pkg-config --cflags --libs libcurl')
-env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
-
-env.Program('editor', ['main.cpp',
-                       'object_tree.cpp',
-                       'object_selector.cpp',
-                       'about_window.cpp',
-                       'windstille_widget.cpp',
-                       'editor_window.cpp'])
-
-# EOF #

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-19 19:42:10 UTC (rev 2707)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-19 23:08:50 UTC (rev 2708)
@@ -80,7 +80,8 @@
 void
 ObjectSelector::on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context)
 {
-  context->set_icon(Gdk::Pixbuf::create_from_file("icon.png"), 0, 0);
+  Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file("icon.png");
+  context->set_icon(pixbuf, pixbuf->get_width()/2, pixbuf->get_height()/2);
 }
 
 void

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 19:42:10 UTC (rev 2707)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-19 23:08:50 UTC (rev 2708)
@@ -138,27 +138,32 @@
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (!glwindow->gl_begin(get_gl_context()))
-    return false;
+    {
+      return false;
+    }
+  else
+    {
+      //std::cout << "Draw" << std::endl;
+      glBegin(GL_QUADS);
+      for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
+        {
+          glVertex2f(i->x - 50, i->y - 50);
+          glVertex2f(i->x + 50, i->y - 50);
+          glVertex2f(i->x + 50, i->y + 50);
+          glVertex2f(i->x - 50, i->y + 50);
+        }
+      glEnd();
 
-  //std::cout << "Draw" << std::endl;
-  {
-    glBegin(GL_QUADS);
-    glVertex2f(150, 100);
-    glVertex2f(200, 100);
-    glVertex2f(200, 200);
-    glVertex2f(100, 200);
-    glEnd();
-  }
+      // Swap buffers.
+      if (glwindow->is_double_buffered())
+        glwindow->swap_buffers();
+      else
+        glFlush();
 
-  // Swap buffers.
-  if (glwindow->is_double_buffered())
-    glwindow->swap_buffers();
-  else
-    glFlush();
+      glwindow->gl_end();
 
-  glwindow->gl_end();
-
-  return true;
+      return true;
+    }
 }
 
 bool
@@ -231,6 +236,8 @@
 {
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
+
+  objects.push_back(Vector2f(x, y));
 }
 
 void

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-19 19:42:10 UTC (rev 2707)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-19 23:08:50 UTC (rev 2708)
@@ -19,10 +19,13 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 #define HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 
+#include <vector>
 #include <iostream>
 #include <gtkglmm.h>
 #include <gdkmm/dragcontext.h>
 #include <gtkmm/gl/widget.h>
+
+#include "math/vector2f.hpp"
 
 /** OpenGL drawing area into which the Windstille game will be
     embedded */
@@ -31,8 +34,8 @@
     public Gtk::GL::Widget<WindstilleWidget>
 {
 private:
-    
-
+  std::vector<Vector2f> objects;
+  
 public:
   WindstilleWidget();
   virtual ~WindstilleWidget();
@@ -50,6 +53,7 @@
   virtual bool key_press(GdkEventKey* event);
   virtual bool key_release(GdkEventKey* event);
 
+  // Drag&Drop
   virtual void on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& context);
   virtual void on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>&, int x, int y,
                                      const Gtk::SelectionData& data, guint info, guint time);

Modified: trunk/windstille/src/engine/sector.cpp
===================================================================
--- trunk/windstille/src/engine/sector.cpp	2009-03-19 19:42:10 UTC (rev 2707)
+++ trunk/windstille/src/engine/sector.cpp	2009-03-19 23:08:50 UTC (rev 2708)
@@ -57,11 +57,13 @@
   : filename(arg_filename),
     player(0)    
 { 
+  current_ = this;
+
   if (debug) std::cout << "Creating new Sector" << std::endl;
+
   collision_engine = std::auto_ptr<CollisionEngine>(new CollisionEngine());
   navigation_graph = std::auto_ptr<NavigationGraph>(new NavigationGraph());
 
-  current_ = this;
   interactive_tilemap = 0;
   interactivebackground_tilemap = 0;
 
@@ -73,10 +75,9 @@
   collision_engine->add(new CollisionObject(interactive_tilemap));
 
   // Spawn the Player
-  if(!player) {
-    player = new Player();
-    add(player);
-  }
+  player = new Player();
+  add(player);
+
   player->set_pos(Vector2f(300,200));
 }
 



From grumbel at mail.berlios.de  Fri Mar 20 23:10:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 20 Mar 2009 23:10:53 +0100
Subject: [Windstille-commit] r2709 - in trunk/windstille/src: . properties
Message-ID: <200903202210.n2KMArqV002988@sheep.berlios.de>

Author: grumbel
Date: 2009-03-20 23:10:52 +0100 (Fri, 20 Mar 2009)
New Revision: 2709

Added:
   trunk/windstille/src/properties/
   trunk/windstille/src/properties/properties.cpp
   trunk/windstille/src/properties/properties.hpp
   trunk/windstille/src/properties/property.cpp
   trunk/windstille/src/properties/property.hpp
   trunk/windstille/src/properties/property_set.cpp
   trunk/windstille/src/properties/property_set.hpp
Log:
Added some classes to do introspection on C++ objects

Added: trunk/windstille/src/properties/properties.cpp
===================================================================
--- trunk/windstille/src/properties/properties.cpp	2009-03-19 23:08:50 UTC (rev 2708)
+++ trunk/windstille/src/properties/properties.cpp	2009-03-20 22:10:52 UTC (rev 2709)
@@ -0,0 +1,68 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <sstream>
+#include <stdexcept>
+
+#include "property.hpp"
+#include "property_set.hpp"
+#include "properties.hpp"
+
+Properties::Properties(PropertySet* pset_, void* object_)
+  : pset(pset_),
+    object(object_)
+{
+}
+
+Property& 
+Properties::get(const std::string& name) const
+{
+  Property* prop = pset->get(name);
+  if (!prop)
+    {
+      std::ostringstream str;
+      str << "Properties: " << pset->get_name() << ": property " << name << " not found";
+      throw std::runtime_error(str.str());
+    }
+  else
+    {
+      return *prop;
+    }
+}
+
+int
+Properties::get_int(const std::string& name)  const
+{
+  return get(name).get_int(object);
+}
+
+float
+Properties::get_float(const std::string& name) const
+{
+  return get(name).get_float(object);
+}
+
+std::vector<std::string>
+Properties::get_properties() const
+{
+  std::vector<std::string> lst;
+  pset->get_properties(lst);
+  return lst;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/properties/properties.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/properties/properties.hpp
===================================================================
--- trunk/windstille/src/properties/properties.hpp	2009-03-19 23:08:50 UTC (rev 2708)
+++ trunk/windstille/src/properties/properties.hpp	2009-03-20 22:10:52 UTC (rev 2709)
@@ -0,0 +1,47 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_PROPERTIES_PROPERTIES_HPP
+#define HEADER_WINDSTILLE_PROPERTIES_PROPERTIES_HPP
+
+#include <string>
+
+class PropertySet;
+class Property;
+
+/** Simple Facade class around PropertySet and Property. Properties is
+    used to provide introspection for C++ classes */
+class Properties
+{
+private:
+  PropertySet* pset;
+  void*        object;
+
+public:
+  Properties(PropertySet* pset_, void* object_);
+
+  Property& get(const std::string& name) const;
+  int   get_int(const std::string& name) const;
+  float get_float(const std::string& name) const;
+  
+  std::vector<std::string> get_properties() const;
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/properties/properties.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/properties/property.cpp
===================================================================
--- trunk/windstille/src/properties/property.cpp	2009-03-19 23:08:50 UTC (rev 2708)
+++ trunk/windstille/src/properties/property.cpp	2009-03-20 22:10:52 UTC (rev 2709)
@@ -0,0 +1,23 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "property.hpp"
+
+
+
+/* EOF */


Property changes on: trunk/windstille/src/properties/property.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/properties/property.hpp
===================================================================
--- trunk/windstille/src/properties/property.hpp	2009-03-19 23:08:50 UTC (rev 2708)
+++ trunk/windstille/src/properties/property.hpp	2009-03-20 22:10:52 UTC (rev 2709)
@@ -0,0 +1,95 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_PROPERTIES_PROPERTY_HPP
+#define HEADER_WINDSTILLE_PROPERTIES_PROPERTY_HPP
+
+#include <string>
+
+class Property
+{
+private:
+  enum Type { INT_TYPE, FLOAT_TYPE, BOOL_TYPE } type;
+
+public:
+  Property(Type type_)
+    : type(type_)
+  {}
+  virtual ~Property() {}
+
+  virtual bool&   get_bool(void* obj) const = 0;
+  virtual int&   get_int(void* obj) const = 0;
+  virtual float& get_float(void* obj) const = 0;
+
+private:
+  Property(const Property&);
+  Property& operator=(const Property&);
+};
+
+template<class C>
+class PropertyImpl : public Property
+{
+private:
+  union {
+    bool  C::*bool_value;
+    int   C::*int_value;
+    float C::*float_value;
+  } value;
+
+  PropertyImpl(Type type)
+    : Property(type)
+  {}
+
+public:
+  static PropertyImpl<C>* create_int(int C::*int_value)
+  {
+    PropertyImpl<C>* prop = new PropertyImpl<C>(INT_TYPE);
+    prop->value.int_value = int_value;
+    return prop;
+  }
+
+  static PropertyImpl<C>* create_bool(bool C::*bool_value)
+  {
+    PropertyImpl<C>* prop = new PropertyImpl<C>(BOOL_TYPE);
+    prop->value.bool_value = bool_value;
+    return prop;
+  }
+
+  virtual bool& get_bool(void* obj) const 
+  {
+    return static_cast<C*>(obj)->*(value.bool_value);
+  }
+
+  virtual int& get_int(void* obj) const 
+  {
+    return static_cast<C*>(obj)->*(value.int_value);
+  }
+
+  virtual float& get_float(void* obj) const 
+  {
+    return static_cast<C*>(obj)->*(value.float_value);
+  }
+
+private:
+  PropertyImpl(const PropertyImpl&);
+  PropertyImpl& operator=(const PropertyImpl&);
+};
+  
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/properties/property.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/properties/property_set.cpp
===================================================================
--- trunk/windstille/src/properties/property_set.cpp	2009-03-19 23:08:50 UTC (rev 2708)
+++ trunk/windstille/src/properties/property_set.cpp	2009-03-20 22:10:52 UTC (rev 2709)
@@ -0,0 +1,84 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <sstream>
+#include <stdexcept>
+
+#include "property.hpp"
+#include "property_set.hpp"
+
+PropertySet::PropertySet(const std::string& name_, PropertySet* parent_)
+  : parent(parent_),
+    name(name_)
+{  
+}
+
+PropertySet::~PropertySet()
+{
+  for(std::map<std::string, Property*>::iterator i = properties.begin(); i != properties.end(); ++i)
+    {
+      delete i->second;
+    }
+}
+  
+void
+PropertySet::add(const std::string& name, Property* property)
+{
+  Property*& i = properties[name];
+  if (i)
+    {
+      std::ostringstream str;
+      str << "PropertySet::add: Name conflict: '" << name << "' already used";
+      throw std::runtime_error(str.str());
+    }
+  else
+    {
+      i = property;
+    }
+}
+
+Property*
+PropertySet::get(const std::string& name) const
+{
+  std::map<std::string, Property*>::const_iterator i = properties.find(name);
+  if (i == properties.end())
+    {
+      if (parent)
+        return parent->get(name);
+      else
+        return 0;
+    }
+  else
+    {
+      return i->second;
+    }
+}
+
+void
+PropertySet::get_properties(std::vector<std::string>& lst) const
+{
+  if (parent)
+    parent->get_properties(lst);
+  
+  for(std::map<std::string, Property*>::const_iterator i = properties.begin(); i != properties.end(); ++i)
+    {
+      lst.push_back(i->first);
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/properties/property_set.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/properties/property_set.hpp
===================================================================
--- trunk/windstille/src/properties/property_set.hpp	2009-03-19 23:08:50 UTC (rev 2708)
+++ trunk/windstille/src/properties/property_set.hpp	2009-03-20 22:10:52 UTC (rev 2709)
@@ -0,0 +1,66 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_PROPERTIES_PROPERTY_SET_HPP
+#define HEADER_WINDSTILLE_PROPERTIES_PROPERTY_SET_HPP
+
+#include <vector>
+#include <map>
+#include <string>
+
+#include "property.hpp"
+
+class PropertySet
+{
+private:
+  PropertySet* parent;
+  std::string  name;
+  std::map<std::string, Property*> properties;
+
+public:
+  PropertySet(const std::string& name, PropertySet* parent = 0);
+  ~PropertySet();
+  
+  std::string get_name() const { return name; }
+
+  void add(const std::string& name, Property* property);
+
+  template<class C>
+  void add_int(const std::string& name, bool C::*ptr)
+  { 
+    add(name, PropertyImpl<C>::create_int(ptr));
+  }
+
+  template<class C>
+  void add_bool(const std::string& name, bool C::*ptr)
+  { 
+    add(name, PropertyImpl<C>::create_bool(ptr));
+  }
+
+  Property* get(const std::string& name) const;
+
+  void get_properties(std::vector<std::string>& lst) const;
+
+private:
+  PropertySet(const PropertySet&);
+  PropertySet& operator=(const PropertySet&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/properties/property_set.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Fri Mar 20 23:14:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 20 Mar 2009 23:14:39 +0100
Subject: [Windstille-commit] r2710 - trunk/windstille/src/editor
Message-ID: <200903202214.n2KMEd3q003377@sheep.berlios.de>

Author: grumbel
Date: 2009-03-20 23:14:38 +0100 (Fri, 20 Mar 2009)
New Revision: 2710

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
Log:
Some more signals hooked up and a bit of cleanup

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-20 22:10:52 UTC (rev 2709)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-20 22:14:38 UTC (rev 2710)
@@ -171,21 +171,10 @@
 EditorWindow::on_new()
 {
   std::cout << "on_new" << std::endl;
-  if (0)
-    {
-      // FIXME: Memleaking placeholder
-      Gtk::TextView* page = new Gtk::TextView();
-      //page->set_text("Hello World");
-      notebook.append_page(*page, Glib::ustring::compose("Sector %1", notebook.get_n_pages()));
-      page->show();
-    }
-  else
-    {
-      WindstilleWidget* windstille = new WindstilleWidget();
-      notebook.set_current_page
-        (notebook.append_page(*windstille, Glib::ustring::compose("Sector %1", notebook.get_n_pages())));
-      windstille->show();
-    }
+  WindstilleWidget* windstille = new WindstilleWidget();
+  int new_page = notebook.append_page(*windstille, Glib::ustring::compose("Sector %1", notebook.get_n_pages()));
+  windstille->show();
+  notebook.set_current_page(new_page);
 }
 
 void

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-20 22:10:52 UTC (rev 2709)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-20 22:14:38 UTC (rev 2710)
@@ -69,7 +69,7 @@
   pack_start(label, Gtk::PACK_SHRINK);
   add(scrolled);
   
-  show_all();
+  //show_all();
 }
 
 ObjectSelector::~ObjectSelector()

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-20 22:10:52 UTC (rev 2709)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-20 22:14:38 UTC (rev 2710)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include <gtkmm/stock.h>
 #include <gtkmm/toolbar.h>
 #include <gtkmm/treemodel.h>
@@ -43,7 +44,6 @@
   ObjectTreeColumns columns;
   Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(columns);
 
- 
   Gtk::TreeStore::iterator root = list_store->append();
   (*root)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
   (*root)[columns.name]    = Glib::ustring("Scene");
@@ -100,11 +100,47 @@
   pack_start(toolbar, Gtk::PACK_SHRINK);
   add(scrolled);
 
-  show_all();
+  list_store->signal_row_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_row_changed));
+  list_store->signal_row_deleted().connect(sigc::mem_fun(*this, &ObjectTree::on_row_deleted));
+  list_store->signal_row_has_child_toggled().connect(sigc::mem_fun(*this, &ObjectTree::on_row_has_child_toggled));
+  list_store->signal_row_inserted().connect(sigc::mem_fun(*this, &ObjectTree::on_row_inserted));
+  list_store->signal_rows_reordered().connect(sigc::mem_fun(*this, &ObjectTree::on_rows_reordered));
+
+  //show_all();
 }
 
 ObjectTree::~ObjectTree()
 {
 }
+
+void
+ObjectTree::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+{
+  std::cout << "ObjectTree:on_row_changed" << std::endl;
+}
+
+void
+ObjectTree::on_row_deleted(const Gtk::TreeModel::Path& path)
+{
+  std::cout << "ObjectTree:on_row_deleted" << std::endl;
+}
+
+void
+ObjectTree::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+{
+  std::cout << "ObjectTree:on_row_has_child_toggled" << std::endl;
+}
+
+void
+ObjectTree::on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+{
+  std::cout << "ObjectTree:on_row_inserted" << std::endl;
+}
+
+void
+ObjectTree::on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order)
+{
+  std::cout << "ObjectTree:on_row_reordered" << std::endl;
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-20 22:10:52 UTC (rev 2709)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-20 22:14:38 UTC (rev 2710)
@@ -24,6 +24,7 @@
 #include <gtkmm/label.h>
 #include <gtkmm/box.h>
 #include <gtkmm/uimanager.h>
+#include <gtkmm/treemodel.h>
 #include <gtkmm/actiongroup.h>
 
 class ObjectTree : public Gtk::VBox
@@ -40,6 +41,11 @@
   ObjectTree();
   virtual ~ObjectTree();
   
+  void on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
+  void on_row_deleted(const Gtk::TreeModel::Path& path);
+  void on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
+  void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
+  void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
 private:
   ObjectTree(const ObjectTree&);



From grumbel at mail.berlios.de  Fri Mar 20 23:16:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 20 Mar 2009 23:16:43 +0100
Subject: [Windstille-commit] r2711 - in trunk/windstille/src: . engine
Message-ID: <200903202216.n2KMGhSc003562@sheep.berlios.de>

Author: grumbel
Date: 2009-03-20 23:16:43 +0100 (Fri, 20 Mar 2009)
New Revision: 2711

Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/engine/entity.cpp
   trunk/windstille/src/engine/entity.hpp
Log:
Use Property class in Entity

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-20 22:14:38 UTC (rev 2710)
+++ trunk/windstille/src/SConscript	2009-03-20 22:16:43 UTC (rev 2711)
@@ -150,6 +150,9 @@
         'particles/surface_drawer.cpp',
         'physfs/physfs_sdl.cpp',
         'physfs/physfs_stream.cpp',
+        'properties/property.cpp',
+        'properties/property_set.cpp',
+        'properties/properties.cpp',
         'screen/armature_test.cpp',
         'screen/game_session.cpp',
         'screen/geometry_test.cpp',
@@ -204,11 +207,11 @@
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
 editor_env.Program('editor/editor', ['editor/main.cpp',
-                              'editor/object_tree.cpp',
-                              'editor/object_selector.cpp',
-                              'editor/about_window.cpp',
-                              'editor/windstille_widget.cpp',
-                              'editor/editor_window.cpp'])
+                                     'editor/object_tree.cpp',
+                                     'editor/object_selector.cpp',
+                                     'editor/about_window.cpp',
+                                     'editor/windstille_widget.cpp',
+                                     'editor/editor_window.cpp'])
 
 
 # EOF #

Modified: trunk/windstille/src/engine/entity.cpp
===================================================================
--- trunk/windstille/src/engine/entity.cpp	2009-03-20 22:14:38 UTC (rev 2710)
+++ trunk/windstille/src/engine/entity.cpp	2009-03-20 22:16:43 UTC (rev 2711)
@@ -17,11 +17,13 @@
 */
 
 #include <assert.h>
+#include "properties/property_set.hpp"
+#include "properties/property.hpp"
 #include "app/globals.hpp"
 #include "sector.hpp"
 #include "tile/tile_map.hpp"
 #include "entity.hpp"
-
+
 Entity::Entity()
   : velocity(0, 0),
     useable(false)
@@ -60,4 +62,17 @@
     }
 }
 
+Properties
+Entity::get_properties()
+{
+  static PropertySet* type = 0;
+  if (!type) 
+    {
+      type = new PropertySet("Entity");
+      type->add_bool("usable", &Entity::useable);
+    }
+
+  return Properties(type, this);
+}
+
 /* EOF */

Modified: trunk/windstille/src/engine/entity.hpp
===================================================================
--- trunk/windstille/src/engine/entity.hpp	2009-03-20 22:14:38 UTC (rev 2710)
+++ trunk/windstille/src/engine/entity.hpp	2009-03-20 22:16:43 UTC (rev 2711)
@@ -20,10 +20,12 @@
 #define HEADER_WINDSTILLE_ENGINE_ENTITY_HPP
 
 #include <boost/signal.hpp>
+
+#include "properties/properties.hpp"
+#include "collision/collision_object.hpp"
+#include "engine/game_object.hpp"
 #include "math/vector2f.hpp"
-#include "engine/game_object.hpp"
-#include "collision/collision_object.hpp"
-
+
 /** A GameObject which has a position and some other properties which
     are shared among all/most things in the world */
 class Entity : public GameObject
@@ -73,11 +75,13 @@
 
   boost::signal<void ()>& sig_done() { return done; }
 
+  virtual Properties get_properties();
+ 
 private:
   Entity (const Entity&);
   Entity& operator= (const Entity&);
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Sat Mar 21 00:14:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 00:14:37 +0100
Subject: [Windstille-commit] r2712 - trunk/windstille
Message-ID: <200903202314.n2KNEb7T008139@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 00:14:36 +0100 (Sat, 21 Mar 2009)
New Revision: 2712

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-20 22:16:43 UTC (rev 2711)
+++ trunk/windstille/TODO	2009-03-20 23:14:36 UTC (rev 2712)
@@ -11,10 +11,6 @@
 Scripting
 =========
 
-* add Ctrl-k, Ctrl-k shortcuts to console
-
-* save command history of the console between runs
-
 * ParticleSystem could be hooked up to scripting
 
 * add a way to bind keys to script functions for use in debugging
@@ -139,9 +135,18 @@
 Input Handling
 ==============
 
+* input in Navigation Graph test uses deadzone, but shouldn't
+
+* remove secondary controller, instead accept multiple --controller
+  options and store the files in a list
+
 * analog trigger handling is a little problematic, since the axis is
   neutral at -32768, not at 0.
 
+* src/input/controller.hpp should keep not only the current state, but
+  also the last state, this would allow proper detection of button
+  presses and axis movements over a threshold
+
 * Input deadzone is problematic when trying to get angle of a stick,
   deadzone needs to act different there then when X/Y are handled
   seperatly. Temporary workaround is to move deadzone out of the input
@@ -180,6 +185,61 @@
 Miscellaneous
 =============
 
+* work on Object introspection, see: ~/projects/lang/c++/introspection.cpp
+
+  class GameObject {
+    PropertiesClass property_class() {
+      static PropertyClass* this_class = 0;
+      if (!this_class) {
+                 
+      } else {
+
+      }
+    }
+    Properties properties() {
+       static PropertiesClass this_class;
+       if (!PropertiesClass 
+    }
+  }
+
+* remove DEBUG macro or give it a clearer defined purpose, currently
+  used only in a few tiny places
+
+* add way to TextArea to layout text with a fixed indent after a linebreak:
+
+  Bob: "Hi, how are you, yada yada yada yada yada yada
+        yada yada yada yada yada yada yada yada yada yada
+        yada yada yada"
+
+* add Ctrl-k, Ctrl-k shortcuts to console
+
+* save command history of the console between runs
+
+* move the concept of parenting into .scm
+  
+  (scriptable-object 
+       (parent "player")
+       ...)
+
+  tricky since parent name can't be resolved at object creation, only
+  later
+
+* extend the concept of parenting to other(all?) objects
+
+* write "objects/decal.cpp" class, i.e. simple Surface class for
+  non-animated objects:
+
+  (decal (pos x y) 
+
+         ;; relative to pos
+         (quad x1 y1 ;; defaults to Rectf(Vector2f(0, 0), imagesize)
+               x2 y2
+               x3 y3
+               x4 y4)
+         (image "images/greychess.png")
+         (layer "color")
+         )
+
 * Display::push/pop_cliprect() doesn't handle different aspect-ratios properly
 
 * lightmap is broken with non-standard aspect-ratio
@@ -202,10 +262,6 @@
 
 * get rid of global game_time variable
 
-* No object shall grab input by itself, instead the Screen should
-  route it, i.e. Player is grabbing input itself, this leads to
-  problems
-
 * map laserpointer to the second analog-stick, make mapping absolute,
   not relative
 
@@ -360,6 +416,12 @@
 Random Things
 =============
 
+* UTF8 support is missing in:
+  
+  - BabyXML
+  - TTFFont
+  - Console
+
 * Add more markup to TextArea: (not really needed with LucasArts-like dialog)
     <font color="#ffbbcc"></font>: Use arbitary color
     <b></b>: make text properly bold
@@ -369,12 +431,16 @@
 
 * add line numbers to error messages from lisp
 
-* use non-euler angles in the model viewer
+* rotation in 3d model viewer feels a little weird, could maybe be
+  improved somehow
 
 * using a non-square pixel aspect ratio leads to ugly fonts, fonts
   could be rendered with that aspect ratio in mind so that they are
-  'pixel-perfect', instead of scaled by OpenGL
+  'pixel-perfect', instead of scaled by OpenGL. This requires:
 
+  - a UI that is reasonably flexible to handle changes in font size
+  - some code that scales/unscales the Font before drawing it
+
 * update random number generator:
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/SFMT/index.html
 
@@ -396,9 +462,67 @@
 Editor
 ======
 
+* implement dialog to change level properties:
+
+  - name
+  - ambient color (Gtk::ColorSelection)
+  - level size (?)
+
+* implement dialog to change objects properties
+
+* figure out how to properly draw controls in the Workspace (resize,
+  rotation, vertices of a quad),
+
+* SceneModel seems easier to implement then Sandbox'ing, maybe go with
+  that first. TreeModel could be used directly to presenet the Scene,
+  instead of trying to keep to things synced.
+
+* Sandbox Pro&Contra:
+
+  + very fast getting in and out of the game
+  + edit game while it is running
+  + no obscure version incompatibilty between editor and game objects
+  + game editability can be reused in scripts
+
+  - game engine gets more complex
+
+* Sandbox Implementation (similar to Feuerkraft):
+
+  - add introspection to objects via PropertySets (see Feuerkraft),
+    allows animation as well as easy editing and serialization
+  - add a draw_editor() or a draw(bool editor)
+  - some stuff for modifier handles
+
 * make Windstille flexible enough so that it can work in non-SDL
   settings, more exactly it should be embeddable into a GtkWidget (or
   shall the editor be completly seperate?)
+
+* should objects in the editor be based on real Windstille objects or
+  on mookup objects?
+
+* Editor Toolbox:
+
+  - Object Select Tool (move objects around)
+  - Object Manipulation Tool (move vertices in the object around)
+  - Zoom Tool
+
+* Editor Toolbar:
+
+  - Visualize parent/child relationship (little arrows)
+  - Object Properties
+
+* Object List
+
+  - plain image
+  - prefabs
+  - enemies
+  - active objects (doors, switches, etc.)
+
+* Layer List
+
+  - display objects in the scene as tree
+  - objects can be parented to each other
+  - objects and object groups can be toggled invisible/transparent
 
 Code Cleanup
 ============
@@ -407,10 +531,9 @@
 
   - collision engine
   - BabyXML
-  - tinygettext
   - Sprite2D
   - Sprite3D
-  - particle systems
+  - ParticleSystem
   - Dialog/Conversation
 
 * Screens might fit better into app/ then screen/



From grumbel at mail.berlios.de  Sat Mar 21 00:15:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 00:15:50 +0100
Subject: [Windstille-commit] r2713 - in trunk/windstille: data data/editor
	src src/editor
Message-ID: <200903202315.n2KNFoNH008551@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 00:15:50 +0100 (Sat, 21 Mar 2009)
New Revision: 2713

Added:
   trunk/windstille/data/editor/
   trunk/windstille/data/editor/icon.png
   trunk/windstille/data/editor/type.png
Removed:
   trunk/windstille/src/editor/icon.png
   trunk/windstille/src/editor/type.png
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_tree.cpp
Log:
Moved editor binary to top level directory

Copied: trunk/windstille/data/editor/icon.png (from rev 2697, trunk/windstille/src/editor/icon.png)


Property changes on: trunk/windstille/data/editor/icon.png
___________________________________________________________________
Name: svn:mime-type
   + image/png
Name: svn:mergeinfo
   + 

Copied: trunk/windstille/data/editor/type.png (from rev 2699, trunk/windstille/src/editor/type.png)


Property changes on: trunk/windstille/data/editor/type.png
___________________________________________________________________
Name: svn:mime-type
   + image/png
Name: svn:mergeinfo
   + 

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-20 23:14:36 UTC (rev 2712)
+++ trunk/windstille/src/SConscript	2009-03-20 23:15:50 UTC (rev 2713)
@@ -206,12 +206,13 @@
 editor_env.ParseConfig('pkg-config --cflags --libs libcurl')
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
-editor_env.Program('editor/editor', ['editor/main.cpp',
-                                     'editor/object_tree.cpp',
-                                     'editor/object_selector.cpp',
-                                     'editor/about_window.cpp',
-                                     'editor/windstille_widget.cpp',
-                                     'editor/editor_window.cpp'])
-
+editor_env.Program('../windstille-editor', [
+        'editor/main.cpp',
+        'editor/object_tree.cpp',
+        'editor/object_selector.cpp',
+        'editor/about_window.cpp',
+        'editor/windstille_widget.cpp',
+        'editor/editor_window.cpp'
+        ])
 
 # EOF #

Deleted: trunk/windstille/src/editor/icon.png
===================================================================
(Binary files differ)

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-20 23:14:36 UTC (rev 2712)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-20 23:15:50 UTC (rev 2713)
@@ -39,7 +39,7 @@
   ObjectIconColumns columns;
   Glib::RefPtr<Gtk::ListStore> list_store = Gtk::ListStore::create(columns);
 
-  Glib::RefPtr<Gdk::Pixbuf> icon = Gdk::Pixbuf::create_from_file("icon.png");
+  Glib::RefPtr<Gdk::Pixbuf> icon = Gdk::Pixbuf::create_from_file("data/editor/icon.png");
 
   iconview.modify_base(Gtk::STATE_NORMAL, Gdk::Color("grey"));
   
@@ -80,7 +80,7 @@
 void
 ObjectSelector::on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context)
 {
-  Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file("icon.png");
+  Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file("data/editor/icon.png");
   context->set_icon(pixbuf, pixbuf->get_width()/2, pixbuf->get_height()/2);
 }
 

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-20 23:14:36 UTC (rev 2712)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-20 23:15:50 UTC (rev 2713)
@@ -45,19 +45,19 @@
   Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(columns);
 
   Gtk::TreeStore::iterator root = list_store->append();
-  (*root)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
+  (*root)[columns.type]    = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*root)[columns.name]    = Glib::ustring("Scene");
   (*root)[columns.visible] = false;
 
   for(int i = 0; i < 10; ++i)
     {
       Gtk::TreeStore::iterator it  = list_store->append(root->children());
-      (*it)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
+      (*it)[columns.type]    = Gdk::Pixbuf::create_from_file("data/editor/type.png");
       (*it)[columns.name]    = Glib::ustring("Hello World");
       (*it)[columns.visible] = false;
 
       Gtk::TreeModel::iterator it2  = list_store->append(it->children());
-      (*it2)[columns.type]    = Gdk::Pixbuf::create_from_file("type.png");
+      (*it2)[columns.type]    = Gdk::Pixbuf::create_from_file("data/editor/type.png");
       (*it2)[columns.name]    = Glib::ustring("Hello World");
       (*it2)[columns.visible] = false;
     }

Deleted: trunk/windstille/src/editor/type.png
===================================================================
(Binary files differ)



From grumbel at mail.berlios.de  Sat Mar 21 00:16:52 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 00:16:52 +0100
Subject: [Windstille-commit] r2714 - trunk/windstille
Message-ID: <200903202316.n2KNGq7C008722@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 00:16:52 +0100 (Sat, 21 Mar 2009)
New Revision: 2714

Modified:
   trunk/windstille/
Log:
Moved editor binary to top level directory


Property changes on: trunk/windstille
___________________________________________________________________
Name: svn:ignore
   - cache
config.log
custom.py
options.cache
.sconf_temp
.sconsign.dblite
windstille

   + cache
config.log
custom.py
options.cache
.sconf_temp
.sconsign.dblite
windstille
windstille-editor




From grumbel at mail.berlios.de  Sat Mar 21 03:41:21 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 03:41:21 +0100
Subject: [Windstille-commit] r2715 - trunk/windstille/src/display
Message-ID: <200903210241.n2L2fLr0007581@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 03:41:20 +0100 (Sat, 21 Mar 2009)
New Revision: 2715

Modified:
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/scene_context.hpp
Log:
Added control() layer

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-03-20 23:16:52 UTC (rev 2714)
+++ trunk/windstille/src/display/scene_context.cpp	2009-03-21 02:41:20 UTC (rev 2715)
@@ -42,6 +42,8 @@
   DrawingContext color;
   DrawingContext light;
   DrawingContext highlight; 
+  DrawingContext control; 
+
   unsigned int   render_mask;
   
   struct Framebuffers 
@@ -105,6 +107,11 @@
   return impl->highlight; 
 }
 
+DrawingContext&
+SceneContext::control()
+{
+  return impl->control;
+}
 
 /** Translate the drawing context */
 void
@@ -113,6 +120,7 @@
   impl->color.translate(x, y);
   impl->light.translate(x, y);
   impl->highlight.translate(x, y);
+  impl->control.translate(x, y);
 }
 
 /** Set the rotation of the drawing context */
@@ -122,6 +130,7 @@
   impl->color.rotate(angel, x, y, z);
   impl->light.rotate(angel, x, y, z);
   impl->highlight.rotate(angel, x, y, z);
+  impl->control.rotate(angel, x, y, z);
 }
 
 /** Set the scaling of the drawing context */
@@ -131,6 +140,7 @@
   impl->color.scale(x, y);
   impl->light.scale(x, y);
   impl->highlight.scale(x, y);
+  impl->control.scale(x, y);
 }
 
 void
@@ -139,6 +149,7 @@
   impl->color.mult(matrix);
   impl->light.mult(matrix);
   impl->highlight.mult(matrix);
+  impl->control.mult(matrix);
 }
 
 void
@@ -147,6 +158,7 @@
   impl->color.push_modelview();
   impl->light.push_modelview();
   impl->highlight.push_modelview();
+  impl->control.push_modelview();
 }
 
 void
@@ -155,6 +167,7 @@
   impl->color.pop_modelview();
   impl->light.pop_modelview();
   impl->highlight.pop_modelview();
+  impl->control.pop_modelview();
 }
 
 void
@@ -163,6 +176,7 @@
   impl->color.reset_modelview();
   impl->light.reset_modelview();
   impl->highlight.reset_modelview();
+  impl->control.reset_modelview();
 }
 
 
@@ -242,18 +256,6 @@
 }
 
 void
-SceneContext::render_colormap()
-{
-  
-}
-
-void
-SceneContext::render_highlightmap()
-{
-  
-}
-
-void
 SceneContext::render_with_framebuffers()
 {
   glClear(GL_DEPTH_BUFFER_BIT);

Modified: trunk/windstille/src/display/scene_context.hpp
===================================================================
--- trunk/windstille/src/display/scene_context.hpp	2009-03-20 23:16:52 UTC (rev 2714)
+++ trunk/windstille/src/display/scene_context.hpp	2009-03-21 02:41:20 UTC (rev 2715)
@@ -54,6 +54,12 @@
       darkness */
   DrawingContext& highlight();
 
+  /** The control layer is used for objects that shall neither rotate
+      nor scale, but only translate. It is used for HUD and control
+      elements, such as text or editor control handles and drawn above
+      all other layers. */
+  DrawingContext& control();
+
   /** Translate the drawing context */
   void translate(float x, float y);
 
@@ -70,7 +76,7 @@
   void reset_modelview();
 
   /** Takes all the buffers and combines them to form the final image
-      that will be shown on the screen */
+      that will be shown on the screen. */
   void render();
 
   enum { COLORMAP       = 1<<0,
@@ -80,6 +86,8 @@
          BLURMAP        = 1<<4
   };
 
+  /** The render mask allows to switch of some layers and effects for
+      debugging. */
   void set_render_mask(unsigned int mask);
   unsigned int get_render_mask();
 
@@ -89,8 +97,6 @@
   void render_without_framebuffers();
 
   void render_lightmap();
-  void render_colormap();
-  void render_highlightmap();
 
   void eval(DrawingRequest* request);
 



From grumbel at mail.berlios.de  Sat Mar 21 03:41:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 03:41:50 +0100
Subject: [Windstille-commit] r2716 - in trunk/windstille: . src/display
	src/editor src/font
Message-ID: <200903210241.n2L2fo75007627@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 03:41:49 +0100 (Sat, 21 Mar 2009)
New Revision: 2716

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/display/blitter.cpp
   trunk/windstille/src/display/blitter.hpp
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/main.hpp
   trunk/windstille/src/font/no_font_effect.cpp
Log:
Some cleanup

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/TODO	2009-03-21 02:41:49 UTC (rev 2716)
@@ -462,6 +462,11 @@
 Editor
 ======
 
+* add a new layer to SceneContext that is used for UI elements, such
+  as control handles for scale or rotate, could maybe also used for
+  use-verbs and stuff. The new layer shall only translate objects, but
+  not scale or rotate them
+
 * implement dialog to change level properties:
 
   - name

Modified: trunk/windstille/src/display/blitter.cpp
===================================================================
--- trunk/windstille/src/display/blitter.cpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/display/blitter.cpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -24,7 +24,7 @@
 
 #include "display/software_surface.hpp"
 #include "blitter.hpp"
-
+
 void generate_border(const SoftwareSurface& surface,
                      int x_pos, int y_pos, int width, int height)
 {
@@ -52,45 +52,5 @@
       *p = *(p-1);
     }
 }
-
-void 
-blit_ftbitmap(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos)
-{
-  int start_x = std::max(0, -x_pos);
-  int start_y = std::max(0, -y_pos);
-  
-  int end_x = std::min(brush.width, target.get_width()  - x_pos);
-  int end_y = std::min(brush.rows,  target.get_height() - y_pos);
-
-  unsigned char* target_buf = static_cast<unsigned char*>(target.get_pixels());
-
-  int target_pitch = target.get_pitch();
-
-  for (int y = start_y; y < end_y; ++y)
-    for (int x = start_x; x < end_x; ++x)
-      {
-        int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
-        int brush_pos  = y * brush.pitch + x;
-            
-        target_buf[target_pos + 0] = 255;
-        target_buf[target_pos + 1] = 255;
-        target_buf[target_pos + 2] = 255;
-        target_buf[target_pos + 3] = brush.buffer[brush_pos];
-      }
-}
-
-SDL_Surface* create_surface_rgba(int width, int height)
-{
-#if SDL_BYTEORDER == SDL_BIG_ENDIAN
-  SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                                  width, height, 32,
-                                                  0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
-#else
-  SDL_Surface* pixelbuffer = SDL_CreateRGBSurface(SDL_SWSURFACE,
-                                                  width, height, 32,
-                                                  0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
-#endif
-  return pixelbuffer;
-}
-
+
 /* EOF */

Modified: trunk/windstille/src/display/blitter.hpp
===================================================================
--- trunk/windstille/src/display/blitter.hpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/display/blitter.hpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -35,7 +35,6 @@
     X X X X X    4 4 5 6 6
 */
 void generate_border(const SoftwareSurface& surface, int x_pos, int y_pos, int width, int height);
-void blit_ftbitmap(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos);
 
 #endif
 

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -29,14 +29,14 @@
 #include "display/vertex_array_drawing_request.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface.hpp"
-
+
 struct DrawingRequestsSorter
 {
   bool operator()(DrawingRequest* a, DrawingRequest* b) {
     return a->get_z_pos() < b->get_z_pos();
   }
 };
-
+
 class FillScreenDrawingRequest : public DrawingRequest
 {
 private:
@@ -56,7 +56,7 @@
     glClear(GL_COLOR_BUFFER_BIT);
   }
 };
-
+
 class TextDrawingRequest : public DrawingRequest
 {
 private:
@@ -75,7 +75,7 @@
     glPopMatrix();
   }
 };
-
+
 class SurfaceDrawingRequest : public DrawingRequest
 {
 private:
@@ -100,7 +100,7 @@
     glPopMatrix();
   }
 };
-
+
 DrawingContext::DrawingContext()
 {
   modelview_stack.push_back(Matrix::identity());
@@ -336,5 +336,5 @@
 
   draw(array);
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -25,12 +25,12 @@
 #include <vector>
 #include "color.hpp"
 #include "drawing_request.hpp"
-
+
 class Surface;
 class SurfaceDrawingParameters;
 class SceneContext;
 class Sprite;
-
+
 /** The DrawingContext collects all DrawingRequests and allows you to
     flush them all down to the graphics card in one run, this has the
     advantage that it is possible to z-sort, texture-id sort or
@@ -97,7 +97,7 @@
   DrawingContext (const DrawingContext&);
   DrawingContext& operator= (const DrawingContext&);
 };
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -112,9 +112,8 @@
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
                     sigc::mem_fun(*this, &EditorWindow::on_about_clicked));
 
-  //sigc::mem_fun(*this, &EditorWindow::on_action_file_new) );
-  //sigc::mem_fun(*this, &EditorWindow::on_action_file_open) );
-  //sigc::mem_fun(*this, &EditorWindow::on_action_file_quit) );
+  // signal_size_allocate().connect (sigc::mem_fun (*this, &EditorWindow::on_window_size_allocate), false);
+  // signal_realize().connect (sigc::mem_fun (*this, &EditorWindow::on_window_realize));
 
   ui_manager->insert_action_group(action_group);
 
@@ -122,6 +121,9 @@
 
   add_accel_group(ui_manager->get_accel_group());
 
+
+  // Packing
+
   // Vbox
   vbox.pack_start(*ui_manager->get_widget("/MenuBar"), Gtk::PACK_SHRINK);
   vbox.pack_start(*ui_manager->get_widget("/ToolBar"), Gtk::PACK_SHRINK);

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/editor/main.cpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -23,8 +23,9 @@
 
 #include "editor_window.hpp"
 #include "main.hpp"
-
-int main(int argc, char** argv)
+
+int
+WindstilleEditor::main(int argc, char** argv)
 {
   try 
     {
@@ -41,8 +42,13 @@
     {
       std::cout << "Exception: " << err.what() << std::endl;
     }
-
   return 0;
 }
-
+
+int main(int argc, char** argv)
+{
+  WindstilleEditor app;
+  return app.main(argc, argv);
+}
+
 /* EOF */

Modified: trunk/windstille/src/editor/main.hpp
===================================================================
--- trunk/windstille/src/editor/main.hpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/editor/main.hpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -16,9 +16,15 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_MAIN_HPP
-#define HEADER_MAIN_HPP
-
+#ifndef HEADER_WINDSTILLE_EDITOR_MAIN_HPP
+#define HEADER_WINDSTILLE_EDITOR_MAIN_HPP
+
+class WindstilleEditor
+{
+public:
+  int main(int argc, char** argv);
+};
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/font/no_font_effect.cpp
===================================================================
--- trunk/windstille/src/font/no_font_effect.cpp	2009-03-21 02:41:20 UTC (rev 2715)
+++ trunk/windstille/src/font/no_font_effect.cpp	2009-03-21 02:41:49 UTC (rev 2716)
@@ -23,7 +23,27 @@
 void
 NoFontEffect::blit(const SoftwareSurface& target, const FT_Bitmap& brush, int x_pos, int y_pos) const
 {
-  blit_ftbitmap(target, brush, x_pos, y_pos);
+  int start_x = std::max(0, -x_pos);
+  int start_y = std::max(0, -y_pos);
+  
+  int end_x = std::min(brush.width, target.get_width()  - x_pos);
+  int end_y = std::min(brush.rows,  target.get_height() - y_pos);
+
+  unsigned char* target_buf = static_cast<unsigned char*>(target.get_pixels());
+
+  int target_pitch = target.get_pitch();
+
+  for (int y = start_y; y < end_y; ++y)
+    for (int x = start_x; x < end_x; ++x)
+      {
+        int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
+        int brush_pos  = y * brush.pitch + x;
+            
+        target_buf[target_pos + 0] = 255;
+        target_buf[target_pos + 1] = 255;
+        target_buf[target_pos + 2] = 255;
+        target_buf[target_pos + 3] = brush.buffer[brush_pos];
+      }
 }
 
 /* EOF */



From grumbel at mail.berlios.de  Sat Mar 21 03:56:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 03:56:16 +0100
Subject: [Windstille-commit] r2717 - trunk/windstille/src/display
Message-ID: <200903210256.n2L2uGRo008090@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 03:56:15 +0100 (Sat, 21 Mar 2009)
New Revision: 2717

Modified:
   trunk/windstille/src/display/software_surface.cpp
   trunk/windstille/src/display/software_surface.hpp
   trunk/windstille/src/display/surface_manager.cpp
Log:
Moved blit call into SoftwareSurface

Modified: trunk/windstille/src/display/software_surface.cpp
===================================================================
--- trunk/windstille/src/display/software_surface.cpp	2009-03-21 02:41:49 UTC (rev 2716)
+++ trunk/windstille/src/display/software_surface.cpp	2009-03-21 02:56:15 UTC (rev 2717)
@@ -19,6 +19,8 @@
 #include <sstream>
 #include <stdexcept>
 #include <SDL_image.h>
+
+#include "math/rect.hpp"
 #include "physfs/physfs_sdl.hpp"
 #include "software_surface.hpp"
 
@@ -112,5 +114,31 @@
 {
   return impl->surface;
 }
+
+void
+SoftwareSurface::blit(SoftwareSurface& dst, int x, int y) const
+{
+  SDL_Rect dst_rect;
+  dst_rect.x = x;
+  dst_rect.y = y;
+
+  SDL_BlitSurface(impl->surface, 0, dst.impl->surface, &dst_rect);
+}
+
+void
+SoftwareSurface::blit(const Rect& src_rect_, SoftwareSurface& dst, int x, int y) const
+{
+  SDL_Rect src_rect;
+  src_rect.x = src_rect_.left;
+  src_rect.y = src_rect_.top;
+  src_rect.w = src_rect_.get_width();
+  src_rect.h = src_rect_.get_height();
+
+  SDL_Rect dst_rect;
+  dst_rect.x = x;
+  dst_rect.y = y;
+  
+  SDL_BlitSurface(impl->surface, &src_rect, dst.impl->surface, &dst_rect);
+}
 
 /* EOF */

Modified: trunk/windstille/src/display/software_surface.hpp
===================================================================
--- trunk/windstille/src/display/software_surface.hpp	2009-03-21 02:41:49 UTC (rev 2716)
+++ trunk/windstille/src/display/software_surface.hpp	2009-03-21 02:56:15 UTC (rev 2717)
@@ -23,6 +23,7 @@
 #include <boost/shared_ptr.hpp>
 #include <string>
 
+class Rect;
 class SoftwareSurfaceImpl;
 
 class SoftwareSurface
@@ -44,6 +45,9 @@
   int   get_height() const;
   void* get_pixels() const;
 
+  void blit(SoftwareSurface& dst, int x, int y) const;
+  void blit(const Rect& src_rect, SoftwareSurface& dst, int x, int y) const;
+
   SDL_Surface* get_surface() const;
 
 private:

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-03-21 02:41:49 UTC (rev 2716)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-03-21 02:56:15 UTC (rev 2717)
@@ -139,7 +139,7 @@
 
   SoftwareSurface convert(texture_w, texture_h);
 
-  SDL_BlitSurface(image.get_surface(), 0, convert.get_surface(), 0);
+  image.blit(convert, 0, 0);
 
   Texture texture = Texture(convert);
   



From grumbel at mail.berlios.de  Sat Mar 21 04:48:30 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 04:48:30 +0100
Subject: [Windstille-commit] r2718 - in trunk/windstille: . src src/app
	src/display src/editor src/screen
Message-ID: <200903210348.n2L3mUX4015461@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 04:48:28 +0100 (Sat, 21 Mar 2009)
New Revision: 2718

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/app/menu_manager.cpp
   trunk/windstille/src/app/windstille_main.cpp
   trunk/windstille/src/app/windstille_main.hpp
   trunk/windstille/src/display/blitter.hpp
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/display/opengl_state.cpp
   trunk/windstille/src/display/surface_manager.cpp
   trunk/windstille/src/display/texture_manager.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/screen/screen_manager.cpp
Log:
Splitted build process into a few different libraries, for easier reuse

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/TODO	2009-03-21 03:48:28 UTC (rev 2718)
@@ -185,6 +185,8 @@
 Miscellaneous
 =============
 
+* get rid of global debug
+
 * work on Object introspection, see: ~/projects/lang/c++/introspection.cpp
 
   class GameObject {

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/SConscript	2009-03-21 03:48:28 UTC (rev 2718)
@@ -18,9 +18,85 @@
 Import('conf_env', 'features')
 
 SConscript('scripting/SConscript')
+
+util_env = conf_env.Clone()
+util_env['CPPPATH'] = ['.', '..']
+util_lib = util_env.StaticLibrary('util', [
+        'lisp/getters.cpp',
+        'lisp/lexer.cpp',
+        'lisp/lisp.cpp',
+        'lisp/parser.cpp',
+        'lisp/properties.cpp',
+        'lisp/writer.cpp',
+        'util/baby_xml.cpp',
+        'util/command_line.cpp',
+        'util/command_line_generic.cpp',
+        'util/file_reader.cpp',
+        'util/getter.cpp',
+        'util/response_curve.cpp',
+        'util/sexpr_file_reader.cpp',
+        'util/util.cpp',
+        ])
+
+physfs_env = conf_env.Clone()
+physfs_env['CPPPATH'] = ['.', '..']
+physfs_env.ParseConfig('sdl-config --cflags --libs')
+physfs_lib = physfs_env.StaticLibrary('physfs', [
+        'physfs/physfs_sdl.cpp',
+        'physfs/physfs_stream.cpp'])
+
+math_env = conf_env.Clone()
+math_env['CPPPATH'] = ['.']
+math_lib = math_env.StaticLibrary('math', [
+        'math/line.cpp',
+        'math/matrix.cpp',
+        'math/origin.cpp',
+        'math/quaternion.cpp',
+        'math/random.cpp',
+        'math/rect.cpp',
+        'math/vector2f.cpp',
+        ])
+
+display_env = Environment(CPPPATH=['.'],
+                          CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'])
+display_env.ParseConfig('sdl-config --cflags --libs')
+display_env.ParseConfig('freetype-config --libs --cflags')
 
+display_lib = display_env.StaticLibrary('display', [
+        'font/border_font_effect.cpp',
+        'font/no_font_effect.cpp',
+        'font/fonts.cpp',
+        'font/ttf_font.cpp',
+
+        'display/blitter.cpp',
+        'display/display.cpp',
+        'display/drawing_context.cpp',
+        'display/framebuffer.cpp',
+        'display/graphic_context_state.cpp',
+        'display/opengl_state.cpp',
+        'display/render_buffer.cpp',
+        'display/scene_context.cpp',
+        'display/shader_object.cpp',
+        'display/shader_program.cpp',
+        'display/software_surface.cpp',
+        'display/surface.cpp',
+        'display/surface_manager.cpp',
+        'display/text_area.cpp',
+        'display/texture.cpp',
+        'display/texture_manager.cpp',
+        'display/vertex_array_drawing_request.cpp',
+        
+        'sprite2d/data.cpp',
+        'sprite2d/manager.cpp',
+        'sprite2d/sprite.cpp',
+        'sprite3d/data.cpp',
+        'sprite3d/manager.cpp',
+        'sprite3d/sprite3d.cpp',
+        ])
+
 env = conf_env.Clone()
-env.Append(LIBS    = ['GL', 'GLU', 'GLEW', 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals'])
+env.Append(LIBS    = [display_lib, physfs_lib, util_lib, math_lib,
+                      'GL', 'GLU', 'GLEW', 'squirrel', 'physfs', 'SDL_image', 'openal', 'ogg', 'vorbis', 'vorbisfile', 'png', 'boost_signals'])
 env.Append(LIBPATH = ['../external/'] )
 env.Append(CPPPATH = ['.', '..', '../external/SQUIRREL2/include/'])
 
@@ -51,23 +127,6 @@
         'collision/collision_object.cpp',
         'collision/collision_test.cpp',
         'collision/stair_contact.cpp',
-        'display/blitter.cpp',
-        'display/display.cpp',
-        'display/drawing_context.cpp',
-        'display/framebuffer.cpp',
-        'display/graphic_context_state.cpp',
-        'display/opengl_state.cpp',
-        'display/render_buffer.cpp',
-        'display/scene_context.cpp',
-        'display/shader_object.cpp',
-        'display/shader_program.cpp',
-        'display/software_surface.cpp',
-        'display/surface.cpp',
-        'display/surface_manager.cpp',
-        'display/text_area.cpp',
-        'display/texture.cpp',
-        'display/texture_manager.cpp',
-        'display/vertex_array_drawing_request.cpp',
         'engine/camera.cpp',
         'engine/entity.cpp',
         'engine/game_object.cpp',
@@ -75,10 +134,6 @@
         'engine/script_manager.cpp',
         'engine/squirrel_thread.cpp',
         'engine/sector.cpp',
-        'font/border_font_effect.cpp',
-        'font/no_font_effect.cpp',
-        'font/fonts.cpp',
-        'font/ttf_font.cpp',
         'gui/automap.cpp',
         'gui/button.cpp',
         'gui/component.cpp',
@@ -107,19 +162,6 @@
         'input/input_manager_impl.cpp',
         'input/input_manager_sdl.cpp',
         'input/wiimote.cpp',
-        'lisp/getters.cpp',
-        'lisp/lexer.cpp',
-        'lisp/lisp.cpp',
-        'lisp/parser.cpp',
-        'lisp/properties.cpp',
-        'lisp/writer.cpp',
-        'math/line.cpp',
-        'math/matrix.cpp',
-        'math/origin.cpp',
-        'math/quaternion.cpp',
-        'math/random.cpp',
-        'math/rect.cpp',
-        'math/vector2f.cpp',
         'navigation/navigation_graph.cpp',
         'navigation/node.cpp',
         'navigation/properties.cpp',
@@ -148,8 +190,6 @@
         'particles/particle_system.cpp',
         'particles/spark_drawer.cpp',
         'particles/surface_drawer.cpp',
-        'physfs/physfs_sdl.cpp',
-        'physfs/physfs_stream.cpp',
         'properties/property.cpp',
         'properties/property_set.cpp',
         'properties/properties.cpp',
@@ -174,31 +214,17 @@
         'sound/sound_manager.cpp',
         'sound/sound_source.cpp',
         'sound/stream_sound_source.cpp',
-        'sprite2d/data.cpp',
-        'sprite2d/manager.cpp',
-        'sprite2d/sprite.cpp',
-        'sprite3d/data.cpp',
-        'sprite3d/manager.cpp',
-        'sprite3d/sprite3d.cpp',
         'tile/tile.cpp',
         'tile/tile_description.cpp',
         'tile/tile_factory.cpp',
         'tile/tile_map.cpp',
         'tile/tile_packer.cpp',
-        'util/baby_xml.cpp',
-        'util/command_line.cpp',
-        'util/command_line_generic.cpp',
-        'util/file_reader.cpp',
-        'util/getter.cpp',
-        'util/response_curve.cpp',
-        'util/sexpr_file_reader.cpp',
-        'util/util.cpp',
         'screen/view.cpp',
         ])
 
 editor_env = Environment(CPPPATH=['.'],
                          CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'],
-                         LIBS = ['GL', 'GLEW'])
+                         LIBS = [display_lib, physfs_lib, util_lib, math_lib, 'GL', 'GLEW', 'SDL_image', 'physfs'])
 
 editor_env.ParseConfig('pkg-config libpng --libs --cflags')
 editor_env.ParseConfig('sdl-config --cflags --libs')

Modified: trunk/windstille/src/app/menu_manager.cpp
===================================================================
--- trunk/windstille/src/app/menu_manager.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/app/menu_manager.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -23,6 +23,7 @@
 #include "console.hpp"
 #include "display/display.hpp"
 #include "font/fonts.hpp"
+#include "app/windstille_main.hpp"
 #include "screen/game_session.hpp"
 #include "gui/group_component.hpp"
 #include "gui/gui_manager.hpp"
@@ -436,7 +437,7 @@
 MenuManager::menu_fullscreen(int i)
 {
   config.set_bool("fullscreen", i);
-  Display::set_fullscreen(config.get_bool("fullscreen"));
+  WindstilleMain::current()->set_fullscreen(config.get_bool("fullscreen"));
 }
 
 void

Modified: trunk/windstille/src/app/windstille_main.cpp
===================================================================
--- trunk/windstille/src/app/windstille_main.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/app/windstille_main.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -16,47 +16,54 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "SDL.h"
+
 #include "windstille.hpp"
 
 #include <boost/scoped_array.hpp>
 #include <stdio.h>
 #include <physfs.h>
 
-#include "globals.hpp"
-#include "screen/screen.hpp"
-#include "windstille_main.hpp"
-#include "font/fonts.hpp"
-#include "screen/game_session.hpp"
-#include "screen/title_screen.hpp"
-#include "engine/sector.hpp"
-#include "input/input_manager.hpp"
-#include "sound/sound_manager.hpp"
-#include "tile/tile_factory.hpp"
-#include "engine/script_manager.hpp"
 #include "config.hpp"
-#include "util/util.hpp"
-#include "font/ttf_font.hpp"
 #include "display/display.hpp"
+#include "display/opengl_state.hpp"
 #include "display/surface_manager.hpp"
 #include "display/texture_manager.hpp"
-#include "sprite3d/manager.hpp"
+#include "engine/script_manager.hpp"
+#include "engine/sector.hpp"
+#include "font/fonts.hpp"
+#include "font/ttf_font.hpp"
+#include "globals.hpp"
+#include "input/input_manager.hpp"
+#include "screen/game_session.hpp"
+#include "screen/particle_viewer.hpp"
+#include "screen/screen.hpp"
 #include "screen/screen_manager.hpp"
+#include "screen/sprite2dview.hpp"
 #include "screen/sprite3dview.hpp"
-#include "screen/sprite2dview.hpp"
-#include "screen/particle_viewer.hpp"
+#include "screen/title_screen.hpp"
+#include "sound/sound_manager.hpp"
 #include "sprite2d/manager.hpp"
+#include "sprite3d/manager.hpp"
+#include "tile/tile_factory.hpp"
+#include "util/util.hpp"
+#include "windstille_main.hpp"
 
 #ifdef WIN32
 #include "shlwapi.h"
 #define strcasecmp lstrcmpiA 
 #endif
 
+WindstilleMain* WindstilleMain::current_ = 0;
+
 WindstilleMain::WindstilleMain()
 {
+  current_ = this;
 }
 
 WindstilleMain::~WindstilleMain()
 {
+  current_ = 0;
 }
 
 int 
@@ -150,13 +157,95 @@
 }
 
 void
+WindstilleMain::set_fullscreen(bool fullscreen)
+{ 
+  Uint32 flags = SDL_OPENGL;
+  if (fullscreen)
+    flags |= SDL_FULLSCREEN;
+
+  SDL_Surface* window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
+                                         0, flags);
+  if (!window)
+    {
+      throw std::runtime_error("Display:: Couldn't create window");
+    }
+}
+
+void
+WindstilleMain::init_display()
+{
+  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
+  SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
+
+  if (config.get_int("anti-aliasing"))
+    {
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLEBUFFERS, 1 ); // boolean value, either it's enabled or not
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config.get_int("anti-aliasing") ); // 0, 2, or 4 for number of samples
+    }
+
+  SDL_Surface* window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
+                                        0, SDL_OPENGL | (config.get_bool("fullscreen") ? SDL_FULLSCREEN : 0));
+
+  if (!window)
+    {
+      throw std::runtime_error("Display:: Couldn't create window");
+    }
+  else
+    {
+      SDL_WM_SetCaption("Windstille", 0 /* icon */);
+
+      GLenum err = glewInit();
+      if(err != GLEW_OK) {
+        std::ostringstream msg;
+        msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
+        throw std::runtime_error(msg.str());
+      }
+      /*
+        if(!GLEW_EXT_framebuffer_object) {
+        std::ostringstream msg;
+        msg << "Display:: Framebuffer opengl extension not supported";
+        throw std::runtime_error(msg.str());
+        }
+      */
+
+      glViewport(0, 0, window->w, window->h);
+      glMatrixMode(GL_PROJECTION);
+      glLoadIdentity();
+
+      static const float cl_pixelcenter_constant = 0.375;
+
+      //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+  
+      // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
+      Display::aspect_size = Size(config.get_int("aspect-width"), 
+                                  config.get_int("aspect-height"));
+
+      glOrtho(0.0, 
+              Display::get_width(), Display::get_height(),
+              0.0, 1000.0, -1000.0);
+      glMatrixMode(GL_MODELVIEW);
+      glLoadIdentity();
+      glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
+
+      if (config.get_int("anti-aliasing"))
+        glEnable(GL_MULTISAMPLE_ARB); 
+
+      assert_gl("setup projection");
+
+      OpenGLState::init();
+    }
+}
+
+void
 WindstilleMain::init_modules()
 {
   if (debug) std::cout << "Initialising Freetype2" << std::endl;
     
   TTFFont::init();
   
-  Display::init();
+  init_display();
 
   if (debug) std::cout << "Initialising Fonts" << std::endl;
   Fonts::init(); 

Modified: trunk/windstille/src/app/windstille_main.hpp
===================================================================
--- trunk/windstille/src/app/windstille_main.hpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/app/windstille_main.hpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -50,14 +50,21 @@
 #include "screen/screen.hpp"
 
 class WindstilleMain
-{  
+{ 
+private:
+  static WindstilleMain* current_;
 public:
+  static WindstilleMain* current() { return current_; }
+
+public:
   WindstilleMain();
   ~WindstilleMain();
 
   int main(int argc, char** argv);
+  void set_fullscreen(bool fullscreen);
 
 private:
+  void init_display();
   void init_sdl();
   void init_physfs(const char* argv0);
   void init_modules();

Modified: trunk/windstille/src/display/blitter.hpp
===================================================================
--- trunk/windstille/src/display/blitter.hpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/display/blitter.hpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -17,10 +17,6 @@
 
 #ifndef HEADER_BLITTER_HPP
 #define HEADER_BLITTER_HPP
-
-#include <ft2build.h>
-#include FT_FREETYPE_H
-#include FT_GLYPH_H
 
 class SoftwareSurface;
 

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/display/display.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -23,7 +23,6 @@
 #include <fstream>
 #include <stdexcept>
 #include <SDL.h>
-#include "app/console.hpp"
 #include "app/config.hpp"
 #include "math/math.hpp"
 #include "display/opengl_state.hpp"
@@ -32,7 +31,6 @@
 #include <assert.h>
 
 Size              Display::aspect_size;
-SDL_Surface*      Display::window = 0;
 std::vector<Rect> Display::cliprects;
 std::vector<Framebuffer> framebuffers;
 
@@ -225,87 +223,6 @@
 }
 
 void
-Display::init()
-{
-  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
-  SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5);
-  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
-  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
-
-  if (config.get_int("anti-aliasing"))
-    {
-      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLEBUFFERS, 1 ); // boolean value, either it's enabled or not
-      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config.get_int("anti-aliasing") ); // 0, 2, or 4 for number of samples
-    }
-
-  window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
-                            0, SDL_OPENGL | (config.get_bool("fullscreen") ? SDL_FULLSCREEN : 0));
-  if (!window)
-    {
-      throw std::runtime_error("Display:: Couldn't create window");
-    }
-  else
-    {
-      SDL_WM_SetCaption("Windstille", 0 /* icon */);
-
-      GLenum err = glewInit();
-      if(err != GLEW_OK) {
-        std::ostringstream msg;
-        msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
-        throw std::runtime_error(msg.str());
-      }
-      /*
-        if(!GLEW_EXT_framebuffer_object) {
-        std::ostringstream msg;
-        msg << "Display:: Framebuffer opengl extension not supported";
-        throw std::runtime_error(msg.str());
-        }
-      */
-
-      glViewport(0, 0, window->w, window->h);
-      glMatrixMode(GL_PROJECTION);
-      glLoadIdentity();
-
-      static const float cl_pixelcenter_constant = 0.375;
-
-      //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
-  
-      // glOrtho(0.0, 800, 0.0, 600.0, 1000.0, -1000.0); // proper right-hand CO
-      Display::aspect_size = Size(config.get_int("aspect-width"), 
-                                  config.get_int("aspect-height"));
-
-      glOrtho(0.0, 
-              aspect_size.width, aspect_size.height,
-              0.0, 1000.0, -1000.0);
-      glMatrixMode(GL_MODELVIEW);
-      glLoadIdentity();
-      glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
-
-      if (config.get_int("anti-aliasing"))
-        glEnable(GL_MULTISAMPLE_ARB); 
-
-      assert_gl("setup projection");
-
-      OpenGLState::init();
-    }
-}
-
-void
-Display::set_fullscreen(bool fullscreen)
-{ 
-  Uint32 flags = SDL_OPENGL;
-  if (fullscreen)
-    flags |= SDL_FULLSCREEN;
-
-  window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
-                            0, flags);
-  if (!window)
-    {
-      throw std::runtime_error("Display:: Couldn't create window");
-    }
-}
-
-void
 Display::draw_circle(const Vector2f& pos, float radius, const Color& color, int segments)
 {
   assert(segments >= 0);
@@ -492,6 +409,8 @@
 void
 Display::save_screenshot(const std::string& filename)
 {
+  SDL_Surface* window = SDL_GetVideoSurface();
+
   const int width  = window->w;
   const int height = window->h;
 
@@ -536,7 +455,7 @@
 
       if (!fp)
         {
-          console << "Error: Couldn't save screenshot: " << strerror(errno) << std::endl;
+          std::cout << "Error: Couldn't save screenshot: " << strerror(errno) << std::endl;
           return;
         }
       else

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/display/display.hpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -30,11 +30,12 @@
 class Display
 {
 private:
-  static Size aspect_size;
   static std::vector<Rect> cliprects;
-  static SDL_Surface* window;
 
 public:
+  static Size aspect_size;
+  
+public:
   static void fill_rect(const Rectf& rect, const Color& color);
   static void draw_rect(const Rectf& rect, const Color& color);
 
@@ -56,8 +57,6 @@
   static int  get_width();
   static int  get_height();
 
-  static void set_fullscreen(bool fullscreen);
-
   static void push_cliprect(const Rect& rect);
   static void pop_cliprect();
 

Modified: trunk/windstille/src/display/opengl_state.cpp
===================================================================
--- trunk/windstille/src/display/opengl_state.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/display/opengl_state.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -75,8 +75,10 @@
 
   global_ = new OpenGLState();
 
+#if 0
   if (debug)
     global_->verify();
+#endif
 }
 
 OpenGLState*
@@ -313,8 +315,10 @@
         }
     }
 
+#if 0
   if (debug)
     verify();
+#endif
 }
 
 void

Modified: trunk/windstille/src/display/surface_manager.cpp
===================================================================
--- trunk/windstille/src/display/surface_manager.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/display/surface_manager.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -42,7 +42,8 @@
 
 SurfaceManager::~SurfaceManager()
 {
-  if(debug)
+#if 0 
+  if (debug)
     {
       for(Surfaces::iterator i = surfaces.begin(); i != surfaces.end(); ++i)
         {
@@ -50,6 +51,7 @@
           std::cerr << "Warning: Surface '" << i->first << "' not released.\n";
         }
     }
+#endif
 
   current_ = 0;
 }

Modified: trunk/windstille/src/display/texture_manager.cpp
===================================================================
--- trunk/windstille/src/display/texture_manager.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/display/texture_manager.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -37,12 +37,14 @@
 
 TextureManager::~TextureManager()
 {
+#if 0
   if(debug)
   {
     for(Textures::iterator i = textures.begin(); i != textures.end(); ++i) {
       std::cerr << "Warning: Texture '" << i->first << "' not released.\n";
     }
   }
+#endif
 }
 
 Texture

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -19,12 +19,16 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 #define HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 
+#include <GL/glew.h>
+#include <GL/gl.h>
+
 #include <vector>
 #include <iostream>
 #include <gtkglmm.h>
 #include <gdkmm/dragcontext.h>
 #include <gtkmm/gl/widget.h>
 
+#include "display/scene_context.hpp"
 #include "math/vector2f.hpp"
 
 /** OpenGL drawing area into which the Windstille game will be
@@ -35,6 +39,7 @@
 {
 private:
   std::vector<Vector2f> objects;
+    SceneContext sc;
   
 public:
   WindstilleWidget();

Modified: trunk/windstille/src/screen/screen_manager.cpp
===================================================================
--- trunk/windstille/src/screen/screen_manager.cpp	2009-03-21 02:56:15 UTC (rev 2717)
+++ trunk/windstille/src/screen/screen_manager.cpp	2009-03-21 03:48:28 UTC (rev 2718)
@@ -28,6 +28,7 @@
 #include "screen.hpp"
 #include "font/fonts.hpp"
 #include "app/config.hpp"
+#include "app/windstille_main.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_configurator.hpp"
 #include "sound/sound_manager.hpp"
@@ -253,7 +254,7 @@
               
                     case SDLK_F11:
                       config.set_bool("fullscreen", !config.get_bool("fullscreen"));
-                      Display::set_fullscreen(config.get_bool("fullscreen"));
+                      WindstilleMain::current()->set_fullscreen(config.get_bool("fullscreen"));
                       break;
               
 #ifndef WIN32



From grumbel at mail.berlios.de  Sat Mar 21 15:14:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 15:14:43 +0100
Subject: [Windstille-commit] r2719 - in trunk/windstille: . src src/editor
Message-ID: <200903211414.n2LEEhCH000792@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 15:14:42 +0100 (Sat, 21 Mar 2009)
New Revision: 2719

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
a little bit of lib initialisation in the editor, mostly still non functional

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-21 03:48:28 UTC (rev 2718)
+++ trunk/windstille/TODO	2009-03-21 14:14:42 UTC (rev 2719)
@@ -464,6 +464,9 @@
 Editor
 ======
 
+* use SceneContext in WindstilleWidget and setup Physfs,
+  SurfaceManager, TextureManager and everything else that is needed
+
 * add a new layer to SceneContext that is used for UI elements, such
   as control handles for scale or rotate, could maybe also used for
   use-verbs and stuff. The new layer shall only translate objects, but

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-21 03:48:28 UTC (rev 2718)
+++ trunk/windstille/src/SConscript	2009-03-21 14:14:42 UTC (rev 2719)
@@ -57,8 +57,8 @@
         'math/vector2f.cpp',
         ])
 
-display_env = Environment(CPPPATH=['.'],
-                          CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'])
+display_env = conf_env.Clone()
+display_env['CPPPATH'] = ['.', '..']
 display_env.ParseConfig('sdl-config --cflags --libs')
 display_env.ParseConfig('freetype-config --libs --cflags')
 
@@ -224,7 +224,7 @@
 
 editor_env = Environment(CPPPATH=['.'],
                          CXXFLAGS=['-Wall', '-Werror', '-O2', '-g'],
-                         LIBS = [display_lib, physfs_lib, util_lib, math_lib, 'GL', 'GLEW', 'SDL_image', 'physfs'])
+                         LIBS = [display_lib, util_lib, physfs_lib, math_lib, 'GL', 'GLEW', 'SDL_image', 'physfs'])
 
 editor_env.ParseConfig('pkg-config libpng --libs --cflags')
 editor_env.ParseConfig('sdl-config --cflags --libs')

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-21 03:48:28 UTC (rev 2718)
+++ trunk/windstille/src/editor/main.cpp	2009-03-21 14:14:42 UTC (rev 2719)
@@ -16,10 +16,14 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <GL/glew.h>
+#include <GL/gl.h>
 #include <iostream>
-#include <gtkmm.h>
+#include <stdexcept>
+#include <sstream>
+#include <gtkmm/main.h>
 #include <gtkglmm.h>
-#include <gtkmm/gl/widget.h>
+#include <physfs.h>
 
 #include "editor_window.hpp"
 #include "main.hpp"
@@ -32,6 +36,15 @@
       Gtk::Main kit(&argc, &argv);
       Gtk::GL::init(&argc, &argv);
 
+            if (!PHYSFS_init(argv[0]))
+        {
+          std::ostringstream msg;
+          msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
+          throw std::runtime_error(msg.str());
+        }
+  
+      PHYSFS_addToSearchPath("data/", 0);
+
       EditorWindow window;
       
       window.show_all();

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 03:48:28 UTC (rev 2718)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 14:14:42 UTC (rev 2719)
@@ -22,7 +22,16 @@
 
 #include <gtkmm.h>
 
+
+#include "sprite2d/sprite.hpp"
+#include "display/texture_manager.hpp"
+#include "display/surface_manager.hpp"
+#include "display/opengl_state.hpp"
+
+#include "display/surface.hpp"
 #include "windstille_widget.hpp"
+
+bool lib_init = false;
 
 WindstilleWidget::WindstilleWidget()
 {
@@ -87,12 +96,26 @@
 void
 WindstilleWidget::on_realize()
 {
+  std::cout << "WindstilleWidget::on_realize()" << std::endl;
+
   Gtk::DrawingArea::on_realize();
 
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (glwindow->gl_begin(get_gl_context()))
     {
+      if (!lib_init)
+        {
+          lib_init = true;
+          OpenGLState::init();
+          //texture_manager  = new TextureManager();
+          //new SurfaceManager();
+          //sprite2d_manager = new SpriteManager();
+          //sc.reset(new SceneContext());
+        }
+
+      //Surface surface("images/hedgehog.png");
+      
       glViewport(0, 0, get_width(), get_height());
       glMatrixMode(GL_PROJECTION);
       glLoadIdentity();
@@ -135,6 +158,7 @@
 bool
 WindstilleWidget::on_expose_event(GdkEventExpose* event)
 {
+  std::cout << "WindstilleWidget::on_expose()" << std::endl;
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (!glwindow->gl_begin(get_gl_context()))

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 03:48:28 UTC (rev 2718)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 14:14:42 UTC (rev 2719)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 #define HEADER_WINDSTILLE_EDITOR_WINDSTILLE_WIDGET_HPP
 
+#include <memory>
 #include <GL/glew.h>
 #include <GL/gl.h>
 
@@ -39,7 +40,7 @@
 {
 private:
   std::vector<Vector2f> objects;
-    SceneContext sc;
+  std::auto_ptr<SceneContext> sc;
   
 public:
   WindstilleWidget();



From grumbel at mail.berlios.de  Sat Mar 21 16:40:09 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 16:40:09 +0100
Subject: [Windstille-commit] r2720 - trunk/windstille/src/editor
Message-ID: <200903211540.n2LFe9gx007718@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 16:40:09 +0100 (Sat, 21 Mar 2009)
New Revision: 2720

Modified:
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Init glew properly, basic drawing now working

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 14:14:42 UTC (rev 2719)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 15:40:09 UTC (rev 2720)
@@ -107,14 +107,20 @@
       if (!lib_init)
         {
           lib_init = true;
+          GLenum err = glewInit();
+          if(err != GLEW_OK) {
+            std::ostringstream msg;
+            msg << "Display:: Couldn't initialize glew: " << glewGetString(err);
+            throw std::runtime_error(msg.str());
+          }
+
           OpenGLState::init();
           //texture_manager  = new TextureManager();
-          //new SurfaceManager();
+          new SurfaceManager();
           //sprite2d_manager = new SpriteManager();
-          //sc.reset(new SceneContext());
+          sc.reset(new SceneContext());
         }
 
-      //Surface surface("images/hedgehog.png");
       
       glViewport(0, 0, get_width(), get_height());
       glMatrixMode(GL_PROJECTION);
@@ -168,15 +174,31 @@
   else
     {
       //std::cout << "Draw" << std::endl;
-      glBegin(GL_QUADS);
-      for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
+      if (sc.get())
         {
-          glVertex2f(i->x - 50, i->y - 50);
-          glVertex2f(i->x + 50, i->y - 50);
-          glVertex2f(i->x + 50, i->y + 50);
-          glVertex2f(i->x - 50, i->y + 50);
+          { // not visible since SceneContext rendering clears the screen
+            OpenGLState state;
+            state.color(Color(1.0f, 1.0f, 1.0f));
+            state.activate();
+
+            glBegin(GL_QUADS);
+            for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
+              {
+                glVertex2f(i->x - 50, i->y - 50);
+                glVertex2f(i->x + 50, i->y - 50);
+                glVertex2f(i->x + 50, i->y + 50);
+                glVertex2f(i->x - 50, i->y + 50);
+              }
+            glEnd();
+          }
+
+          Surface surface("images/hedgehog.png");
+          for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
+            {
+              sc->color().draw(surface, i->x+50, i->y+50);
+            }
+          sc->render();
         }
-      glEnd();
 
       // Swap buffers.
       if (glwindow->is_double_buffered())



From grumbel at mail.berlios.de  Sat Mar 21 20:48:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 20:48:16 +0100
Subject: [Windstille-commit] r2721 - in trunk/windstille: . src src/editor
Message-ID: <200903211948.n2LJmGNc010044@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 20:48:15 +0100 (Sat, 21 Mar 2009)
New Revision: 2721

Added:
   trunk/windstille/src/editor/minimap_widget.cpp
   trunk/windstille/src/editor/minimap_widget.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added GL context sharing (little fudged, but seems to be the only way right now)

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/TODO	2009-03-21 19:48:15 UTC (rev 2721)
@@ -328,6 +328,19 @@
 
 * make Console not derive from ostream
 
+OpenGL
+======
+
+* check for features before using them:
+
+glewInit();
+if (glewIsSupported("GL_VERSION_2_0"))
+printf("Ready for OpenGL 2.0\n");
+else {
+printf("OpenGL 2.0 not supported\n");
+exit(1);
+}
+
 Profiling
 =========
 
@@ -418,6 +431,8 @@
 Random Things
 =============
 
+* add a music player that allows to play all music files of Windstille
+
 * UTF8 support is missing in:
   
   - BabyXML
@@ -464,6 +479,8 @@
 Editor
 ======
 
+* share GL context between different sectors, need dummy Context, abuse minimap for that
+
 * use SceneContext in WindstilleWidget and setup Physfs,
   SurfaceManager, TextureManager and everything else that is needed
 

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/SConscript	2009-03-21 19:48:15 UTC (rev 2721)
@@ -238,6 +238,7 @@
         'editor/object_selector.cpp',
         'editor/about_window.cpp',
         'editor/windstille_widget.cpp',
+        'editor/minimap_widget.cpp',
         'editor/editor_window.cpp'
         ])
 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -27,7 +27,9 @@
 #include "about_window.hpp"
 #include "editor_window.hpp"
 
-EditorWindow::EditorWindow()
+EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
+  : minimap_widget(glconfig_),
+    glconfig(glconfig_)
 {
   set_title("Windstille Editor");
   set_default_size(1024, 768);
@@ -124,7 +126,7 @@
 
   // Packing
 
-  // Vbox
+  // Main Vbox
   vbox.pack_start(*ui_manager->get_widget("/MenuBar"), Gtk::PACK_SHRINK);
   vbox.pack_start(*ui_manager->get_widget("/ToolBar"), Gtk::PACK_SHRINK);
   vbox.add(hbox);
@@ -139,9 +141,12 @@
   //object_selector.set_size_request(250, 300);
   //object_tree.set_size_request(250, 300);
   
-  hpaned.pack1(notebook, Gtk::EXPAND);
-  hpaned.pack2(vpaned,   Gtk::SHRINK);
+  hpaned.pack1(notebook,     Gtk::EXPAND);
+  hpaned.pack2(sidebar_vbox, Gtk::SHRINK);
  
+  sidebar_vbox.pack_start(vpaned, Gtk::PACK_EXPAND_WIDGET);
+  sidebar_vbox.pack_start(minimap_widget, Gtk::PACK_SHRINK);
+  
   vpaned.pack1(object_selector, Gtk::EXPAND);
   vpaned.pack2(object_tree,     Gtk::SHRINK);
 
@@ -173,10 +178,15 @@
 EditorWindow::on_new()
 {
   std::cout << "on_new" << std::endl;
-  WindstilleWidget* windstille = new WindstilleWidget();
-  int new_page = notebook.append_page(*windstille, Glib::ustring::compose("Sector %1", notebook.get_n_pages()));
+
+  // FIXME: We abuse the minimap as our root GLContext
+  WindstilleWidget* windstille = new WindstilleWidget(glconfig, minimap_widget.get_gl_context());
+
+  Glib::ustring title = Glib::ustring::compose("Sector %1", notebook.get_n_pages());
+  int new_page = notebook.append_page(*windstille, title);
   windstille->show();
-  notebook.set_current_page(new_page);
+  notebook.set_current_page(new_page); 
+
 }
 
 void
@@ -244,5 +254,18 @@
       notebook.remove_page(page);
     }
 }
+
+void
+EditorWindow::show_minimap(bool v)
+{
+  if (v)
+    {
+      minimap_widget.show();
+    }
+  else
+    {
+      minimap_widget.hide();
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -26,6 +26,7 @@
 #include <gtkmm/window.h>
 #include <gtkmm/notebook.h>
 
+#include "minimap_widget.hpp"
 #include "object_selector.hpp"
 #include "object_tree.hpp"
 
@@ -33,22 +34,28 @@
 {
 private:
   Gtk::VBox   vbox;
+  Gtk::VBox   sidebar_vbox;
   Gtk::HBox   hbox;
   Gtk::HPaned hpaned;
   Gtk::VPaned vpaned;
   Gtk::Statusbar status;
   
-  Gtk::Notebook notebook;
+  Gtk::Notebook  notebook;
   ObjectSelector object_selector;
   ObjectTree     object_tree;
+  MinimapWidget  minimap_widget;
 
   Glib::RefPtr<Gtk::UIManager>   ui_manager;
   Glib::RefPtr<Gtk::ActionGroup> action_group;
+  Glib::RefPtr<Gdk::GL::Context> share_list;
+  Glib::RefPtr<const Gdk::GL::Config>  glconfig;
 
 public:
-  EditorWindow();
+  EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig);
   virtual ~EditorWindow();
 
+  void show_minimap(bool v);
+
 protected:
   void on_new();
   void on_open();

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/main.cpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -36,7 +36,7 @@
       Gtk::Main kit(&argc, &argv);
       Gtk::GL::init(&argc, &argv);
 
-            if (!PHYSFS_init(argv[0]))
+      if (!PHYSFS_init(argv[0]))
         {
           std::ostringstream msg;
           msg << "Couldn't initialize physfs: " << PHYSFS_getLastError();
@@ -44,10 +44,20 @@
         }
   
       PHYSFS_addToSearchPath("data/", 0);
+      
+      Glib::RefPtr<const Gdk::GL::Config> 
+        glconfig = Gdk::GL::Config::create(Gdk::GL::MODE_RGB    |
+                                           Gdk::GL::MODE_DEPTH  |
+                                           Gdk::GL::MODE_DOUBLE);
+      if (!glconfig)
+        {
+          throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
+        }
 
-      EditorWindow window;
+      EditorWindow window(glconfig);
       
       window.show_all();
+      window.show_minimap(false);
 
       Gtk::Main::run(window);
     }

Added: trunk/windstille/src/editor/minimap_widget.cpp
===================================================================
--- trunk/windstille/src/editor/minimap_widget.cpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/minimap_widget.cpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -0,0 +1,70 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "minimap_widget.hpp"
+
+MinimapWidget::MinimapWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig)
+{
+  set_gl_capability(glconfig);
+  set_size_request(0, 64);
+}
+
+bool
+MinimapWidget::mouse_move(GdkEventMotion* event)
+{
+  return false;
+}
+
+bool
+MinimapWidget::mouse_down (GdkEventButton* event)
+{
+  return false;
+}
+
+bool
+MinimapWidget::mouse_up(GdkEventButton* event)
+{
+  return false;
+}
+
+bool
+MinimapWidget::scroll(GdkEventScroll* event)
+{
+  return false;
+}
+
+bool
+MinimapWidget::on_expose_event(GdkEventExpose* event)
+{
+  Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
+
+  if (!glwindow->gl_begin(get_gl_context()))
+    {
+      return false;
+    }
+  else
+    {
+      glClear(GL_COLOR_BUFFER_BIT);
+      glwindow->swap_buffers();
+      glwindow->gl_end();
+
+      return true;
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/minimap_widget.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/minimap_widget.hpp
===================================================================
--- trunk/windstille/src/editor/minimap_widget.hpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/minimap_widget.hpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -0,0 +1,50 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_MINIMAP_WIDGET_HPP
+#define HEADER_WINDSTILLE_EDITOR_MINIMAP_WIDGET_HPP
+
+#include <gtkglmm.h>
+#include <gdkmm/dragcontext.h>
+#include <gtkmm/gl/widget.h>
+
+/** Minimap Widget, 
+ */
+class MinimapWidget
+  : public Gtk::DrawingArea,
+    public Gtk::GL::Widget<MinimapWidget>
+{
+private:
+public:
+  MinimapWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig);
+  
+  bool mouse_move(GdkEventMotion* event);
+  bool mouse_down (GdkEventButton* event);
+  bool mouse_up(GdkEventButton* event);
+  bool scroll(GdkEventScroll* event);
+  
+  bool on_expose_event(GdkEventExpose* event);
+
+private:
+  MinimapWidget(const MinimapWidget&);
+  MinimapWidget& operator=(const MinimapWidget&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/minimap_widget.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -0,0 +1,40 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "sector_model.hpp"
+
+class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
+{
+public:
+  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type_icon;
+  Gtk::TreeModelColumn<Glib::ustring>              name;
+  Gtk::TreeModelColumn<bool>                       visible;
+
+  ObjectTreeColumns() {
+    add(type_icon); 
+    add(name); 
+    add(visible); 
+  }
+};
+
+SectorModel::SectorModel()
+{
+  objects = Gtk::TreeStore::create(columns);
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/sector_model.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -0,0 +1,38 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_SECTOR_MODEL_HPP
+#define HEADER_SECTOR_MODEL_HPP
+
+/** */
+class SectorModel
+{
+private:
+  Glib::RefPtr<Gtk::TreeStore> objects;
+
+public:
+  SectorModel();
+
+private:
+  SectorModel(const SectorModel&);
+  SectorModel& operator=(const SectorModel&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/sector_model.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -33,29 +33,11 @@
 
 bool lib_init = false;
 
-WindstilleWidget::WindstilleWidget()
+WindstilleWidget::WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>&  glconfig,
+                                   const Glib::RefPtr<const Gdk::GL::Context>& share_list)
 {
-  Glib::RefPtr<Gdk::GL::Config> glconfig;
+  set_gl_capability(glconfig, share_list);
 
-  glconfig = Gdk::GL::Config::create(Gdk::GL::MODE_RGB    |
-                                     Gdk::GL::MODE_DEPTH  |
-                                     Gdk::GL::MODE_DOUBLE);
-  if (!glconfig)
-    {
-      std::cerr << "*** Cannot find the double-buffered visual.\n"
-                << "*** Trying single-buffered visual.\n";
-
-      // Try single-buffered visual
-      glconfig = Gdk::GL::Config::create(Gdk::GL::MODE_RGB   |
-                                         Gdk::GL::MODE_DEPTH);
-      if (!glconfig)
-        {
-          throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
-        }
-    }
- 
-  set_gl_capability(glconfig);
-
   add_events(Gdk::POINTER_MOTION_MASK | Gdk::BUTTON_PRESS_MASK | Gdk::BUTTON_RELEASE_MASK |
              Gdk::KEY_PRESS_MASK      | Gdk::KEY_RELEASE_MASK | 
              Gdk::ENTER_NOTIFY_MASK   | Gdk::LEAVE_NOTIFY_MASK);
@@ -118,10 +100,11 @@
           //texture_manager  = new TextureManager();
           new SurfaceManager();
           //sprite2d_manager = new SpriteManager();
-          sc.reset(new SceneContext());
         }
-
       
+      if (!sc.get())
+        sc.reset(new SceneContext());
+      
       glViewport(0, 0, get_width(), get_height());
       glMatrixMode(GL_PROJECTION);
       glLoadIdentity();
@@ -164,7 +147,7 @@
 bool
 WindstilleWidget::on_expose_event(GdkEventExpose* event)
 {
-  std::cout << "WindstilleWidget::on_expose()" << std::endl;
+  //std::cout << "WindstilleWidget::on_expose()" << std::endl;
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   if (!glwindow->gl_begin(get_gl_context()))

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 15:40:09 UTC (rev 2720)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 19:48:15 UTC (rev 2721)
@@ -43,7 +43,8 @@
   std::auto_ptr<SceneContext> sc;
   
 public:
-  WindstilleWidget();
+  WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
+                   const Glib::RefPtr<const Gdk::GL::Context>& share_list);
   virtual ~WindstilleWidget();
 
   virtual void on_realize();



From grumbel at mail.berlios.de  Sat Mar 21 20:51:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 21 Mar 2009 20:51:19 +0100
Subject: [Windstille-commit] r2722 - trunk/windstille/data/sectors/apartment
Message-ID: <200903211951.n2LJpJt7010591@sheep.berlios.de>

Author: grumbel
Date: 2009-03-21 20:51:18 +0100 (Sat, 21 Mar 2009)
New Revision: 2722

Added:
   trunk/windstille/data/sectors/apartment/barrobot2.nut
Log:
Test script

Added: trunk/windstille/data/sectors/apartment/barrobot2.nut
===================================================================
--- trunk/windstille/data/sectors/apartment/barrobot2.nut	2009-03-21 19:48:15 UTC (rev 2721)
+++ trunk/windstille/data/sectors/apartment/barrobot2.nut	2009-03-21 19:51:18 UTC (rev 2722)
@@ -0,0 +1,66 @@
+class Character
+{
+  x = null;
+  y = null;
+  r = null;
+  g = null;
+  b = null;
+
+  constructor(x_, y_, r_, g_, b_) {
+    x = x_;
+    y = y_;
+
+    r = r_;
+    g = g_;
+    b = b_;
+  }
+  
+  function say(text) {
+    ::wait_for_speech(::speech_show(text, x, y, r, g, b));
+  }
+};
+
+function init()
+{
+  robot <- Character(850, 160, 1.0, 0.0, 1.0);
+  jane  <- Character(740, 120, 1.0, 1.0, 1.0);
+}
+
+function run()
+{
+  robot.say("I am robot.");
+  robot.say("How can I help you?");
+  jane.say("Hi there, cute little robot you are.");
+  jane.say("I could use a little help when it comes to ...");
+  switch(conversation([["Yagor", "That guy is getting on my nerves."],
+                       ["Jeff",  "That idiot"]]))
+    {
+      case 0:
+        function foo() {
+          robot.say("Yagor, is my boss as much as yours.");
+          jane .say("I don't take orders from anybody.");
+          robot.say("But he is the one that has your paycheck.");
+          jane .say("Good point, but aren't we in the future, where we no longer need those?");
+          robot.say("This ain't the future of the fifthies...");
+          robot.say("..this is real life.");
+          jane .say("I don't think so.");
+          robot.say("How can you say that?");
+          jane .say("Its a videogame after all, isn't it.");
+          robot.say("Guess so.");
+          robot.say("Nice I could help.");
+        }
+        foo();
+        break;
+
+      case 1:
+        robot.say("I see.");
+        robot.say("Your profesional relationship doesn't seem to be all that professional after all.");
+        jane.say("You bet. That guy is a dork");
+        robot.say("Be easy on him, it might help you in the long run");
+        jane.say("Will try");
+        robot.say("Nice that I could help you");
+        break;
+    }
+}
+
+/* EOF */



From grumbel at mail.berlios.de  Sun Mar 22 00:01:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 00:01:43 +0100
Subject: [Windstille-commit] r2723 - in trunk/windstille: . data/editor
	src/display src/editor
Message-ID: <200903212301.n2LN1hLG030752@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 00:01:42 +0100 (Sun, 22 Mar 2009)
New Revision: 2723

Added:
   trunk/windstille/data/editor/node_tool.png
   trunk/windstille/data/editor/select_tool.png
   trunk/windstille/data/editor/zoom_tool.png
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/display/graphic_context_state.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added icons for tools, added scrolling via cursor keys to editor

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/TODO	2009-03-21 23:01:42 UTC (rev 2723)
@@ -479,6 +479,8 @@
 Editor
 ======
 
+* add grid
+
 * share GL context between different sectors, need dummy Context, abuse minimap for that
 
 * use SceneContext in WindstilleWidget and setup Physfs,

Added: trunk/windstille/data/editor/node_tool.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/node_tool.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/select_tool.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/select_tool.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/zoom_tool.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/zoom_tool.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/display/graphic_context_state.hpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.hpp	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/src/display/graphic_context_state.hpp	2009-03-21 23:01:42 UTC (rev 2723)
@@ -54,7 +54,7 @@
   float get_rotation();
 
   /** Move the center of the visible area to pos */
-  void      set_pos(const Vector2f& pos);
+  void     set_pos(const Vector2f& pos);
   Vector2f get_pos() const;
 
   /** Set zoom to z, while ensuring that the screen position \a pos

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-21 23:01:42 UTC (rev 2723)
@@ -19,6 +19,7 @@
 #include <iostream>
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
+#include <gtkmm/icontheme.h>
 #include <gtkmm/uimanager.h>
 #include <gtkmm/toolbar.h>
 #include <gtkmm/stock.h>
@@ -78,8 +79,9 @@
     "    <toolitem action='Quit'/>"
     "  </toolbar>"
     "  <toolbar  name='ToolBox'>"
-    "    <toolitem action='Open'/>"
-    "    <toolitem action='Quit'/>"
+    "    <toolitem action='SelectTool'/>"
+    "    <toolitem action='NodeTool'/>"
+    "    <toolitem action='ZoomTool'/>"
     "  </toolbar>"
     "</ui>";
 
@@ -114,6 +116,15 @@
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
                     sigc::mem_fun(*this, &EditorWindow::on_about_clicked));
 
+  Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
+  icon_theme->append_search_path("data/editor/");
+
+  // Tools
+  action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));
+  action_group->add(Gtk::Action::create_with_icon_name("SelectTool", "select_tool", "Select Tool", "Select Tool"));
+  action_group->add(Gtk::Action::create_with_icon_name("NodeTool",   "node_tool",   "Node Tool", "Node Tool"));
+  action_group->add(Gtk::Action::create_with_icon_name("ZoomTool",   "zoom_tool",   "Zoom Tool", "Zoom Tool"));
+
   // signal_size_allocate().connect (sigc::mem_fun (*this, &EditorWindow::on_window_size_allocate), false);
   // signal_realize().connect (sigc::mem_fun (*this, &EditorWindow::on_window_realize));
 

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-21 23:01:42 UTC (rev 2723)
@@ -56,7 +56,7 @@
 
   void show_minimap(bool v);
 
-protected:
+public:
   void on_new();
   void on_open();
   void on_save();

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/src/editor/main.cpp	2009-03-21 23:01:42 UTC (rev 2723)
@@ -59,6 +59,8 @@
       window.show_all();
       window.show_minimap(false);
 
+      window.on_new();
+      
       Gtk::Main::run(window);
     }
   catch(std::exception& err)

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 23:01:42 UTC (rev 2723)
@@ -115,6 +115,8 @@
   
       glwindow->gl_end();
     }
+
+  state.set_size(get_width(), get_height());
 }
 
 bool
@@ -159,6 +161,8 @@
       //std::cout << "Draw" << std::endl;
       if (sc.get())
         {
+          state.push(*sc);
+
           { // not visible since SceneContext rendering clears the screen
             OpenGLState state;
             state.color(Color(1.0f, 1.0f, 1.0f));
@@ -181,6 +185,8 @@
               sc->color().draw(surface, i->x+50, i->y+50);
             }
           sc->render();
+
+          state.pop(*sc);
         }
 
       // Swap buffers.
@@ -240,14 +246,38 @@
 bool
 WindstilleWidget::key_press(GdkEventKey* event)
 {
-  std::cout << "KeyPress: " << (int)event->keyval << std::endl;
+  switch(event->keyval)
+    {
+      case GDK_Left:
+        state.set_pos(state.get_pos() + Vector2f(-100.0f, 0.0f));
+        queue_draw();
+        break;
+
+      case GDK_Right:
+        state.set_pos(state.get_pos() + Vector2f(100.0f, 0.0f));
+        queue_draw();
+        break;
+
+      case GDK_Up:
+        state.set_pos(state.get_pos() + Vector2f(0.0f, -100.0f));
+        queue_draw();
+        break;
+
+      case GDK_Down:
+        state.set_pos(state.get_pos() + Vector2f(0.0f, 100.0f));
+        queue_draw();
+        break;
+    }
+
+  std::cout << state.get_pos() << std::endl;
+
   return true;
 }
 
 bool
 WindstilleWidget::key_release(GdkEventKey* event)
 { // /usr/include/gtk-2.0/gdk/gdkkeysyms.h
-  std::cout << "KeyRelease: " << (int)event->keyval << std::endl;
+  //std::cout << "KeyRelease: " << (int)event->keyval << std::endl;
   return true;
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 19:51:18 UTC (rev 2722)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 23:01:42 UTC (rev 2723)
@@ -29,6 +29,7 @@
 #include <gdkmm/dragcontext.h>
 #include <gtkmm/gl/widget.h>
 
+#include "display/graphic_context_state.hpp"
 #include "display/scene_context.hpp"
 #include "math/vector2f.hpp"
 
@@ -39,6 +40,7 @@
     public Gtk::GL::Widget<WindstilleWidget>
 {
 private:
+  GraphicContextState   state;
   std::vector<Vector2f> objects;
   std::auto_ptr<SceneContext> sc;
   



From grumbel at mail.berlios.de  Sun Mar 22 00:23:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 00:23:35 +0100
Subject: [Windstille-commit] r2724 - trunk/windstille/src/editor
Message-ID: <200903212323.n2LNNZWh032726@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 00:23:35 +0100 (Sun, 22 Mar 2009)
New Revision: 2724

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added zoom

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-21 23:01:42 UTC (rev 2723)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-21 23:23:35 UTC (rev 2724)
@@ -106,10 +106,12 @@
   action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE));
 
   action_group->add(Gtk::Action::create("MenuView",    "_View"));
-  action_group->add(Gtk::Action::create("Zoom100",     Gtk::Stock::ZOOM_100));
-  action_group->add(Gtk::Action::create("ZoomIn",      Gtk::Stock::ZOOM_IN));
-  action_group->add(Gtk::Action::create("ZoomOut",     Gtk::Stock::ZOOM_OUT));
-
+  action_group->add(Gtk::Action::create("Zoom100",     Gtk::Stock::ZOOM_100),
+                    sigc::mem_fun(*this, &EditorWindow::on_zoom_100));
+  action_group->add(Gtk::Action::create("ZoomIn",      Gtk::Stock::ZOOM_IN),
+                    sigc::mem_fun(*this, &EditorWindow::on_zoom_in));
+  action_group->add(Gtk::Action::create("ZoomOut",     Gtk::Stock::ZOOM_OUT),
+                    sigc::mem_fun(*this, &EditorWindow::on_zoom_out));
   action_group->add(Gtk::Action::create("Play",        Gtk::Stock::MEDIA_PLAY));
 
   action_group->add(Gtk::Action::create("MenuHelp",    "_Help"));
@@ -278,5 +280,43 @@
       minimap_widget.hide();
     }
 }
+
+void
+EditorWindow::on_zoom_in()
+{
+  WindstilleWidget* wst = get_windstille_widget();
+  if (wst)
+    wst->on_zoom_in();
+}
+
+void
+EditorWindow::on_zoom_out()
+{
+  WindstilleWidget* wst = get_windstille_widget();
+  if (wst)
+    wst->on_zoom_out();
+}
+
+void
+EditorWindow::on_zoom_100()
+{
+  WindstilleWidget* wst = get_windstille_widget();
+  if (wst)
+    wst->on_zoom_100();
+}
+
+WindstilleWidget*
+EditorWindow::get_windstille_widget()
+{
+  int page = notebook.get_current_page();
+  if (page == -1)
+    {
+      return 0;
+    }
+  else
+    {
+      return static_cast<WindstilleWidget*>(notebook.get_nth_page(page));
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-21 23:01:42 UTC (rev 2723)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-21 23:23:35 UTC (rev 2724)
@@ -30,6 +30,8 @@
 #include "object_selector.hpp"
 #include "object_tree.hpp"
 
+class WindstilleWidget;
+
 class EditorWindow : public Gtk::Window
 {
 private:
@@ -65,6 +67,12 @@
   void on_about_clicked();
   void on_quit();
 
+  void on_zoom_in();
+  void on_zoom_out();
+  void on_zoom_100();
+
+  WindstilleWidget* get_windstille_widget();
+  
 private:
   EditorWindow(const EditorWindow&);
   EditorWindow& operator=(const EditorWindow&);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 23:01:42 UTC (rev 2723)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 23:23:35 UTC (rev 2724)
@@ -122,6 +122,8 @@
 bool
 WindstilleWidget::on_configure_event(GdkEventConfigure* event)
 {
+  state.set_size(get_width(), get_height());
+
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
   // *** OpenGL BEGIN ***
@@ -304,5 +306,26 @@
 {
   std::cout << "WindstilleWidget: on_drag_finish()" << std::endl;
 }
+
+void
+WindstilleWidget::on_zoom_in()
+{
+  state.set_zoom(state.get_zoom() * 1.1f);
+  queue_draw();
+}
+
+void
+WindstilleWidget::on_zoom_out()
+{
+  state.set_zoom(state.get_zoom() * (1.0f/1.1f));
+  queue_draw();
+}
+
+void
+WindstilleWidget::on_zoom_100()
+{
+  state.set_zoom(1.0f);
+  queue_draw();
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 23:01:42 UTC (rev 2723)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 23:23:35 UTC (rev 2724)
@@ -68,6 +68,10 @@
                                      const Gtk::SelectionData& data, guint info, guint time);
   virtual bool on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time);
 
+  void on_zoom_in();
+  void on_zoom_out();
+  void on_zoom_100();
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Sun Mar 22 12:41:15 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 12:41:15 +0100
Subject: [Windstille-commit] r2725 - in trunk/windstille/src: . display
	editor
Message-ID: <200903221141.n2MBfFb5023482@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 12:41:13 +0100 (Sun, 22 Mar 2009)
New Revision: 2725

Added:
   trunk/windstille/src/editor/scroll_tool.cpp
   trunk/windstille/src/editor/scroll_tool.hpp
   trunk/windstille/src/editor/tool.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/graphic_context_state.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added ScrollTool

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/SConscript	2009-03-22 11:41:13 UTC (rev 2725)
@@ -239,6 +239,7 @@
         'editor/about_window.cpp',
         'editor/windstille_widget.cpp',
         'editor/minimap_widget.cpp',
+        'editor/scroll_tool.cpp',
         'editor/editor_window.cpp'
         ])
 

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -190,4 +190,18 @@
   return impl->height; 
 }
 
+GraphicContextState
+GraphicContextState::clone() const
+{
+  GraphicContextState tmp;
+
+  tmp.impl->width    = impl->width;
+  tmp.impl->height   = impl->height;
+  tmp.impl->offset   = impl->offset;
+  tmp.impl->zoom     = impl->zoom;
+  tmp.impl->rotation = impl->rotation;
+
+  return tmp;
+}
+
 /* EOF */

Modified: trunk/windstille/src/display/graphic_context_state.hpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.hpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/display/graphic_context_state.hpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -68,6 +68,8 @@
 
   Vector2f screen_to_world(const Vector2f& pos);
 
+  GraphicContextState clone() const;
+
 private:
   boost::shared_ptr<GraphicContextStateImpl> impl;
 };

Added: trunk/windstille/src/editor/scroll_tool.cpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.cpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/editor/scroll_tool.cpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -0,0 +1,56 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "math/vector2f.hpp"
+#include "windstille_widget.hpp"
+#include "scroll_tool.hpp"
+
+ScrollTool::ScrollTool()
+{
+}
+
+bool
+ScrollTool::mouse_down(GdkEventButton* event, WindstilleWidget* wst)
+{
+  orig_state = wst->get_state().clone();
+  orig_click = orig_state.screen_to_world(Vector2f(event->x, event->y));
+  
+  return true;
+}
+
+bool
+ScrollTool::mouse_move(GdkEventMotion* event, WindstilleWidget* wst)
+{
+  Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(event->x, event->y));
+
+  wst->get_state().set_pos(orig_state.get_pos() + offset);
+
+  return true;
+}
+
+bool
+ScrollTool::mouse_up(GdkEventButton* event, WindstilleWidget* wst)
+{
+  Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(event->x, event->y));
+
+  wst->get_state().set_pos(orig_state.get_pos() + offset);
+
+  return true;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/scroll_tool.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/scroll_tool.hpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.hpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/editor/scroll_tool.hpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -0,0 +1,46 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_SCROLL_TOOL_HPP
+#define HEADER_WINDSTILLE_EDITOR_SCROLL_TOOL_HPP
+
+#include "display/graphic_context_state.hpp"
+#include "tool.hpp"
+
+/** */
+class ScrollTool : public Tool
+{
+private:
+  GraphicContextState orig_state;
+  Vector2f orig_click;
+
+public:
+  ScrollTool();
+
+  virtual bool mouse_down(GdkEventButton* event, WindstilleWidget* wst);
+  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst);
+  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget* wst);
+
+private:
+  ScrollTool(const ScrollTool&);
+  ScrollTool& operator=(const ScrollTool&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/scroll_tool.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/tool.hpp
===================================================================
--- trunk/windstille/src/editor/tool.hpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/editor/tool.hpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -0,0 +1,43 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_TOOL_HPP
+#define HEADER_WINDSTILLE_EDITOR_TOOL_HPP
+
+#include <gdkmm.h>
+
+class WindstilleWidget;
+
+class Tool
+{
+public:
+  Tool() {}
+  virtual ~Tool() {}
+
+  virtual bool mouse_down (GdkEventButton* event, WindstilleWidget* widget) = 0;
+  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget* widget) = 0;
+  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget* widget) = 0;
+
+private:
+  Tool(const Tool&);
+  Tool& operator=(const Tool&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/tool.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -30,11 +30,13 @@
 
 #include "display/surface.hpp"
 #include "windstille_widget.hpp"
+#include "scroll_tool.hpp"
 
 bool lib_init = false;
 
 WindstilleWidget::WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>&  glconfig,
                                    const Glib::RefPtr<const Gdk::GL::Context>& share_list)
+ : scroll_tool(new ScrollTool())
 {
   set_gl_capability(glconfig, share_list);
 
@@ -204,47 +206,63 @@
 }
 
 bool
-WindstilleWidget::mouse_move(GdkEventMotion* event)
+WindstilleWidget::scroll(GdkEventScroll* event)
 {
-  //std::cout << "Motion: " << event->x << ", " << event->y << std::endl;
-  
-  // Trigger redraw
-  // queue_draw();
-
-  return true;
+  if (event->direction == GDK_SCROLL_UP)
+    {
+      //viewer->get_state().zoom(1.1f, Vector2i(event->x, event->y));
+    }
+  else if (event->direction == GDK_SCROLL_DOWN)
+    {
+      //viewer->get_state().zoom(1.0f/1.1f, Vector2i(event->x, event->y));
+    }
+  return false;
 }
-
+
 bool
 WindstilleWidget::mouse_down(GdkEventButton* event)
 {
   grab_focus();
   std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //ewer->on_mouse_button_down(Vector2i(event->x, event->y), event->button);
+  if (event->button == 2)
+    {
+      current_tool = scroll_tool.get();
+      scroll_tool->mouse_down(event, this);
+    }
+
   return false;
 }
 
 bool
-WindstilleWidget::scroll(GdkEventScroll* event)
+WindstilleWidget::mouse_move(GdkEventMotion* event)
 {
-  if (event->direction == GDK_SCROLL_UP)
+  std::cout << "Motion: " << event->x << ", " << event->y << std::endl;
+  
+  if (current_tool)
     {
-      //viewer->get_state().zoom(1.1f, Vector2i(event->x, event->y));
+      current_tool->mouse_move(event, this);
+      queue_draw();
     }
-  else if (event->direction == GDK_SCROLL_DOWN)
-    {
-      //viewer->get_state().zoom(1.0f/1.1f, Vector2i(event->x, event->y));
-    }
-  return false;
+  
+  return true;
 }
 
 bool
 WindstilleWidget::mouse_up(GdkEventButton* event)
 {
+  current_tool = 0;
+
   std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //viewer->on_mouse_button_up(Vector2i(event->x, event->y), event->button);
+  if (event->button == 2)
+    {
+      scroll_tool->mouse_up(event, this);
+      queue_draw();
+    }
   return false;
 }
-
+
 bool
 WindstilleWidget::key_press(GdkEventKey* event)
 {
@@ -282,7 +300,7 @@
   //std::cout << "KeyRelease: " << (int)event->keyval << std::endl;
   return true;
 }
-
+
 bool
 WindstilleWidget::on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time)
 {
@@ -306,7 +324,7 @@
 {
   std::cout << "WindstilleWidget: on_drag_finish()" << std::endl;
 }
-
+
 void
 WindstilleWidget::on_zoom_in()
 {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-21 23:23:35 UTC (rev 2724)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 11:41:13 UTC (rev 2725)
@@ -33,6 +33,9 @@
 #include "display/scene_context.hpp"
 #include "math/vector2f.hpp"
 
+class Tool;
+class ScrollTool;
+
 /** OpenGL drawing area into which the Windstille game will be
     embedded */
 class WindstilleWidget 
@@ -43,12 +46,15 @@
   GraphicContextState   state;
   std::vector<Vector2f> objects;
   std::auto_ptr<SceneContext> sc;
-  
+  Tool* current_tool;
+  std::auto_ptr<ScrollTool> scroll_tool;
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
                    const Glib::RefPtr<const Gdk::GL::Context>& share_list);
   virtual ~WindstilleWidget();
 
+  GraphicContextState& get_state() { return state; }
+
   virtual void on_realize();
   virtual bool on_timeout();
   virtual bool on_configure_event(GdkEventConfigure* event);



From grumbel at mail.berlios.de  Sun Mar 22 13:18:15 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 13:18:15 +0100
Subject: [Windstille-commit] r2726 - in trunk/windstille/src: . display
	editor
Message-ID: <200903221218.n2MCIFfT025833@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 13:18:12 +0100 (Sun, 22 Mar 2009)
New Revision: 2726

Added:
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/zoom_tool.cpp
   trunk/windstille/src/editor/zoom_tool.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/editor/tool.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added SelectTool and ZoomTool

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/SConscript	2009-03-22 12:18:12 UTC (rev 2726)
@@ -240,6 +240,8 @@
         'editor/windstille_widget.cpp',
         'editor/minimap_widget.cpp',
         'editor/scroll_tool.cpp',
+        'editor/zoom_tool.cpp',
+        'editor/select_tool.cpp',
         'editor/editor_window.cpp'
         ])
 

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -60,17 +60,17 @@
       queue */
   void fill_screen(const Color& color);
 
-  void draw_line(const Vector2f& pos1, const Vector2f& pos2, const Color& color, float z_pos);
+  void draw_line(const Vector2f& pos1, const Vector2f& pos2, const Color& color, float z_pos = 0);
 
-  void draw_rect(const Rectf& rect, const Color& color, float z_pos);
-  void fill_rect(const Rectf& rect, const Color& color, float z_pos);
+  void draw_rect(const Rectf& rect, const Color& color, float z_pos = 0);
+  void fill_rect(const Rectf& rect, const Color& color, float z_pos = 0);
 
   /*{ */
   void draw(DrawingRequest* request);
   void draw(const Sprite&   sprite,  const Vector2f& pos, float z = 0);
   void draw(const std::string& text,    float x, float y, float z = 0);
   void draw(const Surface surface, float x, float y, float z = 0, float alpha = 0);
-  void draw(const Surface surface, const SurfaceDrawingParameters& params, float z_pos);
+  void draw(const Surface surface, const SurfaceDrawingParameters& params, float z_pos = 0);
   /*} */
   
   /** Translate the drawing context */

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/display/scene_context.cpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -300,6 +300,8 @@
       Display::pop_framebuffer();
     }
 
+  impl->control.render(*this);
+
   if (1) 
     {
       // Render the screen framebuffer to the actual screen 
@@ -337,6 +339,7 @@
   impl->color.clear();
   impl->light.clear();
   impl->highlight.clear();
+  impl->control.clear();
 }
 
 void
@@ -410,10 +413,14 @@
       impl->highlight.render(*this);
     }  
 
+  impl->control.render(*this);
+
   // Clear all DrawingContexts
   impl->color.clear();
   impl->light.clear();
   impl->highlight.clear();
+  impl->control.clear();
+  
 }
 
 void

Added: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -0,0 +1,69 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/scene_context.hpp"
+#include "windstille_widget.hpp"
+#include "select_tool.hpp"
+
+SelectTool::SelectTool()
+  : rect_valid(false)
+{
+}
+
+bool
+SelectTool::mouse_down (GdkEventButton* event, WindstilleWidget* wst)
+{
+  click_pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+  rect_valid = false;
+  return true;
+}
+
+bool
+SelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget* wst)
+{
+  Vector2f pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+
+  rect.left   = click_pos.x;
+  rect.top    = click_pos.y;
+  rect.right  = pos.x;
+  rect.bottom = pos.y;
+  
+  rect_valid = true;
+  return true;
+}
+
+bool
+SelectTool::mouse_up(GdkEventButton* event, WindstilleWidget* wst)
+{
+  // Select objects
+  rect_valid = false;
+  return true;
+}
+
+void
+SelectTool::draw(SceneContext& sc)
+{
+  std::cout << "draw: " << rect_valid << std::endl;
+  if (rect_valid)
+    {
+      sc.control().fill_rect(rect, Color(0.5f, 0.5f, 1.0f, 0.25));
+      sc.control().draw_rect(rect, Color(0.5f, 0.5f, 1.0f)); 
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/select_tool.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -0,0 +1,47 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_SELECT_TOOL_HPP
+#define HEADER_WINDSTILLE_EDITOR_SELECT_TOOL_HPP
+
+#include "math/rect.hpp"
+#include "tool.hpp"
+
+class SelectTool : public Tool
+{
+private:
+  Vector2f click_pos;
+  Rectf    rect;
+  bool     rect_valid;
+
+public:
+  SelectTool();
+  
+  bool mouse_down (GdkEventButton* event, WindstilleWidget* wst);
+  bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst);
+  bool mouse_up(GdkEventButton* event, WindstilleWidget* wst);
+  void draw(SceneContext& sc);
+
+private:
+  SelectTool(const SelectTool&);
+  SelectTool& operator=(const SelectTool&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/select_tool.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/tool.hpp
===================================================================
--- trunk/windstille/src/editor/tool.hpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/tool.hpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -29,9 +29,10 @@
   Tool() {}
   virtual ~Tool() {}
 
-  virtual bool mouse_down (GdkEventButton* event, WindstilleWidget* widget) = 0;
-  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget* widget) = 0;
-  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget* widget) = 0;
+  virtual bool mouse_down (GdkEventButton* event, WindstilleWidget* wst) = 0;
+  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst) = 0;
+  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget* wst) = 0;
+  virtual void draw(SceneContext& sc) {}
 
 private:
   Tool(const Tool&);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -31,12 +31,17 @@
 #include "display/surface.hpp"
 #include "windstille_widget.hpp"
 #include "scroll_tool.hpp"
+#include "zoom_tool.hpp"
+#include "select_tool.hpp"
 
 bool lib_init = false;
 
 WindstilleWidget::WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>&  glconfig,
                                    const Glib::RefPtr<const Gdk::GL::Context>& share_list)
- : scroll_tool(new ScrollTool())
+  : current_tool(0),
+    scroll_tool(new ScrollTool()),
+    select_tool(new SelectTool()),
+    zoom_tool(new ZoomTool())
 {
   set_gl_capability(glconfig, share_list);
 
@@ -167,27 +172,15 @@
         {
           state.push(*sc);
 
-          { // not visible since SceneContext rendering clears the screen
-            OpenGLState state;
-            state.color(Color(1.0f, 1.0f, 1.0f));
-            state.activate();
-
-            glBegin(GL_QUADS);
-            for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
-              {
-                glVertex2f(i->x - 50, i->y - 50);
-                glVertex2f(i->x + 50, i->y - 50);
-                glVertex2f(i->x + 50, i->y + 50);
-                glVertex2f(i->x - 50, i->y + 50);
-              }
-            glEnd();
-          }
-
           Surface surface("images/hedgehog.png");
           for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
             {
               sc->color().draw(surface, i->x+50, i->y+50);
             }
+
+          if (current_tool)
+            current_tool->draw(*sc);
+
           sc->render();
 
           state.pop(*sc);
@@ -225,8 +218,13 @@
   grab_focus();
   std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //ewer->on_mouse_button_down(Vector2i(event->x, event->y), event->button);
-  if (event->button == 2)
+  if (event->button == 1)
     {
+      current_tool = select_tool.get();
+      select_tool->mouse_down(event, this);
+    }
+  else if (event->button == 2)
+    {
       current_tool = scroll_tool.get();
       scroll_tool->mouse_down(event, this);
     }
@@ -255,8 +253,13 @@
 
   std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //viewer->on_mouse_button_up(Vector2i(event->x, event->y), event->button);
-  if (event->button == 2)
+  if (event->button == 1)
     {
+      select_tool->mouse_down(event, this);
+      queue_draw();
+    }
+  else if (event->button == 2)
+    {
       scroll_tool->mouse_up(event, this);
       queue_draw();
     }

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -35,6 +35,8 @@
 
 class Tool;
 class ScrollTool;
+class SelectTool;
+class ZoomTool;
 
 /** OpenGL drawing area into which the Windstille game will be
     embedded */
@@ -48,6 +50,9 @@
   std::auto_ptr<SceneContext> sc;
   Tool* current_tool;
   std::auto_ptr<ScrollTool> scroll_tool;
+  std::auto_ptr<SelectTool> select_tool;
+  std::auto_ptr<ZoomTool>   zoom_tool;
+
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
                    const Glib::RefPtr<const Gdk::GL::Context>& share_list);

Added: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -0,0 +1,69 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/scene_context.hpp"
+#include "windstille_widget.hpp"
+#include "zoom_tool.hpp"
+
+ZoomTool::ZoomTool()
+  : rect_valid(false)
+{
+}
+
+bool
+ZoomTool::mouse_down (GdkEventButton* event, WindstilleWidget* wst)
+{
+  click_pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+  rect_valid = false;
+  return true;
+}
+
+bool
+ZoomTool::mouse_move(GdkEventMotion* event, WindstilleWidget* wst)
+{
+  Vector2f pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+
+  rect.left   = click_pos.x;
+  rect.top    = click_pos.y;
+  rect.right  = pos.x;
+  rect.bottom = pos.y;
+  
+  rect_valid = true;
+  return true;
+}
+
+bool
+ZoomTool::mouse_up(GdkEventButton* event, WindstilleWidget* wst)
+{
+  // Zoom objects
+  rect_valid = false;
+  return true;
+}
+
+void
+ZoomTool::draw(SceneContext& sc)
+{
+  std::cout << "draw: " << rect_valid << std::endl;
+  if (rect_valid)
+    {
+      sc.control().fill_rect(rect, Color(1.0f, 1.0f, 0.0f, 0.25));
+      sc.control().draw_rect(rect, Color(1.0f, 1.0f, 0.0f)); 
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/zoom_tool.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/zoom_tool.hpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.hpp	2009-03-22 11:41:13 UTC (rev 2725)
+++ trunk/windstille/src/editor/zoom_tool.hpp	2009-03-22 12:18:12 UTC (rev 2726)
@@ -0,0 +1,47 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_ZOOM_TOOL_HPP
+#define HEADER_WINDSTILLE_EDITOR_ZOOM_TOOL_HPP
+
+#include "math/rect.hpp"
+#include "tool.hpp"
+
+class ZoomTool : public Tool
+{
+private:
+  Vector2f click_pos;
+  Rectf    rect;
+  bool     rect_valid;
+
+public:
+  ZoomTool();
+  
+  bool mouse_down (GdkEventButton* event, WindstilleWidget* wst);
+  bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst);
+  bool mouse_up(GdkEventButton* event, WindstilleWidget* wst);
+  void draw(SceneContext& sc);
+
+private:
+  ZoomTool(const ZoomTool&);
+  ZoomTool& operator=(const ZoomTool&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/zoom_tool.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Sun Mar 22 13:35:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 13:35:13 +0100
Subject: [Windstille-commit] r2727 - trunk/windstille/src/math
Message-ID: <200903221235.n2MCZDuu027793@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 13:35:11 +0100 (Sun, 22 Mar 2009)
New Revision: 2727

Modified:
   trunk/windstille/src/math/rect.cpp
   trunk/windstille/src/math/rect.hpp
Log:
Added operator<< support

Modified: trunk/windstille/src/math/rect.cpp
===================================================================
--- trunk/windstille/src/math/rect.cpp	2009-03-22 12:18:12 UTC (rev 2726)
+++ trunk/windstille/src/math/rect.cpp	2009-03-22 12:35:11 UTC (rev 2727)
@@ -27,7 +27,7 @@
 **    (if your name is missing here, please add it)
 */
 
-
+#include <ostream>
 #include <cmath>
 
 #include "rect.hpp"
@@ -60,3 +60,13 @@
 		angle);
 }
 
+std::ostream& operator<<(std::ostream& s, const Rect& rect)
+{
+  return s << "Rect(" << rect.left << ", " << rect.top << ", " << rect.right << ", " << rect.bottom << ")";
+}
+
+std::ostream& operator<<(std::ostream& s, const Rectf& rect)
+{
+  return s << "Rectf(" << rect.left << ", " << rect.top << ", " << rect.right << ", " << rect.bottom << ")";
+}
+

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-03-22 12:18:12 UTC (rev 2726)
+++ trunk/windstille/src/math/rect.hpp	2009-03-22 12:35:11 UTC (rev 2727)
@@ -30,6 +30,8 @@
 #ifndef __MATH_RECT_HPP__
 #define __MATH_RECT_HPP__
 
+#include <iosfwd>
+
 #include "math/origin.hpp"
 #include "math/vector2f.hpp"
 #include "math/size.hpp"
@@ -377,5 +379,8 @@
 	  bottom(static_cast<int>(rect.bottom))
 {}
 
+std::ostream& operator<<(std::ostream& s, const Rect& rect);
+std::ostream& operator<<(std::ostream& s, const Rectf& rect);
+
 #endif
 



From grumbel at mail.berlios.de  Sun Mar 22 15:09:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 15:09:43 +0100
Subject: [Windstille-commit] r2728 - trunk/windstille/src/editor
Message-ID: <200903221409.n2ME9hUZ010849@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 15:09:42 +0100 (Sun, 22 Mar 2009)
New Revision: 2728

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/scroll_tool.cpp
   trunk/windstille/src/editor/scroll_tool.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/tool.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/editor/zoom_tool.cpp
   trunk/windstille/src/editor/zoom_tool.hpp
Log:
Implemented Tool switching

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -19,6 +19,7 @@
 #include <iostream>
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
+#include <gtkmm/radioaction.h>
 #include <gtkmm/icontheme.h>
 #include <gtkmm/uimanager.h>
 #include <gtkmm/toolbar.h>
@@ -27,11 +28,20 @@
 #include "windstille_widget.hpp"
 #include "about_window.hpp"
 #include "editor_window.hpp"
+#include "zoom_tool.hpp"
+#include "select_tool.hpp"
 
+EditorWindow* EditorWindow::current_ = 0;
+
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
   : minimap_widget(glconfig_),
-    glconfig(glconfig_)
+    glconfig(glconfig_),
+    select_tool(new SelectTool()),
+    zoom_tool(new ZoomTool()),
+    current_tool(select_tool.get())
 {
+  current_ = this;
+
   set_title("Windstille Editor");
   set_default_size(1024, 768);
 
@@ -56,6 +66,11 @@
     "      <menuitem action='ZoomOut'/>"
     "      <menuitem action='Zoom100'/>"
     "    </menu>"
+    "    <menu action='MenuTools'>"
+    "      <menuitem action='SelectTool'/>"
+    "      <menuitem action='NodeTool'/>"
+    "      <menuitem action='ZoomTool'/>"
+    "    </menu>"
     "    <menu action='MenuHelp'>"
     "      <menuitem action='About'/>"
     "    </menu>"
@@ -123,10 +138,16 @@
 
   // Tools
   action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));
-  action_group->add(Gtk::Action::create_with_icon_name("SelectTool", "select_tool", "Select Tool", "Select Tool"));
-  action_group->add(Gtk::Action::create_with_icon_name("NodeTool",   "node_tool",   "Node Tool", "Node Tool"));
-  action_group->add(Gtk::Action::create_with_icon_name("ZoomTool",   "zoom_tool",   "Zoom Tool", "Zoom Tool"));
+  Gtk::RadioButtonGroup tool_group;
+  
+  select_tool_action = Gtk::RadioAction::create_with_icon_name(tool_group, "SelectTool", "select_tool", "Select Tool", "Select Tool");
+  node_tool_action = Gtk::RadioAction::create_with_icon_name(tool_group, "NodeTool",   "node_tool",   "Node Tool", "Node Tool");
+  zoom_tool_action = Gtk::RadioAction::create_with_icon_name(tool_group, "ZoomTool",   "zoom_tool",   "Zoom Tool", "Zoom Tool");
 
+  action_group->add(select_tool_action, sigc::bind(sigc::mem_fun(*this, &EditorWindow::on_tool_select), select_tool_action, select_tool.get()));
+  action_group->add(node_tool_action,   sigc::bind(sigc::mem_fun(*this, &EditorWindow::on_tool_select), node_tool_action, select_tool.get()));
+  action_group->add(zoom_tool_action,   sigc::bind(sigc::mem_fun(*this, &EditorWindow::on_tool_select), zoom_tool_action, zoom_tool.get()));
+
   // signal_size_allocate().connect (sigc::mem_fun (*this, &EditorWindow::on_window_size_allocate), false);
   // signal_realize().connect (sigc::mem_fun (*this, &EditorWindow::on_window_realize));
 
@@ -172,6 +193,7 @@
 
 EditorWindow::~EditorWindow()
 {
+  current_ = 0;
 }
 
 void
@@ -305,6 +327,22 @@
     wst->on_zoom_100();
 }
 
+void
+EditorWindow::on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool* tool)
+{
+  std::cout << "on_tool_select()" << action->get_active() << std::endl;
+  if (action->get_active())
+    {
+      current_tool = tool;
+    }
+}
+
+Tool*
+EditorWindow::get_current_tool() const
+{
+  return current_tool;
+}
+
 WindstilleWidget*
 EditorWindow::get_windstille_widget()
 {

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_EDITOR_WINDOW_HPP
 #define HEADER_WINDSTILLE_EDITOR_EDITOR_WINDOW_HPP
 
+#include <memory>
 #include <gtkmm/box.h>
 #include <gtkmm/statusbar.h>
 #include <gtkmm/textview.h>
@@ -30,11 +31,19 @@
 #include "object_selector.hpp"
 #include "object_tree.hpp"
 
+class Tool;
 class WindstilleWidget;
+class SelectTool;
+class ZoomTool;
 
 class EditorWindow : public Gtk::Window
 {
 private:
+  static EditorWindow* current_;
+public:
+  static EditorWindow* current() { return current_; }
+
+private:
   Gtk::VBox   vbox;
   Gtk::VBox   sidebar_vbox;
   Gtk::HBox   hbox;
@@ -51,7 +60,15 @@
   Glib::RefPtr<Gtk::ActionGroup> action_group;
   Glib::RefPtr<Gdk::GL::Context> share_list;
   Glib::RefPtr<const Gdk::GL::Config>  glconfig;
+  
+  Glib::RefPtr<Gtk::RadioAction> select_tool_action;
+  Glib::RefPtr<Gtk::RadioAction> node_tool_action;
+  Glib::RefPtr<Gtk::RadioAction> zoom_tool_action;
 
+  std::auto_ptr<SelectTool> select_tool;
+  std::auto_ptr<ZoomTool>   zoom_tool;
+  Tool* current_tool;
+  
 public:
   EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig);
   virtual ~EditorWindow();
@@ -71,6 +88,9 @@
   void on_zoom_out();
   void on_zoom_100();
 
+  void on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool*);
+
+  Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();
   
 private:

Modified: trunk/windstille/src/editor/scroll_tool.cpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.cpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/scroll_tool.cpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -25,30 +25,30 @@
 }
 
 bool
-ScrollTool::mouse_down(GdkEventButton* event, WindstilleWidget* wst)
+ScrollTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
-  orig_state = wst->get_state().clone();
+  orig_state = wst.get_state().clone();
   orig_click = orig_state.screen_to_world(Vector2f(event->x, event->y));
   
   return true;
 }
 
 bool
-ScrollTool::mouse_move(GdkEventMotion* event, WindstilleWidget* wst)
+ScrollTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
   Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(event->x, event->y));
 
-  wst->get_state().set_pos(orig_state.get_pos() + offset);
+  wst.get_state().set_pos(orig_state.get_pos() + offset);
 
   return true;
 }
 
 bool
-ScrollTool::mouse_up(GdkEventButton* event, WindstilleWidget* wst)
+ScrollTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
   Vector2f offset = orig_click - orig_state.screen_to_world(Vector2f(event->x, event->y));
 
-  wst->get_state().set_pos(orig_state.get_pos() + offset);
+  wst.get_state().set_pos(orig_state.get_pos() + offset);
 
   return true;
 }

Modified: trunk/windstille/src/editor/scroll_tool.hpp
===================================================================
--- trunk/windstille/src/editor/scroll_tool.hpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/scroll_tool.hpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -32,9 +32,9 @@
 public:
   ScrollTool();
 
-  virtual bool mouse_down(GdkEventButton* event, WindstilleWidget* wst);
-  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst);
-  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget* wst);
+  virtual bool mouse_down(GdkEventButton* event, WindstilleWidget& wst);
+  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget& wst);
+  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget& wst);
 
 private:
   ScrollTool(const ScrollTool&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -26,17 +26,17 @@
 }
 
 bool
-SelectTool::mouse_down (GdkEventButton* event, WindstilleWidget* wst)
+SelectTool::mouse_down (GdkEventButton* event, WindstilleWidget& wst)
 {
-  click_pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+  click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
   rect_valid = false;
   return true;
 }
 
 bool
-SelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget* wst)
+SelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
-  Vector2f pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
 
   rect.left   = click_pos.x;
   rect.top    = click_pos.y;
@@ -48,7 +48,7 @@
 }
 
 bool
-SelectTool::mouse_up(GdkEventButton* event, WindstilleWidget* wst)
+SelectTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
   // Select objects
   rect_valid = false;

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -32,9 +32,9 @@
 public:
   SelectTool();
   
-  bool mouse_down (GdkEventButton* event, WindstilleWidget* wst);
-  bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst);
-  bool mouse_up(GdkEventButton* event, WindstilleWidget* wst);
+  bool mouse_down (GdkEventButton* event, WindstilleWidget& wst);
+  bool mouse_move(GdkEventMotion* event, WindstilleWidget& wst);
+  bool mouse_up(GdkEventButton* event, WindstilleWidget& wst);
   void draw(SceneContext& sc);
 
 private:

Modified: trunk/windstille/src/editor/tool.hpp
===================================================================
--- trunk/windstille/src/editor/tool.hpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/tool.hpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -29,9 +29,9 @@
   Tool() {}
   virtual ~Tool() {}
 
-  virtual bool mouse_down (GdkEventButton* event, WindstilleWidget* wst) = 0;
-  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst) = 0;
-  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget* wst) = 0;
+  virtual bool mouse_down (GdkEventButton* event, WindstilleWidget& wst) = 0;
+  virtual bool mouse_move(GdkEventMotion* event, WindstilleWidget& wst) = 0;
+  virtual bool mouse_up(GdkEventButton* event, WindstilleWidget& wst) = 0;
   virtual void draw(SceneContext& sc) {}
 
 private:

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -19,29 +19,23 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 #include <GL/glu.h>
-
 #include <gtkmm.h>
 
-
 #include "sprite2d/sprite.hpp"
 #include "display/texture_manager.hpp"
 #include "display/surface_manager.hpp"
 #include "display/opengl_state.hpp"
-
 #include "display/surface.hpp"
 #include "windstille_widget.hpp"
+#include "editor_window.hpp"
 #include "scroll_tool.hpp"
-#include "zoom_tool.hpp"
-#include "select_tool.hpp"
 
 bool lib_init = false;
 
 WindstilleWidget::WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>&  glconfig,
                                    const Glib::RefPtr<const Gdk::GL::Context>& share_list)
-  : current_tool(0),
-    scroll_tool(new ScrollTool()),
-    select_tool(new SelectTool()),
-    zoom_tool(new ZoomTool())
+  : active_tool(0),
+    scroll_tool(new ScrollTool())
 {
   set_gl_capability(glconfig, share_list);
 
@@ -178,8 +172,8 @@
               sc->color().draw(surface, i->x+50, i->y+50);
             }
 
-          if (current_tool)
-            current_tool->draw(*sc);
+          if (active_tool)
+            active_tool->draw(*sc);
 
           sc->render();
 
@@ -220,13 +214,13 @@
   //ewer->on_mouse_button_down(Vector2i(event->x, event->y), event->button);
   if (event->button == 1)
     {
-      current_tool = select_tool.get();
-      select_tool->mouse_down(event, this);
+      active_tool = EditorWindow::current()->get_current_tool();
+      active_tool->mouse_down(event, *this);
     }
   else if (event->button == 2)
     {
-      current_tool = scroll_tool.get();
-      scroll_tool->mouse_down(event, this);
+      active_tool = scroll_tool.get();
+      active_tool->mouse_down(event, *this);
     }
 
   return false;
@@ -235,11 +229,11 @@
 bool
 WindstilleWidget::mouse_move(GdkEventMotion* event)
 {
-  std::cout << "Motion: " << event->x << ", " << event->y << std::endl;
+  //std::cout << "Motion: " << event->x << ", " << event->y << std::endl;
   
-  if (current_tool)
+  if (active_tool)
     {
-      current_tool->mouse_move(event, this);
+      active_tool->mouse_move(event, *this);
       queue_draw();
     }
   
@@ -249,18 +243,18 @@
 bool
 WindstilleWidget::mouse_up(GdkEventButton* event)
 {
-  current_tool = 0;
+  active_tool = 0;
 
   std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //viewer->on_mouse_button_up(Vector2i(event->x, event->y), event->button);
   if (event->button == 1)
     {
-      select_tool->mouse_down(event, this);
+      EditorWindow::current()->get_current_tool()->mouse_up(event, *this);
       queue_draw();
     }
   else if (event->button == 2)
     {
-      scroll_tool->mouse_up(event, this);
+      scroll_tool->mouse_up(event, *this);
       queue_draw();
     }
   return false;

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -35,8 +35,6 @@
 
 class Tool;
 class ScrollTool;
-class SelectTool;
-class ZoomTool;
 
 /** OpenGL drawing area into which the Windstille game will be
     embedded */
@@ -48,10 +46,8 @@
   GraphicContextState   state;
   std::vector<Vector2f> objects;
   std::auto_ptr<SceneContext> sc;
-  Tool* current_tool;
+  Tool* active_tool;
   std::auto_ptr<ScrollTool> scroll_tool;
-  std::auto_ptr<SelectTool> select_tool;
-  std::auto_ptr<ZoomTool>   zoom_tool;
 
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -26,17 +26,17 @@
 }
 
 bool
-ZoomTool::mouse_down (GdkEventButton* event, WindstilleWidget* wst)
+ZoomTool::mouse_down (GdkEventButton* event, WindstilleWidget& wst)
 {
-  click_pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+  click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
   rect_valid = false;
   return true;
 }
 
 bool
-ZoomTool::mouse_move(GdkEventMotion* event, WindstilleWidget* wst)
+ZoomTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
-  Vector2f pos = wst->get_state().screen_to_world(Vector2f(event->x, event->y));
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
 
   rect.left   = click_pos.x;
   rect.top    = click_pos.y;
@@ -48,9 +48,12 @@
 }
 
 bool
-ZoomTool::mouse_up(GdkEventButton* event, WindstilleWidget* wst)
+ZoomTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
   // Zoom objects
+  std::cout << "Zoom To: " << rect << std::endl;
+  rect.normalize();
+  wst.get_state().zoom_to(rect);
   rect_valid = false;
   return true;
 }

Modified: trunk/windstille/src/editor/zoom_tool.hpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.hpp	2009-03-22 12:35:11 UTC (rev 2727)
+++ trunk/windstille/src/editor/zoom_tool.hpp	2009-03-22 14:09:42 UTC (rev 2728)
@@ -32,9 +32,9 @@
 public:
   ZoomTool();
   
-  bool mouse_down (GdkEventButton* event, WindstilleWidget* wst);
-  bool mouse_move(GdkEventMotion* event, WindstilleWidget* wst);
-  bool mouse_up(GdkEventButton* event, WindstilleWidget* wst);
+  bool mouse_down (GdkEventButton* event, WindstilleWidget& wst);
+  bool mouse_move(GdkEventMotion* event, WindstilleWidget& wst);
+  bool mouse_up(GdkEventButton* event, WindstilleWidget& wst);
   void draw(SceneContext& sc);
 
 private:



From grumbel at mail.berlios.de  Sun Mar 22 15:27:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 15:27:24 +0100
Subject: [Windstille-commit] r2729 - trunk/windstille/src/display
Message-ID: <200903221427.n2MERO5F012909@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 15:27:17 +0100 (Sun, 22 Mar 2009)
New Revision: 2729

Modified:
   trunk/windstille/src/display/display.cpp
Log:
Use LINE_LOOP instead of LINE_STRIP

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-22 14:09:42 UTC (rev 2728)
+++ trunk/windstille/src/display/display.cpp	2009-03-22 14:27:17 UTC (rev 2729)
@@ -100,12 +100,11 @@
   state.color(color);
   state.activate();
 
-  glBegin(GL_LINE_STRIP);
+  glBegin(GL_LINE_LOOP);
   glVertex2f(rect.left,  rect.top);
   glVertex2f(rect.right, rect.top);
   glVertex2f(rect.right, rect.bottom);
   glVertex2f(rect.left,  rect.bottom);
-  glVertex2f(rect.left,  rect.top);
   glEnd();
 }
 



From grumbel at mail.berlios.de  Sun Mar 22 15:45:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 15:45:35 +0100
Subject: [Windstille-commit] r2730 - in trunk/windstille/src: . editor
Message-ID: <200903221445.n2MEjZoG015171@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 15:45:35 +0100 (Sun, 22 Mar 2009)
New Revision: 2730

Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Moved level data into SectorModel, drag&drop now works with zoom and scroll

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-22 14:27:17 UTC (rev 2729)
+++ trunk/windstille/src/SConscript	2009-03-22 14:45:35 UTC (rev 2730)
@@ -240,6 +240,7 @@
         'editor/windstille_widget.cpp',
         'editor/minimap_widget.cpp',
         'editor/scroll_tool.cpp',
+        'editor/sector_model.cpp',
         'editor/zoom_tool.cpp',
         'editor/select_tool.cpp',
         'editor/editor_window.cpp'

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-22 14:27:17 UTC (rev 2729)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-22 14:45:35 UTC (rev 2730)
@@ -16,6 +16,9 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <gdkmm/pixbuf.h>
+#include "display/scene_context.hpp"
+#include "display/surface.hpp"
 #include "sector_model.hpp"
 
 class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
@@ -34,7 +37,26 @@
 
 SectorModel::SectorModel()
 {
-  objects = Gtk::TreeStore::create(columns);
+  ObjectTreeColumns columns;
+  objects_tree = Gtk::TreeStore::create(columns);
 }
+
+void
+SectorModel::add(const Vector2f& obj)
+{
+  objects.push_back(obj);
+}
+
+void
+SectorModel::draw(SceneContext& sc)
+{
+  Surface surface("images/hedgehog.png");
+
+  for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      sc.color().draw(surface, i->x, i->y);
+      sc.control().fill_rect(Rectf(*i - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-22 14:27:17 UTC (rev 2729)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-22 14:45:35 UTC (rev 2730)
@@ -19,20 +19,29 @@
 #ifndef HEADER_SECTOR_MODEL_HPP
 #define HEADER_SECTOR_MODEL_HPP
 
-/** */
+#include <gtkmm/treestore.h>
+#include <vector>
+#include "math/vector2f.hpp"
+
+class SceneContext;
+
 class SectorModel
 {
 private:
-  Glib::RefPtr<Gtk::TreeStore> objects;
+  Glib::RefPtr<Gtk::TreeStore> objects_tree;
+  std::vector<Vector2f> objects;
 
 public:
   SectorModel();
 
+  void add(const Vector2f& obj);
+  void draw(SceneContext& sc);
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);
 };
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 14:27:17 UTC (rev 2729)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 14:45:35 UTC (rev 2730)
@@ -26,15 +26,18 @@
 #include "display/surface_manager.hpp"
 #include "display/opengl_state.hpp"
 #include "display/surface.hpp"
-#include "windstille_widget.hpp"
 #include "editor_window.hpp"
 #include "scroll_tool.hpp"
+#include "sector_model.hpp"
 
+#include "windstille_widget.hpp"
+
 bool lib_init = false;
 
 WindstilleWidget::WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>&  glconfig,
                                    const Glib::RefPtr<const Gdk::GL::Context>& share_list)
-  : active_tool(0),
+  : sector_model(new SectorModel()),
+    active_tool(0),
     scroll_tool(new ScrollTool())
 {
   set_gl_capability(glconfig, share_list);
@@ -161,25 +164,8 @@
     }
   else
     {
-      //std::cout << "Draw" << std::endl;
-      if (sc.get())
-        {
-          state.push(*sc);
+      draw();
 
-          Surface surface("images/hedgehog.png");
-          for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
-            {
-              sc->color().draw(surface, i->x+50, i->y+50);
-            }
-
-          if (active_tool)
-            active_tool->draw(*sc);
-
-          sc->render();
-
-          state.pop(*sc);
-        }
-
       // Swap buffers.
       if (glwindow->is_double_buffered())
         glwindow->swap_buffers();
@@ -192,6 +178,25 @@
     }
 }
 
+void
+WindstilleWidget::draw()
+{
+  //std::cout << "Draw" << std::endl;
+  if (sc.get())
+    {
+      state.push(*sc);
+
+      sector_model->draw(*sc);
+
+      if (active_tool)
+        active_tool->draw(*sc);
+
+      sc->render();
+
+      state.pop(*sc);
+    }
+}
+
 bool
 WindstilleWidget::scroll(GdkEventScroll* event)
 {
@@ -313,7 +318,7 @@
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
 
-  objects.push_back(Vector2f(x, y));
+  sector_model->add(state.screen_to_world(Vector2f(x, y)));
 }
 
 void
@@ -343,4 +348,10 @@
   queue_draw();
 }
 
+SectorModel*
+WindstilleWidget::get_sector_model()
+{
+  return sector_model.get();
+}
+
 /* EOF */

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 14:27:17 UTC (rev 2729)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 14:45:35 UTC (rev 2730)
@@ -35,6 +35,7 @@
 
 class Tool;
 class ScrollTool;
+class SectorModel;
 
 /** OpenGL drawing area into which the Windstille game will be
     embedded */
@@ -43,8 +44,9 @@
     public Gtk::GL::Widget<WindstilleWidget>
 {
 private:
+  std::auto_ptr<SectorModel> sector_model;
+
   GraphicContextState   state;
-  std::vector<Vector2f> objects;
   std::auto_ptr<SceneContext> sc;
   Tool* active_tool;
   std::auto_ptr<ScrollTool> scroll_tool;
@@ -78,7 +80,11 @@
   void on_zoom_in();
   void on_zoom_out();
   void on_zoom_100();
+  
+  void draw();
 
+  SectorModel* get_sector_model();
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Sun Mar 22 17:19:30 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 17:19:30 +0100
Subject: [Windstille-commit] r2731 - in trunk/windstille: . src/editor
Message-ID: <200903221619.n2MGJUYs026854@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 17:19:29 +0100 (Sun, 22 Mar 2009)
New Revision: 2731

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Update TreeView when notebook page changes

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/TODO	2009-03-22 16:19:29 UTC (rev 2731)
@@ -481,16 +481,10 @@
 
 * add grid
 
-* share GL context between different sectors, need dummy Context, abuse minimap for that
+* add a way to draw objects to DrawingContext that only does
+  translation, but not rotation and scaling, for use in UIElements,
+  overlay text, etc.
 
-* use SceneContext in WindstilleWidget and setup Physfs,
-  SurfaceManager, TextureManager and everything else that is needed
-
-* add a new layer to SceneContext that is used for UI elements, such
-  as control handles for scale or rotate, could maybe also used for
-  use-verbs and stuff. The new layer shall only translate objects, but
-  not scale or rotate them
-
 * implement dialog to change level properties:
 
   - name

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-22 16:19:29 UTC (rev 2731)
@@ -157,6 +157,7 @@
 
   add_accel_group(ui_manager->get_accel_group());
 
+  notebook.signal_switch_page().connect(sigc::mem_fun(*this, &EditorWindow::on_switch_page));
 
   // Packing
 
@@ -222,6 +223,7 @@
   windstille->show();
   notebook.set_current_page(new_page); 
 
+  object_tree.set_model(windstille->get_sector_model());
 }
 
 void
@@ -287,6 +289,9 @@
   if (page != -1)
     {
       notebook.remove_page(page);
+
+      if (!get_windstille_widget())
+        object_tree.set_model(0);
     }
 }
 
@@ -356,5 +361,15 @@
       return static_cast<WindstilleWidget*>(notebook.get_nth_page(page));
     }
 }
+
+void
+EditorWindow::on_switch_page(GtkNotebookPage* page, guint page_num)
+{
+  std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;
+  if (get_windstille_widget())
+    object_tree.set_model(get_windstille_widget()->get_sector_model());
+  else
+    object_tree.set_model(0);
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-22 16:19:29 UTC (rev 2731)
@@ -88,6 +88,7 @@
   void on_zoom_out();
   void on_zoom_100();
 
+  void on_switch_page(GtkNotebookPage* page, guint page_num);
   void on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool*);
 
   Tool* get_current_tool() const;

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-22 16:19:29 UTC (rev 2731)
@@ -22,55 +22,21 @@
 #include <gtkmm/treemodel.h>
 #include <gtkmm/treestore.h>
 #include <gtkmm/treemodelcolumn.h>
+
+#include "sector_model.hpp"
 #include "object_tree.hpp"
 
-class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
-{
-public:
-  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type;
-  Gtk::TreeModelColumn<Glib::ustring> name;
-  Gtk::TreeModelColumn<bool>          visible;
-
-  ObjectTreeColumns() {
-    add(type); 
-    add(name); 
-    add(visible); 
-  }
-};
-
 ObjectTree::ObjectTree()
   : label("Scene Tree", Gtk::ALIGN_LEFT)
 {
-  ObjectTreeColumns columns;
-  Glib::RefPtr<Gtk::TreeStore> list_store = Gtk::TreeStore::create(columns);
-
-  Gtk::TreeStore::iterator root = list_store->append();
-  (*root)[columns.type]    = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*root)[columns.name]    = Glib::ustring("Scene");
-  (*root)[columns.visible] = false;
-
-  for(int i = 0; i < 10; ++i)
-    {
-      Gtk::TreeStore::iterator it  = list_store->append(root->children());
-      (*it)[columns.type]    = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-      (*it)[columns.name]    = Glib::ustring("Hello World");
-      (*it)[columns.visible] = false;
-
-      Gtk::TreeModel::iterator it2  = list_store->append(it->children());
-      (*it2)[columns.type]    = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-      (*it2)[columns.name]    = Glib::ustring("Hello World");
-      (*it2)[columns.visible] = false;
-    }
-
   //treeview.set_headers_clickable();
   treeview.set_headers_visible(false);
   treeview.set_enable_tree_lines();
-  treeview.set_model(list_store);
   treeview.set_reorderable();
 
-  treeview.append_column("Type", columns.type);
-  treeview.append_column("Name", columns.name);
-  treeview.append_column_editable("Visible", columns.visible);
+  treeview.append_column("Type", ObjectTreeColumns::instance().type_icon);
+  treeview.append_column("Name", ObjectTreeColumns::instance().name);
+  treeview.append_column_editable("Visible", ObjectTreeColumns::instance().visible);
 
   treeview.expand_all();
 
@@ -99,13 +65,6 @@
   pack_start(label, Gtk::PACK_SHRINK);
   pack_start(toolbar, Gtk::PACK_SHRINK);
   add(scrolled);
-
-  list_store->signal_row_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_row_changed));
-  list_store->signal_row_deleted().connect(sigc::mem_fun(*this, &ObjectTree::on_row_deleted));
-  list_store->signal_row_has_child_toggled().connect(sigc::mem_fun(*this, &ObjectTree::on_row_has_child_toggled));
-  list_store->signal_row_inserted().connect(sigc::mem_fun(*this, &ObjectTree::on_row_inserted));
-  list_store->signal_rows_reordered().connect(sigc::mem_fun(*this, &ObjectTree::on_rows_reordered));
-
   //show_all();
 }
 
@@ -114,33 +73,17 @@
 }
 
 void
-ObjectTree::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+ObjectTree::set_model(SectorModel* model)
 {
-  std::cout << "ObjectTree:on_row_changed" << std::endl;
+  if (model)
+    {
+      treeview.set_model(model->get_objects_tree());
+      treeview.expand_all();
+    }
+  else
+    {
+      treeview.set_model(Glib::RefPtr<Gtk::TreeStore>());
+    }
 }
-
-void
-ObjectTree::on_row_deleted(const Gtk::TreeModel::Path& path)
-{
-  std::cout << "ObjectTree:on_row_deleted" << std::endl;
-}
-
-void
-ObjectTree::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
-{
-  std::cout << "ObjectTree:on_row_has_child_toggled" << std::endl;
-}
-
-void
-ObjectTree::on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
-{
-  std::cout << "ObjectTree:on_row_inserted" << std::endl;
-}
-
-void
-ObjectTree::on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order)
-{
-  std::cout << "ObjectTree:on_row_reordered" << std::endl;
-}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-22 16:19:29 UTC (rev 2731)
@@ -27,6 +27,8 @@
 #include <gtkmm/treemodel.h>
 #include <gtkmm/actiongroup.h>
 
+class SectorModel;
+
 class ObjectTree : public Gtk::VBox
 {
 private:
@@ -40,13 +42,9 @@
 public:
   ObjectTree();
   virtual ~ObjectTree();
-  
-  void on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
-  void on_row_deleted(const Gtk::TreeModel::Path& path);
-  void on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
-  void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
-  void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
+  void set_model(SectorModel* model);
+
 private:
   ObjectTree(const ObjectTree&);
   ObjectTree& operator=(const ObjectTree&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-22 16:19:29 UTC (rev 2731)
@@ -16,35 +16,39 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include <gdkmm/pixbuf.h>
+
 #include "display/scene_context.hpp"
 #include "display/surface.hpp"
 #include "sector_model.hpp"
 
-class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
-{
-public:
-  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type_icon;
-  Gtk::TreeModelColumn<Glib::ustring>              name;
-  Gtk::TreeModelColumn<bool>                       visible;
-
-  ObjectTreeColumns() {
-    add(type_icon); 
-    add(name); 
-    add(visible); 
-  }
-};
+ObjectTreeColumns* ObjectTreeColumns::instance_ = 0;
 
 SectorModel::SectorModel()
-{
-  ObjectTreeColumns columns;
-  objects_tree = Gtk::TreeStore::create(columns);
+{  
+  objects_tree = Gtk::TreeStore::create(ObjectTreeColumns::instance());
+
+  root_it = objects_tree->append();
+  (*root_it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*root_it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Scene");
+  (*root_it)[ObjectTreeColumns::instance().visible]   = false;
+
+  objects_tree->signal_row_changed().connect(sigc::mem_fun(*this, &SectorModel::on_row_changed));
+  objects_tree->signal_row_deleted().connect(sigc::mem_fun(*this, &SectorModel::on_row_deleted));
+  objects_tree->signal_row_has_child_toggled().connect(sigc::mem_fun(*this, &SectorModel::on_row_has_child_toggled));
+  objects_tree->signal_row_inserted().connect(sigc::mem_fun(*this, &SectorModel::on_row_inserted));
+  objects_tree->signal_rows_reordered().connect(sigc::mem_fun(*this, &SectorModel::on_rows_reordered));
 }
 
 void
 SectorModel::add(const Vector2f& obj)
 {
   objects.push_back(obj);
+  Gtk::TreeStore::iterator it = objects_tree->append(root_it->children());
+  (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Object");
+  (*it)[ObjectTreeColumns::instance().visible]   = false; 
 }
 
 void
@@ -59,4 +63,34 @@
     }
 }
 
+void
+SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+{
+  std::cout << "ObjectTree:on_row_changed" << std::endl;
+}
+
+void
+SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
+{
+  std::cout << "ObjectTree:on_row_deleted" << std::endl;
+}
+
+void
+SectorModel::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+{
+  std::cout << "ObjectTree:on_row_has_child_toggled" << std::endl;
+}
+
+void
+SectorModel::on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+{
+  std::cout << "ObjectTree:on_row_inserted" << std::endl;
+}
+
+void
+SectorModel::on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order)
+{
+  std::cout << "ObjectTree:on_row_reordered" << std::endl;
+}
+
 /* EOF */

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-22 14:45:35 UTC (rev 2730)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-22 16:19:29 UTC (rev 2731)
@@ -19,15 +19,43 @@
 #ifndef HEADER_SECTOR_MODEL_HPP
 #define HEADER_SECTOR_MODEL_HPP
 
+#include <memory>
 #include <gtkmm/treestore.h>
 #include <vector>
 #include "math/vector2f.hpp"
 
 class SceneContext;
+class ObjectTreeColumns;
 
+class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
+{
+private:
+  static ObjectTreeColumns* instance_;
+
+public:
+  static ObjectTreeColumns& instance() {
+    if (instance_)
+      return *instance_;
+    else
+      return *(instance_ = new ObjectTreeColumns());
+  }
+
+  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type_icon;
+  Gtk::TreeModelColumn<Glib::ustring>              name;
+  Gtk::TreeModelColumn<bool>                       visible;
+
+private:
+  ObjectTreeColumns() {
+    add(type_icon); 
+    add(name); 
+    add(visible); 
+  }
+};
+
 class SectorModel
 {
 private:
+  Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> objects_tree;
   std::vector<Vector2f> objects;
 
@@ -37,6 +65,16 @@
   void add(const Vector2f& obj);
   void draw(SceneContext& sc);
 
+  // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
+
+  Glib::RefPtr<Gtk::TreeStore> get_objects_tree() { return objects_tree; }
+
+  void on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
+  void on_row_deleted(const Gtk::TreeModel::Path& path);
+  void on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
+  void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
+  void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);



From grumbel at mail.berlios.de  Sun Mar 22 20:46:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 20:46:48 +0100
Subject: [Windstille-commit] r2732 - in trunk/windstille: . src src/editor
Message-ID: <200903221946.n2MJkmpd026948@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 20:46:47 +0100 (Sun, 22 Mar 2009)
New Revision: 2732

Added:
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_selector.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/zoom_tool.cpp
Log:
Added some basic drag&drop of images


Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/TODO	2009-03-22 19:46:47 UTC (rev 2732)
@@ -185,6 +185,8 @@
 Miscellaneous
 =============
 
+* move has_suffix, has_prefix and stuff into StringUtil class
+
 * get rid of global debug
 
 * work on Object introspection, see: ~/projects/lang/c++/introspection.cpp

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/SConscript	2009-03-22 19:46:47 UTC (rev 2732)
@@ -241,6 +241,7 @@
         'editor/minimap_widget.cpp',
         'editor/scroll_tool.cpp',
         'editor/sector_model.cpp',
+        'editor/object_model.cpp',
         'editor/zoom_tool.cpp',
         'editor/select_tool.cpp',
         'editor/editor_window.cpp'

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -190,6 +190,11 @@
 
   // Window
   add(vbox);
+
+  fill_object_selector("data/images/objects/");
+  fill_object_selector("data/images/inventory/");
+  fill_object_selector("data/images/portraits/");
+  fill_object_selector("data/images/");
 }
 
 EditorWindow::~EditorWindow()
@@ -362,7 +367,33 @@
     }
 }
 
+static bool has_suffix(const std::string& str, const std::string& suffix)
+{
+  if (str.length() >= suffix.length())
+    return str.compare(str.length() - suffix.length(), suffix.length(), suffix) == 0;
+  else
+    return false;
+}
+
 void
+EditorWindow::fill_object_selector(const std::string& directory)
+{
+  Glib::Dir dir(directory);
+  for(Glib::Dir::iterator i = dir.begin(); i != dir.end(); ++i)
+    {
+      if (has_suffix(*i, ".png"))
+        {
+          Glib::ustring path = directory;
+          path += *i;
+
+          Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(path);
+
+          object_selector.add_object(path, pixbuf->scale_simple(32, 32, Gdk::INTERP_TILES));
+        }
+    }
+}
+
+void
 EditorWindow::on_switch_page(GtkNotebookPage* page, guint page_num)
 {
   std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -74,7 +74,7 @@
   virtual ~EditorWindow();
 
   void show_minimap(bool v);
-
+  void fill_object_selector(const std::string& directory);
 public:
   void on_new();
   void on_open();

Added: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -0,0 +1,59 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <iostream>
+
+#include "display/scene_context.hpp"
+#include "object_model.hpp"
+
+ObjectModelHandle
+ObjectModel::create(const std::string& name, const std::string& path, const Vector2f& pos)
+{
+  return ObjectModelHandle(new ObjectModel(name, path, pos));
+}
+
+ObjectModel::ObjectModel(const std::string& name_, const std::string& path, const Vector2f& pos_)
+  : name(name_),
+    pos(pos_)
+{
+  std::cout << "Path: " << path << std::endl;
+  surface = Surface(path.substr(5)); // cut "data/" part
+
+  pos.x -= surface.get_width()/2;
+  pos.y -= surface.get_height()/2;
+}
+
+ObjectModel::~ObjectModel()
+{
+}
+
+void
+ObjectModel::draw(SceneContext& sc)
+{
+  sc.color().draw(surface, pos.x, pos.y);
+  sc.control().draw_rect(get_bounding_box(), Color(1,1,1,0.5f));
+  sc.control().fill_rect(Rectf(pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
+}
+
+Rectf
+ObjectModel::get_bounding_box() const
+{
+  return Rectf(pos, Sizef(surface.get_width(), surface.get_height()));
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_model.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -0,0 +1,59 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_HPP
+#define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_HPP
+
+#include <boost/shared_ptr.hpp>
+#include <string>
+
+#include "display/surface.hpp"
+#include "math/vector2f.hpp"
+
+class ObjectModel;
+class SceneContext;
+typedef boost::shared_ptr<ObjectModel> ObjectModelHandle;
+
+class ObjectModel
+{
+public:
+  static ObjectModelHandle create(const std::string& name, const std::string& path, const Vector2f& pos);
+
+private:
+  std::string name;
+  Vector2f     pos;
+  Surface  surface;
+
+public:
+  ObjectModel(const std::string& name, const std::string& path, const Vector2f& pos);
+  ~ObjectModel();
+  
+  std::string get_name() const { return name; }
+  Vector2f get_pos() const { return pos; }
+  
+  void draw(SceneContext& sc);
+  Rectf get_bounding_box() const;
+
+private:
+  ObjectModel(const ObjectModel&);
+  ObjectModel& operator=(const ObjectModel&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_model.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -17,42 +17,48 @@
 */
 
 #include <iostream>
-#include <gtkmm/liststore.h>
+#include <boost/function.hpp>
+#include <gtkmm/treeselection.h>
 #include <gtkmm/treemodelcolumn.h>
+
 #include "object_selector.hpp"
 
 class ObjectIconColumns : public Gtk::TreeModel::ColumnRecord
 {
 public:
-  Gtk::TreeModelColumn<Glib::ustring> pathname;
-  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> >   icon;
+  Gtk::TreeModelColumn<std::string> pathname;
+  Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> >  icon;
   
+  static ObjectIconColumns& instance() {
+    if (instance_)
+      return *instance_;
+    else
+      return *(instance_ = new ObjectIconColumns());
+  }
+
+private:
+  static ObjectIconColumns* instance_;
+
   ObjectIconColumns() {
     add(pathname); 
     add(icon);
   }
 };
+
+ObjectIconColumns* ObjectIconColumns::instance_ = 0;
 
 ObjectSelector::ObjectSelector()
   : label("Object Selector", Gtk::ALIGN_LEFT)
 {
-  ObjectIconColumns columns;
-  Glib::RefPtr<Gtk::ListStore> list_store = Gtk::ListStore::create(columns);
+  list_store = Gtk::ListStore::create(ObjectIconColumns::instance());
 
-  Glib::RefPtr<Gdk::Pixbuf> icon = Gdk::Pixbuf::create_from_file("data/editor/icon.png");
-
-  iconview.modify_base(Gtk::STATE_NORMAL, Gdk::Color("grey"));
+  // Change background color
+  // iconview.modify_base(Gtk::STATE_NORMAL, Gdk::Color("grey"));
   
-  for(int i = 0; i < 10; ++i)
-    {
-      Gtk::ListStore::iterator it  = list_store->append();
-      (*it)[columns.pathname] = Glib::ustring("Hello World");
-      (*it)[columns.icon]     = icon;
-    }
   iconview.set_model(list_store);
 
-  iconview.set_pixbuf_column(columns.icon);
-  //iconview.set_text_column(columns.pathname);
+  iconview.set_pixbuf_column(ObjectIconColumns::instance().icon);
+  //iconview.set_text_column(ObjectIconColumns::instance().pathname);
 
   iconview.set_model(list_store);
 
@@ -78,11 +84,31 @@
 }
 
 void
+ObjectSelector::add_object(const std::string& pathname,
+                           const Glib::RefPtr<Gdk::Pixbuf>& icon)
+{
+  Gtk::ListStore::iterator it  = list_store->append();
+  (*it)[ObjectIconColumns::instance().pathname] = pathname;
+  (*it)[ObjectIconColumns::instance().icon]     = icon;
+}
+                    
+void
 ObjectSelector::on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context)
 {
-  Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file("data/editor/icon.png");
+  std::string iconpath = "data/editor/icon.png";
+
+Gtk::IconView::ArrayHandle_TreePaths selection = iconview.get_selected_items();
+  for(Gtk::IconView::ArrayHandle_TreePaths::iterator i = selection.begin();
+      i != selection.end();
+      ++i)
+    {
+      Gtk::ListStore::iterator it = list_store->get_iter(*i);
+      iconpath = (*it)[ObjectIconColumns::instance().pathname];
+    }
+
+  Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(iconpath);
   context->set_icon(pixbuf, pixbuf->get_width()/2, pixbuf->get_height()/2);
-}
+}     
 
 void
 ObjectSelector::on_drag_data_get(const Glib::RefPtr<Gdk::DragContext>& context, 
@@ -90,7 +116,20 @@
                                  guint info, guint time)
 {
   std::cout << "ObjectSelector: on_drag_data_get" << std::endl;
-  selection_data.set("raw", "data");
+
+  Gtk::IconView::ArrayHandle_TreePaths selection = iconview.get_selected_items();
+
+  for(Gtk::IconView::ArrayHandle_TreePaths::iterator i = selection.begin();
+      i != selection.end();
+      ++i)
+    {
+      Gtk::ListStore::iterator it = list_store->get_iter(*i);
+
+      //if (it)
+      //  std::cout << "on_drag_begin: " << (*it)[ObjectIconColumns::instance().pathname] << std::endl;
+
+      selection_data.set("data", (*it)[ObjectIconColumns::instance().pathname]);
+    }
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_selector.hpp
===================================================================
--- trunk/windstille/src/editor/object_selector.hpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/object_selector.hpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -22,6 +22,7 @@
 #include <gtkmm/box.h>
 #include <gtkmm/scrolledwindow.h>
 #include <gtkmm/label.h>
+#include <gtkmm/liststore.h>
 #include <gdkmm/dragcontext.h>
 #include <gtkmm/iconview.h>
 
@@ -31,11 +32,15 @@
   Gtk::Label label;
   Gtk::ScrolledWindow scrolled;
   Gtk::IconView iconview;
+  Glib::RefPtr<Gtk::ListStore> list_store;
   
 public:
   ObjectSelector();
   virtual ~ObjectSelector();
 
+  void add_object(const std::string& pathname,
+                  const Glib::RefPtr<Gdk::Pixbuf>& icon);
+
 protected:
   void on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context);
   void on_drag_data_get(const Glib::RefPtr<Gdk::DragContext>& context,

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -42,24 +42,24 @@
 }
 
 void
-SectorModel::add(const Vector2f& obj)
+SectorModel::add(const std::string& path, const Vector2f& pos)
 {
+  ObjectModelHandle obj = ObjectModel::create("obj:" + path, path, pos);
+
   objects.push_back(obj);
+
   Gtk::TreeStore::iterator it = objects_tree->append(root_it->children());
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Object");
+  (*it)[ObjectTreeColumns::instance().name]      = obj->get_name();
   (*it)[ObjectTreeColumns::instance().visible]   = false; 
 }
 
 void
 SectorModel::draw(SceneContext& sc)
 {
-  Surface surface("images/hedgehog.png");
-
-  for(std::vector<Vector2f>::iterator i = objects.begin(); i != objects.end(); ++i)
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      sc.color().draw(surface, i->x, i->y);
-      sc.control().fill_rect(Rectf(*i - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
+      (*i)->draw(sc);
     }
 }
 

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -22,6 +22,8 @@
 #include <memory>
 #include <gtkmm/treestore.h>
 #include <vector>
+
+#include "object_model.hpp"
 #include "math/vector2f.hpp"
 
 class SceneContext;
@@ -55,14 +57,16 @@
 class SectorModel
 {
 private:
+  typedef std::vector<ObjectModelHandle> Objects;
+
   Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> objects_tree;
-  std::vector<Vector2f> objects;
+  Objects objects;
 
 public:
   SectorModel();
 
-  void add(const Vector2f& obj);
+  void add(const std::string& path, const Vector2f& obj);
   void draw(SceneContext& sc);
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -58,7 +58,6 @@
 void
 SelectTool::draw(SceneContext& sc)
 {
-  std::cout << "draw: " << rect_valid << std::endl;
   if (rect_valid)
     {
       sc.control().fill_rect(rect, Color(0.5f, 0.5f, 1.0f, 0.25));

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -318,7 +318,7 @@
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
 
-  sector_model->add(state.screen_to_world(Vector2f(x, y)));
+  sector_model->add(data.get_data_as_string(), state.screen_to_world(Vector2f(x, y)));
 }
 
 void

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-03-22 16:19:29 UTC (rev 2731)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-03-22 19:46:47 UTC (rev 2732)
@@ -61,7 +61,6 @@
 void
 ZoomTool::draw(SceneContext& sc)
 {
-  std::cout << "draw: " << rect_valid << std::endl;
   if (rect_valid)
     {
       sc.control().fill_rect(rect, Color(1.0f, 1.0f, 0.0f, 0.25));



From grumbel at mail.berlios.de  Sun Mar 22 21:19:35 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 21:19:35 +0100
Subject: [Windstille-commit] r2733 - trunk/windstille/src/editor
Message-ID: <200903222019.n2MKJZTQ031784@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 21:19:34 +0100 (Sun, 22 Mar 2009)
New Revision: 2733

Modified:
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Added basic movement of objects

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-22 19:46:47 UTC (rev 2732)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-22 20:19:34 UTC (rev 2733)
@@ -45,6 +45,7 @@
   
   std::string get_name() const { return name; }
   Vector2f get_pos() const { return pos; }
+  void set_pos(const Vector2f& pos_)  {  pos = pos_; }
   
   void draw(SceneContext& sc);
   Rectf get_bounding_box() const;

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-22 19:46:47 UTC (rev 2732)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-22 20:19:34 UTC (rev 2733)
@@ -62,6 +62,19 @@
       (*i)->draw(sc);
     }
 }
+
+ObjectModelHandle
+SectorModel::get_object_at(const Vector2f& pos) const
+{
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      if ((*i)->get_bounding_box().is_inside(pos))
+        {
+          return *i;
+        }
+    }
+  return ObjectModelHandle();
+}
 
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-22 19:46:47 UTC (rev 2732)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-22 20:19:34 UTC (rev 2733)
@@ -79,6 +79,8 @@
   void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
   void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
+  ObjectModelHandle get_object_at(const Vector2f& pos) const;
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-22 19:46:47 UTC (rev 2732)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-22 20:19:34 UTC (rev 2733)
@@ -17,19 +17,36 @@
 */
 
 #include "display/scene_context.hpp"
+#include "sector_model.hpp"
 #include "windstille_widget.hpp"
 #include "select_tool.hpp"
 
 SelectTool::SelectTool()
-  : rect_valid(false)
+  : mode(NO_MODE)
+    
 {
 }
 
 bool
-SelectTool::mouse_down (GdkEventButton* event, WindstilleWidget& wst)
+SelectTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
   click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
-  rect_valid = false;
+
+  if ((object = wst.get_sector_model()->get_object_at(click_pos)).get())
+    {
+      mode = DRAG_MODE;
+      object_pos = object->get_pos();
+    }
+  else
+    {
+      rect.left   = click_pos.x;
+      rect.top    = click_pos.y;
+      rect.right  = click_pos.x;
+      rect.bottom = click_pos.y;
+      
+      mode = SELECT_MODE;
+    }
+
   return true;
 }
 
@@ -38,12 +55,18 @@
 {
   Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
 
-  rect.left   = click_pos.x;
-  rect.top    = click_pos.y;
-  rect.right  = pos.x;
-  rect.bottom = pos.y;
+  if (mode == DRAG_MODE)
+    {
+      object->set_pos(object_pos - click_pos + pos);
+    }
+  else if (mode == SELECT_MODE)
+    {
+      rect.left   = click_pos.x;
+      rect.top    = click_pos.y;
+      rect.right  = pos.x;
+      rect.bottom = pos.y;
+    }
   
-  rect_valid = true;
   return true;
 }
 
@@ -51,14 +74,24 @@
 SelectTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
   // Select objects
-  rect_valid = false;
+  if (mode == DRAG_MODE)
+    {
+      
+    }
+  else if (mode == SELECT_MODE)
+    {
+      mode = NO_MODE;
+    }
+
+  mode = NO_MODE;
+
   return true;
 }
 
 void
 SelectTool::draw(SceneContext& sc)
 {
-  if (rect_valid)
+  if (mode == SELECT_MODE)
     {
       sc.control().fill_rect(rect, Color(0.5f, 0.5f, 1.0f, 0.25));
       sc.control().draw_rect(rect, Color(0.5f, 0.5f, 1.0f)); 

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-03-22 19:46:47 UTC (rev 2732)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-03-22 20:19:34 UTC (rev 2733)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_SELECT_TOOL_HPP
 
 #include "math/rect.hpp"
+#include "object_model.hpp"
 #include "tool.hpp"
 
 class SelectTool : public Tool
@@ -27,8 +28,15 @@
 private:
   Vector2f click_pos;
   Rectf    rect;
-  bool     rect_valid;
-
+  ObjectModelHandle object;
+  Vector2f object_pos;
+  
+  enum { 
+    SELECT_MODE,
+    DRAG_MODE,
+    NO_MODE
+  } mode;
+  
 public:
   SelectTool();
   

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 19:46:47 UTC (rev 2732)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 20:19:34 UTC (rev 2733)
@@ -330,14 +330,14 @@
 void
 WindstilleWidget::on_zoom_in()
 {
-  state.set_zoom(state.get_zoom() * 1.1f);
+  state.set_zoom(state.get_zoom() * 1.25f);
   queue_draw();
 }
 
 void
 WindstilleWidget::on_zoom_out()
 {
-  state.set_zoom(state.get_zoom() * (1.0f/1.1f));
+  state.set_zoom(state.get_zoom() * (1.0f/1.25f));
   queue_draw();
 }
 



From grumbel at mail.berlios.de  Sun Mar 22 21:32:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 22 Mar 2009 21:32:44 +0100
Subject: [Windstille-commit] r2734 - trunk/windstille/src/editor
Message-ID: <200903222032.n2MKWiIu000661@sheep.berlios.de>

Author: grumbel
Date: 2009-03-22 21:32:43 +0100 (Sun, 22 Mar 2009)
New Revision: 2734

Modified:
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Properly zoom to the center of the screen, instead of top/left

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 20:19:34 UTC (rev 2733)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 20:32:43 UTC (rev 2734)
@@ -330,21 +330,21 @@
 void
 WindstilleWidget::on_zoom_in()
 {
-  state.set_zoom(state.get_zoom() * 1.25f);
+  state.set_zoom(Vector2f(get_width()/2, get_height()/2), state.get_zoom() * 1.25f);
   queue_draw();
 }
 
 void
 WindstilleWidget::on_zoom_out()
 {
-  state.set_zoom(state.get_zoom() * (1.0f/1.25f));
+  state.set_zoom(Vector2f(get_width()/2, get_height()/2), state.get_zoom() * (1.0f/1.25f));
   queue_draw();
 }
 
 void
 WindstilleWidget::on_zoom_100()
 {
-  state.set_zoom(1.0f);
+  state.set_zoom(Vector2f(get_width()/2, get_height()/2), 1.0f);
   queue_draw();
 }
 



From grumbel at mail.berlios.de  Mon Mar 23 06:42:27 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 23 Mar 2009 06:42:27 +0100
Subject: [Windstille-commit] r2735 - in trunk/windstille: . src src/editor
Message-ID: <200903230542.n2N5gR1K020711@sheep.berlios.de>

Author: grumbel
Date: 2009-03-23 06:42:19 +0100 (Mon, 23 Mar 2009)
New Revision: 2735

Added:
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added support for selections

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/TODO	2009-03-23 05:42:19 UTC (rev 2735)
@@ -481,6 +481,8 @@
 Editor
 ======
 
+* add object snapping
+
 * add grid
 
 * add a way to draw objects to DrawingContext that only does

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/SConscript	2009-03-23 05:42:19 UTC (rev 2735)
@@ -241,6 +241,7 @@
         'editor/minimap_widget.cpp',
         'editor/scroll_tool.cpp',
         'editor/sector_model.cpp',
+        'editor/selection.cpp',
         'editor/object_model.cpp',
         'editor/zoom_tool.cpp',
         'editor/select_tool.cpp',

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -45,15 +45,32 @@
 void
 ObjectModel::draw(SceneContext& sc)
 {
-  sc.color().draw(surface, pos.x, pos.y);
-  sc.control().draw_rect(get_bounding_box(), Color(1,1,1,0.5f));
-  sc.control().fill_rect(Rectf(pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
+  sc.color().draw(surface, pos.x+move_offset.x, pos.y+move_offset.y);
+  sc.control().fill_rect(Rectf(pos - Vector2f(8, 8) + move_offset, Sizef(16, 16)), Color(1,0,0));
 }
 
 Rectf
 ObjectModel::get_bounding_box() const
 {
-  return Rectf(pos, Sizef(surface.get_width(), surface.get_height()));
+  return Rectf(pos+move_offset, Sizef(surface.get_width(), surface.get_height()));
 }
+
+void
+ObjectModel::on_move_start()
+{  
+}
+
+void
+ObjectModel::on_move_update(const Vector2f& offset)
+{
+  move_offset = offset;
+}
+
+void
+ObjectModel::on_move_end(const Vector2f& offset)
+{
+  pos += move_offset;
+  move_offset = Vector2f(0,0);
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -39,6 +39,8 @@
   Vector2f     pos;
   Surface  surface;
 
+  Vector2f move_offset;
+
 public:
   ObjectModel(const std::string& name, const std::string& path, const Vector2f& pos);
   ~ObjectModel();
@@ -50,6 +52,10 @@
   void draw(SceneContext& sc);
   Rectf get_bounding_box() const;
 
+  void on_move_start();
+  void on_move_update(const Vector2f& offset);
+  void on_move_end(const Vector2f& offset);
+
 private:
   ObjectModel(const ObjectModel&);
   ObjectModel& operator=(const ObjectModel&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -75,6 +75,22 @@
     }
   return ObjectModelHandle();
 }
+
+SelectionHandle
+SectorModel::get_selection(const Rectf& rect) const
+{
+  SelectionHandle selection = Selection::create();
+
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      if ((*i)->get_bounding_box().is_overlapped(rect))
+        {
+          selection->add(*i);
+        }
+    }
+
+  return selection;
+}
 
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -23,6 +23,7 @@
 #include <gtkmm/treestore.h>
 #include <vector>
 
+#include "selection.hpp"
 #include "object_model.hpp"
 #include "math/vector2f.hpp"
 
@@ -80,7 +81,8 @@
   void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
   ObjectModelHandle get_object_at(const Vector2f& pos) const;
-
+  SelectionHandle   get_selection(const Rectf& rect) const;
+  
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -31,11 +31,23 @@
 SelectTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
   click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
-
-  if ((object = wst.get_sector_model()->get_object_at(click_pos)).get())
+  
+  ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos);
+  if (object.get())
     {
+      if (wst.get_selection()->has_object(object))
+        {
+          selection = wst.get_selection();
+        }
+      else
+        {
+          selection = Selection::create();
+          selection->add(object);
+          wst.set_selection(selection);
+        }
+      
       mode = DRAG_MODE;
-      object_pos = object->get_pos();
+      selection->on_move_start();
     }
   else
     {
@@ -57,7 +69,7 @@
 
   if (mode == DRAG_MODE)
     {
-      object->set_pos(object_pos - click_pos + pos);
+      selection->on_move_update(pos - click_pos);
     }
   else if (mode == SELECT_MODE)
     {
@@ -73,14 +85,18 @@
 bool
 SelectTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
+  Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
+
   // Select objects
   if (mode == DRAG_MODE)
     {
-      
+      selection->on_move_end(pos - click_pos);
     }
   else if (mode == SELECT_MODE)
     {
       mode = NO_MODE;
+      rect.normalize();
+      wst.set_selection(wst.get_sector_model()->get_selection(rect));
     }
 
   mode = NO_MODE;

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -28,8 +28,7 @@
 private:
   Vector2f click_pos;
   Rectf    rect;
-  ObjectModelHandle object;
-  Vector2f object_pos;
+  SelectionHandle selection;
   
   enum { 
     SELECT_MODE,

Added: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -0,0 +1,87 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "selection.hpp"
+
+Selection::Selection()
+{
+}
+
+Selection::~Selection()
+{
+}
+
+void
+Selection::add(const ObjectModelHandle& object)
+{
+  objects.push_back(object);
+}
+
+Selection::iterator
+Selection::begin()
+{
+  return objects.begin();
+}
+
+Selection::iterator
+Selection::end()
+{
+  return objects.end();
+}
+
+bool
+Selection::empty() const
+{
+  return objects.empty();
+}
+
+bool
+Selection::has_object(ObjectModelHandle object) const
+{
+  Objects::const_iterator it = std::find(objects.begin(), objects.end(), object);
+  return it != objects.end();
+}
+
+void
+Selection::on_move_start()
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->on_move_start();
+    }
+}
+
+void
+Selection::on_move_update(const Vector2f& offset)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->on_move_update(offset);
+    }
+}
+
+void
+Selection::on_move_end(const Vector2f& offset)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->on_move_end(offset);
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/selection.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -0,0 +1,64 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_SELECTION_HPP
+#define HEADER_WINDSTILLE_EDITOR_SELECTION_HPP
+
+#include <vector>
+#include <boost/shared_ptr.hpp>
+
+#include "object_model.hpp"
+
+class Selection;
+typedef boost::shared_ptr<Selection> SelectionHandle;
+
+class Selection
+{
+private:
+  typedef std::vector<ObjectModelHandle> Objects;
+  Objects objects;
+
+public:
+  typedef Objects::iterator iterator;
+
+public:
+  static SelectionHandle create() { return SelectionHandle(new Selection()); }
+
+  Selection();
+  ~Selection();
+
+  void add(const ObjectModelHandle& object);
+
+  iterator begin();
+  iterator end();
+  bool empty() const;
+
+  bool has_object(ObjectModelHandle object) const;
+
+  void on_move_start();
+  void on_move_update(const Vector2f& offset);
+  void on_move_end(const Vector2f& offset);
+  
+private:
+  Selection(const Selection&);
+  Selection& operator=(const Selection&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/selection.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -67,6 +67,8 @@
   std::vector<Gtk::TargetEntry> targets;
   targets.push_back(Gtk::TargetEntry("WindstilleObject"));
   drag_dest_set(targets, Gtk::DEST_DEFAULT_ALL, Gdk::ACTION_COPY);
+
+  selection = Selection::create();
 }
 
 WindstilleWidget::~WindstilleWidget()
@@ -188,6 +190,11 @@
 
       sector_model->draw(*sc);
 
+      for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+        {
+          sc->control().draw_rect((*i)->get_bounding_box(), Color(0.5f, 0.5f, 1.0f, 1.0f));
+        }
+
       if (active_tool)
         active_tool->draw(*sc);
 
@@ -347,6 +354,18 @@
   state.set_zoom(Vector2f(get_width()/2, get_height()/2), 1.0f);
   queue_draw();
 }
+
+void
+WindstilleWidget::set_selection(const SelectionHandle& selection_)
+{
+  selection = selection_;
+}
+
+SelectionHandle
+WindstilleWidget::get_selection() const
+{
+  return selection;
+}
 
 SectorModel*
 WindstilleWidget::get_sector_model()

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-22 20:32:43 UTC (rev 2734)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-23 05:42:19 UTC (rev 2735)
@@ -32,6 +32,7 @@
 #include "display/graphic_context_state.hpp"
 #include "display/scene_context.hpp"
 #include "math/vector2f.hpp"
+#include "selection.hpp"
 
 class Tool;
 class ScrollTool;
@@ -50,6 +51,7 @@
   std::auto_ptr<SceneContext> sc;
   Tool* active_tool;
   std::auto_ptr<ScrollTool> scroll_tool;
+  SelectionHandle selection;
 
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
@@ -84,6 +86,8 @@
   void draw();
 
   SectorModel* get_sector_model();
+  void set_selection(const SelectionHandle& selection);
+  SelectionHandle get_selection() const;
 
 private:
   WindstilleWidget (const WindstilleWidget&);



From grumbel at mail.berlios.de  Mon Mar 23 17:42:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 23 Mar 2009 17:42:53 +0100
Subject: [Windstille-commit] r2736 - trunk/windstille/src/editor
Message-ID: <200903231642.n2NGgrbR019306@sheep.berlios.de>

Author: grumbel
Date: 2009-03-23 17:42:53 +0100 (Mon, 23 Mar 2009)
New Revision: 2736

Added:
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/control_point.hpp
Log:
Added ControlPoint class

Added: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-03-23 05:42:19 UTC (rev 2735)
+++ trunk/windstille/src/editor/control_point.cpp	2009-03-23 16:42:53 UTC (rev 2736)
@@ -0,0 +1,53 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "control_point.hpp"
+
+ControlPoint::ControlPoint()
+{
+}
+
+ControlPoint::~ControlPoint()
+{
+}
+
+
+void
+ControlPoint::on_move_start()
+{
+}
+
+void
+ControlPoint::on_move_update(const Vector2f& offset_)
+{
+  offset = offset_;
+}
+
+void
+ControlPoint::on_move_end(const Vector2f& offset_)
+{
+  offset = offset_;
+}
+
+Rectf
+ControlPoint::get_bounding_box() const
+{
+  return Rectf(pos - Vector2f(8.0f, 8.0f), Sizef(16.0f ,16.0f));
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/control_point.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/control_point.hpp
===================================================================
--- trunk/windstille/src/editor/control_point.hpp	2009-03-23 05:42:19 UTC (rev 2735)
+++ trunk/windstille/src/editor/control_point.hpp	2009-03-23 16:42:53 UTC (rev 2736)
@@ -0,0 +1,56 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_CONTROL_POINT_HPP
+#define HEADER_WINDSTILLE_EDITOR_CONTROL_POINT_HPP
+
+#include <boost/shared_ptr.hpp>
+#include "math/rect.hpp"
+#include "math/vector2f.hpp"
+
+class SceneContext;
+class ControlPoint;
+typedef boost::shared_ptr<ControlPoint> ControlPointHandle;
+
+class ControlPoint
+{
+private:
+  Vector2f     pos;
+  Vector2f  offset;
+
+public:
+  ControlPoint();
+  ~ControlPoint();
+  
+  virtual void update() = 0;
+  virtual void draw(SceneContext& sc) = 0;
+
+  Rectf get_bounding_box() const;
+
+  void on_move_start();
+  void on_move_update(const Vector2f& offset);
+  void on_move_end(const Vector2f& offset);
+
+private:
+  ControlPoint(const ControlPoint&);
+  ControlPoint& operator=(const ControlPoint&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/control_point.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Mon Mar 23 17:43:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 23 Mar 2009 17:43:16 +0100
Subject: [Windstille-commit] r2737 - in trunk/windstille: . src src/editor
Message-ID: <200903231643.n2NGhGRP019410@sheep.berlios.de>

Author: grumbel
Date: 2009-03-23 17:43:15 +0100 (Mon, 23 Mar 2009)
New Revision: 2737

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added raise/lower of objects

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/TODO	2009-03-23 16:43:15 UTC (rev 2737)
@@ -185,6 +185,10 @@
 Miscellaneous
 =============
 
+* raise/lower of multiple objects at once is a bit wonky, when objects
+  reach the bottom/top they will change their relative order in the
+  selection
+
 * move has_suffix, has_prefix and stuff into StringUtil class
 
 * get rid of global debug
@@ -481,6 +485,15 @@
 Editor
 ======
 
+* add ways to toggle light, color, highlight layers on/off in the
+  editor
+
+* add ways to insert objects to light, color, highlight layer (likely
+  best to have objects now for themselves on which layer they belong)
+
+* save bitmask along with object to allow pixel perfect click
+  selection
+
 * add object snapping
 
 * add grid

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/SConscript	2009-03-23 16:43:15 UTC (rev 2737)
@@ -243,6 +243,7 @@
         'editor/sector_model.cpp',
         'editor/selection.cpp',
         'editor/object_model.cpp',
+        'editor/control_point.cpp',
         'editor/zoom_tool.cpp',
         'editor/select_tool.cpp',
         'editor/editor_window.cpp'

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -61,6 +61,12 @@
     "      <menuitem action='Copy'/>"
     "      <menuitem action='Paste'/>"
     "    </menu>"
+    "    <menu action='MenuObject'>"
+    "      <menuitem action='LowerObjectToBottom'/>"
+    "      <menuitem action='LowerObject'/>"
+    "      <menuitem action='RaiseObject'/>"
+    "      <menuitem action='RaiseObjectToTop'/>"
+    "    </menu>"
     "    <menu action='MenuView'>"
     "      <menuitem action='ZoomIn'/>"
     "      <menuitem action='ZoomOut'/>"
@@ -75,6 +81,7 @@
     "      <menuitem action='About'/>"
     "    </menu>"
     "  </menubar>"
+    ""
     "  <toolbar  name='ToolBar'>"
     "    <toolitem action='New'/>"
     "    <toolitem action='Open'/>"
@@ -88,11 +95,17 @@
     "    <toolitem action='ZoomOut'/>"
     "    <toolitem action='Zoom100'/>"
     "    <separator/>"
+    "    <toolitem action='RaiseObjectToTop'/>"
+    "    <toolitem action='RaiseObject'/>"
+    "    <toolitem action='LowerObject'/>"
+    "    <toolitem action='LowerObjectToBottom'/>"
+    "    <separator/>"
     "    <toolitem action='Play'/>"
     "    <separator/>"
     "    <toolitem action='About'/>"
     "    <toolitem action='Quit'/>"
     "  </toolbar>"
+    ""
     "  <toolbar  name='ToolBox'>"
     "    <toolitem action='SelectTool'/>"
     "    <toolitem action='NodeTool'/>"
@@ -120,6 +133,16 @@
   action_group->add(Gtk::Action::create("Copy",        Gtk::Stock::COPY));
   action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE));
 
+  action_group->add(Gtk::Action::create("MenuObject",    "_Object"));
+  action_group->add(Gtk::Action::create_with_icon_name("RaiseObjectToTop", "object_raise_to_top", "Raise To Top", "Raise Object to Top"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_raise_to_top));
+  action_group->add(Gtk::Action::create_with_icon_name("RaiseObject", "object_raise", "Raise", "Raise Object"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_raise));
+  action_group->add(Gtk::Action::create_with_icon_name("LowerObject", "object_lower", "Lower", "Lower Object"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_lower));                    
+  action_group->add(Gtk::Action::create_with_icon_name("LowerObjectToBottom", "object_lower_to_bottom", "Lower To Bottom", "Lower Object to Bottom"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_lower_to_bottom));
+
   action_group->add(Gtk::Action::create("MenuView",    "_View"));
   action_group->add(Gtk::Action::create("Zoom100",     Gtk::Stock::ZOOM_100),
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_100));
@@ -402,5 +425,15 @@
   else
     object_tree.set_model(0);
 }
+
+void
+EditorWindow::call_with_windstille_widget(void (WindstilleWidget::*func)())
+{
+  WindstilleWidget* wst = get_windstille_widget();
+  if (wst)
+    {
+      (wst->*func)();
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -94,6 +94,8 @@
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();
   
+  void call_with_windstille_widget(void (WindstilleWidget::*func)());
+
 private:
   EditorWindow(const EditorWindow&);
   EditorWindow& operator=(const EditorWindow&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <assert.h>
 #include <iostream>
 #include <gdkmm/pixbuf.h>
 
@@ -92,7 +93,78 @@
   return selection;
 }
 
+struct OverlapsWith
+{
+  Rectf rect;
+
+  OverlapsWith(const Rectf& rect_)
+    : rect(rect_)
+  {}
+
+  bool operator()(const ObjectModelHandle& object) {
+    return rect.is_overlapped(object->get_bounding_box());
+  }
+};
+
 void
+SectorModel::raise(ObjectModelHandle object)
+{
+  Objects::iterator i = std::find(objects.begin(), objects.end(), object);
+  assert(i != objects.end());
+  Objects::iterator j = i;
+  ++j;
+  j = std::find_if(j, objects.end(), OverlapsWith(object->get_bounding_box()));
+
+  if (j == objects.end())
+    {
+      // object overlaps with no other object, no point in raising it
+    }
+  else
+    {
+      objects.erase(i);
+      objects.insert(++j, object);
+    }
+}
+
+void
+SectorModel::lower(ObjectModelHandle object)
+{
+  // Mostly the same as raise, just with reverse iterators
+  Objects::reverse_iterator i = std::find(objects.rbegin(), objects.rend(), object);
+
+  Objects::reverse_iterator j = i;
+  ++j;
+  j = std::find_if(j, objects.rend(), OverlapsWith(object->get_bounding_box()));
+
+  if (j == objects.rend())
+    {
+      // object overlaps with no other object, no point in lowering it
+    }
+  else
+    {
+      // the base() of base in one further then where the reverse
+      // iterator was, so we have to move back to get the same
+      // position
+      objects.erase(--(i.base()));
+      objects.insert(--(j.base()), object);
+    }
+}
+
+void
+SectorModel::raise_to_top(ObjectModelHandle object)
+{
+  objects.remove(object);
+  objects.push_back(object); 
+}
+
+void
+SectorModel::lower_to_bottom(ObjectModelHandle object)
+{
+  objects.remove(object);
+  objects.push_front(object); 
+}
+
+void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
   std::cout << "ObjectTree:on_row_changed" << std::endl;

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -58,7 +58,7 @@
 class SectorModel
 {
 private:
-  typedef std::vector<ObjectModelHandle> Objects;
+  typedef std::list<ObjectModelHandle> Objects;
 
   Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> objects_tree;
@@ -83,6 +83,11 @@
   ObjectModelHandle get_object_at(const Vector2f& pos) const;
   SelectionHandle   get_selection(const Rectf& rect) const;
   
+  void raise_to_top(ObjectModelHandle object);
+  void lower_to_bottom(ObjectModelHandle object);
+  void raise(ObjectModelHandle object);
+  void lower(ObjectModelHandle object);
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -32,18 +32,6 @@
   objects.push_back(object);
 }
 
-Selection::iterator
-Selection::begin()
-{
-  return objects.begin();
-}
-
-Selection::iterator
-Selection::end()
-{
-  return objects.end();
-}
-
 bool
 Selection::empty() const
 {

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -35,6 +35,7 @@
 
 public:
   typedef Objects::iterator iterator;
+  typedef Objects::reverse_iterator reverse_iterator;
 
 public:
   static SelectionHandle create() { return SelectionHandle(new Selection()); }
@@ -43,9 +44,13 @@
   ~Selection();
 
   void add(const ObjectModelHandle& object);
+  
+  Selection::iterator begin() { return objects.begin(); }
+  Selection::iterator end()   { return objects.end(); }
 
-  iterator begin();
-  iterator end();
+  Selection::reverse_iterator rbegin() { return objects.rbegin(); }
+  Selection::reverse_iterator rend() { return objects.rend(); }
+
   bool empty() const;
 
   bool has_object(ObjectModelHandle object) const;

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -204,6 +204,46 @@
     }
 }
 
+void
+WindstilleWidget::selection_raise()
+{
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      sector_model->raise(*i);
+    }
+  queue_draw();
+}
+
+void
+WindstilleWidget::selection_lower()
+{
+  for(Selection::reverse_iterator i = selection->rbegin(); i != selection->rend(); ++i)
+    {
+      sector_model->lower(*i);
+    }
+  queue_draw();
+}
+
+void
+WindstilleWidget::selection_raise_to_top()
+{
+  for(Selection::reverse_iterator i = selection->rbegin(); i != selection->rend(); ++i)
+    {
+      sector_model->raise_to_top(*i);
+    }
+  queue_draw();
+}
+
+void
+WindstilleWidget::selection_lower_to_bottom()
+{
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      sector_model->lower_to_bottom(*i);
+    }
+  queue_draw();
+}
+
 bool
 WindstilleWidget::scroll(GdkEventScroll* event)
 {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-23 16:42:53 UTC (rev 2736)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-23 16:43:15 UTC (rev 2737)
@@ -32,6 +32,7 @@
 #include "display/graphic_context_state.hpp"
 #include "display/scene_context.hpp"
 #include "math/vector2f.hpp"
+#include "control_point.hpp"
 #include "selection.hpp"
 
 class Tool;
@@ -46,6 +47,7 @@
 {
 private:
   std::auto_ptr<SectorModel> sector_model;
+  std::vector<ControlPointHandle> control_points;
 
   GraphicContextState   state;
   std::auto_ptr<SceneContext> sc;
@@ -85,6 +87,12 @@
   
   void draw();
 
+  void selection_raise();
+  void selection_lower();
+
+  void selection_raise_to_top();
+  void selection_lower_to_bottom();
+
   SectorModel* get_sector_model();
   void set_selection(const SelectionHandle& selection);
   SelectionHandle get_selection() const;



From grumbel at mail.berlios.de  Mon Mar 23 20:25:49 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 23 Mar 2009 20:25:49 +0100
Subject: [Windstille-commit] r2738 - trunk/windstille/src/display
Message-ID: <200903231925.n2NJPnY5011991@sheep.berlios.de>

Author: grumbel
Date: 2009-03-23 20:25:48 +0100 (Mon, 23 Mar 2009)
New Revision: 2738

Modified:
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
Log:
Added Vector2f call for surface

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-23 16:43:15 UTC (rev 2737)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-23 19:25:48 UTC (rev 2738)
@@ -158,6 +158,12 @@
 }
 
 void
+DrawingContext::draw(const Surface surface, const Vector2f& pos, float z, float alpha)
+{
+  draw(surface, pos.x, pos.y, z, alpha);
+}
+
+void
 DrawingContext::draw(Surface surface, float x, float y, float z, float )
 {
   draw(new SurfaceDrawingRequest(surface,

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-03-23 16:43:15 UTC (rev 2737)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-03-23 19:25:48 UTC (rev 2738)
@@ -69,6 +69,7 @@
   void draw(DrawingRequest* request);
   void draw(const Sprite&   sprite,  const Vector2f& pos, float z = 0);
   void draw(const std::string& text,    float x, float y, float z = 0);
+  void draw(const Surface surface, const Vector2f& pos, float z = 0, float alpha = 0);
   void draw(const Surface surface, float x, float y, float z = 0, float alpha = 0);
   void draw(const Surface surface, const SurfaceDrawingParameters& params, float z_pos = 0);
   /*} */



From grumbel at mail.berlios.de  Mon Mar 23 20:26:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 23 Mar 2009 20:26:16 +0100
Subject: [Windstille-commit] r2739 - in trunk/windstille: . data/editor
	src/editor
Message-ID: <200903231926.n2NJQGw8012049@sheep.berlios.de>

Author: grumbel
Date: 2009-03-23 20:26:14 +0100 (Mon, 23 Mar 2009)
New Revision: 2739

Added:
   trunk/windstille/data/editor/clear_parent.png
   trunk/windstille/data/editor/connect_parent.png
   trunk/windstille/data/editor/object_lower.png
   trunk/windstille/data/editor/object_lower_to_bottom.png
   trunk/windstille/data/editor/object_raise.png
   trunk/windstille/data/editor/object_raise_to_top.png
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added basic parenting of objects

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/TODO	2009-03-23 19:26:14 UTC (rev 2739)
@@ -485,6 +485,12 @@
 Editor
 ======
 
+* add a Rect::contains(Rect) call
+
+* duplicate objects
+
+* shift click to add object to selection instead of replace selection
+
 * add ways to toggle light, color, highlight layers on/off in the
   editor
 
@@ -494,7 +500,8 @@
 * save bitmask along with object to allow pixel perfect click
   selection
 
-* add object snapping
+* add object snapping (snap to other objects bounding boxes, snap to
+  custom snap-points, snap to integer positions, snap to grid)
 
 * add grid
 

Added: trunk/windstille/data/editor/clear_parent.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/clear_parent.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/connect_parent.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/connect_parent.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/object_lower.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/object_lower.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/object_lower_to_bottom.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/object_lower_to_bottom.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/object_raise.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/object_raise.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/object_raise_to_top.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/object_raise_to_top.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -62,10 +62,13 @@
     "      <menuitem action='Paste'/>"
     "    </menu>"
     "    <menu action='MenuObject'>"
+    "      <menuitem action='RaiseObjectToTop'/>"
+    "      <menuitem action='RaiseObject'/>"
+    "      <menuitem action='LowerObject'/>"
     "      <menuitem action='LowerObjectToBottom'/>"
-    "      <menuitem action='LowerObject'/>"
-    "      <menuitem action='RaiseObject'/>"
-    "      <menuitem action='RaiseObjectToTop'/>"
+    "      <separator/>"
+    "      <menuitem action='ConnectParent'/>"
+    "      <menuitem action='ClearParent'/>"
     "    </menu>"
     "    <menu action='MenuView'>"
     "      <menuitem action='ZoomIn'/>"
@@ -87,6 +90,9 @@
     "    <toolitem action='Open'/>"
     "    <toolitem action='Save'/>"
     "    <separator/>"
+    "    <toolitem action='Undo'/>"
+    "    <toolitem action='Redo'/>"
+    "    <separator/>"
     "    <toolitem action='Cut'/>"
     "    <toolitem action='Copy'/>"
     "    <toolitem action='Paste'/>"
@@ -95,11 +101,14 @@
     "    <toolitem action='ZoomOut'/>"
     "    <toolitem action='Zoom100'/>"
     "    <separator/>"
+    "    <toolitem action='LowerObjectToBottom'/>"
+    "    <toolitem action='LowerObject'/>"
+    "    <toolitem action='RaiseObject'/>"
     "    <toolitem action='RaiseObjectToTop'/>"
-    "    <toolitem action='RaiseObject'/>"
-    "    <toolitem action='LowerObject'/>"
-    "    <toolitem action='LowerObjectToBottom'/>"
     "    <separator/>"
+    "    <toolitem action='ConnectParent'/>"
+    "    <toolitem action='ClearParent'/>"
+    "    <separator/>"
     "    <toolitem action='Play'/>"
     "    <separator/>"
     "    <toolitem action='About'/>"
@@ -129,6 +138,8 @@
                     sigc::mem_fun(*this, &EditorWindow::on_quit));
 
   action_group->add(Gtk::Action::create("MenuEdit",    "_Edit"));
+  action_group->add(Gtk::Action::create("Undo",        Gtk::Stock::UNDO));
+  action_group->add(Gtk::Action::create("Redo",        Gtk::Stock::REDO));
   action_group->add(Gtk::Action::create("Cut",         Gtk::Stock::CUT));
   action_group->add(Gtk::Action::create("Copy",        Gtk::Stock::COPY));
   action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE));
@@ -143,6 +154,12 @@
   action_group->add(Gtk::Action::create_with_icon_name("LowerObjectToBottom", "object_lower_to_bottom", "Lower To Bottom", "Lower Object to Bottom"),
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_lower_to_bottom));
 
+  action_group->add(Gtk::Action::create_with_icon_name("ConnectParent", "connect_parent", "Connect Parent", "Connect Parent"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_connect_parent));
+  action_group->add(Gtk::Action::create_with_icon_name("ClearParent", "clear_parent", "Clear Parent", "Clear Parent"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_clear_parent));
+
+
   action_group->add(Gtk::Action::create("MenuView",    "_View"));
   action_group->add(Gtk::Action::create("Zoom100",     Gtk::Stock::ZOOM_100),
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_100));
@@ -182,6 +199,13 @@
 
   notebook.signal_switch_page().connect(sigc::mem_fun(*this, &EditorWindow::on_switch_page));
 
+  // Disable unimplemented stuff:
+  action_group->get_action("Undo")->set_sensitive(false);
+  action_group->get_action("Redo")->set_sensitive(false);
+  action_group->get_action("Cut")->set_sensitive(false);
+  action_group->get_action("Copy")->set_sensitive(false);
+  action_group->get_action("Paste")->set_sensitive(false);
+
   // Packing
 
   // Main Vbox

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -27,15 +27,15 @@
   return ObjectModelHandle(new ObjectModel(name, path, pos));
 }
 
-ObjectModel::ObjectModel(const std::string& name_, const std::string& path, const Vector2f& pos_)
+ObjectModel::ObjectModel(const std::string& name_, const std::string& path, const Vector2f& rel_pos_)
   : name(name_),
-    pos(pos_)
+    rel_pos(rel_pos_)
 {
   std::cout << "Path: " << path << std::endl;
   surface = Surface(path.substr(5)); // cut "data/" part
-
-  pos.x -= surface.get_width()/2;
-  pos.y -= surface.get_height()/2;
+  
+  rel_pos.x -= surface.get_width()/2;
+  rel_pos.y -= surface.get_height()/2;
 }
 
 ObjectModel::~ObjectModel()
@@ -43,16 +43,52 @@
 }
 
 void
+ObjectModel::set_parent(const ObjectModelHandle& parent_)
+{
+  if (ObjectModelHandle parent = parent_ptr.lock())
+    {
+      rel_pos += parent->get_world_pos();
+    }
+
+  if (parent_.get())
+    {
+      rel_pos -= parent_->get_world_pos();
+    }
+  
+  parent_ptr = parent_;
+}
+
+Vector2f
+ObjectModel::get_world_pos() const
+{
+  if (ObjectModelHandle parent = parent_ptr.lock())
+    {
+      return rel_pos + move_offset + parent->get_world_pos();
+    }
+  else
+    {
+      return rel_pos + move_offset;
+    }
+}
+
+void
 ObjectModel::draw(SceneContext& sc)
 {
-  sc.color().draw(surface, pos.x+move_offset.x, pos.y+move_offset.y);
-  sc.control().fill_rect(Rectf(pos - Vector2f(8, 8) + move_offset, Sizef(16, 16)), Color(1,0,0));
+  Vector2f wo_pos = get_world_pos();
+
+  if (ObjectModelHandle parent = parent_ptr.lock())
+    {
+      sc.control().draw_line(wo_pos, parent->get_world_pos(), Color(0,0,1, 0.5f));
+    }
+     
+  sc.color().draw(surface, wo_pos);
+  sc.control().fill_rect(Rectf(wo_pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
 }
 
 Rectf
 ObjectModel::get_bounding_box() const
 {
-  return Rectf(pos+move_offset, Sizef(surface.get_width(), surface.get_height()));
+  return Rectf(get_world_pos(), Sizef(surface.get_width(), surface.get_height()));
 }
 
 void
@@ -69,7 +105,7 @@
 void
 ObjectModel::on_move_end(const Vector2f& offset)
 {
-  pos += move_offset;
+  rel_pos += move_offset;
   move_offset = Vector2f(0,0);
 }
 

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_HPP
 
 #include <boost/shared_ptr.hpp>
+#include <boost/weak_ptr.hpp>
 #include <string>
 
 #include "display/surface.hpp"
@@ -28,6 +29,7 @@
 class ObjectModel;
 class SceneContext;
 typedef boost::shared_ptr<ObjectModel> ObjectModelHandle;
+typedef boost::weak_ptr<ObjectModel>   ObjectModelPtr;
 
 class ObjectModel
 {
@@ -35,19 +37,26 @@
   static ObjectModelHandle create(const std::string& name, const std::string& path, const Vector2f& pos);
 
 private:
+  ObjectModelPtr parent_ptr;
+
   std::string name;
-  Vector2f     pos;
-  Surface  surface;
+  Vector2f    rel_pos;
+  Surface     surface;
 
   Vector2f move_offset;
 
 public:
   ObjectModel(const std::string& name, const std::string& path, const Vector2f& pos);
   ~ObjectModel();
+
+  void set_parent(const ObjectModelHandle& parent_);
   
   std::string get_name() const { return name; }
-  Vector2f get_pos() const { return pos; }
-  void set_pos(const Vector2f& pos_)  {  pos = pos_; }
+
+  Vector2f get_world_pos() const;
+
+  Vector2f get_rel_pos() const { return rel_pos; }
+  void     set_rel_pos(const Vector2f& rel_pos_)  {  rel_pos = rel_pos_; }
   
   void draw(SceneContext& sc);
   Rectf get_bounding_box() const;

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -38,12 +38,28 @@
       if (wst.get_selection()->has_object(object))
         {
           selection = wst.get_selection();
+          if (event->state & GDK_SHIFT_MASK)
+            {
+              selection->remove(object);
+            }
+          else
+            {
+              selection = wst.get_selection();
+            }
         }
       else
         {
-          selection = Selection::create();
-          selection->add(object);
-          wst.set_selection(selection);
+          if (event->state & GDK_SHIFT_MASK)
+            {
+              selection = wst.get_selection();
+              selection->add(object);
+            }
+          else
+            {
+              selection = Selection::create();
+              selection->add(object);
+              wst.set_selection(selection);
+            }
         }
       
       mode = DRAG_MODE;

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
 #include "selection.hpp"
 
 Selection::Selection()
@@ -32,6 +33,20 @@
   objects.push_back(object);
 }
 
+void
+Selection::remove(const ObjectModelHandle& object)
+{
+  Objects::iterator it = std::find(objects.begin(), objects.end(), object);
+  if (it != objects.end())
+    {
+      objects.erase(it);
+    }
+  else
+    {
+      std::cout << "Selection:remove(): object not in selection" << std::endl;
+    }
+}
+
 bool
 Selection::empty() const
 {

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -44,7 +44,10 @@
   ~Selection();
 
   void add(const ObjectModelHandle& object);
+  void remove(const ObjectModelHandle& object);
   
+  int size() const { return objects.size(); }
+
   Selection::iterator begin() { return objects.begin(); }
   Selection::iterator end()   { return objects.end(); }
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -192,7 +192,10 @@
 
       for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
         {
-          sc->control().draw_rect((*i)->get_bounding_box(), Color(0.5f, 0.5f, 1.0f, 1.0f));
+          if (i == selection->begin())
+            sc->control().draw_rect((*i)->get_bounding_box(), Color(1.0f, 1.0f, 1.0f, 1.0f));
+          else
+            sc->control().draw_rect((*i)->get_bounding_box(), Color(0.5f, 0.5f, 1.0f, 1.0f));
         }
 
       if (active_tool)
@@ -244,6 +247,33 @@
   queue_draw();
 }
 
+void
+WindstilleWidget::selection_connect_parent()
+{
+  if (selection->size() >= 2)
+    {
+      ObjectModelHandle parent = *selection->begin();
+
+      Selection::iterator i = selection->begin();
+      ++i;
+      for(; i != selection->end(); ++i)
+        {
+          (*i)->set_parent(parent);
+        }
+    }
+  queue_draw();
+}
+
+void
+WindstilleWidget::selection_clear_parent()
+{
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      (*i)->set_parent(ObjectModelHandle());
+    }
+  queue_draw();
+}
+
 bool
 WindstilleWidget::scroll(GdkEventScroll* event)
 {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-23 19:25:48 UTC (rev 2738)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-23 19:26:14 UTC (rev 2739)
@@ -93,6 +93,9 @@
   void selection_raise_to_top();
   void selection_lower_to_bottom();
 
+  void selection_connect_parent();
+  void selection_clear_parent();
+
   SectorModel* get_sector_model();
   void set_selection(const SelectionHandle& selection);
   SelectionHandle get_selection() const;



From grumbel at mail.berlios.de  Tue Mar 24 01:07:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 01:07:19 +0100
Subject: [Windstille-commit] r2740 - in trunk/windstille: . src/display
	src/editor
Message-ID: <200903240007.n2O07JUY008138@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 01:07:18 +0100 (Tue, 24 Mar 2009)
New Revision: 2740

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Some support for toggling light/color/highlight layers in editor

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/TODO	2009-03-24 00:07:18 UTC (rev 2740)
@@ -485,6 +485,8 @@
 Editor
 ======
 
+* circular parentship causes universe to explode
+
 * add a Rect::contains(Rect) call
 
 * duplicate objects

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/display/scene_context.cpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -69,7 +69,8 @@
                   SceneContext::HIGHLIGHTMAP | 
                   SceneContext::LIGHTMAPSCREEN |
                   SceneContext::BLURMAP),
-      framebuffers(0), //new Framebuffers())
+      framebuffers(0),
+      //framebuffers(new Framebuffers()),
       lightmap(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV)
   {
   }

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -20,11 +20,11 @@
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
 #include <gtkmm/radioaction.h>
-#include <gtkmm/icontheme.h>
 #include <gtkmm/uimanager.h>
 #include <gtkmm/toolbar.h>
 #include <gtkmm/stock.h>
 
+#include "display/scene_context.hpp"
 #include "windstille_widget.hpp"
 #include "about_window.hpp"
 #include "editor_window.hpp"
@@ -74,6 +74,10 @@
     "      <menuitem action='ZoomIn'/>"
     "      <menuitem action='ZoomOut'/>"
     "      <menuitem action='Zoom100'/>"
+    "      <separator/>"
+    "      <menuitem action='ToggleColorLayer'/>"
+    "      <menuitem action='ToggleLightLayer'/>"
+    "      <menuitem action='ToggleHighlightLayer'/>"
     "    </menu>"
     "    <menu action='MenuTools'>"
     "      <menuitem action='SelectTool'/>"
@@ -119,6 +123,10 @@
     "    <toolitem action='SelectTool'/>"
     "    <toolitem action='NodeTool'/>"
     "    <toolitem action='ZoomTool'/>"
+    "    <separator/>"
+    "    <toolitem action='ToggleColorLayer'/>"
+    "    <toolitem action='ToggleLightLayer'/>"
+    "    <toolitem action='ToggleHighlightLayer'/>"
     "  </toolbar>"
     "</ui>";
 
@@ -173,9 +181,21 @@
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
                     sigc::mem_fun(*this, &EditorWindow::on_about_clicked));
 
-  Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
-  icon_theme->append_search_path("data/editor/");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_color_layer = Gtk::ToggleAction::create_with_icon_name("ToggleColorLayer", "color", "Toogle Color Layer", "Toogle Color Layer");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_light_layer = Gtk::ToggleAction::create_with_icon_name("ToggleLightLayer", "light", "Toogle Light Layer", "Toogle Light Layer");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_highlight_layer = Gtk::ToggleAction::create_with_icon_name("ToggleHighlightLayer", "highlight", "Toogle Highlight Layer", "Toogle Highlight Layer");
+  
+  toggle_color_layer->set_active(true);
+  toggle_light_layer->set_active(true);
+  toggle_highlight_layer->set_active(true);
 
+  action_group->add(toggle_color_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (uint32_t)SceneContext::COLORMAP));
+  action_group->add(toggle_light_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_light_layer, (uint32_t)SceneContext::LIGHTMAP));
+  action_group->add(toggle_highlight_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_highlight_layer, (uint32_t)SceneContext::HIGHLIGHTMAP));
+
   // Tools
   action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));
   Gtk::RadioButtonGroup tool_group;
@@ -394,6 +414,27 @@
     }
 }
 
+void
+EditorWindow::toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask)
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      SceneContext& sc = *wst->get_sc();
+
+      if (action->get_active())
+        {
+          sc.set_render_mask(sc.get_render_mask() | mask);
+        }
+      else
+        {
+          sc.set_render_mask(sc.get_render_mask() & (~mask));
+        }
+
+      std::cout << "mask: " << sc.get_render_mask() << std::endl;
+      wst->queue_draw();
+    }
+}
+
 Tool*
 EditorWindow::get_current_tool() const
 {

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -24,6 +24,7 @@
 #include <gtkmm/statusbar.h>
 #include <gtkmm/textview.h>
 #include <gtkmm/paned.h>
+#include <gtkmm/toggleaction.h>
 #include <gtkmm/window.h>
 #include <gtkmm/notebook.h>
 
@@ -91,6 +92,8 @@
   void on_switch_page(GtkNotebookPage* page, guint page_num);
   void on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool*);
 
+  void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask);
+
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();
   

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/main.cpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -21,6 +21,7 @@
 #include <iostream>
 #include <stdexcept>
 #include <sstream>
+#include <gtkmm/icontheme.h>
 #include <gtkmm/main.h>
 #include <gtkglmm.h>
 #include <physfs.h>
@@ -54,6 +55,9 @@
           throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
         }
 
+      Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
+      icon_theme->append_search_path("data/editor/");
+      
       EditorWindow window(glconfig);
       
       window.show_all();

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -18,18 +18,21 @@
 
 #include <iostream>
 
+#include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
 #include "object_model.hpp"
 
 ObjectModelHandle
-ObjectModel::create(const std::string& name, const std::string& path, const Vector2f& pos)
+ObjectModel::create(const std::string& name, const std::string& path, const Vector2f& pos,
+                    MapType type)
 {
-  return ObjectModelHandle(new ObjectModel(name, path, pos));
+  return ObjectModelHandle(new ObjectModel(name, path, pos, type));
 }
 
-ObjectModel::ObjectModel(const std::string& name_, const std::string& path, const Vector2f& rel_pos_)
+ObjectModel::ObjectModel(const std::string& name_, const std::string& path, const Vector2f& rel_pos_, MapType type_)
   : name(name_),
-    rel_pos(rel_pos_)
+    rel_pos(rel_pos_),
+    type(type_)
 {
   std::cout << "Path: " << path << std::endl;
   surface = Surface(path.substr(5)); // cut "data/" part
@@ -80,8 +83,25 @@
     {
       sc.control().draw_line(wo_pos, parent->get_world_pos(), Color(0,0,1, 0.5f));
     }
-     
-  sc.color().draw(surface, wo_pos);
+
+  switch(type)
+    {
+      case COLORMAP:
+        sc.color().draw(surface, wo_pos); 
+        break;
+
+      case LIGHTMAP:
+        sc.light().draw(surface, SurfaceDrawingParameters()
+                        .set_pos(wo_pos)
+                        .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
+        break;
+
+      case HIGHLIGHTMAP:
+        sc.highlight().draw(surface, SurfaceDrawingParameters()
+                            .set_pos(wo_pos)
+                            .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
+        break;
+    }
   sc.control().fill_rect(Rectf(wo_pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
 }
 

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -34,7 +34,9 @@
 class ObjectModel
 {
 public:
-  static ObjectModelHandle create(const std::string& name, const std::string& path, const Vector2f& pos);
+  enum MapType { COLORMAP, LIGHTMAP, HIGHLIGHTMAP };
+  static ObjectModelHandle create(const std::string& name, const std::string& path, const Vector2f& pos,
+                                  MapType type = COLORMAP);
 
 private:
   ObjectModelPtr parent_ptr;
@@ -42,11 +44,12 @@
   std::string name;
   Vector2f    rel_pos;
   Surface     surface;
+  MapType     type;
 
   Vector2f move_offset;
 
 public:
-  ObjectModel(const std::string& name, const std::string& path, const Vector2f& pos);
+  ObjectModel(const std::string& name, const std::string& path, const Vector2f& pos, MapType type);
   ~ObjectModel();
 
   void set_parent(const ObjectModelHandle& parent_);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -43,15 +43,13 @@
 }
 
 void
-SectorModel::add(const std::string& path, const Vector2f& pos)
+SectorModel::add(const ObjectModelHandle& object)  
 {
-  ObjectModelHandle obj = ObjectModel::create("obj:" + path, path, pos);
+  objects.push_back(object);
 
-  objects.push_back(obj);
-
   Gtk::TreeStore::iterator it = objects_tree->append(root_it->children());
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*it)[ObjectTreeColumns::instance().name]      = obj->get_name();
+  (*it)[ObjectTreeColumns::instance().name]      = object->get_name();
   (*it)[ObjectTreeColumns::instance().visible]   = false; 
 }
 

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -67,7 +67,7 @@
 public:
   SectorModel();
 
-  void add(const std::string& path, const Vector2f& obj);
+  void add(const ObjectModelHandle& object);
   void draw(SceneContext& sc);
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -188,6 +188,8 @@
     {
       state.push(*sc);
 
+      sc->light().fill_screen(Color(0.25f, 0.25f, 0.25f));
+
       sector_model->draw(*sc);
 
       for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
@@ -395,7 +397,11 @@
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
 
-  sector_model->add(data.get_data_as_string(), state.screen_to_world(Vector2f(x, y)));
+  ObjectModelHandle object = ObjectModel::create(data.get_data_as_string(),
+                                                 data.get_data_as_string(), 
+                                                 state.screen_to_world(Vector2f(x, y)),
+                                                 ObjectModel::COLORMAP);
+  sector_model->add(object);
 }
 
 void

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-23 19:26:14 UTC (rev 2739)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 00:07:18 UTC (rev 2740)
@@ -100,6 +100,8 @@
   void set_selection(const SelectionHandle& selection);
   SelectionHandle get_selection() const;
 
+  SceneContext* get_sc() const { return sc.get(); }
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Tue Mar 24 01:36:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 01:36:54 +0100
Subject: [Windstille-commit] r2741 - in trunk/windstille: . data/editor
	src/editor
Message-ID: <200903240036.n2O0as18014306@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 01:36:53 +0100 (Tue, 24 Mar 2009)
New Revision: 2741

Added:
   trunk/windstille/data/editor/color.png
   trunk/windstille/data/editor/duplicate.png
   trunk/windstille/data/editor/highlight.png
   trunk/windstille/data/editor/light.png
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/selection.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added object deletion and duplication

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/TODO	2009-03-24 00:36:53 UTC (rev 2741)
@@ -489,8 +489,6 @@
 
 * add a Rect::contains(Rect) call
 
-* duplicate objects
-
 * shift click to add object to selection instead of replace selection
 
 * add ways to toggle light, color, highlight layers on/off in the

Added: trunk/windstille/data/editor/color.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/color.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/duplicate.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/duplicate.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/highlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/highlight.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/light.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/light.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -60,6 +60,9 @@
     "      <menuitem action='Cut'/>"
     "      <menuitem action='Copy'/>"
     "      <menuitem action='Paste'/>"
+    "      <separator/>"
+    "      <menuitem action='Delete'/>"
+    "      <menuitem action='Duplicate'/>"
     "    </menu>"
     "    <menu action='MenuObject'>"
     "      <menuitem action='RaiseObjectToTop'/>"
@@ -101,6 +104,9 @@
     "    <toolitem action='Copy'/>"
     "    <toolitem action='Paste'/>"
     "    <separator/>"
+    "    <toolitem action='Delete'/>"
+    "    <toolitem action='Duplicate'/>"
+    "    <separator/>"
     "    <toolitem action='ZoomIn'/>"
     "    <toolitem action='ZoomOut'/>"
     "    <toolitem action='Zoom100'/>"
@@ -152,6 +158,11 @@
   action_group->add(Gtk::Action::create("Copy",        Gtk::Stock::COPY));
   action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE));
 
+  action_group->add(Gtk::Action::create("Delete",      Gtk::Stock::DELETE),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_delete));
+  action_group->add(Gtk::Action::create_with_icon_name("Duplicate", "duplicate", "Duplicate Object", "Duplicate Object"),
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_duplicate));
+
   action_group->add(Gtk::Action::create("MenuObject",    "_Object"));
   action_group->add(Gtk::Action::create_with_icon_name("RaiseObjectToTop", "object_raise_to_top", "Raise To Top", "Raise Object to Top"),
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_raise_to_top));

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -29,22 +29,26 @@
   return ObjectModelHandle(new ObjectModel(name, path, pos, type));
 }
 
-ObjectModel::ObjectModel(const std::string& name_, const std::string& path, const Vector2f& rel_pos_, MapType type_)
+ObjectModel::ObjectModel(const std::string& name_, const std::string& path_, const Vector2f& rel_pos_, MapType type_)
   : name(name_),
+    path(path_),
     rel_pos(rel_pos_),
     type(type_)
 {
   std::cout << "Path: " << path << std::endl;
   surface = Surface(path.substr(5)); // cut "data/" part
-  
-  rel_pos.x -= surface.get_width()/2;
-  rel_pos.y -= surface.get_height()/2;
 }
 
 ObjectModel::~ObjectModel()
 {
 }
 
+ObjectModelHandle
+ObjectModel::clone() const
+{
+  return ObjectModel::create(name, path, get_world_pos(), type);
+}
+
 void
 ObjectModel::set_parent(const ObjectModelHandle& parent_)
 {
@@ -64,7 +68,8 @@
 Vector2f
 ObjectModel::get_world_pos() const
 {
-  if (ObjectModelHandle parent = parent_ptr.lock())
+  ObjectModelHandle parent = parent_ptr.lock();
+  if (parent.get())
     {
       return rel_pos + move_offset + parent->get_world_pos();
     }
@@ -84,21 +89,24 @@
       sc.control().draw_line(wo_pos, parent->get_world_pos(), Color(0,0,1, 0.5f));
     }
 
+  Vector2f center_offset(-surface.get_width()/2,
+                         -surface.get_height()/2);
+
   switch(type)
     {
       case COLORMAP:
-        sc.color().draw(surface, wo_pos); 
+        sc.color().draw(surface, wo_pos + center_offset); 
         break;
 
       case LIGHTMAP:
         sc.light().draw(surface, SurfaceDrawingParameters()
-                        .set_pos(wo_pos)
+                        .set_pos(wo_pos + center_offset)
                         .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
         break;
 
       case HIGHLIGHTMAP:
         sc.highlight().draw(surface, SurfaceDrawingParameters()
-                            .set_pos(wo_pos)
+                            .set_pos(wo_pos + center_offset)
                             .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
         break;
     }
@@ -108,7 +116,10 @@
 Rectf
 ObjectModel::get_bounding_box() const
 {
-  return Rectf(get_world_pos(), Sizef(surface.get_width(), surface.get_height()));
+  Vector2f center_offset(-surface.get_width()/2,
+                         -surface.get_height()/2);
+
+  return Rectf(get_world_pos() + center_offset, Sizef(surface.get_width(), surface.get_height()));
 }
 
 void

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -42,6 +42,7 @@
   ObjectModelPtr parent_ptr;
 
   std::string name;
+  std::string path;
   Vector2f    rel_pos;
   Surface     surface;
   MapType     type;
@@ -68,6 +69,8 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
+  ObjectModelHandle clone() const;
+
 private:
   ObjectModel(const ObjectModel&);
   ObjectModel& operator=(const ObjectModel&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -54,6 +54,12 @@
 }
 
 void
+SectorModel::remove(const ObjectModelHandle& object)
+{
+  objects.remove(object);
+}
+
+void
 SectorModel::draw(SceneContext& sc)
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -68,6 +68,7 @@
   SectorModel();
 
   void add(const ObjectModelHandle& object);
+  void remove(const ObjectModelHandle& object);
   void draw(SceneContext& sc);
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -55,6 +55,7 @@
   Selection::reverse_iterator rend() { return objects.rend(); }
 
   bool empty() const;
+  void clear() { objects.clear(); }
 
   bool has_object(ObjectModelHandle object) const;
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -276,6 +276,37 @@
   queue_draw();
 }
 
+void
+WindstilleWidget::selection_duplicate()
+{
+  SelectionHandle new_selection = Selection::create();
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      ObjectModelHandle obj = (*i)->clone();
+      
+      // Move clone a litte to make it more obvious that something happened
+      obj->set_rel_pos(obj->get_rel_pos() + Vector2f(32.0f, 32.0f));
+
+      sector_model->add(obj);
+      new_selection->add(obj);
+    }
+  selection = new_selection;
+
+  queue_draw();
+}
+
+void
+WindstilleWidget::selection_delete()
+{
+ for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      sector_model->remove(*i);
+    } 
+ selection->clear();
+
+ queue_draw();
+}
+
 bool
 WindstilleWidget::scroll(GdkEventScroll* event)
 {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 00:07:18 UTC (rev 2740)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 00:36:53 UTC (rev 2741)
@@ -95,6 +95,9 @@
 
   void selection_connect_parent();
   void selection_clear_parent();
+  
+  void selection_duplicate();
+  void selection_delete();
 
   SectorModel* get_sector_model();
   void set_selection(const SelectionHandle& selection);



From grumbel at mail.berlios.de  Tue Mar 24 04:39:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 04:39:45 +0100
Subject: [Windstille-commit] r2742 - in trunk/windstille/src: display editor
Message-ID: <200903240339.n2O3djws018926@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 04:39:44 +0100 (Tue, 24 Mar 2009)
New Revision: 2742

Modified:
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/minimap_widget.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Properly resize lightmap when Window size changes, added 1,2,3 shortcuts to toggle the layer to which objects will be dropped

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-03-24 00:36:53 UTC (rev 2741)
+++ trunk/windstille/src/display/scene_context.cpp	2009-03-24 03:39:44 UTC (rev 2742)
@@ -346,6 +346,13 @@
 void
 SceneContext::render_without_framebuffers()
 {
+  // Resize Lightmap, only needed in the editor, FIXME: move this into a 'set_size()' call
+  if (impl->lightmap.get_width()  != Display::get_width()/LIGHTMAP_DIV ||
+      impl->lightmap.get_height() != Display::get_height()/LIGHTMAP_DIV)
+    {
+      impl->lightmap = Surface(Display::get_width()/LIGHTMAP_DIV, Display::get_height()/LIGHTMAP_DIV);
+    }
+
   if (impl->render_mask & LIGHTMAPSCREEN)
     {
       // Render the lightmap to the framebuffers->lightmap

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-24 00:36:53 UTC (rev 2741)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-24 03:39:44 UTC (rev 2742)
@@ -120,9 +120,6 @@
     "    <toolitem action='ClearParent'/>"
     "    <separator/>"
     "    <toolitem action='Play'/>"
-    "    <separator/>"
-    "    <toolitem action='About'/>"
-    "    <toolitem action='Quit'/>"
     "  </toolbar>"
     ""
     "  <toolbar  name='ToolBox'>"

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-24 00:36:53 UTC (rev 2741)
+++ trunk/windstille/src/editor/main.cpp	2009-03-24 03:39:44 UTC (rev 2742)
@@ -47,8 +47,8 @@
       PHYSFS_addToSearchPath("data/", 0);
       
       Glib::RefPtr<const Gdk::GL::Config> 
-        glconfig = Gdk::GL::Config::create(Gdk::GL::MODE_RGB    |
-                                           Gdk::GL::MODE_DEPTH  |
+        glconfig = Gdk::GL::Config::create(Gdk::GL::MODE_RGB |
+                                           //Gdk::GL::MODE_DEPTH);
                                            Gdk::GL::MODE_DOUBLE);
       if (!glconfig)
         {

Modified: trunk/windstille/src/editor/minimap_widget.cpp
===================================================================
--- trunk/windstille/src/editor/minimap_widget.cpp	2009-03-24 00:36:53 UTC (rev 2741)
+++ trunk/windstille/src/editor/minimap_widget.cpp	2009-03-24 03:39:44 UTC (rev 2742)
@@ -59,8 +59,8 @@
     }
   else
     {
-      glClear(GL_COLOR_BUFFER_BIT);
-      glwindow->swap_buffers();
+      //glClear(GL_COLOR_BUFFER_BIT);
+      //glwindow->swap_buffers();
       glwindow->gl_end();
 
       return true;

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 00:36:53 UTC (rev 2741)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 03:39:44 UTC (rev 2742)
@@ -22,6 +22,7 @@
 #include <gtkmm.h>
 
 #include "sprite2d/sprite.hpp"
+#include "display/display.hpp"
 #include "display/texture_manager.hpp"
 #include "display/surface_manager.hpp"
 #include "display/opengl_state.hpp"
@@ -38,7 +39,8 @@
                                    const Glib::RefPtr<const Gdk::GL::Context>& share_list)
   : sector_model(new SectorModel()),
     active_tool(0),
-    scroll_tool(new ScrollTool())
+    scroll_tool(new ScrollTool()),
+    map_type(ObjectModel::COLORMAP)
 {
   set_gl_capability(glconfig, share_list);
 
@@ -129,6 +131,8 @@
 WindstilleWidget::on_configure_event(GdkEventConfigure* event)
 {
   state.set_size(get_width(), get_height());
+  Display::aspect_size.width  = get_width();
+  Display::aspect_size.height = get_height();
 
   Glib::RefPtr<Gdk::GL::Window> glwindow = get_gl_window();
 
@@ -188,7 +192,7 @@
     {
       state.push(*sc);
 
-      sc->light().fill_screen(Color(0.25f, 0.25f, 0.25f));
+      //sc->light().fill_screen(Color(0.25f, 0.25f, 0.25f));
 
       sector_model->draw(*sc);
 
@@ -380,6 +384,21 @@
 {
   switch(event->keyval)
     {
+      case GDK_1:
+        map_type = ObjectModel::COLORMAP;
+        std::cout << "COLORMAP" << std::endl;
+        break;
+
+      case GDK_2:
+        map_type = ObjectModel::LIGHTMAP;
+        std::cout << "LIGHTMAP" << std::endl;
+        break;
+
+      case GDK_3:
+        map_type = ObjectModel::HIGHLIGHTMAP;
+        std::cout << "HIGHLIGHTMAP" << std::endl;
+        break;
+
       case GDK_Left:
         state.set_pos(state.get_pos() + Vector2f(-100.0f, 0.0f));
         queue_draw();
@@ -431,7 +450,7 @@
   ObjectModelHandle object = ObjectModel::create(data.get_data_as_string(),
                                                  data.get_data_as_string(), 
                                                  state.screen_to_world(Vector2f(x, y)),
-                                                 ObjectModel::COLORMAP);
+                                                 map_type);
   sector_model->add(object);
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 00:36:53 UTC (rev 2741)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 03:39:44 UTC (rev 2742)
@@ -54,6 +54,7 @@
   Tool* active_tool;
   std::auto_ptr<ScrollTool> scroll_tool;
   SelectionHandle selection;
+  ObjectModel::MapType map_type;
 
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,



From grumbel at mail.berlios.de  Tue Mar 24 04:41:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 04:41:04 +0100
Subject: [Windstille-commit] r2743 - trunk/windstille
Message-ID: <200903240341.n2O3f4MN019206@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 04:41:03 +0100 (Tue, 24 Mar 2009)
New Revision: 2743

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-24 03:39:44 UTC (rev 2742)
+++ trunk/windstille/TODO	2009-03-24 03:41:03 UTC (rev 2743)
@@ -485,18 +485,27 @@
 Editor
 ======
 
-* circular parentship causes universe to explode
+* toggle control layer visibility
 
-* add a Rect::contains(Rect) call
+* Display::aspect_size is ugly, turn that into a Display::set_size();
 
-* shift click to add object to selection instead of replace selection
+* implement non-Surface based objects, i.e. a simple Path or a full
+  NavigationGraph
 
-* add ways to toggle light, color, highlight layers on/off in the
-  editor
+* light layer doesn't work in the editor
 
-* add ways to insert objects to light, color, highlight layer (likely
-  best to have objects now for themselves on which layer they belong)
+* reevaluate the current parent/child implementation, since its very
+  tricky currently to move a parent without affecting the child, which
+  might be useful in some situation (i.e. hold Ctrl pressed to move
+  only the parent, not the children)
 
+  - circular parentship causes universe to explode
+  - cloning doesn't preserve parentship  
+
+* ObjectSelector/IconView allows drag&drop even when nothing is selected
+
+* add a Rect::contains(Rect) call and adjust SelectTool
+
 * save bitmask along with object to allow pixel perfect click
   selection
 



From grumbel at mail.berlios.de  Tue Mar 24 19:44:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 19:44:45 +0100
Subject: [Windstille-commit] r2744 - in trunk/windstille: . src src/editor
Message-ID: <200903241844.n2OIijgH014994@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 19:44:44 +0100 (Tue, 24 Mar 2009)
New Revision: 2744

Added:
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Made ObjectModel more abstract, splitted Surface drawing into DecalObjectModel

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/TODO	2009-03-24 18:44:44 UTC (rev 2744)
@@ -485,13 +485,32 @@
 Editor
 ======
 
-* toggle control layer visibility
+* think about Undo/Redo
 
+* add a Blender like layer system:
+ 
+  - layers are a 1 bit in a uint32_t
+  - each Object has a layer mask
+  - when doing a get_selection(Rect(), layermask), objects check
+    against the layer mask and are ignored when they don't match
+  - layers can be visible or hidden, again draw(layermask) is used to
+    check objects for layer membership
+  - objects can belong to multiple layers at once
+  - advantage of this is that layers exist outside the whole sorting
+    logic, so all that stuff can remain unchanged
+
+* add button to toggle control layer visibility
+
 * Display::aspect_size is ugly, turn that into a Display::set_size();
 
-* implement non-Surface based objects, i.e. a simple Path or a full
-  NavigationGraph
+* implement non-Surface based objects:
 
+   - seperate Surface stuff, turn it into a scaleable/rotatable decal quad
+   - simple path
+   - full NavigationGraph
+   - Sprite
+   - Sprite3d / Character
+
 * light layer doesn't work in the editor
 
 * reevaluate the current parent/child implementation, since its very
@@ -502,8 +521,13 @@
   - circular parentship causes universe to explode
   - cloning doesn't preserve parentship  
 
-* ObjectSelector/IconView allows drag&drop even when nothing is selected
+  - parents could be handled like normal objects, but with the
+    SelectTool traversing all children and marking them before the
+    move begings, Ctrl could be used to toggle this behaviour
 
+* ObjectSelector/IconView allows drag&drop even when nothing is
+  selected, leading to a Grumbel dummy image drag&drop without effect
+
 * add a Rect::contains(Rect) call and adjust SelectTool
 
 * save bitmask along with object to allow pixel perfect click

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/SConscript	2009-03-24 18:44:44 UTC (rev 2744)
@@ -242,7 +242,8 @@
         'editor/scroll_tool.cpp',
         'editor/sector_model.cpp',
         'editor/selection.cpp',
-        'editor/object_model.cpp',
+        'editor/object_model.cpp',      
+        'editor/decal_object_model.cpp',
         'editor/control_point.cpp',
         'editor/zoom_tool.cpp',
         'editor/select_tool.cpp',

Added: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-24 18:44:44 UTC (rev 2744)
@@ -0,0 +1,87 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/surface.hpp"
+#include "display/surface_drawing_parameters.hpp"
+#include "display/scene_context.hpp"
+#include "decal_object_model.hpp"
+
+ObjectModelHandle
+DecalObjectModel::create(const std::string& name, const Vector2f& pos,
+                         const std::string& path, MapType type)
+{
+  return ObjectModelHandle(new DecalObjectModel(name, pos, path, type));
+}
+
+DecalObjectModel::DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
+                                   const std::string& path_, MapType type_)
+  : ObjectModel("DecalObjectModel", rel_pos),
+    surface(path_),
+    type(type_)
+{
+}
+
+DecalObjectModel::~DecalObjectModel()
+{
+}
+
+void
+DecalObjectModel::draw(SceneContext& sc)
+{
+  ObjectModel::draw(sc);
+
+  Vector2f wo_pos = get_world_pos();
+  Vector2f center_offset(-surface.get_width()/2,
+                         -surface.get_height()/2);
+
+  switch(type)
+    {
+      case COLORMAP:
+        sc.color().draw(surface, wo_pos + center_offset); 
+        break;
+
+      case LIGHTMAP:
+        sc.light().draw(surface, SurfaceDrawingParameters()
+                        .set_pos(wo_pos + center_offset)
+                        .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
+        break;
+
+      case HIGHLIGHTMAP:
+        sc.highlight().draw(surface, SurfaceDrawingParameters()
+                            .set_pos(wo_pos + center_offset)
+                            .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
+        break;
+    }
+}
+
+Rectf
+DecalObjectModel::get_bounding_box() const
+{
+  Vector2f center_offset(-surface.get_width()/2,
+                         -surface.get_height()/2);
+
+  return Rectf(get_world_pos() + center_offset, Sizef(surface.get_width(), surface.get_height()));
+}
+
+ObjectModelHandle
+DecalObjectModel::clone() const
+{
+  return ObjectModelHandle(new DecalObjectModel(*this));
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/decal_object_model.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-24 18:44:44 UTC (rev 2744)
@@ -0,0 +1,48 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_DECAL_OBJECT_MODEL_HPP
+#define HEADER_WINDSTILLE_EDITOR_DECAL_OBJECT_MODEL_HPP
+
+#include "display/surface.hpp"
+#include "object_model.hpp"
+
+class DecalObjectModel : public ObjectModel
+{
+public:
+  enum MapType { COLORMAP, LIGHTMAP, HIGHLIGHTMAP };
+
+  static ObjectModelHandle create(const std::string& name, const Vector2f& pos, const std::string& path, MapType type);
+
+private:
+  Surface surface;
+  MapType type;
+
+public:
+  DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
+                   const std::string& path_, MapType type_);
+  ~DecalObjectModel();
+
+  void draw(SceneContext& sc);
+  Rectf get_bounding_box() const;
+  ObjectModelHandle clone() const;
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/decal_object_model.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-24 18:44:44 UTC (rev 2744)
@@ -22,33 +22,16 @@
 #include "display/scene_context.hpp"
 #include "object_model.hpp"
 
-ObjectModelHandle
-ObjectModel::create(const std::string& name, const std::string& path, const Vector2f& pos,
-                    MapType type)
-{
-  return ObjectModelHandle(new ObjectModel(name, path, pos, type));
-}
-
-ObjectModel::ObjectModel(const std::string& name_, const std::string& path_, const Vector2f& rel_pos_, MapType type_)
+ObjectModel::ObjectModel(const std::string& name_, const Vector2f& rel_pos_)
   : name(name_),
-    path(path_),
-    rel_pos(rel_pos_),
-    type(type_)
+    rel_pos(rel_pos_)
 {
-  std::cout << "Path: " << path << std::endl;
-  surface = Surface(path.substr(5)); // cut "data/" part
 }
 
 ObjectModel::~ObjectModel()
 {
 }
 
-ObjectModelHandle
-ObjectModel::clone() const
-{
-  return ObjectModel::create(name, path, get_world_pos(), type);
-}
-
 void
 ObjectModel::set_parent(const ObjectModelHandle& parent_)
 {
@@ -89,39 +72,9 @@
       sc.control().draw_line(wo_pos, parent->get_world_pos(), Color(0,0,1, 0.5f));
     }
 
-  Vector2f center_offset(-surface.get_width()/2,
-                         -surface.get_height()/2);
-
-  switch(type)
-    {
-      case COLORMAP:
-        sc.color().draw(surface, wo_pos + center_offset); 
-        break;
-
-      case LIGHTMAP:
-        sc.light().draw(surface, SurfaceDrawingParameters()
-                        .set_pos(wo_pos + center_offset)
-                        .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
-        break;
-
-      case HIGHLIGHTMAP:
-        sc.highlight().draw(surface, SurfaceDrawingParameters()
-                            .set_pos(wo_pos + center_offset)
-                            .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
-        break;
-    }
   sc.control().fill_rect(Rectf(wo_pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
 }
 
-Rectf
-ObjectModel::get_bounding_box() const
-{
-  Vector2f center_offset(-surface.get_width()/2,
-                         -surface.get_height()/2);
-
-  return Rectf(get_world_pos() + center_offset, Sizef(surface.get_width(), surface.get_height()));
-}
-
 void
 ObjectModel::on_move_start()
 {  

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-24 18:44:44 UTC (rev 2744)
@@ -33,28 +33,19 @@
 
 class ObjectModel
 {
-public:
-  enum MapType { COLORMAP, LIGHTMAP, HIGHLIGHTMAP };
-  static ObjectModelHandle create(const std::string& name, const std::string& path, const Vector2f& pos,
-                                  MapType type = COLORMAP);
-
 private:
-  ObjectModelPtr parent_ptr;
-
   std::string name;
-  std::string path;
   Vector2f    rel_pos;
-  Surface     surface;
-  MapType     type;
 
+  ObjectModelPtr parent_ptr;
   Vector2f move_offset;
 
 public:
-  ObjectModel(const std::string& name, const std::string& path, const Vector2f& pos, MapType type);
-  ~ObjectModel();
-
-  void set_parent(const ObjectModelHandle& parent_);
+  ObjectModel();
+  ObjectModel(const std::string& name, const Vector2f& pos);
+  virtual ~ObjectModel();
   
+  void set_parent(const ObjectModelHandle& parent_);
   std::string get_name() const { return name; }
 
   Vector2f get_world_pos() const;
@@ -62,18 +53,13 @@
   Vector2f get_rel_pos() const { return rel_pos; }
   void     set_rel_pos(const Vector2f& rel_pos_)  {  rel_pos = rel_pos_; }
   
-  void draw(SceneContext& sc);
-  Rectf get_bounding_box() const;
-
   void on_move_start();
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
-  ObjectModelHandle clone() const;
-
-private:
-  ObjectModel(const ObjectModel&);
-  ObjectModel& operator=(const ObjectModel&);
+  virtual void draw(SceneContext& sc);
+  virtual Rectf get_bounding_box() const = 0;
+  virtual ObjectModelHandle clone() const =0;
 };
 
 #endif

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 18:44:44 UTC (rev 2744)
@@ -40,7 +40,7 @@
   : sector_model(new SectorModel()),
     active_tool(0),
     scroll_tool(new ScrollTool()),
-    map_type(ObjectModel::COLORMAP)
+    map_type(DecalObjectModel::COLORMAP)
 {
   set_gl_capability(glconfig, share_list);
 
@@ -385,17 +385,17 @@
   switch(event->keyval)
     {
       case GDK_1:
-        map_type = ObjectModel::COLORMAP;
+        map_type = DecalObjectModel::COLORMAP;
         std::cout << "COLORMAP" << std::endl;
         break;
 
       case GDK_2:
-        map_type = ObjectModel::LIGHTMAP;
+        map_type = DecalObjectModel::LIGHTMAP;
         std::cout << "LIGHTMAP" << std::endl;
         break;
 
       case GDK_3:
-        map_type = ObjectModel::HIGHLIGHTMAP;
+        map_type = DecalObjectModel::HIGHLIGHTMAP;
         std::cout << "HIGHLIGHTMAP" << std::endl;
         break;
 
@@ -447,10 +447,10 @@
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
 
-  ObjectModelHandle object = ObjectModel::create(data.get_data_as_string(),
-                                                 data.get_data_as_string(), 
-                                                 state.screen_to_world(Vector2f(x, y)),
-                                                 map_type);
+  ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
+                                                      state.screen_to_world(Vector2f(x, y)),
+                                                      data.get_data_as_string().substr(5), 
+                                                      map_type);
   sector_model->add(object);
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 03:41:03 UTC (rev 2743)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 18:44:44 UTC (rev 2744)
@@ -33,6 +33,7 @@
 #include "display/scene_context.hpp"
 #include "math/vector2f.hpp"
 #include "control_point.hpp"
+#include "decal_object_model.hpp"
 #include "selection.hpp"
 
 class Tool;
@@ -54,7 +55,7 @@
   Tool* active_tool;
   std::auto_ptr<ScrollTool> scroll_tool;
   SelectionHandle selection;
-  ObjectModel::MapType map_type;
+  DecalObjectModel::MapType map_type;
 
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,



From grumbel at mail.berlios.de  Tue Mar 24 19:54:42 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 19:54:42 +0100
Subject: [Windstille-commit] r2745 - in trunk/windstille: data/editor
	src/display src/editor
Message-ID: <200903241854.n2OIsgWG015941@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 19:54:42 +0100 (Tue, 24 Mar 2009)
New Revision: 2745

Added:
   trunk/windstille/data/editor/control.png
Modified:
   trunk/windstille/src/display/scene_context.cpp
   trunk/windstille/src/display/scene_context.hpp
   trunk/windstille/src/editor/editor_window.cpp
Log:
Added button to toggle control layer

Added: trunk/windstille/data/editor/control.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/control.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/display/scene_context.cpp
===================================================================
--- trunk/windstille/src/display/scene_context.cpp	2009-03-24 18:44:44 UTC (rev 2744)
+++ trunk/windstille/src/display/scene_context.cpp	2009-03-24 18:54:42 UTC (rev 2745)
@@ -67,6 +67,7 @@
     : render_mask(SceneContext::COLORMAP |
                   SceneContext::LIGHTMAP | 
                   SceneContext::HIGHLIGHTMAP | 
+                  SceneContext::CONTROLMAP | 
                   SceneContext::LIGHTMAPSCREEN |
                   SceneContext::BLURMAP),
       framebuffers(0),
@@ -301,7 +302,8 @@
       Display::pop_framebuffer();
     }
 
-  impl->control.render(*this);
+  if (impl->render_mask & CONTROLMAP)
+    impl->control.render(*this);
 
   if (1) 
     {
@@ -421,7 +423,8 @@
       impl->highlight.render(*this);
     }  
 
-  impl->control.render(*this);
+  if (impl->render_mask & CONTROLMAP)
+    impl->control.render(*this);
 
   // Clear all DrawingContexts
   impl->color.clear();

Modified: trunk/windstille/src/display/scene_context.hpp
===================================================================
--- trunk/windstille/src/display/scene_context.hpp	2009-03-24 18:44:44 UTC (rev 2744)
+++ trunk/windstille/src/display/scene_context.hpp	2009-03-24 18:54:42 UTC (rev 2745)
@@ -82,8 +82,9 @@
   enum { COLORMAP       = 1<<0,
          LIGHTMAP       = 1<<1,
          HIGHLIGHTMAP   = 1<<2,
-         LIGHTMAPSCREEN = 1<<3,
-         BLURMAP        = 1<<4
+         CONTROLMAP     = 1<<3,
+         LIGHTMAPSCREEN = 1<<4,
+         BLURMAP        = 1<<5
   };
 
   /** The render mask allows to switch of some layers and effects for

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-24 18:44:44 UTC (rev 2744)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-24 18:54:42 UTC (rev 2745)
@@ -81,6 +81,7 @@
     "      <menuitem action='ToggleColorLayer'/>"
     "      <menuitem action='ToggleLightLayer'/>"
     "      <menuitem action='ToggleHighlightLayer'/>"
+    "      <menuitem action='ToggleControlLayer'/>"
     "    </menu>"
     "    <menu action='MenuTools'>"
     "      <menuitem action='SelectTool'/>"
@@ -130,6 +131,7 @@
     "    <toolitem action='ToggleColorLayer'/>"
     "    <toolitem action='ToggleLightLayer'/>"
     "    <toolitem action='ToggleHighlightLayer'/>"
+    "    <toolitem action='ToggleControlLayer'/>"
     "  </toolbar>"
     "</ui>";
 
@@ -192,10 +194,12 @@
   Glib::RefPtr<Gtk::ToggleAction> toggle_color_layer = Gtk::ToggleAction::create_with_icon_name("ToggleColorLayer", "color", "Toogle Color Layer", "Toogle Color Layer");
   Glib::RefPtr<Gtk::ToggleAction> toggle_light_layer = Gtk::ToggleAction::create_with_icon_name("ToggleLightLayer", "light", "Toogle Light Layer", "Toogle Light Layer");
   Glib::RefPtr<Gtk::ToggleAction> toggle_highlight_layer = Gtk::ToggleAction::create_with_icon_name("ToggleHighlightLayer", "highlight", "Toogle Highlight Layer", "Toogle Highlight Layer");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_control_layer = Gtk::ToggleAction::create_with_icon_name("ToggleControlLayer", "control", "Toogle Control Layer", "Toogle Control Layer");
   
   toggle_color_layer->set_active(true);
   toggle_light_layer->set_active(true);
   toggle_highlight_layer->set_active(true);
+  toggle_control_layer->set_active(true);
 
   action_group->add(toggle_color_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (uint32_t)SceneContext::COLORMAP));
@@ -203,6 +207,8 @@
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_light_layer, (uint32_t)SceneContext::LIGHTMAP));
   action_group->add(toggle_highlight_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_highlight_layer, (uint32_t)SceneContext::HIGHLIGHTMAP));
+  action_group->add(toggle_control_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_control_layer, (uint32_t)SceneContext::CONTROLMAP));
 
   // Tools
   action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));



From grumbel at mail.berlios.de  Tue Mar 24 20:57:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 20:57:01 +0100
Subject: [Windstille-commit] r2746 - trunk/windstille/src/tile
Message-ID: <200903241957.n2OJv1BY023944@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 20:57:00 +0100 (Tue, 24 Mar 2009)
New Revision: 2746

Modified:
   trunk/windstille/src/tile/tile_map.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/tile/tile_map.cpp
===================================================================
--- trunk/windstille/src/tile/tile_map.cpp	2009-03-24 18:54:42 UTC (rev 2745)
+++ trunk/windstille/src/tile/tile_map.cpp	2009-03-24 19:57:00 UTC (rev 2746)
@@ -39,17 +39,18 @@
   props.get("z-pos", z_pos);
   props.get("width", width);
   props.get("height", height);
-  if(width <= 0 || height <= 0) {
-    throw std::runtime_error(
-                             "Invalid width or height defined or "
-                             "data defined before width and height");  
-  }
+
+  if(width <= 0 || height <= 0) 
+    {
+      throw std::runtime_error("Invalid width or height defined or "
+                               "data defined before width and height");  
+    }
  
-  if(width <= 0 || height <= 0) {
-    throw std::runtime_error(
-                             "Invalid width or height defined or "
-                             "data defined before width and height");
-  }
+  if(width <= 0 || height <= 0) 
+    {
+      throw std::runtime_error("Invalid width or height defined or "
+                               "data defined before width and height");
+    }
 
   std::string data_filename;
   if (props.get("data-file", data_filename))



From grumbel at mail.berlios.de  Tue Mar 24 20:57:44 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 20:57:44 +0100
Subject: [Windstille-commit] r2747 - trunk/windstille/src/objects
Message-ID: <200903241957.n2OJvi2D024128@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 20:57:44 +0100 (Tue, 24 Mar 2009)
New Revision: 2747

Modified:
   trunk/windstille/src/objects/liquid.cpp
   trunk/windstille/src/objects/liquid.hpp
Log:
Minor cleanup

Modified: trunk/windstille/src/objects/liquid.cpp
===================================================================
--- trunk/windstille/src/objects/liquid.cpp	2009-03-24 19:57:00 UTC (rev 2746)
+++ trunk/windstille/src/objects/liquid.cpp	2009-03-24 19:57:44 UTC (rev 2747)
@@ -21,7 +21,7 @@
 #include "liquid.hpp"
 
 #define SAMPLES 5
-
+
 Liquid::Liquid(FileReader& props)
 {
   int width = 10;
@@ -135,5 +135,5 @@
       std::swap(heightfield2, heightfield1);
     }
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/objects/liquid.hpp
===================================================================
--- trunk/windstille/src/objects/liquid.hpp	2009-03-24 19:57:00 UTC (rev 2746)
+++ trunk/windstille/src/objects/liquid.hpp	2009-03-24 19:57:44 UTC (rev 2747)
@@ -21,8 +21,7 @@
 
 #include <vector>
 #include "engine/entity.hpp"
-
-/** */
+
 class Liquid : public Entity
 {
 private:
@@ -46,7 +45,7 @@
   Liquid (const Liquid&);
   Liquid& operator= (const Liquid&);
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Tue Mar 24 20:58:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 20:58:24 +0100
Subject: [Windstille-commit] r2748 - trunk/windstille/src/editor
Message-ID: <200903241958.n2OJwOIf024223@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 20:58:24 +0100 (Tue, 24 Mar 2009)
New Revision: 2748

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Hooked up button to toggle timeout function

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-24 19:57:44 UTC (rev 2747)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-24 19:58:24 UTC (rev 2748)
@@ -185,7 +185,8 @@
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_in));
   action_group->add(Gtk::Action::create("ZoomOut",     Gtk::Stock::ZOOM_OUT),
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_out));
-  action_group->add(Gtk::Action::create("Play",        Gtk::Stock::MEDIA_PLAY));
+  action_group->add(play_action = Gtk::ToggleAction::create("Play",        Gtk::Stock::MEDIA_PLAY), 
+                    sigc::mem_fun(*this, &EditorWindow::on_play));
 
   action_group->add(Gtk::Action::create("MenuHelp",    "_Help"));
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
@@ -514,5 +515,32 @@
       (wst->*func)();
     }
 }
+
+bool
+EditorWindow::on_timeout()
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->update(0.050f);
+    }
+  return true;
+}
+
+void
+EditorWindow::on_play()
+{
+  if (play_action->get_active())
+    {
+      std::cout << "Play" << std::endl;
+      timeout_connection = Glib::signal_timeout().connect(sigc::mem_fun(*this, &EditorWindow::on_timeout),
+                                                          50,
+                                                          Glib::PRIORITY_DEFAULT);
+    }
+  else
+    {
+      std::cout << "Stop" << std::endl;
+      timeout_connection.disconnect();
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-24 19:57:44 UTC (rev 2747)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-24 19:58:24 UTC (rev 2748)
@@ -66,9 +66,13 @@
   Glib::RefPtr<Gtk::RadioAction> node_tool_action;
   Glib::RefPtr<Gtk::RadioAction> zoom_tool_action;
 
+  Glib::RefPtr<Gtk::ToggleAction> play_action;
+
   std::auto_ptr<SelectTool> select_tool;
   std::auto_ptr<ZoomTool>   zoom_tool;
   Tool* current_tool;
+
+  sigc::connection  timeout_connection;
   
 public:
   EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig);
@@ -82,6 +86,9 @@
   void on_save();
   void on_close();
 
+  bool on_timeout();
+  void on_play();
+
   void on_about_clicked();
   void on_quit();
 

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-24 19:57:44 UTC (rev 2747)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-24 19:58:24 UTC (rev 2748)
@@ -58,6 +58,7 @@
   void on_move_end(const Vector2f& offset);
 
   virtual void draw(SceneContext& sc);
+  virtual void update(float delta) {}
   virtual Rectf get_bounding_box() const = 0;
   virtual ObjectModelHandle clone() const =0;
 };

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 19:57:44 UTC (rev 2747)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 19:58:24 UTC (rev 2748)
@@ -185,6 +185,13 @@
 }
 
 void
+WindstilleWidget::update(float delta)
+{
+  std::cout << this << " WindstilleWidget::update(" << delta << ")" << std::endl;
+  //queue_draw();
+}
+
+void
 WindstilleWidget::draw()
 {
   //std::cout << "Draw" << std::endl;

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 19:57:44 UTC (rev 2747)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 19:58:24 UTC (rev 2748)
@@ -88,6 +88,7 @@
   void on_zoom_100();
   
   void draw();
+  void update(float delta);
 
   void selection_raise();
   void selection_lower();



From grumbel at mail.berlios.de  Tue Mar 24 22:26:59 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 22:26:59 +0100
Subject: [Windstille-commit] r2749 - in trunk/windstille: . data/images src
	src/display src/editor src/sprite2d
Message-ID: <200903242126.n2OLQxvZ032561@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 22:26:58 +0100 (Tue, 24 Mar 2009)
New Revision: 2749

Added:
   trunk/windstille/data/images/explosion.sprite
   trunk/windstille/data/images/hedgehog_die.sprite
   trunk/windstille/src/editor/sprite_object_model.cpp
   trunk/windstille/src/editor/sprite_object_model.hpp
Modified:
   trunk/windstille/NEWS
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/display/surface_manager.hpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/sprite2d/data.cpp
Log:
Created Sprite object and enabled animation

Modified: trunk/windstille/NEWS
===================================================================
--- trunk/windstille/NEWS	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/NEWS	2009-03-24 21:26:58 UTC (rev 2749)
@@ -1,3 +1,8 @@
+Windstille 0.4.0
+=================
+ - new Gtkmm based level editor
+
+
 Windstille 0.3.1
 ================
  - fixed crash when sound is disabled
@@ -12,6 +17,7 @@
  - added skeletal animations along with blender export scripts
  - Wiimote support
 
+
 Windstille 0.3.0
 ================
  - near complete rewrite of the engine

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/TODO	2009-03-24 21:26:58 UTC (rev 2749)
@@ -185,6 +185,9 @@
 Miscellaneous
 =============
 
+* remove GameObject::get_world(), use Sector::current() instead
+  (difference might matter on sector change)
+
 * raise/lower of multiple objects at once is a bit wonky, when objects
   reach the bottom/top they will change their relative order in the
   selection
@@ -485,6 +488,10 @@
 Editor
 ======
 
+* add default background pattern instead of black
+
+* think about load/save
+
 * think about Undo/Redo
 
 * add a Blender like layer system:

Added: trunk/windstille/data/images/explosion.sprite
===================================================================
--- trunk/windstille/data/images/explosion.sprite	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/data/images/explosion.sprite	2009-03-24 21:26:58 UTC (rev 2749)
@@ -0,0 +1,11 @@
+(sprite
+ (action
+  (name "default")
+  (speed 10.0)
+  (scale 2.0)
+  (image-grid
+   (file "explosion.png")
+   (x-size 64)
+   (y-size 98))))
+
+;; EOF ;;
\ No newline at end of file

Added: trunk/windstille/data/images/hedgehog_die.sprite
===================================================================
--- trunk/windstille/data/images/hedgehog_die.sprite	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/data/images/hedgehog_die.sprite	2009-03-24 21:26:58 UTC (rev 2749)
@@ -0,0 +1,13 @@
+(sprite
+ (action
+  (name "default")
+  (speed 10.0)
+  (scale 2.0)
+  (images
+   "hedgehog_die1.png"
+   "hedgehog_die2.png"
+   "hedgehog_die3.png"
+   "hedgehog_die4.png"
+   "hedgehog_die5.png")))
+
+;; EOF ;;

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/SConscript	2009-03-24 21:26:58 UTC (rev 2749)
@@ -233,21 +233,22 @@
 editor_env.ParseConfig('pkg-config --cflags --libs gtkmm-2.4 gtkglextmm-1.2')
 
 editor_env.Program('../windstille-editor', [
+        'editor/about_window.cpp',
+        'editor/control_point.cpp',
+        'editor/decal_object_model.cpp',
+        'editor/editor_window.cpp',
         'editor/main.cpp',
+        'editor/minimap_widget.cpp',
+        'editor/object_model.cpp',      
+        'editor/object_selector.cpp',
         'editor/object_tree.cpp',
-        'editor/object_selector.cpp',
-        'editor/about_window.cpp',
-        'editor/windstille_widget.cpp',
-        'editor/minimap_widget.cpp',
         'editor/scroll_tool.cpp',
         'editor/sector_model.cpp',
+        'editor/select_tool.cpp',
         'editor/selection.cpp',
-        'editor/object_model.cpp',      
-        'editor/decal_object_model.cpp',
-        'editor/control_point.cpp',
+        'editor/sprite_object_model.cpp',
+        'editor/windstille_widget.cpp',
         'editor/zoom_tool.cpp',
-        'editor/select_tool.cpp',
-        'editor/editor_window.cpp'
         ])
 
 # EOF #

Modified: trunk/windstille/src/display/surface_manager.hpp
===================================================================
--- trunk/windstille/src/display/surface_manager.hpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/display/surface_manager.hpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -50,7 +50,7 @@
    * The created surfaces will be added to the surfaces vector.
    */
   void load_grid(const std::string& filename,
-      std::vector<Surface>& surfaces, int width, int height);
+                 std::vector<Surface>& surfaces, int width, int height);
 
   Texture create_texture(const SoftwareSurface& image,
                          float& maxu, float& maxv);

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -80,6 +80,7 @@
 
   void show_minimap(bool v);
   void fill_object_selector(const std::string& directory);
+
 public:
   void on_new();
   void on_open();

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/main.cpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -26,6 +26,7 @@
 #include <gtkglmm.h>
 #include <physfs.h>
 
+#include "sprite2d/manager.hpp"
 #include "editor_window.hpp"
 #include "main.hpp"
 
@@ -55,6 +56,8 @@
           throw std::runtime_error("*** Cannot find any OpenGL-capable visual.");
         }
 
+      sprite2d_manager = new SpriteManager();
+
       Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
       icon_theme->append_search_path("data/editor/");
       

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -68,6 +68,15 @@
     }
 }
 
+void
+SectorModel::update(float delta)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->update(delta);
+    }
+}
+
 ObjectModelHandle
 SectorModel::get_object_at(const Vector2f& pos) const
 {

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -70,6 +70,7 @@
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
   void draw(SceneContext& sc);
+  void update(float delta);
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 

Added: trunk/windstille/src/editor/sprite_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.cpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/sprite_object_model.cpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -0,0 +1,57 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "display/scene_context.hpp"
+#include "sprite_object_model.hpp"
+
+SpriteObjectModel::SpriteObjectModel(const std::string& name_, const Vector2f& rel_pos_,
+                                     const std::string& path_)
+  : ObjectModel(name_, rel_pos_),
+    sprite(path_)
+{
+}
+
+SpriteObjectModel::~SpriteObjectModel()
+{
+}
+
+void
+SpriteObjectModel::draw(SceneContext& sc)
+{
+  sc.color().draw(sprite, get_world_pos());
+}
+
+void
+SpriteObjectModel::update(float delta)
+{
+  sprite.update(delta);
+}
+
+Rectf
+SpriteObjectModel::get_bounding_box() const
+{
+  return Rectf(get_world_pos(), Sizef(sprite.get_width(), sprite.get_height()));
+}
+
+ObjectModelHandle
+SpriteObjectModel::clone() const
+{
+  return ObjectModelHandle(new SpriteObjectModel(*this));
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/sprite_object_model.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/sprite_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.hpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/sprite_object_model.hpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -0,0 +1,43 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_SPRITE_OBJECT_MODEL_HPP
+#define HEADER_WINDSTILLE_EDITOR_SPRITE_OBJECT_MODEL_HPP
+
+#include "sprite2d/sprite.hpp"
+#include "object_model.hpp"
+
+class SpriteObjectModel : public ObjectModel
+{
+private:
+  Sprite sprite;
+
+public:
+  SpriteObjectModel(const std::string& name_, const Vector2f& rel_pos_,
+                    const std::string& path_);
+  ~SpriteObjectModel();
+
+  void draw(SceneContext& sc);
+  void update(float delta);
+  Rectf get_bounding_box() const;
+  ObjectModelHandle clone() const;
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/sprite_object_model.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -31,6 +31,7 @@
 #include "scroll_tool.hpp"
 #include "sector_model.hpp"
 
+#include "sprite_object_model.hpp"
 #include "windstille_widget.hpp"
 
 bool lib_init = false;
@@ -188,7 +189,8 @@
 WindstilleWidget::update(float delta)
 {
   std::cout << this << " WindstilleWidget::update(" << delta << ")" << std::endl;
-  //queue_draw();
+  sector_model->update(delta);
+  queue_draw();
 }
 
 void
@@ -453,6 +455,10 @@
 {
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
+  
+  sector_model->add(ObjectModelHandle(new SpriteObjectModel("SpriteObjectModel", state.screen_to_world(Vector2f(x, y)),
+                                                            "images/hedgehog_die.sprite")));
+                                                            //"images/explosion.sprite")));
 
   ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
                                                       state.screen_to_world(Vector2f(x, y)),

Modified: trunk/windstille/src/sprite2d/data.cpp
===================================================================
--- trunk/windstille/src/sprite2d/data.cpp	2009-03-24 19:58:24 UTC (rev 2748)
+++ trunk/windstille/src/sprite2d/data.cpp	2009-03-24 21:26:58 UTC (rev 2749)
@@ -144,7 +144,7 @@
       grid_reader.get("x-size", x_size);
       grid_reader.get("y-size", y_size);
 
-      if(filename == "" || x_size <= 0 || y_size <= 0)
+      if(filename.empty() || x_size <= 0 || y_size <= 0)
         throw std::runtime_error("Invalid or too few data in image-grid");
       
       SurfaceManager::current()->load_grid(dir + "/" + filename,
@@ -153,11 +153,13 @@
     
   if(action->name == "")
     throw std::runtime_error("No Name defined for action");
-  if(action->surfaces.size() == 0) {
-    std::ostringstream msg;
-    msg << "Action '" << action->name << "' contains no images";
-    throw std::runtime_error(msg.str());
-  }
+
+  if(action->surfaces.size() == 0) 
+    {
+      std::ostringstream msg;
+      msg << "Action '" << action->name << "' contains no images";
+      throw std::runtime_error(msg.str());
+    }
   return action.release();
 }
  



From grumbel at mail.berlios.de  Tue Mar 24 23:13:09 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 24 Mar 2009 23:13:09 +0100
Subject: [Windstille-commit] r2750 - in trunk/windstille: . data/images
	src/display src/editor
Message-ID: <200903242213.n2OMD9vI006065@sheep.berlios.de>

Author: grumbel
Date: 2009-03-24 23:13:08 +0100 (Tue, 24 Mar 2009)
New Revision: 2750

Added:
   trunk/windstille/data/images/chesspattern.png
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Fill background with pattern, instead of black

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-24 21:26:58 UTC (rev 2749)
+++ trunk/windstille/TODO	2009-03-24 22:13:08 UTC (rev 2750)
@@ -185,6 +185,8 @@
 Miscellaneous
 =============
 
+* image-grid in Sprite seems broken
+
 * remove GameObject::get_world(), use Sector::current() instead
   (difference might matter on sector change)
 

Added: trunk/windstille/data/images/chesspattern.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/chesspattern.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-24 21:26:58 UTC (rev 2749)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-24 22:13:08 UTC (rev 2750)
@@ -28,6 +28,7 @@
 #include "display/surface_drawing_parameters.hpp"
 #include "display/vertex_array_drawing_request.hpp"
 #include "display/scene_context.hpp"
+#include "display/display.hpp"
 #include "display/surface.hpp"
 
 struct DrawingRequestsSorter
@@ -37,6 +38,48 @@
   }
 };
 
+class FillScreenPatternDrawingRequest : public DrawingRequest
+{
+private:
+  Texture texture;
+
+public:
+  FillScreenPatternDrawingRequest(const Texture& texture_)
+    : DrawingRequest(Vector2f(0, 0), -1000.0f), 
+      texture(texture_)
+  {}
+
+  virtual ~FillScreenPatternDrawingRequest() {}
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+    state.bind_texture(texture);
+    state.activate();
+
+    float u = Display::get_width() / float(texture.get_width());
+    float v = Display::get_height() / float(texture.get_height());
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(0, 0);
+      glVertex2f(0, 0);
+    
+      glTexCoord2f(u, 0.0f);
+      glVertex2f(Display::get_width(), 0);
+
+      glTexCoord2f(u, v);
+      glVertex2f(Display::get_width(), Display::get_height());
+
+      glTexCoord2f(0.0f, v);
+      glVertex2f(0,  Display::get_height());
+    }
+    glEnd();
+  }
+};
+
 class FillScreenDrawingRequest : public DrawingRequest
 {
 private:
@@ -184,6 +227,12 @@
 }
 
 void
+DrawingContext::fill_pattern(const Texture& pattern)
+{
+  draw(new FillScreenPatternDrawingRequest(pattern));
+}
+
+void
 DrawingContext::rotate(float angle, float x, float y, float z)
 {
   double len2 = x*x+y*y+z*z;

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-03-24 21:26:58 UTC (rev 2749)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-03-24 22:13:08 UTC (rev 2750)
@@ -26,6 +26,7 @@
 #include "color.hpp"
 #include "drawing_request.hpp"
 
+class Texture;
 class Surface;
 class SurfaceDrawingParameters;
 class SceneContext;
@@ -60,6 +61,8 @@
       queue */
   void fill_screen(const Color& color);
 
+  void fill_pattern(const Texture& pattern);
+
   void draw_line(const Vector2f& pos1, const Vector2f& pos2, const Color& color, float z_pos = 0);
 
   void draw_rect(const Rectf& rect, const Color& color, float z_pos = 0);

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2009-03-24 21:26:58 UTC (rev 2749)
+++ trunk/windstille/src/editor/main.cpp	2009-03-24 22:13:08 UTC (rev 2750)
@@ -27,6 +27,7 @@
 #include <physfs.h>
 
 #include "sprite2d/manager.hpp"
+#include "display/texture_manager.hpp"
 #include "editor_window.hpp"
 #include "main.hpp"
 
@@ -57,6 +58,7 @@
         }
 
       sprite2d_manager = new SpriteManager();
+      texture_manager  = new TextureManager();
 
       Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
       icon_theme->append_search_path("data/editor/");

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 21:26:58 UTC (rev 2749)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 22:13:08 UTC (rev 2750)
@@ -114,6 +114,9 @@
       if (!sc.get())
         sc.reset(new SceneContext());
       
+      background_pattern = Texture("images/chesspattern.png");
+      background_pattern.set_wrap(GL_REPEAT);
+
       glViewport(0, 0, get_width(), get_height());
       glMatrixMode(GL_PROJECTION);
       glLoadIdentity();
@@ -200,9 +203,9 @@
   if (sc.get())
     {
       state.push(*sc);
+      
+      sc->color().fill_pattern(background_pattern);
 
-      //sc->light().fill_screen(Color(0.25f, 0.25f, 0.25f));
-
       sector_model->draw(*sc);
 
       for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 21:26:58 UTC (rev 2749)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-24 22:13:08 UTC (rev 2750)
@@ -31,6 +31,7 @@
 
 #include "display/graphic_context_state.hpp"
 #include "display/scene_context.hpp"
+#include "display/texture.hpp"
 #include "math/vector2f.hpp"
 #include "control_point.hpp"
 #include "decal_object_model.hpp"
@@ -56,6 +57,7 @@
   std::auto_ptr<ScrollTool> scroll_tool;
   SelectionHandle selection;
   DecalObjectModel::MapType map_type;
+  Texture background_pattern;
 
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,



From grumbel at mail.berlios.de  Wed Mar 25 03:15:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 03:15:47 +0100
Subject: [Windstille-commit] r2751 - trunk/windstille/src/editor
Message-ID: <200903250215.n2P2FlnM009691@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 03:15:46 +0100 (Wed, 25 Mar 2009)
New Revision: 2751

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Added basic object snapping

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -72,6 +72,8 @@
     "      <separator/>"
     "      <menuitem action='ConnectParent'/>"
     "      <menuitem action='ClearParent'/>"
+    "      <separator/>"
+    "      <menuitem action='Snap'/>"
     "    </menu>"
     "    <menu action='MenuView'>"
     "      <menuitem action='ZoomIn'/>"
@@ -120,6 +122,7 @@
     "    <toolitem action='ConnectParent'/>"
     "    <toolitem action='ClearParent'/>"
     "    <separator/>"
+    "    <toolitem action='Snap'/>"
     "    <toolitem action='Play'/>"
     "  </toolbar>"
     ""
@@ -185,8 +188,10 @@
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_in));
   action_group->add(Gtk::Action::create("ZoomOut",     Gtk::Stock::ZOOM_OUT),
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_out));
-  action_group->add(play_action = Gtk::ToggleAction::create("Play",        Gtk::Stock::MEDIA_PLAY), 
+  action_group->add(play_action = Gtk::ToggleAction::create("Play", Gtk::Stock::MEDIA_PLAY), 
                     sigc::mem_fun(*this, &EditorWindow::on_play));
+  action_group->add(snap_action = Gtk::ToggleAction::create("Snap", Gtk::Stock::MEDIA_PAUSE),
+                    sigc::mem_fun(*this, &EditorWindow::on_snap));
 
   action_group->add(Gtk::Action::create("MenuHelp",    "_Help"));
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
@@ -542,5 +547,18 @@
       timeout_connection.disconnect();
     }
 }
+
+void
+EditorWindow::on_snap()
+{
+  if (snap_action->get_active())
+    {
+      std::cout << "Snap" << std::endl;
+    }
+  else
+    {
+      std::cout << "Snap Off" << std::endl;
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -67,6 +67,7 @@
   Glib::RefPtr<Gtk::RadioAction> zoom_tool_action;
 
   Glib::RefPtr<Gtk::ToggleAction> play_action;
+  Glib::RefPtr<Gtk::ToggleAction> snap_action;
 
   std::auto_ptr<SelectTool> select_tool;
   std::auto_ptr<ZoomTool>   zoom_tool;
@@ -89,6 +90,7 @@
 
   bool on_timeout();
   void on_play();
+  void on_snap();
 
   void on_about_clicked();
   void on_quit();

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -92,5 +92,87 @@
   rel_pos += move_offset;
   move_offset = Vector2f(0,0);
 }
+
+static bool overlap(float l1, float r1,
+             float l2, float r2)
+{
+  if (r1 < l2)
+    return false;
+  else if (r2 < l1)
+    return false;
+  else
+    return true;
+}
+
+bool
+ObjectModel::snap_object(const Rectf& in, Vector2f& snap_offset_out) const
+{
+  const Rectf& rect = get_bounding_box();
+  float snap_threshold = 32.0f;
+  bool  snapped = false;
+
+  // Reset offset to zero, since it might not be
+  Vector2f snap_offset(0,0);
+
+  float left_dist   = fabs(rect.left - in.right);
+  float right_dist  = fabs(rect.right - in.left);
+  float top_dist    = fabs(rect.top - in.bottom);
+  float bottom_dist = fabs(rect.bottom - in.top);
+  float x_dist = std::min(left_dist, right_dist);
+  float y_dist = std::min(top_dist, bottom_dist);
+
+  if (x_dist < y_dist)
+    { // closer on the X axis
+      if (overlap(rect.top, rect.bottom,
+                  in.top, in.bottom))
+        {
+          if (left_dist < right_dist)
+            { // snap to left edge
+              if (left_dist < snap_threshold)
+                {
+                  snap_offset.x = rect.left - in.right;
+                  snapped = true;
+                
+                }
+            }
+          else
+            { // snap to right edge
+              if (right_dist < snap_threshold)
+                {
+                  snap_offset.x = rect.right - in.left;
+                  snapped = true;
+                }
+            }
+        }
+    }
+  else
+    { // closer on the Y axis
+      if (overlap(rect.left, rect.right,
+                  in.left, in.right))
+        {
+          if (top_dist < bottom_dist)
+            { // snap to top edge
+              if (top_dist < snap_threshold)
+                {
+                  snap_offset.y = rect.top - in.bottom;
+                  snapped = true;
+                }
+            }
+          else
+            { // snap to bottom edge
+              if (bottom_dist < snap_threshold)
+                {
+                  snap_offset.y = rect.bottom - in.top;
+                  snapped = true;
+                }
+            }
+        }      
+    }
+
+  if (snapped)
+    snap_offset_out = snap_offset;
+
+  return snapped;
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -57,6 +57,8 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
+  bool snap_object(const Rectf& rect, Vector2f& snap_offset) const;
+
   virtual void draw(SceneContext& sc);
   virtual void update(float delta) {}
   virtual Rectf get_bounding_box() const = 0;

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <limits>
 #include <assert.h>
 #include <iostream>
 #include <gdkmm/pixbuf.h>
@@ -176,6 +177,34 @@
   objects.remove(object);
   objects.push_front(object); 
 }
+
+bool
+SectorModel::snap_object(const Rectf& rect, Vector2f& best_snap_offset) const
+{
+  float min_offset = std::numeric_limits<float>::max();
+  bool snap_offset_found = false;
+
+  // Find the smallest snap offset
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      Vector2f snap_offset;
+
+      if ((*i)->snap_object(rect, snap_offset))
+        {
+          if (snap_offset.length() < min_offset)
+            {
+              min_offset = snap_offset.length();
+
+              best_snap_offset  = snap_offset;
+              snap_offset_found = true;
+            }
+        }
+    }
+
+  std::cout << "SnapTest: " << snap_offset_found << std::endl;
+
+  return snap_offset_found;
+}
 
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -90,6 +90,8 @@
   void raise(ObjectModelHandle object);
   void lower(ObjectModelHandle object);
 
+  bool snap_object(const Rectf& rect, Vector2f& snap_offset) const;
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -86,6 +86,15 @@
   if (mode == DRAG_MODE)
     {
       selection->on_move_update(pos - click_pos);
+
+      if (selection->size() == 1)
+        {
+          Vector2f snap_offset;
+          if (wst.get_sector_model()->snap_object((*selection->begin())->get_bounding_box(), snap_offset))
+            {
+              selection->on_move_update(pos - click_pos + snap_offset);              
+            }
+        }
     }
   else if (mode == SELECT_MODE)
     {

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-24 22:13:08 UTC (rev 2750)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 02:15:46 UTC (rev 2751)
@@ -459,9 +459,10 @@
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
   
-  sector_model->add(ObjectModelHandle(new SpriteObjectModel("SpriteObjectModel", state.screen_to_world(Vector2f(x, y)),
-                                                            "images/hedgehog_die.sprite")));
-                                                            //"images/explosion.sprite")));
+  if (0)
+    sector_model->add(ObjectModelHandle(new SpriteObjectModel("SpriteObjectModel", state.screen_to_world(Vector2f(x, y)),
+                                                              "images/hedgehog_die.sprite")));
+  //"images/explosion.sprite")));
 
   ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
                                                       state.screen_to_world(Vector2f(x, y)),



From grumbel at mail.berlios.de  Wed Mar 25 03:30:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 03:30:48 +0100
Subject: [Windstille-commit] r2752 - trunk/windstille/src/editor
Message-ID: <200903250230.n2P2Umdg014492@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 03:30:47 +0100 (Wed, 25 Mar 2009)
New Revision: 2752

Modified:
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/sector_model.cpp
Log:
Added alignment snapping

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 02:15:46 UTC (rev 2751)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 02:30:47 UTC (rev 2752)
@@ -108,7 +108,7 @@
 ObjectModel::snap_object(const Rectf& in, Vector2f& snap_offset_out) const
 {
   const Rectf& rect = get_bounding_box();
-  float snap_threshold = 32.0f;
+  float snap_threshold = 16.0f;
   bool  snapped = false;
 
   // Reset offset to zero, since it might not be
@@ -126,13 +126,21 @@
       if (overlap(rect.top, rect.bottom,
                   in.top, in.bottom))
         {
+          float y_snap = 0.0f;
+
+          if (fabs(rect.top - in.top) < snap_threshold)
+            y_snap = rect.top - in.top;
+
+          if (fabs(rect.bottom - in.bottom) < snap_threshold)
+            y_snap = rect.bottom - in.bottom;
+
           if (left_dist < right_dist)
             { // snap to left edge
               if (left_dist < snap_threshold)
                 {
                   snap_offset.x = rect.left - in.right;
+                  snap_offset.y = y_snap;
                   snapped = true;
-                
                 }
             }
           else
@@ -140,6 +148,7 @@
               if (right_dist < snap_threshold)
                 {
                   snap_offset.x = rect.right - in.left;
+                  snap_offset.y = y_snap;
                   snapped = true;
                 }
             }
@@ -150,10 +159,19 @@
       if (overlap(rect.left, rect.right,
                   in.left, in.right))
         {
+          float x_snap = 0.0f;
+
+          if (fabs(rect.left - in.left) < snap_threshold)
+            x_snap = rect.left - in.left;
+
+          if (fabs(rect.right - in.right) < snap_threshold)
+            x_snap = rect.right - in.right;
+
           if (top_dist < bottom_dist)
             { // snap to top edge
               if (top_dist < snap_threshold)
                 {
+                  snap_offset.x = x_snap;
                   snap_offset.y = rect.top - in.bottom;
                   snapped = true;
                 }
@@ -162,6 +180,7 @@
             { // snap to bottom edge
               if (bottom_dist < snap_threshold)
                 {
+                  snap_offset.x = x_snap;
                   snap_offset.y = rect.bottom - in.top;
                   snapped = true;
                 }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 02:15:46 UTC (rev 2751)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 02:30:47 UTC (rev 2752)
@@ -201,8 +201,6 @@
         }
     }
 
-  std::cout << "SnapTest: " << snap_offset_found << std::endl;
-
   return snap_offset_found;
 }
 



From grumbel at mail.berlios.de  Wed Mar 25 04:02:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 04:02:04 +0100
Subject: [Windstille-commit] r2753 - trunk/windstille/src/editor
Message-ID: <200903250302.n2P324Gh018060@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 04:02:03 +0100 (Wed, 25 Mar 2009)
New Revision: 2753

Added:
   trunk/windstille/src/editor/snap_data.hpp
Modified:
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
Log:
Added SnapData object, snap mechanic itself is unchanged

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 02:30:47 UTC (rev 2752)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:02:03 UTC (rev 2753)
@@ -104,15 +104,14 @@
     return true;
 }
 
-bool
-ObjectModel::snap_object(const Rectf& in, Vector2f& snap_offset_out) const
+SnapData
+ObjectModel::snap_object(const Rectf& in) const
 {
   const Rectf& rect = get_bounding_box();
   float snap_threshold = 16.0f;
-  bool  snapped = false;
-
+  
   // Reset offset to zero, since it might not be
-  Vector2f snap_offset(0,0);
+  SnapData snap;
 
   float left_dist   = fabs(rect.left - in.right);
   float right_dist  = fabs(rect.right - in.left);
@@ -138,18 +137,20 @@
             { // snap to left edge
               if (left_dist < snap_threshold)
                 {
-                  snap_offset.x = rect.left - in.right;
-                  snap_offset.y = y_snap;
-                  snapped = true;
+                  snap.offset.x = rect.left - in.right;
+                  snap.offset.y = y_snap;
+                  snap.x_set = true;
+                  snap.y_set = true;
                 }
             }
           else
             { // snap to right edge
               if (right_dist < snap_threshold)
                 {
-                  snap_offset.x = rect.right - in.left;
-                  snap_offset.y = y_snap;
-                  snapped = true;
+                  snap.offset.x = rect.right - in.left;
+                  snap.offset.y = y_snap;
+                  snap.x_set = true;
+                  snap.y_set = true;
                 }
             }
         }
@@ -171,27 +172,26 @@
             { // snap to top edge
               if (top_dist < snap_threshold)
                 {
-                  snap_offset.x = x_snap;
-                  snap_offset.y = rect.top - in.bottom;
-                  snapped = true;
+                  snap.offset.x = x_snap;
+                  snap.offset.y = rect.top - in.bottom;
+                  snap.x_set = true;
+                  snap.y_set = true;
                 }
             }
           else
             { // snap to bottom edge
               if (bottom_dist < snap_threshold)
                 {
-                  snap_offset.x = x_snap;
-                  snap_offset.y = rect.bottom - in.top;
-                  snapped = true;
+                  snap.offset.x = x_snap;
+                  snap.offset.y = rect.bottom - in.top;
+                  snap.x_set = true;
+                  snap.y_set = true;
                 }
             }
         }      
     }
 
-  if (snapped)
-    snap_offset_out = snap_offset;
-
-  return snapped;
+  return snap;
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-25 02:30:47 UTC (rev 2752)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-25 03:02:03 UTC (rev 2753)
@@ -25,6 +25,7 @@
 
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
+#include "snap_data.hpp"
 
 class ObjectModel;
 class SceneContext;
@@ -57,7 +58,7 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
-  bool snap_object(const Rectf& rect, Vector2f& snap_offset) const;
+  SnapData snap_object(const Rectf& rect) const;
 
   virtual void draw(SceneContext& sc);
   virtual void update(float delta) {}

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 02:30:47 UTC (rev 2752)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 03:02:03 UTC (rev 2753)
@@ -178,30 +178,29 @@
   objects.push_front(object); 
 }
 
-bool
-SectorModel::snap_object(const Rectf& rect, Vector2f& best_snap_offset) const
+SnapData
+SectorModel::snap_object(const Rectf& rect) const
 {
   float min_offset = std::numeric_limits<float>::max();
-  bool snap_offset_found = false;
+  SnapData best_snap;
 
   // Find the smallest snap offset
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      Vector2f snap_offset;
+      SnapData snap = (*i)->snap_object(rect);
 
-      if ((*i)->snap_object(rect, snap_offset))
+      if (snap.x_set || snap.y_set)
         {
-          if (snap_offset.length() < min_offset)
+          if (snap.offset.length() < min_offset)
             {
-              min_offset = snap_offset.length();
+              min_offset = snap.offset.length();
 
-              best_snap_offset  = snap_offset;
-              snap_offset_found = true;
+              best_snap = snap;
             }
         }
     }
 
-  return snap_offset_found;
+  return best_snap;
 }
 
 void

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 02:30:47 UTC (rev 2752)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 03:02:03 UTC (rev 2753)
@@ -90,7 +90,7 @@
   void raise(ObjectModelHandle object);
   void lower(ObjectModelHandle object);
 
-  bool snap_object(const Rectf& rect, Vector2f& snap_offset) const;
+  SnapData snap_object(const Rectf& rect) const;
 
 private:
   SectorModel(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 02:30:47 UTC (rev 2752)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:02:03 UTC (rev 2753)
@@ -89,10 +89,11 @@
 
       if (selection->size() == 1)
         {
-          Vector2f snap_offset;
-          if (wst.get_sector_model()->snap_object((*selection->begin())->get_bounding_box(), snap_offset))
+          SnapData snap = wst.get_sector_model()->snap_object((*selection->begin())->get_bounding_box());
+          
+          if (snap.x_set || snap.y_set)
             {
-              selection->on_move_update(pos - click_pos + snap_offset);              
+              selection->on_move_update(pos - click_pos + snap.offset);
             }
         }
     }

Added: trunk/windstille/src/editor/snap_data.hpp
===================================================================
--- trunk/windstille/src/editor/snap_data.hpp	2009-03-25 02:30:47 UTC (rev 2752)
+++ trunk/windstille/src/editor/snap_data.hpp	2009-03-25 03:02:03 UTC (rev 2753)
@@ -0,0 +1,38 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_SNAP_DATA_HPP
+#define HEADER_WINDSTILLE_EDITOR_SNAP_DATA_HPP
+
+class SnapData
+{
+public:
+  Vector2f offset;
+  bool x_set;
+  bool y_set;
+  
+  SnapData() 
+    : offset(0, 0),
+      x_set(false),
+      y_set(false)
+  {}
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/snap_data.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Wed Mar 25 04:11:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 04:11:46 +0100
Subject: [Windstille-commit] r2754 - trunk/windstille/src/editor
Message-ID: <200903250311.n2P3BkkZ018999@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 04:11:45 +0100 (Wed, 25 Mar 2009)
New Revision: 2754

Modified:
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/select_tool.cpp
Log:
Snapping to multiple objects at once works now

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:02:03 UTC (rev 2753)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:11:45 UTC (rev 2754)
@@ -128,10 +128,16 @@
           float y_snap = 0.0f;
 
           if (fabs(rect.top - in.top) < snap_threshold)
-            y_snap = rect.top - in.top;
+            {
+              y_snap = rect.top - in.top;
+              snap.y_set = true;
+            }
 
           if (fabs(rect.bottom - in.bottom) < snap_threshold)
-            y_snap = rect.bottom - in.bottom;
+            {
+              y_snap = rect.bottom - in.bottom;
+              snap.y_set = true;
+            }
 
           if (left_dist < right_dist)
             { // snap to left edge
@@ -140,7 +146,6 @@
                   snap.offset.x = rect.left - in.right;
                   snap.offset.y = y_snap;
                   snap.x_set = true;
-                  snap.y_set = true;
                 }
             }
           else
@@ -150,7 +155,6 @@
                   snap.offset.x = rect.right - in.left;
                   snap.offset.y = y_snap;
                   snap.x_set = true;
-                  snap.y_set = true;
                 }
             }
         }
@@ -163,10 +167,16 @@
           float x_snap = 0.0f;
 
           if (fabs(rect.left - in.left) < snap_threshold)
-            x_snap = rect.left - in.left;
+            {
+              x_snap = rect.left - in.left;
+              snap.x_set = true;
+            }
 
           if (fabs(rect.right - in.right) < snap_threshold)
-            x_snap = rect.right - in.right;
+            {
+              x_snap = rect.right - in.right;
+              snap.x_set = true;
+            }
 
           if (top_dist < bottom_dist)
             { // snap to top edge
@@ -174,7 +184,6 @@
                 {
                   snap.offset.x = x_snap;
                   snap.offset.y = rect.top - in.bottom;
-                  snap.x_set = true;
                   snap.y_set = true;
                 }
             }
@@ -184,7 +193,6 @@
                 {
                   snap.offset.x = x_snap;
                   snap.offset.y = rect.bottom - in.top;
-                  snap.x_set = true;
                   snap.y_set = true;
                 }
             }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 03:02:03 UTC (rev 2753)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 03:11:45 UTC (rev 2754)
@@ -181,7 +181,8 @@
 SnapData
 SectorModel::snap_object(const Rectf& rect) const
 {
-  float min_offset = std::numeric_limits<float>::max();
+  float min_x_offset = std::numeric_limits<float>::max();
+  float min_y_offset = std::numeric_limits<float>::max();
   SnapData best_snap;
 
   // Find the smallest snap offset
@@ -189,13 +190,23 @@
     {
       SnapData snap = (*i)->snap_object(rect);
 
-      if (snap.x_set || snap.y_set)
+      if (snap.x_set)
         {
-          if (snap.offset.length() < min_offset)
+          if (snap.offset.x < min_x_offset)
             {
-              min_offset = snap.offset.length();
+              min_x_offset = snap.offset.x;
+              best_snap.offset.x = snap.offset.x;
+              best_snap.x_set = true;
+            }
+        }
 
-              best_snap = snap;
+      if (snap.y_set)
+        {
+          if (snap.offset.y < min_y_offset)
+            {
+              min_y_offset = snap.offset.y;
+              best_snap.offset.y = snap.offset.y;
+              best_snap.y_set = true;
             }
         }
     }

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:02:03 UTC (rev 2753)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:11:45 UTC (rev 2754)
@@ -92,9 +92,7 @@
           SnapData snap = wst.get_sector_model()->snap_object((*selection->begin())->get_bounding_box());
           
           if (snap.x_set || snap.y_set)
-            {
-              selection->on_move_update(pos - click_pos + snap.offset);
-            }
+            selection->on_move_update(pos - click_pos + snap.offset);
         }
     }
   else if (mode == SELECT_MODE)



From grumbel at mail.berlios.de  Wed Mar 25 04:47:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 04:47:34 +0100
Subject: [Windstille-commit] r2755 - trunk/windstille/src/editor
Message-ID: <200903250347.n2P3lY4a022050@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 04:47:33 +0100 (Wed, 25 Mar 2009)
New Revision: 2755

Modified:
   trunk/windstille/src/editor/object_model.cpp
Log:
Minor cleanup

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:11:45 UTC (rev 2754)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:47:33 UTC (rev 2755)
@@ -94,7 +94,7 @@
 }
 
 static bool overlap(float l1, float r1,
-             float l2, float r2)
+                    float l2, float r2)
 {
   if (r1 < l2)
     return false;
@@ -122,8 +122,7 @@
 
   if (x_dist < y_dist)
     { // closer on the X axis
-      if (overlap(rect.top, rect.bottom,
-                  in.top, in.bottom))
+      if (overlap(rect.top, rect.bottom,  in.top, in.bottom))
         {
           float y_snap = 0.0f;
 
@@ -161,8 +160,7 @@
     }
   else
     { // closer on the Y axis
-      if (overlap(rect.left, rect.right,
-                  in.left, in.right))
+      if (overlap(rect.left, rect.right,  in.left, in.right))
         {
           float x_snap = 0.0f;
 



From grumbel at mail.berlios.de  Wed Mar 25 04:47:54 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 04:47:54 +0100
Subject: [Windstille-commit] r2756 - trunk/windstille/src/editor
Message-ID: <200903250347.n2P3ls1f022080@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 04:47:54 +0100 (Wed, 25 Mar 2009)
New Revision: 2756

Modified:
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
Log:
Make sure that we don't try to snap an object to itself

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 03:47:33 UTC (rev 2755)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 03:47:54 UTC (rev 2756)
@@ -179,34 +179,39 @@
 }
 
 SnapData
-SectorModel::snap_object(const Rectf& rect) const
+SectorModel::snap_object(const ObjectModelHandle& object) const
 {
   float min_x_offset = std::numeric_limits<float>::max();
   float min_y_offset = std::numeric_limits<float>::max();
   SnapData best_snap;
 
+  const Rectf& rect = object->get_bounding_box();
+
   // Find the smallest snap offset
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      SnapData snap = (*i)->snap_object(rect);
+      if (object != *i)
+        {
+          SnapData snap = (*i)->snap_object(rect);
 
-      if (snap.x_set)
-        {
-          if (snap.offset.x < min_x_offset)
+          if (snap.x_set)
             {
-              min_x_offset = snap.offset.x;
-              best_snap.offset.x = snap.offset.x;
-              best_snap.x_set = true;
+              if (snap.offset.x < min_x_offset)
+                {
+                  min_x_offset = snap.offset.x;
+                  best_snap.offset.x = snap.offset.x;
+                  best_snap.x_set = true;
+                }
             }
-        }
 
-      if (snap.y_set)
-        {
-          if (snap.offset.y < min_y_offset)
+          if (snap.y_set)
             {
-              min_y_offset = snap.offset.y;
-              best_snap.offset.y = snap.offset.y;
-              best_snap.y_set = true;
+              if (snap.offset.y < min_y_offset)
+                {
+                  min_y_offset = snap.offset.y;
+                  best_snap.offset.y = snap.offset.y;
+                  best_snap.y_set = true;
+                }
             }
         }
     }

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 03:47:33 UTC (rev 2755)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 03:47:54 UTC (rev 2756)
@@ -90,7 +90,7 @@
   void raise(ObjectModelHandle object);
   void lower(ObjectModelHandle object);
 
-  SnapData snap_object(const Rectf& rect) const;
+  SnapData snap_object(const ObjectModelHandle& object) const;
 
 private:
   SectorModel(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:47:33 UTC (rev 2755)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:47:54 UTC (rev 2756)
@@ -89,7 +89,7 @@
 
       if (selection->size() == 1)
         {
-          SnapData snap = wst.get_sector_model()->snap_object((*selection->begin())->get_bounding_box());
+          SnapData snap = wst.get_sector_model()->snap_object(*selection->begin());
           
           if (snap.x_set || snap.y_set)
             selection->on_move_update(pos - click_pos + snap.offset);



From grumbel at mail.berlios.de  Wed Mar 25 04:55:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 04:55:02 +0100
Subject: [Windstille-commit] r2757 - trunk/windstille/src/editor
Message-ID: <200903250355.n2P3t2qJ022790@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 04:55:01 +0100 (Wed, 25 Mar 2009)
New Revision: 2757

Modified:
   trunk/windstille/src/editor/object_model.cpp
Log:
Update offset properly

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:47:54 UTC (rev 2756)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 03:55:01 UTC (rev 2757)
@@ -89,7 +89,7 @@
 void
 ObjectModel::on_move_end(const Vector2f& offset)
 {
-  rel_pos += move_offset;
+  rel_pos += offset;
   move_offset = Vector2f(0,0);
 }
 



From grumbel at mail.berlios.de  Wed Mar 25 04:55:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 04:55:24 +0100
Subject: [Windstille-commit] r2758 - trunk/windstille/src/editor
Message-ID: <200903250355.n2P3tOnI022843@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 04:55:24 +0100 (Wed, 25 Mar 2009)
New Revision: 2758

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Disabled snap button, moved snapping to Ctrl modifier

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 03:55:01 UTC (rev 2757)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 03:55:24 UTC (rev 2758)
@@ -73,7 +73,7 @@
     "      <menuitem action='ConnectParent'/>"
     "      <menuitem action='ClearParent'/>"
     "      <separator/>"
-    "      <menuitem action='Snap'/>"
+    //"      <menuitem action='Snap'/>"
     "    </menu>"
     "    <menu action='MenuView'>"
     "      <menuitem action='ZoomIn'/>"
@@ -122,7 +122,7 @@
     "    <toolitem action='ConnectParent'/>"
     "    <toolitem action='ClearParent'/>"
     "    <separator/>"
-    "    <toolitem action='Snap'/>"
+    //"    <toolitem action='Snap'/>"
     "    <toolitem action='Play'/>"
     "  </toolbar>"
     ""

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:55:01 UTC (rev 2757)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:55:24 UTC (rev 2758)
@@ -87,7 +87,7 @@
     {
       selection->on_move_update(pos - click_pos);
 
-      if (selection->size() == 1)
+      if ((event->state & GDK_CONTROL_MASK) && selection->size() == 1)
         {
           SnapData snap = wst.get_sector_model()->snap_object(*selection->begin());
           
@@ -115,6 +115,14 @@
   if (mode == DRAG_MODE)
     {
       selection->on_move_end(pos - click_pos);
+
+      if ((event->state & GDK_CONTROL_MASK) && selection->size() == 1)
+        {
+          SnapData snap = wst.get_sector_model()->snap_object(*selection->begin());
+          
+          if (snap.x_set || snap.y_set)
+            selection->on_move_update(pos - click_pos + snap.offset);
+        }
     }
   else if (mode == SELECT_MODE)
     {

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 03:55:01 UTC (rev 2757)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 03:55:24 UTC (rev 2758)
@@ -432,7 +432,7 @@
         break;
     }
 
-  std::cout << state.get_pos() << std::endl;
+  //std::cout << state.get_pos() << std::endl;
 
   return true;
 }



From grumbel at mail.berlios.de  Wed Mar 25 05:00:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 05:00:46 +0100
Subject: [Windstille-commit] r2759 - trunk/windstille/src/editor
Message-ID: <200903250400.n2P40kEm024664@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 05:00:46 +0100 (Wed, 25 Mar 2009)
New Revision: 2759

Modified:
   trunk/windstille/src/editor/select_tool.cpp
Log:
Fixed mixup between on_move_update and on_move_end

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 03:55:24 UTC (rev 2758)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 04:00:46 UTC (rev 2759)
@@ -114,15 +114,18 @@
   // Select objects
   if (mode == DRAG_MODE)
     {
-      selection->on_move_end(pos - click_pos);
+      selection->on_move_update(pos - click_pos);
 
+      Vector2f p = pos - click_pos;
       if ((event->state & GDK_CONTROL_MASK) && selection->size() == 1)
         {
           SnapData snap = wst.get_sector_model()->snap_object(*selection->begin());
           
           if (snap.x_set || snap.y_set)
-            selection->on_move_update(pos - click_pos + snap.offset);
+            p += snap.offset;
         }
+      
+      selection->on_move_end(p);
     }
   else if (mode == SELECT_MODE)
     {



From grumbel at mail.berlios.de  Wed Mar 25 05:16:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 05:16:17 +0100
Subject: [Windstille-commit] r2760 - trunk/windstille
Message-ID: <200903250416.n2P4GHrX026397@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 05:16:15 +0100 (Wed, 25 Mar 2009)
New Revision: 2760

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-25 04:00:46 UTC (rev 2759)
+++ trunk/windstille/TODO	2009-03-25 04:16:15 UTC (rev 2760)
@@ -490,8 +490,6 @@
 Editor
 ======
 
-* add default background pattern instead of black
-
 * think about load/save
 
 * think about Undo/Redo
@@ -508,8 +506,6 @@
   - advantage of this is that layers exist outside the whole sorting
     logic, so all that stuff can remain unchanged
 
-* add button to toggle control layer visibility
-
 * Display::aspect_size is ugly, turn that into a Display::set_size();
 
 * implement non-Surface based objects:
@@ -520,8 +516,6 @@
    - Sprite
    - Sprite3d / Character
 
-* light layer doesn't work in the editor
-
 * reevaluate the current parent/child implementation, since its very
   tricky currently to move a parent without affecting the child, which
   might be useful in some situation (i.e. hold Ctrl pressed to move
@@ -542,9 +536,12 @@
 * save bitmask along with object to allow pixel perfect click
   selection
 
-* add object snapping (snap to other objects bounding boxes, snap to
-  custom snap-points, snap to integer positions, snap to grid)
+* add more ways to snapping objects:
 
+  - snap to snap-points
+  - snap to integer positions
+  - snap to grid
+
 * add grid
 
 * add a way to draw objects to DrawingContext that only does



From grumbel at mail.berlios.de  Wed Mar 25 06:59:14 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 06:59:14 +0100
Subject: [Windstille-commit] r2761 - in trunk/windstille: . src/editor
Message-ID: <200903250559.n2P5xEj1000123@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 06:59:13 +0100 (Wed, 25 Mar 2009)
New Revision: 2761

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/sprite_object_model.cpp
   trunk/windstille/src/editor/sprite_object_model.hpp
Log:
Added very basic file writing

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/TODO	2009-03-25 05:59:13 UTC (rev 2761)
@@ -185,6 +185,9 @@
 Miscellaneous
 =============
 
+* make FileReader work more like lisp::Writer, i.e. less functional,
+  keeping the current cursor position
+
 * image-grid in Sprite seems broken
 
 * remove GameObject::get_world(), use Sector::current() instead
@@ -490,6 +493,9 @@
 Editor
 ======
 
+* WindstilleWidget contains garbage when its first created, it gets
+  however cleaned up in later redraws
+
 * think about load/save
 
 * think about Undo/Redo
@@ -523,10 +529,12 @@
 
   - circular parentship causes universe to explode
   - cloning doesn't preserve parentship  
-
   - parents could be handled like normal objects, but with the
     SelectTool traversing all children and marking them before the
     move begings, Ctrl could be used to toggle this behaviour
+  - having classic groups of objects, where clicking one object moves
+    all in the group could be useful (like when each object is parent
+    to each other object in the group)
 
 * ObjectSelector/IconView allows drag&drop even when nothing is
   selected, leading to a Grumbel dummy image drag&drop without effect

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -31,6 +31,7 @@
 DecalObjectModel::DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
                                    const std::string& path_, MapType type_)
   : ObjectModel("DecalObjectModel", rel_pos),
+    path(path_),
     surface(path_),
     type(type_)
 {
@@ -83,5 +84,14 @@
 {
   return ObjectModelHandle(new DecalObjectModel(*this));
 }
+
+void
+DecalObjectModel::write(lisp::Writer& writer) const
+{
+  writer.start_list("decal");
+  writer.write_string("path", path);
+  writer.write_int("type", type);
+  writer.end_list("decal");
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -30,6 +30,7 @@
   static ObjectModelHandle create(const std::string& name, const Vector2f& pos, const std::string& path, MapType type);
 
 private:
+  std::string path;
   Surface surface;
   MapType type;
 
@@ -41,6 +42,7 @@
   void draw(SceneContext& sc);
   Rectf get_bounding_box() const;
   ObjectModelHandle clone() const;
+  void write(lisp::Writer& writer) const;
 };
 
 #endif

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <fstream>
 #include <iostream>
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
@@ -30,6 +31,7 @@
 #include "editor_window.hpp"
 #include "zoom_tool.hpp"
 #include "select_tool.hpp"
+#include "sector_model.hpp"
 
 EditorWindow* EditorWindow::current_ = 0;
 
@@ -363,6 +365,13 @@
           std::cout << "Select clicked." << std::endl;
           std::cout << "Folder selected: " << dialog.get_filename()
                     << std::endl;
+
+          std::ofstream out(dialog.get_filename().c_str());
+          lisp::Writer writer(&out);
+          if (WindstilleWidget* wst = get_windstille_widget())
+            {
+              wst->get_sector_model()->write(writer);
+            }
           break;
         }
 

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -23,6 +23,7 @@
 #include <boost/weak_ptr.hpp>
 #include <string>
 
+#include "lisp/writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
 #include "snap_data.hpp"
@@ -64,6 +65,8 @@
   virtual void update(float delta) {}
   virtual Rectf get_bounding_box() const = 0;
   virtual ObjectModelHandle clone() const =0;
+
+  virtual void write(lisp::Writer& writer) const =0;
 };
 
 #endif

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -218,6 +218,28 @@
 
   return best_snap;
 }
+
+void
+SectorModel::write(lisp::Writer& writer) const
+{
+  writer.write_comment(";; -*- scheme -*-");
+  writer.start_list("windstille-sector");
+
+  writer.write_int("version", 1);
+  writer.write_string("name", "");
+  // writer.write_color("ambient-color", );
+  writer.write_string("init-script", "init.nut");
+
+  writer.start_list("objects");
+  for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->write(writer);
+    }
+  writer.end_list("objects");
+ 
+  writer.end_list("windstille-sector");
+  writer.write_comment(";; EOF ;;");
+}
 
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -92,6 +92,8 @@
 
   SnapData snap_object(const ObjectModelHandle& object) const;
 
+  void write(lisp::Writer& writer) const;
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);

Modified: trunk/windstille/src/editor/sprite_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.cpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/sprite_object_model.cpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -22,6 +22,7 @@
 SpriteObjectModel::SpriteObjectModel(const std::string& name_, const Vector2f& rel_pos_,
                                      const std::string& path_)
   : ObjectModel(name_, rel_pos_),
+    path(path_),
     sprite(path_)
 {
 }
@@ -53,5 +54,13 @@
 {
   return ObjectModelHandle(new SpriteObjectModel(*this));
 }
+
+void
+SpriteObjectModel::write(lisp::Writer& writer) const
+{
+  writer.start_list("sprite");
+  writer.write_string("path", path);
+  writer.end_list("sprite");
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/sprite_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.hpp	2009-03-25 04:16:15 UTC (rev 2760)
+++ trunk/windstille/src/editor/sprite_object_model.hpp	2009-03-25 05:59:13 UTC (rev 2761)
@@ -25,6 +25,7 @@
 class SpriteObjectModel : public ObjectModel
 {
 private:
+  std::string path;
   Sprite sprite;
 
 public:
@@ -36,6 +37,7 @@
   void update(float delta);
   Rectf get_bounding_box() const;
   ObjectModelHandle clone() const;
+  void write(lisp::Writer& writer) const;
 };
 
 #endif



From grumbel at mail.berlios.de  Wed Mar 25 16:19:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 16:19:58 +0100
Subject: [Windstille-commit] r2762 - trunk/windstille/src/editor
Message-ID: <200903251519.n2PFJwEM016303@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 16:19:57 +0100 (Wed, 25 Mar 2009)
New Revision: 2762

Modified:
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/snap_data.hpp
Log:
Implemented snapping of selections with more then one object

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 05:59:13 UTC (rev 2761)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 15:19:57 UTC (rev 2762)
@@ -179,40 +179,20 @@
 }
 
 SnapData
-SectorModel::snap_object(const ObjectModelHandle& object) const
+SectorModel::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
 {
-  float min_x_offset = std::numeric_limits<float>::max();
-  float min_y_offset = std::numeric_limits<float>::max();
+  //float min_x_offset = std::numeric_limits<float>::max();
+  //float min_y_offset = std::numeric_limits<float>::max();
   SnapData best_snap;
 
-  const Rectf& rect = object->get_bounding_box();
-
   // Find the smallest snap offset
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if (object != *i)
+      // object is not in the list of objects to ignore
+      if (ignore_objects.find(*i) == ignore_objects.end())
         {
           SnapData snap = (*i)->snap_object(rect);
-
-          if (snap.x_set)
-            {
-              if (snap.offset.x < min_x_offset)
-                {
-                  min_x_offset = snap.offset.x;
-                  best_snap.offset.x = snap.offset.x;
-                  best_snap.x_set = true;
-                }
-            }
-
-          if (snap.y_set)
-            {
-              if (snap.offset.y < min_y_offset)
-                {
-                  min_y_offset = snap.offset.y;
-                  best_snap.offset.y = snap.offset.y;
-                  best_snap.y_set = true;
-                }
-            }
+          best_snap.merge(snap);
         }
     }
 

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 05:59:13 UTC (rev 2761)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 15:19:57 UTC (rev 2762)
@@ -19,6 +19,7 @@
 #ifndef HEADER_SECTOR_MODEL_HPP
 #define HEADER_SECTOR_MODEL_HPP
 
+#include <set>
 #include <memory>
 #include <gtkmm/treestore.h>
 #include <vector>
@@ -90,7 +91,7 @@
   void raise(ObjectModelHandle object);
   void lower(ObjectModelHandle object);
 
-  SnapData snap_object(const ObjectModelHandle& object) const;
+  SnapData snap_object(const Rectf& object, const std::set<ObjectModelHandle>& ignore_objects) const;
 
   void write(lisp::Writer& writer) const;
 

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 05:59:13 UTC (rev 2761)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-25 15:19:57 UTC (rev 2762)
@@ -78,6 +78,21 @@
   return true;
 }
 
+Vector2f
+SelectTool::process_snap(WindstilleWidget& wst)
+{
+  std::set<ObjectModelHandle> objects(selection->begin(), selection->end());
+  SnapData best_snap;
+
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      SnapData snap = wst.get_sector_model()->snap_object((*i)->get_bounding_box(), objects);
+      best_snap.merge(snap);
+    }
+              
+  return best_snap.offset;
+ }
+
 bool
 SelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)
 {
@@ -86,13 +101,10 @@
   if (mode == DRAG_MODE)
     {
       selection->on_move_update(pos - click_pos);
-
-      if ((event->state & GDK_CONTROL_MASK) && selection->size() == 1)
+      
+      if (event->state & GDK_CONTROL_MASK)
         {
-          SnapData snap = wst.get_sector_model()->snap_object(*selection->begin());
-          
-          if (snap.x_set || snap.y_set)
-            selection->on_move_update(pos - click_pos + snap.offset);
+          selection->on_move_update(pos - click_pos + process_snap(wst));
         }
     }
   else if (mode == SELECT_MODE)
@@ -115,17 +127,15 @@
   if (mode == DRAG_MODE)
     {
       selection->on_move_update(pos - click_pos);
-
-      Vector2f p = pos - click_pos;
-      if ((event->state & GDK_CONTROL_MASK) && selection->size() == 1)
+      
+      if (event->state & GDK_CONTROL_MASK)
         {
-          SnapData snap = wst.get_sector_model()->snap_object(*selection->begin());
-          
-          if (snap.x_set || snap.y_set)
-            p += snap.offset;
+          selection->on_move_end(pos - click_pos + process_snap(wst));
         }
-      
-      selection->on_move_end(p);
+      else
+        {
+          selection->on_move_end(pos - click_pos);
+        }
     }
   else if (mode == SELECT_MODE)
     {

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-03-25 05:59:13 UTC (rev 2761)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-03-25 15:19:57 UTC (rev 2762)
@@ -35,7 +35,9 @@
     DRAG_MODE,
     NO_MODE
   } mode;
-  
+
+  Vector2f process_snap(WindstilleWidget& wst);
+
 public:
   SelectTool();
   

Modified: trunk/windstille/src/editor/snap_data.hpp
===================================================================
--- trunk/windstille/src/editor/snap_data.hpp	2009-03-25 05:59:13 UTC (rev 2761)
+++ trunk/windstille/src/editor/snap_data.hpp	2009-03-25 15:19:57 UTC (rev 2762)
@@ -31,6 +31,23 @@
       x_set(false),
       y_set(false)
   {}
+  
+  void merge(const SnapData& rhs) 
+  {
+    if (((x_set && rhs.x_set) && (rhs.offset.x < offset.x)) ||
+        (!x_set && rhs.x_set))
+      {
+        offset.x = rhs.offset.x;
+        x_set = true;
+      }
+
+    if (((y_set && rhs.y_set) && (rhs.offset.y < offset.y)) ||
+        (!y_set && rhs.y_set))
+      {
+        offset.y = rhs.offset.y;
+        y_set = true;
+      }
+  }
 };
 
 #endif



From grumbel at mail.berlios.de  Wed Mar 25 16:58:51 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 16:58:51 +0100
Subject: [Windstille-commit] r2763 - in trunk/windstille: . src src/editor
	src/util
Message-ID: <200903251558.n2PFwp7P021398@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 16:58:50 +0100 (Wed, 25 Mar 2009)
New Revision: 2763

Added:
   trunk/windstille/src/util/file_writer.cpp
   trunk/windstille/src/util/file_writer.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/sprite_object_model.cpp
   trunk/windstille/src/editor/sprite_object_model.hpp
Log:
Added custom FileWriter

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/TODO	2009-03-25 15:58:50 UTC (rev 2763)
@@ -185,9 +185,13 @@
 Miscellaneous
 =============
 
-* make FileReader work more like lisp::Writer, i.e. less functional,
-  keeping the current cursor position
+* replace lisp::Writer with custom FileWriter (used in config)
 
+* make FileReader work more like lisp::Writer, i.e. less
+  const/functional, keeping the current cursor position. Main issue
+  with the current FileReader is the way sections are handled, which
+  isn't pretty
+
 * image-grid in Sprite seems broken
 
 * remove GameObject::get_world(), use Sector::current() instead

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/SConscript	2009-03-25 15:58:50 UTC (rev 2763)
@@ -32,6 +32,7 @@
         'util/command_line.cpp',
         'util/command_line_generic.cpp',
         'util/file_reader.cpp',
+        'util/file_writer.cpp',
         'util/getter.cpp',
         'util/response_curve.cpp',
         'util/sexpr_file_reader.cpp',

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -86,12 +86,13 @@
 }
 
 void
-DecalObjectModel::write(lisp::Writer& writer) const
+DecalObjectModel::write(FileWriter& writer) const
 {
-  writer.start_list("decal");
-  writer.write_string("path", path);
-  writer.write_int("type", type);
-  writer.end_list("decal");
+  writer.start_section("decal");
+  ObjectModel::write_member(writer);
+  writer.write("path",    path);
+  writer.write("type",    type);
+  writer.end_section();
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -42,7 +42,7 @@
   void draw(SceneContext& sc);
   Rectf get_bounding_box() const;
   ObjectModelHandle clone() const;
-  void write(lisp::Writer& writer) const;
+  void write(FileWriter& writer) const;
 };
 
 #endif

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -367,7 +367,7 @@
                     << std::endl;
 
           std::ofstream out(dialog.get_filename().c_str());
-          lisp::Writer writer(&out);
+          FileWriter writer(out);
           if (WindstilleWidget* wst = get_windstille_widget())
             {
               wst->get_sector_model()->write(writer);

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -32,6 +32,16 @@
 {
 }
 
+FileWriter&
+ObjectModel::write_member(FileWriter& writer) const
+{
+  ObjectModelHandle parent = parent_ptr.lock();
+
+  return writer
+    .write("pos", rel_pos)
+    .write("parent", parent.get() ? parent->get_name() : "");
+}
+
 void
 ObjectModel::set_parent(const ObjectModelHandle& parent_)
 {

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -23,7 +23,7 @@
 #include <boost/weak_ptr.hpp>
 #include <string>
 
-#include "lisp/writer.hpp"
+#include "util/file_writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
 #include "snap_data.hpp"
@@ -66,7 +66,8 @@
   virtual Rectf get_bounding_box() const = 0;
   virtual ObjectModelHandle clone() const =0;
 
-  virtual void write(lisp::Writer& writer) const =0;
+  virtual void write(FileWriter& writer) const =0;
+  virtual FileWriter& write_member(FileWriter& writer) const;
 };
 
 #endif

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -200,25 +200,25 @@
 }
 
 void
-SectorModel::write(lisp::Writer& writer) const
+SectorModel::write(FileWriter& writer) const
 {
-  writer.write_comment(";; -*- scheme -*-");
-  writer.start_list("windstille-sector");
+  writer.write_raw(";; -*- scheme -*-\n");
+  writer.start_section("windstille-sector");
 
-  writer.write_int("version", 1);
-  writer.write_string("name", "");
-  // writer.write_color("ambient-color", );
-  writer.write_string("init-script", "init.nut");
+  writer.write("version", 1);
+  writer.write("name", "");
+  writer.write("ambient-color", Color());
+  writer.write("init-script", "init.nut");
 
-  writer.start_list("objects");
+  writer.start_section("objects");
   for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
     {
       (*i)->write(writer);
     }
-  writer.end_list("objects");
+  writer.end_section();
  
-  writer.end_list("windstille-sector");
-  writer.write_comment(";; EOF ;;");
+  writer.end_section();
+  writer.write_raw("\n;; EOF ;;\n");
 }
 
 void

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -93,7 +93,7 @@
 
   SnapData snap_object(const Rectf& object, const std::set<ObjectModelHandle>& ignore_objects) const;
 
-  void write(lisp::Writer& writer) const;
+  void write(FileWriter& writer) const;
 
 private:
   SectorModel(const SectorModel&);

Modified: trunk/windstille/src/editor/sprite_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.cpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/sprite_object_model.cpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -56,11 +56,12 @@
 }
 
 void
-SpriteObjectModel::write(lisp::Writer& writer) const
+SpriteObjectModel::write(FileWriter& writer) const
 {
-  writer.start_list("sprite");
-  writer.write_string("path", path);
-  writer.end_list("sprite");
+  writer.start_section("sprite");
+  ObjectModel::write_member(writer);
+  writer.write("path", path);
+  writer.end_section();
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/sprite_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/sprite_object_model.hpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/editor/sprite_object_model.hpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -37,7 +37,7 @@
   void update(float delta);
   Rectf get_bounding_box() const;
   ObjectModelHandle clone() const;
-  void write(lisp::Writer& writer) const;
+  void write(FileWriter& writer) const;
 };
 
 #endif

Added: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/util/file_writer.cpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -0,0 +1,130 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <sstream>
+#include "display/color.hpp"
+#include "math/vector2f.hpp"
+#include "file_writer.hpp"
+
+FileWriter::FileWriter(std::ostream& out_)
+  : out(out_),
+    indent_count(0)
+{
+}
+
+FileWriter::~FileWriter()
+{
+}
+
+void
+FileWriter::indent()
+{
+  for(int i = 0; i < indent_count; ++i)
+    out << "  ";
+}
+
+FileWriter&
+FileWriter::write_raw(const std::string& value)
+{
+  out << value;
+  return *this;
+}
+
+FileWriter&
+FileWriter::start_section(const std::string& name)
+{
+  indent();
+  out << "(" << name << "\n";
+  indent_count += 1;
+  return *this;
+}
+
+FileWriter&
+FileWriter::end_section()
+{
+  indent();
+  out << ")\n";
+  indent_count -= 1;
+  return *this;
+}
+
+FileWriter&
+FileWriter::write(const std::string& name, bool value)
+{
+  indent();
+  out << "(" << name << " " << value << ")\n";
+  return *this;
+}
+
+FileWriter&
+FileWriter::write(const std::string& name, int value)
+{
+  indent();
+  out << "(" << name << " " << value << ")\n";
+  return *this;
+}
+
+FileWriter&
+FileWriter::write(const std::string& name, float value)
+{
+  indent();
+  out << "(" << name << " " << value << ")\n";
+  return *this;
+}
+
+static
+std::string escape_string(const std::string& in)
+{
+  std::ostringstream str;
+  for(std::string::const_iterator i = in.begin(); i != in.end(); ++i)
+    {
+      if (*i == '"')
+        str << "\\\"";
+      else if (*i == '\\')
+        str << "\\\\";
+      else
+        str << *i;
+    }
+  return str.str();
+}
+
+FileWriter&
+FileWriter::write(const std::string& name, const std::string& value)
+{
+  indent();
+  out << "(" << name << " \"" << escape_string(value) << "\")\n";
+  return *this;
+}
+
+FileWriter&
+FileWriter::write(const std::string& name, const Color& value)
+{
+  indent();
+  out << "(" << name << " " << value.r << " " << value.g << " " << value.b << " " << value.a << ")\n";
+  return *this;
+}
+
+FileWriter&
+FileWriter::write(const std::string& name, const Vector2f& value)
+{
+  indent();
+  out << "(" << name << " " << value.x << " " << value.y << ")\n";
+  return *this;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/util/file_writer.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/util/file_writer.hpp
===================================================================
--- trunk/windstille/src/util/file_writer.hpp	2009-03-25 15:19:57 UTC (rev 2762)
+++ trunk/windstille/src/util/file_writer.hpp	2009-03-25 15:58:50 UTC (rev 2763)
@@ -0,0 +1,59 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_UTIL_FILE_WRITER_HPP
+#define HEADER_WINDSTILLE_UTIL_FILE_WRITER_HPP
+
+#include <ostream>
+#include <string>
+
+class Color;
+class Vector2f;
+
+class FileWriter
+{
+private:
+  std::ostream& out;
+  int indent_count;
+
+  void indent();
+
+public:
+  FileWriter(std::ostream& out);
+  ~FileWriter();
+
+  FileWriter& write_raw(const std::string& value);
+
+  FileWriter& start_section(const std::string& name);
+  FileWriter& end_section();
+
+  FileWriter& write(const std::string& name, bool value);
+  FileWriter& write(const std::string& name, int value);
+  FileWriter& write(const std::string& name, float value);
+  FileWriter& write(const std::string& name, const std::string& value);
+  FileWriter& write(const std::string& name, const Color& value);
+  FileWriter& write(const std::string& name, const Vector2f& value);
+
+private:
+  FileWriter(const FileWriter&);
+  FileWriter& operator=(const FileWriter&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/util/file_writer.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Wed Mar 25 17:10:33 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 17:10:33 +0100
Subject: [Windstille-commit] r2764 - trunk/windstille/src/util
Message-ID: <200903251610.n2PGAX8A024951@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 17:10:33 +0100 (Wed, 25 Mar 2009)
New Revision: 2764

Modified:
   trunk/windstille/src/util/file_writer.cpp
   trunk/windstille/src/util/file_writer.hpp
Log:
Fixed issue with const char* getting written as bool

Modified: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-03-25 15:58:50 UTC (rev 2763)
+++ trunk/windstille/src/util/file_writer.cpp	2009-03-25 16:10:33 UTC (rev 2764)
@@ -104,6 +104,14 @@
 }
 
 FileWriter&
+FileWriter::write(const std::string& name, const char* value)
+{
+  indent();
+  out << "(" << name << " \"" << escape_string(value) << "\")\n";
+  return *this;
+}
+
+FileWriter&
 FileWriter::write(const std::string& name, const std::string& value)
 {
   indent();

Modified: trunk/windstille/src/util/file_writer.hpp
===================================================================
--- trunk/windstille/src/util/file_writer.hpp	2009-03-25 15:58:50 UTC (rev 2763)
+++ trunk/windstille/src/util/file_writer.hpp	2009-03-25 16:10:33 UTC (rev 2764)
@@ -46,6 +46,7 @@
   FileWriter& write(const std::string& name, int value);
   FileWriter& write(const std::string& name, float value);
   FileWriter& write(const std::string& name, const std::string& value);
+  FileWriter& write(const std::string& name, const char* value);
   FileWriter& write(const std::string& name, const Color& value);
   FileWriter& write(const std::string& name, const Vector2f& value);
 



From grumbel at mail.berlios.de  Wed Mar 25 18:44:43 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 18:44:43 +0100
Subject: [Windstille-commit] r2765 - in trunk/windstille: . src src/editor
	src/util
Message-ID: <200903251744.n2PHihw6015055@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 18:44:39 +0100 (Wed, 25 Mar 2009)
New Revision: 2765

Added:
   trunk/windstille/src/editor/object_model_factory.cpp
   trunk/windstille/src/editor/object_model_factory.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
Log:
Added primitive load function

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/TODO	2009-03-25 17:44:39 UTC (rev 2765)
@@ -185,6 +185,8 @@
 Miscellaneous
 =============
 
+* Make FileWriter not place ')' on a new line
+
 * replace lisp::Writer with custom FileWriter (used in config)
 
 * make FileReader work more like lisp::Writer, i.e. less

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/SConscript	2009-03-25 17:44:39 UTC (rev 2765)
@@ -241,6 +241,7 @@
         'editor/main.cpp',
         'editor/minimap_widget.cpp',
         'editor/object_model.cpp',      
+        'editor/object_model_factory.cpp',
         'editor/object_selector.cpp',
         'editor/object_tree.cpp',
         'editor/scroll_tool.cpp',

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -16,6 +16,7 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "util/file_reader.hpp"
 #include "display/surface.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
@@ -28,6 +29,16 @@
   return ObjectModelHandle(new DecalObjectModel(name, pos, path, type));
 }
 
+DecalObjectModel::DecalObjectModel(FileReader& reader)
+  : ObjectModel(reader)
+{
+  int map_type = 0;
+  reader.read("path", path);
+  reader.read("type", map_type);
+  type = (MapType)map_type;
+  surface = Surface(path);
+}
+
 DecalObjectModel::DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
                                    const std::string& path_, MapType type_)
   : ObjectModel("DecalObjectModel", rel_pos),

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -35,6 +35,7 @@
   MapType type;
 
 public:
+  DecalObjectModel(FileReader& reader);
   DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
                    const std::string& path_, MapType type_);
   ~DecalObjectModel();

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -321,6 +321,14 @@
 }
 
 void
+EditorWindow::load_file(const std::string& filename)
+{
+  on_new();
+  WindstilleWidget* wst = get_windstille_widget();
+  wst->load_file(filename);
+}
+
+void
 EditorWindow::on_open()
 {
   Gtk::FileChooserDialog dialog("Open File",
@@ -337,6 +345,8 @@
           std::cout << "Select clicked." << std::endl;
           std::cout << "Folder selected: " << dialog.get_filename()
                     << std::endl;
+          
+          load_file(dialog.get_filename());
           break;
         }
 

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -107,6 +107,8 @@
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();
   
+  void load_file(const std::string& filename);
+
   void call_with_windstille_widget(void (WindstilleWidget::*func)());
 
 private:

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -18,6 +18,7 @@
 
 #include <iostream>
 
+#include "util/file_reader.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
 #include "object_model.hpp"
@@ -28,6 +29,14 @@
 {
 }
 
+ObjectModel::ObjectModel(FileReader& reader)
+{
+  std::string parent;
+  reader.read("name", name);
+  reader.get("pos",  rel_pos);
+  reader.read("parent",  parent);
+}
+
 ObjectModel::~ObjectModel()
 {
 }

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -29,6 +29,7 @@
 #include "snap_data.hpp"
 
 class ObjectModel;
+class FileReader;
 class SceneContext;
 typedef boost::shared_ptr<ObjectModel> ObjectModelHandle;
 typedef boost::weak_ptr<ObjectModel>   ObjectModelPtr;
@@ -44,6 +45,7 @@
 
 public:
   ObjectModel();
+  ObjectModel(FileReader& reader);
   ObjectModel(const std::string& name, const Vector2f& pos);
   virtual ~ObjectModel();
   

Added: trunk/windstille/src/editor/object_model_factory.cpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/object_model_factory.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -0,0 +1,39 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <stdexcept>
+
+#include "util/file_reader.hpp"
+#include "decal_object_model.hpp"
+#include "object_model_factory.hpp"
+
+ObjectModelHandle
+ObjectModelFactory::create(FileReader& reader)
+{
+  if (reader.get_name() == "decal")
+    {
+      return ObjectModelHandle(new DecalObjectModel(reader));
+    }
+  else
+    {
+      throw std::runtime_error("Unknown object type '" + reader.get_name() + "'");
+      return ObjectModelHandle();
+    }
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_model_factory.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/object_model_factory.hpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/object_model_factory.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -0,0 +1,38 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_OBJECT_MODEL_FACTOR_HPP
+#define HEADER_OBJECT_MODEL_FACTOR_HPP
+
+#include "object_model.hpp"
+
+class FileReader;
+
+class ObjectModelFactory
+{
+public:
+  static ObjectModelHandle create(FileReader& reader);
+  
+private:
+  ObjectModelFactory(const ObjectModelFactory&);
+  ObjectModelFactory& operator=(const ObjectModelFactory&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/object_model_factory.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -16,13 +16,16 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <fstream>
 #include <limits>
 #include <assert.h>
 #include <iostream>
 #include <gdkmm/pixbuf.h>
 
+#include "util/file_reader.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface.hpp"
+#include "object_model_factory.hpp"
 #include "sector_model.hpp"
 
 ObjectTreeColumns* ObjectTreeColumns::instance_ = 0;
@@ -200,6 +203,35 @@
 }
 
 void
+SectorModel::load(const std::string& filename)
+{
+  std::ifstream stream(filename.c_str());
+  if (!stream)
+    {
+      throw std::runtime_error("File not found " + filename);
+    }
+  else
+    {
+  FileReader reader = FileReader::parse(stream, filename);
+  if (reader.get_name() == "windstille-sector")
+    {
+      std::vector<FileReader> sections = reader.get_sections();
+      for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
+        {
+          if (i->get_name() == "objects")
+            {
+              std::vector<FileReader> objects_sections = i->get_sections();
+              for(std::vector<FileReader>::iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
+                {
+                  add(ObjectModelFactory::create(*j));
+                }
+            }
+        }
+    }
+    }
+}
+
+void
 SectorModel::write(FileWriter& writer) const
 {
   writer.write_raw(";; -*- scheme -*-\n");

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -93,6 +93,7 @@
 
   SnapData snap_object(const Rectf& object, const std::set<ObjectModelHandle>& ignore_objects) const;
 
+  void load(const std::string& filename);
   void write(FileWriter& writer) const;
 
 private:

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -515,5 +515,12 @@
 {
   return sector_model.get();
 }
+
+void
+WindstilleWidget::load_file(const std::string& filename)
+{
+  sector_model->load(filename);
+  queue_draw();
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -110,6 +110,8 @@
 
   SceneContext* get_sc() const { return sc.get(); }
 
+  void load_file(const std::string& filename);
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/util/file_reader.cpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -20,6 +20,28 @@
 #include "sexpr_file_reader.hpp"
 #include "file_reader.hpp"
 #include "file_reader_impl.hpp"
+
+FileReader
+FileReader::parse(std::istream& stream, const std::string& filename)
+{
+  lisp::Lisp* root = lisp::Parser::parse(stream, filename);
+  if (!root)
+    {
+      std::ostringstream msg;
+      msg << "'" << filename << "': file not found";
+      throw std::runtime_error(msg.str());
+    }
+  else if (root && root->get_type() == lisp::Lisp::TYPE_LIST && root->get_list_size() >= 1)
+    {
+      return SExprFileReader(root, root->get_list_elem(0));
+    }
+  else
+    {
+      std::ostringstream msg;
+      msg << "'" << filename << "': not a valid sexpr file";
+      throw std::runtime_error(msg.str());
+    }  
+}
 
 FileReader
 FileReader::parse(const std::string& filename)
@@ -159,5 +181,5 @@
   else
     return std::vector<FileReader>();
 }
-
+
 /* EOF */

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-03-25 16:10:33 UTC (rev 2764)
+++ trunk/windstille/src/util/file_reader.hpp	2009-03-25 17:44:39 UTC (rev 2765)
@@ -23,15 +23,16 @@
 #include <vector>
 #include "getter.hpp"
 #include <boost/shared_ptr.hpp>
-
+
 class FileReaderImpl;
-
+
 /** Interface to read name/value pairs out of some kind of file or
     structure */
 class FileReader
 {
 public:
   static FileReader parse(const std::string& filename);
+  static FileReader parse(std::istream& stream, const std::string& filename);
 
   FileReader(boost::shared_ptr<FileReaderImpl> impl_);
   FileReader();
@@ -78,7 +79,7 @@
 private:
   boost::shared_ptr<FileReaderImpl> impl;
 };
-
+
 #endif
 
 /* EOF */



From grumbel at mail.berlios.de  Wed Mar 25 20:26:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 20:26:31 +0100
Subject: [Windstille-commit] r2766 - in trunk/windstille: data/images
	data/images/decal data/sectors data/sectors/trainstation src/editor
Message-ID: <200903251926.n2PJQVo5028322@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 20:26:11 +0100 (Wed, 25 Mar 2009)
New Revision: 2766

Added:
   trunk/windstille/data/images/decal/
   trunk/windstille/data/images/decal/bench.png
   trunk/windstille/data/images/decal/board.png
   trunk/windstille/data/images/decal/dark.png
   trunk/windstille/data/images/decal/door.png
   trunk/windstille/data/images/decal/ground.png
   trunk/windstille/data/images/decal/handrail.png
   trunk/windstille/data/images/decal/handrail2.png
   trunk/windstille/data/images/decal/light.png
   trunk/windstille/data/images/decal/rail.png
   trunk/windstille/data/images/decal/roof.png
   trunk/windstille/data/images/decal/roof2.png
   trunk/windstille/data/images/decal/rooflamp.png
   trunk/windstille/data/images/decal/rooflamp_bloom.png
   trunk/windstille/data/images/decal/stairs.png
   trunk/windstille/data/images/decal/stone.png
   trunk/windstille/data/images/decal/stone2.png
   trunk/windstille/data/images/decal/terminal.png
   trunk/windstille/data/images/decal/tunnelplate.png
   trunk/windstille/data/images/decal/tunnelplate.xcf
   trunk/windstille/data/images/decal/tunnelplate_bottom.png
   trunk/windstille/data/images/decal/tunnelplate_small.png
   trunk/windstille/data/images/decal/wallplate.png
   trunk/windstille/data/sectors/trainstation/
   trunk/windstille/data/sectors/trainstation/trainstation.wst
Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Created a first test level with the editor

Added: trunk/windstille/data/images/decal/bench.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/bench.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/board.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/board.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/dark.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/dark.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/door.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/door.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/ground.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/ground.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/handrail.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/handrail.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/handrail2.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/handrail2.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/light.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/light.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/rail.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/rail.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/roof.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/roof.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/roof2.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/roof2.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/rooflamp.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/rooflamp.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/rooflamp_bloom.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/rooflamp_bloom.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stairs.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stairs.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stone.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stone.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stone2.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stone2.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/terminal.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/terminal.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/tunnelplate.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/tunnelplate.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/tunnelplate.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/tunnelplate.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/x-xcf

Added: trunk/windstille/data/images/decal/tunnelplate_bottom.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/tunnelplate_bottom.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/tunnelplate_small.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/tunnelplate_small.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/wallplate.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/wallplate.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-25 17:44:39 UTC (rev 2765)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-25 19:26:11 UTC (rev 2766)
@@ -0,0 +1,1313 @@
+;; -*- scheme -*-
+(windstille-sector
+  (version 1)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (objects
+    (decal
+      (pos -1173.15 161.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1429.15 161.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1369.77 178.332)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 2)
+      )
+    (decal
+      (pos -1241.39 128.266)
+      (parent "")
+      (path "images/decal/roof.png")
+      (type 0)
+      )
+    (decal
+      (pos -1364.88 234.351)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1210.12 845.062)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -475.483 759.19)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1683.2 421.836)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1755.46 539.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 2219.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 2094.53 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 2091.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1835.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1838.54 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1963.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1451.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1326.54 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1323.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1579.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1582.54 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1707.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 683.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 558.531 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 555.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 299.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 302.531 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 427.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 939.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 814.531 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 811.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1067.08 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 1070.53 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1195.07 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -852.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -977.465 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -980.925 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -340.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -465.469 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -468.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -724.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -721.469 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -596.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -84.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -209.469 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -212.922 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 43.0781 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos 46.5312 482.539)
+      (parent "")
+      (path "images/decal/tunnelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 171.078 674.539)
+      (parent "")
+      (path "images/decal/tunnelplate_small.png")
+      (type 0)
+      )
+    (decal
+      (pos -916.925 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos -660.925 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos -148.925 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos -404.925 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 619.075 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 875.075 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 363.075 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 107.075 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 1899.07 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 2155.07 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 1387.07 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 1643.07 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 1131.07 918.539)
+      (parent "")
+      (path "images/decal/tunnelplate_bottom.png")
+      (type 0)
+      )
+    (decal
+      (pos 980.65 428.895)
+      (parent "")
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos -189.618 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -445.618 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 578.382 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 834.382 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 322.382 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 66.382 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 1602.39 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 1858.39 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 1346.39 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 1090.39 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos 1858.39 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 1346.39 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 1602.39 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 834.382 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 578.382 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 1090.39 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 66.382 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -189.618 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 322.382 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -445.618 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos 194.382 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos 706.382 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos 1730.39 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos 1218.39 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos -317.618 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos -687.714 368.055)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -661.151 417.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -917.151 417.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -917.151 289.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -917.151 673.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -917.151 545.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -442.601 533.52)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -523.101 831.145)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -661.151 673.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -661.151 545.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1173.15 545.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1173.15 673.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1429.15 545.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1429.15 673.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1429.15 289.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1429.15 417.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1173.15 417.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1171.2 289.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1173.15 801.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1429.15 801.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1368.62 854.44)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -1365.87 618.726)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -1592.87 918.367)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -1592.87 687.93)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -661.151 929.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -661.151 1057.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -917.151 801.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -661.151 801.93)
+      (parent "")
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -886.121 964.121)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 240.218 886.438)
+      (parent "")
+      (path "images/decal/board.png")
+      (type 0)
+      )
+    (decal
+      (pos 889.175 913.438)
+      (parent "")
+      (path "images/decal/terminal.png")
+      (type 0)
+      )
+    (decal
+      (pos 11.4759 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -296.524 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 935.125 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 1243.12 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 627.476 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 319.476 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 1551.12 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 2166.77 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 1858.77 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 228.959 426.715)
+      (parent "")
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos 1640.35 434.301)
+      (parent "")
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos -1392.79 326.273)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1281.79 406.929)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1170.79 482.226)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1059.79 558.976)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -954.791 632.226)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -843.791 708.976)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -958.746 821.184)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -714.184 1017.31)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -914.618 938.44)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -687.618 1093.8)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -734.354 784.664)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -621.496 968.836)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1141.62 974.43)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -621.791 862.976)
+      (parent "")
+      (path "images/decal/handrail2.png")
+      (type 0)
+      )
+    (decal
+      (pos -957.618 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -701.618 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -701.618 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -957.618 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -826.493 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos -912.173 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -604.524 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -1530.61 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -1220.17 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -1838.61 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -2146.61 1103.44)
+      (parent "")
+      (path "images/decal/ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -2365.62 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1853.62 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1341.62 1380.44)
+      (parent "")
+      (path "images/decal/stone2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1725.62 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -2237.62 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1981.62 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1469.62 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1213.62 1187.44)
+      (parent "")
+      (path "images/decal/rail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1213.62 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -1725.62 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -1469.62 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -1981.62 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -2237.62 1273.44)
+      (parent "")
+      (path "images/decal/stone.png")
+      (type 0)
+      )
+    (decal
+      (pos -1141.62 774.226)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -1202.71 916.44)
+      (parent "")
+      (path "images/decal/door.png")
+      (type 0)
+      )
+    (decal
+      (pos -1590.92 458.929)
+      (parent "")
+      (path "images/decal/stairs.png")
+      (type 0)
+      )
+    (decal
+      (pos -751.996 886.773)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -999.683 721.898)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -870.746 802.398)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1126.25 626.586)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1270.81 524.211)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -1404.43 434.336)
+      (parent "")
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -810.5 414.625)
+      (parent "")
+      (path "images/decal/roof.png")
+      (type 0)
+      )
+    (decal
+      (pos -165.5 335.625)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos 345.5 335.625)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos 1367.5 335.625)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos 856.5 335.625)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos 2389.5 335.625)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos 1878.5 335.625)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos 234.812 549)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos 995.749 533.375)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos 1658.25 541.188)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1449.56 -39.2807)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1638.23 50.563)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1644.88 132.985)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1623.39 206.813)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1604.64 321.266)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1388.63 78.6875)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos 889.5 909.938)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos 889.5 825.563)
+      (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -163.625 985.44)
+      (parent "")
+      (path "images/decal/bench.png")
+      (type 0)
+      )
+    (decal
+      (pos 578.562 985.44)
+      (parent "")
+      (path "images/decal/bench.png")
+      (type 0)
+      )
+    (decal
+      (pos 1244.19 985.44)
+      (parent "")
+      (path "images/decal/bench.png")
+      (type 0)
+      )
+    (decal
+      (pos 1542.62 985.44)
+      (parent "")
+      (path "images/decal/bench.png")
+      (type 0)
+      )
+    (decal
+      (pos 1864.5 985.44)
+      (parent "")
+      (path "images/decal/bench.png")
+      (type 0)
+      )
+    (decal
+      (pos 159.502 622.202)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 972.752 671.292)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 968.131 705.734)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 328.744 835.39)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1060.64 577.839)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 1562.96 829.374)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 1690.18 500.046)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 1705.09 795.718)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 926.541 883.87)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 11.075 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos 424.131 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -1002.18 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -914.086 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -832.618 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos 1064.43 1014.67)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -354.815 727.027)
+      (parent "")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -893.773 129.906)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -899.632 118.188)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    )
+  )
+
+;; EOF ;;

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 17:44:39 UTC (rev 2765)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 19:26:11 UTC (rev 2766)
@@ -280,9 +280,10 @@
   // Window
   add(vbox);
 
+  fill_object_selector("data/images/decal/");
+  //fill_object_selector("data/images/inventory/");
+  //fill_object_selector("data/images/portraits/");
   fill_object_selector("data/images/objects/");
-  fill_object_selector("data/images/inventory/");
-  fill_object_selector("data/images/portraits/");
   fill_object_selector("data/images/");
 }
 

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 17:44:39 UTC (rev 2765)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-25 19:26:11 UTC (rev 2766)
@@ -91,7 +91,7 @@
       sc.control().draw_line(wo_pos, parent->get_world_pos(), Color(0,0,1, 0.5f));
     }
 
-  sc.control().fill_rect(Rectf(wo_pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
+  //sc.control().fill_rect(Rectf(wo_pos - Vector2f(8, 8), Sizef(16, 16)), Color(1,0,0));
 }
 
 void

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 17:44:39 UTC (rev 2765)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 19:26:11 UTC (rev 2766)
@@ -204,7 +204,8 @@
     {
       state.push(*sc);
       
-      sc->color().fill_pattern(background_pattern);
+      //sc->color().fill_pattern(background_pattern);
+      sc->color().fill_screen(Color());
 
       sector_model->draw(*sc);
 



From grumbel at mail.berlios.de  Wed Mar 25 23:07:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 25 Mar 2009 23:07:04 +0100
Subject: [Windstille-commit] r2767 - in trunk/windstille: . src src/editor
Message-ID: <200903252207.n2PM74O3019252@sheep.berlios.de>

Author: grumbel
Date: 2009-03-25 23:07:04 +0100 (Wed, 25 Mar 2009)
New Revision: 2767

Added:
   trunk/windstille/src/editor/layer.hpp
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/layer_widget.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_model.hpp
Log:
Added Blender-like layer buttons


Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/TODO	2009-03-25 22:07:04 UTC (rev 2767)
@@ -499,6 +499,14 @@
 Editor
 ======
 
+* lightmap objects are hard to see
+
+* decal needs to be scalable and have vertices moveable
+
+* add button to toggle background pattern
+
+* make duplicated objects insert near those from which they where cloned
+
 * WindstilleWidget contains garbage when its first created, it gets
   however cleaned up in later redraws
 
@@ -508,7 +516,7 @@
 
 * add a Blender like layer system:
  
-  - layers are a 1 bit in a uint32_t
+  - layers are a 1 bit in a uint32_t (or uint64_t if needed)
   - each Object has a layer mask
   - when doing a get_selection(Rect(), layermask), objects check
     against the layer mask and are ignored when they don't match
@@ -517,7 +525,15 @@
   - objects can belong to multiple layers at once
   - advantage of this is that layers exist outside the whole sorting
     logic, so all that stuff can remain unchanged
+  - maybe all this isn't enough
 
+  - use for layer system:
+
+    - levels are naturally constructed out of multiple layers, such as
+      background, foreground, etc. Also certain things need to be
+      grouped, a wall of tiles should be easily moveable without the
+      danger of ripping the tiles appart
+
 * Display::aspect_size is ugly, turn that into a Display::set_size();
 
 * implement non-Surface based objects:

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/src/SConscript	2009-03-25 22:07:04 UTC (rev 2767)
@@ -238,6 +238,7 @@
         'editor/control_point.cpp',
         'editor/decal_object_model.cpp',
         'editor/editor_window.cpp',
+        'editor/layer_widget.cpp',
         'editor/main.cpp',
         'editor/minimap_widget.cpp',
         'editor/object_model.cpp',      

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-25 22:07:04 UTC (rev 2767)
@@ -24,6 +24,7 @@
 #include <gtkmm/uimanager.h>
 #include <gtkmm/toolbar.h>
 #include <gtkmm/stock.h>
+#include <gtkmm/separatortoolitem.h>
 
 #include "display/scene_context.hpp"
 #include "windstille_widget.hpp"
@@ -32,6 +33,7 @@
 #include "zoom_tool.hpp"
 #include "select_tool.hpp"
 #include "sector_model.hpp"
+#include "layer_widget.hpp"
 
 EditorWindow* EditorWindow::current_ = 0;
 
@@ -45,7 +47,7 @@
   current_ = this;
 
   set_title("Windstille Editor");
-  set_default_size(1024, 768);
+  set_default_size(1280, 800);
 
   Glib::ustring ui_info =
     "<ui>"
@@ -126,6 +128,7 @@
     "    <separator/>"
     //"    <toolitem action='Snap'/>"
     "    <toolitem action='Play'/>"
+    "    <separator/>"
     "  </toolbar>"
     ""
     "  <toolbar  name='ToolBox'>"
@@ -248,6 +251,10 @@
   action_group->get_action("Copy")->set_sensitive(false);
   action_group->get_action("Paste")->set_sensitive(false);
 
+  Gtk::Toolbar* toolbar = static_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBar"));
+  toolbar->append(*(Gtk::manage(new Gtk::SeparatorToolItem())));
+  toolbar->append(*(Gtk::manage(new LayerWidget())));
+
   // Packing
 
   // Main Vbox
@@ -311,7 +318,7 @@
   std::cout << "on_new" << std::endl;
 
   // FIXME: We abuse the minimap as our root GLContext
-  WindstilleWidget* windstille = new WindstilleWidget(glconfig, minimap_widget.get_gl_context());
+  WindstilleWidget* windstille = Gtk::manage(new WindstilleWidget(glconfig, minimap_widget.get_gl_context()));
 
   Glib::ustring title = Glib::ustring::compose("Sector %1", notebook.get_n_pages());
   int new_page = notebook.append_page(*windstille, title);

Added: trunk/windstille/src/editor/layer.hpp
===================================================================
--- trunk/windstille/src/editor/layer.hpp	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/src/editor/layer.hpp	2009-03-25 22:07:04 UTC (rev 2767)
@@ -0,0 +1,42 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_LAYER_HPP
+#define HEADER_WINDSTILLE_EDITOR_LAYER_HPP
+
+/** */
+class Layer
+{
+private:
+  uint32_t mask;
+
+public:
+  Layer() : mask(~0) {}
+  Layer(uint32_t mask_) : mask(mask_) {}
+
+  uint32_t get_mask() const;
+
+  bool match(const Layer& rhs) const
+  {
+    return (mask & rhs.mask);
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-03-25 22:07:04 UTC (rev 2767)
@@ -0,0 +1,66 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <iostream>
+#include <gtkmm/togglebutton.h>
+#include <gtkmm/separator.h>
+#include "layer_widget.hpp"
+
+LayerWidget::LayerWidget()
+  : table(2, 19, false)
+{
+  int layer_number = 0;
+  for(int y = 0; y < 2; ++y)
+    for(int x = 0; x < 19; ++x)
+      {
+        if ((x+1) % 5)
+          {
+            Gtk::ToggleButton* button = Gtk::manage(new Gtk::ToggleButton());
+            button->set_size_request(16, 16);
+            table.attach(*button, x, x+1, y, y+1);
+
+            button->signal_toggled().connect(sigc::bind(sigc::mem_fun(*this, &LayerWidget::on_layer_toggle), 
+                                                        button, layer_number));
+            layer_number += 1;
+          }
+        else
+          {
+            if (y == 0)
+              {
+                Gtk::VSeparator* separator = Gtk::manage(new Gtk::VSeparator());
+                //Gtk::Widget* separator = Gtk::manage(new Gtk::Widget());
+                separator->set_size_request(12, -1);
+                table.attach(*separator, x, x+1, 0, 2);
+              }
+          }
+      }
+
+  add(table);
+}
+
+LayerWidget::~LayerWidget()
+{  
+}
+
+void
+LayerWidget::on_layer_toggle(Gtk::ToggleButton* button, int layer)
+{
+  std::cout << "Layer: " << layer << " -> " << button->get_active() << std::endl;
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer_widget.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-03-25 22:07:04 UTC (rev 2767)
@@ -0,0 +1,43 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_LAYER_WIDGET_HPP
+#define HEADER_WINDSTILLE_EDITOR_LAYER_WIDGET_HPP
+
+#include <gtkmm/toolitem.h>
+#include <gtkmm/table.h>
+
+class LayerWidget : public Gtk::ToolItem
+{
+private:
+  Gtk::Table table;
+
+public:
+  LayerWidget();
+  ~LayerWidget();
+
+  void on_layer_toggle(Gtk::ToggleButton* button, int layer);
+
+private:
+  LayerWidget(const LayerWidget&);
+  LayerWidget& operator=(const LayerWidget&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer_widget.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-25 19:26:11 UTC (rev 2766)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-25 22:07:04 UTC (rev 2767)
@@ -23,6 +23,7 @@
 #include <boost/weak_ptr.hpp>
 #include <string>
 
+#include "layer.hpp"
 #include "util/file_writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
@@ -39,6 +40,7 @@
 private:
   std::string name;
   Vector2f    rel_pos;
+  Layer  layer;
 
   ObjectModelPtr parent_ptr;
   Vector2f move_offset;
@@ -61,6 +63,8 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
+  Layer get_layer() const { return layer; }
+
   SnapData snap_object(const Rectf& rect) const;
 
   virtual void draw(SceneContext& sc);



From grumbel at mail.berlios.de  Thu Mar 26 02:46:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 26 Mar 2009 02:46:45 +0100
Subject: [Windstille-commit] r2768 - in trunk/windstille: .
	data/sectors/trainstation src/editor src/util
Message-ID: <200903260146.n2Q1kjWl019139@sheep.berlios.de>

Author: grumbel
Date: 2009-03-26 02:46:44 +0100 (Thu, 26 Mar 2009)
New Revision: 2768

Modified:
   trunk/windstille/TODO
   trunk/windstille/data/sectors/trainstation/trainstation.wst
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/layer.hpp
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/layer_widget.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
   trunk/windstille/src/util/file_reader_impl.hpp
   trunk/windstille/src/util/file_writer.cpp
   trunk/windstille/src/util/file_writer.hpp
   trunk/windstille/src/util/sexpr_file_reader.cpp
Log:
Implemented blender like layers

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/TODO	2009-03-26 01:46:44 UTC (rev 2768)
@@ -499,6 +499,16 @@
 Editor
 ======
 
+* lisp can't save uint32_t, maybe should save layer mask as string or so
+
+* add recent files
+
+* add difference between "save" and "save as", along with overwrite warnings
+
+* add second toolbar, first one is getting a little crowded
+
+* disable light layer on default/startup
+
 * lightmap objects are hard to see
 
 * decal needs to be scalable and have vertices moveable
@@ -514,6 +524,8 @@
 
 * think about Undo/Redo
 
+* layer move tool
+
 * add a Blender like layer system:
  
   - layers are a 1 bit in a uint32_t (or uint64_t if needed)

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-26 01:46:44 UTC (rev 2768)
@@ -6,58 +6,70 @@
   (init-script "init.nut")
   (objects
     (decal
-      (pos -1173.15 161.93)
+      (pos -1060.64 577.839)
       (parent "")
-      (path "images/decal/wallplate.png")
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -2115.12 1225.16)
+      (parent "")
+      (path "images/noise.png")
       (type 0)
       )
     (decal
-      (pos -1429.15 161.93)
+      (pos -2120.61 981.188)
       (parent "")
-      (path "images/decal/wallplate.png")
+      (path "images/noise.png")
       (type 0)
       )
     (decal
-      (pos -1369.77 178.332)
+      (pos -1721.87 520.367)
       (parent "")
-      (path "images/decal/light.png")
-      (type 2)
+      (path "images/objects/elevatordoor_left.png")
+      (type 0)
       )
     (decal
-      (pos -1241.39 128.266)
+      (pos -1721.87 392.367)
       (parent "")
-      (path "images/decal/roof.png")
+      (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
-      (pos -1364.88 234.351)
+      (pos -602.767 343.23)
       (parent "")
-      (path "images/decal/light.png")
-      (type 1)
+      (path "images/decal/dark.png")
+      (type 0)
       )
     (decal
-      (pos -1210.12 845.062)
+      (pos -1091.77 303.729)
       (parent "")
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1072.91 403.374)
+      (parent "")
       (path "images/decal/light.png")
-      (type 1)
+      (type 2)
       )
     (decal
-      (pos -475.483 759.19)
+      (pos -1553.29 729.292)
       (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos -1683.2 421.836)
+      (pos -1210.12 845.062)
       (parent "")
-      (path "images/decal/wallplate.png")
-      (type 0)
+      (path "images/decal/light.png")
+      (type 1)
       )
     (decal
-      (pos -1755.46 539.93)
+      (pos -475.483 759.19)
       (parent "")
-      (path "images/decal/wallplate.png")
-      (type 0)
+      (path "images/decal/light.png")
+      (type 1)
       )
     (decal
       (pos 2219.07 674.539)
@@ -672,6 +684,18 @@
       (type 0)
       )
     (decal
+      (pos -1695.53 1074.91)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -1863.92 1227.11)
+      (parent "")
+      (path "images/noise.png")
+      (type 0)
+      )
+    (decal
       (pos -661.151 929.93)
       (parent "")
       (path "images/decal/wallplate.png")
@@ -918,18 +942,12 @@
       (type 0)
       )
     (decal
-      (pos -1838.61 1103.44)
+      (pos -1549.55 1103.44)
       (parent "")
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
-      (pos -2146.61 1103.44)
-      (parent "")
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
       (pos -2365.62 1380.44)
       (parent "")
       (path "images/decal/stone2.png")
@@ -1020,12 +1038,18 @@
       (type 0)
       )
     (decal
-      (pos -1590.92 458.929)
+      (pos -1592.87 441.44)
       (parent "")
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
+      (pos -1726.45 358.897)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
       (pos -751.996 886.773)
       (parent "")
       (path "images/decal/handrail.png")
@@ -1062,7 +1086,7 @@
       (type 0)
       )
     (decal
-      (pos -810.5 414.625)
+      (pos -810.5 422.438)
       (parent "")
       (path "images/decal/roof.png")
       (type 0)
@@ -1122,42 +1146,24 @@
       (type 2)
       )
     (decal
-      (pos -1449.56 -39.2807)
+      (pos -1433.95 273.652)
       (parent "")
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
-      (pos -1638.23 50.563)
+      (pos -1348.02 358.027)
       (parent "")
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
-      (pos -1644.88 132.985)
-      (parent "")
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -1623.39 206.813)
-      (parent "")
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
       (pos -1604.64 321.266)
       (parent "")
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
-      (pos -1388.63 78.6875)
-      (parent "")
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
       (pos 889.5 909.938)
       (parent "")
       (path "images/decal/rooflamp_bloom.png")
@@ -1200,113 +1206,353 @@
       (type 0)
       )
     (decal
-      (pos 159.502 622.202)
+      (pos 983.756 904.953)
       (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos 972.752 671.292)
+      (pos 315.072 868.593)
       (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos 968.131 705.734)
+      (pos 1562.96 829.374)
       (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos 328.744 835.39)
+      (pos 1626.96 1067.2)
       (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos -1060.64 577.839)
+      (pos 11.075 1013.44)
       (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos 424.131 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -1002.18 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -914.086 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -832.618 1013.44)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos 1064.43 1014.67)
+      (parent "")
+      (path "images/objects/plant.png")
+      (type 0)
+      )
+    (decal
+      (pos -259.112 904.761)
+      (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos 1562.96 829.374)
+      (pos -1181.83 303.2)
       (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1721.87 997.44)
+      (parent "")
+      (path "images/objects/elevatordoor_left.png")
+      (type 0)
+      )
+    (decal
+      (pos -1721.87 869.44)
+      (parent "")
+      (path "images/objects/elevatordoor_left.png")
+      (type 0)
+      )
+    (decal
+      (pos -1721.87 648.367)
+      (parent "")
+      (path "images/objects/elevatordoor_left.png")
+      (type 0)
+      )
+    (decal
+      (pos -1721.87 776.367)
+      (parent "")
+      (path "images/objects/elevatordoor_left.png")
+      (type 0)
+      )
+    (decal
+      (pos -2120.61 725.188)
+      (parent "")
+      (path "images/noise.png")
+      (type 0)
+      )
+    (decal
+      (pos -2123.43 469.188)
+      (parent "")
+      (path "images/noise.png")
+      (type 0)
+      )
+    (decal
+      (pos -1721.87 1081.44)
+      (parent "")
+      (path "images/objects/elevatordoor_left.png")
+      (type 0)
+      )
+    (decal
+      (pos -1652.53 302.712)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos -1867.43 469.188)
+      (parent "")
+      (path "images/noise.png")
+      (type 0)
+      )
+    (decal
+      (pos -1865.87 725.188)
+      (parent "")
+      (path "images/noise.png")
+      (type 0)
+      )
+    (decal
+      (pos -1865.87 981.188)
+      (parent "")
+      (path "images/noise.png")
+      (type 0)
+      )
+    (decal
+      (pos -2264.59 1063.59)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2259.22 975.602)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2166.67 1074.01)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2173.27 303.706)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos -2658.88 301.753)
+      (parent "")
+      (path "images/decal/roof2.png")
+      (type 0)
+      )
+    (decal
+      (pos -2238.03 381.164)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2237.28 444.414)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2245.9 656.102)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2246.65 592.852)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2238.51 829.117)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2080.67 802.977)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2047.4 581.164)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2016.55 1049.91)
+      (parent "")
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -810.844 849.183)
+      (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos 1690.18 500.046)
+      (pos 676.954 1029.44)
       (parent "")
-      (path "images/decal/light.png")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 612.954 1029.44)
+      (parent "")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 648.954 965.44)
+      (parent "")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 740.954 1029.44)
+      (parent "")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 584.954 965.44)
+      (parent "")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 548.954 1029.44)
+      (parent "")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 706.554 965.44)
+      (parent "")
+      (path "images/objects/box.png")
+      (type 0)
+      )
+    (decal
+      (pos 996.814 579.855)
+      (parent "")
+      (path "images/objects/apartmentlamp_light.png")
       (type 1)
       )
     (decal
-      (pos 1705.09 795.718)
+      (pos 264.392 554.465)
       (parent "")
-      (path "images/decal/light.png")
+      (path "images/objects/apartmentlamp_light.png")
       (type 1)
       )
     (decal
-      (pos 926.541 883.87)
+      (pos 1649.16 577.902)
       (parent "")
+      (path "images/objects/apartmentlamp_light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1636 909.933)
+      (parent "")
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
-      (pos 11.075 1013.44)
+      (pos -3689.93 712.902)
       (parent "")
-      (path "images/objects/plant.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos 424.131 1013.44)
+      (pos -3886.44 968.902)
       (parent "")
-      (path "images/objects/plant.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos -1002.18 1013.44)
+      (pos -3516.44 968.902)
       (parent "")
-      (path "images/objects/plant.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos -914.086 1013.44)
+      (pos -4059.93 712.902)
       (parent "")
-      (path "images/objects/plant.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos -832.618 1013.44)
+      (pos -4256.44 968.902)
       (parent "")
-      (path "images/objects/plant.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos 1064.43 1014.67)
+      (pos -4253.74 456.902)
       (parent "")
-      (path "images/objects/plant.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos -354.815 727.027)
+      (pos -3513.74 456.902)
       (parent "")
-      (path "images/decal/light.png")
-      (type 1)
+      (path "images/decal/steelplate.png")
+      (type 0)
       )
     (decal
-      (pos -893.773 129.906)
+      (pos -3883.74 456.902)
       (parent "")
-      (path "images/decal/dark.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
-      (pos -899.632 118.188)
+      (pos -4429.93 712.902)
       (parent "")
-      (path "images/decal/dark.png")
+      (path "images/decal/steelplate.png")
       (type 0)
       )
+    (decal
+      (pos -3319.93 712.902)
+      (parent "")
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
     )
   )
 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -88,6 +88,7 @@
     "      <menuitem action='ToggleLightLayer'/>"
     "      <menuitem action='ToggleHighlightLayer'/>"
     "      <menuitem action='ToggleControlLayer'/>"
+    "      <menuitem action='ToggleBackgroundLayer'/>"
     "    </menu>"
     "    <menu action='MenuTools'>"
     "      <menuitem action='SelectTool'/>"
@@ -140,6 +141,7 @@
     "    <toolitem action='ToggleLightLayer'/>"
     "    <toolitem action='ToggleHighlightLayer'/>"
     "    <toolitem action='ToggleControlLayer'/>"
+    "    <toolitem action='ToggleBackgroundLayer'/>"
     "  </toolbar>"
     "</ui>";
 
@@ -202,15 +204,18 @@
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
                     sigc::mem_fun(*this, &EditorWindow::on_about_clicked));
 
-  Glib::RefPtr<Gtk::ToggleAction> toggle_color_layer = Gtk::ToggleAction::create_with_icon_name("ToggleColorLayer", "color", "Toogle Color Layer", "Toogle Color Layer");
-  Glib::RefPtr<Gtk::ToggleAction> toggle_light_layer = Gtk::ToggleAction::create_with_icon_name("ToggleLightLayer", "light", "Toogle Light Layer", "Toogle Light Layer");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_color_layer     = Gtk::ToggleAction::create_with_icon_name("ToggleColorLayer", "color", "Toogle Color Layer", "Toogle Color Layer");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_light_layer     = Gtk::ToggleAction::create_with_icon_name("ToggleLightLayer", "light", "Toogle Light Layer", "Toogle Light Layer");
   Glib::RefPtr<Gtk::ToggleAction> toggle_highlight_layer = Gtk::ToggleAction::create_with_icon_name("ToggleHighlightLayer", "highlight", "Toogle Highlight Layer", "Toogle Highlight Layer");
-  Glib::RefPtr<Gtk::ToggleAction> toggle_control_layer = Gtk::ToggleAction::create_with_icon_name("ToggleControlLayer", "control", "Toogle Control Layer", "Toogle Control Layer");
+  Glib::RefPtr<Gtk::ToggleAction> toggle_control_layer   = Gtk::ToggleAction::create_with_icon_name("ToggleControlLayer", "control", "Toogle Control Layer", "Toogle Control Layer");
+
+  Glib::RefPtr<Gtk::ToggleAction> background_layer = Gtk::ToggleAction::create_with_icon_name("ToggleBackgroundLayer", "background_layer", "Toggle Background Layer", "Toggle Background Layer");
   
   toggle_color_layer->set_active(true);
   toggle_light_layer->set_active(true);
   toggle_highlight_layer->set_active(true);
   toggle_control_layer->set_active(true);
+  background_layer->set_active(true);
 
   action_group->add(toggle_color_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (uint32_t)SceneContext::COLORMAP));
@@ -220,6 +225,8 @@
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_highlight_layer, (uint32_t)SceneContext::HIGHLIGHTMAP));
   action_group->add(toggle_control_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_control_layer, (uint32_t)SceneContext::CONTROLMAP));
+  action_group->add(background_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_background_layer), background_layer));
 
   // Tools
   action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));
@@ -253,7 +260,9 @@
 
   Gtk::Toolbar* toolbar = static_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBar"));
   toolbar->append(*(Gtk::manage(new Gtk::SeparatorToolItem())));
-  toolbar->append(*(Gtk::manage(new LayerWidget())));
+  layer_widget = Gtk::manage(new LayerWidget());
+  toolbar->append(*layer_widget);
+  layer_widget->signal_layer_toggle.connect(sigc::mem_fun(*this, &EditorWindow::on_layer_toggle));
 
   // Packing
 
@@ -281,7 +290,7 @@
   vpaned.pack1(object_selector, Gtk::EXPAND);
   vpaned.pack2(object_tree,     Gtk::SHRINK);
 
-  hpaned.set_position(730);
+  hpaned.set_position(1024);
   vpaned.set_position(420);
 
   // Window
@@ -318,14 +327,15 @@
   std::cout << "on_new" << std::endl;
 
   // FIXME: We abuse the minimap as our root GLContext
-  WindstilleWidget* windstille = Gtk::manage(new WindstilleWidget(glconfig, minimap_widget.get_gl_context()));
+  WindstilleWidget* wst = Gtk::manage(new WindstilleWidget(glconfig, minimap_widget.get_gl_context()));
 
   Glib::ustring title = Glib::ustring::compose("Sector %1", notebook.get_n_pages());
-  int new_page = notebook.append_page(*windstille, title);
-  windstille->show();
-  notebook.set_current_page(new_page); 
+  int new_page = notebook.append_page(*wst, title);
+  wst->show();
+  notebook.set_current_page(new_page);
 
-  object_tree.set_model(windstille->get_sector_model());
+  object_tree.set_model(wst->get_sector_model());
+  layer_widget->update(wst->get_layer_mask());
 }
 
 void
@@ -482,6 +492,16 @@
     }
 }
 
+void
+EditorWindow::toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action)
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->set_draw_background_pattern(action->get_active());
+      wst->queue_draw();
+    }
+}
+
 Tool*
 EditorWindow::get_current_tool() const
 {
@@ -532,10 +552,15 @@
 EditorWindow::on_switch_page(GtkNotebookPage* page, guint page_num)
 {
   std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;
-  if (get_windstille_widget())
-    object_tree.set_model(get_windstille_widget()->get_sector_model());
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      object_tree.set_model(wst->get_sector_model());
+      layer_widget->update(wst->get_layer_mask());
+    }
   else
-    object_tree.set_model(0);
+    {
+      object_tree.set_model(0);
+    }
 }
 
 void
@@ -559,6 +584,17 @@
 }
 
 void
+EditorWindow::on_layer_toggle(int layer, bool status)
+{
+  std::cout << "EditorWindow::on_layer_toggle(" << layer << ", " << status << ")" << std::endl;
+
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->get_layer_mask().set(layer, status);
+    }
+}
+
+void
 EditorWindow::on_play()
 {
   if (play_action->get_active())

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -36,6 +36,7 @@
 class WindstilleWidget;
 class SelectTool;
 class ZoomTool;
+class LayerWidget;
 
 class EditorWindow : public Gtk::Window
 {
@@ -72,6 +73,7 @@
   std::auto_ptr<SelectTool> select_tool;
   std::auto_ptr<ZoomTool>   zoom_tool;
   Tool* current_tool;
+  LayerWidget* layer_widget;
 
   sigc::connection  timeout_connection;
   
@@ -98,11 +100,14 @@
   void on_zoom_in();
   void on_zoom_out();
   void on_zoom_100();
+  
+  void on_layer_toggle(int layer, bool status);
 
   void on_switch_page(GtkNotebookPage* page, guint page_num);
   void on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool*);
 
   void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask);
+  void toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action);
 
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();

Modified: trunk/windstille/src/editor/layer.hpp
===================================================================
--- trunk/windstille/src/editor/layer.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/layer.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -18,8 +18,7 @@
 
 #ifndef HEADER_WINDSTILLE_EDITOR_LAYER_HPP
 #define HEADER_WINDSTILLE_EDITOR_LAYER_HPP
-
-/** */
+
 class Layer
 {
 private:
@@ -29,14 +28,35 @@
   Layer() : mask(~0) {}
   Layer(uint32_t mask_) : mask(mask_) {}
 
-  uint32_t get_mask() const;
+  uint32_t get_mask() const { return mask; }
 
   bool match(const Layer& rhs) const
   {
     return (mask & rhs.mask);
   }
+
+  void set(unsigned int layer, bool enable)
+  {
+    if (enable)
+      {
+        mask = mask | (1<<layer);
+      }
+    else
+      {
+        mask = mask & (~(1<<layer));
+      }
+  }
+
+  bool get(unsigned int layer) const 
+  {
+    return mask & (1<<layer);
+  }
+
+  operator bool() {
+    return mask;
+  }
 };
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -19,6 +19,8 @@
 #include <iostream>
 #include <gtkmm/togglebutton.h>
 #include <gtkmm/separator.h>
+
+#include "layer.hpp"
 #include "layer_widget.hpp"
 
 LayerWidget::LayerWidget()
@@ -36,6 +38,7 @@
 
             button->signal_toggled().connect(sigc::bind(sigc::mem_fun(*this, &LayerWidget::on_layer_toggle), 
                                                         button, layer_number));
+            buttons.push_back(button);
             layer_number += 1;
           }
         else
@@ -61,6 +64,16 @@
 LayerWidget::on_layer_toggle(Gtk::ToggleButton* button, int layer)
 {
   std::cout << "Layer: " << layer << " -> " << button->get_active() << std::endl;
+  signal_layer_toggle(layer, button->get_active());
 }
+
+void
+LayerWidget::update(const Layer& layer)
+{
+  for(int i = 0; i < 32; ++i)
+    {
+      buttons[i]->set_active(layer.get(i));
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -22,17 +22,23 @@
 #include <gtkmm/toolitem.h>
 #include <gtkmm/table.h>
 
+class Layer;
+
 class LayerWidget : public Gtk::ToolItem
 {
 private:
   Gtk::Table table;
+  std::vector<Gtk::ToggleButton*> buttons;
 
 public:
   LayerWidget();
   ~LayerWidget();
 
   void on_layer_toggle(Gtk::ToggleButton* button, int layer);
+  void update(const Layer& layer);
 
+  sigc::signal<void, int, bool> signal_layer_toggle;
+
 private:
   LayerWidget(const LayerWidget&);
   LayerWidget& operator=(const LayerWidget&);

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -35,6 +35,11 @@
   reader.read("name", name);
   reader.get("pos",  rel_pos);
   reader.read("parent",  parent);
+  
+  // FIXME: Bad, will overflow
+  int layer_mask = 1;
+  reader.read("layer",  layer_mask);
+  layer = Layer(layer_mask);
 }
 
 ObjectModel::~ObjectModel()
@@ -48,7 +53,8 @@
 
   return writer
     .write("pos", rel_pos)
-    .write("parent", parent.get() ? parent->get_name() : "");
+    .write("parent", parent.get() ? parent->get_name() : "")
+    .write("layer", layer.get_mask());
 }
 
 void

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -64,6 +64,7 @@
   void on_move_end(const Vector2f& offset);
 
   Layer get_layer() const { return layer; }
+  void  set_layer(const Layer& layer_) { layer = layer_; }
 
   SnapData snap_object(const Rectf& rect) const;
 

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -82,11 +82,12 @@
 }
 
 ObjectModelHandle
-SectorModel::get_object_at(const Vector2f& pos) const
+SectorModel::get_object_at(const Vector2f& pos, const Layer& layer) const
 {
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if ((*i)->get_bounding_box().is_inside(pos))
+      if (layer.match((*i)->get_layer()) &&
+          (*i)->get_bounding_box().is_inside(pos))
         {
           return *i;
         }
@@ -95,13 +96,14 @@
 }
 
 SelectionHandle
-SectorModel::get_selection(const Rectf& rect) const
+SectorModel::get_selection(const Rectf& rect, const Layer& layer) const
 {
   SelectionHandle selection = Selection::create();
 
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if ((*i)->get_bounding_box().is_overlapped(rect))
+      if (layer.match((*i)->get_layer()) &&
+          (*i)->get_bounding_box().is_overlapped(rect))
         {
           selection->add(*i);
         }

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -83,8 +83,8 @@
   void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
   void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
-  ObjectModelHandle get_object_at(const Vector2f& pos) const;
-  SelectionHandle   get_selection(const Rectf& rect) const;
+  ObjectModelHandle get_object_at(const Vector2f& pos, const Layer& layer) const;
+  SelectionHandle   get_selection(const Rectf& rect, const Layer& layer) const;
   
   void raise_to_top(ObjectModelHandle object);
   void lower_to_bottom(ObjectModelHandle object);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -32,7 +32,7 @@
 {
   click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
   
-  ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos);
+  ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos, wst.get_layer_mask());
   if (object.get())
     {
       if (wst.get_selection()->has_object(object))
@@ -141,7 +141,7 @@
     {
       mode = NO_MODE;
       rect.normalize();
-      wst.set_selection(wst.get_sector_model()->get_selection(rect));
+      wst.set_selection(wst.get_sector_model()->get_selection(rect, wst.get_layer_mask()));
     }
 
   mode = NO_MODE;

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -41,7 +41,9 @@
   : sector_model(new SectorModel()),
     active_tool(0),
     scroll_tool(new ScrollTool()),
-    map_type(DecalObjectModel::COLORMAP)
+    map_type(DecalObjectModel::COLORMAP),
+    draw_background_pattern(true),
+    layer_mask(1)
 {
   set_gl_capability(glconfig, share_list);
 
@@ -204,8 +206,10 @@
     {
       state.push(*sc);
       
-      //sc->color().fill_pattern(background_pattern);
-      sc->color().fill_screen(Color());
+      if (draw_background_pattern)
+        sc->color().fill_pattern(background_pattern);
+      else
+        sc->color().fill_screen(Color());
 
       sector_model->draw(*sc);
 
@@ -469,6 +473,14 @@
                                                       state.screen_to_world(Vector2f(x, y)),
                                                       data.get_data_as_string().substr(5), 
                                                       map_type);
+
+  // if layer mask is 0, set it to all layers instead, so that the
+  // object doesn't become unusable
+  if (!layer_mask)
+    object->set_layer(Layer());
+  else
+    object->set_layer(layer_mask);
+
   sector_model->add(object);
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -36,6 +36,7 @@
 #include "control_point.hpp"
 #include "decal_object_model.hpp"
 #include "selection.hpp"
+#include "layer.hpp"
 
 class Tool;
 class ScrollTool;
@@ -58,7 +59,9 @@
   SelectionHandle selection;
   DecalObjectModel::MapType map_type;
   Texture background_pattern;
-
+  bool draw_background_pattern;
+  Layer layer_mask;
+  
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
                    const Glib::RefPtr<const Gdk::GL::Context>& share_list);
@@ -108,10 +111,14 @@
   void set_selection(const SelectionHandle& selection);
   SelectionHandle get_selection() const;
 
+  Layer& get_layer_mask() { return layer_mask; }
+
   SceneContext* get_sc() const { return sc.get(); }
 
   void load_file(const std::string& filename);
 
+  void set_draw_background_pattern(bool v) { draw_background_pattern = v; }
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/util/file_reader.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -84,6 +84,15 @@
 }
 
 bool
+FileReader::read(const char* name, uint32_t& value)
+{
+  if (impl.get())
+    return impl->read_uint32(name, value);
+  else
+    return false;
+}
+
+bool
 FileReader::read(const char* name, int& value)
 {
   if (impl.get())

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/util/file_reader.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -66,6 +66,7 @@
   // FIXME: Is there any nice way to not use two different names?
   bool read(const char* name, FileReader& v);
 
+  bool read(const char* name, uint32_t& v);
   bool read(const char* name, int&   v);
   bool read(const char* name, float& v);
   bool read(const char* name, bool& v);

Modified: trunk/windstille/src/util/file_reader_impl.hpp
===================================================================
--- trunk/windstille/src/util/file_reader_impl.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/util/file_reader_impl.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -41,6 +41,7 @@
 
   virtual bool read_bool  (const char* name, bool&)        const =0;
   virtual bool read_int   (const char* name, int&)         const =0;
+  virtual bool read_uint32(const char* name, uint32_t&)    const =0;
   virtual bool read_float (const char* name, float&)       const =0;
   virtual bool read_string(const char* name, std::string&) const =0;
 

Modified: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/util/file_writer.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -80,6 +80,14 @@
 }
 
 FileWriter&
+FileWriter::write(const std::string& name, uint32_t value)
+{
+  indent();
+  out << "(" << name << " " << value << ")\n";
+  return *this;
+}
+
+FileWriter&
 FileWriter::write(const std::string& name, float value)
 {
   indent();

Modified: trunk/windstille/src/util/file_writer.hpp
===================================================================
--- trunk/windstille/src/util/file_writer.hpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/util/file_writer.hpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -44,6 +44,7 @@
 
   FileWriter& write(const std::string& name, bool value);
   FileWriter& write(const std::string& name, int value);
+  FileWriter& write(const std::string& name, uint32_t value);
   FileWriter& write(const std::string& name, float value);
   FileWriter& write(const std::string& name, const std::string& value);
   FileWriter& write(const std::string& name, const char* value);

Modified: trunk/windstille/src/util/sexpr_file_reader.cpp
===================================================================
--- trunk/windstille/src/util/sexpr_file_reader.cpp	2009-03-25 22:07:04 UTC (rev 2767)
+++ trunk/windstille/src/util/sexpr_file_reader.cpp	2009-03-26 01:46:44 UTC (rev 2768)
@@ -81,6 +81,18 @@
     return false;
   }
 
+  bool read_uint32(const char* name, uint32_t& v) const 
+  {
+    lisp::Lisp* item = get_subsection_item(name);
+    if (item && item->get_type() == lisp::Lisp::TYPE_INT)
+      {
+        // FIXME: Not good: overflow
+        v = item->get_int();
+        return true;
+      }
+    return false;
+  }
+
   bool read_float(const char* name, float& v) const 
   {
     lisp::Lisp* item = get_subsection_item(name);



From grumbel at mail.berlios.de  Thu Mar 26 04:08:12 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 26 Mar 2009 04:08:12 +0100
Subject: [Windstille-commit] r2769 - in trunk/windstille: .
	data/sectors/trainstation src/editor src/util
Message-ID: <200903260308.n2Q38CZ1030211@sheep.berlios.de>

Author: grumbel
Date: 2009-03-26 04:08:10 +0100 (Thu, 26 Mar 2009)
New Revision: 2769

Added:
   trunk/windstille/src/editor/layers.hpp
Removed:
   trunk/windstille/src/editor/layer.hpp
Modified:
   trunk/windstille/TODO
   trunk/windstille/data/sectors/trainstation/trainstation.wst
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/layer_widget.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
   trunk/windstille/src/util/file_reader_impl.hpp
   trunk/windstille/src/util/file_writer.cpp
   trunk/windstille/src/util/file_writer.hpp
Log:
Removed layer count to 16, renamed Layer to Layers

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/TODO	2009-03-26 03:08:10 UTC (rev 2769)
@@ -499,8 +499,19 @@
 Editor
 ======
 
-* lisp can't save uint32_t, maybe should save layer mask as string or so
+* add a way to move object to a different layer
 
+* add keyboard shortcut important stuff:
+
+  - layer toggle 1,2,3,4,5,...
+  - color, light, highlight toggle
+  - mark all objects
+  - delete object
+  - duplicate object
+
+* lisp can't save uint32_t, maybe should save layer mask as string or
+  limit it to a uint16_t or whatever
+
 * add recent files
 
 * add difference between "save" and "save as", along with overwrite warnings
@@ -511,17 +522,14 @@
 
 * lightmap objects are hard to see
 
-* decal needs to be scalable and have vertices moveable
+* decal needs to be scalable and have vertices moveable, also color
+  needs to be adjustable
 
-* add button to toggle background pattern
-
 * make duplicated objects insert near those from which they where cloned
 
 * WindstilleWidget contains garbage when its first created, it gets
   however cleaned up in later redraws
 
-* think about load/save
-
 * think about Undo/Redo
 
 * layer move tool

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-26 03:08:10 UTC (rev 2769)
@@ -8,1548 +8,1806 @@
     (decal
       (pos -1060.64 577.839)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos -2115.12 1225.16)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -2120.61 981.188)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -1721.87 520.367)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -1721.87 392.367)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -602.767 343.23)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -1091.77 303.729)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos -1072.91 403.374)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 2)
       )
     (decal
       (pos -1553.29 729.292)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos -1210.12 845.062)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos -475.483 759.19)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos 2219.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 2094.53 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 2091.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1835.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1838.54 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 1963.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1451.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1326.54 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 1323.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1579.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1582.54 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 1707.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 683.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 558.531 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 555.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 299.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 302.531 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 427.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 939.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 814.531 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 811.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1067.08 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 1070.53 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 1195.07 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -852.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -977.465 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos -980.925 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -340.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -465.469 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos -468.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -724.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -721.469 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos -596.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -84.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -209.469 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos -212.922 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 43.0781 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos 46.5312 482.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate.png")
       (type 0)
       )
     (decal
       (pos 171.078 674.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_small.png")
       (type 0)
       )
     (decal
       (pos -916.925 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos -660.925 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos -148.925 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos -404.925 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 619.075 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 875.075 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 363.075 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 107.075 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 1899.07 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 2155.07 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 1387.07 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 1643.07 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 1131.07 918.539)
       (parent "")
+      (layer 1)
       (path "images/decal/tunnelplate_bottom.png")
       (type 0)
       )
     (decal
       (pos 980.65 428.895)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp.png")
       (type 0)
       )
     (decal
       (pos -189.618 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -445.618 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 578.382 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 834.382 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 322.382 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 66.382 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 1602.39 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 1858.39 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 1346.39 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 1090.39 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos 1858.39 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 1346.39 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 1602.39 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 834.382 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 578.382 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 1090.39 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 66.382 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -189.618 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 322.382 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -445.618 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos 194.382 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos 706.382 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos 1730.39 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos 1218.39 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos -317.618 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos -687.714 368.055)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -661.151 417.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -917.151 417.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -917.151 289.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -917.151 673.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -917.151 545.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -442.601 533.52)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -523.101 831.145)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -661.151 673.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -661.151 545.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1173.15 545.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1173.15 673.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1429.15 545.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1429.15 673.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1429.15 289.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1429.15 417.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1173.15 417.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1171.2 289.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1173.15 801.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1429.15 801.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -1368.62 854.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -1365.87 618.726)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -1592.87 918.367)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -1592.87 687.93)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -1695.53 1074.91)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -1863.92 1227.11)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -661.151 929.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -661.151 1057.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -917.151 801.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -661.151 801.93)
       (parent "")
+      (layer 1)
       (path "images/decal/wallplate.png")
       (type 0)
       )
     (decal
       (pos -886.121 964.121)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos 240.218 886.438)
       (parent "")
+      (layer 1)
       (path "images/decal/board.png")
       (type 0)
       )
     (decal
       (pos 889.175 913.438)
       (parent "")
+      (layer 1)
       (path "images/decal/terminal.png")
       (type 0)
       )
     (decal
       (pos 11.4759 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos -296.524 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 935.125 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 1243.12 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 627.476 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 319.476 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 1551.12 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 2166.77 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 1858.77 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos 228.959 426.715)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp.png")
       (type 0)
       )
     (decal
       (pos 1640.35 434.301)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp.png")
       (type 0)
       )
     (decal
       (pos -1392.79 326.273)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -1281.79 406.929)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -1170.79 482.226)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -1059.79 558.976)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -954.791 632.226)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -843.791 708.976)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -958.746 821.184)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -714.184 1017.31)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -914.618 938.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -687.618 1093.8)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -734.354 784.664)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -621.496 968.836)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -1141.62 974.43)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -621.791 862.976)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail2.png")
       (type 0)
       )
     (decal
       (pos -957.618 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -701.618 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -701.618 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -957.618 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -826.493 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos -912.173 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos -604.524 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos -1530.61 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos -1220.17 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos -1549.55 1103.44)
       (parent "")
+      (layer 1)
       (path "images/decal/ground.png")
       (type 0)
       )
     (decal
       (pos -2365.62 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos -1853.62 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos -1341.62 1380.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone2.png")
       (type 0)
       )
     (decal
       (pos -1725.62 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -2237.62 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -1981.62 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -1469.62 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -1213.62 1187.44)
       (parent "")
+      (layer 1)
       (path "images/decal/rail.png")
       (type 0)
       )
     (decal
       (pos -1213.62 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -1725.62 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -1469.62 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -1981.62 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -2237.62 1273.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stone.png")
       (type 0)
       )
     (decal
       (pos -1141.62 774.226)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -1202.71 916.44)
       (parent "")
+      (layer 1)
       (path "images/decal/door.png")
       (type 0)
       )
     (decal
       (pos -1592.87 441.44)
       (parent "")
+      (layer 1)
       (path "images/decal/stairs.png")
       (type 0)
       )
     (decal
       (pos -1726.45 358.897)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -751.996 886.773)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -999.683 721.898)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -870.746 802.398)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -1126.25 626.586)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -1270.81 524.211)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -1404.43 434.336)
       (parent "")
+      (layer 1)
       (path "images/decal/handrail.png")
       (type 0)
       )
     (decal
       (pos -810.5 422.438)
       (parent "")
+      (layer 1)
       (path "images/decal/roof.png")
       (type 0)
       )
     (decal
       (pos -165.5 335.625)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos 345.5 335.625)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos 1367.5 335.625)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos 856.5 335.625)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos 2389.5 335.625)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos 1878.5 335.625)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos 234.812 549)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos 995.749 533.375)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos 1658.25 541.188)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos -1433.95 273.652)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos -1348.02 358.027)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos -1604.64 321.266)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos 889.5 909.938)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos 889.5 825.563)
       (parent "")
+      (layer 1)
       (path "images/decal/rooflamp_bloom.png")
       (type 2)
       )
     (decal
       (pos -163.625 985.44)
       (parent "")
+      (layer 1)
       (path "images/decal/bench.png")
       (type 0)
       )
     (decal
       (pos 578.562 985.44)
       (parent "")
+      (layer 1)
       (path "images/decal/bench.png")
       (type 0)
       )
     (decal
       (pos 1244.19 985.44)
       (parent "")
+      (layer 1)
       (path "images/decal/bench.png")
       (type 0)
       )
     (decal
       (pos 1542.62 985.44)
       (parent "")
+      (layer 1)
       (path "images/decal/bench.png")
       (type 0)
       )
     (decal
       (pos 1864.5 985.44)
       (parent "")
+      (layer 1)
       (path "images/decal/bench.png")
       (type 0)
       )
     (decal
       (pos 983.756 904.953)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos 315.072 868.593)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos 1562.96 829.374)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos 1626.96 1067.2)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos 11.075 1013.44)
       (parent "")
+      (layer 1)
       (path "images/objects/plant.png")
       (type 0)
       )
     (decal
       (pos 424.131 1013.44)
       (parent "")
+      (layer 1)
       (path "images/objects/plant.png")
       (type 0)
       )
     (decal
       (pos -1002.18 1013.44)
       (parent "")
+      (layer 1)
       (path "images/objects/plant.png")
       (type 0)
       )
     (decal
       (pos -914.086 1013.44)
       (parent "")
+      (layer 1)
       (path "images/objects/plant.png")
       (type 0)
       )
     (decal
       (pos -832.618 1013.44)
       (parent "")
+      (layer 1)
       (path "images/objects/plant.png")
       (type 0)
       )
     (decal
       (pos 1064.43 1014.67)
       (parent "")
+      (layer 1)
       (path "images/objects/plant.png")
       (type 0)
       )
     (decal
       (pos -259.112 904.761)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos -1181.83 303.2)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos -1721.87 997.44)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -1721.87 869.44)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -1721.87 648.367)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -1721.87 776.367)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -2120.61 725.188)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -2123.43 469.188)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -1721.87 1081.44)
       (parent "")
+      (layer 1)
       (path "images/objects/elevatordoor_left.png")
       (type 0)
       )
     (decal
       (pos -1652.53 302.712)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos -1867.43 469.188)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -1865.87 725.188)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -1865.87 981.188)
       (parent "")
+      (layer 1)
       (path "images/noise.png")
       (type 0)
       )
     (decal
       (pos -2264.59 1063.59)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2259.22 975.602)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2166.67 1074.01)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2173.27 303.706)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos -2658.88 301.753)
       (parent "")
+      (layer 1)
       (path "images/decal/roof2.png")
       (type 0)
       )
     (decal
       (pos -2238.03 381.164)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2237.28 444.414)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2245.9 656.102)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2246.65 592.852)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2238.51 829.117)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2080.67 802.977)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2047.4 581.164)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -2016.55 1049.91)
       (parent "")
+      (layer 1)
       (path "images/decal/dark.png")
       (type 0)
       )
     (decal
       (pos -810.844 849.183)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos 676.954 1029.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 612.954 1029.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 648.954 965.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 740.954 1029.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 584.954 965.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 548.954 1029.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 706.554 965.44)
       (parent "")
+      (layer 1)
       (path "images/objects/box.png")
       (type 0)
       )
     (decal
       (pos 996.814 579.855)
       (parent "")
+      (layer 1)
       (path "images/objects/apartmentlamp_light.png")
       (type 1)
       )
     (decal
       (pos 264.392 554.465)
       (parent "")
+      (layer 1)
       (path "images/objects/apartmentlamp_light.png")
       (type 1)
       )
     (decal
       (pos 1649.16 577.902)
       (parent "")
+      (layer 1)
       (path "images/objects/apartmentlamp_light.png")
       (type 1)
       )
     (decal
       (pos -1636 909.933)
       (parent "")
+      (layer 1)
       (path "images/decal/light.png")
       (type 1)
       )
     (decal
       (pos -3689.93 712.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -3886.44 968.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -3516.44 968.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -4059.93 712.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -4256.44 968.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -4253.74 456.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -3513.74 456.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -3883.74 456.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -4429.93 712.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )
     (decal
       (pos -3319.93 712.902)
       (parent "")
+      (layer 1)
       (path "images/decal/steelplate.png")
       (type 0)
       )

Deleted: trunk/windstille/src/editor/layer.hpp
===================================================================
--- trunk/windstille/src/editor/layer.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/layer.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -1,62 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_EDITOR_LAYER_HPP
-#define HEADER_WINDSTILLE_EDITOR_LAYER_HPP
-
-class Layer
-{
-private:
-  uint32_t mask;
-
-public:
-  Layer() : mask(~0) {}
-  Layer(uint32_t mask_) : mask(mask_) {}
-
-  uint32_t get_mask() const { return mask; }
-
-  bool match(const Layer& rhs) const
-  {
-    return (mask & rhs.mask);
-  }
-
-  void set(unsigned int layer, bool enable)
-  {
-    if (enable)
-      {
-        mask = mask | (1<<layer);
-      }
-    else
-      {
-        mask = mask & (~(1<<layer));
-      }
-  }
-
-  bool get(unsigned int layer) const 
-  {
-    return mask & (1<<layer);
-  }
-
-  operator bool() {
-    return mask;
-  }
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -20,15 +20,15 @@
 #include <gtkmm/togglebutton.h>
 #include <gtkmm/separator.h>
 
-#include "layer.hpp"
+#include "layers.hpp"
 #include "layer_widget.hpp"
 
 LayerWidget::LayerWidget()
-  : table(2, 19, false)
+  : table(2, 9, false)
 {
   int layer_number = 0;
   for(int y = 0; y < 2; ++y)
-    for(int x = 0; x < 19; ++x)
+    for(int x = 0; x < 9; ++x)
       {
         if ((x+1) % 5)
           {
@@ -63,16 +63,15 @@
 void
 LayerWidget::on_layer_toggle(Gtk::ToggleButton* button, int layer)
 {
-  std::cout << "Layer: " << layer << " -> " << button->get_active() << std::endl;
   signal_layer_toggle(layer, button->get_active());
 }
 
 void
-LayerWidget::update(const Layer& layer)
+LayerWidget::update(const Layers& layers)
 {
-  for(int i = 0; i < 32; ++i)
+  for(int i = 0; i < layers.size(); ++i)
     {
-      buttons[i]->set_active(layer.get(i));
+      buttons[i]->set_active(layers.get(i));
     }
 }
 

Modified: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -22,7 +22,7 @@
 #include <gtkmm/toolitem.h>
 #include <gtkmm/table.h>
 
-class Layer;
+class Layers;
 
 class LayerWidget : public Gtk::ToolItem
 {
@@ -35,7 +35,7 @@
   ~LayerWidget();
 
   void on_layer_toggle(Gtk::ToggleButton* button, int layer);
-  void update(const Layer& layer);
+  void update(const Layers& layers);
 
   sigc::signal<void, int, bool> signal_layer_toggle;
 

Copied: trunk/windstille/src/editor/layers.hpp (from rev 2768, trunk/windstille/src/editor/layer.hpp)
===================================================================
--- trunk/windstille/src/editor/layer.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/layers.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -0,0 +1,70 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_LAYERS_HPP
+#define HEADER_WINDSTILLE_EDITOR_LAYERS_HPP
+
+class Layers
+{
+private:
+  uint16_t mask;
+
+public:
+  Layers() : mask(~0) {}
+  Layers(uint16_t mask_) : mask(mask_) {}
+
+  uint16_t get_mask() const
+  {
+    return mask; 
+  }
+
+  bool match(const Layers& rhs) const
+  {
+    return (mask & rhs.mask);
+  }
+
+  void set(unsigned int layer, bool enable)
+  {
+    if (enable)
+      {
+        mask = mask | (1<<layer);
+      }
+    else
+      {
+        mask = mask & (~(1<<layer));
+      }
+  }
+
+  int size() const 
+  {
+    return 16; 
+  }
+
+  bool get(unsigned int layer) const 
+  {
+    return mask & (1<<layer);
+  }
+
+  operator bool() {
+    return mask;
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layers.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -36,10 +36,9 @@
   reader.get("pos",  rel_pos);
   reader.read("parent",  parent);
   
-  // FIXME: Bad, will overflow
   int layer_mask = 1;
-  reader.read("layer",  layer_mask);
-  layer = Layer(layer_mask);
+  reader.read("layer", layer_mask);
+  layers = Layers(layer_mask);
 }
 
 ObjectModel::~ObjectModel()
@@ -54,7 +53,7 @@
   return writer
     .write("pos", rel_pos)
     .write("parent", parent.get() ? parent->get_name() : "")
-    .write("layer", layer.get_mask());
+    .write("layer", layers.get_mask());
 }
 
 void

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -23,7 +23,7 @@
 #include <boost/weak_ptr.hpp>
 #include <string>
 
-#include "layer.hpp"
+#include "layers.hpp"
 #include "util/file_writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
@@ -40,7 +40,7 @@
 private:
   std::string name;
   Vector2f    rel_pos;
-  Layer  layer;
+  Layers      layers;
 
   ObjectModelPtr parent_ptr;
   Vector2f move_offset;
@@ -63,8 +63,8 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
-  Layer get_layer() const { return layer; }
-  void  set_layer(const Layer& layer_) { layer = layer_; }
+  Layers get_layers() const { return layers; }
+  void   set_layers(const Layers& layers_) { layers = layers_; }
 
   SnapData snap_object(const Rectf& rect) const;
 

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -82,11 +82,11 @@
 }
 
 ObjectModelHandle
-SectorModel::get_object_at(const Vector2f& pos, const Layer& layer) const
+SectorModel::get_object_at(const Vector2f& pos, const Layers& layers) const
 {
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if (layer.match((*i)->get_layer()) &&
+      if (layers.match((*i)->get_layers()) &&
           (*i)->get_bounding_box().is_inside(pos))
         {
           return *i;
@@ -96,13 +96,13 @@
 }
 
 SelectionHandle
-SectorModel::get_selection(const Rectf& rect, const Layer& layer) const
+SectorModel::get_selection(const Rectf& rect, const Layers& layers) const
 {
   SelectionHandle selection = Selection::create();
 
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if (layer.match((*i)->get_layer()) &&
+      if (layers.match((*i)->get_layers()) &&
           (*i)->get_bounding_box().is_overlapped(rect))
         {
           selection->add(*i);

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -83,8 +83,8 @@
   void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
   void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
-  ObjectModelHandle get_object_at(const Vector2f& pos, const Layer& layer) const;
-  SelectionHandle   get_selection(const Rectf& rect, const Layer& layer) const;
+  ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
+  SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;
   
   void raise_to_top(ObjectModelHandle object);
   void lower_to_bottom(ObjectModelHandle object);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -477,9 +477,9 @@
   // if layer mask is 0, set it to all layers instead, so that the
   // object doesn't become unusable
   if (!layer_mask)
-    object->set_layer(Layer());
+    object->set_layers(Layers());
   else
-    object->set_layer(layer_mask);
+    object->set_layers(layer_mask);
 
   sector_model->add(object);
 }

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -36,7 +36,7 @@
 #include "control_point.hpp"
 #include "decal_object_model.hpp"
 #include "selection.hpp"
-#include "layer.hpp"
+#include "layers.hpp"
 
 class Tool;
 class ScrollTool;
@@ -60,7 +60,7 @@
   DecalObjectModel::MapType map_type;
   Texture background_pattern;
   bool draw_background_pattern;
-  Layer layer_mask;
+  Layers layer_mask;
   
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
@@ -111,7 +111,7 @@
   void set_selection(const SelectionHandle& selection);
   SelectionHandle get_selection() const;
 
-  Layer& get_layer_mask() { return layer_mask; }
+  Layers& get_layer_mask() { return layer_mask; }
 
   SceneContext* get_sc() const { return sc.get(); }
 

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/util/file_reader.cpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -84,15 +84,6 @@
 }
 
 bool
-FileReader::read(const char* name, uint32_t& value)
-{
-  if (impl.get())
-    return impl->read_uint32(name, value);
-  else
-    return false;
-}
-
-bool
 FileReader::read(const char* name, int& value)
 {
   if (impl.get())

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/util/file_reader.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -66,7 +66,6 @@
   // FIXME: Is there any nice way to not use two different names?
   bool read(const char* name, FileReader& v);
 
-  bool read(const char* name, uint32_t& v);
   bool read(const char* name, int&   v);
   bool read(const char* name, float& v);
   bool read(const char* name, bool& v);

Modified: trunk/windstille/src/util/file_reader_impl.hpp
===================================================================
--- trunk/windstille/src/util/file_reader_impl.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/util/file_reader_impl.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -41,7 +41,6 @@
 
   virtual bool read_bool  (const char* name, bool&)        const =0;
   virtual bool read_int   (const char* name, int&)         const =0;
-  virtual bool read_uint32(const char* name, uint32_t&)    const =0;
   virtual bool read_float (const char* name, float&)       const =0;
   virtual bool read_string(const char* name, std::string&) const =0;
 

Modified: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/util/file_writer.cpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -80,14 +80,6 @@
 }
 
 FileWriter&
-FileWriter::write(const std::string& name, uint32_t value)
-{
-  indent();
-  out << "(" << name << " " << value << ")\n";
-  return *this;
-}
-
-FileWriter&
 FileWriter::write(const std::string& name, float value)
 {
   indent();

Modified: trunk/windstille/src/util/file_writer.hpp
===================================================================
--- trunk/windstille/src/util/file_writer.hpp	2009-03-26 01:46:44 UTC (rev 2768)
+++ trunk/windstille/src/util/file_writer.hpp	2009-03-26 03:08:10 UTC (rev 2769)
@@ -44,7 +44,6 @@
 
   FileWriter& write(const std::string& name, bool value);
   FileWriter& write(const std::string& name, int value);
-  FileWriter& write(const std::string& name, uint32_t value);
   FileWriter& write(const std::string& name, float value);
   FileWriter& write(const std::string& name, const std::string& value);
   FileWriter& write(const std::string& name, const char* value);



From grumbel at mail.berlios.de  Thu Mar 26 05:16:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 26 Mar 2009 05:16:50 +0100
Subject: [Windstille-commit] r2770 - in trunk/windstille: . src/editor
Message-ID: <200903260416.n2Q4Goc6008069@sheep.berlios.de>

Author: grumbel
Date: 2009-03-26 05:16:49 +0100 (Thu, 26 Mar 2009)
New Revision: 2770

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added option to only draw active layers

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/TODO	2009-03-26 04:16:49 UTC (rev 2770)
@@ -499,6 +499,14 @@
 Editor
 ======
 
+* maybe limit snapping by layer, maybe as an option via button, since
+  snapping to a background texture is annoying, while snapping to the
+  ground can be very important
+
+  - could limit snapping to all visible layers and add a button to toggle layer visibility
+
+* add button and keyboard shortcut to mark/unmark all layers
+
 * add a way to move object to a different layer
 
 * add keyboard shortcut important stuff:

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-26 04:16:49 UTC (rev 2770)
@@ -89,6 +89,7 @@
     "      <menuitem action='ToggleHighlightLayer'/>"
     "      <menuitem action='ToggleControlLayer'/>"
     "      <menuitem action='ToggleBackgroundLayer'/>"
+    "      <menuitem action='ToggleVisibleLayer'/>"
     "    </menu>"
     "    <menu action='MenuTools'>"
     "      <menuitem action='SelectTool'/>"
@@ -142,6 +143,7 @@
     "    <toolitem action='ToggleHighlightLayer'/>"
     "    <toolitem action='ToggleControlLayer'/>"
     "    <toolitem action='ToggleBackgroundLayer'/>"
+    "    <toolitem action='ToggleVisibleLayer'/>"
     "  </toolbar>"
     "</ui>";
 
@@ -210,12 +212,14 @@
   Glib::RefPtr<Gtk::ToggleAction> toggle_control_layer   = Gtk::ToggleAction::create_with_icon_name("ToggleControlLayer", "control", "Toogle Control Layer", "Toogle Control Layer");
 
   Glib::RefPtr<Gtk::ToggleAction> background_layer = Gtk::ToggleAction::create_with_icon_name("ToggleBackgroundLayer", "background_layer", "Toggle Background Layer", "Toggle Background Layer");
+  Glib::RefPtr<Gtk::ToggleAction> visible_layer    = Gtk::ToggleAction::create_with_icon_name("ToggleVisibleLayer", "draw_visible_layer", "Toggle Only Active Layer", "Toggle Only Active Layer");
   
   toggle_color_layer->set_active(true);
   toggle_light_layer->set_active(true);
   toggle_highlight_layer->set_active(true);
   toggle_control_layer->set_active(true);
   background_layer->set_active(true);
+  visible_layer->set_active(true);
 
   action_group->add(toggle_color_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (uint32_t)SceneContext::COLORMAP));
@@ -227,6 +231,8 @@
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_control_layer, (uint32_t)SceneContext::CONTROLMAP));
   action_group->add(background_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_background_layer), background_layer));
+  action_group->add(visible_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_draw_only_active_layer), visible_layer));
 
   // Tools
   action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));
@@ -493,6 +499,16 @@
 }
 
 void
+EditorWindow::toggle_draw_only_active_layer(Glib::RefPtr<Gtk::ToggleAction> action)
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->set_draw_only_active_layer(action->get_active());
+      wst->queue_draw();
+    }
+}
+
+void
 EditorWindow::toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action)
 {
   if (WindstilleWidget* wst = get_windstille_widget())
@@ -591,6 +607,7 @@
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       wst->get_layer_mask().set(layer, status);
+      wst->queue_draw();
     }
 }
 

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-26 04:16:49 UTC (rev 2770)
@@ -108,6 +108,7 @@
 
   void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask);
   void toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action);
+  void toggle_draw_only_active_layer(Glib::RefPtr<Gtk::ToggleAction> action);
 
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-26 04:16:49 UTC (rev 2770)
@@ -64,11 +64,12 @@
 }
 
 void
-SectorModel::draw(SceneContext& sc)
+SectorModel::draw(SceneContext& sc, const Layers& layers)
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      (*i)->draw(sc);
+      if (layers.match((*i)->get_layers()))
+        (*i)->draw(sc);
     }
 }
 

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-26 04:16:49 UTC (rev 2770)
@@ -70,7 +70,7 @@
 
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
-  void draw(SceneContext& sc);
+  void draw(SceneContext& sc, const Layers& layers);
   void update(float delta);
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 04:16:49 UTC (rev 2770)
@@ -43,7 +43,8 @@
     scroll_tool(new ScrollTool()),
     map_type(DecalObjectModel::COLORMAP),
     draw_background_pattern(true),
-    layer_mask(1)
+    layer_mask(1),
+    draw_only_active_layers(true)
 {
   set_gl_capability(glconfig, share_list);
 
@@ -211,7 +212,10 @@
       else
         sc->color().fill_screen(Color());
 
-      sector_model->draw(*sc);
+      if (draw_only_active_layers)
+        sector_model->draw(*sc, layer_mask);
+      else
+        sector_model->draw(*sc, Layers());
 
       for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
         {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 03:08:10 UTC (rev 2769)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 04:16:49 UTC (rev 2770)
@@ -61,6 +61,7 @@
   Texture background_pattern;
   bool draw_background_pattern;
   Layers layer_mask;
+  bool draw_only_active_layers;
   
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
@@ -118,6 +119,7 @@
   void load_file(const std::string& filename);
 
   void set_draw_background_pattern(bool v) { draw_background_pattern = v; }
+  void set_draw_only_active_layer(bool v) { draw_only_active_layers = v; }
 
 private:
   WindstilleWidget (const WindstilleWidget&);



From grumbel at mail.berlios.de  Thu Mar 26 18:35:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 26 Mar 2009 18:35:16 +0100
Subject: [Windstille-commit] r2771 - trunk/windstille/src/editor
Message-ID: <200903261735.n2QHZGHd007656@sheep.berlios.de>

Author: grumbel
Date: 2009-03-26 18:35:08 +0100 (Thu, 26 Mar 2009)
New Revision: 2771

Modified:
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/layer_widget.hpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Limit snapping to objects that are visible

Modified: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-03-26 04:16:49 UTC (rev 2770)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-03-26 17:35:08 UTC (rev 2771)
@@ -74,5 +74,16 @@
       buttons[i]->set_active(layers.get(i));
     }
 }
+
+Layers
+LayerWidget::get_layers() const
+{
+  Layers layers;
+  for(int i = 0; i < layers.size(); ++i)
+    {
+      layers.set(i, buttons[i]->get_active());
+    }
+  return layers;
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-03-26 04:16:49 UTC (rev 2770)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-03-26 17:35:08 UTC (rev 2771)
@@ -21,9 +21,9 @@
 
 #include <gtkmm/toolitem.h>
 #include <gtkmm/table.h>
+
+#include "layers.hpp"
 
-class Layers;
-
 class LayerWidget : public Gtk::ToolItem
 {
 private:
@@ -37,6 +37,8 @@
   void on_layer_toggle(Gtk::ToggleButton* button, int layer);
   void update(const Layers& layers);
 
+  Layers get_layers() const;
+
   sigc::signal<void, int, bool> signal_layer_toggle;
 
 private:

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-26 04:16:49 UTC (rev 2770)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-26 17:35:08 UTC (rev 2771)
@@ -64,8 +64,10 @@
   Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> objects_tree;
   Objects objects;
+  
+public:
+  typedef Objects::iterator iterator;
 
-public:
   SectorModel();
 
   void add(const ObjectModelHandle& object);
@@ -96,6 +98,9 @@
   void load(const std::string& filename);
   void write(FileWriter& writer) const;
 
+  iterator begin() { return objects.begin(); }
+  iterator end() { return objects.end(); }
+
 private:
   SectorModel(const SectorModel&);
   SectorModel& operator=(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-26 04:16:49 UTC (rev 2770)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-26 17:35:08 UTC (rev 2771)
@@ -81,17 +81,30 @@
 Vector2f
 SelectTool::process_snap(WindstilleWidget& wst)
 {
-  std::set<ObjectModelHandle> objects(selection->begin(), selection->end());
+  // ignore all objects in the selection
+  std::set<ObjectModelHandle> ignore_objects(selection->begin(), selection->end());
+
+  if (!wst.get_draw_only_active_layer())
+    {
+      // ignore all objects not on the current active layer
+      for(SectorModel::iterator i = wst.get_sector_model()->begin();
+          i != wst.get_sector_model()->end(); ++i)
+        {
+          if (!wst.get_layer_mask().match((*i)->get_layers()))
+            ignore_objects.insert(*i);
+        }
+    }
+
   SnapData best_snap;
 
   for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
     {
-      SnapData snap = wst.get_sector_model()->snap_object((*i)->get_bounding_box(), objects);
+      SnapData snap = wst.get_sector_model()->snap_object((*i)->get_bounding_box(), ignore_objects);
       best_snap.merge(snap);
     }
               
   return best_snap.offset;
- }
+}
 
 bool
 SelectTool::mouse_move(GdkEventMotion* event, WindstilleWidget& wst)

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 04:16:49 UTC (rev 2770)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-26 17:35:08 UTC (rev 2771)
@@ -213,9 +213,9 @@
         sc->color().fill_screen(Color());
 
       if (draw_only_active_layers)
+        sector_model->draw(*sc, Layers());
+      else
         sector_model->draw(*sc, layer_mask);
-      else
-        sector_model->draw(*sc, Layers());
 
       for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
         {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 04:16:49 UTC (rev 2770)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-26 17:35:08 UTC (rev 2771)
@@ -120,6 +120,7 @@
 
   void set_draw_background_pattern(bool v) { draw_background_pattern = v; }
   void set_draw_only_active_layer(bool v) { draw_only_active_layers = v; }
+  bool get_draw_only_active_layer() const { return draw_only_active_layers; }
 
 private:
   WindstilleWidget (const WindstilleWidget&);



From grumbel at mail.berlios.de  Thu Mar 26 19:29:20 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Thu, 26 Mar 2009 19:29:20 +0100
Subject: [Windstille-commit] r2772 - trunk/windstille/src/editor
Message-ID: <200903261829.n2QITK0C003573@sheep.berlios.de>

Author: grumbel
Date: 2009-03-26 19:29:20 +0100 (Thu, 26 Mar 2009)
New Revision: 2772

Modified:
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
Log:
No longer snap to LIGHT and HIGHLIGHT objects

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-26 17:35:08 UTC (rev 2771)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-26 18:29:20 UTC (rev 2772)
@@ -40,6 +40,7 @@
                    const std::string& path_, MapType type_);
   ~DecalObjectModel();
 
+  bool is_snappable() const { return type == COLORMAP; }
   void draw(SceneContext& sc);
   Rectf get_bounding_box() const;
   ObjectModelHandle clone() const;

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-26 17:35:08 UTC (rev 2771)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-26 18:29:20 UTC (rev 2772)
@@ -68,6 +68,8 @@
 
   SnapData snap_object(const Rectf& rect) const;
 
+  virtual bool is_snappable() const { return true; }
+
   virtual void draw(SceneContext& sc);
   virtual void update(float delta) {}
   virtual Rectf get_bounding_box() const = 0;

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-26 17:35:08 UTC (rev 2771)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-26 18:29:20 UTC (rev 2772)
@@ -195,7 +195,8 @@
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
       // object is not in the list of objects to ignore
-      if (ignore_objects.find(*i) == ignore_objects.end())
+      if ((*i)->is_snappable() &&
+          ignore_objects.find(*i) == ignore_objects.end())
         {
           SnapData snap = (*i)->snap_object(rect);
           best_snap.merge(snap);



From grumbel at mail.berlios.de  Fri Mar 27 00:11:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 00:11:45 +0100
Subject: [Windstille-commit] r2773 - trunk/windstille/src/editor
Message-ID: <200903262311.n2QNBjaW030411@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 00:11:44 +0100 (Fri, 27 Mar 2009)
New Revision: 2773

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
Log:
Implemented Cut/Copy/Paste

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-26 18:29:20 UTC (rev 2772)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-26 23:11:44 UTC (rev 2773)
@@ -165,9 +165,12 @@
   action_group->add(Gtk::Action::create("MenuEdit",    "_Edit"));
   action_group->add(Gtk::Action::create("Undo",        Gtk::Stock::UNDO));
   action_group->add(Gtk::Action::create("Redo",        Gtk::Stock::REDO));
-  action_group->add(Gtk::Action::create("Cut",         Gtk::Stock::CUT));
-  action_group->add(Gtk::Action::create("Copy",        Gtk::Stock::COPY));
-  action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE));
+  action_group->add(Gtk::Action::create("Cut",         Gtk::Stock::CUT),
+                    sigc::mem_fun(*this, &EditorWindow::on_cut));
+  action_group->add(Gtk::Action::create("Copy",        Gtk::Stock::COPY),
+                    sigc::mem_fun(*this, &EditorWindow::on_copy));
+  action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE),
+                    sigc::mem_fun(*this, &EditorWindow::on_paste));
 
   action_group->add(Gtk::Action::create("Delete",      Gtk::Stock::DELETE),
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_delete));
@@ -260,9 +263,6 @@
   // Disable unimplemented stuff:
   action_group->get_action("Undo")->set_sensitive(false);
   action_group->get_action("Redo")->set_sensitive(false);
-  action_group->get_action("Cut")->set_sensitive(false);
-  action_group->get_action("Copy")->set_sensitive(false);
-  action_group->get_action("Paste")->set_sensitive(false);
 
   Gtk::Toolbar* toolbar = static_cast<Gtk::Toolbar*>(ui_manager->get_widget("/ToolBar"));
   toolbar->append(*(Gtk::manage(new Gtk::SeparatorToolItem())));
@@ -640,5 +640,44 @@
       std::cout << "Snap Off" << std::endl;
     }
 }
+
+void
+EditorWindow::on_cut()
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      clipboard = wst->get_selection()->clone();
+      wst->selection_delete();
+      queue_draw();
+    }
+}
+
+void
+EditorWindow::on_copy()
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      clipboard = wst->get_selection()->clone();
+    }
+}
+
+void
+EditorWindow::on_paste()
+{
+  if (clipboard.get())
+    {
+      if (WindstilleWidget* wst = get_windstille_widget())
+        {
+          for(Selection::reverse_iterator i = clipboard->rbegin(); i != clipboard->rend(); ++i)
+            {
+              wst->get_sector_model()->add(*i);
+            }
+
+          wst->set_selection(clipboard);
+          clipboard = clipboard->clone();
+          queue_draw();
+        }
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-26 18:29:20 UTC (rev 2772)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-26 23:11:44 UTC (rev 2773)
@@ -28,6 +28,7 @@
 #include <gtkmm/window.h>
 #include <gtkmm/notebook.h>
 
+#include "selection.hpp"
 #include "minimap_widget.hpp"
 #include "object_selector.hpp"
 #include "object_tree.hpp"
@@ -76,7 +77,8 @@
   LayerWidget* layer_widget;
 
   sigc::connection  timeout_connection;
-  
+  SelectionHandle   clipboard;
+
 public:
   EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig);
   virtual ~EditorWindow();
@@ -100,6 +102,10 @@
   void on_zoom_in();
   void on_zoom_out();
   void on_zoom_100();
+
+  void on_cut();
+  void on_copy();
+  void on_paste();
   
   void on_layer_toggle(int layer, bool status);
 

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-26 18:29:20 UTC (rev 2772)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-26 23:11:44 UTC (rev 2773)
@@ -86,5 +86,18 @@
       (*i)->on_move_end(offset);
     }
 }
+
+SelectionHandle
+Selection::clone() const
+{
+  SelectionHandle selection = Selection::create();
+
+  for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      selection->add((*i)->clone());
+    }
+
+  return selection;
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-26 18:29:20 UTC (rev 2772)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-26 23:11:44 UTC (rev 2773)
@@ -63,6 +63,9 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
   
+  /** Performs a deep clone of the selection */
+  SelectionHandle clone() const;
+
 private:
   Selection(const Selection&);
   Selection& operator=(const Selection&);



From grumbel at mail.berlios.de  Fri Mar 27 00:12:39 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 00:12:39 +0100
Subject: [Windstille-commit] r2774 - in trunk/windstille/data: editor
	images/decal
Message-ID: <200903262312.n2QNCdQi030608@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 00:12:16 +0100 (Fri, 27 Mar 2009)
New Revision: 2774

Added:
   trunk/windstille/data/editor/background_layer.png
   trunk/windstille/data/editor/draw_visible_layer.png
   trunk/windstille/data/images/decal/stair1.png
   trunk/windstille/data/images/decal/stair2.png
   trunk/windstille/data/images/decal/steelplate.png
   trunk/windstille/data/images/decal/steelplate_crack.png
   trunk/windstille/data/images/decal/train_back.png
   trunk/windstille/data/images/decal/train_door.png
   trunk/windstille/data/images/decal/train_engine_back.png
   trunk/windstille/data/images/decal/train_engine_front.png
   trunk/windstille/data/images/decal/train_engine_middle.png
   trunk/windstille/data/images/decal/train_front.png
   trunk/windstille/data/images/decal/train_generator.png
   trunk/windstille/data/images/decal/train_middle.png
   trunk/windstille/data/images/decal/trashcan.png
Log:
Some more graphics

Added: trunk/windstille/data/editor/background_layer.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/background_layer.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/draw_visible_layer.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/draw_visible_layer.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stair1.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stair1.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/stair2.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/stair2.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/steelplate.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/steelplate.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/steelplate_crack.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/steelplate_crack.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_back.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_back.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_door.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_door.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_engine_back.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_engine_back.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_engine_front.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_engine_front.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_engine_middle.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_engine_middle.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_front.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_front.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_generator.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_generator.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/train_middle.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/train_middle.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/trashcan.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/trashcan.png
___________________________________________________________________
Name: svn:mime-type
   + image/png



From grumbel at mail.berlios.de  Fri Mar 27 02:49:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 02:49:46 +0100
Subject: [Windstille-commit] r2775 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903270149.n2R1nkbA028935@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 02:49:46 +0100 (Fri, 27 Mar 2009)
New Revision: 2775

Added:
   trunk/windstille/data/sectors/trainstation/stairtest.wst
   trunk/windstille/data/sectors/trainstation/train.wst
Modified:
   trunk/windstille/data/sectors/trainstation/trainstation.wst
Log:
Some level building experiments

Added: trunk/windstille/data/sectors/trainstation/stairtest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-03-26 23:12:16 UTC (rev 2774)
+++ trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-03-27 01:49:46 UTC (rev 2775)
@@ -0,0 +1,914 @@
+;; -*- scheme -*-
+(windstille-sector
+  (version 1)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (objects
+    (decal
+      (pos -784.328 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1154.33 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1239.52 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -869.515 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -868.033 29.2408)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1238.03 29.2408)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1152.85 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -782.845 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -42.8453 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -412.845 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -498.033 29.2408)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -128.033 29.2408)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -129.515 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -499.515 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -414.328 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -44.3278 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -50.4747 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -420.475 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -505.662 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -135.662 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -134.18 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -504.18 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -418.992 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -48.9923 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -788.992 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1158.99 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1244.18 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -874.18 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -875.662 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1245.66 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -1160.47 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -790.475 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 689.526 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 319.525 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 234.338 1566.8)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 604.338 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 605.821 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 235.82 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 321.008 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 691.008 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1431.01 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1061.01 797.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 975.82 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1345.82 1053.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1344.34 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 974.338 1565.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1059.53 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1429.53 1309.24)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1065.67 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 980.485 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1350.49 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1351.97 29.2407)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 367.905 -108.259)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1067.15 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1437.15 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 697.155 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 327.155 -226.759)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 241.967 29.2407)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 611.968 29.2407)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 610.485 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -188.118 395.202)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 240.485 541.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 325.672 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 6.44479 160.077)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 13.4448 209.264)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 695.673 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 588 224)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair2.png")
+      (type 0)
+      )
+    (decal
+      (pos 588 384)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair1.png")
+      (type 0)
+      )
+    (decal
+      (pos 716 512)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair1.png")
+      (type 0)
+      )
+    (decal
+      (pos 336.132 378.827)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 716 352)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair2.png")
+      (type 0)
+      )
+    (decal
+      (pos 972 608)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair2.png")
+      (type 0)
+      )
+    (decal
+      (pos 972 766.438)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair1.png")
+      (type 0)
+      )
+    (decal
+      (pos 844 640)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair1.png")
+      (type 0)
+      )
+    (decal
+      (pos 844 480)
+      (parent "")
+      (layer 1)
+      (path "images/decal/stair2.png")
+      (type 0)
+      )
+    (decal
+      (pos -295.118 263.202)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 396 320.563)
+      (parent "")
+      (layer 1)
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 98.6324 375.702)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -377.93 358.514)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 140 320.563)
+      (parent "")
+      (layer 1)
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -372 320.563)
+      (parent "")
+      (layer 1)
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -116 320.563)
+      (parent "")
+      (layer 1)
+      (path "images/decal/wallplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 379 487.563)
+      (parent "")
+      (layer 1)
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos -99 487.563)
+      (parent "")
+      (layer 1)
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos 376.312 684.625)
+      (parent "")
+      (layer 1)
+      (path "images/objects/apartmentlamp_light.png")
+      (type 1)
+      )
+    (decal
+      (pos -66.6875 696.312)
+      (parent "")
+      (layer 1)
+      (path "images/objects/apartmentlamp_light.png")
+      (type 1)
+      )
+    (decal
+      (pos 385.688 606.5)
+      (parent "")
+      (layer 1)
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -79.9375 597.125)
+      (parent "")
+      (layer 1)
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -150.336 803.741)
+      (parent "")
+      (layer 256)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 368.377 942.761)
+      (parent "")
+      (layer 256)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 274.615 124.982)
+      (parent "")
+      (layer 256)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 323.559 150.22)
+      (parent "")
+      (layer 256)
+      (path "images/streetlamp.png")
+      (type 0)
+      )
+    (decal
+      (pos 322.07 217.889)
+      (parent "")
+      (layer 256)
+      (path "images/streetlamp-light.png")
+      (type 1)
+      )
+    (decal
+      (pos 323.632 105.389)
+      (parent "")
+      (layer 256)
+      (path "images/streetlamp-highlight.png")
+      (type 2)
+      )
+    (decal
+      (pos 9.67236 108.563)
+      (parent "")
+      (layer 2)
+      (path "images/decal/terminal.png")
+      (type 0)
+      )
+    (decal
+      (pos -296.68 180.563)
+      (parent "")
+      (layer 2)
+      (path "images/decal/bench.png")
+      (type 0)
+      )
+    (decal
+      (pos 981.968 29.2407)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos 1435.67 285.241)
+      (parent "")
+      (layer 256)
+      (path "images/decal/steelplate.png")
+      (type 0)
+      )
+    (decal
+      (pos -238.868 211.639)
+      (parent "")
+      (layer 256)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 0.194588 208.514)
+      (parent "")
+      (layer 512)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -475.787 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -440.787 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -370.787 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -405.787 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -300.816 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -335.816 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -125.845 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -90.8452 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -195.816 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -160.816 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -230.816 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -265.816 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 154.126 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 189.126 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 259.126 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 224.126 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 329.097 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 294.097 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 84.1258 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 119.126 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 14.1548 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 49.1548 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -20.8452 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos -55.8452 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 498.53 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 428.559 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 463.559 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 393.559 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    (decal
+      (pos 358.559 265.367)
+      (parent "")
+      (layer 8)
+      (path "images/decal/handrail.png")
+      (type 0)
+      )
+    )
+  )
+
+;; EOF ;;

Added: trunk/windstille/data/sectors/trainstation/train.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/train.wst	2009-03-26 23:12:16 UTC (rev 2774)
+++ trunk/windstille/data/sectors/trainstation/train.wst	2009-03-27 01:49:46 UTC (rev 2775)
@@ -0,0 +1,95 @@
+;; -*- scheme -*-
+(windstille-sector
+  (version 1)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (objects
+    (decal
+      (pos 107.438 143.078)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_front.png")
+      (type 0)
+      )
+    (decal
+      (pos 2664.44 148.078)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_back.png")
+      (type 0)
+      )
+    (decal
+      (pos 866.438 138.078)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_middle.png")
+      (type 0)
+      )
+    (decal
+      (pos 854.508 -78.9219)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_generator.png")
+      (type 0)
+      )
+    (decal
+      (pos 1986.12 -78.9219)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_generator.png")
+      (type 0)
+      )
+    (decal
+      (pos 1890.44 138.078)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_middle.png")
+      (type 0)
+      )
+    (decal
+      (pos 332.766 380.766)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_engine_front.png")
+      (type 0)
+      )
+    (decal
+      (pos 2424.77 381.766)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_engine_back.png")
+      (type 0)
+      )
+    (decal
+      (pos 712.766 380.766)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_engine_middle.png")
+      (type 0)
+      )
+    (decal
+      (pos 1168.77 380.766)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_engine_middle.png")
+      (type 0)
+      )
+    (decal
+      (pos 2080.77 380.766)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_engine_middle.png")
+      (type 0)
+      )
+    (decal
+      (pos 1624.77 380.766)
+      (parent "")
+      (layer 1)
+      (path "images/decal/train_engine_middle.png")
+      (type 0)
+      )
+    )
+  )
+
+;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-26 23:12:16 UTC (rev 2774)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-27 01:49:46 UTC (rev 2775)
@@ -6,6 +6,27 @@
   (init-script "init.nut")
   (objects
     (decal
+      (pos 1562.96 829.374)
+      (parent "")
+      (layer 1)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 1630.08 1070.32)
+      (parent "")
+      (layer 1)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -259.112 903.761)
+      (parent "")
+      (layer 1)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
       (pos -1060.64 577.839)
       (parent "")
       (layer 1)
@@ -1392,14 +1413,14 @@
       (type 0)
       )
     (decal
-      (pos 1542.62 985.44)
+      (pos 1689.49 985.44)
       (parent "")
       (layer 1)
       (path "images/decal/bench.png")
       (type 0)
       )
     (decal
-      (pos 1864.5 985.44)
+      (pos 2006.69 985.44)
       (parent "")
       (layer 1)
       (path "images/decal/bench.png")
@@ -1420,27 +1441,6 @@
       (type 1)
       )
     (decal
-      (pos 1562.96 829.374)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 1626.96 1067.2)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 11.075 1013.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/plant.png")
-      (type 0)
-      )
-    (decal
       (pos 424.131 1013.44)
       (parent "")
       (layer 1)
@@ -1476,13 +1476,6 @@
       (type 0)
       )
     (decal
-      (pos -259.112 904.761)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
       (pos -1181.83 303.2)
       (parent "")
       (layer 1)
@@ -1811,6 +1804,20 @@
       (path "images/decal/steelplate.png")
       (type 0)
       )
+    (decal
+      (pos 28.218 973.438)
+      (parent "")
+      (layer 1)
+      (path "images/decal/trashcan.png")
+      (type 0)
+      )
+    (decal
+      (pos 1448.12 973.44)
+      (parent "")
+      (layer 1)
+      (path "images/decal/trashcan.png")
+      (type 0)
+      )
     )
   )
 



From grumbel at mail.berlios.de  Fri Mar 27 02:50:04 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 02:50:04 +0100
Subject: [Windstille-commit] r2776 - in trunk/windstille: . src/display
	src/editor
Message-ID: <200903270150.n2R1o4qp029064@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 02:50:03 +0100 (Fri, 27 Mar 2009)
New Revision: 2776

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/display/display.hpp
   trunk/windstille/src/display/graphic_context_state.cpp
   trunk/windstille/src/display/graphic_context_state.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Added grid

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/TODO	2009-03-27 01:50:03 UTC (rev 2776)
@@ -185,6 +185,8 @@
 Miscellaneous
 =============
 
+* move particle system into library
+
 * Make FileWriter not place ')' on a new line
 
 * replace lisp::Writer with custom FileWriter (used in config)
@@ -499,12 +501,31 @@
 Editor
 ======
 
-* maybe limit snapping by layer, maybe as an option via button, since
-  snapping to a background texture is annoying, while snapping to the
-  ground can be very important
+* highlight map is problematic, since objects don't cover highlights,
+  maybe rendering a stencil mask might help
 
-  - could limit snapping to all visible layers and add a button to toggle layer visibility
+* add Blender like EmptyObjectModel
 
+* spacenav support for scrolling?
+
+* do a continous zoom file zoom button is pressed (timeout callback)
+
+* add recent files
+
+* ObjectProperty Dialog:
+
+  Dialogs must be generic and usable by all Objects, supported type
+  requirements:
+
+  - Vector2f
+  - std::string
+  - Layer
+  - Color
+  - int
+  - float
+  - bool
+  - enum
+
 * add button and keyboard shortcut to mark/unmark all layers
 
 * add a way to move object to a different layer
@@ -517,11 +538,6 @@
   - delete object
   - duplicate object
 
-* lisp can't save uint32_t, maybe should save layer mask as string or
-  limit it to a uint16_t or whatever
-
-* add recent files
-
 * add difference between "save" and "save as", along with overwrite warnings
 
 * add second toolbar, first one is getting a little crowded
@@ -600,8 +616,6 @@
   - snap to integer positions
   - snap to grid
 
-* add grid
-
 * add a way to draw objects to DrawingContext that only does
   translation, but not rotation and scaling, for use in UIElements,
   overlay text, etc.
@@ -612,8 +626,6 @@
   - ambient color (Gtk::ColorSelection)
   - level size (?)
 
-* implement dialog to change objects properties
-
 * figure out how to properly draw controls in the Workspace (resize,
   rotation, vertices of a quad),
 

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/display/display.cpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -356,6 +356,37 @@
 }
 
 void
+Display::draw_grid(const Vector2f& offset, const Sizef& size, const Color& rgba)
+{
+  OpenGLState state;
+
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(rgba);
+  state.activate();
+ 
+  glBegin(GL_LINES);
+  //glColor4ub(rgba.r, rgba.g, rgba.b, rgba.a);
+
+  float start_x = fmodf(offset.x, size.width);
+  float start_y = fmodf(offset.y, size.height);
+
+  for(float x = start_x; x < Display::get_width(); x += size.width)
+    {
+      glVertex2f(x, 0);
+      glVertex2f(x, Display::get_height());
+    }
+
+  for(float y = start_y; y < Display::get_height(); y += size.height)
+    {
+      glVertex2f(0, y);
+      glVertex2f(Display::get_width(), y);
+    }
+
+  glEnd();  
+}
+
+void
 Display::push_cliprect(const Rect& rect_)
 {
   Rect rect = rect_;

Modified: trunk/windstille/src/display/display.hpp
===================================================================
--- trunk/windstille/src/display/display.hpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/display/display.hpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -54,6 +54,8 @@
   static void draw_arc(const Vector2f& pos, float radius, float start, float end, const Color& color, int segments = 16);
   static void fill_arc(const Vector2f& pos, float radius, float start, float end, const Color& color, int segments = 16);
 
+  static void draw_grid(const Vector2f& offset, const Sizef& size, const Color& color);
+
   static int  get_width();
   static int  get_height();
 

Modified: trunk/windstille/src/display/graphic_context_state.cpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.cpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/display/graphic_context_state.cpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -95,6 +95,12 @@
 }
 
 Vector2f
+GraphicContextState::get_offset() const
+{
+  return impl->offset;
+}
+
+Vector2f
 GraphicContextState::get_pos() const
 {
   return Vector2f(-impl->offset.x + (get_width()/2  / impl->zoom),

Modified: trunk/windstille/src/display/graphic_context_state.hpp
===================================================================
--- trunk/windstille/src/display/graphic_context_state.hpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/display/graphic_context_state.hpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -57,6 +57,8 @@
   void     set_pos(const Vector2f& pos);
   Vector2f get_pos() const;
 
+  Vector2f get_offset() const;
+
   /** Set zoom to z, while ensuring that the screen position \a pos
       (normaly the position of the mouse pointer) stays in the same
       position even after zoomed in/out */

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -90,6 +90,7 @@
     "      <menuitem action='ToggleControlLayer'/>"
     "      <menuitem action='ToggleBackgroundLayer'/>"
     "      <menuitem action='ToggleVisibleLayer'/>"
+    "      <menuitem action='ToggleGridLayer'/>"
     "    </menu>"
     "    <menu action='MenuTools'>"
     "      <menuitem action='SelectTool'/>"
@@ -144,6 +145,7 @@
     "    <toolitem action='ToggleControlLayer'/>"
     "    <toolitem action='ToggleBackgroundLayer'/>"
     "    <toolitem action='ToggleVisibleLayer'/>"
+    "    <toolitem action='ToggleGridLayer'/>"
     "  </toolbar>"
     "</ui>";
 
@@ -216,6 +218,7 @@
 
   Glib::RefPtr<Gtk::ToggleAction> background_layer = Gtk::ToggleAction::create_with_icon_name("ToggleBackgroundLayer", "background_layer", "Toggle Background Layer", "Toggle Background Layer");
   Glib::RefPtr<Gtk::ToggleAction> visible_layer    = Gtk::ToggleAction::create_with_icon_name("ToggleVisibleLayer", "draw_visible_layer", "Toggle Only Active Layer", "Toggle Only Active Layer");
+  Glib::RefPtr<Gtk::ToggleAction> grid_layer    = Gtk::ToggleAction::create_with_icon_name("ToggleGridLayer", "grid", "Toggle Grid Layer", "Toggle Grid Layer");
   
   toggle_color_layer->set_active(true);
   toggle_light_layer->set_active(true);
@@ -223,6 +226,7 @@
   toggle_control_layer->set_active(true);
   background_layer->set_active(true);
   visible_layer->set_active(true);
+  grid_layer->set_active(false);
 
   action_group->add(toggle_color_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_render_layer), toggle_color_layer, (uint32_t)SceneContext::COLORMAP));
@@ -236,6 +240,8 @@
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_background_layer), background_layer));
   action_group->add(visible_layer,
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_draw_only_active_layer), visible_layer));
+  action_group->add(grid_layer,
+                    sigc::bind(sigc::mem_fun(*this, &EditorWindow::toggle_grid_layer), grid_layer));
 
   // Tools
   action_group->add(Gtk::Action::create("MenuTools",  "_Tools"));
@@ -518,6 +524,16 @@
     }
 }
 
+void
+EditorWindow::toggle_grid_layer(Glib::RefPtr<Gtk::ToggleAction> action)
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->enable_grid(action->get_active());
+      wst->queue_draw();
+    }
+}
+
 Tool*
 EditorWindow::get_current_tool() const
 {

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -115,6 +115,7 @@
   void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask);
   void toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action);
   void toggle_draw_only_active_layer(Glib::RefPtr<Gtk::ToggleAction> action);
+  void toggle_grid_layer(Glib::RefPtr<Gtk::ToggleAction> action);
 
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -44,7 +44,8 @@
     map_type(DecalObjectModel::COLORMAP),
     draw_background_pattern(true),
     layer_mask(1),
-    draw_only_active_layers(true)
+    draw_only_active_layers(true),
+    grid_enabled(false)
 {
   set_gl_capability(glconfig, share_list);
 
@@ -229,8 +230,13 @@
         active_tool->draw(*sc);
 
       sc->render();
+      state.pop(*sc);
 
-      state.pop(*sc);
+      if (grid_enabled)
+        {
+          Display::draw_grid(state.get_offset() * state.get_zoom(),
+                             Sizef(128.0f * state.get_zoom(), 128.0f * state.get_zoom()), Color(1,1,1,0.5f));
+        }
     }
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-27 01:49:46 UTC (rev 2775)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-27 01:50:03 UTC (rev 2776)
@@ -62,6 +62,7 @@
   bool draw_background_pattern;
   Layers layer_mask;
   bool draw_only_active_layers;
+  bool grid_enabled;
   
 public:
   WindstilleWidget(const Glib::RefPtr<const Gdk::GL::Config>& glconfig,
@@ -121,6 +122,7 @@
   void set_draw_background_pattern(bool v) { draw_background_pattern = v; }
   void set_draw_only_active_layer(bool v) { draw_only_active_layers = v; }
   bool get_draw_only_active_layer() const { return draw_only_active_layers; }
+  void enable_grid(bool v) { grid_enabled = v; }
 
 private:
   WindstilleWidget (const WindstilleWidget&);



From grumbel at mail.berlios.de  Fri Mar 27 03:06:08 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 03:06:08 +0100
Subject: [Windstille-commit] r2777 - in trunk/windstille: data/editor
	src/display src/editor
Message-ID: <200903270206.n2R268aX032760@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 03:06:06 +0100 (Fri, 27 Mar 2009)
New Revision: 2777

Modified:
   trunk/windstille/data/editor/background_layer.png
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Changed background pattern color a bit and made it scroll

Modified: trunk/windstille/data/editor/background_layer.png
===================================================================
(Binary files differ)

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-27 01:50:03 UTC (rev 2776)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-27 02:06:06 UTC (rev 2777)
@@ -41,12 +41,13 @@
 class FillScreenPatternDrawingRequest : public DrawingRequest
 {
 private:
-  Texture texture;
-
+  Texture  texture;
+  Vector2f offset;
 public:
-  FillScreenPatternDrawingRequest(const Texture& texture_)
+  FillScreenPatternDrawingRequest(const Texture& texture_, const Vector2f& offset_)
     : DrawingRequest(Vector2f(0, 0), -1000.0f), 
-      texture(texture_)
+      texture(texture_),
+      offset(offset_)
   {}
 
   virtual ~FillScreenPatternDrawingRequest() {}
@@ -59,21 +60,27 @@
     state.bind_texture(texture);
     state.activate();
 
-    float u = Display::get_width() / float(texture.get_width());
+    float u = Display::get_width()  / float(texture.get_width());
     float v = Display::get_height() / float(texture.get_height());
 
+    float u_start = -offset.x / float(texture.get_width());
+    float v_start = -offset.y / float(texture.get_height());
+
+    u -= offset.x / float(texture.get_width());
+    v -= offset.y / float(texture.get_height());
+
     glBegin(GL_QUADS);
     {
-      glTexCoord2f(0, 0);
+      glTexCoord2f(u_start, v_start);
       glVertex2f(0, 0);
     
-      glTexCoord2f(u, 0.0f);
+      glTexCoord2f(u, v_start);
       glVertex2f(Display::get_width(), 0);
 
       glTexCoord2f(u, v);
       glVertex2f(Display::get_width(), Display::get_height());
 
-      glTexCoord2f(0.0f, v);
+      glTexCoord2f(u_start, v);
       glVertex2f(0,  Display::get_height());
     }
     glEnd();
@@ -227,9 +234,9 @@
 }
 
 void
-DrawingContext::fill_pattern(const Texture& pattern)
+DrawingContext::fill_pattern(const Texture& pattern, const Vector2f& offset)
 {
-  draw(new FillScreenPatternDrawingRequest(pattern));
+  draw(new FillScreenPatternDrawingRequest(pattern, offset));
 }
 
 void

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-03-27 01:50:03 UTC (rev 2776)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-03-27 02:06:06 UTC (rev 2777)
@@ -61,7 +61,7 @@
       queue */
   void fill_screen(const Color& color);
 
-  void fill_pattern(const Texture& pattern);
+  void fill_pattern(const Texture& pattern, const Vector2f& offset);
 
   void draw_line(const Vector2f& pos1, const Vector2f& pos2, const Color& color, float z_pos = 0);
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 01:50:03 UTC (rev 2776)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 02:06:06 UTC (rev 2777)
@@ -118,7 +118,7 @@
       if (!sc.get())
         sc.reset(new SceneContext());
       
-      background_pattern = Texture("images/chesspattern.png");
+      background_pattern = Texture("editor/background_layer.png");
       background_pattern.set_wrap(GL_REPEAT);
 
       glViewport(0, 0, get_width(), get_height());
@@ -209,7 +209,8 @@
       state.push(*sc);
       
       if (draw_background_pattern)
-        sc->color().fill_pattern(background_pattern);
+        sc->color().fill_pattern(background_pattern, 
+                                 state.get_offset() * state.get_zoom());
       else
         sc->color().fill_screen(Color());
 



From grumbel at mail.berlios.de  Fri Mar 27 04:39:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 04:39:28 +0100
Subject: [Windstille-commit] r2778 - trunk/windstille/src/editor
Message-ID: <200903270339.n2R3dSa0012147@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 04:39:26 +0100 (Fri, 27 Mar 2009)
New Revision: 2778

Modified:
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/selection.hpp
Log:
Made Shift add objects to Selection for rect selections

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-27 02:06:06 UTC (rev 2777)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-27 03:39:26 UTC (rev 2778)
@@ -154,7 +154,15 @@
     {
       mode = NO_MODE;
       rect.normalize();
-      wst.set_selection(wst.get_sector_model()->get_selection(rect, wst.get_layer_mask()));
+      if (event->state & GDK_SHIFT_MASK)
+        {
+          SelectionHandle new_selection = wst.get_sector_model()->get_selection(rect, wst.get_layer_mask());
+          wst.get_selection()->add(new_selection->begin(), new_selection->end());
+        }
+      else
+        {
+          wst.set_selection(wst.get_sector_model()->get_selection(rect, wst.get_layer_mask()));
+        }
     }
 
   mode = NO_MODE;

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-27 02:06:06 UTC (rev 2777)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-27 03:39:26 UTC (rev 2778)
@@ -43,6 +43,14 @@
   Selection();
   ~Selection();
 
+  template<class Iter>
+  void add(Iter begin, Iter end) {
+    for(Iter i = begin; i != end; ++i)
+      {
+        add(*i);
+      }
+  }
+
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
   



From grumbel at mail.berlios.de  Fri Mar 27 05:30:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 05:30:48 +0100
Subject: [Windstille-commit] r2779 - trunk/windstille/src/editor
Message-ID: <200903270430.n2R4Umqs018299@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 05:30:46 +0100 (Fri, 27 Mar 2009)
New Revision: 2779

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Disable colormap on default, update button state on Tab switch

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-27 03:39:26 UTC (rev 2778)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-27 04:30:46 UTC (rev 2779)
@@ -211,17 +211,17 @@
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
                     sigc::mem_fun(*this, &EditorWindow::on_about_clicked));
 
-  Glib::RefPtr<Gtk::ToggleAction> toggle_color_layer     = Gtk::ToggleAction::create_with_icon_name("ToggleColorLayer", "color", "Toogle Color Layer", "Toogle Color Layer");
-  Glib::RefPtr<Gtk::ToggleAction> toggle_light_layer     = Gtk::ToggleAction::create_with_icon_name("ToggleLightLayer", "light", "Toogle Light Layer", "Toogle Light Layer");
-  Glib::RefPtr<Gtk::ToggleAction> toggle_highlight_layer = Gtk::ToggleAction::create_with_icon_name("ToggleHighlightLayer", "highlight", "Toogle Highlight Layer", "Toogle Highlight Layer");
-  Glib::RefPtr<Gtk::ToggleAction> toggle_control_layer   = Gtk::ToggleAction::create_with_icon_name("ToggleControlLayer", "control", "Toogle Control Layer", "Toogle Control Layer");
+  toggle_color_layer     = Gtk::ToggleAction::create_with_icon_name("ToggleColorLayer", "color", "Toogle Color Layer", "Toogle Color Layer");
+  toggle_light_layer     = Gtk::ToggleAction::create_with_icon_name("ToggleLightLayer", "light", "Toogle Light Layer", "Toogle Light Layer");
+  toggle_highlight_layer = Gtk::ToggleAction::create_with_icon_name("ToggleHighlightLayer", "highlight", "Toogle Highlight Layer", "Toogle Highlight Layer");
+  toggle_control_layer   = Gtk::ToggleAction::create_with_icon_name("ToggleControlLayer", "control", "Toogle Control Layer", "Toogle Control Layer");
 
-  Glib::RefPtr<Gtk::ToggleAction> background_layer = Gtk::ToggleAction::create_with_icon_name("ToggleBackgroundLayer", "background_layer", "Toggle Background Layer", "Toggle Background Layer");
-  Glib::RefPtr<Gtk::ToggleAction> visible_layer    = Gtk::ToggleAction::create_with_icon_name("ToggleVisibleLayer", "draw_visible_layer", "Toggle Only Active Layer", "Toggle Only Active Layer");
-  Glib::RefPtr<Gtk::ToggleAction> grid_layer    = Gtk::ToggleAction::create_with_icon_name("ToggleGridLayer", "grid", "Toggle Grid Layer", "Toggle Grid Layer");
+  background_layer = Gtk::ToggleAction::create_with_icon_name("ToggleBackgroundLayer", "background_layer", "Toggle Background Layer", "Toggle Background Layer");
+  visible_layer    = Gtk::ToggleAction::create_with_icon_name("ToggleVisibleLayer", "draw_visible_layer", "Toggle Only Active Layer", "Toggle Only Active Layer");
+  grid_layer       = Gtk::ToggleAction::create_with_icon_name("ToggleGridLayer", "grid", "Toggle Grid Layer", "Toggle Grid Layer");
   
   toggle_color_layer->set_active(true);
-  toggle_light_layer->set_active(true);
+  toggle_light_layer->set_active(false);
   toggle_highlight_layer->set_active(true);
   toggle_control_layer->set_active(true);
   background_layer->set_active(true);
@@ -588,6 +588,15 @@
     {
       object_tree.set_model(wst->get_sector_model());
       layer_widget->update(wst->get_layer_mask());
+
+      toggle_color_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::COLORMAP);
+      toggle_light_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::LIGHTMAP);
+      toggle_highlight_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::HIGHLIGHTMAP);
+      toggle_control_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::CONTROLMAP);
+
+      background_layer->set_active(wst->get_draw_background_pattern());
+      visible_layer->set_active(wst->get_draw_only_active_layer());
+      grid_layer->set_active(wst->get_enable_grid());
     }
   else
     {

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-27 03:39:26 UTC (rev 2778)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-27 04:30:46 UTC (rev 2779)
@@ -68,6 +68,15 @@
   Glib::RefPtr<Gtk::RadioAction> node_tool_action;
   Glib::RefPtr<Gtk::RadioAction> zoom_tool_action;
 
+  Glib::RefPtr<Gtk::ToggleAction> toggle_color_layer;
+  Glib::RefPtr<Gtk::ToggleAction> toggle_light_layer;
+  Glib::RefPtr<Gtk::ToggleAction> toggle_highlight_layer;
+  Glib::RefPtr<Gtk::ToggleAction> toggle_control_layer;
+
+  Glib::RefPtr<Gtk::ToggleAction> background_layer;
+  Glib::RefPtr<Gtk::ToggleAction> visible_layer;
+  Glib::RefPtr<Gtk::ToggleAction> grid_layer;
+
   Glib::RefPtr<Gtk::ToggleAction> play_action;
   Glib::RefPtr<Gtk::ToggleAction> snap_action;
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 03:39:26 UTC (rev 2778)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 04:30:46 UTC (rev 2779)
@@ -91,6 +91,8 @@
 void
 WindstilleWidget::on_realize()
 {
+  state.set_size(get_width(), get_height());
+
   std::cout << "WindstilleWidget::on_realize()" << std::endl;
 
   Gtk::DrawingArea::on_realize();
@@ -116,7 +118,10 @@
         }
       
       if (!sc.get())
-        sc.reset(new SceneContext());
+        {
+          sc.reset(new SceneContext());
+          sc->set_render_mask(sc->get_render_mask() & ~SceneContext::LIGHTMAP);
+        }
       
       background_pattern = Texture("editor/background_layer.png");
       background_pattern.set_wrap(GL_REPEAT);
@@ -131,8 +136,6 @@
   
       glwindow->gl_end();
     }
-
-  state.set_size(get_width(), get_height());
 }
 
 bool
@@ -209,10 +212,14 @@
       state.push(*sc);
       
       if (draw_background_pattern)
-        sc->color().fill_pattern(background_pattern, 
-                                 state.get_offset() * state.get_zoom());
+        {
+          sc->color().fill_pattern(background_pattern, 
+                                   state.get_offset() * state.get_zoom());
+        }
       else
-        sc->color().fill_screen(Color());
+        {
+          sc->color().fill_screen(Color());
+        }
 
       if (draw_only_active_layers)
         sector_model->draw(*sc, Layers());

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-27 03:39:26 UTC (rev 2778)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-27 04:30:46 UTC (rev 2779)
@@ -120,9 +120,12 @@
   void load_file(const std::string& filename);
 
   void set_draw_background_pattern(bool v) { draw_background_pattern = v; }
+  bool get_draw_background_pattern() const { return draw_background_pattern; }
+
   void set_draw_only_active_layer(bool v) { draw_only_active_layers = v; }
   bool get_draw_only_active_layer() const { return draw_only_active_layers; }
   void enable_grid(bool v) { grid_enabled = v; }
+  bool get_enable_grid() const { return grid_enabled; }
 
 private:
   WindstilleWidget (const WindstilleWidget&);



From grumbel at mail.berlios.de  Fri Mar 27 05:31:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 05:31:41 +0100
Subject: [Windstille-commit] r2780 - trunk/windstille
Message-ID: <200903270431.n2R4VfOn018377@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 05:31:37 +0100 (Fri, 27 Mar 2009)
New Revision: 2780

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-27 04:30:46 UTC (rev 2779)
+++ trunk/windstille/TODO	2009-03-27 04:31:37 UTC (rev 2780)
@@ -501,6 +501,48 @@
 Editor
 ======
 
+* background pattern goes away when Color pattern is disabled, since
+  its draw to the Colormap
+
+* use last object in selection as parent instead of first? might be more natural
+
+* use the right button for something
+
+  - zoom tool: zoom out
+  - select tool: context menu
+    - delete object
+    - duplicate object
+    - parent object
+    - move to different layer
+
+* use for layer system:
+
+  - levels are naturally constructed out of multiple layers, such as
+    background, foreground, lights, shadow stuff, decal, etc. Also
+    certain things need to be grouped, a wall of tiles should be
+    easily moveable without the danger of ripping the tiles appart
+
+  - base layer system on the parenting system:
+
+    - make a special LayerObjectModel object, that acts like an Empty
+      for most part, but shows up in the ObjectTree
+    - make new objects automatically parent to stuff in the ObjectTree
+    - need a way to bring objects to the same sorting order then their
+      parent
+    - advantage: layers themself can be grouped, i.e. (wall-base,
+      wall-decal, wall-shadows)
+
+ - alternative: build layer system around GroupObjectModel
+    
+    - an Object that contains child objects
+    - trouble: groups will be hard to edit
+
+* layer move tool
+
+* highlight content of rect selection while the rect gets dragged
+
+* add way to refresh content of ObjectSelector
+
 * highlight map is problematic, since objects don't cover highlights,
   maybe rendering a stencil mask might help
 
@@ -556,28 +598,6 @@
 
 * think about Undo/Redo
 
-* layer move tool
-
-* add a Blender like layer system:
- 
-  - layers are a 1 bit in a uint32_t (or uint64_t if needed)
-  - each Object has a layer mask
-  - when doing a get_selection(Rect(), layermask), objects check
-    against the layer mask and are ignored when they don't match
-  - layers can be visible or hidden, again draw(layermask) is used to
-    check objects for layer membership
-  - objects can belong to multiple layers at once
-  - advantage of this is that layers exist outside the whole sorting
-    logic, so all that stuff can remain unchanged
-  - maybe all this isn't enough
-
-  - use for layer system:
-
-    - levels are naturally constructed out of multiple layers, such as
-      background, foreground, etc. Also certain things need to be
-      grouped, a wall of tiles should be easily moveable without the
-      danger of ripping the tiles appart
-
 * Display::aspect_size is ugly, turn that into a Display::set_size();
 
 * implement non-Surface based objects:



From grumbel at mail.berlios.de  Fri Mar 27 16:50:05 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 16:50:05 +0100
Subject: [Windstille-commit] r2781 - in trunk/windstille/src: . editor
Message-ID: <200903271550.n2RFo5ZI027727@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 16:50:05 +0100 (Fri, 27 Mar 2009)
New Revision: 2781

Added:
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
Log:
Implemented another layer system, this time a little more classical

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-27 04:31:37 UTC (rev 2780)
+++ trunk/windstille/src/SConscript	2009-03-27 15:50:05 UTC (rev 2781)
@@ -239,6 +239,7 @@
         'editor/decal_object_model.cpp',
         'editor/editor_window.cpp',
         'editor/layer_widget.cpp',
+        'editor/hard_layer.cpp',
         'editor/main.cpp',
         'editor/minimap_widget.cpp',
         'editor/object_model.cpp',      

Added: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 04:31:37 UTC (rev 2780)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 15:50:05 UTC (rev 2781)
@@ -0,0 +1,210 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "hard_layer.hpp"
+
+HardLayer::HardLayer(const std::string& name_)
+  : name(name_),
+    visible(true)
+{
+}
+
+HardLayer::~HardLayer()
+{
+}
+
+void
+HardLayer::add(const ObjectModelHandle& object)
+{
+  objects.push_back(object);
+}
+
+void
+HardLayer::remove(const ObjectModelHandle& object)
+{
+  objects.remove(object);
+}
+
+void
+HardLayer::draw(SceneContext& sc, const Layers& layers)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      if (layers.match((*i)->get_layers()))
+        (*i)->draw(sc);
+    }
+
+}
+
+void
+HardLayer::update(float delta)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->update(delta);
+    }
+}
+
+ObjectModelHandle
+HardLayer::get_object_at(const Vector2f& pos, const Layers& layers) const
+{
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      if (layers.match((*i)->get_layers()) &&
+          (*i)->get_bounding_box().is_inside(pos))
+        {
+          return *i;
+        }
+    }
+  return ObjectModelHandle();
+}
+
+SelectionHandle
+HardLayer::get_selection(const Rectf& rect, const Layers& layers) const
+{
+ SelectionHandle selection = Selection::create();
+
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      if (layers.match((*i)->get_layers()) &&
+          (*i)->get_bounding_box().is_overlapped(rect))
+        {
+          selection->add(*i);
+        }
+    }
+
+  return selection;
+}
+
+void
+HardLayer::raise_to_top(ObjectModelHandle object)
+{
+  objects.remove(object);
+  objects.push_back(object); 
+}
+
+void
+HardLayer::lower_to_bottom(ObjectModelHandle object)
+{
+  objects.remove(object);
+  objects.push_front(object); 
+}
+
+struct OverlapsWith
+{
+  Rectf rect;
+
+  OverlapsWith(const Rectf& rect_)
+    : rect(rect_)
+  {}
+
+  bool operator()(const ObjectModelHandle& object) {
+    return rect.is_overlapped(object->get_bounding_box());
+  }
+};
+
+void
+HardLayer::raise(ObjectModelHandle object)
+{
+  Objects::iterator i = std::find(objects.begin(), objects.end(), object);
+  assert(i != objects.end());
+  Objects::iterator j = i;
+  ++j;
+  j = std::find_if(j, objects.end(), OverlapsWith(object->get_bounding_box()));
+
+  if (j == objects.end())
+    {
+      // object overlaps with no other object, no point in raising it
+    }
+  else
+    {
+      objects.erase(i);
+      objects.insert(++j, object);
+    }
+}
+
+void
+HardLayer::lower(ObjectModelHandle object)
+{
+  // Mostly the same as raise, just with reverse iterators
+  Objects::reverse_iterator i = std::find(objects.rbegin(), objects.rend(), object);
+
+  Objects::reverse_iterator j = i;
+  ++j;
+  j = std::find_if(j, objects.rend(), OverlapsWith(object->get_bounding_box()));
+
+  if (j == objects.rend())
+    {
+      // object overlaps with no other object, no point in lowering it
+    }
+  else
+    {
+      // the base() of base in one further then where the reverse
+      // iterator was, so we have to move back to get the same
+      // position
+      objects.erase(--(i.base()));
+      objects.insert(--(j.base()), object);
+    }
+}
+
+SnapData
+HardLayer::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
+{
+  //float min_x_offset = std::numeric_limits<float>::max();
+  //float min_y_offset = std::numeric_limits<float>::max();
+  SnapData best_snap;
+
+  // Find the smallest snap offset
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      // object is not in the list of objects to ignore
+      if ((*i)->is_snappable() &&
+          ignore_objects.find(*i) == ignore_objects.end())
+        {
+          SnapData snap = (*i)->snap_object(rect);
+          best_snap.merge(snap);
+        }
+    }
+
+  return best_snap;
+}
+
+void
+HardLayer::write(FileWriter& writer) const
+{
+  writer.start_section("layer");
+  writer.write("name",    name);
+  writer.write("visible", visible);
+
+  writer.start_section("objects");
+  for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->write(writer);
+    }
+  writer.end_section();
+
+  writer.end_section();
+}
+
+HardLayerHandle
+HardLayer::clone() const
+{
+  return HardLayerHandle();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/hard_layer.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Added: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 04:31:37 UTC (rev 2780)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 15:50:05 UTC (rev 2781)
@@ -0,0 +1,75 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_HARD_LAYER_HPP
+#define HEADER_WINDSTILLE_EDITOR_HARD_LAYER_HPP
+
+#include <boost/shared_ptr.hpp>
+#include <list>
+#include <set>
+#include <string>
+
+#include "selection.hpp"
+#include "object_model.hpp"
+
+class HardLayer;
+typedef boost::shared_ptr<HardLayer> HardLayerHandle;
+
+class HardLayer
+{
+private:
+  typedef std::list<ObjectModelHandle> Objects;
+  typedef std::list<HardLayerHandle> HardLayers;
+
+  std::string name;
+  bool visible;
+  Objects objects;
+  //HardLayers child_layers;
+
+public:
+  HardLayer(const std::string& name);
+  ~HardLayer();
+
+  void add(const ObjectModelHandle& object);
+  void remove(const ObjectModelHandle& object);
+
+  void draw(SceneContext& sc, const Layers& layers);
+  void update(float delta);
+
+  ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
+  SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;
+
+  void raise_to_top(ObjectModelHandle object);
+  void lower_to_bottom(ObjectModelHandle object);
+  void raise(ObjectModelHandle object);
+  void lower(ObjectModelHandle object);
+
+  SnapData snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const;
+
+  void write(FileWriter& writer) const;
+
+  HardLayerHandle clone() const;
+  
+private:
+  HardLayer(const HardLayer&);
+  HardLayer& operator=(const HardLayer&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/hard_layer.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-27 04:31:37 UTC (rev 2780)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-27 15:50:05 UTC (rev 2781)
@@ -32,6 +32,8 @@
 
 SectorModel::SectorModel()
 {  
+  root_layer = HardLayerHandle(new HardLayer("HardLayer"));
+
   objects_tree = Gtk::TreeStore::create(ObjectTreeColumns::instance());
 
   root_it = objects_tree->append();
@@ -49,7 +51,7 @@
 void
 SectorModel::add(const ObjectModelHandle& object)  
 {
-  objects.push_back(object);
+  root_layer->add(object);
 
   Gtk::TreeStore::iterator it = objects_tree->append(root_it->children());
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
@@ -60,150 +62,61 @@
 void
 SectorModel::remove(const ObjectModelHandle& object)
 {
-  objects.remove(object);
+  root_layer->remove(object);
 }
 
 void
 SectorModel::draw(SceneContext& sc, const Layers& layers)
 {
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      if (layers.match((*i)->get_layers()))
-        (*i)->draw(sc);
-    }
+  root_layer->draw(sc, layers);
 }
 
 void
 SectorModel::update(float delta)
 {
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      (*i)->update(delta);
-    }
+  root_layer->update(delta);
 }
 
 ObjectModelHandle
 SectorModel::get_object_at(const Vector2f& pos, const Layers& layers) const
 {
-  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
-    {
-      if (layers.match((*i)->get_layers()) &&
-          (*i)->get_bounding_box().is_inside(pos))
-        {
-          return *i;
-        }
-    }
-  return ObjectModelHandle();
+  return root_layer->get_object_at(pos, layers);
 }
 
 SelectionHandle
 SectorModel::get_selection(const Rectf& rect, const Layers& layers) const
 {
-  SelectionHandle selection = Selection::create();
-
-  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
-    {
-      if (layers.match((*i)->get_layers()) &&
-          (*i)->get_bounding_box().is_overlapped(rect))
-        {
-          selection->add(*i);
-        }
-    }
-
-  return selection;
+  return root_layer->get_selection(rect, layers);
 }
 
-struct OverlapsWith
-{
-  Rectf rect;
-
-  OverlapsWith(const Rectf& rect_)
-    : rect(rect_)
-  {}
-
-  bool operator()(const ObjectModelHandle& object) {
-    return rect.is_overlapped(object->get_bounding_box());
-  }
-};
-
 void
 SectorModel::raise(ObjectModelHandle object)
 {
-  Objects::iterator i = std::find(objects.begin(), objects.end(), object);
-  assert(i != objects.end());
-  Objects::iterator j = i;
-  ++j;
-  j = std::find_if(j, objects.end(), OverlapsWith(object->get_bounding_box()));
-
-  if (j == objects.end())
-    {
-      // object overlaps with no other object, no point in raising it
-    }
-  else
-    {
-      objects.erase(i);
-      objects.insert(++j, object);
-    }
+  root_layer->raise(object);
 }
 
 void
 SectorModel::lower(ObjectModelHandle object)
 {
-  // Mostly the same as raise, just with reverse iterators
-  Objects::reverse_iterator i = std::find(objects.rbegin(), objects.rend(), object);
-
-  Objects::reverse_iterator j = i;
-  ++j;
-  j = std::find_if(j, objects.rend(), OverlapsWith(object->get_bounding_box()));
-
-  if (j == objects.rend())
-    {
-      // object overlaps with no other object, no point in lowering it
-    }
-  else
-    {
-      // the base() of base in one further then where the reverse
-      // iterator was, so we have to move back to get the same
-      // position
-      objects.erase(--(i.base()));
-      objects.insert(--(j.base()), object);
-    }
+  root_layer->lower(object);
 }
 
 void
 SectorModel::raise_to_top(ObjectModelHandle object)
 {
-  objects.remove(object);
-  objects.push_back(object); 
+  root_layer->raise_to_top(object);
 }
 
 void
 SectorModel::lower_to_bottom(ObjectModelHandle object)
 {
-  objects.remove(object);
-  objects.push_front(object); 
+  root_layer->lower_to_bottom(object);
 }
 
 SnapData
 SectorModel::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
 {
-  //float min_x_offset = std::numeric_limits<float>::max();
-  //float min_y_offset = std::numeric_limits<float>::max();
-  SnapData best_snap;
-
-  // Find the smallest snap offset
-  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
-    {
-      // object is not in the list of objects to ignore
-      if ((*i)->is_snappable() &&
-          ignore_objects.find(*i) == ignore_objects.end())
-        {
-          SnapData snap = (*i)->snap_object(rect);
-          best_snap.merge(snap);
-        }
-    }
-
-  return best_snap;
+  return root_layer->snap_object(rect, ignore_objects);
 }
 
 void
@@ -216,23 +129,31 @@
     }
   else
     {
-  FileReader reader = FileReader::parse(stream, filename);
-  if (reader.get_name() == "windstille-sector")
-    {
-      std::vector<FileReader> sections = reader.get_sections();
-      for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
+      FileReader reader = FileReader::parse(stream, filename);
+      if (reader.get_name() == "windstille-sector")
         {
-          if (i->get_name() == "objects")
+          std::vector<FileReader> sections = reader.get_sections();
+          for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
             {
-              std::vector<FileReader> objects_sections = i->get_sections();
-              for(std::vector<FileReader>::iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
+              if (i->get_name() == "layer")
                 {
-                  add(ObjectModelFactory::create(*j));
+                  FileReader objects_reader;
+                  std::string name;
+                  bool visible;
+
+                  i->read("name", name);
+                  i->read("visible", visible);
+                  i->read("objects", objects_reader);
+                  
+                  std::vector<FileReader> objects_sections = objects_reader.get_sections();
+                  for(std::vector<FileReader>::iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
+                    {
+                      add(ObjectModelFactory::create(*j));
+                    }
                 }
             }
         }
     }
-    }
 }
 
 void
@@ -246,12 +167,7 @@
   writer.write("ambient-color", Color());
   writer.write("init-script", "init.nut");
 
-  writer.start_section("objects");
-  for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      (*i)->write(writer);
-    }
-  writer.end_section();
+  root_layer->write(writer);
  
   writer.end_section();
   writer.write_raw("\n;; EOF ;;\n");

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-27 04:31:37 UTC (rev 2780)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-27 15:50:05 UTC (rev 2781)
@@ -24,6 +24,7 @@
 #include <gtkmm/treestore.h>
 #include <vector>
 
+#include "hard_layer.hpp"
 #include "selection.hpp"
 #include "object_model.hpp"
 #include "math/vector2f.hpp"
@@ -59,22 +60,21 @@
 class SectorModel
 {
 private:
-  typedef std::list<ObjectModelHandle> Objects;
-
   Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> objects_tree;
-  Objects objects;
+  HardLayerHandle root_layer;
   
 public:
-  typedef Objects::iterator iterator;
+  //typedef Objects::iterator iterator;
 
   SectorModel();
 
-  void add(const ObjectModelHandle& object);
-  void remove(const ObjectModelHandle& object);
   void draw(SceneContext& sc, const Layers& layers);
   void update(float delta);
 
+  void add(const ObjectModelHandle& object);
+  void remove(const ObjectModelHandle& object);
+
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 
   Glib::RefPtr<Gtk::TreeStore> get_objects_tree() { return objects_tree; }
@@ -98,8 +98,8 @@
   void load(const std::string& filename);
   void write(FileWriter& writer) const;
 
-  iterator begin() { return objects.begin(); }
-  iterator end() { return objects.end(); }
+  //iterator begin() { return objects.begin(); }
+  //iterator end() { return objects.end(); }
 
 private:
   SectorModel(const SectorModel&);

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-27 04:31:37 UTC (rev 2780)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-27 15:50:05 UTC (rev 2781)
@@ -87,12 +87,14 @@
   if (!wst.get_draw_only_active_layer())
     {
       // ignore all objects not on the current active layer
-      for(SectorModel::iterator i = wst.get_sector_model()->begin();
-          i != wst.get_sector_model()->end(); ++i)
+#if 0
+      // FIXME: Code broke due to hard layer
+      for(SectorModel::iterator i = wst.get_sector_model()->begin(); i != wst.get_sector_model()->end(); ++i)
         {
           if (!wst.get_layer_mask().match((*i)->get_layers()))
             ignore_objects.insert(*i);
         }
+#endif
     }
 
   SnapData best_snap;



From grumbel at mail.berlios.de  Fri Mar 27 17:22:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 17:22:34 +0100
Subject: [Windstille-commit] r2782 - trunk/windstille/src/editor
Message-ID: <200903271622.n2RGMYif001027@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 17:22:33 +0100 (Fri, 27 Mar 2009)
New Revision: 2782

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Hooked up NewLayer, DeleteLayer calls

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -34,11 +34,13 @@
 #include "select_tool.hpp"
 #include "sector_model.hpp"
 #include "layer_widget.hpp"
+#include "editor_window.hpp"
 
 EditorWindow* EditorWindow::current_ = 0;
 
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
-  : minimap_widget(glconfig_),
+  : object_tree(*this),
+    minimap_widget(glconfig_),
     glconfig(glconfig_),
     select_tool(new SelectTool()),
     zoom_tool(new ZoomTool()),
@@ -687,6 +689,25 @@
 }
 
 void
+EditorWindow::on_delete_layer()
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      std::cout << "Deleting layer: " << wst << std::endl;
+    }
+}
+
+void
+EditorWindow::on_new_layer()
+{
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      std::cout << "Adding layer" << std::endl;
+      wst->get_sector_model()->add_layer("New Layer");
+    }
+}
+
+void
 EditorWindow::on_paste()
 {
   if (clipboard.get())

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -126,6 +126,9 @@
   void toggle_draw_only_active_layer(Glib::RefPtr<Gtk::ToggleAction> action);
   void toggle_grid_layer(Glib::RefPtr<Gtk::ToggleAction> action);
 
+  void on_new_layer();
+  void on_delete_layer();
+
   Tool* get_current_tool() const;
   WindstilleWidget* get_windstille_widget();
   

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -29,6 +29,12 @@
 }
 
 void
+HardLayer::add_layer()
+{
+  child_layers.push_back(HardLayerHandle(new HardLayer("Child layer")));
+}
+
+void
 HardLayer::add(const ObjectModelHandle& object)
 {
   objects.push_back(object);
@@ -191,6 +197,13 @@
   writer.write("name",    name);
   writer.write("visible", visible);
 
+  writer.start_section("child-layers");
+  for(HardLayers::const_iterator i = child_layers.begin(); i != child_layers.end(); ++i)
+    {
+      (*i)->write(writer);
+    }
+  writer.end_section();
+
   writer.start_section("objects");
   for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
     {

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -34,17 +34,19 @@
 {
 private:
   typedef std::list<ObjectModelHandle> Objects;
-  typedef std::list<HardLayerHandle> HardLayers;
+  typedef std::list<HardLayerHandle>   HardLayers;
 
   std::string name;
   bool visible;
   Objects objects;
-  //HardLayers child_layers;
+  HardLayers child_layers;
 
 public:
   HardLayer(const std::string& name);
   ~HardLayer();
 
+  void add_layer();
+
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
 

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -23,11 +23,13 @@
 #include <gtkmm/treestore.h>
 #include <gtkmm/treemodelcolumn.h>
 
+#include "editor_window.hpp"
 #include "sector_model.hpp"
 #include "object_tree.hpp"
 
-ObjectTree::ObjectTree()
-  : label("Scene Tree", Gtk::ALIGN_LEFT)
+ObjectTree::ObjectTree(EditorWindow& editor_)
+  : editor(editor_),
+    label("Scene Tree", Gtk::ALIGN_LEFT)
 {
   //treeview.set_headers_clickable();
   treeview.set_headers_visible(false);
@@ -43,15 +45,17 @@
   ui_manager   = Gtk::UIManager::create();
   action_group = Gtk::ActionGroup::create();
   
-  action_group->add(Gtk::Action::create("ExpandAll", Gtk::Stock::MEDIA_PLAY));
-  action_group->add(Gtk::Action::create("ShowAll",   Gtk::Stock::ZOOM_100));
+  action_group->add(Gtk::Action::create("NewLayer", Gtk::Stock::NEW),
+                    sigc::mem_fun(editor, &EditorWindow::on_new_layer));
+  action_group->add(Gtk::Action::create("DeleteLayer", Gtk::Stock::DELETE),
+                    sigc::mem_fun(editor, &EditorWindow::on_delete_layer));
 
   ui_manager->insert_action_group(action_group);
 
   ui_manager->add_ui_from_string("<ui>"
                                  "  <toolbar  name='ToolBar'>"
-                                 "    <toolitem action='ExpandAll'/>"
-                                 "    <toolitem action='ShowAll'/>"
+                                 "    <toolitem action='NewLayer'/>"
+                                 "    <toolitem action='DeleteLayer'/>"
                                  "  </toolbar>"
                                  "</ui>");
   

Modified: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -28,10 +28,12 @@
 #include <gtkmm/actiongroup.h>
 
 class SectorModel;
+class EditorWindow;
 
 class ObjectTree : public Gtk::VBox
 {
 private:
+  EditorWindow& editor;
   Gtk::Label label;
   Gtk::ScrolledWindow scrolled;
   Gtk::TreeView treeview;
@@ -40,7 +42,7 @@
   Glib::RefPtr<Gtk::ActionGroup> action_group;
 
 public:
-  ObjectTree();
+  ObjectTree(EditorWindow& editor);
   virtual ~ObjectTree();
 
   void set_model(SectorModel* model);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -49,17 +49,23 @@
 }
 
 void
-SectorModel::add(const ObjectModelHandle& object)  
+SectorModel::add_layer(const std::string& name)
 {
-  root_layer->add(object);
-
   Gtk::TreeStore::iterator it = objects_tree->append(root_it->children());
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*it)[ObjectTreeColumns::instance().name]      = object->get_name();
+  (*it)[ObjectTreeColumns::instance().name]      = name;
   (*it)[ObjectTreeColumns::instance().visible]   = false; 
+
+  root_layer->add_layer();
 }
 
 void
+SectorModel::add(const ObjectModelHandle& object)  
+{
+  root_layer->add(object);
+}
+
+void
 SectorModel::remove(const ObjectModelHandle& object)
 {
   root_layer->remove(object);

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-27 15:50:05 UTC (rev 2781)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-27 16:22:33 UTC (rev 2782)
@@ -72,6 +72,8 @@
   void draw(SceneContext& sc, const Layers& layers);
   void update(float delta);
 
+  void add_layer(const std::string& name);
+
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
 



From grumbel at mail.berlios.de  Fri Mar 27 18:08:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 18:08:41 +0100
Subject: [Windstille-commit] r2783 - in trunk/windstille: . src/editor
Message-ID: <200903271708.n2RH8fpQ007521@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 18:08:40 +0100 (Fri, 27 Mar 2009)
New Revision: 2783

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Hooked up some stuff Layer mangement stuff

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-27 16:22:33 UTC (rev 2782)
+++ trunk/windstille/TODO	2009-03-27 17:08:40 UTC (rev 2783)
@@ -501,6 +501,8 @@
 Editor
 ======
 
+* drawing is broken after loading a level, only get fixed when toggling Light layer
+
 * background pattern goes away when Color pattern is disabled, since
   its draw to the Colormap
 
@@ -544,7 +546,9 @@
 * add way to refresh content of ObjectSelector
 
 * highlight map is problematic, since objects don't cover highlights,
-  maybe rendering a stencil mask might help
+  maybe rendering a stencil mask might help, other alternative would
+  be occulsion querys, but they only work for Geforce3 and Up. Have to
+  wait and see how much of a problem that is in practice
 
 * add Blender like EmptyObjectModel
 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-27 16:22:33 UTC (rev 2782)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-27 17:08:40 UTC (rev 2783)
@@ -694,6 +694,12 @@
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       std::cout << "Deleting layer: " << wst << std::endl;
+      Gtk::TreeModel::Path path;
+      Gtk::TreeViewColumn* focus_column;
+
+      object_tree.get_treeview().get_cursor(path, focus_column);
+
+      wst->get_sector_model()->delete_layer(path);
     }
 }
 
@@ -703,7 +709,15 @@
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       std::cout << "Adding layer" << std::endl;
-      wst->get_sector_model()->add_layer("New Layer");
+
+      Gtk::TreeModel::Path path;
+      Gtk::TreeViewColumn* focus_column;
+
+      object_tree.get_treeview().get_cursor(path, focus_column);
+
+      wst->get_sector_model()->add_layer("New Layer", path);
+
+      object_tree.get_treeview().expand_all();
     }
 }
 

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-27 16:22:33 UTC (rev 2782)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-27 17:08:40 UTC (rev 2783)
@@ -29,7 +29,7 @@
 
 ObjectTree::ObjectTree(EditorWindow& editor_)
   : editor(editor_),
-    label("Scene Tree", Gtk::ALIGN_LEFT)
+    label("Layer Manager", Gtk::ALIGN_LEFT)
 {
   //treeview.set_headers_clickable();
   treeview.set_headers_visible(false);
@@ -37,7 +37,7 @@
   treeview.set_reorderable();
 
   treeview.append_column("Type", ObjectTreeColumns::instance().type_icon);
-  treeview.append_column("Name", ObjectTreeColumns::instance().name);
+  treeview.append_column_editable("Name", ObjectTreeColumns::instance().name);
   treeview.append_column_editable("Visible", ObjectTreeColumns::instance().visible);
 
   treeview.expand_all();
@@ -56,11 +56,15 @@
                                  "  <toolbar  name='ToolBar'>"
                                  "    <toolitem action='NewLayer'/>"
                                  "    <toolitem action='DeleteLayer'/>"
+                                 "    <separator/>"
                                  "  </toolbar>"
                                  "</ui>");
   
   Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
 
+  treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_cursor_changed));
+  treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_columns_changed));
+
   toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
 
   scrolled.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS);
@@ -83,11 +87,29 @@
     {
       treeview.set_model(model->get_objects_tree());
       treeview.expand_all();
+      treeview.set_cursor(Gtk::TreeModel::Path("0"));
     }
   else
     {
       treeview.set_model(Glib::RefPtr<Gtk::TreeStore>());
     }
 }
+
+void
+ObjectTree::on_cursor_changed()
+{
+  Gtk::TreeModel::Path path;
+  Gtk::TreeViewColumn* focus_column;
+  treeview.get_cursor(path, focus_column);
+  
+  std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
+}
+
+void
+ObjectTree::on_columns_changed()
+{
+  std::cout << "ObjectTree::on_columns_changed()" << std::endl;
+  treeview.expand_all();
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-27 16:22:33 UTC (rev 2782)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-27 17:08:40 UTC (rev 2783)
@@ -47,6 +47,11 @@
 
   void set_model(SectorModel* model);
 
+  void on_cursor_changed();
+  void on_columns_changed();
+
+  Gtk::TreeView& get_treeview() { return treeview; }
+
 private:
   ObjectTree(const ObjectTree&);
   ObjectTree& operator=(const ObjectTree&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-27 16:22:33 UTC (rev 2782)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-27 17:08:40 UTC (rev 2783)
@@ -49,9 +49,10 @@
 }
 
 void
-SectorModel::add_layer(const std::string& name)
+SectorModel::add_layer(const std::string& name, const Gtk::TreeModel::Path& path)
 {
-  Gtk::TreeStore::iterator it = objects_tree->append(root_it->children());
+  Gtk::TreeStore::iterator it = objects_tree->append(objects_tree->get_iter(path)->children());
+
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[ObjectTreeColumns::instance().name]      = name;
   (*it)[ObjectTreeColumns::instance().visible]   = false; 
@@ -60,6 +61,12 @@
 }
 
 void
+SectorModel::delete_layer(Gtk::TreeModel::Path& path)
+{
+  objects_tree->erase(objects_tree->get_iter(path));
+}
+
+void
 SectorModel::add(const ObjectModelHandle& object)  
 {
   root_layer->add(object);

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-27 16:22:33 UTC (rev 2782)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-27 17:08:40 UTC (rev 2783)
@@ -72,7 +72,8 @@
   void draw(SceneContext& sc, const Layers& layers);
   void update(float delta);
 
-  void add_layer(const std::string& name);
+  void add_layer(const std::string& name, const Gtk::TreeModel::Path& path);
+  void delete_layer(Gtk::TreeModel::Path& path);
 
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);



From grumbel at mail.berlios.de  Fri Mar 27 18:39:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 18:39:28 +0100
Subject: [Windstille-commit] r2784 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903271739.n2RHdS8U017456@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 18:39:27 +0100 (Fri, 27 Mar 2009)
New Revision: 2784

Modified:
   trunk/windstille/data/sectors/trainstation/stairtest.wst
   trunk/windstille/data/sectors/trainstation/train.wst
   trunk/windstille/data/sectors/trainstation/trainstation.wst
Log:
Fixed levels due to level format changes

Modified: trunk/windstille/data/sectors/trainstation/stairtest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-03-27 17:08:40 UTC (rev 2783)
+++ trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-03-27 17:39:27 UTC (rev 2784)
@@ -4,6 +4,7 @@
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
+  (layer
   (objects
     (decal
       (pos -784.328 285.241)
@@ -909,6 +910,6 @@
       (type 0)
       )
     )
-  )
+  ))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/train.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/train.wst	2009-03-27 17:08:40 UTC (rev 2783)
+++ trunk/windstille/data/sectors/trainstation/train.wst	2009-03-27 17:39:27 UTC (rev 2784)
@@ -4,6 +4,7 @@
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
+  (layer 
   (objects
     (decal
       (pos 107.438 143.078)
@@ -90,6 +91,6 @@
       (type 0)
       )
     )
-  )
+  ))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-27 17:08:40 UTC (rev 2783)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-27 17:39:27 UTC (rev 2784)
@@ -4,6 +4,7 @@
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
+  (layer
   (objects
     (decal
       (pos 1562.96 829.374)
@@ -1819,6 +1820,6 @@
       (type 0)
       )
     )
-  )
+  ))
 
 ;; EOF ;;



From grumbel at mail.berlios.de  Fri Mar 27 19:39:37 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 27 Mar 2009 19:39:37 +0100
Subject: [Windstille-commit] r2785 - trunk/windstille/src/editor
Message-ID: <200903271839.n2RIdbQ4024198@sheep.berlios.de>

Author: grumbel
Date: 2009-03-27 19:39:36 +0100 (Fri, 27 Mar 2009)
New Revision: 2785

Modified:
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
implemented some layer hierachy saving

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 17:39:27 UTC (rev 2784)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 18:39:36 UTC (rev 2785)
@@ -18,9 +18,7 @@
 
 #include "hard_layer.hpp"
 
-HardLayer::HardLayer(const std::string& name_)
-  : name(name_),
-    visible(true)
+HardLayer::HardLayer()
 {
 }
 
@@ -28,10 +26,12 @@
 {
 }
 
-void
+HardLayerHandle
 HardLayer::add_layer()
 {
-  child_layers.push_back(HardLayerHandle(new HardLayer("Child layer")));
+  HardLayerHandle layer(new HardLayer());
+  child_layers.push_back(layer);
+  return layer;
 }
 
 void
@@ -54,7 +54,6 @@
       if (layers.match((*i)->get_layers()))
         (*i)->draw(sc);
     }
-
 }
 
 void
@@ -193,25 +192,10 @@
 void
 HardLayer::write(FileWriter& writer) const
 {
-  writer.start_section("layer");
-  writer.write("name",    name);
-  writer.write("visible", visible);
-
-  writer.start_section("child-layers");
-  for(HardLayers::const_iterator i = child_layers.begin(); i != child_layers.end(); ++i)
-    {
-      (*i)->write(writer);
-    }
-  writer.end_section();
-
-  writer.start_section("objects");
   for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
     {
       (*i)->write(writer);
     }
-  writer.end_section();
-
-  writer.end_section();
 }
 
 HardLayerHandle

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 17:39:27 UTC (rev 2784)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 18:39:36 UTC (rev 2785)
@@ -36,16 +36,14 @@
   typedef std::list<ObjectModelHandle> Objects;
   typedef std::list<HardLayerHandle>   HardLayers;
 
-  std::string name;
-  bool visible;
   Objects objects;
   HardLayers child_layers;
 
 public:
-  HardLayer(const std::string& name);
+  HardLayer();
   ~HardLayer();
 
-  void add_layer();
+  HardLayerHandle add_layer();
 
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-27 17:39:27 UTC (rev 2784)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-27 18:39:36 UTC (rev 2785)
@@ -62,15 +62,15 @@
   
   Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
 
-  treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_cursor_changed));
-  treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_columns_changed));
+  //treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_cursor_changed));
+  //treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_columns_changed));
 
   toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
 
   scrolled.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS);
   scrolled.add(treeview);
 
-  pack_start(label, Gtk::PACK_SHRINK);
+  pack_start(label,   Gtk::PACK_SHRINK);
   pack_start(toolbar, Gtk::PACK_SHRINK);
   add(scrolled);
   //show_all();
@@ -85,7 +85,7 @@
 {
   if (model)
     {
-      treeview.set_model(model->get_objects_tree());
+      treeview.set_model(model->get_layer_tree());
       treeview.expand_all();
       treeview.set_cursor(Gtk::TreeModel::Path("0"));
     }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-27 17:39:27 UTC (rev 2784)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-27 18:39:36 UTC (rev 2785)
@@ -32,38 +32,38 @@
 
 SectorModel::SectorModel()
 {  
-  root_layer = HardLayerHandle(new HardLayer("HardLayer"));
+  root_layer = HardLayerHandle(new HardLayer());
 
-  objects_tree = Gtk::TreeStore::create(ObjectTreeColumns::instance());
+  layer_tree = Gtk::TreeStore::create(ObjectTreeColumns::instance());
 
-  root_it = objects_tree->append();
+  root_it = layer_tree->append();
   (*root_it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*root_it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Scene");
-  (*root_it)[ObjectTreeColumns::instance().visible]   = false;
+  (*root_it)[ObjectTreeColumns::instance().visible]   = true;
+  (*root_it)[ObjectTreeColumns::instance().layer]     = root_layer;
 
-  objects_tree->signal_row_changed().connect(sigc::mem_fun(*this, &SectorModel::on_row_changed));
-  objects_tree->signal_row_deleted().connect(sigc::mem_fun(*this, &SectorModel::on_row_deleted));
-  objects_tree->signal_row_has_child_toggled().connect(sigc::mem_fun(*this, &SectorModel::on_row_has_child_toggled));
-  objects_tree->signal_row_inserted().connect(sigc::mem_fun(*this, &SectorModel::on_row_inserted));
-  objects_tree->signal_rows_reordered().connect(sigc::mem_fun(*this, &SectorModel::on_rows_reordered));
+  layer_tree->signal_row_changed().connect(sigc::mem_fun(*this, &SectorModel::on_row_changed));
+  layer_tree->signal_row_deleted().connect(sigc::mem_fun(*this, &SectorModel::on_row_deleted));
+  layer_tree->signal_row_has_child_toggled().connect(sigc::mem_fun(*this, &SectorModel::on_row_has_child_toggled));
+  layer_tree->signal_row_inserted().connect(sigc::mem_fun(*this, &SectorModel::on_row_inserted));
+  layer_tree->signal_rows_reordered().connect(sigc::mem_fun(*this, &SectorModel::on_rows_reordered));
 }
 
 void
 SectorModel::add_layer(const std::string& name, const Gtk::TreeModel::Path& path)
 {
-  Gtk::TreeStore::iterator it = objects_tree->append(objects_tree->get_iter(path)->children());
+  Gtk::TreeStore::iterator it = layer_tree->append(layer_tree->get_iter(path)->children());
 
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[ObjectTreeColumns::instance().name]      = name;
-  (*it)[ObjectTreeColumns::instance().visible]   = false; 
-
-  root_layer->add_layer();
+  (*it)[ObjectTreeColumns::instance().visible]   = true; 
+  (*it)[ObjectTreeColumns::instance().layer]     = root_layer->add_layer(); 
 }
 
 void
 SectorModel::delete_layer(Gtk::TreeModel::Path& path)
 {
-  objects_tree->erase(objects_tree->get_iter(path));
+  layer_tree->erase(layer_tree->get_iter(path));
 }
 
 void
@@ -180,11 +180,32 @@
   writer.write("ambient-color", Color());
   writer.write("init-script", "init.nut");
 
-  root_layer->write(writer);
- 
+  write(writer, *(layer_tree->children().begin()));
+
   writer.end_section();
   writer.write_raw("\n;; EOF ;;\n");
 }
+
+void
+SectorModel::write(FileWriter& writer, const Gtk::TreeRow& row) const
+{
+  writer.start_section("layer");
+  writer.write("name",   (Glib::ustring)(row[ObjectTreeColumns::instance().name]));
+  writer.write("visible",          (bool)row[ObjectTreeColumns::instance().visible]);
+
+  writer.start_section("objects");
+  root_layer->write(writer);
+  writer.end_section();
+
+  writer.start_section("child-layers");
+  for(Gtk::TreeStore::Children::iterator i = row.children().begin(); i != row.children().end(); ++i)
+    {
+      write(writer, *i);
+    }
+  writer.end_section();
+
+  writer.end_section();
+}
 
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-27 17:39:27 UTC (rev 2784)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-27 18:39:36 UTC (rev 2785)
@@ -48,12 +48,14 @@
   Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type_icon;
   Gtk::TreeModelColumn<Glib::ustring>              name;
   Gtk::TreeModelColumn<bool>                       visible;
+  Gtk::TreeModelColumn<HardLayerHandle>            layer;
 
 private:
   ObjectTreeColumns() {
     add(type_icon); 
     add(name); 
     add(visible); 
+    add(layer);
   }
 };
 
@@ -61,7 +63,7 @@
 {
 private:
   Gtk::TreeStore::iterator root_it;
-  Glib::RefPtr<Gtk::TreeStore> objects_tree;
+  Glib::RefPtr<Gtk::TreeStore> layer_tree;
   HardLayerHandle root_layer;
   
 public:
@@ -80,7 +82,7 @@
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 
-  Glib::RefPtr<Gtk::TreeStore> get_objects_tree() { return objects_tree; }
+  Glib::RefPtr<Gtk::TreeStore> get_layer_tree() { return layer_tree; }
 
   void on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
   void on_row_deleted(const Gtk::TreeModel::Path& path);
@@ -100,6 +102,7 @@
 
   void load(const std::string& filename);
   void write(FileWriter& writer) const;
+  void write(FileWriter& writer, const Gtk::TreeRow& row) const;
 
   //iterator begin() { return objects.begin(); }
   //iterator end() { return objects.end(); }



From grumbel at mail.berlios.de  Sat Mar 28 00:43:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 00:43:16 +0100
Subject: [Windstille-commit] r2786 - trunk/windstille/src/editor
Message-ID: <200903272343.n2RNhG6k000946@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 00:43:15 +0100 (Sat, 28 Mar 2009)
New Revision: 2786

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Layer stuff now somewhat working

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -696,7 +696,6 @@
       std::cout << "Deleting layer: " << wst << std::endl;
       Gtk::TreeModel::Path path;
       Gtk::TreeViewColumn* focus_column;
-
       object_tree.get_treeview().get_cursor(path, focus_column);
 
       wst->get_sector_model()->delete_layer(path);
@@ -728,9 +727,13 @@
     {
       if (WindstilleWidget* wst = get_windstille_widget())
         {
+          Gtk::TreeModel::Path path;
+          Gtk::TreeViewColumn* focus_column;
+          object_tree.get_treeview().get_cursor(path, focus_column);
+
           for(Selection::reverse_iterator i = clipboard->rbegin(); i != clipboard->rend(); ++i)
             {
-              wst->get_sector_model()->add(*i);
+              wst->get_sector_model()->add(*i, path);
             }
 
           wst->set_selection(clipboard);

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -130,6 +130,8 @@
   void on_delete_layer();
 
   Tool* get_current_tool() const;
+
+  ObjectTree& get_object_tree() { return object_tree; }
   WindstilleWidget* get_windstille_widget();
   
   void load_file(const std::string& filename);

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -26,14 +26,6 @@
 {
 }
 
-HardLayerHandle
-HardLayer::add_layer()
-{
-  HardLayerHandle layer(new HardLayer());
-  child_layers.push_back(layer);
-  return layer;
-}
-
 void
 HardLayer::add(const ObjectModelHandle& object)
 {

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -34,17 +34,13 @@
 {
 private:
   typedef std::list<ObjectModelHandle> Objects;
-  typedef std::list<HardLayerHandle>   HardLayers;
 
   Objects objects;
-  HardLayers child_layers;
 
 public:
   HardLayer();
   ~HardLayer();
 
-  HardLayerHandle add_layer();
-
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
 

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -31,17 +31,11 @@
   : editor(editor_),
     label("Layer Manager", Gtk::ALIGN_LEFT)
 {
-  //treeview.set_headers_clickable();
+  treeview.set_headers_clickable();
   treeview.set_headers_visible(false);
   treeview.set_enable_tree_lines();
   treeview.set_reorderable();
 
-  treeview.append_column("Type", ObjectTreeColumns::instance().type_icon);
-  treeview.append_column_editable("Name", ObjectTreeColumns::instance().name);
-  treeview.append_column_editable("Visible", ObjectTreeColumns::instance().visible);
-
-  treeview.expand_all();
-
   ui_manager   = Gtk::UIManager::create();
   action_group = Gtk::ActionGroup::create();
   
@@ -86,6 +80,15 @@
   if (model)
     {
       treeview.set_model(model->get_layer_tree());
+
+      // Recreate all the columns, since if we don't do that, we lose
+      // editability for some reason
+      treeview.remove_all_columns();
+      treeview.append_column("Type", ObjectTreeColumns::instance().type_icon);
+      treeview.append_column_editable("Name", ObjectTreeColumns::instance().name);
+      treeview.append_column_editable("Visible", ObjectTreeColumns::instance().visible);
+      treeview.append_column_editable("Visible", ObjectTreeColumns::instance().locked);
+
       treeview.expand_all();
       treeview.set_cursor(Gtk::TreeModel::Path("0"));
     }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -22,6 +22,8 @@
 #include <iostream>
 #include <gdkmm/pixbuf.h>
 
+#include "editor_window.hpp"
+#include "windstille_widget.hpp"
 #include "util/file_reader.hpp"
 #include "display/scene_context.hpp"
 #include "display/surface.hpp"
@@ -57,7 +59,7 @@
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[ObjectTreeColumns::instance().name]      = name;
   (*it)[ObjectTreeColumns::instance().visible]   = true; 
-  (*it)[ObjectTreeColumns::instance().layer]     = root_layer->add_layer(); 
+  (*it)[ObjectTreeColumns::instance().layer]     = HardLayerHandle(new HardLayer());
 }
 
 void
@@ -67,39 +69,146 @@
 }
 
 void
-SectorModel::add(const ObjectModelHandle& object)  
+SectorModel::add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path)
 {
-  root_layer->add(object);
+  Gtk::TreeStore::iterator it = layer_tree->get_iter(path);
+  ((HardLayerHandle)(*it)[ObjectTreeColumns::instance().layer])->add(object);
 }
 
+struct RemoveObjectFunctor
+{
+  const ObjectModelHandle& object;
+
+  RemoveObjectFunctor(const ObjectModelHandle& object_)
+    : object(object_)
+  {}
+
+  bool remove(const Gtk::TreeModel::iterator& it)
+  {
+    ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->remove(object);
+    return false; // continue tree traversal
+  }
+};
+
 void
 SectorModel::remove(const ObjectModelHandle& object)
 {
-  root_layer->remove(object);
+  RemoveObjectFunctor func(object);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &RemoveObjectFunctor::remove));
 }
 
+struct DrawLayerFunctor
+{
+  SceneContext& sc;
+  const Layers&       layers;
+
+  DrawLayerFunctor(SceneContext& sc_, const Layers& layers_)
+    : sc(sc_), layers(layers_)
+  {}
+
+  bool draw(const Gtk::TreeModel::iterator& it) 
+  {
+    if ((*it)[ObjectTreeColumns::instance().visible])
+      {      
+        ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->draw(sc, layers);
+      }
+
+    return false;
+  }
+};
+
 void
 SectorModel::draw(SceneContext& sc, const Layers& layers)
 {
-  root_layer->draw(sc, layers);
+  DrawLayerFunctor func(sc, layers);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &DrawLayerFunctor::draw));
 }
 
+struct LayerUpdateFunctor
+{
+  float& delta;
+  
+  LayerUpdateFunctor(float& delta_)
+    : delta(delta_)
+  {}
+
+  bool update(const Gtk::TreeModel::iterator& it)
+  {
+    if ((*it)[ObjectTreeColumns::instance().visible])
+      {      
+        ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->update(delta);
+      }
+    return false;    
+  }
+};
+
 void
 SectorModel::update(float delta)
 {
-  root_layer->update(delta);
+  LayerUpdateFunctor func(delta);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &LayerUpdateFunctor::update));
 }
 
+struct LayerGetObjectAt
+{
+  const Vector2f& pos;
+  const Layers&   layers;
+  ObjectModelHandle object;
+
+  LayerGetObjectAt(const Vector2f& pos_, const Layers& layers_)
+    : pos(pos_),
+      layers(layers_)
+  {}
+
+  bool get_object_at(const Gtk::TreeModel::iterator& it)
+  {
+    if ((*it)[ObjectTreeColumns::instance().visible])
+      {
+        object = ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->get_object_at(pos, layers);
+        if (object.get())
+          return true;
+      }
+    return false;
+  }
+};
+
 ObjectModelHandle
 SectorModel::get_object_at(const Vector2f& pos, const Layers& layers) const
 {
-  return root_layer->get_object_at(pos, layers);
+  LayerGetObjectAt func(pos, layers);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &LayerGetObjectAt::get_object_at));
+  return func.object;
 }
 
+struct LayerGetSelection
+{
+  const Rectf& rect;
+  const Layers& layers;
+  SelectionHandle selection;
+
+  LayerGetSelection(const Rectf& rect_, const Layers& layers_)
+    : rect(rect_),
+      layers(layers_),
+      selection(Selection::create())
+  {}
+
+  bool get_selection(const Gtk::TreeModel::iterator& it)
+  {
+    if ((*it)[ObjectTreeColumns::instance().visible])
+      {
+        SelectionHandle new_sel = ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->get_selection(rect, layers);
+        selection->add(new_sel->begin(), new_sel->end());
+      }
+    return false;
+  }
+};
+
 SelectionHandle
 SectorModel::get_selection(const Rectf& rect, const Layers& layers) const
 {
-  return root_layer->get_selection(rect, layers);
+  LayerGetSelection func(rect, layers);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &LayerGetSelection::get_selection));
+  return func.selection;
 }
 
 void
@@ -161,7 +270,7 @@
                   std::vector<FileReader> objects_sections = objects_reader.get_sections();
                   for(std::vector<FileReader>::iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
                     {
-                      add(ObjectModelFactory::create(*j));
+                      //FIXME: add(ObjectModelFactory::create(*j));
                     }
                 }
             }
@@ -211,12 +320,20 @@
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
   std::cout << "ObjectTree:on_row_changed" << std::endl;
+  if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
+    {
+      wst->queue_draw();
+    }
 }
 
 void
 SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
 {
   std::cout << "ObjectTree:on_row_deleted" << std::endl;
+  if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
+    {
+      wst->queue_draw();
+    }
 }
 
 void

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -48,6 +48,7 @@
   Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type_icon;
   Gtk::TreeModelColumn<Glib::ustring>              name;
   Gtk::TreeModelColumn<bool>                       visible;
+  Gtk::TreeModelColumn<bool>                       locked;
   Gtk::TreeModelColumn<HardLayerHandle>            layer;
 
 private:
@@ -55,6 +56,7 @@
     add(type_icon); 
     add(name); 
     add(visible); 
+    add(locked);
     add(layer);
   }
 };
@@ -72,12 +74,14 @@
   SectorModel();
 
   void draw(SceneContext& sc, const Layers& layers);
+
   void update(float delta);
+  void update(float delta, const Gtk::TreeRow& row);
 
   void add_layer(const std::string& name, const Gtk::TreeModel::Path& path);
   void delete_layer(Gtk::TreeModel::Path& path);
 
-  void add(const ObjectModelHandle& object);
+  void add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path);
   void remove(const ObjectModelHandle& object);
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 18:39:36 UTC (rev 2785)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-27 23:43:15 UTC (rev 2786)
@@ -318,6 +318,10 @@
 void
 WindstilleWidget::selection_duplicate()
 {
+  Gtk::TreeModel::Path path;
+  Gtk::TreeViewColumn* focus_column;
+  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+
   SelectionHandle new_selection = Selection::create();
   for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
     {
@@ -326,7 +330,7 @@
       // Move clone a litte to make it more obvious that something happened
       obj->set_rel_pos(obj->get_rel_pos() + Vector2f(32.0f, 32.0f));
 
-      sector_model->add(obj);
+      sector_model->add(obj, path);
       new_selection->add(obj);
     }
   selection = new_selection;
@@ -482,11 +486,6 @@
   std::cout << "WindstilleWidget: on_drag_data_received: "
             << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
   
-  if (0)
-    sector_model->add(ObjectModelHandle(new SpriteObjectModel("SpriteObjectModel", state.screen_to_world(Vector2f(x, y)),
-                                                              "images/hedgehog_die.sprite")));
-  //"images/explosion.sprite")));
-
   ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
                                                       state.screen_to_world(Vector2f(x, y)),
                                                       data.get_data_as_string().substr(5), 
@@ -499,7 +498,12 @@
   else
     object->set_layers(layer_mask);
 
-  sector_model->add(object);
+  Gtk::TreeModel::Path path;
+  Gtk::TreeViewColumn* focus_column;
+
+  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+
+  sector_model->add(object, path);
 }
 
 void



From grumbel at mail.berlios.de  Sat Mar 28 01:52:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 01:52:01 +0100
Subject: [Windstille-commit] r2787 - trunk/windstille/data/images/decal
Message-ID: <200903280052.n2S0q1wO005745@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 01:51:46 +0100 (Sat, 28 Mar 2009)
New Revision: 2787

Added:
   trunk/windstille/data/images/decal/humanreference.png
   trunk/windstille/data/images/decal/mine_background.png
   trunk/windstille/data/images/decal/mine_ground.png
   trunk/windstille/data/images/decal/mine_tree1.png
   trunk/windstille/data/images/decal/mine_tree2.png
Modified:
   trunk/windstille/data/images/decal/train_back.png
Log:
Some more images

Added: trunk/windstille/data/images/decal/humanreference.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/humanreference.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/mine_background.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/mine_background.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/mine_ground.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/mine_ground.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/mine_tree1.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/mine_tree1.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/mine_tree2.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/mine_tree2.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/data/images/decal/train_back.png
===================================================================
(Binary files differ)



From grumbel at mail.berlios.de  Sat Mar 28 05:58:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 05:58:34 +0100
Subject: [Windstille-commit] r2788 - in trunk/windstille: . data/editor
	src/editor
Message-ID: <200903280458.n2S4wYTi032426@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 05:58:33 +0100 (Sat, 28 Mar 2009)
New Revision: 2788

Added:
   trunk/windstille/data/editor/grid.png
Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Removed most functors and replaced them with classic iteration over vector returned by get_layers()

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/TODO	2009-03-28 04:58:33 UTC (rev 2788)
@@ -501,6 +501,28 @@
 Editor
 ======
 
+* New Layer System:
+
+  - needs a way to iterate in reverse over all layers, needed since
+    select() and draw() work in different directions
+
+  - need an easy way to get the layer on which an object is for
+    raise()/lower(), etc.
+
+  - a way to iterate over layers in classic way could be helpful
+
+  - need a clean way to get the current layer
+
+  - a locked layer should be ignored in all select operations, so that
+    it can't be moved by accident, adding to them should be forbidden
+    as well
+
+  - adding a "std::vector<HardLayerHandle> get_layers() const" seems
+    most simple, trouble is that visible/locked/name data might get
+    out of sync
+
+  - add function to select all objects on the current layer
+
 * drawing is broken after loading a level, only get fixed when toggling Light layer
 
 * background pattern goes away when Color pattern is disabled, since

Added: trunk/windstille/data/editor/grid.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/grid.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-28 04:58:33 UTC (rev 2788)
@@ -304,7 +304,7 @@
   vpaned.pack1(object_selector, Gtk::EXPAND);
   vpaned.pack2(object_tree,     Gtk::SHRINK);
 
-  hpaned.set_position(1024);
+  hpaned.set_position(1000);
   vpaned.set_position(420);
 
   // Window

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-28 04:58:33 UTC (rev 2788)
@@ -19,6 +19,8 @@
 #include "hard_layer.hpp"
 
 HardLayer::HardLayer()
+  : visible(true),
+    locked(false)
 {
 }
 

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-28 04:58:33 UTC (rev 2788)
@@ -36,11 +36,23 @@
   typedef std::list<ObjectModelHandle> Objects;
 
   Objects objects;
-
+  std::string name;
+  bool visible;
+  bool locked;
+  
 public:
   HardLayer();
   ~HardLayer();
 
+  void set_name(const std::string& str) { name = str; }
+  std::string get_name() const { return name; }
+
+  bool is_visible() const { return visible; }
+  bool is_locked() const { return locked; }
+
+  void set_visible(bool v) { visible = v; }
+  void set_locked(bool v) { locked = v; }
+
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
 

Modified: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-28 04:58:33 UTC (rev 2788)
@@ -32,7 +32,7 @@
     label("Layer Manager", Gtk::ALIGN_LEFT)
 {
   treeview.set_headers_clickable();
-  treeview.set_headers_visible(false);
+  treeview.set_headers_visible(true);
   treeview.set_enable_tree_lines();
   treeview.set_reorderable();
 
@@ -87,7 +87,7 @@
       treeview.append_column("Type", ObjectTreeColumns::instance().type_icon);
       treeview.append_column_editable("Name", ObjectTreeColumns::instance().name);
       treeview.append_column_editable("Visible", ObjectTreeColumns::instance().visible);
-      treeview.append_column_editable("Visible", ObjectTreeColumns::instance().locked);
+      treeview.append_column_editable("Locked", ObjectTreeColumns::instance().locked);
 
       treeview.expand_all();
       treeview.set_cursor(Gtk::TreeModel::Path("0"));

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 04:58:33 UTC (rev 2788)
@@ -63,7 +63,7 @@
 }
 
 void
-SectorModel::delete_layer(Gtk::TreeModel::Path& path)
+SectorModel::delete_layer(const Gtk::TreeModel::Path& path)
 {
   layer_tree->erase(layer_tree->get_iter(path));
 }
@@ -74,141 +74,102 @@
   Gtk::TreeStore::iterator it = layer_tree->get_iter(path);
   ((HardLayerHandle)(*it)[ObjectTreeColumns::instance().layer])->add(object);
 }
-
-struct RemoveObjectFunctor
+
+struct GetLayersFunctor
 {
-  const ObjectModelHandle& object;
+  SectorModel::HardLayers& objects;
 
-  RemoveObjectFunctor(const ObjectModelHandle& object_)
-    : object(object_)
+  GetLayersFunctor(SectorModel::HardLayers& objects_) 
+    : objects(objects_)
   {}
 
-  bool remove(const Gtk::TreeModel::iterator& it)
+  bool get_layers(const Gtk::TreeModel::iterator& it)
   {
-    ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->remove(object);
-    return false; // continue tree traversal
+    objects.push_back((*it)[ObjectTreeColumns::instance().layer]);
+    return false;
   }
 };
 
+SectorModel::HardLayers
+SectorModel::get_layers() const
+{
+  HardLayers lst;
+  GetLayersFunctor func(lst);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &GetLayersFunctor::get_layers));
+  return lst;
+}
+
 void
 SectorModel::remove(const ObjectModelHandle& object)
 {
-  RemoveObjectFunctor func(object);
-  layer_tree->foreach_iter(sigc::mem_fun(func, &RemoveObjectFunctor::remove));
+  const HardLayers& layers = get_layers();
+ 
+  for(HardLayers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
+    {
+      (*i)->remove(object);
+    }
 }
-
-struct DrawLayerFunctor
-{
-  SceneContext& sc;
-  const Layers&       layers;
-
-  DrawLayerFunctor(SceneContext& sc_, const Layers& layers_)
-    : sc(sc_), layers(layers_)
-  {}
-
-  bool draw(const Gtk::TreeModel::iterator& it) 
-  {
-    if ((*it)[ObjectTreeColumns::instance().visible])
-      {      
-        ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->draw(sc, layers);
-      }
-
-    return false;
-  }
-};
-
+
 void
-SectorModel::draw(SceneContext& sc, const Layers& layers)
+SectorModel::draw(SceneContext& sc, const Layers& layermask)
 {
-  DrawLayerFunctor func(sc, layers);
-  layer_tree->foreach_iter(sigc::mem_fun(func, &DrawLayerFunctor::draw));
+  const HardLayers& layers = get_layers();
+ 
+  for(HardLayers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
+    {
+      if ((*i)->is_visible())
+        (*i)->draw(sc, layermask);
+    }
 }
-
-struct LayerUpdateFunctor
-{
-  float& delta;
-  
-  LayerUpdateFunctor(float& delta_)
-    : delta(delta_)
-  {}
-
-  bool update(const Gtk::TreeModel::iterator& it)
-  {
-    if ((*it)[ObjectTreeColumns::instance().visible])
-      {      
-        ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->update(delta);
-      }
-    return false;    
-  }
-};
-
+
 void
 SectorModel::update(float delta)
 {
-  LayerUpdateFunctor func(delta);
-  layer_tree->foreach_iter(sigc::mem_fun(func, &LayerUpdateFunctor::update));
-}
+  const HardLayers& layers = get_layers();
 
-struct LayerGetObjectAt
+  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+    {
+      if ((*i)->is_visible())
+        (*i)->update(delta);
+    }
+}
+
+ObjectModelHandle
+SectorModel::get_object_at(const Vector2f& pos, const Layers& layermask) const
 {
-  const Vector2f& pos;
-  const Layers&   layers;
-  ObjectModelHandle object;
+  const HardLayers& layers = get_layers();
+  SelectionHandle selection = Selection::create();
 
-  LayerGetObjectAt(const Vector2f& pos_, const Layers& layers_)
-    : pos(pos_),
-      layers(layers_)
-  {}
+  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+    {
+      if ((*i)->is_visible() && !(*i)->is_locked())
+        {
+          ObjectModelHandle object = (*i)->get_object_at(pos, layermask);
+          
+          if (object.get())
+            return object;
+        }
+    }
 
-  bool get_object_at(const Gtk::TreeModel::iterator& it)
-  {
-    if ((*it)[ObjectTreeColumns::instance().visible])
-      {
-        object = ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->get_object_at(pos, layers);
-        if (object.get())
-          return true;
-      }
-    return false;
-  }
-};
-
-ObjectModelHandle
-SectorModel::get_object_at(const Vector2f& pos, const Layers& layers) const
-{
-  LayerGetObjectAt func(pos, layers);
-  layer_tree->foreach_iter(sigc::mem_fun(func, &LayerGetObjectAt::get_object_at));
-  return func.object;
+  return ObjectModelHandle();
 }
-
-struct LayerGetSelection
+
+SelectionHandle
+SectorModel::get_selection(const Rectf& rect, const Layers& layermask) const
 {
-  const Rectf& rect;
-  const Layers& layers;
-  SelectionHandle selection;
+  const HardLayers& layers = get_layers();
+  SelectionHandle selection = Selection::create();
 
-  LayerGetSelection(const Rectf& rect_, const Layers& layers_)
-    : rect(rect_),
-      layers(layers_),
-      selection(Selection::create())
-  {}
+  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+    {
+      if ((*i)->is_visible() && !(*i)->is_locked())
+        {
+          SelectionHandle new_sel = (*i)->get_selection(rect, layermask);
+          selection->add(new_sel->begin(), new_sel->end());
+        }
+    }
 
-  bool get_selection(const Gtk::TreeModel::iterator& it)
-  {
-    if ((*it)[ObjectTreeColumns::instance().visible])
-      {
-        SelectionHandle new_sel = ((HardLayerHandle)((*it)[ObjectTreeColumns::instance().layer]))->get_selection(rect, layers);
-        selection->add(new_sel->begin(), new_sel->end());
-      }
-    return false;
-  }
-};
-
-SelectionHandle
-SectorModel::get_selection(const Rectf& rect, const Layers& layers) const
-{
-  LayerGetSelection func(rect, layers);
-  layer_tree->foreach_iter(sigc::mem_fun(func, &LayerGetSelection::get_selection));
-  return func.selection;
+  return selection;
 }
 
 void
@@ -238,7 +199,17 @@
 SnapData
 SectorModel::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
 {
-  return root_layer->snap_object(rect, ignore_objects);
+  const HardLayers& layers = get_layers();
+
+  SnapData snap_data;
+  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+    {
+      if ((*i)->is_visible())
+        {
+          snap_data.merge((*i)->snap_object(rect, ignore_objects));
+        }
+    }
+  return snap_data;
 }
 
 void
@@ -317,9 +288,8 @@
 }
 
 void
-SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
+SectorModel::queue_draw()
 {
-  std::cout << "ObjectTree:on_row_changed" << std::endl;
   if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
     {
       wst->queue_draw();
@@ -327,16 +297,31 @@
 }
 
 void
-SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
+SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "ObjectTree:on_row_deleted" << std::endl;
-  if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
+  std::cout << "ObjectTree:on_row_changed" << std::endl;
+  if (iter)
     {
-      wst->queue_draw();
+      // Update the Layer object with data from the tree
+      HardLayerHandle layer = (*iter)[ObjectTreeColumns::instance().layer];
+      if (layer.get())
+        {
+          layer->set_name(((Glib::ustring)(*iter)[ObjectTreeColumns::instance().name]).raw());
+          layer->set_visible((*iter)[ObjectTreeColumns::instance().visible]);
+          layer->set_locked((*iter)[ObjectTreeColumns::instance().locked]);
+        }
     }
+  queue_draw();
 }
 
 void
+SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
+{
+  std::cout << "ObjectTree:on_row_deleted" << std::endl;
+  queue_draw();
+}
+
+void
 SectorModel::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
   std::cout << "ObjectTree:on_row_has_child_toggled" << std::endl;

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-28 00:51:46 UTC (rev 2787)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-28 04:58:33 UTC (rev 2788)
@@ -67,9 +67,10 @@
   Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> layer_tree;
   HardLayerHandle root_layer;
-  
+
 public:
   //typedef Objects::iterator iterator;
+  typedef std::vector<HardLayerHandle> HardLayers;
 
   SectorModel();
 
@@ -79,11 +80,13 @@
   void update(float delta, const Gtk::TreeRow& row);
 
   void add_layer(const std::string& name, const Gtk::TreeModel::Path& path);
-  void delete_layer(Gtk::TreeModel::Path& path);
+  void delete_layer(const Gtk::TreeModel::Path& path);
 
   void add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path);
   void remove(const ObjectModelHandle& object);
 
+  HardLayers get_layers() const;
+
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 
   Glib::RefPtr<Gtk::TreeStore> get_layer_tree() { return layer_tree; }
@@ -108,6 +111,8 @@
   void write(FileWriter& writer) const;
   void write(FileWriter& writer, const Gtk::TreeRow& row) const;
 
+  void queue_draw();
+
   //iterator begin() { return objects.begin(); }
   //iterator end() { return objects.end(); }
 



From grumbel at mail.berlios.de  Sat Mar 28 06:04:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 06:04:13 +0100
Subject: [Windstille-commit] r2789 - trunk/windstille/src/editor
Message-ID: <200903280504.n2S54Dwh004617@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 06:04:12 +0100 (Sat, 28 Mar 2009)
New Revision: 2789

Modified:
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Implemented proper raise/lower for non root layer

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-28 04:58:33 UTC (rev 2788)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-28 05:04:12 UTC (rev 2789)
@@ -28,6 +28,12 @@
 {
 }
 
+bool
+HardLayer::has_object(const ObjectModelHandle& object) const
+{
+  return std::find(objects.begin(), objects.end(), object) != objects.end();
+}
+
 void
 HardLayer::add(const ObjectModelHandle& object)
 {

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-28 04:58:33 UTC (rev 2788)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-28 05:04:12 UTC (rev 2789)
@@ -53,6 +53,8 @@
   void set_visible(bool v) { visible = v; }
   void set_locked(bool v) { locked = v; }
 
+  bool has_object(const ObjectModelHandle& object) const;
+
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
 

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 04:58:33 UTC (rev 2788)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 05:04:12 UTC (rev 2789)
@@ -172,28 +172,40 @@
   return selection;
 }
 
+HardLayerHandle
+SectorModel::get_layer(ObjectModelHandle object)
+{
+  const HardLayers& layers = get_layers();
+  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+    {
+      if ((*i)->has_object(object))
+        return *i;
+    }
+  return HardLayerHandle();
+}
+
 void
 SectorModel::raise(ObjectModelHandle object)
 {
-  root_layer->raise(object);
+  get_layer(object)->raise(object);
 }
 
 void
 SectorModel::lower(ObjectModelHandle object)
 {
-  root_layer->lower(object);
+  get_layer(object)->lower(object);
 }
 
 void
 SectorModel::raise_to_top(ObjectModelHandle object)
 {
-  root_layer->raise_to_top(object);
+  get_layer(object)->raise_to_top(object);
 }
 
 void
 SectorModel::lower_to_bottom(ObjectModelHandle object)
 {
-  root_layer->lower_to_bottom(object);
+  get_layer(object)->lower_to_bottom(object);
 }
 
 SnapData

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-28 04:58:33 UTC (rev 2788)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-28 05:04:12 UTC (rev 2789)
@@ -99,6 +99,8 @@
 
   ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
   SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;
+
+  HardLayerHandle get_layer(ObjectModelHandle object);
   
   void raise_to_top(ObjectModelHandle object);
   void lower_to_bottom(ObjectModelHandle object);



From grumbel at mail.berlios.de  Sat Mar 28 06:12:55 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 06:12:55 +0100
Subject: [Windstille-commit] r2790 - trunk/windstille/src/editor
Message-ID: <200903280512.n2S5Ctw0005135@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 06:12:54 +0100 (Sat, 28 Mar 2009)
New Revision: 2790

Modified:
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Fixed saving, removed root_it and root_layer

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 05:04:12 UTC (rev 2789)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 05:12:54 UTC (rev 2790)
@@ -34,16 +34,16 @@
 
 SectorModel::SectorModel()
 {  
-  root_layer = HardLayerHandle(new HardLayer());
-
   layer_tree = Gtk::TreeStore::create(ObjectTreeColumns::instance());
 
-  root_it = layer_tree->append();
-  (*root_it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*root_it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Scene");
-  (*root_it)[ObjectTreeColumns::instance().visible]   = true;
-  (*root_it)[ObjectTreeColumns::instance().layer]     = root_layer;
+  Gtk::TreeStore::iterator it = layer_tree->append();
 
+  (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Scene");
+  (*it)[ObjectTreeColumns::instance().visible]   = true;
+  (*it)[ObjectTreeColumns::instance().locked]    = false;
+  (*it)[ObjectTreeColumns::instance().layer]     = HardLayerHandle(new HardLayer());
+
   layer_tree->signal_row_changed().connect(sigc::mem_fun(*this, &SectorModel::on_row_changed));
   layer_tree->signal_row_deleted().connect(sigc::mem_fun(*this, &SectorModel::on_row_deleted));
   layer_tree->signal_row_has_child_toggled().connect(sigc::mem_fun(*this, &SectorModel::on_row_has_child_toggled));
@@ -59,6 +59,7 @@
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[ObjectTreeColumns::instance().name]      = name;
   (*it)[ObjectTreeColumns::instance().visible]   = true; 
+  (*it)[ObjectTreeColumns::instance().locked]    = false; 
   (*it)[ObjectTreeColumns::instance().layer]     = HardLayerHandle(new HardLayer());
 }
 
@@ -243,12 +244,16 @@
               if (i->get_name() == "layer")
                 {
                   FileReader objects_reader;
+                  FileReader layers_reader;
                   std::string name;
                   bool visible;
+                  bool locked;
 
                   i->read("name", name);
                   i->read("visible", visible);
+                  i->read("visible", locked);
                   i->read("objects", objects_reader);
+                  i->read("child-layers", layers_reader);
                   
                   std::vector<FileReader> objects_sections = objects_reader.get_sections();
                   for(std::vector<FileReader>::iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
@@ -282,11 +287,12 @@
 SectorModel::write(FileWriter& writer, const Gtk::TreeRow& row) const
 {
   writer.start_section("layer");
-  writer.write("name",   (Glib::ustring)(row[ObjectTreeColumns::instance().name]));
-  writer.write("visible",          (bool)row[ObjectTreeColumns::instance().visible]);
+  writer.write("name",    (Glib::ustring)(row[ObjectTreeColumns::instance().name]));
+  writer.write("visible", (bool)row[ObjectTreeColumns::instance().visible]);
+  writer.write("locked",  (bool)row[ObjectTreeColumns::instance().locked]);
 
   writer.start_section("objects");
-  root_layer->write(writer);
+  ((HardLayerHandle)row[ObjectTreeColumns::instance().layer])->write(writer);
   writer.end_section();
 
   writer.start_section("child-layers");

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-28 05:04:12 UTC (rev 2789)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-28 05:12:54 UTC (rev 2790)
@@ -64,9 +64,7 @@
 class SectorModel
 {
 private:
-  Gtk::TreeStore::iterator root_it;
   Glib::RefPtr<Gtk::TreeStore> layer_tree;
-  HardLayerHandle root_layer;
 
 public:
   //typedef Objects::iterator iterator;



From grumbel at mail.berlios.de  Sat Mar 28 16:24:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 16:24:31 +0100
Subject: [Windstille-commit] r2791 - in trunk/windstille: . src/editor
Message-ID: <200903281524.n2SFOV9g006589@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 16:24:30 +0100 (Sat, 28 Mar 2009)
New Revision: 2791

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/object_model_factory.cpp
   trunk/windstille/src/editor/object_model_factory.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Fixed load support

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/TODO	2009-03-28 15:24:30 UTC (rev 2791)
@@ -501,28 +501,12 @@
 Editor
 ======
 
+* make FileReader const
+
 * New Layer System:
 
-  - needs a way to iterate in reverse over all layers, needed since
-    select() and draw() work in different directions
+  - rename HardLayer to Layer and Layers to LayerMask/SelectionMask
 
-  - need an easy way to get the layer on which an object is for
-    raise()/lower(), etc.
-
-  - a way to iterate over layers in classic way could be helpful
-
-  - need a clean way to get the current layer
-
-  - a locked layer should be ignored in all select operations, so that
-    it can't be moved by accident, adding to them should be forbidden
-    as well
-
-  - adding a "std::vector<HardLayerHandle> get_layers() const" seems
-    most simple, trouble is that visible/locked/name data might get
-    out of sync
-
-  - add function to select all objects on the current layer
-
 * drawing is broken after loading a level, only get fixed when toggling Light layer
 
 * background pattern goes away when Color pattern is disabled, since
@@ -539,33 +523,10 @@
     - parent object
     - move to different layer
 
-* use for layer system:
-
-  - levels are naturally constructed out of multiple layers, such as
-    background, foreground, lights, shadow stuff, decal, etc. Also
-    certain things need to be grouped, a wall of tiles should be
-    easily moveable without the danger of ripping the tiles appart
-
-  - base layer system on the parenting system:
-
-    - make a special LayerObjectModel object, that acts like an Empty
-      for most part, but shows up in the ObjectTree
-    - make new objects automatically parent to stuff in the ObjectTree
-    - need a way to bring objects to the same sorting order then their
-      parent
-    - advantage: layers themself can be grouped, i.e. (wall-base,
-      wall-decal, wall-shadows)
-
- - alternative: build layer system around GroupObjectModel
-    
-    - an Object that contains child objects
-    - trouble: groups will be hard to edit
-
-* layer move tool
-
 * highlight content of rect selection while the rect gets dragged
 
-* add way to refresh content of ObjectSelector
+* add way to refresh content of ObjectSelector (i.e. load new images
+  from disk)
 
 * highlight map is problematic, since objects don't cover highlights,
   maybe rendering a stencil mask might help, other alternative would
@@ -576,7 +537,7 @@
 
 * spacenav support for scrolling?
 
-* do a continous zoom file zoom button is pressed (timeout callback)
+* do a continous zoom while the zoom-button is pressed (timeout callback)
 
 * add recent files
 
@@ -594,7 +555,7 @@
   - bool
   - enum
 
-* add button and keyboard shortcut to mark/unmark all layers
+* add button and keyboard shortcut to mark/unmark all layers in the layermask
 
 * add a way to move object to a different layer
 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -69,6 +69,8 @@
     "      <separator/>"
     "      <menuitem action='Delete'/>"
     "      <menuitem action='Duplicate'/>"
+    "      <separator/>"
+    "      <menuitem action='SelectAll'/>"
     "    </menu>"
     "    <menu action='MenuObject'>"
     "      <menuitem action='RaiseObjectToTop'/>"
@@ -175,6 +177,8 @@
                     sigc::mem_fun(*this, &EditorWindow::on_copy));
   action_group->add(Gtk::Action::create("Paste",       Gtk::Stock::PASTE),
                     sigc::mem_fun(*this, &EditorWindow::on_paste));
+  action_group->add(Gtk::Action::create("SelectAll",       Gtk::Stock::SELECT_ALL),
+                    sigc::mem_fun(*this, &EditorWindow::on_select_all));
 
   action_group->add(Gtk::Action::create("Delete",      Gtk::Stock::DELETE),
                     sigc::bind(sigc::mem_fun(*this, &EditorWindow::call_with_windstille_widget), &WindstilleWidget::selection_delete));
@@ -694,11 +698,7 @@
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       std::cout << "Deleting layer: " << wst << std::endl;
-      Gtk::TreeModel::Path path;
-      Gtk::TreeViewColumn* focus_column;
-      object_tree.get_treeview().get_cursor(path, focus_column);
-
-      wst->get_sector_model()->delete_layer(path);
+      wst->get_sector_model()->delete_layer(wst->get_current_layer_path());
     }
 }
 
@@ -708,14 +708,8 @@
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       std::cout << "Adding layer" << std::endl;
+      wst->get_sector_model()->add_layer("New Layer", wst->get_current_layer_path());
 
-      Gtk::TreeModel::Path path;
-      Gtk::TreeViewColumn* focus_column;
-
-      object_tree.get_treeview().get_cursor(path, focus_column);
-
-      wst->get_sector_model()->add_layer("New Layer", path);
-
       object_tree.get_treeview().expand_all();
     }
 }
@@ -727,13 +721,10 @@
     {
       if (WindstilleWidget* wst = get_windstille_widget())
         {
-          Gtk::TreeModel::Path path;
-          Gtk::TreeViewColumn* focus_column;
-          object_tree.get_treeview().get_cursor(path, focus_column);
-
+          HardLayerHandle layer = wst->get_current_layer();
           for(Selection::reverse_iterator i = clipboard->rbegin(); i != clipboard->rend(); ++i)
             {
-              wst->get_sector_model()->add(*i, path);
+              layer->add(*i);
             }
 
           wst->set_selection(clipboard);
@@ -742,5 +733,18 @@
         }
     }
 }
+
+void
+EditorWindow::on_select_all()
+{
+  // Select all on current layer
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      HardLayerHandle layer = wst->get_current_layer();
+      SelectionHandle selection = Selection::create();
+      selection->add(layer->begin(), layer->end());
+      wst->set_selection(selection);
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -121,6 +121,8 @@
   void on_switch_page(GtkNotebookPage* page, guint page_num);
   void on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool*);
 
+  void on_select_all();
+
   void toggle_render_layer(Glib::RefPtr<Gtk::ToggleAction> action, uint32_t mask);
   void toggle_background_layer(Glib::RefPtr<Gtk::ToggleAction> action);
   void toggle_draw_only_active_layer(Glib::RefPtr<Gtk::ToggleAction> action);

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -41,9 +41,14 @@
   bool locked;
   
 public:
+  typedef Objects::iterator iterator;
+
   HardLayer();
   ~HardLayer();
 
+  iterator begin() { return objects.begin(); }
+  iterator end()   { return objects.end(); }
+
   void set_name(const std::string& str) { name = str; }
   std::string get_name() const { return name; }
 

Modified: trunk/windstille/src/editor/object_model_factory.cpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.cpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/object_model_factory.cpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -23,7 +23,7 @@
 #include "object_model_factory.hpp"
 
 ObjectModelHandle
-ObjectModelFactory::create(FileReader& reader)
+ObjectModelFactory::create(FileReader reader)
 {
   if (reader.get_name() == "decal")
     {

Modified: trunk/windstille/src/editor/object_model_factory.hpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.hpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/object_model_factory.hpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -26,7 +26,7 @@
 class ObjectModelFactory
 {
 public:
-  static ObjectModelHandle create(FileReader& reader);
+  static ObjectModelHandle create(FileReader reader);
   
 private:
   ObjectModelFactory(const ObjectModelFactory&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -54,8 +54,13 @@
 void
 SectorModel::add_layer(const std::string& name, const Gtk::TreeModel::Path& path)
 {
-  Gtk::TreeStore::iterator it = layer_tree->append(layer_tree->get_iter(path)->children());
+  Gtk::TreeStore::iterator it;
 
+  if (path.empty())
+    it = layer_tree->append();
+  else
+    it = layer_tree->append(layer_tree->get_iter(path)->children());
+
   (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[ObjectTreeColumns::instance().name]      = name;
   (*it)[ObjectTreeColumns::instance().visible]   = true; 
@@ -99,6 +104,27 @@
   layer_tree->foreach_iter(sigc::mem_fun(func, &GetLayersFunctor::get_layers));
   return lst;
 }
+
+HardLayerHandle
+SectorModel::get_layer(const Gtk::TreeModel::Path& path) const
+{
+  if (!path.empty())
+    {
+      Gtk::TreeModel::iterator it = layer_tree->get_iter(path);
+      if (it)
+        {
+          return (*it)[ObjectTreeColumns::instance().layer];
+        }
+      else
+        {
+          return HardLayerHandle();
+        }
+    }
+  else
+    {
+      return HardLayerHandle();
+    }
+}
 
 void
 SectorModel::remove(const ObjectModelHandle& object)
@@ -226,8 +252,55 @@
 }
 
 void
+SectorModel::load_layer(FileReader reader, const Gtk::TreeModel::Row* parent)
+{
+  FileReader objects_reader;
+  FileReader layers_reader;
+
+  std::string name = "New Layer";
+  bool visible = true;;
+  bool locked  = false;
+
+  reader.read("name", name);
+  reader.read("visible", visible);
+  reader.read("locked", locked);
+  reader.read("objects", objects_reader);
+  reader.read("child-layers", layers_reader);
+
+  std::cout << "loading layer: " << reader.get_name() << " " << name << " " << visible << " " << locked << std::endl;
+
+  HardLayerHandle layer = HardLayerHandle(new HardLayer());
+  layer->set_name(name);
+  layer->set_visible(visible);
+  layer->set_locked(locked);
+
+  const std::vector<FileReader>& objects_sections = objects_reader.get_sections();
+  for(std::vector<FileReader>::const_iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
+    {
+      layer->add(ObjectModelFactory::create(*j));
+    }
+
+  // Append the layer to the tree
+  Gtk::TreeStore::iterator it = parent ? layer_tree->append(parent->children()) : it = layer_tree->append();
+
+  (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[ObjectTreeColumns::instance().name]      = name;
+  (*it)[ObjectTreeColumns::instance().visible]   = visible; 
+  (*it)[ObjectTreeColumns::instance().locked]    = locked; 
+  (*it)[ObjectTreeColumns::instance().layer]     = layer;
+  
+  const std::vector<FileReader>& layers_sections = layers_reader.get_sections();
+  for(std::vector<FileReader>::const_iterator j = layers_sections.begin(); j != layers_sections.end(); ++j)
+    {
+      load_layer(*j, &*it);
+    }
+}
+
+void
 SectorModel::load(const std::string& filename)
 {
+  layer_tree->clear();
+
   std::ifstream stream(filename.c_str());
   if (!stream)
     {
@@ -238,28 +311,12 @@
       FileReader reader = FileReader::parse(stream, filename);
       if (reader.get_name() == "windstille-sector")
         {
-          std::vector<FileReader> sections = reader.get_sections();
-          for(std::vector<FileReader>::iterator i = sections.begin(); i != sections.end(); ++i)
+          const std::vector<FileReader>& sections = reader.get_sections();
+          for(std::vector<FileReader>::const_iterator i = sections.begin(); i != sections.end(); ++i)
             {
               if (i->get_name() == "layer")
                 {
-                  FileReader objects_reader;
-                  FileReader layers_reader;
-                  std::string name;
-                  bool visible;
-                  bool locked;
-
-                  i->read("name", name);
-                  i->read("visible", visible);
-                  i->read("visible", locked);
-                  i->read("objects", objects_reader);
-                  i->read("child-layers", layers_reader);
-                  
-                  std::vector<FileReader> objects_sections = objects_reader.get_sections();
-                  for(std::vector<FileReader>::iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
-                    {
-                      //FIXME: add(ObjectModelFactory::create(*j));
-                    }
+                  load_layer(*i, 0);
                 }
             }
         }

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -77,12 +77,13 @@
   void update(float delta);
   void update(float delta, const Gtk::TreeRow& row);
 
-  void add_layer(const std::string& name, const Gtk::TreeModel::Path& path);
+  void add_layer(const std::string& name, const Gtk::TreeModel::Path& path = Gtk::TreeModel::Path());
   void delete_layer(const Gtk::TreeModel::Path& path);
 
   void add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path);
   void remove(const ObjectModelHandle& object);
 
+  HardLayerHandle get_layer(const Gtk::TreeModel::Path& path) const;
   HardLayers get_layers() const;
 
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
@@ -108,6 +109,7 @@
   SnapData snap_object(const Rectf& object, const std::set<ObjectModelHandle>& ignore_objects) const;
 
   void load(const std::string& filename);
+  void load_layer(FileReader filename, const Gtk::TreeModel::Row* parent);
   void write(FileWriter& writer) const;
   void write(FileWriter& writer, const Gtk::TreeRow& row) const;
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -544,6 +544,25 @@
 {
   return selection;
 }
+
+HardLayerHandle
+WindstilleWidget::get_current_layer()
+{
+  Gtk::TreeModel::Path path;
+  Gtk::TreeViewColumn* focus_column;
+  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+
+  return sector_model->get_layer(path);  
+}
+
+Gtk::TreeModel::Path
+WindstilleWidget::get_current_layer_path()
+{
+  Gtk::TreeModel::Path path;
+  Gtk::TreeViewColumn* focus_column;
+  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+  return path;
+}
 
 SectorModel*
 WindstilleWidget::get_sector_model()

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-28 05:12:54 UTC (rev 2790)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-28 15:24:30 UTC (rev 2791)
@@ -23,6 +23,7 @@
 #include <GL/glew.h>
 #include <GL/gl.h>
 
+#include <gtkmm/treemodel.h>
 #include <vector>
 #include <iostream>
 #include <gtkglmm.h>
@@ -37,6 +38,7 @@
 #include "decal_object_model.hpp"
 #include "selection.hpp"
 #include "layers.hpp"
+#include "hard_layer.hpp"
 
 class Tool;
 class ScrollTool;
@@ -127,6 +129,9 @@
   void enable_grid(bool v) { grid_enabled = v; }
   bool get_enable_grid() const { return grid_enabled; }
 
+  HardLayerHandle get_current_layer();
+  Gtk::TreeModel::Path get_current_layer_path();
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Sat Mar 28 16:24:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 16:24:53 +0100
Subject: [Windstille-commit] r2792 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903281524.n2SFOrQ9006741@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 16:24:52 +0100 (Sat, 28 Mar 2009)
New Revision: 2792

Added:
   trunk/windstille/data/sectors/trainstation/mine.wst
Log:
New level

Added: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-28 15:24:30 UTC (rev 2791)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-28 15:24:52 UTC (rev 2792)
@@ -0,0 +1,488 @@
+;; -*- scheme -*-
+(windstille-sector
+  (version 1)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (layer
+  (objects
+    (decal
+      (pos -1595.5 531.125)
+      (parent "")
+      (layer 4)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -2024.01 398.313)
+      (parent "")
+      (layer 4)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1090.81 479.953)
+      (parent "")
+      (layer 4)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -626.089 548.147)
+      (parent "")
+      (layer 7)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos -732.937 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -732.937 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -732.937 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -1244.94 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -1244.93 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -1244.94 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -1756.93 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -1756.93 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -1756.93 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -2268.93 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -2268.93 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -2268.93 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -220.937 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -220.937 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 291.063 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 291.063 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 803.06 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 803.063 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 1315.06 203.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 1315.06 459.25)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -103.75 531.125)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 1073.56 306.875)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -131.875 296.75)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -122.5 332.688)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree1.png")
+      (type 0)
+      )
+    (decal
+      (pos 1075.94 526.438)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 1093.12 340.5)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree2.png")
+      (type 0)
+      )
+    (decal
+      (pos 613.437 582.688)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 750.812 468)
+      (parent "")
+      (layer 8)
+      (path "images/decal/trashcan.png")
+      (type 0)
+      )
+    (decal
+      (pos 211.875 567.062)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos 425.812 460.188)
+      (parent "")
+      (layer 8)
+      (path "images/decal/trashcan.png")
+      (type 0)
+      )
+    (decal
+      (pos 638.516 439.91)
+      (parent "")
+      (layer 1)
+      (path "images/decal/humanreference.png")
+      (type 0)
+      )
+    (decal
+      (pos 549 593)
+      (parent "")
+      (layer 1)
+      (path "images/decal/mine_ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 1347 593)
+      (parent "")
+      (layer 1)
+      (path "images/decal/mine_ground.png")
+      (type 0)
+      )
+    (decal
+      (pos 452.5 531.125)
+      (parent "")
+      (layer 4)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 72.8123 428.586)
+      (parent "")
+      (layer 4)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 957.187 478)
+      (parent "")
+      (layer 4)
+      (path "images/decal/light.png")
+      (type 1)
+      )
+    (decal
+      (pos 803.06 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 291.063 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -220.937 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos 1315.06 -52.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_background.png")
+      (type 0)
+      )
+    (decal
+      (pos -122.5 -180.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree1.png")
+      (type 0)
+      )
+    (decal
+      (pos 1093.12 -171.5)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree2.png")
+      (type 0)
+      )
+    (decal
+      (pos 547.687 44.5625)
+      (parent "")
+      (layer 257)
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos 557.062 161.75)
+      (parent "")
+      (layer 257)
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos 523 227.062)
+      (parent "")
+      (layer 257)
+      (path "images/objects/apartmentlamp_light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1525 227.062)
+      (parent "")
+      (layer 257)
+      (path "images/objects/apartmentlamp_light.png")
+      (type 1)
+      )
+    (decal
+      (pos -1490.94 161.75)
+      (parent "")
+      (layer 257)
+      (path "images/decal/rooflamp_bloom.png")
+      (type 2)
+      )
+    (decal
+      (pos -1500.31 44.5625)
+      (parent "")
+      (layer 257)
+      (path "images/decal/rooflamp.png")
+      (type 0)
+      )
+    (decal
+      (pos -954.877 -171.5)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree2.png")
+      (type 0)
+      )
+    (decal
+      (pos -2170.5 -180.75)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree1.png")
+      (type 0)
+      )
+    (decal
+      (pos -1840.03 590.5)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -450.186 557.297)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -1903.44 466.047)
+      (parent "")
+      (layer 8)
+      (path "images/decal/trashcan.png")
+      (type 0)
+      )
+    (decal
+      (pos -445.623 466.047)
+      (parent "")
+      (layer 8)
+      (path "images/decal/trashcan.png")
+      (type 0)
+      )
+    (decal
+      (pos -974.437 306.875)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -972.057 526.438)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -954.877 340.5)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree2.png")
+      (type 0)
+      )
+    (decal
+      (pos -2149.79 531.125)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2179.87 298.703)
+      (parent "")
+      (layer 512)
+      (path "images/decal/dark.png")
+      (type 0)
+      )
+    (decal
+      (pos -2170.5 332.688)
+      (parent "")
+      (layer 256)
+      (path "images/decal/mine_tree1.png")
+      (type 0)
+      )
+    (decal
+      (pos -249 593)
+      (parent "")
+      (layer 1)
+      (path "images/decal/mine_ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -2297 593)
+      (parent "")
+      (layer 1)
+      (path "images/decal/mine_ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -700.997 593)
+      (parent "")
+      (layer 1)
+      (path "images/decal/mine_ground.png")
+      (type 0)
+      )
+    (decal
+      (pos -1499 593)
+      (parent "")
+      (layer 1)
+      (path "images/decal/mine_ground.png")
+      (type 0)
+      )
+    )
+  ))
+
+;; EOF ;;



From grumbel at mail.berlios.de  Sat Mar 28 16:57:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 16:57:47 +0100
Subject: [Windstille-commit] r2793 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903281557.n2SFvlsr010423@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 16:57:46 +0100 (Sat, 28 Mar 2009)
New Revision: 2793

Modified:
   trunk/windstille/data/sectors/trainstation/mine.wst
Log:
Split mine sector into different layers

Modified: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-28 15:24:52 UTC (rev 2792)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-28 15:57:46 UTC (rev 2793)
@@ -5,484 +5,569 @@
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
   (layer
-  (objects
-    (decal
-      (pos -1595.5 531.125)
-      (parent "")
-      (layer 4)
-      (path "images/decal/light.png")
-      (type 1)
+    (name "Mine")
+    (visible 1)
+    (locked 0)
+    (objects
       )
-    (decal
-      (pos -2024.01 398.313)
-      (parent "")
-      (layer 4)
-      (path "images/decal/light.png")
-      (type 1)
+    (child-layers
+      (layer
+        (name "Ground")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos 549 593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/mine_ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 1347 593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/mine_ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -249 593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/mine_ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -2297 593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/mine_ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -700.997 593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/mine_ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -1499 593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/mine_ground.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Light")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos 72.8123 428.586)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos 957.187 478)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -2024.01 398.313)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -1088.37 457.98)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -1595.5 531.125)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -626.089 548.147)
+            (parent "")
+            (layer 7)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos 452.5 531.125)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -1090.81 479.953)
+            (parent "")
+            (layer 4)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          )
+        (child-layers
+          (layer
+            (name "Lamps")
+            (visible 1)
+            (locked 0)
+            (objects
+              (decal
+                (pos 523 227.062)
+                (parent "")
+                (layer 257)
+                (path "images/objects/apartmentlamp_light.png")
+                (type 1)
+                )
+              (decal
+                (pos -1525 227.062)
+                (parent "")
+                (layer 257)
+                (path "images/objects/apartmentlamp_light.png")
+                (type 1)
+                )
+              (decal
+                (pos -1490.94 161.75)
+                (parent "")
+                (layer 257)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 2)
+                )
+              (decal
+                (pos 552.57 42.1211)
+                (parent "")
+                (layer 257)
+                (path "images/decal/rooflamp.png")
+                (type 0)
+                )
+              (decal
+                (pos 561.945 159.309)
+                (parent "")
+                (layer 257)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 2)
+                )
+              (decal
+                (pos -1495.43 42.1211)
+                (parent "")
+                (layer 257)
+                (path "images/decal/rooflamp.png")
+                (type 0)
+                )
+              )
+            (child-layers
+              )
+            )
+          )
+        )
+      (layer
+        (name "Wood")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos -2170.5 332.688)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree1.png")
+            (type 0)
+            )
+          (decal
+            (pos -954.877 340.5)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree2.png")
+            (type 0)
+            )
+          (decal
+            (pos -122.5 332.688)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree1.png")
+            (type 0)
+            )
+          (decal
+            (pos 1093.12 340.5)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree2.png")
+            (type 0)
+            )
+          (decal
+            (pos -122.5 -180.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree1.png")
+            (type 0)
+            )
+          (decal
+            (pos 1093.12 -171.5)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree2.png")
+            (type 0)
+            )
+          (decal
+            (pos -954.877 -171.5)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree2.png")
+            (type 0)
+            )
+          (decal
+            (pos -2170.5 -180.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_tree1.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Items")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos 750.812 468)
+            (parent "")
+            (layer 8)
+            (path "images/decal/trashcan.png")
+            (type 0)
+            )
+          (decal
+            (pos 425.812 460.188)
+            (parent "")
+            (layer 8)
+            (path "images/decal/trashcan.png")
+            (type 0)
+            )
+          (decal
+            (pos -445.623 466.047)
+            (parent "")
+            (layer 8)
+            (path "images/decal/trashcan.png")
+            (type 0)
+            )
+          (decal
+            (pos -1903.44 466.047)
+            (parent "")
+            (layer 8)
+            (path "images/decal/trashcan.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Player")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos 638.516 439.91)
+            (parent "")
+            (layer 1)
+            (path "images/decal/humanreference.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Shadows")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos -103.75 531.125)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos 1075.94 526.438)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos 613.437 582.688)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos 211.875 567.062)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -450.186 557.297)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -1840.03 590.5)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2149.79 531.125)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2179.87 298.703)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos 1073.56 306.875)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -131.875 296.75)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -974.437 306.875)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -972.057 526.438)
+            (parent "")
+            (layer 512)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Wall")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos 803.06 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 803.063 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 1315.06 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 1315.06 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 803.06 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 1315.06 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -732.937 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -732.937 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -732.937 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -1244.94 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -1244.93 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -1244.94 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -220.937 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -220.937 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 291.063 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 291.063 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos 291.063 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -220.937 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -1756.93 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -1756.93 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -1756.93 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -2268.93 -52.75)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -2268.93 203.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          (decal
+            (pos -2268.93 459.25)
+            (parent "")
+            (layer 256)
+            (path "images/decal/mine_background.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
       )
-    (decal
-      (pos -1090.81 479.953)
-      (parent "")
-      (layer 4)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -626.089 548.147)
-      (parent "")
-      (layer 7)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -732.937 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -732.937 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -732.937 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -1244.94 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -1244.93 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -1244.94 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -1756.93 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -1756.93 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -1756.93 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -2268.93 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -2268.93 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -2268.93 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -220.937 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -220.937 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 291.063 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 291.063 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 803.06 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 803.063 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 1315.06 203.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 1315.06 459.25)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -103.75 531.125)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 1073.56 306.875)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -131.875 296.75)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -122.5 332.688)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree1.png")
-      (type 0)
-      )
-    (decal
-      (pos 1075.94 526.438)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 1093.12 340.5)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree2.png")
-      (type 0)
-      )
-    (decal
-      (pos 613.437 582.688)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 750.812 468)
-      (parent "")
-      (layer 8)
-      (path "images/decal/trashcan.png")
-      (type 0)
-      )
-    (decal
-      (pos 211.875 567.062)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 425.812 460.188)
-      (parent "")
-      (layer 8)
-      (path "images/decal/trashcan.png")
-      (type 0)
-      )
-    (decal
-      (pos 638.516 439.91)
-      (parent "")
-      (layer 1)
-      (path "images/decal/humanreference.png")
-      (type 0)
-      )
-    (decal
-      (pos 549 593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/mine_ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 1347 593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/mine_ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 452.5 531.125)
-      (parent "")
-      (layer 4)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 72.8123 428.586)
-      (parent "")
-      (layer 4)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 957.187 478)
-      (parent "")
-      (layer 4)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 803.06 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 291.063 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -220.937 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos 1315.06 -52.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_background.png")
-      (type 0)
-      )
-    (decal
-      (pos -122.5 -180.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree1.png")
-      (type 0)
-      )
-    (decal
-      (pos 1093.12 -171.5)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree2.png")
-      (type 0)
-      )
-    (decal
-      (pos 547.687 44.5625)
-      (parent "")
-      (layer 257)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos 557.062 161.75)
-      (parent "")
-      (layer 257)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos 523 227.062)
-      (parent "")
-      (layer 257)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos -1525 227.062)
-      (parent "")
-      (layer 257)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos -1490.94 161.75)
-      (parent "")
-      (layer 257)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -1500.31 44.5625)
-      (parent "")
-      (layer 257)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos -954.877 -171.5)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree2.png")
-      (type 0)
-      )
-    (decal
-      (pos -2170.5 -180.75)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree1.png")
-      (type 0)
-      )
-    (decal
-      (pos -1840.03 590.5)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -450.186 557.297)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -1903.44 466.047)
-      (parent "")
-      (layer 8)
-      (path "images/decal/trashcan.png")
-      (type 0)
-      )
-    (decal
-      (pos -445.623 466.047)
-      (parent "")
-      (layer 8)
-      (path "images/decal/trashcan.png")
-      (type 0)
-      )
-    (decal
-      (pos -974.437 306.875)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -972.057 526.438)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -954.877 340.5)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree2.png")
-      (type 0)
-      )
-    (decal
-      (pos -2149.79 531.125)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2179.87 298.703)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2170.5 332.688)
-      (parent "")
-      (layer 256)
-      (path "images/decal/mine_tree1.png")
-      (type 0)
-      )
-    (decal
-      (pos -249 593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/mine_ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -2297 593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/mine_ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -700.997 593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/mine_ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -1499 593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/mine_ground.png")
-      (type 0)
-      )
     )
-  ))
+  )
 
 ;; EOF ;;



From grumbel at mail.berlios.de  Sat Mar 28 18:20:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 18:20:47 +0100
Subject: [Windstille-commit] r2794 - trunk/windstille/src/editor
Message-ID: <200903281720.n2SHKlEc022547@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 18:20:46 +0100 (Sat, 28 Mar 2009)
New Revision: 2794

Modified:
   trunk/windstille/src/editor/sector_model.cpp
Log:
Some error checking

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 15:57:46 UTC (rev 2793)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 17:20:46 UTC (rev 2794)
@@ -71,14 +71,28 @@
 void
 SectorModel::delete_layer(const Gtk::TreeModel::Path& path)
 {
-  layer_tree->erase(layer_tree->get_iter(path));
+  if (path.empty())
+    {
+      std::cout << "SectorModel::delete_layer(): invalid empty path" << std::endl;
+    }
+  else
+    {
+      layer_tree->erase(layer_tree->get_iter(path));
+    }
 }
 
 void
 SectorModel::add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path)
 {
-  Gtk::TreeStore::iterator it = layer_tree->get_iter(path);
-  ((HardLayerHandle)(*it)[ObjectTreeColumns::instance().layer])->add(object);
+  if (path.empty())
+    {
+      std::cout << "SectorModel::add(): invalid empty path" << std::endl;
+    }
+  else
+    { 
+      Gtk::TreeStore::iterator it = layer_tree->get_iter(path);
+      ((HardLayerHandle)(*it)[ObjectTreeColumns::instance().layer])->add(object);
+    }
 }
 
 struct GetLayersFunctor



From grumbel at mail.berlios.de  Sat Mar 28 18:21:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 18:21:50 +0100
Subject: [Windstille-commit] r2795 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903281721.n2SHLoYk022633@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 18:21:49 +0100 (Sat, 28 Mar 2009)
New Revision: 2795

Modified:
   trunk/windstille/data/sectors/trainstation/trainstation.wst
Log:
Split trainstation into layers

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-28 17:20:46 UTC (rev 2794)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-28 17:21:49 UTC (rev 2795)
@@ -5,1821 +5,1971 @@
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
   (layer
-  (objects
-    (decal
-      (pos 1562.96 829.374)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
+    (name "Trainstation")
+    (visible 0)
+    (locked 0)
+    (objects
       )
-    (decal
-      (pos 1630.08 1070.32)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
+    (child-layers
+      (layer
+        (name "Daylight")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos -602.767 343.23)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -1091.77 303.729)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos -955.723 332.573)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 2)
+            )
+          (decal
+            (pos -1726.45 358.897)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -1433.95 273.652)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos -1348.02 358.027)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos -1604.64 321.266)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Lights")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos 1630.08 1070.32)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos 983.756 904.953)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos 315.072 868.593)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -1636 909.933)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -810.844 849.183)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos 1559.83 804.374)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -259.112 903.761)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -477.046 760.753)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -1553.29 729.292)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          (decal
+            (pos -1169.49 799.75)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Shadow")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos -2249.87 1060.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2244.5 972.452)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2151.95 1070.86)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2223.31 378.014)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2222.56 441.264)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2231.18 652.952)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2231.93 589.702)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2223.79 825.967)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2016.48 1029.67)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2047.33 560.924)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2080.6 782.737)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Roof")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos -132.297 329.766)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos 378.703 329.766)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos 1400.7 331.719)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos 889.703 331.719)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos 2422.7 331.719)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos 1911.7 331.719)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos -1652.53 298.683)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos -771.438 410.719)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof.png")
+            (type 0)
+            )
+          (decal
+            (pos -1141.53 298.683)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos -2163.53 298.683)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          (decal
+            (pos -2674.53 298.683)
+            (parent "")
+            (layer 1)
+            (path "images/decal/roof2.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Lamps")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos 266.7 554.465)
+            (parent "")
+            (layer 1)
+            (path "images/objects/apartmentlamp_light.png")
+            (type 1)
+            )
+          (decal
+            (pos 999.122 579.855)
+            (parent "")
+            (layer 1)
+            (path "images/objects/apartmentlamp_light.png")
+            (type 1)
+            )
+          (decal
+            (pos 1651.47 577.902)
+            (parent "")
+            (layer 1)
+            (path "images/objects/apartmentlamp_light.png")
+            (type 1)
+            )
+          (decal
+            (pos 1660.56 541.188)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos 998.057 533.375)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos 237.12 549)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos 1642.66 434.301)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp.png")
+            (type 0)
+            )
+          (decal
+            (pos 982.958 428.895)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp.png")
+            (type 0)
+            )
+          (decal
+            (pos 231.267 426.715)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Decor Items")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos 27.9659 -58.1739)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos 4.9679 -39.2041)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rooflamp_bloom.png")
+            (type 2)
+            )
+          (decal
+            (pos 240.218 886.438)
+            (parent "")
+            (layer 1)
+            (path "images/decal/board.png")
+            (type 0)
+            )
+          (decal
+            (pos 934.407 913.438)
+            (parent "")
+            (layer 1)
+            (path "images/decal/terminal.png")
+            (type 0)
+            )
+          (decal
+            (pos -163.625 985.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0)
+            )
+          (decal
+            (pos 578.562 985.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0)
+            )
+          (decal
+            (pos 1244.19 985.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0)
+            )
+          (decal
+            (pos 1689.49 985.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0)
+            )
+          (decal
+            (pos 2006.69 985.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0)
+            )
+          (decal
+            (pos 424.131 1013.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/plant.png")
+            (type 0)
+            )
+          (decal
+            (pos -1002.18 1013.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/plant.png")
+            (type 0)
+            )
+          (decal
+            (pos -914.086 1013.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/plant.png")
+            (type 0)
+            )
+          (decal
+            (pos -832.618 1013.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/plant.png")
+            (type 0)
+            )
+          (decal
+            (pos 1064.43 1014.67)
+            (parent "")
+            (layer 1)
+            (path "images/objects/plant.png")
+            (type 0)
+            )
+          (decal
+            (pos 676.954 1029.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 612.954 1029.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 648.954 965.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 740.954 1029.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 584.954 965.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 548.954 1029.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 706.554 965.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/box.png")
+            (type 0)
+            )
+          (decal
+            (pos 28.218 973.438)
+            (parent "")
+            (layer 1)
+            (path "images/decal/trashcan.png")
+            (type 0)
+            )
+          (decal
+            (pos 1448.12 973.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/trashcan.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Railground")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos -249.032 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos -761.032 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos -2297.03 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos -1785.03 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos -1273.03 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos 262.968 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos 774.968 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos 1798.97 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos 1286.97 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos 1670.97 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 1926.97 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 1414.97 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 1158.97 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 2214.14 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 1702.14 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 1958.14 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 1446.14 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -121.032 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -377.032 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 646.968 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 902.968 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 390.968 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 134.968 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos 1190.13 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 934.13 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 422.13 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 166.13 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos 678.13 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -89.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -889.032 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -633.032 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -345.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -601.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -1369.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -1881.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -1625.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -1113.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -857.872 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -1145.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -1657.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -1401.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -1913.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -2169.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -3193.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -2937.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -2681.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          (decal
+            (pos -2649.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -2905.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -2809.03 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos -3321.03 1380.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone2.png")
+            (type 0)
+            )
+          (decal
+            (pos -2393.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -2137.87 1187.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/rail.png")
+            (type 0)
+            )
+          (decal
+            (pos -2425.03 1273.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stone.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Endwall")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos -2064.39 936.534)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 441.438)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 313.438)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 953.438)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 825.438)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 569.438)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 697.438)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -2064.39 680.534)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -2067.21 424.534)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -1681.93 1081.44)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor_left.png")
+            (type 0)
+            )
+          (decal
+            (pos -1825.93 427.684)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -1824.37 683.684)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -1824.37 939.684)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -2075.18 1183.66)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          (decal
+            (pos -1822.42 1185.61)
+            (parent "")
+            (layer 1)
+            (path "images/noise.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Ground")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos 1836.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 2144.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -1551.87 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -1243.87 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -935.87 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -627.87 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -319.87 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos -11.87 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 296.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 604.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 912.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 1220.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          (decal
+            (pos 1528.13 1103.44)
+            (parent "")
+            (layer 1)
+            (path "images/decal/ground.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Stairs")
+        (visible 0)
+        (locked 0)
+        (objects
+          )
+        (child-layers
+          (layer
+            (name "StairHandle")
+            (visible 0)
+            (locked 0)
+            (objects
+              (decal
+                (pos -616.808 986.023)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -950.104 649.414)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -839.104 726.164)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -729.667 801.852)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -747.308 903.961)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -866.058 819.586)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -1388.1 345.023)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -1275.54 422.554)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -1166.1 497.851)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -1055.1 576.164)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -950.104 649.414)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -994.995 739.086)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -1121.56 643.773)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -1266.12 541.398)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -1399.74 451.523)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -729.667 801.852)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              (decal
+                (pos -616.808 986.023)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -617.104 880.164)
+                (parent "")
+                (layer 1)
+                (path "images/decal/handrail2.png")
+                (type 0)
+                )
+              )
+            (child-layers
+              )
+            )
+          (layer
+            (name "Stairs")
+            (visible 0)
+            (locked 0)
+            (objects
+              (decal
+                (pos -1136.93 991.617)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -908.368 955.628)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1135.37 789.851)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1585.06 933.992)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1360.81 868.503)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1356.49 631.226)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1583.49 700.43)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1583.49 453.94)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              (decal
+                (pos -1196.46 916.438)
+                (parent "")
+                (layer 1)
+                (path "images/decal/door.png")
+                (type 0)
+                )
+              (decal
+                (pos -681.368 1109.43)
+                (parent "")
+                (layer 1)
+                (path "images/decal/stairs.png")
+                (type 0)
+                )
+              )
+            (child-layers
+              )
+            )
+          (layer
+            (name "StairWall")
+            (visible 0)
+            (locked 0)
+            (objects
+              (decal
+                (pos -658.251 306.508)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -658.251 434.508)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -656.688 690.508)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -656.688 562.508)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1424.46 307.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -656.462 935.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/tunnelplate_bottom.png")
+                (type 0)
+                )
+              (decal
+                (pos -656.688 818.508)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -656.688 946.508)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -656.688 1074.51)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1424.46 563.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1424.46 691.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1424.46 435.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1424.46 819.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1168.46 819.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1168.46 435.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1168.46 691.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1168.46 563.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -1168.46 307.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -912.462 307.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -912.462 563.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -912.462 691.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -912.462 435.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              (decal
+                (pos -912.462 819.117)
+                (parent "")
+                (layer 1)
+                (path "images/decal/wallplate.png")
+                (type 0)
+                )
+              )
+            (child-layers
+              )
+            )
+          )
+        )
+      (layer
+        (name "WallShadow")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos -498.687 804.29)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -418.187 492.016)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Tunnel Wall")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos 1790.43 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 2046.43 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 1278.43 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 1534.43 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 1022.43 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 2165.35 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 2101.35 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 2037.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1781.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1845.35 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 1909.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1397.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1333.35 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 1269.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1525.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1589.35 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 1653.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 629.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 565.354 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 501.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 245.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 309.354 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 373.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 885.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 821.354 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 757.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1013.35 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 1077.35 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 1141.34 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos -394.638 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos -138.648 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos -202.646 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -266.648 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos -10.6475 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 53.3544 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos 117.352 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos 766.427 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 510.427 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos 254.427 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos -458.636 464.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -522.638 656.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_small.png")
+            (type 0)
+            )
+          (decal
+            (pos -1.57263 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos -257.573 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          (decal
+            (pos -513.573 900.717)
+            (parent "")
+            (layer 1)
+            (path "images/decal/tunnelplate_bottom.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
+        (name "Steelwall")
+        (visible 0)
+        (locked 0)
+        (objects
+          (decal
+            (pos -3689.93 712.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -3886.44 968.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -3516.44 968.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -4059.93 712.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -4256.44 968.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -4253.74 456.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -3513.74 456.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -3883.74 456.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -4429.93 712.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -3319.93 712.902)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
       )
-    (decal
-      (pos -259.112 903.761)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -1060.64 577.839)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -2115.12 1225.16)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -2120.61 981.188)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 520.367)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 392.367)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -602.767 343.23)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -1091.77 303.729)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -1072.91 403.374)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 2)
-      )
-    (decal
-      (pos -1553.29 729.292)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -1210.12 845.062)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -475.483 759.19)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 2219.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 2094.53 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 2091.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1835.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1838.54 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1963.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1451.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1326.54 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1323.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1579.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1582.54 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1707.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 683.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 558.531 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 555.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 299.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 302.531 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 427.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 939.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 814.531 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 811.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1067.08 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 1070.53 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1195.07 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -852.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -977.465 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -980.925 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -340.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -465.469 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -468.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -724.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -721.469 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -596.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -84.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -209.469 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -212.922 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 43.0781 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos 46.5312 482.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 171.078 674.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_small.png")
-      (type 0)
-      )
-    (decal
-      (pos -916.925 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos -660.925 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos -148.925 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos -404.925 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 619.075 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 875.075 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 363.075 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 107.075 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 1899.07 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 2155.07 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 1387.07 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 1643.07 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 1131.07 918.539)
-      (parent "")
-      (layer 1)
-      (path "images/decal/tunnelplate_bottom.png")
-      (type 0)
-      )
-    (decal
-      (pos 980.65 428.895)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos -189.618 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -445.618 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 578.382 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 834.382 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 322.382 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 66.382 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 1602.39 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 1858.39 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 1346.39 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 1090.39 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos 1858.39 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 1346.39 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 1602.39 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 834.382 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 578.382 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 1090.39 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 66.382 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -189.618 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 322.382 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -445.618 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos 194.382 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos 706.382 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos 1730.39 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos 1218.39 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos -317.618 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos -687.714 368.055)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -661.151 417.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -917.151 417.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -917.151 289.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -917.151 673.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -917.151 545.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -442.601 533.52)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -523.101 831.145)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -661.151 673.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -661.151 545.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1173.15 545.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1173.15 673.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1429.15 545.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1429.15 673.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1429.15 289.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1429.15 417.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1173.15 417.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1171.2 289.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1173.15 801.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1429.15 801.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1368.62 854.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -1365.87 618.726)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -1592.87 918.367)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -1592.87 687.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -1695.53 1074.91)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -1863.92 1227.11)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -661.151 929.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -661.151 1057.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -917.151 801.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -661.151 801.93)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -886.121 964.121)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 240.218 886.438)
-      (parent "")
-      (layer 1)
-      (path "images/decal/board.png")
-      (type 0)
-      )
-    (decal
-      (pos 889.175 913.438)
-      (parent "")
-      (layer 1)
-      (path "images/decal/terminal.png")
-      (type 0)
-      )
-    (decal
-      (pos 11.4759 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -296.524 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 935.125 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 1243.12 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 627.476 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 319.476 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 1551.12 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 2166.77 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 1858.77 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos 228.959 426.715)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos 1640.35 434.301)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos -1392.79 326.273)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1281.79 406.929)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1170.79 482.226)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1059.79 558.976)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -954.791 632.226)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -843.791 708.976)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -958.746 821.184)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -714.184 1017.31)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -914.618 938.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -687.618 1093.8)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -734.354 784.664)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -621.496 968.836)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1141.62 974.43)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -621.791 862.976)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail2.png")
-      (type 0)
-      )
-    (decal
-      (pos -957.618 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -701.618 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -701.618 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -957.618 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -826.493 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos -912.173 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -604.524 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -1530.61 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -1220.17 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -1549.55 1103.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/ground.png")
-      (type 0)
-      )
-    (decal
-      (pos -2365.62 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1853.62 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1341.62 1380.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1725.62 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -2237.62 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1981.62 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1469.62 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1213.62 1187.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1213.62 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -1725.62 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -1469.62 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -1981.62 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -2237.62 1273.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stone.png")
-      (type 0)
-      )
-    (decal
-      (pos -1141.62 774.226)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -1202.71 916.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/door.png")
-      (type 0)
-      )
-    (decal
-      (pos -1592.87 441.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stairs.png")
-      (type 0)
-      )
-    (decal
-      (pos -1726.45 358.897)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -751.996 886.773)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -999.683 721.898)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -870.746 802.398)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1126.25 626.586)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1270.81 524.211)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -1404.43 434.336)
-      (parent "")
-      (layer 1)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -810.5 422.438)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof.png")
-      (type 0)
-      )
-    (decal
-      (pos -165.5 335.625)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos 345.5 335.625)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos 1367.5 335.625)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos 856.5 335.625)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos 2389.5 335.625)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos 1878.5 335.625)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos 234.812 549)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos 995.749 533.375)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos 1658.25 541.188)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -1433.95 273.652)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -1348.02 358.027)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -1604.64 321.266)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos 889.5 909.938)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos 889.5 825.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -163.625 985.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/bench.png")
-      (type 0)
-      )
-    (decal
-      (pos 578.562 985.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/bench.png")
-      (type 0)
-      )
-    (decal
-      (pos 1244.19 985.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/bench.png")
-      (type 0)
-      )
-    (decal
-      (pos 1689.49 985.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/bench.png")
-      (type 0)
-      )
-    (decal
-      (pos 2006.69 985.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/bench.png")
-      (type 0)
-      )
-    (decal
-      (pos 983.756 904.953)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 315.072 868.593)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 424.131 1013.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/plant.png")
-      (type 0)
-      )
-    (decal
-      (pos -1002.18 1013.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/plant.png")
-      (type 0)
-      )
-    (decal
-      (pos -914.086 1013.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/plant.png")
-      (type 0)
-      )
-    (decal
-      (pos -832.618 1013.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/plant.png")
-      (type 0)
-      )
-    (decal
-      (pos 1064.43 1014.67)
-      (parent "")
-      (layer 1)
-      (path "images/objects/plant.png")
-      (type 0)
-      )
-    (decal
-      (pos -1181.83 303.2)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 997.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 869.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 648.367)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 776.367)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -2120.61 725.188)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -2123.43 469.188)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -1721.87 1081.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/elevatordoor_left.png")
-      (type 0)
-      )
-    (decal
-      (pos -1652.53 302.712)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos -1867.43 469.188)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -1865.87 725.188)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -1865.87 981.188)
-      (parent "")
-      (layer 1)
-      (path "images/noise.png")
-      (type 0)
-      )
-    (decal
-      (pos -2264.59 1063.59)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2259.22 975.602)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2166.67 1074.01)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2173.27 303.706)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos -2658.88 301.753)
-      (parent "")
-      (layer 1)
-      (path "images/decal/roof2.png")
-      (type 0)
-      )
-    (decal
-      (pos -2238.03 381.164)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2237.28 444.414)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2245.9 656.102)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2246.65 592.852)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2238.51 829.117)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2080.67 802.977)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2047.4 581.164)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -2016.55 1049.91)
-      (parent "")
-      (layer 1)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -810.844 849.183)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 676.954 1029.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 612.954 1029.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 648.954 965.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 740.954 1029.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 584.954 965.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 548.954 1029.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 706.554 965.44)
-      (parent "")
-      (layer 1)
-      (path "images/objects/box.png")
-      (type 0)
-      )
-    (decal
-      (pos 996.814 579.855)
-      (parent "")
-      (layer 1)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos 264.392 554.465)
-      (parent "")
-      (layer 1)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos 1649.16 577.902)
-      (parent "")
-      (layer 1)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos -1636 909.933)
-      (parent "")
-      (layer 1)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -3689.93 712.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -3886.44 968.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -3516.44 968.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -4059.93 712.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -4256.44 968.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -4253.74 456.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -3513.74 456.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -3883.74 456.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -4429.93 712.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -3319.93 712.902)
-      (parent "")
-      (layer 1)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 28.218 973.438)
-      (parent "")
-      (layer 1)
-      (path "images/decal/trashcan.png")
-      (type 0)
-      )
-    (decal
-      (pos 1448.12 973.44)
-      (parent "")
-      (layer 1)
-      (path "images/decal/trashcan.png")
-      (type 0)
-      )
     )
-  ))
+  )
 
 ;; EOF ;;



From grumbel at mail.berlios.de  Sat Mar 28 20:03:48 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 20:03:48 +0100
Subject: [Windstille-commit] r2796 - in trunk/windstille/data: images/decal
	sectors/trainstation
Message-ID: <200903281903.n2SJ3msl007244@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 20:03:38 +0100 (Sat, 28 Mar 2009)
New Revision: 2796

Modified:
   trunk/windstille/data/images/decal/train_back.png
   trunk/windstille/data/images/decal/train_front.png
   trunk/windstille/data/images/decal/train_middle.png
   trunk/windstille/data/sectors/trainstation/trainstation.wst
Log:
Some work on trainstation and trains

Modified: trunk/windstille/data/images/decal/train_back.png
===================================================================
(Binary files differ)

Modified: trunk/windstille/data/images/decal/train_front.png
===================================================================
(Binary files differ)

Modified: trunk/windstille/data/images/decal/train_middle.png
===================================================================
(Binary files differ)

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-28 17:21:49 UTC (rev 2795)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-28 19:03:38 UTC (rev 2796)
@@ -6,60 +6,46 @@
   (init-script "init.nut")
   (layer
     (name "Trainstation")
-    (visible 0)
-    (locked 0)
+    (visible 1)
+    (locked 1)
     (objects
       )
     (child-layers
       (layer
         (name "Daylight")
         (visible 1)
-        (locked 0)
+        (locked 1)
         (objects
           (decal
-            (pos -602.767 343.23)
+            (pos -855.442 319.354)
             (parent "")
             (layer 1)
-            (path "images/decal/dark.png")
-            (type 0)
-            )
-          (decal
-            (pos -1091.77 303.729)
-            (parent "")
-            (layer 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2)
             )
           (decal
-            (pos -955.723 332.573)
+            (pos -1297.52 365.776)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
             (type 2)
             )
           (decal
-            (pos -1726.45 358.897)
+            (pos -1402.7 340.058)
             (parent "")
             (layer 1)
-            (path "images/decal/dark.png")
-            (type 0)
-            )
-          (decal
-            (pos -1433.95 273.652)
-            (parent "")
-            (layer 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2)
             )
           (decal
-            (pos -1348.02 358.027)
+            (pos -1099.97 336.543)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2)
             )
           (decal
-            (pos -1604.64 321.266)
+            (pos -1569.48 329.078)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
@@ -71,8 +57,8 @@
         )
       (layer
         (name "Lights")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos 1630.08 1070.32)
@@ -146,12 +132,84 @@
             )
           )
         (child-layers
+          (layer
+            (name "ExtraLight")
+            (visible 1)
+            (locked 0)
+            (objects
+              (decal
+                (pos -402.054 1017.24)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos 161.91 1097.81)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos 914.125 543.869)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos 208.559 631.76)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos -845.605 1035.11)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos -332.91 1098.59)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos -1151.04 1059.27)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos -1663.74 995.791)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              (decal
+                (pos 943.16 1149.08)
+                (parent "")
+                (layer 1)
+                (path "images/decal/light.png")
+                (type 1)
+                )
+              )
+            (child-layers
+              )
+            )
           )
         )
       (layer
         (name "Shadow")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos -2249.87 1060.44)
@@ -236,8 +294,8 @@
         )
       (layer
         (name "Roof")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos -132.297 329.766)
@@ -321,9 +379,74 @@
           )
         )
       (layer
+        (name "Train2")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos -2091.92 941.347)
+            (parent "")
+            (layer 1)
+            (path "images/decal/train_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos -750.047 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 696 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_back.png")
+            (type 0)
+            )
+          (decal
+            (pos -548.875 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 631.125 241.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_back.png")
+            (type 0)
+            )
+          (decal
+            (pos -168.875 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 287.125 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 2.83435 -15.7656)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_door.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
         (name "Lamps")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos 266.7 554.465)
@@ -394,24 +517,10 @@
         )
       (layer
         (name "Decor Items")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
-            (pos 27.9659 -58.1739)
-            (parent "")
-            (layer 1)
-            (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
-          (decal
-            (pos 4.9679 -39.2041)
-            (parent "")
-            (layer 1)
-            (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
-          (decal
             (pos 240.218 886.438)
             (parent "")
             (layer 1)
@@ -564,8 +673,8 @@
         )
       (layer
         (name "Railground")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos -249.032 1380.44)
@@ -944,17 +1053,10 @@
         )
       (layer
         (name "Endwall")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
-            (pos -2064.39 936.534)
-            (parent "")
-            (layer 1)
-            (path "images/noise.png")
-            (type 0)
-            )
-          (decal
             (pos -1681.93 441.438)
             (parent "")
             (layer 1)
@@ -997,69 +1099,230 @@
             (type 0)
             )
           (decal
-            (pos -2064.39 680.534)
+            (pos -1681.93 1081.44)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/objects/elevatordoor_left.png")
             (type 0)
             )
           (decal
-            (pos -2067.21 424.534)
+            (pos -752 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 695.219 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_back.png")
+            (type 0)
+            )
+          (decal
+            (pos 2499.87 939.394)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/decal/train_middle.png")
             (type 0)
             )
           (decal
-            (pos -1681.93 1081.44)
+            (pos -550.828 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 629.172 241.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_back.png")
+            (type 0)
+            )
+          (decal
+            (pos -170.828 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 285.172 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 2.83441 -15.7656)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_door.png")
+            (type 0)
+            )
+          (decal
+            (pos -752 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 695.219 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_back.png")
+            (type 0)
+            )
+          (decal
+            (pos 2499.87 939.394)
             (parent "")
             (layer 1)
-            (path "images/objects/elevatordoor_left.png")
+            (path "images/decal/train_middle.png")
             (type 0)
             )
           (decal
-            (pos -1825.93 427.684)
+            (pos -550.828 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 629.172 241.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_back.png")
+            (type 0)
+            )
+          (decal
+            (pos -170.828 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 285.172 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 2.83441 -15.7656)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_door.png")
+            (type 0)
+            )
+          (decal
+            (pos -1883.06 1017.44)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/decal/steelplate.png")
             (type 0)
             )
           (decal
-            (pos -1824.37 683.684)
+            (pos -2253.06 1017.44)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/decal/steelplate.png")
             (type 0)
             )
           (decal
-            (pos -1824.37 939.684)
+            (pos -2253.06 757.687)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/decal/steelplate.png")
             (type 0)
             )
           (decal
-            (pos -2075.18 1183.66)
+            (pos -1883.06 757.687)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/decal/steelplate.png")
             (type 0)
             )
           (decal
-            (pos -1822.42 1185.61)
+            (pos -2253.06 501.687)
             (parent "")
             (layer 1)
-            (path "images/noise.png")
+            (path "images/decal/steelplate.png")
             (type 0)
             )
+          (decal
+            (pos -1883.06 501.687)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -2251.49 245.687)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -1881.49 245.687)
+            (parent "")
+            (layer 1)
+            (path "images/decal/steelplate.png")
+            (type 0)
+            )
+          (decal
+            (pos -1763.88 1198.81)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2080.29 1241.78)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2400.6 1212.48)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2376.41 267.922)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -2118.6 301.125)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
+          (decal
+            (pos -1854.93 254.25)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)
+            )
           )
         (child-layers
           )
         )
       (layer
         (name "Ground")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos 1836.13 1103.44)
@@ -1158,15 +1421,66 @@
         )
       (layer
         (name "Stairs")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           )
         (child-layers
           (layer
+            (name "Shadow")
+            (visible 1)
+            (locked 1)
+            (objects
+              (decal
+                (pos -1672.24 1055.45)
+                (parent "")
+                (layer 1)
+                (path "images/decal/dark.png")
+                (type 0)
+                )
+              (decal
+                (pos -1743.76 802.297)
+                (parent "")
+                (layer 1)
+                (path "images/decal/dark.png")
+                (type 0)
+                )
+              (decal
+                (pos -1723.47 1039.37)
+                (parent "")
+                (layer 1)
+                (path "images/decal/dark.png")
+                (type 0)
+                )
+              (decal
+                (pos -1744.37 547.859)
+                (parent "")
+                (layer 1)
+                (path "images/decal/dark.png")
+                (type 0)
+                )
+              (decal
+                (pos -1484.44 1141.69)
+                (parent "")
+                (layer 1)
+                (path "images/decal/dark.png")
+                (type 0)
+                )
+              (decal
+                (pos -937.569 1133.87)
+                (parent "")
+                (layer 1)
+                (path "images/decal/dark.png")
+                (type 0)
+                )
+              )
+            (child-layers
+              )
+            )
+          (layer
             (name "StairHandle")
-            (visible 0)
-            (locked 0)
+            (visible 1)
+            (locked 1)
             (objects
               (decal
                 (pos -616.808 986.023)
@@ -1176,119 +1490,126 @@
                 (type 0)
                 )
               (decal
-                (pos -950.104 649.414)
+                (pos -747.308 903.961)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail2.png")
+                (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -839.104 726.164)
+                (pos -866.058 819.586)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail2.png")
+                (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -729.667 801.852)
+                (pos -994.995 739.086)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail2.png")
+                (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -747.308 903.961)
+                (pos -1121.56 643.773)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -866.058 819.586)
+                (pos -1266.12 541.398)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -1388.1 345.023)
+                (pos -1417.24 435.273)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail2.png")
+                (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -1275.54 422.554)
+                (pos -616.808 986.023)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail2.png")
+                (path "images/decal/handrail.png")
                 (type 0)
                 )
               (decal
-                (pos -1166.1 497.851)
+                (pos -1548.99 346.023)
                 (parent "")
                 (layer 1)
+                (path "images/decal/handrail.png")
+                (type 0)
+                )
+              (decal
+                (pos -1513.04 261.304)
+                (parent "")
+                (layer 1)
                 (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -1055.1 576.164)
+                (pos -1401.54 337.804)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -950.104 649.414)
+                (pos -1284.79 418.304)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -994.995 739.086)
+                (pos -1168.6 497.851)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail.png")
+                (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -1121.56 643.773)
+                (pos -1055.1 576.164)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail.png")
+                (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -1266.12 541.398)
+                (pos -951.354 648.164)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail.png")
+                (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -1399.74 451.523)
+                (pos -951.354 648.164)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail.png")
+                (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -729.667 801.852)
+                (pos -840.354 724.914)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -616.808 986.023)
+                (pos -727.167 804.352)
                 (parent "")
                 (layer 1)
-                (path "images/decal/handrail.png")
+                (path "images/decal/handrail2.png")
                 (type 0)
                 )
               (decal
-                (pos -617.104 880.164)
+                (pos -618.354 880.164)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
@@ -1300,8 +1621,8 @@
             )
           (layer
             (name "Stairs")
-            (visible 0)
-            (locked 0)
+            (visible 1)
+            (locked 1)
             (objects
               (decal
                 (pos -1136.93 991.617)
@@ -1379,8 +1700,8 @@
             )
           (layer
             (name "StairWall")
-            (visible 0)
-            (locked 0)
+            (visible 1)
+            (locked 1)
             (objects
               (decal
                 (pos -658.251 306.508)
@@ -1551,8 +1872,8 @@
         )
       (layer
         (name "WallShadow")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos -498.687 804.29)
@@ -1573,9 +1894,74 @@
           )
         )
       (layer
+        (name "Train")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos -752 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 695.219 0)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_back.png")
+            (type 0)
+            )
+          (decal
+            (pos 2499.87 939.394)
+            (parent "")
+            (layer 1)
+            (path "images/decal/train_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos -550.828 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_front.png")
+            (type 0)
+            )
+          (decal
+            (pos 629.172 241.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_back.png")
+            (type 0)
+            )
+          (decal
+            (pos -170.828 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 285.172 240.234)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_engine_middle.png")
+            (type 0)
+            )
+          (decal
+            (pos 2.83441 -15.7656)
+            (parent "DecalObjectModel")
+            (layer 1)
+            (path "images/decal/train_door.png")
+            (type 0)
+            )
+          )
+        (child-layers
+          )
+        )
+      (layer
         (name "Tunnel Wall")
-        (visible 0)
-        (locked 0)
+        (visible 1)
+        (locked 1)
         (objects
           (decal
             (pos 1790.43 900.717)
@@ -1889,85 +2275,6 @@
         (child-layers
           )
         )
-      (layer
-        (name "Steelwall")
-        (visible 0)
-        (locked 0)
-        (objects
-          (decal
-            (pos -3689.93 712.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -3886.44 968.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -3516.44 968.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -4059.93 712.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -4256.44 968.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -4253.74 456.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -3513.74 456.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -3883.74 456.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -4429.93 712.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          (decal
-            (pos -3319.93 712.902)
-            (parent "")
-            (layer 1)
-            (path "images/decal/steelplate.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
       )
     )
   )



From grumbel at mail.berlios.de  Sat Mar 28 20:04:32 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 20:04:32 +0100
Subject: [Windstille-commit] r2797 - in trunk/windstille/src: . editor
Message-ID: <200903281904.n2SJ4Wfu007319@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 20:04:31 +0100 (Sat, 28 Mar 2009)
New Revision: 2797

Added:
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/layer_manager.hpp
Removed:
   trunk/windstille/src/editor/object_tree.cpp
   trunk/windstille/src/editor/object_tree.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Renamed ObjectTree to LayerManager

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/SConscript	2009-03-28 19:04:31 UTC (rev 2797)
@@ -245,7 +245,7 @@
         'editor/object_model.cpp',      
         'editor/object_model_factory.cpp',
         'editor/object_selector.cpp',
-        'editor/object_tree.cpp',
+        'editor/layer_manager.cpp',
         'editor/scroll_tool.cpp',
         'editor/sector_model.cpp',
         'editor/select_tool.cpp',

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -39,7 +39,7 @@
 EditorWindow* EditorWindow::current_ = 0;
 
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
-  : object_tree(*this),
+  : layer_manager(*this),
     minimap_widget(glconfig_),
     glconfig(glconfig_),
     select_tool(new SelectTool()),
@@ -297,7 +297,7 @@
 
   // vpaned.set_size_request(250, -1);
   //object_selector.set_size_request(250, 300);
-  //object_tree.set_size_request(250, 300);
+  //layer_manager.set_size_request(250, 300);
   
   hpaned.pack1(notebook,     Gtk::EXPAND);
   hpaned.pack2(sidebar_vbox, Gtk::SHRINK);
@@ -306,7 +306,7 @@
   sidebar_vbox.pack_start(minimap_widget, Gtk::PACK_SHRINK);
   
   vpaned.pack1(object_selector, Gtk::EXPAND);
-  vpaned.pack2(object_tree,     Gtk::SHRINK);
+  vpaned.pack2(layer_manager,     Gtk::SHRINK);
 
   hpaned.set_position(1000);
   vpaned.set_position(420);
@@ -352,7 +352,7 @@
   wst->show();
   notebook.set_current_page(new_page);
 
-  object_tree.set_model(wst->get_sector_model());
+  layer_manager.set_model(wst->get_sector_model());
   layer_widget->update(wst->get_layer_mask());
 }
 
@@ -438,7 +438,7 @@
       notebook.remove_page(page);
 
       if (!get_windstille_widget())
-        object_tree.set_model(0);
+        layer_manager.set_model(0);
     }
 }
 
@@ -592,7 +592,7 @@
   std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;
   if (WindstilleWidget* wst = get_windstille_widget())
     {
-      object_tree.set_model(wst->get_sector_model());
+      layer_manager.set_model(wst->get_sector_model());
       layer_widget->update(wst->get_layer_mask());
 
       toggle_color_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::COLORMAP);
@@ -606,7 +606,7 @@
     }
   else
     {
-      object_tree.set_model(0);
+      layer_manager.set_model(0);
     }
 }
 
@@ -710,7 +710,7 @@
       std::cout << "Adding layer" << std::endl;
       wst->get_sector_model()->add_layer("New Layer", wst->get_current_layer_path());
 
-      object_tree.get_treeview().expand_all();
+      layer_manager.get_treeview().expand_all();
     }
 }
 

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -31,7 +31,7 @@
 #include "selection.hpp"
 #include "minimap_widget.hpp"
 #include "object_selector.hpp"
-#include "object_tree.hpp"
+#include "layer_manager.hpp"
 
 class Tool;
 class WindstilleWidget;
@@ -56,7 +56,7 @@
   
   Gtk::Notebook  notebook;
   ObjectSelector object_selector;
-  ObjectTree     object_tree;
+  LayerManager     layer_manager;
   MinimapWidget  minimap_widget;
 
   Glib::RefPtr<Gtk::UIManager>   ui_manager;
@@ -133,7 +133,7 @@
 
   Tool* get_current_tool() const;
 
-  ObjectTree& get_object_tree() { return object_tree; }
+  LayerManager& get_layer_manager() { return layer_manager; }
   WindstilleWidget* get_windstille_widget();
   
   void load_file(const std::string& filename);

Copied: trunk/windstille/src/editor/layer_manager.cpp (from rev 2788, trunk/windstille/src/editor/object_tree.cpp)
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-28 04:58:33 UTC (rev 2788)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -0,0 +1,118 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <iostream>
+#include <gtkmm/stock.h>
+#include <gtkmm/toolbar.h>
+#include <gtkmm/treemodel.h>
+#include <gtkmm/treestore.h>
+#include <gtkmm/treemodelcolumn.h>
+
+#include "editor_window.hpp"
+#include "sector_model.hpp"
+#include "layer_manager.hpp"
+
+LayerManager::LayerManager(EditorWindow& editor_)
+  : editor(editor_),
+    label("Layer Manager", Gtk::ALIGN_LEFT)
+{
+  treeview.set_headers_clickable();
+  treeview.set_headers_visible(true);
+  treeview.set_enable_tree_lines();
+  treeview.set_reorderable();
+
+  ui_manager   = Gtk::UIManager::create();
+  action_group = Gtk::ActionGroup::create();
+  
+  action_group->add(Gtk::Action::create("NewLayer", Gtk::Stock::NEW),
+                    sigc::mem_fun(editor, &EditorWindow::on_new_layer));
+  action_group->add(Gtk::Action::create("DeleteLayer", Gtk::Stock::DELETE),
+                    sigc::mem_fun(editor, &EditorWindow::on_delete_layer));
+
+  ui_manager->insert_action_group(action_group);
+
+  ui_manager->add_ui_from_string("<ui>"
+                                 "  <toolbar  name='ToolBar'>"
+                                 "    <toolitem action='NewLayer'/>"
+                                 "    <toolitem action='DeleteLayer'/>"
+                                 "    <separator/>"
+                                 "  </toolbar>"
+                                 "</ui>");
+  
+  Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
+
+  //treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &LayerManager::on_cursor_changed));
+  //treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &LayerManager::on_columns_changed));
+
+  toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
+
+  scrolled.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS);
+  scrolled.add(treeview);
+
+  pack_start(label,   Gtk::PACK_SHRINK);
+  pack_start(toolbar, Gtk::PACK_SHRINK);
+  add(scrolled);
+  //show_all();
+}
+
+LayerManager::~LayerManager()
+{
+}
+
+void
+LayerManager::set_model(SectorModel* model)
+{
+  if (model)
+    {
+      treeview.set_model(model->get_layer_tree());
+
+      // Recreate all the columns, since if we don't do that, we lose
+      // editability for some reason
+      treeview.remove_all_columns();
+      treeview.append_column("Type", LayerManagerColumns::instance().type_icon);
+      treeview.append_column_editable("Name", LayerManagerColumns::instance().name);
+      treeview.append_column_editable("Visible", LayerManagerColumns::instance().visible);
+      treeview.append_column_editable("Locked", LayerManagerColumns::instance().locked);
+
+      treeview.expand_all();
+      treeview.set_cursor(Gtk::TreeModel::Path("0"));
+    }
+  else
+    {
+      treeview.set_model(Glib::RefPtr<Gtk::TreeStore>());
+    }
+}
+
+void
+LayerManager::on_cursor_changed()
+{
+  Gtk::TreeModel::Path path;
+  Gtk::TreeViewColumn* focus_column;
+  treeview.get_cursor(path, focus_column);
+  
+  std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
+}
+
+void
+LayerManager::on_columns_changed()
+{
+  std::cout << "LayerManager::on_columns_changed()" << std::endl;
+  treeview.expand_all();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer_manager.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/editor/layer_manager.hpp (from rev 2783, trunk/windstille/src/editor/object_tree.hpp)
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-27 17:08:40 UTC (rev 2783)
+++ trunk/windstille/src/editor/layer_manager.hpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -0,0 +1,62 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_LAYER_MANAGER_HPP
+#define HEADER_WINDSTILLE_EDITOR_LAYER_MANAGER_HPP
+
+#include <gtkmm/treeview.h>
+#include <gtkmm/scrolledwindow.h>
+#include <gtkmm/label.h>
+#include <gtkmm/box.h>
+#include <gtkmm/uimanager.h>
+#include <gtkmm/treemodel.h>
+#include <gtkmm/actiongroup.h>
+
+class SectorModel;
+class EditorWindow;
+
+class LayerManager : public Gtk::VBox
+{
+private:
+  EditorWindow& editor;
+  Gtk::Label label;
+  Gtk::ScrolledWindow scrolled;
+  Gtk::TreeView treeview;
+
+  Glib::RefPtr<Gtk::UIManager>   ui_manager;
+  Glib::RefPtr<Gtk::ActionGroup> action_group;
+
+public:
+  LayerManager(EditorWindow& editor);
+  virtual ~LayerManager();
+
+  void set_model(SectorModel* model);
+
+  void on_cursor_changed();
+  void on_columns_changed();
+
+  Gtk::TreeView& get_treeview() { return treeview; }
+
+private:
+  LayerManager(const LayerManager&);
+  LayerManager& operator=(const LayerManager&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer_manager.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Deleted: trunk/windstille/src/editor/object_tree.cpp
===================================================================
--- trunk/windstille/src/editor/object_tree.cpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/object_tree.cpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -1,118 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include <iostream>
-#include <gtkmm/stock.h>
-#include <gtkmm/toolbar.h>
-#include <gtkmm/treemodel.h>
-#include <gtkmm/treestore.h>
-#include <gtkmm/treemodelcolumn.h>
-
-#include "editor_window.hpp"
-#include "sector_model.hpp"
-#include "object_tree.hpp"
-
-ObjectTree::ObjectTree(EditorWindow& editor_)
-  : editor(editor_),
-    label("Layer Manager", Gtk::ALIGN_LEFT)
-{
-  treeview.set_headers_clickable();
-  treeview.set_headers_visible(true);
-  treeview.set_enable_tree_lines();
-  treeview.set_reorderable();
-
-  ui_manager   = Gtk::UIManager::create();
-  action_group = Gtk::ActionGroup::create();
-  
-  action_group->add(Gtk::Action::create("NewLayer", Gtk::Stock::NEW),
-                    sigc::mem_fun(editor, &EditorWindow::on_new_layer));
-  action_group->add(Gtk::Action::create("DeleteLayer", Gtk::Stock::DELETE),
-                    sigc::mem_fun(editor, &EditorWindow::on_delete_layer));
-
-  ui_manager->insert_action_group(action_group);
-
-  ui_manager->add_ui_from_string("<ui>"
-                                 "  <toolbar  name='ToolBar'>"
-                                 "    <toolitem action='NewLayer'/>"
-                                 "    <toolitem action='DeleteLayer'/>"
-                                 "    <separator/>"
-                                 "  </toolbar>"
-                                 "</ui>");
-  
-  Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
-
-  //treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_cursor_changed));
-  //treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &ObjectTree::on_columns_changed));
-
-  toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
-
-  scrolled.set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_ALWAYS);
-  scrolled.add(treeview);
-
-  pack_start(label,   Gtk::PACK_SHRINK);
-  pack_start(toolbar, Gtk::PACK_SHRINK);
-  add(scrolled);
-  //show_all();
-}
-
-ObjectTree::~ObjectTree()
-{
-}
-
-void
-ObjectTree::set_model(SectorModel* model)
-{
-  if (model)
-    {
-      treeview.set_model(model->get_layer_tree());
-
-      // Recreate all the columns, since if we don't do that, we lose
-      // editability for some reason
-      treeview.remove_all_columns();
-      treeview.append_column("Type", ObjectTreeColumns::instance().type_icon);
-      treeview.append_column_editable("Name", ObjectTreeColumns::instance().name);
-      treeview.append_column_editable("Visible", ObjectTreeColumns::instance().visible);
-      treeview.append_column_editable("Locked", ObjectTreeColumns::instance().locked);
-
-      treeview.expand_all();
-      treeview.set_cursor(Gtk::TreeModel::Path("0"));
-    }
-  else
-    {
-      treeview.set_model(Glib::RefPtr<Gtk::TreeStore>());
-    }
-}
-
-void
-ObjectTree::on_cursor_changed()
-{
-  Gtk::TreeModel::Path path;
-  Gtk::TreeViewColumn* focus_column;
-  treeview.get_cursor(path, focus_column);
-  
-  std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
-}
-
-void
-ObjectTree::on_columns_changed()
-{
-  std::cout << "ObjectTree::on_columns_changed()" << std::endl;
-  treeview.expand_all();
-}
-
-/* EOF */

Deleted: trunk/windstille/src/editor/object_tree.hpp
===================================================================
--- trunk/windstille/src/editor/object_tree.hpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/object_tree.hpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -1,62 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_TREE_HPP
-#define HEADER_WINDSTILLE_EDITOR_OBJECT_TREE_HPP
-
-#include <gtkmm/treeview.h>
-#include <gtkmm/scrolledwindow.h>
-#include <gtkmm/label.h>
-#include <gtkmm/box.h>
-#include <gtkmm/uimanager.h>
-#include <gtkmm/treemodel.h>
-#include <gtkmm/actiongroup.h>
-
-class SectorModel;
-class EditorWindow;
-
-class ObjectTree : public Gtk::VBox
-{
-private:
-  EditorWindow& editor;
-  Gtk::Label label;
-  Gtk::ScrolledWindow scrolled;
-  Gtk::TreeView treeview;
-
-  Glib::RefPtr<Gtk::UIManager>   ui_manager;
-  Glib::RefPtr<Gtk::ActionGroup> action_group;
-
-public:
-  ObjectTree(EditorWindow& editor);
-  virtual ~ObjectTree();
-
-  void set_model(SectorModel* model);
-
-  void on_cursor_changed();
-  void on_columns_changed();
-
-  Gtk::TreeView& get_treeview() { return treeview; }
-
-private:
-  ObjectTree(const ObjectTree&);
-  ObjectTree& operator=(const ObjectTree&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -30,19 +30,19 @@
 #include "object_model_factory.hpp"
 #include "sector_model.hpp"
 
-ObjectTreeColumns* ObjectTreeColumns::instance_ = 0;
+LayerManagerColumns* LayerManagerColumns::instance_ = 0;
 
 SectorModel::SectorModel()
 {  
-  layer_tree = Gtk::TreeStore::create(ObjectTreeColumns::instance());
+  layer_tree = Gtk::TreeStore::create(LayerManagerColumns::instance());
 
   Gtk::TreeStore::iterator it = layer_tree->append();
 
-  (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*it)[ObjectTreeColumns::instance().name]      = Glib::ustring("Scene");
-  (*it)[ObjectTreeColumns::instance().visible]   = true;
-  (*it)[ObjectTreeColumns::instance().locked]    = false;
-  (*it)[ObjectTreeColumns::instance().layer]     = HardLayerHandle(new HardLayer());
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().name]      = Glib::ustring("Scene");
+  (*it)[LayerManagerColumns::instance().visible]   = true;
+  (*it)[LayerManagerColumns::instance().locked]    = false;
+  (*it)[LayerManagerColumns::instance().layer]     = HardLayerHandle(new HardLayer());
 
   layer_tree->signal_row_changed().connect(sigc::mem_fun(*this, &SectorModel::on_row_changed));
   layer_tree->signal_row_deleted().connect(sigc::mem_fun(*this, &SectorModel::on_row_deleted));
@@ -61,11 +61,11 @@
   else
     it = layer_tree->append(layer_tree->get_iter(path)->children());
 
-  (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*it)[ObjectTreeColumns::instance().name]      = name;
-  (*it)[ObjectTreeColumns::instance().visible]   = true; 
-  (*it)[ObjectTreeColumns::instance().locked]    = false; 
-  (*it)[ObjectTreeColumns::instance().layer]     = HardLayerHandle(new HardLayer());
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().name]      = name;
+  (*it)[LayerManagerColumns::instance().visible]   = true; 
+  (*it)[LayerManagerColumns::instance().locked]    = false; 
+  (*it)[LayerManagerColumns::instance().layer]     = HardLayerHandle(new HardLayer());
 }
 
 void
@@ -91,7 +91,7 @@
   else
     { 
       Gtk::TreeStore::iterator it = layer_tree->get_iter(path);
-      ((HardLayerHandle)(*it)[ObjectTreeColumns::instance().layer])->add(object);
+      ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->add(object);
     }
 }
 
@@ -105,7 +105,7 @@
 
   bool get_layers(const Gtk::TreeModel::iterator& it)
   {
-    objects.push_back((*it)[ObjectTreeColumns::instance().layer]);
+    objects.push_back((*it)[LayerManagerColumns::instance().layer]);
     return false;
   }
 };
@@ -127,7 +127,7 @@
       Gtk::TreeModel::iterator it = layer_tree->get_iter(path);
       if (it)
         {
-          return (*it)[ObjectTreeColumns::instance().layer];
+          return (*it)[LayerManagerColumns::instance().layer];
         }
       else
         {
@@ -297,11 +297,11 @@
   // Append the layer to the tree
   Gtk::TreeStore::iterator it = parent ? layer_tree->append(parent->children()) : it = layer_tree->append();
 
-  (*it)[ObjectTreeColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
-  (*it)[ObjectTreeColumns::instance().name]      = name;
-  (*it)[ObjectTreeColumns::instance().visible]   = visible; 
-  (*it)[ObjectTreeColumns::instance().locked]    = locked; 
-  (*it)[ObjectTreeColumns::instance().layer]     = layer;
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().name]      = name;
+  (*it)[LayerManagerColumns::instance().visible]   = visible; 
+  (*it)[LayerManagerColumns::instance().locked]    = locked; 
+  (*it)[LayerManagerColumns::instance().layer]     = layer;
   
   const std::vector<FileReader>& layers_sections = layers_reader.get_sections();
   for(std::vector<FileReader>::const_iterator j = layers_sections.begin(); j != layers_sections.end(); ++j)
@@ -358,12 +358,12 @@
 SectorModel::write(FileWriter& writer, const Gtk::TreeRow& row) const
 {
   writer.start_section("layer");
-  writer.write("name",    (Glib::ustring)(row[ObjectTreeColumns::instance().name]));
-  writer.write("visible", (bool)row[ObjectTreeColumns::instance().visible]);
-  writer.write("locked",  (bool)row[ObjectTreeColumns::instance().locked]);
+  writer.write("name",    (Glib::ustring)(row[LayerManagerColumns::instance().name]));
+  writer.write("visible", (bool)row[LayerManagerColumns::instance().visible]);
+  writer.write("locked",  (bool)row[LayerManagerColumns::instance().locked]);
 
   writer.start_section("objects");
-  ((HardLayerHandle)row[ObjectTreeColumns::instance().layer])->write(writer);
+  ((HardLayerHandle)row[LayerManagerColumns::instance().layer])->write(writer);
   writer.end_section();
 
   writer.start_section("child-layers");
@@ -388,16 +388,16 @@
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "ObjectTree:on_row_changed" << std::endl;
+  std::cout << "LayerManager:on_row_changed" << std::endl;
   if (iter)
     {
       // Update the Layer object with data from the tree
-      HardLayerHandle layer = (*iter)[ObjectTreeColumns::instance().layer];
+      HardLayerHandle layer = (*iter)[LayerManagerColumns::instance().layer];
       if (layer.get())
         {
-          layer->set_name(((Glib::ustring)(*iter)[ObjectTreeColumns::instance().name]).raw());
-          layer->set_visible((*iter)[ObjectTreeColumns::instance().visible]);
-          layer->set_locked((*iter)[ObjectTreeColumns::instance().locked]);
+          layer->set_name(((Glib::ustring)(*iter)[LayerManagerColumns::instance().name]).raw());
+          layer->set_visible((*iter)[LayerManagerColumns::instance().visible]);
+          layer->set_locked((*iter)[LayerManagerColumns::instance().locked]);
         }
     }
   queue_draw();
@@ -406,26 +406,26 @@
 void
 SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
 {
-  std::cout << "ObjectTree:on_row_deleted" << std::endl;
+  std::cout << "LayerManager:on_row_deleted" << std::endl;
   queue_draw();
 }
 
 void
 SectorModel::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "ObjectTree:on_row_has_child_toggled" << std::endl;
+  std::cout << "LayerManager:on_row_has_child_toggled" << std::endl;
 }
 
 void
 SectorModel::on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "ObjectTree:on_row_inserted" << std::endl;
+  std::cout << "LayerManager:on_row_inserted" << std::endl;
 }
 
 void
 SectorModel::on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order)
 {
-  std::cout << "ObjectTree:on_row_reordered" << std::endl;
+  std::cout << "LayerManager:on_row_reordered" << std::endl;
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -30,19 +30,19 @@
 #include "math/vector2f.hpp"
 
 class SceneContext;
-class ObjectTreeColumns;
+class LayerManagerColumns;
 
-class ObjectTreeColumns : public Gtk::TreeModel::ColumnRecord
+class LayerManagerColumns : public Gtk::TreeModel::ColumnRecord
 {
 private:
-  static ObjectTreeColumns* instance_;
+  static LayerManagerColumns* instance_;
 
 public:
-  static ObjectTreeColumns& instance() {
+  static LayerManagerColumns& instance() {
     if (instance_)
       return *instance_;
     else
-      return *(instance_ = new ObjectTreeColumns());
+      return *(instance_ = new LayerManagerColumns());
   }
 
   Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > type_icon;
@@ -52,7 +52,7 @@
   Gtk::TreeModelColumn<HardLayerHandle>            layer;
 
 private:
-  ObjectTreeColumns() {
+  LayerManagerColumns() {
     add(type_icon); 
     add(name); 
     add(visible); 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 19:03:38 UTC (rev 2796)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 19:04:31 UTC (rev 2797)
@@ -320,7 +320,7 @@
 {
   Gtk::TreeModel::Path path;
   Gtk::TreeViewColumn* focus_column;
-  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
 
   SelectionHandle new_selection = Selection::create();
   for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
@@ -501,7 +501,7 @@
   Gtk::TreeModel::Path path;
   Gtk::TreeViewColumn* focus_column;
 
-  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
 
   sector_model->add(object, path);
 }
@@ -550,7 +550,7 @@
 {
   Gtk::TreeModel::Path path;
   Gtk::TreeViewColumn* focus_column;
-  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
 
   return sector_model->get_layer(path);  
 }
@@ -560,7 +560,7 @@
 {
   Gtk::TreeModel::Path path;
   Gtk::TreeViewColumn* focus_column;
-  EditorWindow::current()->get_object_tree().get_treeview().get_cursor(path, focus_column);
+  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
   return path;
 }
 



From grumbel at mail.berlios.de  Sat Mar 28 20:15:28 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 20:15:28 +0100
Subject: [Windstille-commit] r2798 - in trunk/windstille/src: editor util
Message-ID: <200903281915.n2SJFSHu008378@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 20:15:28 +0100 (Sat, 28 Mar 2009)
New Revision: 2798

Modified:
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/util/file_writer.cpp
Log:
Handle newlines differently so that resulting text file looks more lisp'ish

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 19:04:31 UTC (rev 2797)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-28 19:15:28 UTC (rev 2798)
@@ -351,7 +351,7 @@
   write(writer, *(layer_tree->children().begin()));
 
   writer.end_section();
-  writer.write_raw("\n;; EOF ;;\n");
+  writer.write_raw("\n\n;; EOF ;;\n");
 }
 
 void

Modified: trunk/windstille/src/util/file_writer.cpp
===================================================================
--- trunk/windstille/src/util/file_writer.cpp	2009-03-28 19:04:31 UTC (rev 2797)
+++ trunk/windstille/src/util/file_writer.cpp	2009-03-28 19:15:28 UTC (rev 2798)
@@ -34,6 +34,7 @@
 void
 FileWriter::indent()
 {
+  out << '\n';
   for(int i = 0; i < indent_count; ++i)
     out << "  ";
 }
@@ -49,7 +50,7 @@
 FileWriter::start_section(const std::string& name)
 {
   indent();
-  out << "(" << name << "\n";
+  out << "(" << name;
   indent_count += 1;
   return *this;
 }
@@ -57,8 +58,7 @@
 FileWriter&
 FileWriter::end_section()
 {
-  indent();
-  out << ")\n";
+  out << ")";
   indent_count -= 1;
   return *this;
 }
@@ -67,7 +67,7 @@
 FileWriter::write(const std::string& name, bool value)
 {
   indent();
-  out << "(" << name << " " << value << ")\n";
+  out << "(" << name << " " << value << ")";
   return *this;
 }
 
@@ -75,7 +75,7 @@
 FileWriter::write(const std::string& name, int value)
 {
   indent();
-  out << "(" << name << " " << value << ")\n";
+  out << "(" << name << " " << value << ")";
   return *this;
 }
 
@@ -83,7 +83,7 @@
 FileWriter::write(const std::string& name, float value)
 {
   indent();
-  out << "(" << name << " " << value << ")\n";
+  out << "(" << name << " " << value << ")";
   return *this;
 }
 
@@ -107,7 +107,7 @@
 FileWriter::write(const std::string& name, const char* value)
 {
   indent();
-  out << "(" << name << " \"" << escape_string(value) << "\")\n";
+  out << "(" << name << " \"" << escape_string(value) << "\")";
   return *this;
 }
 
@@ -115,7 +115,7 @@
 FileWriter::write(const std::string& name, const std::string& value)
 {
   indent();
-  out << "(" << name << " \"" << escape_string(value) << "\")\n";
+  out << "(" << name << " \"" << escape_string(value) << "\")";
   return *this;
 }
 
@@ -123,7 +123,7 @@
 FileWriter::write(const std::string& name, const Color& value)
 {
   indent();
-  out << "(" << name << " " << value.r << " " << value.g << " " << value.b << " " << value.a << ")\n";
+  out << "(" << name << " " << value.r << " " << value.g << " " << value.b << " " << value.a << ")";
   return *this;
 }
 
@@ -131,7 +131,7 @@
 FileWriter::write(const std::string& name, const Vector2f& value)
 {
   indent();
-  out << "(" << name << " " << value.x << " " << value.y << ")\n";
+  out << "(" << name << " " << value.x << " " << value.y << ")";
   return *this;
 }
 



From grumbel at mail.berlios.de  Sat Mar 28 21:33:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 21:33:23 +0100
Subject: [Windstille-commit] r2799 - trunk/windstille/src/editor
Message-ID: <200903282033.n2SKXNu8014746@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 21:33:23 +0100 (Sat, 28 Mar 2009)
New Revision: 2799

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Implemented proper Open/Save/SaveAs

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-28 19:15:28 UTC (rev 2798)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-28 20:33:23 UTC (rev 2799)
@@ -18,6 +18,7 @@
 
 #include <fstream>
 #include <iostream>
+#include <glibmm/miscutils.h>
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
 #include <gtkmm/radioaction.h>
@@ -57,9 +58,11 @@
     "    <menu action='MenuFile'>"
     "      <menuitem action='New'/>"
     "      <menuitem action='Open'/>"
+    "      <separator/>"
     "      <menuitem action='Save'/>"
+    "      <menuitem action='SaveAs'/>"
+    "      <separator/>"
     "      <menuitem action='Close'/>"
-    "      <separator/>"
     "      <menuitem action='Quit'/>"
     "    </menu>"
     "    <menu action='MenuEdit'>"
@@ -110,6 +113,7 @@
     "    <toolitem action='New'/>"
     "    <toolitem action='Open'/>"
     "    <toolitem action='Save'/>"
+    "    <toolitem action='SaveAs'/>"
     "    <separator/>"
     "    <toolitem action='Undo'/>"
     "    <toolitem action='Redo'/>"
@@ -163,6 +167,8 @@
                     sigc::mem_fun(*this, &EditorWindow::on_open));
   action_group->add(Gtk::Action::create("Save",        Gtk::Stock::SAVE),
                     sigc::mem_fun(*this, &EditorWindow::on_save));
+  action_group->add(Gtk::Action::create("SaveAs",        Gtk::Stock::SAVE_AS),
+                    sigc::mem_fun(*this, &EditorWindow::on_save_as));
   action_group->add(Gtk::Action::create("Close",       Gtk::Stock::CLOSE),
                     sigc::mem_fun(*this, &EditorWindow::on_close));
   action_group->add(Gtk::Action::create("Quit",        Gtk::Stock::QUIT),
@@ -347,7 +353,7 @@
   // FIXME: We abuse the minimap as our root GLContext
   WindstilleWidget* wst = Gtk::manage(new WindstilleWidget(glconfig, minimap_widget.get_gl_context()));
 
-  Glib::ustring title = Glib::ustring::compose("Sector %1", notebook.get_n_pages());
+  Glib::ustring title = Glib::ustring::compose("Unsaved Sector %1", notebook.get_n_pages()+1);
   int new_page = notebook.append_page(*wst, title);
   wst->show();
   notebook.set_current_page(new_page);
@@ -362,6 +368,8 @@
   on_new();
   WindstilleWidget* wst = get_windstille_widget();
   wst->load_file(filename);
+  wst->set_filename(filename);
+  notebook.set_tab_label_text(*notebook.get_nth_page(notebook.get_current_page()), Glib::path_get_basename(filename));
 }
 
 void
@@ -373,6 +381,7 @@
 
   dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
   dialog.add_button(Gtk::Stock::OPEN,   Gtk::RESPONSE_OK);
+  dialog.set_current_folder("data/sectors/");
 
   switch(dialog.run())
     {
@@ -397,34 +406,70 @@
 void
 EditorWindow::on_save()
 {
-  Gtk::FileChooserDialog dialog("Save File",
-                                Gtk::FILE_CHOOSER_ACTION_SAVE);
-  dialog.set_transient_for(*this);
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      if (wst->get_filename().empty())
+        {
+          on_save_as();
+        }
+      else
+        {
+          std::ofstream out(wst->get_filename().c_str());
+          FileWriter writer(out);
+          wst->get_sector_model()->write(writer);
+        }
+    }
+}
 
-  dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
-  dialog.add_button(Gtk::Stock::SAVE,   Gtk::RESPONSE_OK);
+void
+EditorWindow::on_save_as()
+{
+  int page = notebook.get_current_page();
+  if (page == -1)
+    {
+      // do nothing;
+    }
+  else
+    {
+      Gtk::FileChooserDialog dialog("Save File",
+                                    Gtk::FILE_CHOOSER_ACTION_SAVE);
+      dialog.set_transient_for(*this);
+      
+      dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
+      dialog.add_button(Gtk::Stock::SAVE,   Gtk::RESPONSE_OK);
 
-  switch(dialog.run())
-    {
-      case(Gtk::RESPONSE_OK):
+      WindstilleWidget* wst = static_cast<WindstilleWidget*>(notebook.get_nth_page(page));
+ 
+      if (wst->get_filename().empty())
+        dialog.set_current_folder("data/sectors/");
+      else
+        dialog.set_current_folder(Glib::path_get_dirname(wst->get_filename()));
+
+      switch(dialog.run())
         {
-          std::cout << "Select clicked." << std::endl;
-          std::cout << "Folder selected: " << dialog.get_filename()
-                    << std::endl;
+          case(Gtk::RESPONSE_OK):
+            {
+              std::cout << "Select clicked." << std::endl;
+              std::cout << "Folder selected: " << dialog.get_filename()
+                        << std::endl;
 
-          std::ofstream out(dialog.get_filename().c_str());
-          FileWriter writer(out);
-          if (WindstilleWidget* wst = get_windstille_widget())
-            {
+              std::string filename = dialog.get_filename();
+              std::ofstream out(filename.c_str());
+              FileWriter writer(out);
+
               wst->get_sector_model()->write(writer);
+              wst->set_filename(filename);
+
+              notebook.set_tab_label_text(*notebook.get_nth_page(page), Glib::path_get_basename(filename));
+
+              break;
             }
-          break;
-        }
 
-      case(Gtk::RESPONSE_CANCEL):
-        {
-          std::cout << "Cancel clicked." << std::endl;
-          break;
+          case(Gtk::RESPONSE_CANCEL):
+            {
+              std::cout << "Cancel clicked." << std::endl;
+              break;
+            }
         }
     }
 }

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-28 19:15:28 UTC (rev 2798)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-28 20:33:23 UTC (rev 2799)
@@ -99,6 +99,7 @@
   void on_new();
   void on_open();
   void on_save();
+  void on_save_as();
   void on_close();
 
   bool on_timeout();

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 19:15:28 UTC (rev 2798)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 20:33:23 UTC (rev 2799)
@@ -571,8 +571,9 @@
 }
 
 void
-WindstilleWidget::load_file(const std::string& filename)
+WindstilleWidget::load_file(const std::string& filename_)
 {
+  filename = filename_;
   sector_model->load(filename);
   queue_draw();
 }

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-28 19:15:28 UTC (rev 2798)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-28 20:33:23 UTC (rev 2799)
@@ -51,6 +51,7 @@
     public Gtk::GL::Widget<WindstilleWidget>
 {
 private:
+  std::string filename;
   std::auto_ptr<SectorModel> sector_model;
   std::vector<ControlPointHandle> control_points;
 
@@ -132,6 +133,9 @@
   HardLayerHandle get_current_layer();
   Gtk::TreeModel::Path get_current_layer_path();
 
+  std::string get_filename() const { return filename; }
+  void set_filename(const std::string& filename_) { filename = filename_; }
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Sat Mar 28 22:58:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 28 Mar 2009 22:58:03 +0100
Subject: [Windstille-commit] r2800 - in trunk/windstille: . src/editor
Message-ID: <200903282158.n2SLw3lp020280@sheep.berlios.de>

Author: grumbel
Date: 2009-03-28 22:58:03 +0100 (Sat, 28 Mar 2009)
New Revision: 2800

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
Log:
Implemented recent file handling

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-28 20:33:23 UTC (rev 2799)
+++ trunk/windstille/TODO	2009-03-28 21:58:03 UTC (rev 2800)
@@ -185,10 +185,10 @@
 Miscellaneous
 =============
 
+* make FileReader const
+
 * move particle system into library
 
-* Make FileWriter not place ')' on a new line
-
 * replace lisp::Writer with custom FileWriter (used in config)
 
 * make FileReader work more like lisp::Writer, i.e. less
@@ -501,12 +501,36 @@
 Editor
 ======
 
-* make FileReader const
+* make use of Statusbar
 
+* reevaluate the current parent/child implementation, since its very
+  tricky currently to move a parent without affecting the child, which
+  might be useful in some situation (i.e. hold Ctrl pressed to move
+  only the parent, not the children). Other issues:
+
+  - circular parentship causes universe to explode
+  - cloning doesn't preserve parentship  
+  - parents could be handled like normal objects, but with the
+    SelectTool traversing all children and marking them before the
+    move begings, Ctrl could be used to toggle this behaviour
+  - having classic groups of objects, where clicking one object moves
+    all in the group could be useful (like when each object is parent
+    to each other object in the group)
+  - parent refers to name, but name isn't guranteed unique, so loading/saving breaks
+
+* Layer Manager, new functions:
+
+  - show all
+  - hide all
+  - lock all except current layer
+
 * New Layer System:
 
   - rename HardLayer to Layer and Layers to LayerMask/SelectionMask
 
+  - normal Layers can contain child layers, which seems like a bad
+    idea, better way would have special objectless parent layers
+
 * drawing is broken after loading a level, only get fixed when toggling Light layer
 
 * background pattern goes away when Color pattern is disabled, since
@@ -539,8 +563,6 @@
 
 * do a continous zoom while the zoom-button is pressed (timeout callback)
 
-* add recent files
-
 * ObjectProperty Dialog:
 
   Dialogs must be generic and usable by all Objects, supported type
@@ -567,8 +589,6 @@
   - delete object
   - duplicate object
 
-* add difference between "save" and "save as", along with overwrite warnings
-
 * add second toolbar, first one is getting a little crowded
 
 * disable light layer on default/startup
@@ -595,20 +615,6 @@
    - Sprite
    - Sprite3d / Character
 
-* reevaluate the current parent/child implementation, since its very
-  tricky currently to move a parent without affecting the child, which
-  might be useful in some situation (i.e. hold Ctrl pressed to move
-  only the parent, not the children)
-
-  - circular parentship causes universe to explode
-  - cloning doesn't preserve parentship  
-  - parents could be handled like normal objects, but with the
-    SelectTool traversing all children and marking them before the
-    move begings, Ctrl could be used to toggle this behaviour
-  - having classic groups of objects, where clicking one object moves
-    all in the group could be useful (like when each object is parent
-    to each other object in the group)
-
 * ObjectSelector/IconView allows drag&drop even when nothing is
   selected, leading to a Grumbel dummy image drag&drop without effect
 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-28 20:33:23 UTC (rev 2799)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-28 21:58:03 UTC (rev 2800)
@@ -22,6 +22,8 @@
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
 #include <gtkmm/radioaction.h>
+#include <gtkmm/recentaction.h>
+#include <gtkmm/recentmanager.h>
 #include <gtkmm/uimanager.h>
 #include <gtkmm/toolbar.h>
 #include <gtkmm/stock.h>
@@ -57,7 +59,8 @@
     "  <menubar name='MenuBar'>"
     "    <menu action='MenuFile'>"
     "      <menuitem action='New'/>"
-    "      <menuitem action='Open'/>"
+    //"      <menuitem action='FileOpen'/>"
+    "      <menuitem action='FileRecentFiles'/>"
     "      <separator/>"
     "      <menuitem action='Save'/>"
     "      <menuitem action='SaveAs'/>"
@@ -111,7 +114,8 @@
     ""
     "  <toolbar  name='ToolBar'>"
     "    <toolitem action='New'/>"
-    "    <toolitem action='Open'/>"
+    //"    <toolitem action='FileOpen'/>"
+    "    <toolitem action='FileRecentFiles'/>"
     "    <toolitem action='Save'/>"
     "    <toolitem action='SaveAs'/>"
     "    <separator/>"
@@ -163,7 +167,7 @@
   action_group->add(Gtk::Action::create("MenuFile",    "_File"));
   action_group->add(Gtk::Action::create("New",         Gtk::Stock::NEW),
                     sigc::mem_fun(*this, &EditorWindow::on_new));
-  action_group->add(Gtk::Action::create("Open",        Gtk::Stock::OPEN),
+  action_group->add(Gtk::Action::create("FileOpen",    Gtk::Stock::OPEN),
                     sigc::mem_fun(*this, &EditorWindow::on_open));
   action_group->add(Gtk::Action::create("Save",        Gtk::Stock::SAVE),
                     sigc::mem_fun(*this, &EditorWindow::on_save));
@@ -174,6 +178,20 @@
   action_group->add(Gtk::Action::create("Quit",        Gtk::Stock::QUIT),
                     sigc::mem_fun(*this, &EditorWindow::on_quit));
 
+  {
+    Glib::RefPtr<Gtk::RecentAction> recent_action = Gtk::RecentAction::create("FileRecentFiles", Gtk::Stock::OPEN);
+
+    Gtk::RecentFilter* filter= Gtk::manage(new Gtk::RecentFilter);
+    filter->add_mime_type("application/windstille");
+    //filter->add_application("Windstille Editor");
+    //filter->add_pattern("*.wst");
+    recent_action->set_filter(*filter);
+
+    recent_action->signal_item_activated().connect(sigc::bind(sigc::mem_fun(*this, &EditorWindow::on_recent_file), recent_action));
+    action_group->add(recent_action, 
+                      sigc::mem_fun(*this, &EditorWindow::on_open));
+  }
+
   action_group->add(Gtk::Action::create("MenuEdit",    "_Edit"));
   action_group->add(Gtk::Action::create("Undo",        Gtk::Stock::UNDO));
   action_group->add(Gtk::Action::create("Redo",        Gtk::Stock::REDO));
@@ -365,11 +383,18 @@
 void
 EditorWindow::load_file(const std::string& filename)
 {
-  on_new();
-  WindstilleWidget* wst = get_windstille_widget();
-  wst->load_file(filename);
-  wst->set_filename(filename);
-  notebook.set_tab_label_text(*notebook.get_nth_page(notebook.get_current_page()), Glib::path_get_basename(filename));
+  try 
+    {
+      on_new();
+      WindstilleWidget* wst = get_windstille_widget();
+      wst->load_file(filename);
+      wst->set_filename(filename);
+      notebook.set_tab_label_text(*notebook.get_nth_page(notebook.get_current_page()), Glib::path_get_basename(filename));
+    }
+  catch(std::exception& err)
+    {
+      std::cout << "EditorWindow::load_file: " << err.what() << std::endl;
+    }
 }
 
 void
@@ -391,6 +416,8 @@
           std::cout << "Folder selected: " << dialog.get_filename()
                     << std::endl;
           
+          add_recent_file(dialog.get_filename());
+
           load_file(dialog.get_filename());
           break;
         }
@@ -434,7 +461,8 @@
       Gtk::FileChooserDialog dialog("Save File",
                                     Gtk::FILE_CHOOSER_ACTION_SAVE);
       dialog.set_transient_for(*this);
-      
+      dialog.set_do_overwrite_confirmation(true);
+
       dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
       dialog.add_button(Gtk::Stock::SAVE,   Gtk::RESPONSE_OK);
 
@@ -461,6 +489,7 @@
               wst->set_filename(filename);
 
               notebook.set_tab_label_text(*notebook.get_nth_page(page), Glib::path_get_basename(filename));
+              add_recent_file(filename);
 
               break;
             }
@@ -791,5 +820,29 @@
       wst->set_selection(selection);
     }
 }
+
+void
+EditorWindow::on_recent_file(const Glib::RefPtr<Gtk::RecentAction>& recent_action)
+{
+  Glib::RefPtr<const Gtk::RecentInfo> item = recent_action->get_current_item();
+
+  std::cout << "On Recent File:" << item->get_uri() << std::endl;
+  if (item->exists())
+      load_file(Glib::filename_from_uri(item->get_uri()));
+}
+
+void
+EditorWindow::add_recent_file(const std::string& filename)
+{
+  Gtk::RecentManager::Data data;
+  data.display_name = Glib::path_get_basename(filename);
+  data.app_name     = "Windstille Editor";
+  data.app_exec     = "windstille-editor";
+  data.groups.push_back("Windstille");
+  data.is_private   = false;
+  data.mime_type    = "application/windstille";
+
+  Gtk::RecentManager::get_default()->add_item(Glib::filename_to_uri(filename), data);
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-28 20:33:23 UTC (rev 2799)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-28 21:58:03 UTC (rev 2800)
@@ -26,6 +26,7 @@
 #include <gtkmm/paned.h>
 #include <gtkmm/toggleaction.h>
 #include <gtkmm/window.h>
+#include <gtkmm/recentaction.h>
 #include <gtkmm/notebook.h>
 
 #include "selection.hpp"
@@ -141,6 +142,10 @@
 
   void call_with_windstille_widget(void (WindstilleWidget::*func)());
 
+  void on_recent_file(const Glib::RefPtr<Gtk::RecentAction>& recent_action);
+  
+  void add_recent_file(const std::string& filename);
+  
 private:
   EditorWindow(const EditorWindow&);
   EditorWindow& operator=(const EditorWindow&);



From grumbel at mail.berlios.de  Sun Mar 29 00:32:13 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 00:32:13 +0100
Subject: [Windstille-commit] r2801 - trunk/windstille/src/editor
Message-ID: <200903282332.n2SNWDxm030058@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 00:32:12 +0100 (Sun, 29 Mar 2009)
New Revision: 2801

Modified:
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
Log:
Do not allow parent-loops

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-28 21:58:03 UTC (rev 2800)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-28 23:32:12 UTC (rev 2801)
@@ -56,19 +56,44 @@
     .write("layer", layers.get_mask());
 }
 
+ObjectModelHandle
+ObjectModel::get_parent() const
+{
+  ObjectModelHandle parent = parent_ptr.lock();
+  return parent;
+}
+
 void
 ObjectModel::set_parent(const ObjectModelHandle& parent_)
 {
-  if (ObjectModelHandle parent = parent_ptr.lock())
+  { // Remove the old parent
+    ObjectModelHandle parent = parent_ptr.lock();
+    if (parent)
+      { 
+        rel_pos += parent->get_world_pos();
+        parent_ptr = ObjectModelPtr();
+      }
+  }
+
+  // Check that we don't create a loop to 'this' by parenting
+  ObjectModelHandle pptr = parent_;
+  while(pptr.get())
     {
-      rel_pos += parent->get_world_pos();
+      if (pptr.get() == this)
+        {
+          std::cout << "Error: Trying to create parent loop" << std::endl;
+          parent_ptr = ObjectModelPtr();
+          return;
+        }
+      pptr = pptr->get_parent();
     }
 
+  // Set new parent
   if (parent_.get())
     {
       rel_pos -= parent_->get_world_pos();
     }
-  
+
   parent_ptr = parent_;
 }
 

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-28 21:58:03 UTC (rev 2800)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-28 23:32:12 UTC (rev 2801)
@@ -52,6 +52,8 @@
   virtual ~ObjectModel();
   
   void set_parent(const ObjectModelHandle& parent_);
+  ObjectModelHandle get_parent() const;
+
   std::string get_name() const { return name; }
 
   Vector2f get_world_pos() const;



From grumbel at mail.berlios.de  Sun Mar 29 01:58:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 01:58:58 +0100
Subject: [Windstille-commit] r2802 - in trunk/windstille/src: display editor
Message-ID: <200903290058.n2T0wwvj013053@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 01:58:57 +0100 (Sun, 29 Mar 2009)
New Revision: 2802

Modified:
   trunk/windstille/src/display/texture.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/zoom_tool.cpp
Log:
Cleaned up stdout a bit

Modified: trunk/windstille/src/display/texture.cpp
===================================================================
--- trunk/windstille/src/display/texture.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/display/texture.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -54,8 +54,6 @@
 Texture::Texture(const std::string& filename)
 {
   *this = texture_manager->get(filename);
-
-  std::cout << "Filename: " << filename << " -> " << get_handle() << std::endl;
 }
 
 Texture::Texture(GLenum target, int width, int height, GLint format)

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -59,7 +59,7 @@
     "  <menubar name='MenuBar'>"
     "    <menu action='MenuFile'>"
     "      <menuitem action='New'/>"
-    //"      <menuitem action='FileOpen'/>"
+    "      <menuitem action='FileOpen'/>"
     "      <menuitem action='FileRecentFiles'/>"
     "      <separator/>"
     "      <menuitem action='Save'/>"
@@ -234,8 +234,6 @@
                     sigc::mem_fun(*this, &EditorWindow::on_zoom_out));
   action_group->add(play_action = Gtk::ToggleAction::create("Play", Gtk::Stock::MEDIA_PLAY), 
                     sigc::mem_fun(*this, &EditorWindow::on_play));
-  action_group->add(snap_action = Gtk::ToggleAction::create("Snap", Gtk::Stock::MEDIA_PAUSE),
-                    sigc::mem_fun(*this, &EditorWindow::on_snap));
 
   action_group->add(Gtk::Action::create("MenuHelp",    "_Help"));
   action_group->add(Gtk::Action::create("About",       Gtk::Stock::ABOUT),
@@ -366,7 +364,7 @@
 void
 EditorWindow::on_new()
 {
-  std::cout << "on_new" << std::endl;
+  //std::cout << "on_new" << std::endl;
 
   // FIXME: We abuse the minimap as our root GLContext
   WindstilleWidget* wst = Gtk::manage(new WindstilleWidget(glconfig, minimap_widget.get_gl_context()));
@@ -412,9 +410,9 @@
     {
       case(Gtk::RESPONSE_OK):
         {
-          std::cout << "Select clicked." << std::endl;
-          std::cout << "Folder selected: " << dialog.get_filename()
-                    << std::endl;
+          //std::cout << "Select clicked." << std::endl;
+          //std::cout << "Folder selected: " << dialog.get_filename()
+          //          << std::endl;
           
           add_recent_file(dialog.get_filename());
 
@@ -424,7 +422,7 @@
 
       case(Gtk::RESPONSE_CANCEL):
         {
-          std::cout << "Cancel clicked." << std::endl;
+          //std::cout << "Cancel clicked." << std::endl;
           break;
         }
     }
@@ -477,9 +475,9 @@
         {
           case(Gtk::RESPONSE_OK):
             {
-              std::cout << "Select clicked." << std::endl;
-              std::cout << "Folder selected: " << dialog.get_filename()
-                        << std::endl;
+              //std::cout << "Select clicked." << std::endl;
+              //std::cout << "Folder selected: " << dialog.get_filename()
+              //          << std::endl;
 
               std::string filename = dialog.get_filename();
               std::ofstream out(filename.c_str());
@@ -496,7 +494,7 @@
 
           case(Gtk::RESPONSE_CANCEL):
             {
-              std::cout << "Cancel clicked." << std::endl;
+              //std::cout << "Cancel clicked." << std::endl;
               break;
             }
         }
@@ -556,7 +554,7 @@
 void
 EditorWindow::on_tool_select(Glib::RefPtr<Gtk::RadioAction> action, Tool* tool)
 {
-  std::cout << "on_tool_select()" << action->get_active() << std::endl;
+  //std::cout << "on_tool_select()" << action->get_active() << std::endl;
   if (action->get_active())
     {
       current_tool = tool;
@@ -579,7 +577,7 @@
           sc.set_render_mask(sc.get_render_mask() & (~mask));
         }
 
-      std::cout << "mask: " << sc.get_render_mask() << std::endl;
+      //std::cout << "mask: " << sc.get_render_mask() << std::endl;
       wst->queue_draw();
     }
 }
@@ -663,7 +661,8 @@
 void
 EditorWindow::on_switch_page(GtkNotebookPage* page, guint page_num)
 {
-  std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;
+  //std::cout << "on_switch_page(" << page << ", " << page_num << ")" << std::endl;
+
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       layer_manager.set_model(wst->get_sector_model());
@@ -707,7 +706,7 @@
 void
 EditorWindow::on_layer_toggle(int layer, bool status)
 {
-  std::cout << "EditorWindow::on_layer_toggle(" << layer << ", " << status << ")" << std::endl;
+  //std::cout << "EditorWindow::on_layer_toggle(" << layer << ", " << status << ")" << std::endl;
 
   if (WindstilleWidget* wst = get_windstille_widget())
     {
@@ -721,32 +720,19 @@
 {
   if (play_action->get_active())
     {
-      std::cout << "Play" << std::endl;
+      //std::cout << "Play" << std::endl;
       timeout_connection = Glib::signal_timeout().connect(sigc::mem_fun(*this, &EditorWindow::on_timeout),
                                                           50,
                                                           Glib::PRIORITY_DEFAULT);
     }
   else
     {
-      std::cout << "Stop" << std::endl;
+      //std::cout << "Stop" << std::endl;
       timeout_connection.disconnect();
     }
 }
 
 void
-EditorWindow::on_snap()
-{
-  if (snap_action->get_active())
-    {
-      std::cout << "Snap" << std::endl;
-    }
-  else
-    {
-      std::cout << "Snap Off" << std::endl;
-    }
-}
-
-void
 EditorWindow::on_cut()
 {
   if (WindstilleWidget* wst = get_windstille_widget())
@@ -771,7 +757,7 @@
 {
   if (WindstilleWidget* wst = get_windstille_widget())
     {
-      std::cout << "Deleting layer: " << wst << std::endl;
+      //std::cout << "Deleting layer: " << wst << std::endl;
       wst->get_sector_model()->delete_layer(wst->get_current_layer_path());
     }
 }
@@ -781,7 +767,7 @@
 {
   if (WindstilleWidget* wst = get_windstille_widget())
     {
-      std::cout << "Adding layer" << std::endl;
+      //std::cout << "Adding layer" << std::endl;
       wst->get_sector_model()->add_layer("New Layer", wst->get_current_layer_path());
 
       layer_manager.get_treeview().expand_all();
@@ -826,7 +812,7 @@
 {
   Glib::RefPtr<const Gtk::RecentInfo> item = recent_action->get_current_item();
 
-  std::cout << "On Recent File:" << item->get_uri() << std::endl;
+  //std::cout << "On Recent File:" << item->get_uri() << std::endl;
   if (item->exists())
       load_file(Glib::filename_from_uri(item->get_uri()));
 }

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -105,7 +105,6 @@
 
   bool on_timeout();
   void on_play();
-  void on_snap();
 
   void on_about_clicked();
   void on_quit();

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -105,13 +105,13 @@
   Gtk::TreeViewColumn* focus_column;
   treeview.get_cursor(path, focus_column);
   
-  std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
+  //std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
 }
 
 void
 LayerManager::on_columns_changed()
 {
-  std::cout << "LayerManager::on_columns_changed()" << std::endl;
+  //std::cout << "LayerManager::on_columns_changed()" << std::endl;
   treeview.expand_all();
 }
 

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -115,7 +115,7 @@
                                  Gtk::SelectionData& selection_data, 
                                  guint info, guint time)
 {
-  std::cout << "ObjectSelector: on_drag_data_get" << std::endl;
+  //std::cout << "ObjectSelector: on_drag_data_get" << std::endl;
 
   Gtk::IconView::ArrayHandle_TreePaths selection = iconview.get_selected_items();
 
@@ -126,7 +126,7 @@
       Gtk::ListStore::iterator it = list_store->get_iter(*i);
 
       //if (it)
-      //  std::cout << "on_drag_begin: " << (*it)[ObjectIconColumns::instance().pathname] << std::endl;
+      //std::cout << "on_drag_begin: " << (*it)[ObjectIconColumns::instance().pathname] << std::endl;
 
       selection_data.set("data", (*it)[ObjectIconColumns::instance().pathname]);
     }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -281,7 +281,7 @@
   reader.read("objects", objects_reader);
   reader.read("child-layers", layers_reader);
 
-  std::cout << "loading layer: " << reader.get_name() << " " << name << " " << visible << " " << locked << std::endl;
+  //std::cout << "loading layer: " << reader.get_name() << " " << name << " " << visible << " " << locked << std::endl;
 
   HardLayerHandle layer = HardLayerHandle(new HardLayer());
   layer->set_name(name);
@@ -388,7 +388,8 @@
 void
 SectorModel::on_row_changed(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "LayerManager:on_row_changed" << std::endl;
+  //std::cout << "LayerManager:on_row_changed" << std::endl;
+
   if (iter)
     {
       // Update the Layer object with data from the tree
@@ -406,26 +407,27 @@
 void
 SectorModel::on_row_deleted(const Gtk::TreeModel::Path& path)
 {
-  std::cout << "LayerManager:on_row_deleted" << std::endl;
+  //std::cout << "LayerManager:on_row_deleted" << std::endl;
+  
   queue_draw();
 }
 
 void
 SectorModel::on_row_has_child_toggled(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "LayerManager:on_row_has_child_toggled" << std::endl;
+  //std::cout << "LayerManager:on_row_has_child_toggled" << std::endl;
 }
 
 void
 SectorModel::on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter)
 {
-  std::cout << "LayerManager:on_row_inserted" << std::endl;
+  //std::cout << "LayerManager:on_row_inserted" << std::endl;
 }
 
 void
 SectorModel::on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order)
 {
-  std::cout << "LayerManager:on_row_reordered" << std::endl;
+  //std::cout << "LayerManager:on_row_reordered" << std::endl;
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -93,7 +93,7 @@
 {
   state.set_size(get_width(), get_height());
 
-  std::cout << "WindstilleWidget::on_realize()" << std::endl;
+  //std::cout << "WindstilleWidget::on_realize()" << std::endl;
 
   Gtk::DrawingArea::on_realize();
 
@@ -368,7 +368,7 @@
 WindstilleWidget::mouse_down(GdkEventButton* event)
 {
   grab_focus();
-  std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
+  //std::cout << "Button Press: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //ewer->on_mouse_button_down(Vector2i(event->x, event->y), event->button);
   if (event->button == 1)
     {
@@ -403,7 +403,7 @@
 {
   active_tool = 0;
 
-  std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
+  //std::cout << "Button Release: " << event->x << ", " << event->y << " - " << event->button << std::endl;
   //viewer->on_mouse_button_up(Vector2i(event->x, event->y), event->button);
   if (event->button == 1)
     {
@@ -474,7 +474,7 @@
 bool
 WindstilleWidget::on_drag_drop(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, guint time)
 {
-  std::cout << "WindstilleWidget: on_drag_drop: " << x << ", " << y << ": " << std::endl;
+  //std::cout << "WindstilleWidget: on_drag_drop: " << x << ", " << y << ": " << std::endl;
   return true;
 }
 
@@ -483,8 +483,8 @@
                                         int x, int y, const Gtk::SelectionData& data,
                                         guint info, guint time)
 {
-  std::cout << "WindstilleWidget: on_drag_data_received: "
-            << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
+  //std::cout << "WindstilleWidget: on_drag_data_received: "
+  //          << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
   
   ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
                                                       state.screen_to_world(Vector2f(x, y)),
@@ -509,7 +509,7 @@
 void
 WindstilleWidget::on_drag_finish(const Glib::RefPtr<Gdk::DragContext>& context)
 {
-  std::cout << "WindstilleWidget: on_drag_finish()" << std::endl;
+  //std::cout << "WindstilleWidget: on_drag_finish()" << std::endl;
 }
 
 void

Modified: trunk/windstille/src/editor/zoom_tool.cpp
===================================================================
--- trunk/windstille/src/editor/zoom_tool.cpp	2009-03-28 23:32:12 UTC (rev 2801)
+++ trunk/windstille/src/editor/zoom_tool.cpp	2009-03-29 00:58:57 UTC (rev 2802)
@@ -50,8 +50,7 @@
 bool
 ZoomTool::mouse_up(GdkEventButton* event, WindstilleWidget& wst)
 {
-  // Zoom objects
-  std::cout << "Zoom To: " << rect << std::endl;
+  //std::cout << "Zoom To: " << rect << std::endl;
   rect.normalize();
   wst.get_state().zoom_to(rect);
   rect_valid = false;



From grumbel at mail.berlios.de  Sun Mar 29 05:30:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 05:30:41 +0200
Subject: [Windstille-commit] r2803 - trunk/windstille/src/editor
Message-ID: <200903290330.n2T3UfDA024233@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 05:30:40 +0200 (Sun, 29 Mar 2009)
New Revision: 2803

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Moved some 

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-29 00:58:57 UTC (rev 2802)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-29 03:30:40 UTC (rev 2803)
@@ -388,10 +388,14 @@
       wst->load_file(filename);
       wst->set_filename(filename);
       notebook.set_tab_label_text(*notebook.get_nth_page(notebook.get_current_page()), Glib::path_get_basename(filename));
+
+      print("Loaded: " + filename);
     }
   catch(std::exception& err)
     {
-      std::cout << "EditorWindow::load_file: " << err.what() << std::endl;
+      std::ostringstream str;
+      str << "EditorWindow::load_file: " << err.what();
+      print(str.str());
     }
 }
 
@@ -442,6 +446,7 @@
           std::ofstream out(wst->get_filename().c_str());
           FileWriter writer(out);
           wst->get_sector_model()->write(writer);
+          print("Wrote: " + wst->get_filename());
         }
     }
 }
@@ -488,7 +493,7 @@
 
               notebook.set_tab_label_text(*notebook.get_nth_page(page), Glib::path_get_basename(filename));
               add_recent_file(filename);
-
+              print("Wrote: " + filename);
               break;
             }
 
@@ -830,5 +835,20 @@
 
   Gtk::RecentManager::get_default()->add_item(Glib::filename_to_uri(filename), data);
 }
+
+bool
+EditorWindow::remove_message(guint id)
+{
+  status.remove_message(id);
+  return false;
+}
+
+void
+EditorWindow::print(const std::string& text)
+{
+  guint id = status.push(text);
+  std::cout << "[LOG] " << text << std::endl;
+  Glib::signal_timeout().connect(sigc::bind(sigc::mem_fun(*this, &EditorWindow::remove_message), id), 6000);
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-29 00:58:57 UTC (rev 2802)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-29 03:30:40 UTC (rev 2803)
@@ -144,6 +144,9 @@
   void on_recent_file(const Glib::RefPtr<Gtk::RecentAction>& recent_action);
   
   void add_recent_file(const std::string& filename);
+
+  void print(const std::string& text);
+  bool remove_message(guint id);
   
 private:
   EditorWindow(const EditorWindow&);

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-29 00:58:57 UTC (rev 2802)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-29 03:30:40 UTC (rev 2803)
@@ -18,6 +18,7 @@
 
 #include <iostream>
 
+#include "editor_window.hpp"
 #include "util/file_reader.hpp"
 #include "display/surface_drawing_parameters.hpp"
 #include "display/scene_context.hpp"
@@ -81,7 +82,8 @@
     {
       if (pptr.get() == this)
         {
-          std::cout << "Error: Trying to create parent loop" << std::endl;
+          EditorWindow::current()->print("Error: Trying to create parent loop");
+
           parent_ptr = ObjectModelPtr();
           return;
         }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-29 00:58:57 UTC (rev 2802)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-29 03:30:40 UTC (rev 2803)
@@ -73,7 +73,7 @@
 {
   if (path.empty())
     {
-      std::cout << "SectorModel::delete_layer(): invalid empty path" << std::endl;
+      EditorWindow::current()->print("SectorModel::delete_layer(): invalid empty path");
     }
   else
     {
@@ -86,7 +86,7 @@
 {
   if (path.empty())
     {
-      std::cout << "SectorModel::add(): invalid empty path" << std::endl;
+      EditorWindow::current()->print("SectorModel::add(): invalid empty path");
     }
   else
     { 

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-29 00:58:57 UTC (rev 2802)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-29 03:30:40 UTC (rev 2803)
@@ -17,6 +17,7 @@
 */
 
 #include <iostream>
+#include "editor_window.hpp"
 #include "selection.hpp"
 
 Selection::Selection()
@@ -43,7 +44,7 @@
     }
   else
     {
-      std::cout << "Selection:remove(): object not in selection" << std::endl;
+      EditorWindow::current()->print("Selection:remove(): object not in selection");
     }
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 00:58:57 UTC (rev 2802)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 03:30:40 UTC (rev 2803)
@@ -425,17 +425,17 @@
     {
       case GDK_1:
         map_type = DecalObjectModel::COLORMAP;
-        std::cout << "COLORMAP" << std::endl;
+        EditorWindow::current()->print("COLORMAP");
         break;
 
       case GDK_2:
         map_type = DecalObjectModel::LIGHTMAP;
-        std::cout << "LIGHTMAP" << std::endl;
+        EditorWindow::current()->print("LIGHTMAP");
         break;
 
       case GDK_3:
         map_type = DecalObjectModel::HIGHLIGHTMAP;
-        std::cout << "HIGHLIGHTMAP" << std::endl;
+        EditorWindow::current()->print("HIGHLIGHT");
         break;
 
       case GDK_Left:



From grumbel at mail.berlios.de  Sun Mar 29 07:09:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 07:09:47 +0200
Subject: [Windstille-commit] r2804 - in trunk/windstille: .
	data/images/objects data/images/objects/bar
	data/sectors/trainstation src/editor
Message-ID: <200903290509.n2T59lRw031996@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 07:09:32 +0200 (Sun, 29 Mar 2009)
New Revision: 2804

Added:
   trunk/windstille/data/images/objects/bar/
   trunk/windstille/data/images/objects/bar/door.png
   trunk/windstille/data/images/objects/bar/doubledoor.png
   trunk/windstille/data/images/objects/bar/seat.png
   trunk/windstille/data/images/objects/bar/seat_separator.png
   trunk/windstille/data/images/objects/bar/stool.png
   trunk/windstille/data/images/objects/bar/table.png
   trunk/windstille/data/images/objects/bar/toilet.png
   trunk/windstille/data/images/objects/bar/toilet_door.png
   trunk/windstille/data/images/objects/bed.png
   trunk/windstille/data/images/objects/blueground.png
   trunk/windstille/data/images/objects/blueroof.png
   trunk/windstille/data/images/objects/bluewall.png
   trunk/windstille/data/images/objects/door.png
   trunk/windstille/data/images/objects/locker.png
   trunk/windstille/data/sectors/trainstation/worker.wst
Modified:
   trunk/windstille/TODO
   trunk/windstille/data/images/objects/elevatordoor.png
   trunk/windstille/data/sectors/trainstation/mine.wst
   trunk/windstille/src/editor/editor_window.cpp
Log:
Some new graphics and a new test sector

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-29 03:30:40 UTC (rev 2803)
+++ trunk/windstille/TODO	2009-03-29 05:09:32 UTC (rev 2804)
@@ -185,6 +185,8 @@
 Miscellaneous
 =============
 
+* Display::aspect_size is ugly, turn that into a Display::set_size();
+
 * make FileReader const
 
 * move particle system into library
@@ -502,14 +504,16 @@
 ======
 
 * make use of Statusbar
+  - display mouse coordinates in WorldCo
+  - display what Ctrl/Shift do for the current tool
 
 * reevaluate the current parent/child implementation, since its very
   tricky currently to move a parent without affecting the child, which
   might be useful in some situation (i.e. hold Ctrl pressed to move
   only the parent, not the children). Other issues:
 
-  - circular parentship causes universe to explode
   - cloning doesn't preserve parentship  
+  - loading doesn't preserve parentship
   - parents could be handled like normal objects, but with the
     SelectTool traversing all children and marking them before the
     move begings, Ctrl could be used to toggle this behaviour
@@ -522,7 +526,9 @@
 
   - show all
   - hide all
-  - lock all except current layer
+  - lock all
+  - unlock all
+  - lock all except current layer (IMPORTANT)
 
 * New Layer System:
 
@@ -531,6 +537,10 @@
   - normal Layers can contain child layers, which seems like a bad
     idea, better way would have special objectless parent layers
 
+* add button and keyboard shortcut to mark/unmark all layers in the layermask
+
+* add a way to move object to a different layer
+
 * drawing is broken after loading a level, only get fixed when toggling Light layer
 
 * background pattern goes away when Color pattern is disabled, since
@@ -555,7 +565,9 @@
 * highlight map is problematic, since objects don't cover highlights,
   maybe rendering a stencil mask might help, other alternative would
   be occulsion querys, but they only work for Geforce3 and Up. Have to
-  wait and see how much of a problem that is in practice
+  wait and see how much of a problem that is in practice, ray-casting
+  would be doable as well, but won't work well with 3d sprites or
+  scaling
 
 * add Blender like EmptyObjectModel
 
@@ -577,10 +589,6 @@
   - bool
   - enum
 
-* add button and keyboard shortcut to mark/unmark all layers in the layermask
-
-* add a way to move object to a different layer
-
 * add keyboard shortcut important stuff:
 
   - layer toggle 1,2,3,4,5,...
@@ -591,22 +599,17 @@
 
 * add second toolbar, first one is getting a little crowded
 
-* disable light layer on default/startup
+* lightmap objects are hard to see (not that big an issue with the new
+  layer system)
 
-* lightmap objects are hard to see
-
 * decal needs to be scalable and have vertices moveable, also color
   needs to be adjustable
 
-* make duplicated objects insert near those from which they where cloned
+* make duplicated objects insert near those from which they where
+  cloned (maybe have "Paste" and "Paste On Top")
 
-* WindstilleWidget contains garbage when its first created, it gets
-  however cleaned up in later redraws
-
 * think about Undo/Redo
 
-* Display::aspect_size is ugly, turn that into a Display::set_size();
-
 * implement non-Surface based objects:
 
    - seperate Surface stuff, turn it into a scaleable/rotatable decal quad
@@ -620,14 +623,15 @@
 
 * add a Rect::contains(Rect) call and adjust SelectTool
 
-* save bitmask along with object to allow pixel perfect click
-  selection
+* save a bitmask along with an object to allow pixel perfect click
+  selection, for scaled, rotated or otherwise deformed objects the
+  mouse coordinates need to be transformed into texture space
 
 * add more ways to snapping objects:
 
   - snap to snap-points
-  - snap to integer positions
-  - snap to grid
+  - snap to integer positions (important)
+  - snap to grid (important)
 
 * add a way to draw objects to DrawingContext that only does
   translation, but not rotation and scaling, for use in UIElements,

Added: trunk/windstille/data/images/objects/bar/door.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/door.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/doubledoor.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/doubledoor.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/seat.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/seat.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/seat_separator.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/seat_separator.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/stool.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/stool.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/table.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/table.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/toilet.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/toilet.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bar/toilet_door.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bar/toilet_door.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bed.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bed.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/blueground.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/blueground.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/blueroof.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/blueroof.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/bluewall.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/bluewall.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/objects/door.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/door.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/data/images/objects/elevatordoor.png
===================================================================
(Binary files differ)

Added: trunk/windstille/data/images/objects/locker.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/objects/locker.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-29 03:30:40 UTC (rev 2803)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-29 05:09:32 UTC (rev 2804)
@@ -1,4 +1,5 @@
 ;; -*- scheme -*-
+
 (windstille-sector
   (version 1)
   (name "")
@@ -8,8 +9,7 @@
     (name "Mine")
     (visible 1)
     (locked 0)
-    (objects
-      )
+    (objects)
     (child-layers
       (layer
         (name "Ground")
@@ -21,47 +21,38 @@
             (parent "")
             (layer 1)
             (path "images/decal/mine_ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1347 593)
             (parent "")
             (layer 1)
             (path "images/decal/mine_ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -249 593)
             (parent "")
             (layer 1)
             (path "images/decal/mine_ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2297 593)
             (parent "")
             (layer 1)
             (path "images/decal/mine_ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -700.997 593)
             (parent "")
             (layer 1)
             (path "images/decal/mine_ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1499 593)
             (parent "")
             (layer 1)
             (path "images/decal/mine_ground.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Light")
         (visible 1)
@@ -72,58 +63,49 @@
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos 957.187 478)
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos -2024.01 398.313)
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos -1088.37 457.98)
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos -1595.5 531.125)
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos -626.089 548.147)
             (parent "")
             (layer 7)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos 452.5 531.125)
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
             (pos -1090.81 479.953)
             (parent "")
             (layer 4)
             (path "images/decal/light.png")
-            (type 1)
-            )
-          )
+            (type 1)))
         (child-layers
           (layer
             (name "Lamps")
@@ -135,49 +117,38 @@
                 (parent "")
                 (layer 257)
                 (path "images/objects/apartmentlamp_light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
                 (pos -1525 227.062)
                 (parent "")
                 (layer 257)
                 (path "images/objects/apartmentlamp_light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
                 (pos -1490.94 161.75)
                 (parent "")
                 (layer 257)
                 (path "images/decal/rooflamp_bloom.png")
-                (type 2)
-                )
+                (type 2))
               (decal
                 (pos 552.57 42.1211)
                 (parent "")
                 (layer 257)
                 (path "images/decal/rooflamp.png")
-                (type 0)
-                )
+                (type 0))
               (decal
                 (pos 561.945 159.309)
                 (parent "")
                 (layer 257)
                 (path "images/decal/rooflamp_bloom.png")
-                (type 2)
-                )
+                (type 2))
               (decal
                 (pos -1495.43 42.1211)
                 (parent "")
                 (layer 257)
                 (path "images/decal/rooflamp.png")
-                (type 0)
-                )
-              )
-            (child-layers
-              )
-            )
-          )
-        )
+                (type 0)))
+            (child-layers))))
       (layer
         (name "Wood")
         (visible 1)
@@ -188,61 +159,50 @@
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree1.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -954.877 340.5)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -122.5 332.688)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree1.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1093.12 340.5)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -122.5 -180.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree1.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1093.12 -171.5)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -954.877 -171.5)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2170.5 -180.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_tree1.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Items")
         (visible 1)
@@ -253,33 +213,26 @@
             (parent "")
             (layer 8)
             (path "images/decal/trashcan.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 425.812 460.188)
             (parent "")
             (layer 8)
             (path "images/decal/trashcan.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -445.623 466.047)
             (parent "")
             (layer 8)
             (path "images/decal/trashcan.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1903.44 466.047)
             (parent "")
             (layer 8)
             (path "images/decal/trashcan.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Player")
         (visible 1)
@@ -290,12 +243,8 @@
             (parent "")
             (layer 1)
             (path "images/decal/humanreference.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Shadows")
         (visible 1)
@@ -306,89 +255,74 @@
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1075.94 526.438)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 613.437 582.688)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 211.875 567.062)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -450.186 557.297)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1840.03 590.5)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2149.79 531.125)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2179.87 298.703)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1073.56 306.875)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -131.875 296.75)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -974.437 306.875)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -972.057 526.438)
             (parent "")
             (layer 512)
             (path "images/decal/dark.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Wall")
         (visible 1)
@@ -399,175 +333,145 @@
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 803.063 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1315.06 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1315.06 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 803.06 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 1315.06 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -732.937 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -732.937 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -732.937 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1244.94 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1244.93 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1244.94 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -220.937 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -220.937 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 291.063 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 291.063 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos 291.063 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -220.937 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1756.93 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1756.93 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -1756.93 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2268.93 -52.75)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2268.93 203.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
+            (type 0))
           (decal
             (pos -2268.93 459.25)
             (parent "")
             (layer 256)
             (path "images/decal/mine_background.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
-      )
-    )
-  )
+            (type 0)))
+        (child-layers)))))
 
 ;; EOF ;;

Added: trunk/windstille/data/sectors/trainstation/worker.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/worker.wst	2009-03-29 03:30:40 UTC (rev 2803)
+++ trunk/windstille/data/sectors/trainstation/worker.wst	2009-03-29 05:09:32 UTC (rev 2804)
@@ -0,0 +1,885 @@
+;; -*- scheme -*-
+
+(windstille-sector
+  (version 1)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (layer
+    (name "Scene")
+    (visible 1)
+    (locked 1)
+    (objects
+      (decal
+        (pos 1204.55 268.312)
+        (parent "")
+        (layer 1)
+        (path "images/decal/humanreference.png")
+        (type 0)))
+    (child-layers
+      (layer
+        (name "Light")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos 58.9653 321.293)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos 1347.85 311.818)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos -518.274 304.576)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos 667.297 305.114)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos 45.189 -395.95)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos 653.521 -410.567)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos -535.175 -411.104)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (pos 1334.07 -403.863)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)))
+        (child-layers
+          (layer
+            (name "Highlight")
+            (visible 1)
+            (locked 1)
+            (objects
+              (decal
+                (pos -520.276 3.38026)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos 657.849 1.81776)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos 1321.1 -0.557228)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos 36.7242 -0.55722)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos -499.515 23.7381)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 46.7499 29.8416)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 656.491 10.0661)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 1331.54 20.6863)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 1394.11 -619.545)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 728.826 -616.493)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 109.319 -610.39)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos -436.945 -616.493)
+                (parent "")
+                (layer 1)
+                (path "images/decal/rooflamp_bloom.png")
+                (type 0))
+              (decal
+                (pos 99.2935 -640.789)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos 1383.67 -640.789)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos 720.418 -638.414)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2))
+              (decal
+                (pos -457.706 -636.851)
+                (parent "")
+                (layer 1)
+                (path "images/objects/apartmentlamp_highlight.png")
+                (type 2)))
+            (child-layers))))
+      (layer
+        (name "Ground")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos 1641.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 873.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 1130.5 448.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 361.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 105.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -150.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 617.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 1385.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -101.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 154.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 410.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1178.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 922.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 666.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1690.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1434.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -918.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -662.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -1430.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -1686.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -1942.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -1174.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -406.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -1893.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -1637.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -1381.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -613.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -869.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -1125.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -357.75 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1897.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 2153.5 447.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 1946.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 2202.25 -64.6875)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1915.34 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -388.656 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -644.656 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -900.656 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 1403.34 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 635.344 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos -132.656 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 123.344 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 379.344 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 1147.34 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 891.344 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 1659.34 -192.687)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (pos 2225.09 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1969.09 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -334.905 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -1102.91 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -846.905 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -590.905 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1457.09 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1713.09 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 689.095 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 945.095 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 1201.09 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 433.095 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos 177.095 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (pos -78.9053 -704.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Stairs")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos 1346.67 98.8136)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair2.png")
+            (type 0))
+          (decal
+            (pos 1346.67 258.814)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair1.png")
+            (type 0))
+          (decal
+            (pos 1474.67 386.814)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair1.png")
+            (type 0))
+          (decal
+            (pos 1474.67 226.814)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair2.png")
+            (type 0))
+          (decal
+            (pos 1218.67 -29.1864)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair2.png")
+            (type 0))
+          (decal
+            (pos 1090.67 2.81363)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair1.png")
+            (type 0))
+          (decal
+            (pos 1090.67 -157.186)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair2.png")
+            (type 0))
+          (decal
+            (pos 1218.67 130.814)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair1.png")
+            (type 0))
+          (decal
+            (pos 958.609 -125.186)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair1.png")
+            (type 0))
+          (decal
+            (pos 958.609 -285.186)
+            (parent "")
+            (layer 1)
+            (path "images/decal/stair2.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Locker")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos 337.491 253.75)
+            (parent "")
+            (layer 1)
+            (path "images/objects/locker.png")
+            (type 0))
+          (decal
+            (pos 465.491 253.75)
+            (parent "")
+            (layer 1)
+            (path "images/objects/locker.png")
+            (type 0))
+          (decal
+            (pos 593.491 253.75)
+            (parent "")
+            (layer 1)
+            (path "images/objects/locker.png")
+            (type 0))
+          (decal
+            (pos 721.491 253.75)
+            (parent "")
+            (layer 1)
+            (path "images/objects/locker.png")
+            (type 0))
+          (decal
+            (pos 849.491 253.75)
+            (parent "")
+            (layer 1)
+            (path "images/objects/locker.png")
+            (type 0))
+          (decal
+            (pos -707.071 240.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor.png")
+            (type 0))
+          (decal
+            (pos -708.083 255.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/door.png")
+            (type 0))
+          (decal
+            (pos -326.468 339.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bed.png")
+            (type 0))
+          (decal
+            (pos 72.6572 339.312)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bed.png")
+            (type 0))
+          (decal
+            (pos -177.277 -384.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/door.png")
+            (type 0))
+          (decal
+            (pos -175.578 -399.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor.png")
+            (type 0))
+          (decal
+            (pos 411.525 -399.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor.png")
+            (type 0))
+          (decal
+            (pos 409.826 -384.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/door.png")
+            (type 0))
+          (decal
+            (pos -726.788 -399.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/elevatordoor.png")
+            (type 0))
+          (decal
+            (pos -728.486 -384.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/door.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Shadow")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (pos 1432.09 426.524)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 325.796 355.072)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 870.812 337.75)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 586.047 254.156)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos -224.968 432.364)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 67.5322 426.114)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 1152.54 -13.9169)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 929.427 -188.448)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (pos 1198.26 393.161)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Background")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (pos 346.25 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 730.25 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 1498.25 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 1114.25 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -37.75 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -1573.75 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -421.75 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -805.75 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -1189.75 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 1882.25 191.313)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 1975.29 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -1096.71 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -712.715 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos -328.715 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 55.2852 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 1207.29 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 1591.29 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 823.285 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0))
+          (decal
+            (pos 439.285 -448.688)
+            (parent "")
+            (layer 1)
+            (path "images/objects/bluewall.png")
+            (type 0)))
+        (child-layers)))))
+
+;; EOF ;;

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-29 03:30:40 UTC (rev 2803)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-29 05:09:32 UTC (rev 2804)
@@ -337,6 +337,7 @@
   add(vbox);
 
   fill_object_selector("data/images/decal/");
+  fill_object_selector("data/images/objects/bar/");
   //fill_object_selector("data/images/inventory/");
   //fill_object_selector("data/images/portraits/");
   fill_object_selector("data/images/objects/");



From grumbel at mail.berlios.de  Sun Mar 29 16:51:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 16:51:03 +0200
Subject: [Windstille-commit] r2805 - in trunk/windstille: data/editor
	src/editor
Message-ID: <200903291451.n2TEp3nu003421@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 16:51:02 +0200 (Sun, 29 Mar 2009)
New Revision: 2805

Added:
   trunk/windstille/data/editor/auto_lock.png
   trunk/windstille/data/editor/hide_all.png
   trunk/windstille/data/editor/lock_all.png
   trunk/windstille/data/editor/show_all.png
   trunk/windstille/data/editor/unlock_all.png
Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/select_tool.cpp
Log:
Icons and placeholder for lock/unlock and show/hide buttons in LayerManager

Added: trunk/windstille/data/editor/auto_lock.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/auto_lock.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/hide_all.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/hide_all.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/lock_all.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/lock_all.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/show_all.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/show_all.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/editor/unlock_all.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/unlock_all.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-29 05:09:32 UTC (rev 2804)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-29 14:51:02 UTC (rev 2805)
@@ -814,6 +814,24 @@
 }
 
 void
+EditorWindow::on_show_all(bool v)
+{
+    std::cout << "ShowAll: " << v << std::endl;
+}
+
+void
+EditorWindow::on_lock_all(bool v)
+{
+  std::cout << "LockAll: " << v << std::endl;
+}
+
+void
+EditorWindow::on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock)
+{
+  std::cout << "autoLock: " << auto_lock->get_active() << std::endl;
+}
+
+void
 EditorWindow::on_recent_file(const Glib::RefPtr<Gtk::RecentAction>& recent_action)
 {
   Glib::RefPtr<const Gtk::RecentInfo> item = recent_action->get_current_item();

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-29 05:09:32 UTC (rev 2804)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-29 14:51:02 UTC (rev 2805)
@@ -143,6 +143,10 @@
 
   void on_recent_file(const Glib::RefPtr<Gtk::RecentAction>& recent_action);
   
+  void on_show_all(bool v);
+  void on_lock_all(bool v);
+  void on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock);
+
   void add_recent_file(const std::string& filename);
 
   void print(const std::string& text);

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-29 05:09:32 UTC (rev 2804)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-29 14:51:02 UTC (rev 2805)
@@ -20,7 +20,8 @@
 
 HardLayer::HardLayer()
   : visible(true),
-    locked(false)
+    locked(false),
+    row_ptr(0)
 {
 }
 
@@ -28,6 +29,12 @@
 {
 }
 
+void
+HardLayer::set_row_ptr(Gtk::TreeModel::Row* row_ptr_)
+{
+  row_ptr = row_ptr_;
+}
+
 bool
 HardLayer::has_object(const ObjectModelHandle& object) const
 {

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-29 05:09:32 UTC (rev 2804)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-29 14:51:02 UTC (rev 2805)
@@ -23,6 +23,7 @@
 #include <list>
 #include <set>
 #include <string>
+#include <gtkmm/treemodel.h>
 
 #include "selection.hpp"
 #include "object_model.hpp"
@@ -40,11 +41,15 @@
   bool visible;
   bool locked;
   
+  Gtk::TreeModel::Row* row_ptr;
+
 public:
   typedef Objects::iterator iterator;
 
   HardLayer();
   ~HardLayer();
+  
+  void set_row_ptr(Gtk::TreeModel::Row* row_ptr);
 
   iterator begin() { return objects.begin(); }
   iterator end()   { return objects.end(); }

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-29 05:09:32 UTC (rev 2804)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-29 14:51:02 UTC (rev 2805)
@@ -36,6 +36,7 @@
   treeview.set_enable_tree_lines();
   treeview.set_reorderable();
 
+  // FIXME: Don't create new ones, reuse the EditorWindow ones
   ui_manager   = Gtk::UIManager::create();
   action_group = Gtk::ActionGroup::create();
   
@@ -44,6 +45,20 @@
   action_group->add(Gtk::Action::create("DeleteLayer", Gtk::Stock::DELETE),
                     sigc::mem_fun(editor, &EditorWindow::on_delete_layer));
 
+  action_group->add(Gtk::Action::create_with_icon_name("ShowAll", "show_all", "Show All", "Show All Layer"),
+                    sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_show_all), true));
+  action_group->add(Gtk::Action::create_with_icon_name("HideAll", "hide_all", "Hide All", "Hide All Layer"),
+                    sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_show_all), false));
+  action_group->add(Gtk::Action::create_with_icon_name("LockAll", "lock_all", "Lock All", "Lock All Layer"),
+                    sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_lock_all), true));
+  action_group->add(Gtk::Action::create_with_icon_name("UnlockAll", "unlock_all", "Unlock All", "Unlock All Layer"),
+                    sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_lock_all), false));
+
+  Glib::RefPtr<Gtk::ToggleAction> auto_lock = Gtk::ToggleAction::create_with_icon_name("AutoLock", "auto_lock", "Auto Lock All", "All layers except the current ones are treated as locked");
+  action_group->add(auto_lock,
+                    sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_auto_lock), auto_lock));
+
+
   ui_manager->insert_action_group(action_group);
 
   ui_manager->add_ui_from_string("<ui>"
@@ -51,6 +66,13 @@
                                  "    <toolitem action='NewLayer'/>"
                                  "    <toolitem action='DeleteLayer'/>"
                                  "    <separator/>"
+                                 "    <toolitem action='ShowAll'/>"
+                                 "    <toolitem action='HideAll'/>"
+                                 "    <separator/>"
+                                 "    <toolitem action='LockAll'/>"
+                                 "    <toolitem action='UnlockAll'/>"
+                                 "    <separator/>"
+                                 "    <toolitem action='AutoLock'/>"
                                  "  </toolbar>"
                                  "</ui>");
   

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-29 05:09:32 UTC (rev 2804)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-29 14:51:02 UTC (rev 2805)
@@ -87,14 +87,11 @@
   if (!wst.get_draw_only_active_layer())
     {
       // ignore all objects not on the current active layer
-#if 0
-      // FIXME: Code broke due to hard layer
-      for(SectorModel::iterator i = wst.get_sector_model()->begin(); i != wst.get_sector_model()->end(); ++i)
-        {
+      for(HardLayer::iterator i = wst.get_current_layer()->begin(); i != wst.get_current_layer()->end(); ++i)
+        { // FIXME: Should iterate over all objects, not just objects in the current layer
           if (!wst.get_layer_mask().match((*i)->get_layers()))
             ignore_objects.insert(*i);
         }
-#endif
     }
 
   SnapData best_snap;



From grumbel at mail.berlios.de  Sun Mar 29 18:59:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 18:59:26 +0200
Subject: [Windstille-commit] r2806 - trunk/windstille/src/editor
Message-ID: <200903291659.n2TGxQDC016125@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 18:59:24 +0200 (Sun, 29 Mar 2009)
New Revision: 2806

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
Implemented Show/HideAll and Lock/UnlockAll

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-29 14:51:02 UTC (rev 2805)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-29 16:59:24 UTC (rev 2806)
@@ -18,6 +18,7 @@
 
 #include <fstream>
 #include <iostream>
+#include <gdkmm/pixbuf.h>
 #include <glibmm/miscutils.h>
 #include <gtkmm/filechooserdialog.h>
 #include <gtkmm/actiongroup.h>
@@ -816,13 +817,21 @@
 void
 EditorWindow::on_show_all(bool v)
 {
-    std::cout << "ShowAll: " << v << std::endl;
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->get_sector_model()->set_all_visible(v);
+      wst->queue_draw();
+    }
 }
 
 void
 EditorWindow::on_lock_all(bool v)
 {
-  std::cout << "LockAll: " << v << std::endl;
+  if (WindstilleWidget* wst = get_windstille_widget())
+    {
+      wst->get_sector_model()->set_all_locked(v);
+      wst->queue_draw();
+    }
 }
 
 void

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-29 14:51:02 UTC (rev 2805)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-29 16:59:24 UTC (rev 2806)
@@ -16,12 +16,12 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include "sector_model.hpp"
 #include "hard_layer.hpp"
 
 HardLayer::HardLayer()
   : visible(true),
-    locked(false),
-    row_ptr(0)
+    locked(false)
 {
 }
 
@@ -29,12 +29,6 @@
 {
 }
 
-void
-HardLayer::set_row_ptr(Gtk::TreeModel::Row* row_ptr_)
-{
-  row_ptr = row_ptr_;
-}
-
 bool
 HardLayer::has_object(const ObjectModelHandle& object) const
 {
@@ -64,6 +58,14 @@
 }
 
 void
+HardLayer::update(const Gtk::TreeModel::Row& row)
+{
+  name    = ((Glib::ustring)row[LayerManagerColumns::instance().name]).raw();
+  visible = row[LayerManagerColumns::instance().visible];
+  locked  = row[LayerManagerColumns::instance().locked];
+}
+
+void
 HardLayer::update(float delta)
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-29 14:51:02 UTC (rev 2805)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-29 16:59:24 UTC (rev 2806)
@@ -40,9 +40,7 @@
   std::string name;
   bool visible;
   bool locked;
-  
-  Gtk::TreeModel::Row* row_ptr;
-
+    
 public:
   typedef Objects::iterator iterator;
 
@@ -60,8 +58,9 @@
   bool is_visible() const { return visible; }
   bool is_locked() const { return locked; }
 
-  void set_visible(bool v) { visible = v; }
-  void set_locked(bool v) { locked = v; }
+  // These must not be used, since they don't update the Gtk::TreeModel::Row
+  //void set_visible(bool v) { visible = v; }
+  //void set_locked(bool v) { locked = v; }
 
   bool has_object(const ObjectModelHandle& object) const;
 
@@ -70,6 +69,7 @@
 
   void draw(SceneContext& sc, const Layers& layers);
   void update(float delta);
+  void update(const Gtk::TreeModel::Row& row);
 
   ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
   SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-29 14:51:02 UTC (rev 2805)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-29 16:59:24 UTC (rev 2806)
@@ -38,11 +38,13 @@
 
   Gtk::TreeStore::iterator it = layer_tree->append();
 
+  HardLayerHandle layer(new HardLayer());
+
   (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[LayerManagerColumns::instance().name]      = Glib::ustring("Scene");
   (*it)[LayerManagerColumns::instance().visible]   = true;
   (*it)[LayerManagerColumns::instance().locked]    = false;
-  (*it)[LayerManagerColumns::instance().layer]     = HardLayerHandle(new HardLayer());
+  (*it)[LayerManagerColumns::instance().layer]     = layer;
 
   layer_tree->signal_row_changed().connect(sigc::mem_fun(*this, &SectorModel::on_row_changed));
   layer_tree->signal_row_deleted().connect(sigc::mem_fun(*this, &SectorModel::on_row_deleted));
@@ -284,9 +286,6 @@
   //std::cout << "loading layer: " << reader.get_name() << " " << name << " " << visible << " " << locked << std::endl;
 
   HardLayerHandle layer = HardLayerHandle(new HardLayer());
-  layer->set_name(name);
-  layer->set_visible(visible);
-  layer->set_locked(locked);
 
   const std::vector<FileReader>& objects_sections = objects_reader.get_sections();
   for(std::vector<FileReader>::const_iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
@@ -302,6 +301,8 @@
   (*it)[LayerManagerColumns::instance().visible]   = visible; 
   (*it)[LayerManagerColumns::instance().locked]    = locked; 
   (*it)[LayerManagerColumns::instance().layer]     = layer;
+
+  layer->update(*it);
   
   const std::vector<FileReader>& layers_sections = layers_reader.get_sections();
   for(std::vector<FileReader>::const_iterator j = layers_sections.begin(); j != layers_sections.end(); ++j)
@@ -376,7 +377,44 @@
   writer.end_section();
 }
 
+struct PropSetFunctor
+{
+  bool v;
+
+  PropSetFunctor(bool v_)
+    : v(v_)
+  {}
+
+  bool set_visible(const Gtk::TreeModel::iterator& it)
+  {
+    (*it)[LayerManagerColumns::instance().visible] = v;
+    ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+    return false;
+  }
+  
+  bool set_locked(const Gtk::TreeModel::iterator& it)
+  {
+    (*it)[LayerManagerColumns::instance().locked] = v;
+    ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+    return false;
+  }
+};
+
 void
+SectorModel::set_all_visible(bool v)
+{
+  PropSetFunctor func(v);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &PropSetFunctor::set_visible));
+}
+
+void
+SectorModel::set_all_locked(bool v)
+{
+  PropSetFunctor func(v);
+  layer_tree->foreach_iter(sigc::mem_fun(func, &PropSetFunctor::set_locked));
+}
+
+void
 SectorModel::queue_draw()
 {
   if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
@@ -394,11 +432,9 @@
     {
       // Update the Layer object with data from the tree
       HardLayerHandle layer = (*iter)[LayerManagerColumns::instance().layer];
-      if (layer.get())
+      if (layer)
         {
-          layer->set_name(((Glib::ustring)(*iter)[LayerManagerColumns::instance().name]).raw());
-          layer->set_visible((*iter)[LayerManagerColumns::instance().visible]);
-          layer->set_locked((*iter)[LayerManagerColumns::instance().locked]);
+          layer->update(*iter);
         }
     }
   queue_draw();

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-29 14:51:02 UTC (rev 2805)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-29 16:59:24 UTC (rev 2806)
@@ -22,6 +22,7 @@
 #include <set>
 #include <memory>
 #include <gtkmm/treestore.h>
+#include <gdkmm/pixbuf.h>
 #include <vector>
 
 #include "hard_layer.hpp"
@@ -77,6 +78,9 @@
   void update(float delta);
   void update(float delta, const Gtk::TreeRow& row);
 
+  void set_all_visible(bool v);
+  void set_all_locked(bool v);
+
   void add_layer(const std::string& name, const Gtk::TreeModel::Path& path = Gtk::TreeModel::Path());
   void delete_layer(const Gtk::TreeModel::Path& path);
 
@@ -85,7 +89,7 @@
 
   HardLayerHandle get_layer(const Gtk::TreeModel::Path& path) const;
   HardLayers get_layers() const;
-
+  
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 
   Glib::RefPtr<Gtk::TreeStore> get_layer_tree() { return layer_tree; }



From grumbel at mail.berlios.de  Sun Mar 29 19:26:42 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 19:26:42 +0200
Subject: [Windstille-commit] r2807 - trunk/windstille/src/editor
Message-ID: <200903291726.n2THQgcK014847@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 19:26:41 +0200 (Sun, 29 Mar 2009)
New Revision: 2807

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/layer_manager.hpp
Log:
Implemented autolocking

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-29 16:59:24 UTC (rev 2806)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-29 17:26:41 UTC (rev 2807)
@@ -835,12 +835,6 @@
 }
 
 void
-EditorWindow::on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock)
-{
-  std::cout << "autoLock: " << auto_lock->get_active() << std::endl;
-}
-
-void
 EditorWindow::on_recent_file(const Glib::RefPtr<Gtk::RecentAction>& recent_action)
 {
   Glib::RefPtr<const Gtk::RecentInfo> item = recent_action->get_current_item();

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-29 16:59:24 UTC (rev 2806)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-29 17:26:41 UTC (rev 2807)
@@ -145,7 +145,6 @@
   
   void on_show_all(bool v);
   void on_lock_all(bool v);
-  void on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock);
 
   void add_recent_file(const std::string& filename);
 

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-29 16:59:24 UTC (rev 2806)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-29 17:26:41 UTC (rev 2807)
@@ -21,6 +21,7 @@
 #include <gtkmm/toolbar.h>
 #include <gtkmm/treemodel.h>
 #include <gtkmm/treestore.h>
+#include <gtkmm/treeview.h>
 #include <gtkmm/treemodelcolumn.h>
 
 #include "editor_window.hpp"
@@ -54,9 +55,10 @@
   action_group->add(Gtk::Action::create_with_icon_name("UnlockAll", "unlock_all", "Unlock All", "Unlock All Layer"),
                     sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_lock_all), false));
 
-  Glib::RefPtr<Gtk::ToggleAction> auto_lock = Gtk::ToggleAction::create_with_icon_name("AutoLock", "auto_lock", "Auto Lock All", "All layers except the current ones are treated as locked");
+  auto_lock = Gtk::ToggleAction::create_with_icon_name("AutoLock", "auto_lock", "Auto Lock All", "All layers except the current ones are treated as locked");
   action_group->add(auto_lock,
-                    sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_auto_lock), auto_lock));
+                    sigc::bind(sigc::mem_fun(*this, &LayerManager::on_auto_lock), auto_lock));
+                    //sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_auto_lock), auto_lock));
 
 
   ui_manager->insert_action_group(action_group);
@@ -78,7 +80,7 @@
   
   Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
 
-  //treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &LayerManager::on_cursor_changed));
+  treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &LayerManager::on_cursor_changed));
   //treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &LayerManager::on_columns_changed));
 
   toolbar.set_icon_size(Gtk::ICON_SIZE_MENU);
@@ -123,11 +125,21 @@
 void
 LayerManager::on_cursor_changed()
 {
-  Gtk::TreeModel::Path path;
-  Gtk::TreeViewColumn* focus_column;
-  treeview.get_cursor(path, focus_column);
+  if (auto_lock->get_active())
+    {
+      Gtk::TreeModel::Path path;
+      Gtk::TreeViewColumn* focus_column;
+      treeview.get_cursor(path, focus_column);
   
-  //std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
+      //std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
+      Gtk::TreeModel::iterator it = treeview.get_model()->get_iter(path);
+      if (it)
+        {
+          EditorWindow::current()->on_lock_all(true);
+          (*it)[LayerManagerColumns::instance().locked] = false;
+          ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+        }
+    }
 }
 
 void
@@ -136,5 +148,11 @@
   //std::cout << "LayerManager::on_columns_changed()" << std::endl;
   treeview.expand_all();
 }
+
+void
+LayerManager::on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock)
+{
+  on_cursor_changed();
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/layer_manager.hpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.hpp	2009-03-29 16:59:24 UTC (rev 2806)
+++ trunk/windstille/src/editor/layer_manager.hpp	2009-03-29 17:26:41 UTC (rev 2807)
@@ -38,8 +38,9 @@
   Gtk::ScrolledWindow scrolled;
   Gtk::TreeView treeview;
 
-  Glib::RefPtr<Gtk::UIManager>   ui_manager;
-  Glib::RefPtr<Gtk::ActionGroup> action_group;
+  Glib::RefPtr<Gtk::UIManager>    ui_manager;
+  Glib::RefPtr<Gtk::ActionGroup>  action_group;
+  Glib::RefPtr<Gtk::ToggleAction> auto_lock;
 
 public:
   LayerManager(EditorWindow& editor);
@@ -52,6 +53,8 @@
 
   Gtk::TreeView& get_treeview() { return treeview; }
 
+  void on_auto_lock(Glib::RefPtr<Gtk::ToggleAction> auto_lock);
+
 private:
   LayerManager(const LayerManager&);
   LayerManager& operator=(const LayerManager&);



From grumbel at mail.berlios.de  Sun Mar 29 19:44:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 19:44:47 +0200
Subject: [Windstille-commit] r2808 - trunk/windstille
Message-ID: <200903291744.n2THilLi010718@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 19:44:47 +0200 (Sun, 29 Mar 2009)
New Revision: 2808

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-29 17:26:41 UTC (rev 2807)
+++ trunk/windstille/TODO	2009-03-29 17:44:47 UTC (rev 2808)
@@ -405,6 +405,9 @@
 Level Design
 ============
 
+* create a test sector that as open sky, currently most test levels
+  are indoor
+
 * fix the particle system in newformat2.wst, speed/lifetime is wrong
 
 * implement light switches in apartment
@@ -503,6 +506,12 @@
 Editor
 ======
 
+* duplicate should not insert objects on the current layer, but on the
+  layer the objects they are on, this would allow duplicating whole
+  multi-layered rooms with ease
+
+* QuadTree could be useful when levels get larger
+
 * make use of Statusbar
   - display mouse coordinates in WorldCo
   - display what Ctrl/Shift do for the current tool
@@ -512,8 +521,8 @@
   might be useful in some situation (i.e. hold Ctrl pressed to move
   only the parent, not the children). Other issues:
 
-  - cloning doesn't preserve parentship  
-  - loading doesn't preserve parentship
+  - cloning doesn't preserve parentship **IMPORTANT**
+  - loading doesn't preserve parentship **IMPORTANT**
   - parents could be handled like normal objects, but with the
     SelectTool traversing all children and marking them before the
     move begings, Ctrl could be used to toggle this behaviour
@@ -522,14 +531,6 @@
     to each other object in the group)
   - parent refers to name, but name isn't guranteed unique, so loading/saving breaks
 
-* Layer Manager, new functions:
-
-  - show all
-  - hide all
-  - lock all
-  - unlock all
-  - lock all except current layer (IMPORTANT)
-
 * New Layer System:
 
   - rename HardLayer to Layer and Layers to LayerMask/SelectionMask
@@ -537,11 +538,16 @@
   - normal Layers can contain child layers, which seems like a bad
     idea, better way would have special objectless parent layers
 
+  - there might be a need for special layers, such as a background
+    layer or a color gradient layer, that doesn't contain objects, but
+    is meaningful by itself
+
 * add button and keyboard shortcut to mark/unmark all layers in the layermask
 
 * add a way to move object to a different layer
 
-* drawing is broken after loading a level, only get fixed when toggling Light layer
+* drawing is broken after loading a level, only get fixed when
+  toggling Light layer, (bug in OpenGLState maybe?)
 
 * background pattern goes away when Color pattern is disabled, since
   its draw to the Colormap
@@ -717,7 +723,11 @@
 
 * find a astyle/bcpp/whatever configuration that matches the current
   coding style, maybe a little script that uses Emacs would do
+
+Sound Effects
+=============
 
+* sound of a large power switch being toggled
 
 http://orange.blender.org/blog/the-amazing-incredible-monkey-brush#more-49
 Hypatia



From grumbel at mail.berlios.de  Sun Mar 29 19:49:16 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 19:49:16 +0200
Subject: [Windstille-commit] r2809 - in trunk/windstille: . src/editor
Message-ID: <200903291749.n2THnGxl011652@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 19:49:15 +0200 (Sun, 29 Mar 2009)
New Revision: 2809

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Duplicated objects get inserted on their parent layer, instead of the currently marked layer

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-29 17:44:47 UTC (rev 2808)
+++ trunk/windstille/TODO	2009-03-29 17:49:15 UTC (rev 2809)
@@ -506,10 +506,6 @@
 Editor
 ======
 
-* duplicate should not insert objects on the current layer, but on the
-  layer the objects they are on, this would allow duplicating whole
-  multi-layered rooms with ease
-
 * QuadTree could be useful when levels get larger
 
 * make use of Statusbar

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-29 17:44:47 UTC (rev 2808)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-29 17:49:15 UTC (rev 2809)
@@ -89,6 +89,7 @@
 
   HardLayerHandle get_layer(const Gtk::TreeModel::Path& path) const;
   HardLayers get_layers() const;
+  HardLayerHandle get_layer(ObjectModelHandle object);
   
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 
@@ -102,8 +103,6 @@
 
   ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
   SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;
-
-  HardLayerHandle get_layer(ObjectModelHandle object);
   
   void raise_to_top(ObjectModelHandle object);
   void lower_to_bottom(ObjectModelHandle object);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 17:44:47 UTC (rev 2808)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 17:49:15 UTC (rev 2809)
@@ -318,20 +318,23 @@
 void
 WindstilleWidget::selection_duplicate()
 {
-  Gtk::TreeModel::Path path;
-  Gtk::TreeViewColumn* focus_column;
-  EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
-
   SelectionHandle new_selection = Selection::create();
   for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
     {
-      ObjectModelHandle obj = (*i)->clone();
-      
-      // Move clone a litte to make it more obvious that something happened
-      obj->set_rel_pos(obj->get_rel_pos() + Vector2f(32.0f, 32.0f));
+      HardLayerHandle layer = sector_model->get_layer(*i);
+      ObjectModelHandle obj = (*i)->clone();     
 
-      sector_model->add(obj, path);
-      new_selection->add(obj);
+      if (!layer)
+        {
+          EditorWindow::current()->print("Couldn't find parent layer while duplicating");
+        }
+      else
+        {
+          // Move clone a litte to make it more obvious that something happened
+          obj->set_rel_pos(obj->get_rel_pos() + Vector2f(32.0f, 32.0f));
+          layer->add(obj);
+          new_selection->add(obj);
+        }
     }
   selection = new_selection;
 



From grumbel at mail.berlios.de  Sun Mar 29 21:13:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 21:13:41 +0200
Subject: [Windstille-commit] r2810 - in trunk/windstille: . src/editor
	src/math
Message-ID: <200903291913.n2TJDfpt028617@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 21:13:40 +0200 (Sun, 29 Mar 2009)
New Revision: 2810

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/math/rect.hpp
Log:
Added Rectf::contains(Rectf) and adjusted HardLayer so that selection now only happen when the object is fully contained in the rectangle

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-29 17:49:15 UTC (rev 2809)
+++ trunk/windstille/TODO	2009-03-29 19:13:40 UTC (rev 2810)
@@ -623,8 +623,6 @@
 * ObjectSelector/IconView allows drag&drop even when nothing is
   selected, leading to a Grumbel dummy image drag&drop without effect
 
-* add a Rect::contains(Rect) call and adjust SelectTool
-
 * save a bitmask along with an object to allow pixel perfect click
   selection, for scaled, rotated or otherwise deformed objects the
   mouse coordinates need to be transformed into texture space

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-29 17:49:15 UTC (rev 2809)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-29 19:13:40 UTC (rev 2810)
@@ -96,7 +96,7 @@
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
       if (layers.match((*i)->get_layers()) &&
-          (*i)->get_bounding_box().is_overlapped(rect))
+          rect.contains((*i)->get_bounding_box()))
         {
           selection->add(*i);
         }

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-03-29 17:49:15 UTC (rev 2809)
+++ trunk/windstille/src/math/rect.hpp	2009-03-29 19:13:40 UTC (rev 2810)
@@ -302,6 +302,12 @@
 	{
 		return (r.left < right && r.right > left && r.top < bottom && r.bottom > top);
 	}
+
+	bool contains(const Rectf& rect) const
+	{
+          return rect.left >= left && rect.right <= right &&
+            rect.top >= top && rect.bottom <= bottom;
+	}
 	
 //! Operations:
 public:



From grumbel at mail.berlios.de  Sun Mar 29 23:19:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sun, 29 Mar 2009 23:19:58 +0200
Subject: [Windstille-commit] r2811 - in trunk/windstille: . src/editor
Message-ID: <200903292119.n2TLJwiE023011@sheep.berlios.de>

Author: grumbel
Date: 2009-03-29 23:19:57 +0200 (Sun, 29 Mar 2009)
New Revision: 2811

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Properly clone parents

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-29 19:13:40 UTC (rev 2810)
+++ trunk/windstille/TODO	2009-03-29 21:19:57 UTC (rev 2811)
@@ -517,7 +517,6 @@
   might be useful in some situation (i.e. hold Ctrl pressed to move
   only the parent, not the children). Other issues:
 
-  - cloning doesn't preserve parentship **IMPORTANT**
   - loading doesn't preserve parentship **IMPORTANT**
   - parents could be handled like normal objects, but with the
     SelectTool traversing all children and marking them before the

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 19:13:40 UTC (rev 2810)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-29 21:19:57 UTC (rev 2811)
@@ -318,12 +318,16 @@
 void
 WindstilleWidget::selection_duplicate()
 {
+  std::map<ObjectModelHandle, ObjectModelHandle> parent_map;
+
   SelectionHandle new_selection = Selection::create();
   for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
     {
       HardLayerHandle layer = sector_model->get_layer(*i);
-      ObjectModelHandle obj = (*i)->clone();     
+      ObjectModelHandle obj = (*i)->clone();
 
+      parent_map[*i] = obj;
+
       if (!layer)
         {
           EditorWindow::current()->print("Couldn't find parent layer while duplicating");
@@ -336,8 +340,28 @@
           new_selection->add(obj);
         }
     }
+
   selection = new_selection;
 
+  // Second pass to set the parents to the cloned objects
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      if ((*i)->get_parent())
+        {
+          std::map<ObjectModelHandle, ObjectModelHandle>::iterator it = parent_map.find((*i)->get_parent());
+          
+          if (it == parent_map.end())
+            {
+              // When the parent wasn't part of the selection, leave
+              // the parent untouched
+            }
+          else
+            {
+              (*i)->set_parent(it->second);
+            }
+        }
+    }
+
   queue_draw();
 }
 



From grumbel at mail.berlios.de  Mon Mar 30 03:40:58 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 03:40:58 +0200
Subject: [Windstille-commit] r2812 - trunk/windstille/src/util
Message-ID: <200903300140.n2U1ewM5025860@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 03:40:56 +0200 (Mon, 30 Mar 2009)
New Revision: 2812

Modified:
   trunk/windstille/src/util/file_reader.cpp
   trunk/windstille/src/util/file_reader.hpp
   trunk/windstille/src/util/getter.cpp
   trunk/windstille/src/util/getter.hpp
Log:
Made FileReader const

Modified: trunk/windstille/src/util/file_reader.cpp
===================================================================
--- trunk/windstille/src/util/file_reader.cpp	2009-03-29 21:19:57 UTC (rev 2811)
+++ trunk/windstille/src/util/file_reader.cpp	2009-03-30 01:40:56 UTC (rev 2812)
@@ -84,7 +84,7 @@
 }
 
 bool
-FileReader::read(const char* name, int& value)
+FileReader::read(const char* name, int& value) const
 {
   if (impl.get())
     return impl->read_int(name, value);
@@ -93,7 +93,7 @@
 }
 
 bool
-FileReader::read(const char* name, float& value)
+FileReader::read(const char* name, float& value) const
 {
   if (impl.get())
     return impl->read_float(name, value);
@@ -102,7 +102,7 @@
 }
 
 bool
-FileReader::read(const char* name, bool& value)
+FileReader::read(const char* name, bool& value) const
 {
   if (impl.get())
     return impl->read_bool(name, value);
@@ -111,7 +111,7 @@
 }
 
 bool
-FileReader::read(const char* name, std::string& value)
+FileReader::read(const char* name, std::string& value) const
 {
   if (impl.get())
     return impl->read_string(name, value);
@@ -120,7 +120,7 @@
 }
 
 bool
-FileReader::read(const char* name, std::vector<int>& value)
+FileReader::read(const char* name, std::vector<int>& value) const
 {
   if (impl.get())
     return impl->get(name, value);
@@ -129,7 +129,7 @@
 }
 
 bool
-FileReader::read(const char* name, std::vector<bool>&   value)
+FileReader::read(const char* name, std::vector<bool>&   value) const
 {
   if (impl.get())
     return impl->get(name, value);
@@ -138,7 +138,7 @@
 }
 
 bool
-FileReader::read(const char* name, std::vector<std::string>& value)
+FileReader::read(const char* name, std::vector<std::string>& value) const
 {
   if (impl.get())
     return impl->get(name, value);
@@ -147,7 +147,7 @@
 }
 
 bool
-FileReader::read(const char* name, std::vector<float>& value)
+FileReader::read(const char* name, std::vector<float>& value) const
 {
   if (impl.get())
     return impl->get(name, value);
@@ -156,7 +156,7 @@
 }
 
 bool
-FileReader::read(const char* name, FileReader& reader)
+FileReader::read(const char* name, FileReader& reader) const
 {
   if (impl.get())
     return impl->read_section(name, reader);

Modified: trunk/windstille/src/util/file_reader.hpp
===================================================================
--- trunk/windstille/src/util/file_reader.hpp	2009-03-29 21:19:57 UTC (rev 2811)
+++ trunk/windstille/src/util/file_reader.hpp	2009-03-30 01:40:56 UTC (rev 2812)
@@ -45,12 +45,13 @@
 
   /** Generic getter function for non-standard types, see getter.hpp */
   template<typename T>
-  bool get(const char* name, T& v) {
+  bool get(const char* name, T& v) const
+  {
     return ::get(*this, name, v);
   }
  
   template<class E, class T>
-  bool get(const char* name, E& value, T enum2string)
+  bool get(const char* name, E& value, T enum2string) const
   {
     std::string str;
     if (get(name, str))
@@ -64,17 +65,17 @@
 
   // Primitive types
   // FIXME: Is there any nice way to not use two different names?
-  bool read(const char* name, FileReader& v);
+  bool read(const char* name, FileReader& v) const;
 
-  bool read(const char* name, int&   v);
-  bool read(const char* name, float& v);
-  bool read(const char* name, bool& v);
-  bool read(const char* name, std::string& v);
+  bool read(const char* name, int&   v) const;
+  bool read(const char* name, float& v) const;
+  bool read(const char* name, bool& v) const;
+  bool read(const char* name, std::string& v) const;
 
-  bool read(const char* name, std::vector<bool>&   v);
-  bool read(const char* name, std::vector<int>&   v);
-  bool read(const char* name, std::vector<float>& v);
-  bool read(const char* name, std::vector<std::string>& v);
+  bool read(const char* name, std::vector<bool>&   v) const;
+  bool read(const char* name, std::vector<int>&   v) const;
+  bool read(const char* name, std::vector<float>& v) const;
+  bool read(const char* name, std::vector<std::string>& v) const;
 
 private:
   boost::shared_ptr<FileReaderImpl> impl;

Modified: trunk/windstille/src/util/getter.cpp
===================================================================
--- trunk/windstille/src/util/getter.cpp	2009-03-29 21:19:57 UTC (rev 2811)
+++ trunk/windstille/src/util/getter.cpp	2009-03-30 01:40:56 UTC (rev 2812)
@@ -24,7 +24,7 @@
 #include "file_reader.hpp"
 #include "getter.hpp"
 
-bool get(FileReader& reader, const char* name, Vector2f&  value)
+bool get(const FileReader& reader, const char* name, Vector2f&  value)
 {
   std::vector<float> floats;
   if (reader.get(name, floats) && floats.size() == 2) {
@@ -36,7 +36,7 @@
   }  
 }
 
-bool get(FileReader& reader, const char* name, Vector3& value)
+bool get(const FileReader& reader, const char* name, Vector3& value)
 {
   std::vector<float> floats;
   if (reader.get(name, floats) && floats.size() == 3) {
@@ -49,7 +49,7 @@
   }
 }
 
-bool get(FileReader& reader, const char* name, Quaternion& value)
+bool get(const FileReader& reader, const char* name, Quaternion& value)
 {
   std::vector<float> floats;
   if (reader.get(name, floats) && floats.size() == 4) {
@@ -63,7 +63,7 @@
   }
 }
 
-bool get(FileReader& reader, const char* name, Matrix& m)
+bool get(const FileReader& reader, const char* name, Matrix& m)
 {
   std::vector<float> floats;
   if (reader.get(name, floats) && floats.size() == 16) {  
@@ -90,7 +90,7 @@
   }
 }
 
-bool get(FileReader& reader, const char* name, Color& value)
+bool get(const FileReader& reader, const char* name, Color& value)
 {
   std::vector<float> floats;
   if (reader.get(name, floats)) {
@@ -121,16 +121,16 @@
 
 // Getters for primitive types
 // FIXME: Ugly, maybe there is a better way then to have different read/get names for the function
-bool get(FileReader& reader, const char* name, FileReader& v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, FileReader& v) { return reader.read(name, v); }
 
-bool get(FileReader& reader, const char* name, int&   v) { return reader.read(name, v); }
-bool get(FileReader& reader, const char* name, float& v) { return reader.read(name, v); }
-bool get(FileReader& reader, const char* name, bool& v) { return reader.read(name, v); }
-bool get(FileReader& reader, const char* name, std::string& v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, int&   v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, float& v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, bool& v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, std::string& v) { return reader.read(name, v); }
 
-bool get(FileReader& reader, const char* name, std::vector<bool>&   v) { return reader.read(name, v); }
-bool get(FileReader& reader, const char* name, std::vector<int>&   v) { return reader.read(name, v); }
-bool get(FileReader& reader, const char* name, std::vector<float>& v) { return reader.read(name, v); }
-bool get(FileReader& reader, const char* name, std::vector<std::string>& v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, std::vector<bool>&   v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, std::vector<int>&   v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, std::vector<float>& v) { return reader.read(name, v); }
+bool get(const FileReader& reader, const char* name, std::vector<std::string>& v) { return reader.read(name, v); }
 
 /* EOF */

Modified: trunk/windstille/src/util/getter.hpp
===================================================================
--- trunk/windstille/src/util/getter.hpp	2009-03-29 21:19:57 UTC (rev 2811)
+++ trunk/windstille/src/util/getter.hpp	2009-03-30 01:40:56 UTC (rev 2812)
@@ -28,24 +28,24 @@
 class Vector3;
 class Matrix;
 
-bool get(FileReader& reader, const char* name, Matrix& value);
-bool get(FileReader& reader, const char* name, Quaternion& value);
-bool get(FileReader& reader, const char* name, Color& value);
-bool get(FileReader& reader, const char* name, Vector2f& value);
-bool get(FileReader& reader, const char* name, Vector3& value);
+bool get(const FileReader& reader, const char* name, Matrix& value);
+bool get(const FileReader& reader, const char* name, Quaternion& value);
+bool get(const FileReader& reader, const char* name, Color& value);
+bool get(const FileReader& reader, const char* name, Vector2f& value);
+bool get(const FileReader& reader, const char* name, Vector3& value);
 
 // Primitive types
-bool get(FileReader& reader, const char* name, FileReader& v);
+bool get(const FileReader& reader, const char* name, FileReader& v);
 
-bool get(FileReader& reader, const char* name, int&   v);
-bool get(FileReader& reader, const char* name, float& v);
-bool get(FileReader& reader, const char* name, bool& v);
-bool get(FileReader& reader, const char* name, std::string& v);
+bool get(const FileReader& reader, const char* name, int&   v);
+bool get(const FileReader& reader, const char* name, float& v);
+bool get(const FileReader& reader, const char* name, bool& v);
+bool get(const FileReader& reader, const char* name, std::string& v);
 
-bool get(FileReader& reader, const char* name, std::vector<bool>&   v);
-bool get(FileReader& reader, const char* name, std::vector<int>&   v); 
-bool get(FileReader& reader, const char* name, std::vector<float>& v);
-bool get(FileReader& reader, const char* name, std::vector<std::string>& v);
+bool get(const FileReader& reader, const char* name, std::vector<bool>&   v);
+bool get(const FileReader& reader, const char* name, std::vector<int>&   v); 
+bool get(const FileReader& reader, const char* name, std::vector<float>& v);
+bool get(const FileReader& reader, const char* name, std::vector<std::string>& v);
 
 #endif
 



From grumbel at mail.berlios.de  Mon Mar 30 04:16:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:16:24 +0200
Subject: [Windstille-commit] r2813 - trunk/windstille/data/images/decal
Message-ID: <200903300216.n2U2GOVv028954@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:16:21 +0200 (Mon, 30 Mar 2009)
New Revision: 2813

Added:
   trunk/windstille/data/images/decal/wall1.png
   trunk/windstille/data/images/decal/wall2.png
   trunk/windstille/data/images/decal/wall3.png
   trunk/windstille/data/images/decal/walltiles.png
Log:
Some more graphics

Added: trunk/windstille/data/images/decal/wall1.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/wall1.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/wall2.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/wall2.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/wall3.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/wall3.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/walltiles.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/walltiles.png
___________________________________________________________________
Name: svn:mime-type
   + image/png



From grumbel at mail.berlios.de  Mon Mar 30 04:36:31 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:36:31 +0200
Subject: [Windstille-commit] r2814 - trunk/windstille/src/editor
Message-ID: <200903300236.n2U2aVE0030865@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:36:30 +0200 (Mon, 30 Mar 2009)
New Revision: 2814

Modified:
   trunk/windstille/src/editor/editor_window.cpp
Log:
Removed the RecentMenu in the File Menu, since it doesn't function properly, causes the file open dialog to popup when the mouse hovers over it

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 02:16:21 UTC (rev 2813)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-30 02:36:30 UTC (rev 2814)
@@ -61,7 +61,7 @@
     "    <menu action='MenuFile'>"
     "      <menuitem action='New'/>"
     "      <menuitem action='FileOpen'/>"
-    "      <menuitem action='FileRecentFiles'/>"
+    //"      <menuitem action='FileRecentFiles'/>"
     "      <separator/>"
     "      <menuitem action='Save'/>"
     "      <menuitem action='SaveAs'/>"



From grumbel at mail.berlios.de  Mon Mar 30 04:45:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:45:38 +0200
Subject: [Windstille-commit] r2815 - trunk/windstille/src/editor
Message-ID: <200903300245.n2U2jcDL031455@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:45:31 +0200 (Mon, 30 Mar 2009)
New Revision: 2815

Modified:
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/object_model_factory.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
implemented load/save of parent, replaced FileReader::read with FileReader::get, fixed crash due to invalid path

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -33,8 +33,8 @@
   : ObjectModel(reader)
 {
   int map_type = 0;
-  reader.read("path", path);
-  reader.read("type", map_type);
+  reader.get("path", path);
+  reader.get("type", map_type);
   type = (MapType)map_type;
   surface = Surface(path);
 }

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -60,7 +60,6 @@
                     sigc::bind(sigc::mem_fun(*this, &LayerManager::on_auto_lock), auto_lock));
                     //sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_auto_lock), auto_lock));
 
-
   ui_manager->insert_action_group(action_group);
 
   ui_manager->add_ui_from_string("<ui>"

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -17,6 +17,7 @@
 */
 
 #include <iostream>
+#include <sstream>
 
 #include "editor_window.hpp"
 #include "util/file_reader.hpp"
@@ -32,13 +33,11 @@
 
 ObjectModel::ObjectModel(FileReader& reader)
 {
-  std::string parent;
-  reader.read("name", name);
+  reader.get("name", name);
   reader.get("pos",  rel_pos);
-  reader.read("parent",  parent);
   
   int layer_mask = 1;
-  reader.read("layer", layer_mask);
+  reader.get("layer", layer_mask);
   layers = Layers(layer_mask);
 }
 
@@ -46,14 +45,23 @@
 {
 }
 
+std::string
+ObjectModel::get_id() const
+{
+  std::ostringstream os;
+  os << this;
+  return os.str();
+}
+
 FileWriter&
 ObjectModel::write_member(FileWriter& writer) const
 {
   ObjectModelHandle parent = parent_ptr.lock();
 
   return writer
+    .write("id", get_id())
     .write("pos", rel_pos)
-    .write("parent", parent.get() ? parent->get_name() : "")
+    .write("parent", parent.get() ? parent->get_id() : "")
     .write("layer", layers.get_mask());
 }
 
@@ -65,7 +73,7 @@
 }
 
 void
-ObjectModel::set_parent(const ObjectModelHandle& parent_)
+ObjectModel::set_parent(const ObjectModelHandle& parent_, bool recalc_pos)
 {
   { // Remove the old parent
     ObjectModelHandle parent = parent_ptr.lock();
@@ -91,7 +99,7 @@
     }
 
   // Set new parent
-  if (parent_.get())
+  if (parent_.get() && recalc_pos)
     {
       rel_pos -= parent_->get_world_pos();
     }

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -51,10 +51,11 @@
   ObjectModel(const std::string& name, const Vector2f& pos);
   virtual ~ObjectModel();
   
-  void set_parent(const ObjectModelHandle& parent_);
+  void set_parent(const ObjectModelHandle& parent_, bool recalc_pos = true);
   ObjectModelHandle get_parent() const;
 
   std::string get_name() const { return name; }
+  std::string get_id() const;
 
   Vector2f get_world_pos() const;
 

Modified: trunk/windstille/src/editor/object_model_factory.hpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.hpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/object_model_factory.hpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_OBJECT_MODEL_FACTOR_HPP
-#define HEADER_OBJECT_MODEL_FACTOR_HPP
+#ifndef HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTOR_HPP
+#define HEADER_WINDSTILLE_EDITOR_OBJECT_MODEL_FACTOR_HPP
 
 #include "object_model.hpp"
 

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -58,7 +58,7 @@
 {
   Gtk::TreeStore::iterator it;
 
-  if (path.empty())
+  if (!path)
     it = layer_tree->append();
   else
     it = layer_tree->append(layer_tree->get_iter(path)->children());
@@ -73,7 +73,7 @@
 void
 SectorModel::delete_layer(const Gtk::TreeModel::Path& path)
 {
-  if (path.empty())
+  if (!path)
     {
       EditorWindow::current()->print("SectorModel::delete_layer(): invalid empty path");
     }
@@ -86,7 +86,7 @@
 void
 SectorModel::add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path)
 {
-  if (path.empty())
+  if (!path)
     {
       EditorWindow::current()->print("SectorModel::add(): invalid empty path");
     }
@@ -124,7 +124,7 @@
 HardLayerHandle
 SectorModel::get_layer(const Gtk::TreeModel::Path& path) const
 {
-  if (!path.empty())
+  if (path)
     {
       Gtk::TreeModel::iterator it = layer_tree->get_iter(path);
       if (it)
@@ -268,7 +268,9 @@
 }
 
 void
-SectorModel::load_layer(FileReader reader, const Gtk::TreeModel::Row* parent)
+SectorModel::load_layer(FileReader reader, const Gtk::TreeModel::Row* parent_row, 
+                        std::map<std::string, ObjectModelHandle>& id_table,
+                        std::map<ObjectModelHandle, std::string>& parent_table)
 {
   FileReader objects_reader;
   FileReader layers_reader;
@@ -277,11 +279,11 @@
   bool visible = true;;
   bool locked  = false;
 
-  reader.read("name", name);
-  reader.read("visible", visible);
-  reader.read("locked", locked);
-  reader.read("objects", objects_reader);
-  reader.read("child-layers", layers_reader);
+  reader.get("name", name);
+  reader.get("visible", visible);
+  reader.get("locked", locked);
+  reader.get("objects", objects_reader);
+  reader.get("child-layers", layers_reader);
 
   //std::cout << "loading layer: " << reader.get_name() << " " << name << " " << visible << " " << locked << std::endl;
 
@@ -290,11 +292,26 @@
   const std::vector<FileReader>& objects_sections = objects_reader.get_sections();
   for(std::vector<FileReader>::const_iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
     {
-      layer->add(ObjectModelFactory::create(*j));
+      ObjectModelHandle obj = ObjectModelFactory::create(*j);
+
+      layer->add(obj);
+
+      std::string id_str;
+      if (j->read("id", id_str))
+        {
+          id_table[id_str] = obj;
+        }
+
+      std::string parent_str;
+      if (j->read("parent", parent_str))
+        {
+          if (!parent_str.empty())
+            parent_table[obj] = parent_str;
+        }
     }
 
   // Append the layer to the tree
-  Gtk::TreeStore::iterator it = parent ? layer_tree->append(parent->children()) : it = layer_tree->append();
+  Gtk::TreeStore::iterator it = parent_row ? layer_tree->append(parent_row->children()) : it = layer_tree->append();
 
   (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[LayerManagerColumns::instance().name]      = name;
@@ -307,7 +324,7 @@
   const std::vector<FileReader>& layers_sections = layers_reader.get_sections();
   for(std::vector<FileReader>::const_iterator j = layers_sections.begin(); j != layers_sections.end(); ++j)
     {
-      load_layer(*j, &*it);
+      load_layer(*j, &(*it), id_table, parent_table);
     }
 }
 
@@ -323,6 +340,9 @@
     }
   else
     {
+      std::map<std::string, ObjectModelHandle> id_table;
+      std::map<ObjectModelHandle, std::string> parent_table;
+
       FileReader reader = FileReader::parse(stream, filename);
       if (reader.get_name() == "windstille-sector")
         {
@@ -331,9 +351,23 @@
             {
               if (i->get_name() == "layer")
                 {
-                  load_layer(*i, 0);
+                  load_layer(*i, 0, id_table, parent_table);
                 }
             }
+          
+          // Set the parents properly
+          for(std::map<ObjectModelHandle, std::string>::iterator i = parent_table.begin(); i != parent_table.end(); ++i)
+            {
+              std::map<std::string, ObjectModelHandle>::iterator j = id_table.find(i->second);
+              if (j == id_table.end())
+                {
+                  std::cout << "Error: Couldn't resolve 'id': " << i->second << std::endl;
+                }
+              else
+                {
+                  i->first->set_parent(j->second, false);
+                }
+            }
         }
     }
 }

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-30 02:36:30 UTC (rev 2814)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-30 02:45:31 UTC (rev 2815)
@@ -112,7 +112,9 @@
   SnapData snap_object(const Rectf& object, const std::set<ObjectModelHandle>& ignore_objects) const;
 
   void load(const std::string& filename);
-  void load_layer(FileReader filename, const Gtk::TreeModel::Row* parent);
+  void load_layer(FileReader filename, const Gtk::TreeModel::Row* parent, 
+                  std::map<std::string, ObjectModelHandle>& id_table,
+                  std::map<ObjectModelHandle, std::string>& parent_table);
   void write(FileWriter& writer) const;
   void write(FileWriter& writer, const Gtk::TreeRow& row) const;
 



From grumbel at mail.berlios.de  Mon Mar 30 04:46:47 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:46:47 +0200
Subject: [Windstille-commit] r2816 - trunk/windstille
Message-ID: <200903300246.n2U2klgw031522@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:46:47 +0200 (Mon, 30 Mar 2009)
New Revision: 2816

Modified:
   trunk/windstille/SConstruct
Log:
Use Variables instead of Options

Modified: trunk/windstille/SConstruct
===================================================================
--- trunk/windstille/SConstruct	2009-03-30 02:45:31 UTC (rev 2815)
+++ trunk/windstille/SConstruct	2009-03-30 02:46:47 UTC (rev 2816)
@@ -35,12 +35,10 @@
 
 def CheckPhysFS(context, version):
     optionFile = env['CACHEDIR'] + 'libphysfs.cache.py'
-    opts = Options(optionFile)
-    opts.AddOptions(
-        ('CACHED_LIBPHYSFS',   'Whether libphysfs is available'),
-        ('CXXFLAGS_LIBPHYSFS', ''),
-        ('LINKFLAGS_LIBPHYSFS',''),
-        )
+    opts = Variables(optionFile)
+    opts.AddVariables(('CACHED_LIBPHYSFS',    'Whether libphysfs is available'),
+                      ('CXXFLAGS_LIBPHYSFS',  ''),
+                      ('LINKFLAGS_LIBPHYSFS', ''))
     opts.Update(context.env)
 
     context.Message( 'Checking for PhysFS >= %s ...' % version )
@@ -155,7 +153,7 @@
 
 conf_env = Environment()
 
-opts = Options(['options.cache', 'custom.py'], ARGUMENTS)
+opts = Variables(['options.cache', 'custom.py'], ARGUMENTS)
 opts.Add('CPPPATH', 'Additional preprocessor paths')
 opts.Add('CPPFLAGS', 'Additional preprocessor flags')
 opts.Add('CPPDEFINES', 'defined constants')



From grumbel at mail.berlios.de  Mon Mar 30 04:49:46 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:49:46 +0200
Subject: [Windstille-commit] r2817 - trunk/windstille/src/editor
Message-ID: <200903300249.n2U2nkbX031655@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:49:43 +0200 (Mon, 30 Mar 2009)
New Revision: 2817

Modified:
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/object_model_factory.cpp
   trunk/windstille/src/editor/object_model_factory.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
Log:
FileReader const cleanup

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -29,7 +29,7 @@
   return ObjectModelHandle(new DecalObjectModel(name, pos, path, type));
 }
 
-DecalObjectModel::DecalObjectModel(FileReader& reader)
+DecalObjectModel::DecalObjectModel(const FileReader& reader)
   : ObjectModel(reader)
 {
   int map_type = 0;

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -35,7 +35,7 @@
   MapType type;
 
 public:
-  DecalObjectModel(FileReader& reader);
+  DecalObjectModel(const FileReader& reader);
   DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
                    const std::string& path_, MapType type_);
   ~DecalObjectModel();

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -31,7 +31,7 @@
 {
 }
 
-ObjectModel::ObjectModel(FileReader& reader)
+ObjectModel::ObjectModel(const FileReader& reader)
 {
   reader.get("name", name);
   reader.get("pos",  rel_pos);

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -47,7 +47,7 @@
 
 public:
   ObjectModel();
-  ObjectModel(FileReader& reader);
+  ObjectModel(const FileReader& reader);
   ObjectModel(const std::string& name, const Vector2f& pos);
   virtual ~ObjectModel();
   

Modified: trunk/windstille/src/editor/object_model_factory.cpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.cpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/object_model_factory.cpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -23,7 +23,7 @@
 #include "object_model_factory.hpp"
 
 ObjectModelHandle
-ObjectModelFactory::create(FileReader reader)
+ObjectModelFactory::create(const FileReader& reader)
 {
   if (reader.get_name() == "decal")
     {

Modified: trunk/windstille/src/editor/object_model_factory.hpp
===================================================================
--- trunk/windstille/src/editor/object_model_factory.hpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/object_model_factory.hpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -26,7 +26,7 @@
 class ObjectModelFactory
 {
 public:
-  static ObjectModelHandle create(FileReader reader);
+  static ObjectModelHandle create(const FileReader& reader);
   
 private:
   ObjectModelFactory(const ObjectModelFactory&);

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -268,7 +268,7 @@
 }
 
 void
-SectorModel::load_layer(FileReader reader, const Gtk::TreeModel::Row* parent_row, 
+SectorModel::load_layer(const FileReader& reader, const Gtk::TreeModel::Row* parent_row, 
                         std::map<std::string, ObjectModelHandle>& id_table,
                         std::map<ObjectModelHandle, std::string>& parent_table)
 {

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-30 02:46:47 UTC (rev 2816)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-30 02:49:43 UTC (rev 2817)
@@ -112,7 +112,7 @@
   SnapData snap_object(const Rectf& object, const std::set<ObjectModelHandle>& ignore_objects) const;
 
   void load(const std::string& filename);
-  void load_layer(FileReader filename, const Gtk::TreeModel::Row* parent, 
+  void load_layer(const FileReader& filename, const Gtk::TreeModel::Row* parent, 
                   std::map<std::string, ObjectModelHandle>& id_table,
                   std::map<ObjectModelHandle, std::string>& parent_table);
   void write(FileWriter& writer) const;



From grumbel at mail.berlios.de  Mon Mar 30 04:52:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:52:03 +0200
Subject: [Windstille-commit] r2818 - trunk/windstille/src/editor
Message-ID: <200903300252.n2U2q31U032082@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:52:00 +0200 (Mon, 30 Mar 2009)
New Revision: 2818

Modified:
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Fixed object order when duplicating groups

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 02:49:43 UTC (rev 2817)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 02:52:00 UTC (rev 2818)
@@ -321,7 +321,7 @@
   std::map<ObjectModelHandle, ObjectModelHandle> parent_map;
 
   SelectionHandle new_selection = Selection::create();
-  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+  for(Selection::reverse_iterator i = selection->rbegin(); i != selection->rend(); ++i)
     {
       HardLayerHandle layer = sector_model->get_layer(*i);
       ObjectModelHandle obj = (*i)->clone();



From grumbel at mail.berlios.de  Mon Mar 30 04:56:17 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 04:56:17 +0200
Subject: [Windstille-commit] r2819 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903300256.n2U2uHGG000013@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 04:56:15 +0200 (Mon, 30 Mar 2009)
New Revision: 2819

Modified:
   trunk/windstille/data/sectors/trainstation/train.wst
Log:
Basic train test sector

Modified: trunk/windstille/data/sectors/trainstation/train.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/train.wst	2009-03-30 02:52:00 UTC (rev 2818)
+++ trunk/windstille/data/sectors/trainstation/train.wst	2009-03-30 02:56:15 UTC (rev 2819)
@@ -1,96 +1,78 @@
 ;; -*- scheme -*-
+
 (windstille-sector
   (version 1)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
-  (layer 
-  (objects
-    (decal
-      (pos 107.438 143.078)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_front.png")
-      (type 0)
-      )
-    (decal
-      (pos 2664.44 148.078)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_back.png")
-      (type 0)
-      )
-    (decal
-      (pos 866.438 138.078)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_middle.png")
-      (type 0)
-      )
-    (decal
-      (pos 854.508 -78.9219)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_generator.png")
-      (type 0)
-      )
-    (decal
-      (pos 1986.12 -78.9219)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_generator.png")
-      (type 0)
-      )
-    (decal
-      (pos 1890.44 138.078)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_middle.png")
-      (type 0)
-      )
-    (decal
-      (pos 332.766 380.766)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_engine_front.png")
-      (type 0)
-      )
-    (decal
-      (pos 2424.77 381.766)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_engine_back.png")
-      (type 0)
-      )
-    (decal
-      (pos 712.766 380.766)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_engine_middle.png")
-      (type 0)
-      )
-    (decal
-      (pos 1168.77 380.766)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_engine_middle.png")
-      (type 0)
-      )
-    (decal
-      (pos 2080.77 380.766)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_engine_middle.png")
-      (type 0)
-      )
-    (decal
-      (pos 1624.77 380.766)
-      (parent "")
-      (layer 1)
-      (path "images/decal/train_engine_middle.png")
-      (type 0)
-      )
-    )
-  ))
+  (layer
+    (name "New Layer")
+    (visible 1)
+    (locked 0)
+    (objects
+      (decal
+        (id "0x8b1b3b8")
+        (pos -752 0)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_front.png")
+        (type 0))
+      (decal
+        (id "0x8b1b440")
+        (pos 696 0)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_back.png")
+        (type 0))
+      (decal
+        (id "0x8b1b558")
+        (pos 974.233 -296.814)
+        (parent "")
+        (layer 1)
+        (path "images/decal/train_middle.png")
+        (type 0))
+      (decal
+        (id "0x8b1b630")
+        (pos -153.68 -216)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_generator.png")
+        (type 0))
+      (decal
+        (id "0x8b1b750")
+        (pos -593.074 240.832)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_engine_front.png")
+        (type 0))
+      (decal
+        (id "0x8b9ac98")
+        (pos 586.93 241.832)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_engine_back.png")
+        (type 0))
+      (decal
+        (id "0x8bdfbe8")
+        (pos -213.07 240.832)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_engine_middle.png")
+        (type 0))
+      (decal
+        (id "0x8be00c0")
+        (pos 242.93 240.832)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_engine_middle.png")
+        (type 0))
+      (decal
+        (id "0x8b48ff8")
+        (pos 1.44153 -15.168)
+        (parent "0x8b1b558")
+        (layer 1)
+        (path "images/decal/train_door.png")
+        (type 0)))
+    (child-layers)))
 
 ;; EOF ;;



From grumbel at mail.berlios.de  Mon Mar 30 05:33:07 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 05:33:07 +0200
Subject: [Windstille-commit] r2820 - trunk/windstille/src/editor
Message-ID: <200903300333.n2U3X7ur008501@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 05:33:07 +0200 (Mon, 30 Mar 2009)
New Revision: 2820

Modified:
   trunk/windstille/src/editor/selection.cpp
Log:
Fixed parent handling when doing copy&paste

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-30 02:56:15 UTC (rev 2819)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-30 03:33:07 UTC (rev 2820)
@@ -92,12 +92,33 @@
 Selection::clone() const
 {
   SelectionHandle selection = Selection::create();
-
+  std::map<ObjectModelHandle, ObjectModelHandle> parent_map;
   for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      selection->add((*i)->clone());
+      ObjectModelHandle obj = (*i)->clone();
+      parent_map[*i] = obj;
+      selection->add(obj);
     }
 
+  // Second pass to set the parents to the cloned objects
+  for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+    {
+      if ((*i)->get_parent())
+        {
+          std::map<ObjectModelHandle, ObjectModelHandle>::iterator it = parent_map.find((*i)->get_parent());
+          
+          if (it == parent_map.end())
+            {
+              // When the parent wasn't part of the selection, leave
+              // the parent untouched
+            }
+          else
+            {
+              (*i)->set_parent(it->second);
+            }
+        }
+    }
+
   return selection;
 }
 



From grumbel at mail.berlios.de  Mon Mar 30 18:22:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 18:22:03 +0200
Subject: [Windstille-commit] r2821 - trunk/windstille/src/editor
Message-ID: <200903301622.n2UGM3rm010839@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 18:22:03 +0200 (Mon, 30 Mar 2009)
New Revision: 2821

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/editor_window.hpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/layer_manager.hpp
Log:
Share the UIManager between LayerManager and EditorWindow

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 03:33:07 UTC (rev 2820)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-30 16:22:03 UTC (rev 2821)
@@ -43,9 +43,11 @@
 EditorWindow* EditorWindow::current_ = 0;
 
 EditorWindow::EditorWindow(const Glib::RefPtr<const Gdk::GL::Config>& glconfig_)
-  : layer_manager(*this),
+  : ui_manager(Gtk::UIManager::create()),
+    action_group(Gtk::ActionGroup::create()),
+    glconfig(glconfig_),
+    layer_manager(*this),
     minimap_widget(glconfig_),
-    glconfig(glconfig_),
     select_tool(new SelectTool()),
     zoom_tool(new ZoomTool()),
     current_tool(select_tool.get())
@@ -90,6 +92,18 @@
     "      <separator/>"
     //"      <menuitem action='Snap'/>"
     "    </menu>"
+    "    <menu action='MenuLayer'>"
+    "      <menuitem action='NewLayer'/>"
+    "      <menuitem action='DeleteLayer'/>"
+    "      <separator/>"
+    "      <menuitem action='ShowAllLayer'/>"
+    "      <menuitem action='HideAllLayer'/>"
+    "      <separator/>"
+    "      <menuitem action='LockAllLayer'/>"
+    "      <menuitem action='UnlockAllLayer'/>"
+    "      <separator/>"
+    "      <menuitem action='AutoLockLayer'/>"
+    "    </menu>"
     "    <menu action='MenuView'>"
     "      <menuitem action='ZoomIn'/>"
     "      <menuitem action='ZoomOut'/>"
@@ -162,9 +176,6 @@
     "  </toolbar>"
     "</ui>";
 
-  ui_manager   = Gtk::UIManager::create();
-  action_group = Gtk::ActionGroup::create();
-
   action_group->add(Gtk::Action::create("MenuFile",    "_File"));
   action_group->add(Gtk::Action::create("New",         Gtk::Stock::NEW),
                     sigc::mem_fun(*this, &EditorWindow::on_new));
@@ -841,7 +852,7 @@
 
   //std::cout << "On Recent File:" << item->get_uri() << std::endl;
   if (item->exists())
-      load_file(Glib::filename_from_uri(item->get_uri()));
+    load_file(Glib::filename_from_uri(item->get_uri()));
 }
 
 void

Modified: trunk/windstille/src/editor/editor_window.hpp
===================================================================
--- trunk/windstille/src/editor/editor_window.hpp	2009-03-30 03:33:07 UTC (rev 2820)
+++ trunk/windstille/src/editor/editor_window.hpp	2009-03-30 16:22:03 UTC (rev 2821)
@@ -54,17 +54,17 @@
   Gtk::HPaned hpaned;
   Gtk::VPaned vpaned;
   Gtk::Statusbar status;
-  
+
+  Glib::RefPtr<Gtk::UIManager>   ui_manager;
+  Glib::RefPtr<Gtk::ActionGroup> action_group;
+  Glib::RefPtr<Gdk::GL::Context> share_list;
+  Glib::RefPtr<const Gdk::GL::Config> glconfig; 
+
   Gtk::Notebook  notebook;
   ObjectSelector object_selector;
-  LayerManager     layer_manager;
+  LayerManager   layer_manager;
   MinimapWidget  minimap_widget;
 
-  Glib::RefPtr<Gtk::UIManager>   ui_manager;
-  Glib::RefPtr<Gtk::ActionGroup> action_group;
-  Glib::RefPtr<Gdk::GL::Context> share_list;
-  Glib::RefPtr<const Gdk::GL::Config>  glconfig;
-  
   Glib::RefPtr<Gtk::RadioAction> select_tool_action;
   Glib::RefPtr<Gtk::RadioAction> node_tool_action;
   Glib::RefPtr<Gtk::RadioAction> zoom_tool_action;
@@ -150,6 +150,9 @@
 
   void print(const std::string& text);
   bool remove_message(guint id);
+
+  Glib::RefPtr<Gtk::UIManager>   get_ui_manager() const { return ui_manager; }
+  Glib::RefPtr<Gtk::ActionGroup> get_action_group() const { return action_group; }
   
 private:
   EditorWindow(const EditorWindow&);

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 03:33:07 UTC (rev 2820)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 16:22:03 UTC (rev 2821)
@@ -37,25 +37,25 @@
   treeview.set_enable_tree_lines();
   treeview.set_reorderable();
 
-  // FIXME: Don't create new ones, reuse the EditorWindow ones
-  ui_manager   = Gtk::UIManager::create();
-  action_group = Gtk::ActionGroup::create();
-  
+  Glib::RefPtr<Gtk::UIManager>   ui_manager   = editor.get_ui_manager();
+  Glib::RefPtr<Gtk::ActionGroup> action_group = Gtk::ActionGroup::create();
+
+  action_group->add(Gtk::Action::create("MenuLayer",   "_Layer"));
   action_group->add(Gtk::Action::create("NewLayer", Gtk::Stock::NEW),
                     sigc::mem_fun(editor, &EditorWindow::on_new_layer));
   action_group->add(Gtk::Action::create("DeleteLayer", Gtk::Stock::DELETE),
                     sigc::mem_fun(editor, &EditorWindow::on_delete_layer));
 
-  action_group->add(Gtk::Action::create_with_icon_name("ShowAll", "show_all", "Show All", "Show All Layer"),
+  action_group->add(Gtk::Action::create_with_icon_name("ShowAllLayer", "show_all", "Show All", "Show All Layer"),
                     sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_show_all), true));
-  action_group->add(Gtk::Action::create_with_icon_name("HideAll", "hide_all", "Hide All", "Hide All Layer"),
+  action_group->add(Gtk::Action::create_with_icon_name("HideAllLayer", "hide_all", "Hide All", "Hide All Layer"),
                     sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_show_all), false));
-  action_group->add(Gtk::Action::create_with_icon_name("LockAll", "lock_all", "Lock All", "Lock All Layer"),
+  action_group->add(Gtk::Action::create_with_icon_name("LockAllLayer", "lock_all", "Lock All", "Lock All Layer"),
                     sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_lock_all), true));
-  action_group->add(Gtk::Action::create_with_icon_name("UnlockAll", "unlock_all", "Unlock All", "Unlock All Layer"),
+  action_group->add(Gtk::Action::create_with_icon_name("UnlockAllLayer", "unlock_all", "Unlock All", "Unlock All Layer"),
                     sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_lock_all), false));
 
-  auto_lock = Gtk::ToggleAction::create_with_icon_name("AutoLock", "auto_lock", "Auto Lock All", "All layers except the current ones are treated as locked");
+  auto_lock = Gtk::ToggleAction::create_with_icon_name("AutoLockLayer", "auto_lock", "Auto Lock All", "All layers except the current ones are treated as locked");
   action_group->add(auto_lock,
                     sigc::bind(sigc::mem_fun(*this, &LayerManager::on_auto_lock), auto_lock));
                     //sigc::bind(sigc::mem_fun(editor, &EditorWindow::on_auto_lock), auto_lock));
@@ -63,21 +63,21 @@
   ui_manager->insert_action_group(action_group);
 
   ui_manager->add_ui_from_string("<ui>"
-                                 "  <toolbar  name='ToolBar'>"
+                                 "  <toolbar  name='LayerManagerToolBar'>"
                                  "    <toolitem action='NewLayer'/>"
                                  "    <toolitem action='DeleteLayer'/>"
                                  "    <separator/>"
-                                 "    <toolitem action='ShowAll'/>"
-                                 "    <toolitem action='HideAll'/>"
+                                 "    <toolitem action='ShowAllLayer'/>"
+                                 "    <toolitem action='HideAllLayer'/>"
                                  "    <separator/>"
-                                 "    <toolitem action='LockAll'/>"
-                                 "    <toolitem action='UnlockAll'/>"
+                                 "    <toolitem action='LockAllLayer'/>"
+                                 "    <toolitem action='UnlockAllLayer'/>"
                                  "    <separator/>"
-                                 "    <toolitem action='AutoLock'/>"
+                                 "    <toolitem action='AutoLockLayer'/>"
                                  "  </toolbar>"
                                  "</ui>");
   
-  Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/ToolBar"));
+  Gtk::Toolbar& toolbar = dynamic_cast<Gtk::Toolbar&>(*ui_manager->get_widget("/LayerManagerToolBar"));
 
   treeview.signal_cursor_changed().connect(sigc::mem_fun(*this, &LayerManager::on_cursor_changed));
   //treeview.signal_columns_changed().connect(sigc::mem_fun(*this, &LayerManager::on_columns_changed));

Modified: trunk/windstille/src/editor/layer_manager.hpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.hpp	2009-03-30 03:33:07 UTC (rev 2820)
+++ trunk/windstille/src/editor/layer_manager.hpp	2009-03-30 16:22:03 UTC (rev 2821)
@@ -38,8 +38,6 @@
   Gtk::ScrolledWindow scrolled;
   Gtk::TreeView treeview;
 
-  Glib::RefPtr<Gtk::UIManager>    ui_manager;
-  Glib::RefPtr<Gtk::ActionGroup>  action_group;
   Glib::RefPtr<Gtk::ToggleAction> auto_lock;
 
 public:



From grumbel at mail.berlios.de  Mon Mar 30 18:41:34 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 18:41:34 +0200
Subject: [Windstille-commit] r2822 - in trunk/windstille/data: images/decal
	sectors/trainstation
Message-ID: <200903301641.n2UGfYXu021476@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 18:41:32 +0200 (Mon, 30 Mar 2009)
New Revision: 2822

Added:
   trunk/windstille/data/images/decal/lamp1.png
   trunk/windstille/data/images/decal/lamp1_highlight.png
   trunk/windstille/data/sectors/trainstation/office.wst
Modified:
   trunk/windstille/data/sectors/trainstation/trainstation.wst
Log:
Some more experimentation with levels and graphics

Added: trunk/windstille/data/images/decal/lamp1.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/lamp1.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/images/decal/lamp1_highlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/images/decal/lamp1_highlight.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Added: trunk/windstille/data/sectors/trainstation/office.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/office.wst	2009-03-30 16:22:03 UTC (rev 2821)
+++ trunk/windstille/data/sectors/trainstation/office.wst	2009-03-30 16:41:32 UTC (rev 2822)
@@ -0,0 +1,644 @@
+;; -*- scheme -*-
+
+(windstille-sector
+  (version 1)
+  (name "")
+  (ambient-color 0 0 0 1)
+  (init-script "init.nut")
+  (layer
+    (name "Scene")
+    (visible 1)
+    (locked 1)
+    (objects)
+    (child-layers
+      (layer
+        (name "Character")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (id "0x8e57030")
+            (pos 24 457)
+            (parent "")
+            (layer 1)
+            (path "images/decal/humanreference.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Light")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (id "0x891cc78")
+            (pos -176.66 473.947)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (id "0x89ec2e0")
+            (pos 359.466 456.262)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (id "0x8e51358")
+            (pos -739.878 477.707)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (id "0x891f7b0")
+            (pos -1203.21 476.314)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (id "0x8e56050")
+            (pos 838.744 503.93)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1))
+          (decal
+            (id "0x89e9fd0")
+            (pos 241.479 454.773)
+            (parent "")
+            (layer 1)
+            (path "images/decal/light.png")
+            (type 1)))
+        (child-layers))
+      (layer
+        (name "Ground")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (id "0x89e9820")
+            (pos 130 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e8f70")
+            (pos 386 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e90d8")
+            (pos 642 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e61c0")
+            (pos 130 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e6260")
+            (pos 386 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e62c8")
+            (pos 642 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e6360")
+            (pos -638 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e6438")
+            (pos -382 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e6510")
+            (pos -126 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e65e8")
+            (pos -638 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e66c0")
+            (pos -382 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e6798")
+            (pos -126 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e6870")
+            (pos -1406 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e6948")
+            (pos -1150 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e6a20")
+            (pos -894 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89e6af8")
+            (pos -1406 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e6bd0")
+            (pos -1150 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89e6ca8")
+            (pos -894 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x8a4d980")
+            (pos 898 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x8e44548")
+            (pos 898 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x8e57b98")
+            (pos 1410 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x8e50ec8")
+            (pos 1154 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0))
+          (decal
+            (id "0x89f2cd0")
+            (pos 1154 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x8e54708")
+            (pos 1410 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x89207f8")
+            (pos 1666 124)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueroof.png")
+            (type 0))
+          (decal
+            (id "0x8e50628")
+            (pos 1666 636)
+            (parent "")
+            (layer 1)
+            (path "images/objects/blueground.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Lights")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (id "0x89e7a30")
+            (pos -185.687 478)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1.png")
+            (type 0))
+          (decal
+            (id "0x89e9a08")
+            (pos -186.087 454.328)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1_highlight.png")
+            (type 2))
+          (decal
+            (id "0x8e508a0")
+            (pos -697.391 478)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1.png")
+            (type 0))
+          (decal
+            (id "0x8e505f0")
+            (pos -697.791 454.328)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1_highlight.png")
+            (type 2))
+          (decal
+            (id "0x8e502e0")
+            (pos -1218 458.328)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1_highlight.png")
+            (type 2))
+          (decal
+            (id "0x8e501f8")
+            (pos -1218.6 478)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1.png")
+            (type 0))
+          (decal
+            (id "0x8e50e30")
+            (pos 143.113 478)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1.png")
+            (type 0))
+          (decal
+            (id "0x892ce68")
+            (pos 142.713 454.328)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1_highlight.png")
+            (type 2))
+          (decal
+            (id "0x8e54a10")
+            (pos 370.625 454.328)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1_highlight.png")
+            (type 2))
+          (decal
+            (id "0x8e45cf0")
+            (pos 371.025 478)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1.png")
+            (type 0))
+          (decal
+            (id "0x8e54f10")
+            (pos 721.247 478)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1.png")
+            (type 0))
+          (decal
+            (id "0x8e546c8")
+            (pos 720.847 454.328)
+            (parent "")
+            (layer 1)
+            (path "images/decal/lamp1_highlight.png")
+            (type 2)))
+        (child-layers))
+      (layer
+        (name "Character")
+        (visible 1)
+        (locked 1)
+        (objects)
+        (child-layers))
+      (layer
+        (name "Stuff")
+        (visible 1)
+        (locked 0)
+        (objects
+          (decal
+            (id "0x8e58390")
+            (pos 546.349 496)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0))
+          (decal
+            (id "0x8928010")
+            (pos -21.9375 496)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0))
+          (decal
+            (id "0x89e9d10")
+            (pos -435.526 496)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0))
+          (decal
+            (id "0x8e50798")
+            (pos -965.526 496)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0))
+          (decal
+            (id "0x8df5cf0")
+            (pos 956.427 496)
+            (parent "")
+            (layer 1)
+            (path "images/decal/bench.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "Shadow")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (id "0x89f2dd8")
+            (pos 253.75 47.375)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (id "0x8ad8ce8")
+            (pos 238.125 713)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (id "0x8ad8d78")
+            (pos 563.125 702.062)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (id "0x8ad8e48")
+            (pos 255.313 430)
+            (parent "")
+            (layer 1)
+            (path "images/decal/train_door.png")
+            (type 0))
+          (decal
+            (id "0x89e5888")
+            (pos -175 635)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (id "0x8e547f8")
+            (pos -702.376 610.672)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0))
+          (decal
+            (id "0x8e54f60")
+            (pos -1181.38 644.672)
+            (parent "")
+            (layer 1)
+            (path "images/decal/dark.png")
+            (type 0)))
+        (child-layers))
+      (layer
+        (name "BackgroundWall")
+        (visible 1)
+        (locked 1)
+        (objects
+          (decal
+            (id "0x8ad9930")
+            (pos 578 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x8ad9cb8")
+            (pos 962 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8a4c270")
+            (pos 450 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8a4c2e8")
+            (pos 66 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8a4cc28")
+            (pos 322 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8a4ccb8")
+            (pos 194 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x8a4cd88")
+            (pos -190 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x8a4ce58")
+            (pos -62 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8a4cf28")
+            (pos -318 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8a4cff8")
+            (pos -702 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8a4d0c8")
+            (pos -446 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8a4d198")
+            (pos -574 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x8a4d268")
+            (pos -958 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x8a4d338")
+            (pos -830 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8a4d408")
+            (pos -1086 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8a4d4d8")
+            (pos -1470 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8a4d5a8")
+            (pos -1214 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8a4d678")
+            (pos -1342 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x891f6c0")
+            (pos 834 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x89e7048")
+            (pos 1090 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8e54660")
+            (pos 706 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x89ec350")
+            (pos 1474 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x89f0a68")
+            (pos 1346 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall2.png")
+            (type 0))
+          (decal
+            (id "0x89e4778")
+            (pos 1602 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0))
+          (decal
+            (id "0x8e50090")
+            (pos 1218 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall1.png")
+            (type 0))
+          (decal
+            (id "0x8e44970")
+            (pos 1730 380)
+            (parent "")
+            (layer 1)
+            (path "images/decal/wall3.png")
+            (type 0)))
+        (child-layers)))))
+
+;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-30 16:22:03 UTC (rev 2821)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-30 16:41:32 UTC (rev 2822)
@@ -1,4 +1,5 @@
 ;; -*- scheme -*-
+
 (windstille-sector
   (version 1)
   (name "")
@@ -8,8 +9,7 @@
     (name "Trainstation")
     (visible 1)
     (locked 1)
-    (objects
-      )
+    (objects)
     (child-layers
       (layer
         (name "Daylight")
@@ -17,1414 +17,1268 @@
         (locked 1)
         (objects
           (decal
+            (id "0xa0bd010")
             (pos -855.442 319.354)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bfa48")
             (pos -1297.52 365.776)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bfaf0")
             (pos -1402.7 340.058)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bfbc8")
             (pos -1099.97 336.543)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bfca0")
             (pos -1569.48 329.078)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 2)))
+        (child-layers))
       (layer
         (name "Lights")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0bffa8")
             (pos 1630.08 1070.32)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0030")
             (pos 983.756 904.953)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0100")
             (pos 315.072 868.593)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0600")
             (pos -1636 909.933)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c06a8")
             (pos -810.844 849.183)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0778")
             (pos 1559.83 804.374)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0848")
             (pos -259.112 903.761)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0918")
             (pos -477.046 760.753)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c09e8")
             (pos -1553.29 729.292)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0c0ab8")
             (pos -1169.49 799.75)
             (parent "")
             (layer 1)
             (path "images/decal/light.png")
-            (type 1)
-            )
-          )
+            (type 1)))
         (child-layers
           (layer
             (name "ExtraLight")
             (visible 1)
-            (locked 0)
+            (locked 1)
             (objects
               (decal
+                (id "0xa0c0c58")
                 (pos -402.054 1017.24)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
+                (id "0xa0c0ce0")
                 (pos 161.91 1097.81)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
-                (pos 914.125 543.869)
+                (id "0xa0c0db0")
+                (pos 860.719 704.086)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
-                (pos 208.559 631.76)
+                (id "0xa0c0e80")
+                (pos 208.559 708.054)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
+                (id "0xa0c0f50")
                 (pos -845.605 1035.11)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
+                (id "0xa0c1020")
                 (pos -332.91 1098.59)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
+                (id "0xa0c10f0")
                 (pos -1151.04 1059.27)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
+                (id "0xa01a398")
                 (pos -1663.74 995.791)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
+                (type 1))
               (decal
+                (id "0xa01a468")
                 (pos 943.16 1149.08)
                 (parent "")
                 (layer 1)
                 (path "images/decal/light.png")
-                (type 1)
-                )
-              )
-            (child-layers
-              )
-            )
-          )
-        )
+                (type 1)))
+            (child-layers))))
       (layer
         (name "Shadow")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0c0c00")
             (pos -2249.87 1060.44)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a5f8")
             (pos -2244.5 972.452)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a670")
             (pos -2151.95 1070.86)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a710")
             (pos -2223.31 378.014)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a7b0")
             (pos -2222.56 441.264)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a850")
             (pos -2231.18 652.952)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a8f0")
             (pos -2231.93 589.702)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01a990")
             (pos -2223.79 825.967)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01aa30")
             (pos -2016.48 1029.67)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01af20")
             (pos -2047.33 560.924)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01afc0")
             (pos -2080.6 782.737)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Roof")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa01b168")
             (pos -132.297 329.766)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01b210")
             (pos 378.703 329.766)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01b2e0")
             (pos 1400.7 331.719)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01b3b0")
             (pos 889.703 331.719)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01b480")
             (pos 2422.7 331.719)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa01b550")
             (pos 1911.7 331.719)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bff20")
             (pos -1652.53 298.683)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bd110")
             (pos -771.438 410.719)
             (parent "")
             (layer 1)
             (path "images/decal/roof.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bd1e0")
             (pos -1141.53 298.683)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bd2b0")
             (pos -2163.53 298.683)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bd380")
             (pos -2674.53 298.683)
             (parent "")
             (layer 1)
             (path "images/decal/roof2.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Train2")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (pos -2091.92 941.347)
-            (parent "")
+            (id "0xa0bed58")
+            (pos -752 0)
+            (parent "0xa6c5410")
             (layer 1)
-            (path "images/decal/train_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos -750.047 0)
-            (parent "DecalObjectModel")
-            (layer 1)
             (path "images/decal/train_front.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa602318")
             (pos 696 0)
-            (parent "DecalObjectModel")
+            (parent "0xa6c5410")
             (layer 1)
             (path "images/decal/train_back.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos -548.875 240.234)
-            (parent "DecalObjectModel")
+            (id "0xa6c5410")
+            (pos -2098.65 942.97)
+            (parent "")
             (layer 1)
+            (path "images/decal/train_middle.png")
+            (type 0))
+          (decal
+            (id "0xa09f838")
+            (pos -586.991 241.125)
+            (parent "0xa6c5410")
+            (layer 1)
             (path "images/decal/train_engine_front.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 631.125 241.234)
-            (parent "DecalObjectModel")
+            (id "0xa851e48")
+            (pos 593.009 242.125)
+            (parent "0xa6c5410")
             (layer 1)
             (path "images/decal/train_engine_back.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos -168.875 240.234)
-            (parent "DecalObjectModel")
+            (id "0xab003d0")
+            (pos -206.991 241.125)
+            (parent "0xa6c5410")
             (layer 1)
             (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 287.125 240.234)
-            (parent "DecalObjectModel")
+            (id "0xa099b20")
+            (pos 249.009 241.125)
+            (parent "0xa6c5410")
             (layer 1)
             (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 2.83435 -15.7656)
-            (parent "DecalObjectModel")
+            (id "0xaafed60")
+            (pos 0.719482 -14.875)
+            (parent "0xa6c5410")
             (layer 1)
             (path "images/decal/train_door.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Lamps")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0bd498")
             (pos 266.7 554.465)
             (parent "")
             (layer 1)
             (path "images/objects/apartmentlamp_light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0bd578")
             (pos 999.122 579.855)
             (parent "")
             (layer 1)
             (path "images/objects/apartmentlamp_light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0bd658")
             (pos 1651.47 577.902)
             (parent "")
             (layer 1)
             (path "images/objects/apartmentlamp_light.png")
-            (type 1)
-            )
+            (type 1))
           (decal
+            (id "0xa0bd738")
             (pos 1660.56 541.188)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bd810")
             (pos 998.057 533.375)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bdcf0")
             (pos 237.12 549)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp_bloom.png")
-            (type 2)
-            )
+            (type 2))
           (decal
+            (id "0xa0bddc8")
             (pos 1642.66 434.301)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bdea0")
             (pos 982.958 428.895)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bdf78")
             (pos 231.267 426.715)
             (parent "")
             (layer 1)
             (path "images/decal/rooflamp.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Decor Items")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0bef08")
             (pos 240.218 886.438)
             (parent "")
             (layer 1)
             (path "images/decal/board.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bef70")
             (pos 934.407 913.438)
             (parent "")
             (layer 1)
             (path "images/decal/terminal.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bf048")
             (pos -163.625 985.44)
             (parent "")
             (layer 1)
             (path "images/decal/bench.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bf118")
             (pos 578.562 985.44)
             (parent "")
             (layer 1)
             (path "images/decal/bench.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be058")
             (pos 1244.19 985.44)
             (parent "")
             (layer 1)
             (path "images/decal/bench.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be128")
             (pos 1689.49 985.44)
             (parent "")
             (layer 1)
             (path "images/decal/bench.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be1f8")
             (pos 2006.69 985.44)
             (parent "")
             (layer 1)
             (path "images/decal/bench.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be2c8")
             (pos 424.131 1013.44)
             (parent "")
             (layer 1)
             (path "images/objects/plant.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be3a0")
             (pos -1002.18 1013.44)
             (parent "")
             (layer 1)
             (path "images/objects/plant.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be478")
             (pos -914.086 1013.44)
             (parent "")
             (layer 1)
             (path "images/objects/plant.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be550")
             (pos -832.618 1013.44)
             (parent "")
             (layer 1)
             (path "images/objects/plant.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0be628")
             (pos 1064.43 1014.67)
             (parent "")
             (layer 1)
             (path "images/objects/plant.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017a40")
             (pos 676.954 1029.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017b10")
             (pos 612.954 1029.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017be0")
             (pos 648.954 965.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017cb0")
             (pos 740.954 1029.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017d80")
             (pos 584.954 965.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017e50")
             (pos 548.954 1029.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017f20")
             (pos 706.554 965.44)
             (parent "")
             (layer 1)
             (path "images/objects/box.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa017ff0")
             (pos 28.218 973.438)
             (parent "")
             (layer 1)
             (path "images/decal/trashcan.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa018098")
             (pos 1448.12 973.44)
             (parent "")
             (layer 1)
             (path "images/decal/trashcan.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Railground")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa018d00")
             (pos -249.032 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa018dd0")
             (pos -761.032 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa018ea0")
             (pos -2297.03 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa018f70")
             (pos -1785.03 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019040")
             (pos -1273.03 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019110")
             (pos 262.968 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0191e0")
             (pos 774.968 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0192b0")
             (pos 1798.97 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019380")
             (pos 1286.97 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019450")
             (pos 1670.97 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019520")
             (pos 1926.97 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0195f0")
             (pos 1414.97 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0196c0")
             (pos 1158.97 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019790")
             (pos 2214.14 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019860")
             (pos 1702.14 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019930")
             (pos 1958.14 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa019a00")
             (pos 1446.14 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaae9e28")
             (pos -121.032 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaae9ef8")
             (pos -377.032 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaae9fc8")
             (pos 646.968 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea098")
             (pos 902.968 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea168")
             (pos 390.968 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea238")
             (pos 134.968 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea308")
             (pos 1190.13 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea3d8")
             (pos 934.13 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea4a8")
             (pos 422.13 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea578")
             (pos 166.13 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea648")
             (pos 678.13 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea718")
             (pos -89.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea7e8")
             (pos -889.032 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea8b8")
             (pos -633.032 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaea988")
             (pos -345.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeaa58")
             (pos -601.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeab28")
             (pos -1369.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeabf8")
             (pos -1881.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeacc8")
             (pos -1625.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaead98")
             (pos -1113.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeae68")
             (pos -857.872 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeaf38")
             (pos -1145.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb008")
             (pos -1657.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb0d8")
             (pos -1401.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb1a8")
             (pos -1913.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb278")
             (pos -2169.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb348")
             (pos -3193.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb418")
             (pos -2937.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb4e8")
             (pos -2681.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb5b8")
             (pos -2649.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb688")
             (pos -2905.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb758")
             (pos -2809.03 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb828")
             (pos -3321.03 1380.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone2.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb8f8")
             (pos -2393.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeb9c8")
             (pos -2137.87 1187.44)
             (parent "")
             (layer 1)
             (path "images/decal/rail.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeba98")
             (pos -2425.03 1273.44)
             (parent "")
             (layer 1)
             (path "images/decal/stone.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Endwall")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa018398")
             (pos -1681.93 441.438)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaebbb8")
             (pos -1681.93 313.438)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaebc68")
             (pos -1681.93 953.438)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaebd18")
             (pos -1681.93 825.438)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaebdc8")
             (pos -1681.93 569.438)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaebe78")
             (pos -1681.93 697.438)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaebf28")
             (pos -1681.93 1081.44)
             (parent "")
             (layer 1)
             (path "images/objects/elevatordoor_left.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos -752 0)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_front.png")
-            (type 0)
-            )
-          (decal
-            (pos 695.219 0)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_back.png")
-            (type 0)
-            )
-          (decal
-            (pos 2499.87 939.394)
-            (parent "")
-            (layer 1)
-            (path "images/decal/train_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos -550.828 240.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_front.png")
-            (type 0)
-            )
-          (decal
-            (pos 629.172 241.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_back.png")
-            (type 0)
-            )
-          (decal
-            (pos -170.828 240.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos 285.172 240.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos 2.83441 -15.7656)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_door.png")
-            (type 0)
-            )
-          (decal
-            (pos -752 0)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_front.png")
-            (type 0)
-            )
-          (decal
-            (pos 695.219 0)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_back.png")
-            (type 0)
-            )
-          (decal
-            (pos 2499.87 939.394)
-            (parent "")
-            (layer 1)
-            (path "images/decal/train_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos -550.828 240.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_front.png")
-            (type 0)
-            )
-          (decal
-            (pos 629.172 241.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_back.png")
-            (type 0)
-            )
-          (decal
-            (pos -170.828 240.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos 285.172 240.234)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
-          (decal
-            (pos 2.83441 -15.7656)
-            (parent "DecalObjectModel")
-            (layer 1)
-            (path "images/decal/train_door.png")
-            (type 0)
-            )
-          (decal
+            (id "0xaaebfd8")
             (pos -1883.06 1017.44)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec050")
             (pos -2253.06 1017.44)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec0f8")
             (pos -2253.06 757.687)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec1a0")
             (pos -1883.06 757.687)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec248")
             (pos -2253.06 501.687)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec2f0")
             (pos -1883.06 501.687)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec398")
             (pos -2251.49 245.687)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec440")
             (pos -1881.49 245.687)
             (parent "")
             (layer 1)
             (path "images/decal/steelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec4e8")
             (pos -1763.88 1198.81)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec560")
             (pos -2080.29 1241.78)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec5d8")
             (pos -2400.6 1212.48)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec678")
             (pos -2376.41 267.922)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec718")
             (pos -2118.6 301.125)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec7b8")
             (pos -1854.93 254.25)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Ground")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0184a8")
             (pos 1836.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0bec80")
             (pos 2144.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0becf8")
             (pos -1551.87 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec8a0")
             (pos -1243.87 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec940")
             (pos -935.87 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaec9e0")
             (pos -627.87 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaeca80")
             (pos -319.87 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaecb20")
             (pos -11.87 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaecbc0")
             (pos 296.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaecc90")
             (pos 604.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaecd60")
             (pos 912.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaece30")
             (pos 1220.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xaaecf00")
             (pos 1528.13 1103.44)
             (parent "")
             (layer 1)
             (path "images/decal/ground.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Stairs")
         (visible 1)
         (locked 1)
-        (objects
-          )
+        (objects)
         (child-layers
           (layer
             (name "Shadow")
@@ -1432,851 +1286,825 @@
             (locked 1)
             (objects
               (decal
+                (id "0xaaedd08")
                 (pos -1672.24 1055.45)
                 (parent "")
                 (layer 1)
                 (path "images/decal/dark.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaeddb0")
                 (pos -1743.76 802.297)
                 (parent "")
                 (layer 1)
                 (path "images/decal/dark.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaede80")
                 (pos -1723.47 1039.37)
                 (parent "")
                 (layer 1)
                 (path "images/decal/dark.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaedf50")
                 (pos -1744.37 547.859)
                 (parent "")
                 (layer 1)
                 (path "images/decal/dark.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaee020")
                 (pos -1484.44 1141.69)
                 (parent "")
                 (layer 1)
                 (path "images/decal/dark.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaee0f0")
                 (pos -937.569 1133.87)
                 (parent "")
                 (layer 1)
                 (path "images/decal/dark.png")
-                (type 0)
-                )
-              )
-            (child-layers
-              )
-            )
+                (type 0)))
+            (child-layers))
           (layer
             (name "StairHandle")
             (visible 1)
             (locked 1)
             (objects
               (decal
+                (id "0xaaed210")
                 (pos -616.808 986.023)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaed2a8")
                 (pos -747.308 903.961)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaed360")
                 (pos -866.058 819.586)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xaaed438")
                 (pos -994.995 739.086)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a1e50")
                 (pos -1121.56 643.773)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a1f28")
                 (pos -1266.12 541.398)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2000")
                 (pos -1417.24 435.273)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a20d8")
                 (pos -616.808 986.023)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a21b0")
                 (pos -1548.99 346.023)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2288")
                 (pos -1513.04 261.304)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2360")
                 (pos -1401.54 337.804)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2438")
                 (pos -1284.79 418.304)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2510")
                 (pos -1168.6 497.851)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a25e8")
                 (pos -1055.1 576.164)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a26c0")
                 (pos -951.354 648.164)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2798")
                 (pos -951.354 648.164)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2870")
                 (pos -840.354 724.914)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2948")
                 (pos -727.167 804.352)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2a20")
                 (pos -618.354 880.164)
                 (parent "")
                 (layer 1)
                 (path "images/decal/handrail2.png")
-                (type 0)
-                )
-              )
-            (child-layers
-              )
-            )
+                (type 0)))
+            (child-layers))
           (layer
             (name "Stairs")
             (visible 1)
             (locked 1)
             (objects
               (decal
+                (id "0xaaed1d8")
                 (pos -1136.93 991.617)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a3600")
                 (pos -908.368 955.628)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a3678")
                 (pos -1135.37 789.851)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a3718")
                 (pos -1585.06 933.992)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2b20")
                 (pos -1360.81 868.503)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2bc0")
                 (pos -1356.49 631.226)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2c60")
                 (pos -1583.49 700.43)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2d00")
                 (pos -1583.49 453.94)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2da0")
                 (pos -1196.46 916.438)
                 (parent "")
                 (layer 1)
                 (path "images/decal/door.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a2e58")
                 (pos -681.368 1109.43)
                 (parent "")
                 (layer 1)
                 (path "images/decal/stairs.png")
-                (type 0)
-                )
-              )
-            (child-layers
-              )
-            )
+                (type 0)))
+            (child-layers))
           (layer
             (name "StairWall")
             (visible 1)
             (locked 1)
             (objects
               (decal
+                (id "0xa0a90c8")
                 (pos -658.251 306.508)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a9160")
                 (pos -658.251 434.508)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4200")
                 (pos -656.688 690.508)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a42d8")
                 (pos -656.688 562.508)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a43b0")
                 (pos -1424.46 307.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4488")
                 (pos -656.462 935.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/tunnelplate_bottom.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4568")
                 (pos -656.688 818.508)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4640")
                 (pos -656.688 946.508)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4718")
                 (pos -656.688 1074.51)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a47f0")
                 (pos -1424.46 563.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a48c8")
                 (pos -1424.46 691.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a49a0")
                 (pos -1424.46 435.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4a78")
                 (pos -1424.46 819.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4b50")
                 (pos -1168.46 819.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4c28")
                 (pos -1168.46 435.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4d00")
                 (pos -1168.46 691.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4dd8")
                 (pos -1168.46 563.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4eb0")
                 (pos -1168.46 307.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a4f88")
                 (pos -912.462 307.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a5060")
                 (pos -912.462 563.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a5138")
                 (pos -912.462 691.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a5210")
                 (pos -912.462 435.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
+                (type 0))
               (decal
+                (id "0xa0a52e8")
                 (pos -912.462 819.117)
                 (parent "")
                 (layer 1)
                 (path "images/decal/wallplate.png")
-                (type 0)
-                )
-              )
-            (child-layers
-              )
-            )
-          )
-        )
+                (type 0)))
+            (child-layers))))
       (layer
         (name "WallShadow")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0a7a88")
             (pos -498.687 804.29)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a7980")
             (pos -418.187 492.016)
             (parent "")
             (layer 1)
             (path "images/decal/dark.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Train")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0a3138")
             (pos -752 0)
-            (parent "DecalObjectModel")
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_front.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 695.219 0)
-            (parent "DecalObjectModel")
+            (id "0xaaed170")
+            (pos 696 0)
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_back.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 2499.87 939.394)
+            (id "0xa0a3038")
+            (pos 1705.54 939.785)
             (parent "")
             (layer 1)
             (path "images/decal/train_middle.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos -550.828 240.234)
-            (parent "DecalObjectModel")
+            (id "0xa0a7848")
+            (pos -586.991 241.125)
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_engine_front.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 629.172 241.234)
-            (parent "DecalObjectModel")
+            (id "0xa0a7ef0")
+            (pos 593.009 242.125)
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_engine_back.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos -170.828 240.234)
-            (parent "DecalObjectModel")
+            (id "0xa0a8010")
+            (pos -206.991 241.125)
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 285.172 240.234)
-            (parent "DecalObjectModel")
+            (id "0xa0a8130")
+            (pos 249.009 241.125)
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_engine_middle.png")
-            (type 0)
-            )
+            (type 0))
           (decal
-            (pos 2.83441 -15.7656)
-            (parent "DecalObjectModel")
+            (id "0xa0a8250")
+            (pos 0.719482 -14.875)
+            (parent "0xa0a3038")
             (layer 1)
             (path "images/decal/train_door.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
+            (type 0)))
+        (child-layers))
       (layer
         (name "Tunnel Wall")
         (visible 1)
         (locked 1)
         (objects
           (decal
+            (id "0xa0a87e8")
             (pos 1790.43 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a53c8")
             (pos 2046.43 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5488")
             (pos 1278.43 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5568")
             (pos 1534.43 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5648")
             (pos 1022.43 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5728")
             (pos 2165.35 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5808")
             (pos 2101.35 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a58e0")
             (pos 2037.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a59c0")
             (pos 1781.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5aa0")
             (pos 1845.35 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5b78")
             (pos 1909.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5c58")
             (pos 1397.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5d38")
             (pos 1333.35 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5e10")
             (pos 1269.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5ef0")
             (pos 1525.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a5fd0")
             (pos 1589.35 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a60a8")
             (pos 1653.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6188")
             (pos 629.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6268")
             (pos 565.354 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6340")
             (pos 501.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6420")
             (pos 245.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6500")
             (pos 309.354 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a65d8")
             (pos 373.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a66b8")
             (pos 885.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6798")
             (pos 821.354 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6870")
             (pos 757.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6950")
             (pos 1013.35 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6a30")
             (pos 1077.35 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6b08")
             (pos 1141.34 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6be8")
             (pos -394.638 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6cc8")
             (pos -138.648 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6da8")
             (pos -202.646 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6e80")
             (pos -266.648 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a6f60")
             (pos -10.6475 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a7040")
             (pos 53.3544 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a7118")
             (pos 117.352 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a71f8")
             (pos 766.427 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a72d8")
             (pos 510.427 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a9208")
             (pos 254.427 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a92d0")
             (pos -458.636 464.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a93a8")
             (pos -522.638 656.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_small.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a9488")
             (pos -1.57263 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a9568")
             (pos -257.573 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
+            (type 0))
           (decal
+            (id "0xa0a9648")
             (pos -513.573 900.717)
             (parent "")
             (layer 1)
             (path "images/decal/tunnelplate_bottom.png")
-            (type 0)
-            )
-          )
-        (child-layers
-          )
-        )
-      )
-    )
-  )
+            (type 0)))
+        (child-layers)))))
 
 ;; EOF ;;



From grumbel at mail.berlios.de  Mon Mar 30 19:54:38 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 19:54:38 +0200
Subject: [Windstille-commit] r2823 - in trunk/windstille: . src/editor
Message-ID: <200903301754.n2UHscDC028179@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 19:54:36 +0200 (Mon, 30 Mar 2009)
New Revision: 2823

Modified:
   trunk/windstille/TODO
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
Log:
Ignore objects on move whose parents are in the selection to avoid double-move issue

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-30 16:41:32 UTC (rev 2822)
+++ trunk/windstille/TODO	2009-03-30 17:54:36 UTC (rev 2823)
@@ -203,10 +203,6 @@
 * remove GameObject::get_world(), use Sector::current() instead
   (difference might matter on sector change)
 
-* raise/lower of multiple objects at once is a bit wonky, when objects
-  reach the bottom/top they will change their relative order in the
-  selection
-
 * move has_suffix, has_prefix and stuff into StringUtil class
 
 * get rid of global debug
@@ -506,26 +502,34 @@
 Editor
 ======
 
-* QuadTree could be useful when levels get larger
-
-* make use of Statusbar
-  - display mouse coordinates in WorldCo
-  - display what Ctrl/Shift do for the current tool
-
 * reevaluate the current parent/child implementation, since its very
   tricky currently to move a parent without affecting the child, which
   might be useful in some situation (i.e. hold Ctrl pressed to move
   only the parent, not the children). Other issues:
 
-  - loading doesn't preserve parentship **IMPORTANT**
   - parents could be handled like normal objects, but with the
     SelectTool traversing all children and marking them before the
-    move begings, Ctrl could be used to toggle this behaviour
+    move begings, Ctrl could be used to toggle this behaviour (sounds
+    a little weird, we also don't have a way to iterate children from
+    a parent)
+
   - having classic groups of objects, where clicking one object moves
     all in the group could be useful (like when each object is parent
-    to each other object in the group)
-  - parent refers to name, but name isn't guranteed unique, so loading/saving breaks
+    to each other object in the group), wouldn't allow an easy way to
+    edit objects in the Group, which however might be a good thing
 
+* raise/lower of multiple objects at once is a bit wonky, when objects
+  reach the bottom/top they will change their relative order in the
+  selection
+
+* set cursor in LayerManager when loading a level
+
+* QuadTree could be useful when levels get larger
+
+* make use of Statusbar
+  - display mouse coordinates in WorldCo
+  - display what Ctrl/Shift do for the current tool
+
 * New Layer System:
 
   - rename HardLayer to Layer and Layers to LayerMask/SelectionMask

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-30 16:41:32 UTC (rev 2822)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-30 17:54:36 UTC (rev 2823)
@@ -61,13 +61,43 @@
   return it != objects.end();
 }
 
+bool
+Selection::contains(ObjectModelHandle object) const
+{
+  return std::find(objects.begin(), objects.end(), object) != objects.end();
+}
+
+bool
+Selection::contains_parent(ObjectModelHandle object)
+{
+  ObjectModelHandle parent = object->get_parent();
+  while (parent)
+    {
+      if (contains(object))
+        return true;
+
+      parent = object->get_parent();
+    }
+
+  return false;
+}
+
 void
 Selection::on_move_start()
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      (*i)->on_move_start();
+      if (contains_parent(*i))
+        {
+          non_moveable_objects.insert(*i);
+        }
     }
+
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      if (non_moveable_objects.find(*i) == non_moveable_objects.end())
+        (*i)->on_move_start();
+    }
 }
 
 void
@@ -75,7 +105,8 @@
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      (*i)->on_move_update(offset);
+      if (non_moveable_objects.find(*i) == non_moveable_objects.end())
+        (*i)->on_move_update(offset);
     }
 }
 
@@ -84,8 +115,11 @@
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      (*i)->on_move_end(offset);
+      if (non_moveable_objects.find(*i) == non_moveable_objects.end())
+        (*i)->on_move_end(offset);
     }
+
+  non_moveable_objects.clear();
 }
 
 SelectionHandle

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-30 16:41:32 UTC (rev 2822)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-30 17:54:36 UTC (rev 2823)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_SELECTION_HPP
 
 #include <vector>
+#include <set>
 #include <boost/shared_ptr.hpp>
 
 #include "object_model.hpp"
@@ -33,6 +34,10 @@
   typedef std::vector<ObjectModelHandle> Objects;
   Objects objects;
 
+  std::set<ObjectModelHandle> non_moveable_objects;
+
+  bool contains_parent(ObjectModelHandle object);
+
 public:
   typedef Objects::iterator iterator;
   typedef Objects::reverse_iterator reverse_iterator;
@@ -65,6 +70,7 @@
   bool empty() const;
   void clear() { objects.clear(); }
 
+  bool contains(ObjectModelHandle object) const;
   bool has_object(ObjectModelHandle object) const;
 
   void on_move_start();



From grumbel at mail.berlios.de  Mon Mar 30 20:03:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 20:03:02 +0200
Subject: [Windstille-commit] r2824 - trunk/windstille/src/editor
Message-ID: <200903301803.n2UI32cE029208@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 20:03:02 +0200 (Mon, 30 Mar 2009)
New Revision: 2824

Modified:
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
Log:
Fixed crash when no path is set in LayerManager

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 17:54:36 UTC (rev 2823)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 18:03:02 UTC (rev 2824)
@@ -129,15 +129,22 @@
       Gtk::TreeModel::Path path;
       Gtk::TreeViewColumn* focus_column;
       treeview.get_cursor(path, focus_column);
-  
-      //std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
-      Gtk::TreeModel::iterator it = treeview.get_model()->get_iter(path);
-      if (it)
+      
+      if (!path.gobj())
         {
-          EditorWindow::current()->on_lock_all(true);
-          (*it)[LayerManagerColumns::instance().locked] = false;
-          ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+          std::cout << "LayerManager::on_cursor_changed(): Error: Couldn't get path" << std::endl;
         }
+      else
+        {
+          //std::cout << "on_cursor_changed: " << path.to_string() << std::endl;
+          Gtk::TreeModel::iterator it = treeview.get_model()->get_iter(path);
+          if (it)
+            {
+              EditorWindow::current()->on_lock_all(true);
+              (*it)[LayerManagerColumns::instance().locked] = false;
+              ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+            }
+        }
     }
 }
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 17:54:36 UTC (rev 2823)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 18:03:02 UTC (rev 2824)
@@ -530,7 +530,10 @@
 
   EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
 
-  sector_model->add(object, path);
+  if (!path.gobj())
+    std::cout << "WindstilleWidget::on_drag_data_received(): Error: Couldn't get path" << std::endl;
+  else
+    sector_model->add(object, path);
 }
 
 void
@@ -579,7 +582,15 @@
   Gtk::TreeViewColumn* focus_column;
   EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
 
-  return sector_model->get_layer(path);  
+  if (!path.gobj())
+    {
+      std::cout << "WindstilleWidget::get_current_layer(): Error: Couldn't get path" << std::endl;
+      return HardLayerHandle();
+    }
+  else
+    {
+      return sector_model->get_layer(path);  
+    }
 }
 
 Gtk::TreeModel::Path
@@ -588,7 +599,16 @@
   Gtk::TreeModel::Path path;
   Gtk::TreeViewColumn* focus_column;
   EditorWindow::current()->get_layer_manager().get_treeview().get_cursor(path, focus_column);
-  return path;
+
+  if (!path.gobj())
+    {
+      std::cout << "WindstilleWidget::get_current_layer_path(): Error: Couldn't get path" << std::endl;
+      return Gtk::TreeModel::Path();
+    }
+  else
+    {
+      return path;
+    }
 }
 
 SectorModel*



From grumbel at mail.berlios.de  Mon Mar 30 20:08:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 20:08:26 +0200
Subject: [Windstille-commit] r2825 - trunk/windstille/src/editor
Message-ID: <200903301808.n2UI8QaJ029882@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 20:08:26 +0200 (Mon, 30 Mar 2009)
New Revision: 2825

Modified:
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
Log:
Ignore objects on move whose parents are in the selection to avoid double-move issue

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-30 18:03:02 UTC (rev 2824)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-30 18:08:26 UTC (rev 2825)
@@ -62,21 +62,15 @@
 }
 
 bool
-Selection::contains(ObjectModelHandle object) const
-{
-  return std::find(objects.begin(), objects.end(), object) != objects.end();
-}
-
-bool
 Selection::contains_parent(ObjectModelHandle object)
 {
   ObjectModelHandle parent = object->get_parent();
   while (parent)
     {
-      if (contains(object))
+      if (has_object(parent))
         return true;
 
-      parent = object->get_parent();
+      parent = parent->get_parent();
     }
 
   return false;

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-30 18:03:02 UTC (rev 2824)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-30 18:08:26 UTC (rev 2825)
@@ -70,7 +70,6 @@
   bool empty() const;
   void clear() { objects.clear(); }
 
-  bool contains(ObjectModelHandle object) const;
   bool has_object(ObjectModelHandle object) const;
 
   void on_move_start();



From grumbel at mail.berlios.de  Mon Mar 30 21:07:50 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 21:07:50 +0200
Subject: [Windstille-commit] r2826 - trunk/windstille/src/editor
Message-ID: <200903301907.n2UJ7odJ004642@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 21:07:49 +0200 (Mon, 30 Mar 2009)
New Revision: 2826

Added:
   trunk/windstille/src/editor/select_mask.hpp
Removed:
   trunk/windstille/src/editor/layers.hpp
Modified:
   trunk/windstille/src/editor/about_window.hpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
   trunk/windstille/src/editor/layer_widget.cpp
   trunk/windstille/src/editor/layer_widget.hpp
   trunk/windstille/src/editor/object_model.cpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Renamed Layer to SelectMask

Modified: trunk/windstille/src/editor/about_window.hpp
===================================================================
--- trunk/windstille/src/editor/about_window.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/about_window.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_ABOUT_WINDOW_HPP
-#define HEADER_ABOUT_WINDOW_HPP
+#ifndef HEADER_WINDSTILLE_EDITOR_ABOUT_WINDOW_HPP
+#define HEADER_WINDSTILLE_EDITOR_ABOUT_WINDOW_HPP
 
 #include <gtkmm/aboutdialog.h>
 #include <gtkmm/box.h>

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -388,7 +388,7 @@
   notebook.set_current_page(new_page);
 
   layer_manager.set_model(wst->get_sector_model());
-  layer_widget->update(wst->get_layer_mask());
+  layer_widget->update(wst->get_select_mask());
 }
 
 void
@@ -684,7 +684,7 @@
   if (WindstilleWidget* wst = get_windstille_widget())
     {
       layer_manager.set_model(wst->get_sector_model());
-      layer_widget->update(wst->get_layer_mask());
+      layer_widget->update(wst->get_select_mask());
 
       toggle_color_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::COLORMAP);
       toggle_light_layer->set_active(wst->get_sc()->get_render_mask() & SceneContext::LIGHTMAP);
@@ -728,7 +728,7 @@
 
   if (WindstilleWidget* wst = get_windstille_widget())
     {
-      wst->get_layer_mask().set(layer, status);
+      wst->get_select_mask().set(layer, status);
       wst->queue_draw();
     }
 }

Modified: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -48,11 +48,11 @@
 }
 
 void
-HardLayer::draw(SceneContext& sc, const Layers& layers)
+HardLayer::draw(SceneContext& sc, const SelectMask& select_mask)
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      if (layers.match((*i)->get_layers()))
+      if (select_mask.match((*i)->get_select_mask()))
         (*i)->draw(sc);
     }
 }
@@ -75,11 +75,11 @@
 }
 
 ObjectModelHandle
-HardLayer::get_object_at(const Vector2f& pos, const Layers& layers) const
+HardLayer::get_object_at(const Vector2f& pos, const SelectMask& select_mask) const
 {
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if (layers.match((*i)->get_layers()) &&
+      if (select_mask.match((*i)->get_select_mask()) &&
           (*i)->get_bounding_box().is_inside(pos))
         {
           return *i;
@@ -89,13 +89,13 @@
 }
 
 SelectionHandle
-HardLayer::get_selection(const Rectf& rect, const Layers& layers) const
+HardLayer::get_selection(const Rectf& rect, const SelectMask& select_mask) const
 {
  SelectionHandle selection = Selection::create();
 
   for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
     {
-      if (layers.match((*i)->get_layers()) &&
+      if (select_mask.match((*i)->get_select_mask()) &&
           rect.contains((*i)->get_bounding_box()))
         {
           selection->add(*i);

Modified: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -67,12 +67,12 @@
   void add(const ObjectModelHandle& object);
   void remove(const ObjectModelHandle& object);
 
-  void draw(SceneContext& sc, const Layers& layers);
+  void draw(SceneContext& sc, const SelectMask& layers);
   void update(float delta);
   void update(const Gtk::TreeModel::Row& row);
 
-  ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
-  SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;
+  ObjectModelHandle get_object_at(const Vector2f& pos, const SelectMask& layers) const;
+  SelectionHandle   get_selection(const Rectf& rect, const SelectMask& layers) const;
 
   void raise_to_top(ObjectModelHandle object);
   void lower_to_bottom(ObjectModelHandle object);

Modified: trunk/windstille/src/editor/layer_widget.cpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/layer_widget.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -20,7 +20,7 @@
 #include <gtkmm/togglebutton.h>
 #include <gtkmm/separator.h>
 
-#include "layers.hpp"
+#include "select_mask.hpp"
 #include "layer_widget.hpp"
 
 LayerWidget::LayerWidget()
@@ -67,7 +67,7 @@
 }
 
 void
-LayerWidget::update(const Layers& layers)
+LayerWidget::update(const SelectMask& layers)
 {
   for(int i = 0; i < layers.size(); ++i)
     {
@@ -75,15 +75,15 @@
     }
 }
 
-Layers
-LayerWidget::get_layers() const
+SelectMask
+LayerWidget::get_select_mask() const
 {
-  Layers layers;
-  for(int i = 0; i < layers.size(); ++i)
+  SelectMask select_mask;
+  for(int i = 0; i < select_mask.size(); ++i)
     {
-      layers.set(i, buttons[i]->get_active());
+      select_mask.set(i, buttons[i]->get_active());
     }
-  return layers;
+  return select_mask;
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/layer_widget.hpp
===================================================================
--- trunk/windstille/src/editor/layer_widget.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/layer_widget.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -22,7 +22,7 @@
 #include <gtkmm/toolitem.h>
 #include <gtkmm/table.h>
 
-#include "layers.hpp"
+#include "select_mask.hpp"
 
 class LayerWidget : public Gtk::ToolItem
 {
@@ -35,9 +35,9 @@
   ~LayerWidget();
 
   void on_layer_toggle(Gtk::ToggleButton* button, int layer);
-  void update(const Layers& layers);
+  void update(const SelectMask& layers);
 
-  Layers get_layers() const;
+  SelectMask get_select_mask() const;
 
   sigc::signal<void, int, bool> signal_layer_toggle;
 

Deleted: trunk/windstille/src/editor/layers.hpp
===================================================================
--- trunk/windstille/src/editor/layers.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/layers.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -1,70 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_EDITOR_LAYERS_HPP
-#define HEADER_WINDSTILLE_EDITOR_LAYERS_HPP
-
-class Layers
-{
-private:
-  uint16_t mask;
-
-public:
-  Layers() : mask(~0) {}
-  Layers(uint16_t mask_) : mask(mask_) {}
-
-  uint16_t get_mask() const
-  {
-    return mask; 
-  }
-
-  bool match(const Layers& rhs) const
-  {
-    return (mask & rhs.mask);
-  }
-
-  void set(unsigned int layer, bool enable)
-  {
-    if (enable)
-      {
-        mask = mask | (1<<layer);
-      }
-    else
-      {
-        mask = mask & (~(1<<layer));
-      }
-  }
-
-  int size() const 
-  {
-    return 16; 
-  }
-
-  bool get(unsigned int layer) const 
-  {
-    return mask & (1<<layer);
-  }
-
-  operator bool() {
-    return mask;
-  }
-};
-
-#endif
-
-/* EOF */

Modified: trunk/windstille/src/editor/object_model.cpp
===================================================================
--- trunk/windstille/src/editor/object_model.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/object_model.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -36,9 +36,9 @@
   reader.get("name", name);
   reader.get("pos",  rel_pos);
   
-  int layer_mask = 1;
-  reader.get("layer", layer_mask);
-  layers = Layers(layer_mask);
+  int mask = 1;
+  reader.get("select-mask", mask);
+  select_mask = SelectMask(mask);
 }
 
 ObjectModel::~ObjectModel()
@@ -62,7 +62,7 @@
     .write("id", get_id())
     .write("pos", rel_pos)
     .write("parent", parent.get() ? parent->get_id() : "")
-    .write("layer", layers.get_mask());
+    .write("select-mask", select_mask.get_mask());
 }
 
 ObjectModelHandle

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -23,7 +23,7 @@
 #include <boost/weak_ptr.hpp>
 #include <string>
 
-#include "layers.hpp"
+#include "select_mask.hpp"
 #include "util/file_writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
@@ -40,7 +40,7 @@
 private:
   std::string name;
   Vector2f    rel_pos;
-  Layers      layers;
+  SelectMask  select_mask;
 
   ObjectModelPtr parent_ptr;
   Vector2f move_offset;
@@ -66,8 +66,8 @@
   void on_move_update(const Vector2f& offset);
   void on_move_end(const Vector2f& offset);
 
-  Layers get_layers() const { return layers; }
-  void   set_layers(const Layers& layers_) { layers = layers_; }
+  SelectMask get_select_mask() const { return select_mask; }
+  void   set_select_mask(const SelectMask& select_mask_) { select_mask = select_mask_; }
 
   SnapData snap_object(const Rectf& rect) const;
 

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -154,7 +154,7 @@
 }
 
 void
-SectorModel::draw(SceneContext& sc, const Layers& layermask)
+SectorModel::draw(SceneContext& sc, const SelectMask& layermask)
 {
   const HardLayers& layers = get_layers();
  
@@ -178,7 +178,7 @@
 }
 
 ObjectModelHandle
-SectorModel::get_object_at(const Vector2f& pos, const Layers& layermask) const
+SectorModel::get_object_at(const Vector2f& pos, const SelectMask& layermask) const
 {
   const HardLayers& layers = get_layers();
   SelectionHandle selection = Selection::create();
@@ -198,7 +198,7 @@
 }
 
 SelectionHandle
-SectorModel::get_selection(const Rectf& rect, const Layers& layermask) const
+SectorModel::get_selection(const Rectf& rect, const SelectMask& layermask) const
 {
   const HardLayers& layers = get_layers();
   SelectionHandle selection = Selection::create();

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -16,8 +16,8 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#ifndef HEADER_SECTOR_MODEL_HPP
-#define HEADER_SECTOR_MODEL_HPP
+#ifndef HEADER_WINDSTILLE_EDITOR_SECTOR_MODEL_HPP
+#define HEADER_WINDSTILLE_EDITOR_SECTOR_MODEL_HPP
 
 #include <set>
 #include <memory>
@@ -73,7 +73,7 @@
 
   SectorModel();
 
-  void draw(SceneContext& sc, const Layers& layers);
+  void draw(SceneContext& sc, const SelectMask& layers);
 
   void update(float delta);
   void update(float delta, const Gtk::TreeRow& row);
@@ -101,8 +101,8 @@
   void on_row_inserted(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter);
   void on_rows_reordered(const Gtk::TreeModel::Path& path, const Gtk::TreeModel::iterator& iter, int* new_order);
 
-  ObjectModelHandle get_object_at(const Vector2f& pos, const Layers& layers) const;
-  SelectionHandle   get_selection(const Rectf& rect, const Layers& layers) const;
+  ObjectModelHandle get_object_at(const Vector2f& pos, const SelectMask& layers) const;
+  SelectionHandle   get_selection(const Rectf& rect, const SelectMask& layers) const;
   
   void raise_to_top(ObjectModelHandle object);
   void lower_to_bottom(ObjectModelHandle object);

Copied: trunk/windstille/src/editor/select_mask.hpp (from rev 2825, trunk/windstille/src/editor/layers.hpp)
===================================================================
--- trunk/windstille/src/editor/layers.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/select_mask.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -0,0 +1,70 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_SELECT_MASK_HPP
+#define HEADER_WINDSTILLE_EDITOR_SELECT_MASK_HPP
+
+class SelectMask
+{
+private:
+  uint16_t mask;
+
+public:
+  SelectMask() : mask(~0) {}
+  SelectMask(uint16_t mask_) : mask(mask_) {}
+
+  uint16_t get_mask() const
+  {
+    return mask; 
+  }
+
+  bool match(const SelectMask& rhs) const
+  {
+    return (mask & rhs.mask);
+  }
+
+  void set(unsigned int layer, bool enable)
+  {
+    if (enable)
+      {
+        mask = mask | (1<<layer);
+      }
+    else
+      {
+        mask = mask & (~(1<<layer));
+      }
+  }
+
+  int size() const 
+  {
+    return 16; 
+  }
+
+  bool get(unsigned int layer) const 
+  {
+    return mask & (1<<layer);
+  }
+
+  operator bool() {
+    return mask;
+  }
+};
+
+#endif
+
+/* EOF */

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -32,7 +32,7 @@
 {
   click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
   
-  ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos, wst.get_layer_mask());
+  ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos, wst.get_select_mask());
   if (object.get())
     {
       if (wst.get_selection()->has_object(object))
@@ -89,7 +89,7 @@
       // ignore all objects not on the current active layer
       for(HardLayer::iterator i = wst.get_current_layer()->begin(); i != wst.get_current_layer()->end(); ++i)
         { // FIXME: Should iterate over all objects, not just objects in the current layer
-          if (!wst.get_layer_mask().match((*i)->get_layers()))
+          if (!wst.get_select_mask().match((*i)->get_select_mask()))
             ignore_objects.insert(*i);
         }
     }
@@ -155,12 +155,12 @@
       rect.normalize();
       if (event->state & GDK_SHIFT_MASK)
         {
-          SelectionHandle new_selection = wst.get_sector_model()->get_selection(rect, wst.get_layer_mask());
+          SelectionHandle new_selection = wst.get_sector_model()->get_selection(rect, wst.get_select_mask());
           wst.get_selection()->add(new_selection->begin(), new_selection->end());
         }
       else
         {
-          wst.set_selection(wst.get_sector_model()->get_selection(rect, wst.get_layer_mask()));
+          wst.set_selection(wst.get_sector_model()->get_selection(rect, wst.get_select_mask()));
         }
     }
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -43,7 +43,7 @@
     scroll_tool(new ScrollTool()),
     map_type(DecalObjectModel::COLORMAP),
     draw_background_pattern(true),
-    layer_mask(1),
+    select_mask(1),
     draw_only_active_layers(true),
     grid_enabled(false)
 {
@@ -222,9 +222,9 @@
         }
 
       if (draw_only_active_layers)
-        sector_model->draw(*sc, Layers());
+        sector_model->draw(*sc, SelectMask());
       else
-        sector_model->draw(*sc, layer_mask);
+        sector_model->draw(*sc, select_mask);
 
       for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
         {
@@ -520,10 +520,10 @@
 
   // if layer mask is 0, set it to all layers instead, so that the
   // object doesn't become unusable
-  if (!layer_mask)
-    object->set_layers(Layers());
+  if (!select_mask)
+    object->set_select_mask(SelectMask());
   else
-    object->set_layers(layer_mask);
+    object->set_select_mask(select_mask);
 
   Gtk::TreeModel::Path path;
   Gtk::TreeViewColumn* focus_column;

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 18:08:26 UTC (rev 2825)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 19:07:49 UTC (rev 2826)
@@ -37,7 +37,7 @@
 #include "control_point.hpp"
 #include "decal_object_model.hpp"
 #include "selection.hpp"
-#include "layers.hpp"
+#include "select_mask.hpp"
 #include "hard_layer.hpp"
 
 class Tool;
@@ -63,7 +63,7 @@
   DecalObjectModel::MapType map_type;
   Texture background_pattern;
   bool draw_background_pattern;
-  Layers layer_mask;
+  SelectMask select_mask;
   bool draw_only_active_layers;
   bool grid_enabled;
   
@@ -116,7 +116,7 @@
   void set_selection(const SelectionHandle& selection);
   SelectionHandle get_selection() const;
 
-  Layers& get_layer_mask() { return layer_mask; }
+  SelectMask& get_select_mask() { return select_mask; }
 
   SceneContext* get_sc() const { return sc.get(); }
 



From grumbel at mail.berlios.de  Mon Mar 30 21:09:02 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 21:09:02 +0200
Subject: [Windstille-commit] r2827 -
	trunk/windstille/data/sectors/trainstation
Message-ID: <200903301909.n2UJ92S2004840@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 21:08:57 +0200 (Mon, 30 Mar 2009)
New Revision: 2827

Modified:
   trunk/windstille/data/sectors/trainstation/mine.wst
   trunk/windstille/data/sectors/trainstation/office.wst
   trunk/windstille/data/sectors/trainstation/stairtest.wst
   trunk/windstille/data/sectors/trainstation/train.wst
   trunk/windstille/data/sectors/trainstation/trainstation.wst
   trunk/windstille/data/sectors/trainstation/worker.wst
Log:
Renamed Layer to SelectMask

Modified: trunk/windstille/data/sectors/trainstation/mine.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/data/sectors/trainstation/mine.wst	2009-03-30 19:08:57 UTC (rev 2827)
@@ -17,39 +17,45 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c78fd8")
             (pos 549 593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/mine_ground.png")
             (type 0))
           (decal
+            (id "0x9c7a1d8")
             (pos 1347 593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/mine_ground.png")
             (type 0))
           (decal
+            (id "0x9c797c0")
             (pos -249 593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/mine_ground.png")
             (type 0))
           (decal
+            (id "0x9c79858")
             (pos -2297 593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/mine_ground.png")
             (type 0))
           (decal
+            (id "0x9c798f0")
             (pos -700.997 593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/mine_ground.png")
             (type 0))
           (decal
+            (id "0x9c79988")
             (pos -1499 593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/mine_ground.png")
             (type 0)))
         (child-layers))
@@ -59,51 +65,59 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c79a30")
             (pos 72.8123 428.586)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79a98")
             (pos 957.187 478)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79b00")
             (pos -2024.01 398.313)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79b90")
             (pos -1088.37 457.98)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79c20")
             (pos -1595.5 531.125)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79cb0")
             (pos -626.089 548.147)
             (parent "")
-            (layer 7)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79d40")
             (pos 452.5 531.125)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x9c79dd0")
             (pos -1090.81 479.953)
             (parent "")
-            (layer 4)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1)))
         (child-layers
@@ -113,39 +127,45 @@
             (locked 0)
             (objects
               (decal
+                (id "0x9c86aa8")
                 (pos 523 227.062)
                 (parent "")
-                (layer 257)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_light.png")
                 (type 1))
               (decal
+                (id "0x9c86b48")
                 (pos -1525 227.062)
                 (parent "")
-                (layer 257)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_light.png")
                 (type 1))
               (decal
+                (id "0x9c86be8")
                 (pos -1490.94 161.75)
                 (parent "")
-                (layer 257)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 2))
               (decal
+                (id "0x9c86c80")
                 (pos 552.57 42.1211)
                 (parent "")
-                (layer 257)
+                (select-mask 1)
                 (path "images/decal/rooflamp.png")
                 (type 0))
               (decal
+                (id "0x9c86d18")
                 (pos 561.945 159.309)
                 (parent "")
-                (layer 257)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 2))
               (decal
+                (id "0x9c86db0")
                 (pos -1495.43 42.1211)
                 (parent "")
-                (layer 257)
+                (select-mask 1)
                 (path "images/decal/rooflamp.png")
                 (type 0)))
             (child-layers))))
@@ -155,51 +175,59 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c86eb0")
             (pos -2170.5 332.688)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree1.png")
             (type 0))
           (decal
+            (id "0x9c86a08")
             (pos -954.877 340.5)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree2.png")
             (type 0))
           (decal
+            (id "0x9c873e0")
             (pos -122.5 332.688)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree1.png")
             (type 0))
           (decal
+            (id "0x9c862f0")
             (pos 1093.12 340.5)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree2.png")
             (type 0))
           (decal
+            (id "0x9c86388")
             (pos -122.5 -180.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree1.png")
             (type 0))
           (decal
+            (id "0x9c86420")
             (pos 1093.12 -171.5)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree2.png")
             (type 0))
           (decal
+            (id "0x9c864b8")
             (pos -954.877 -171.5)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree2.png")
             (type 0))
           (decal
+            (id "0x9c85a60")
             (pos -2170.5 -180.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_tree1.png")
             (type 0)))
         (child-layers))
@@ -209,27 +237,31 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c761c8")
             (pos 750.812 468)
             (parent "")
-            (layer 8)
+            (select-mask 1)
             (path "images/decal/trashcan.png")
             (type 0))
           (decal
+            (id "0x9c76230")
             (pos 425.812 460.188)
             (parent "")
-            (layer 8)
+            (select-mask 1)
             (path "images/decal/trashcan.png")
             (type 0))
           (decal
+            (id "0x9c76298")
             (pos -445.623 466.047)
             (parent "")
-            (layer 8)
+            (select-mask 1)
             (path "images/decal/trashcan.png")
             (type 0))
           (decal
+            (id "0x9c76300")
             (pos -1903.44 466.047)
             (parent "")
-            (layer 8)
+            (select-mask 1)
             (path "images/decal/trashcan.png")
             (type 0)))
         (child-layers))
@@ -239,9 +271,10 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c85d70")
             (pos 638.516 439.91)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/humanreference.png")
             (type 0)))
         (child-layers))
@@ -251,75 +284,87 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c85ce8")
             (pos -103.75 531.125)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c768b8")
             (pos 1075.94 526.438)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c76920")
             (pos 613.437 582.688)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c769b0")
             (pos 211.875 567.062)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c76a40")
             (pos -450.186 557.297)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c76ad0")
             (pos -1840.03 590.5)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c76b60")
             (pos -2149.79 531.125)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c77000")
             (pos -2179.87 298.703)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c77090")
             (pos 1073.56 306.875)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c77120")
             (pos -131.875 296.75)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c771b0")
             (pos -974.437 306.875)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x9c77240")
             (pos -972.057 526.438)
             (parent "")
-            (layer 512)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0)))
         (child-layers))
@@ -329,147 +374,171 @@
         (locked 0)
         (objects
           (decal
+            (id "0x9c77ff0")
             (pos 803.06 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9c780f0")
             (pos 803.063 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9c776a0")
             (pos 1315.06 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9c77740")
             (pos 1315.06 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9c777e0")
             (pos 803.06 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9c77880")
             (pos 1315.06 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb4f0")
             (pos -732.937 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb590")
             (pos -732.937 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb630")
             (pos -732.937 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb6d0")
             (pos -1244.94 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb770")
             (pos -1244.93 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb810")
             (pos -1244.94 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb8b0")
             (pos -220.937 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb950")
             (pos -220.937 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceb9f0")
             (pos 291.063 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9ceba90")
             (pos 291.063 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebb30")
             (pos 291.063 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebbd0")
             (pos -220.937 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebc70")
             (pos -1756.93 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebd10")
             (pos -1756.93 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebdb0")
             (pos -1756.93 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebe50")
             (pos -2268.93 -52.75)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebef0")
             (pos -2268.93 203.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0))
           (decal
+            (id "0x9cebf90")
             (pos -2268.93 459.25)
             (parent "")
-            (layer 256)
+            (select-mask 1)
             (path "images/decal/mine_background.png")
             (type 0)))
         (child-layers)))))

Modified: trunk/windstille/data/sectors/trainstation/office.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/office.wst	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/data/sectors/trainstation/office.wst	2009-03-30 19:08:57 UTC (rev 2827)
@@ -8,352 +8,352 @@
   (layer
     (name "Scene")
     (visible 1)
-    (locked 1)
+    (locked 0)
     (objects)
     (child-layers
       (layer
         (name "Character")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0x8e57030")
+            (id "0x982ca58")
             (pos 24 457)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/humanreference.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Light")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0x891cc78")
+            (id "0x982ccf0")
             (pos -176.66 473.947)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0x89ec2e0")
+            (id "0x982cd78")
             (pos 359.466 456.262)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0x8e51358")
+            (id "0x982ce48")
             (pos -739.878 477.707)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0x891f7b0")
+            (id "0x982cf18")
             (pos -1203.21 476.314)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0x8e56050")
+            (id "0x982d028")
             (pos 838.744 503.93)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0x89e9fd0")
+            (id "0x982d0f8")
             (pos 241.479 454.773)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1)))
         (child-layers))
       (layer
         (name "Ground")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0x89e9820")
+            (id "0x982db88")
             (pos 130 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e8f70")
+            (id "0x982dc60")
             (pos 386 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e90d8")
+            (id "0x982dd38")
             (pos 642 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e61c0")
+            (id "0x982de10")
             (pos 130 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e6260")
+            (id "0x9829c90")
             (pos 386 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e62c8")
+            (id "0x9829d68")
             (pos 642 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e6360")
+            (id "0x9829e40")
             (pos -638 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e6438")
+            (id "0x9829f18")
             (pos -382 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e6510")
+            (id "0x9829ff0")
             (pos -126 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e65e8")
+            (id "0x982a0c8")
             (pos -638 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e66c0")
+            (id "0x982a1a0")
             (pos -382 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e6798")
+            (id "0x982a278")
             (pos -126 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e6870")
+            (id "0x982a350")
             (pos -1406 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e6948")
+            (id "0x982a428")
             (pos -1150 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e6a20")
+            (id "0x982a500")
             (pos -894 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89e6af8")
+            (id "0x982a5d8")
             (pos -1406 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e6bd0")
+            (id "0x982a6b0")
             (pos -1150 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89e6ca8")
+            (id "0x982a788")
             (pos -894 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x8a4d980")
+            (id "0x982a860")
             (pos 898 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x8e44548")
+            (id "0x982a938")
             (pos 898 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x8e57b98")
+            (id "0x982aa10")
             (pos 1410 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x8e50ec8")
+            (id "0x982aae8")
             (pos 1154 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
-            (id "0x89f2cd0")
+            (id "0x982abc0")
             (pos 1154 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x8e54708")
+            (id "0x982ac98")
             (pos 1410 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x89207f8")
+            (id "0x982ad70")
             (pos 1666 124)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
-            (id "0x8e50628")
+            (id "0x982ae48")
             (pos 1666 636)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Lights")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0x89e7a30")
+            (id "0x982d5d8")
             (pos -185.687 478)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1.png")
             (type 0))
           (decal
-            (id "0x89e9a08")
+            (id "0x982b5d8")
             (pos -186.087 454.328)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1_highlight.png")
             (type 2))
           (decal
-            (id "0x8e508a0")
+            (id "0x982afb0")
             (pos -697.391 478)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1.png")
             (type 0))
           (decal
-            (id "0x8e505f0")
+            (id "0x9827950")
             (pos -697.791 454.328)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1_highlight.png")
             (type 2))
           (decal
-            (id "0x8e502e0")
+            (id "0x986b160")
             (pos -1218 458.328)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1_highlight.png")
             (type 2))
           (decal
-            (id "0x8e501f8")
+            (id "0x986b220")
             (pos -1218.6 478)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1.png")
             (type 0))
           (decal
-            (id "0x8e50e30")
+            (id "0x986b2f0")
             (pos 143.113 478)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1.png")
             (type 0))
           (decal
-            (id "0x892ce68")
+            (id "0x986b3c0")
             (pos 142.713 454.328)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1_highlight.png")
             (type 2))
           (decal
-            (id "0x8e54a10")
+            (id "0x986b4a0")
             (pos 370.625 454.328)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1_highlight.png")
             (type 2))
           (decal
-            (id "0x8e45cf0")
+            (id "0x986b580")
             (pos 371.025 478)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1.png")
             (type 0))
           (decal
-            (id "0x8e54f10")
+            (id "0x986b650")
             (pos 721.247 478)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1.png")
             (type 0))
           (decal
-            (id "0x8e546c8")
+            (id "0x986b720")
             (pos 720.847 454.328)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/lamp1_highlight.png")
             (type 2)))
         (child-layers))
       (layer
         (name "Character")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects)
         (child-layers))
       (layer
@@ -362,281 +362,281 @@
         (locked 0)
         (objects
           (decal
-            (id "0x8e58390")
+            (id "0x982dae0")
             (pos 546.349 496)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0x8928010")
+            (id "0x986c7e8")
             (pos -21.9375 496)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0x89e9d10")
+            (id "0x986c8b8")
             (pos -435.526 496)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0x8e50798")
+            (id "0x986c988")
             (pos -965.526 496)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0x8df5cf0")
+            (id "0x986ca58")
             (pos 956.427 496)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Shadow")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0x89f2dd8")
+            (id "0x986cbe8")
             (pos 253.75 47.375)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0x8ad8ce8")
+            (id "0x986cc90")
             (pos 238.125 713)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0x8ad8d78")
+            (id "0x986cd60")
             (pos 563.125 702.062)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0x8ad8e48")
+            (id "0x986b8c8")
             (pos 255.313 430)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/train_door.png")
             (type 0))
           (decal
-            (id "0x89e5888")
+            (id "0x986b9a0")
             (pos -175 635)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0x8e547f8")
+            (id "0x986ba70")
             (pos -702.376 610.672)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0x8e54f60")
+            (id "0x986bb40")
             (pos -1181.38 644.672)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0)))
         (child-layers))
       (layer
         (name "BackgroundWall")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0x8ad9930")
+            (id "0x983e558")
             (pos 578 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x8ad9cb8")
+            (id "0x983ef78")
             (pos 962 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8a4c270")
+            (id "0x983f0f8")
             (pos 450 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8a4c2e8")
+            (id "0x9a7f118")
             (pos 66 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8a4cc28")
+            (id "0x983fd28")
             (pos 322 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8a4ccb8")
+            (id "0x983fdb8")
             (pos 194 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x8a4cd88")
+            (id "0x983fe88")
             (pos -190 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x8a4ce58")
+            (id "0x983bf38")
             (pos -62 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8a4cf28")
+            (id "0x983c008")
             (pos -318 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8a4cff8")
+            (id "0x983c0d8")
             (pos -702 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8a4d0c8")
+            (id "0x983c1a8")
             (pos -446 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8a4d198")
+            (id "0x983c278")
             (pos -574 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x8a4d268")
+            (id "0x983c348")
             (pos -958 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x8a4d338")
+            (id "0x983c418")
             (pos -830 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8a4d408")
+            (id "0x983c4e8")
             (pos -1086 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8a4d4d8")
+            (id "0x983c5b8")
             (pos -1470 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8a4d5a8")
+            (id "0x983c688")
             (pos -1214 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8a4d678")
+            (id "0x983c758")
             (pos -1342 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x891f6c0")
+            (id "0x983c828")
             (pos 834 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x89e7048")
+            (id "0x983c8f8")
             (pos 1090 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8e54660")
+            (id "0x983c9c8")
             (pos 706 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x89ec350")
+            (id "0x983ca98")
             (pos 1474 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x89f0a68")
+            (id "0x983cb68")
             (pos 1346 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall2.png")
             (type 0))
           (decal
-            (id "0x89e4778")
+            (id "0x983cc38")
             (pos 1602 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0))
           (decal
-            (id "0x8e50090")
+            (id "0x983cd08")
             (pos 1218 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall1.png")
             (type 0))
           (decal
-            (id "0x8e44970")
+            (id "0x983cdd8")
             (pos 1730 380)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/wall3.png")
             (type 0)))
         (child-layers)))))

Modified: trunk/windstille/data/sectors/trainstation/stairtest.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/data/sectors/trainstation/stairtest.wst	2009-03-30 19:08:57 UTC (rev 2827)
@@ -1,915 +1,918 @@
 ;; -*- scheme -*-
+
 (windstille-sector
   (version 1)
   (name "")
   (ambient-color 0 0 0 1)
   (init-script "init.nut")
   (layer
-  (objects
-    (decal
-      (pos -784.328 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1154.33 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1239.52 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -869.515 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -868.033 29.2408)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1238.03 29.2408)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1152.85 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -782.845 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -42.8453 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -412.845 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -498.033 29.2408)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -128.033 29.2408)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -129.515 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -499.515 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -414.328 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -44.3278 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -50.4747 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -420.475 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -505.662 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -135.662 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -134.18 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -504.18 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -418.992 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -48.9923 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -788.992 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1158.99 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1244.18 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -874.18 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -875.662 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1245.66 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -1160.47 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -790.475 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 689.526 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 319.525 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 234.338 1566.8)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 604.338 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 605.821 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 235.82 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 321.008 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 691.008 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1431.01 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1061.01 797.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 975.82 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1345.82 1053.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1344.34 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 974.338 1565.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1059.53 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1429.53 1309.24)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1065.67 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 980.485 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1350.49 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1351.97 29.2407)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 367.905 -108.259)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1067.15 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1437.15 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 697.155 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 327.155 -226.759)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 241.967 29.2407)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 611.968 29.2407)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 610.485 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -188.118 395.202)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 240.485 541.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 325.672 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 6.44479 160.077)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 13.4448 209.264)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 695.673 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 588 224)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair2.png")
-      (type 0)
-      )
-    (decal
-      (pos 588 384)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair1.png")
-      (type 0)
-      )
-    (decal
-      (pos 716 512)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair1.png")
-      (type 0)
-      )
-    (decal
-      (pos 336.132 378.827)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 716 352)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair2.png")
-      (type 0)
-      )
-    (decal
-      (pos 972 608)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair2.png")
-      (type 0)
-      )
-    (decal
-      (pos 972 766.438)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair1.png")
-      (type 0)
-      )
-    (decal
-      (pos 844 640)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair1.png")
-      (type 0)
-      )
-    (decal
-      (pos 844 480)
-      (parent "")
-      (layer 1)
-      (path "images/decal/stair2.png")
-      (type 0)
-      )
-    (decal
-      (pos -295.118 263.202)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 396 320.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 98.6324 375.702)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos -377.93 358.514)
-      (parent "")
-      (layer 512)
-      (path "images/decal/dark.png")
-      (type 0)
-      )
-    (decal
-      (pos 140 320.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -372 320.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -116 320.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/wallplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 379 487.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos -99 487.563)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp.png")
-      (type 0)
-      )
-    (decal
-      (pos 376.312 684.625)
-      (parent "")
-      (layer 1)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos -66.6875 696.312)
-      (parent "")
-      (layer 1)
-      (path "images/objects/apartmentlamp_light.png")
-      (type 1)
-      )
-    (decal
-      (pos 385.688 606.5)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -79.9375 597.125)
-      (parent "")
-      (layer 1)
-      (path "images/decal/rooflamp_bloom.png")
-      (type 2)
-      )
-    (decal
-      (pos -150.336 803.741)
-      (parent "")
-      (layer 256)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 368.377 942.761)
-      (parent "")
-      (layer 256)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 274.615 124.982)
-      (parent "")
-      (layer 256)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 323.559 150.22)
-      (parent "")
-      (layer 256)
-      (path "images/streetlamp.png")
-      (type 0)
-      )
-    (decal
-      (pos 322.07 217.889)
-      (parent "")
-      (layer 256)
-      (path "images/streetlamp-light.png")
-      (type 1)
-      )
-    (decal
-      (pos 323.632 105.389)
-      (parent "")
-      (layer 256)
-      (path "images/streetlamp-highlight.png")
-      (type 2)
-      )
-    (decal
-      (pos 9.67236 108.563)
-      (parent "")
-      (layer 2)
-      (path "images/decal/terminal.png")
-      (type 0)
-      )
-    (decal
-      (pos -296.68 180.563)
-      (parent "")
-      (layer 2)
-      (path "images/decal/bench.png")
-      (type 0)
-      )
-    (decal
-      (pos 981.968 29.2407)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos 1435.67 285.241)
-      (parent "")
-      (layer 256)
-      (path "images/decal/steelplate.png")
-      (type 0)
-      )
-    (decal
-      (pos -238.868 211.639)
-      (parent "")
-      (layer 256)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos 0.194588 208.514)
-      (parent "")
-      (layer 512)
-      (path "images/decal/light.png")
-      (type 1)
-      )
-    (decal
-      (pos -475.787 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -440.787 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -370.787 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -405.787 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -300.816 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -335.816 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -125.845 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -90.8452 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -195.816 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -160.816 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -230.816 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -265.816 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 154.126 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 189.126 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 259.126 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 224.126 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 329.097 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 294.097 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 84.1258 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 119.126 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 14.1548 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 49.1548 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -20.8452 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos -55.8452 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 498.53 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 428.559 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 463.559 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 393.559 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    (decal
-      (pos 358.559 265.367)
-      (parent "")
-      (layer 8)
-      (path "images/decal/handrail.png")
-      (type 0)
-      )
-    )
-  ))
+    (name "New Layer")
+    (visible 1)
+    (locked 0)
+    (objects
+      (decal
+        (id "0x9e9f018")
+        (pos -784.328 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9e9f330")
+        (pos -1154.33 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9e9f3b0")
+        (pos -1239.52 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea0e80")
+        (pos -869.515 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea0f18")
+        (pos -868.033 29.2408)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea0fb0")
+        (pos -1238.03 29.2408)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1048")
+        (pos -1152.85 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea10e0")
+        (pos -782.845 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1178")
+        (pos -42.8453 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1210")
+        (pos -412.845 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea12a8")
+        (pos -498.033 29.2408)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1340")
+        (pos -128.033 29.2408)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea13d8")
+        (pos -129.515 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1470")
+        (pos -499.515 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1508")
+        (pos -414.328 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea15a0")
+        (pos -44.3278 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1638")
+        (pos -50.4747 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea16d0")
+        (pos -420.475 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1768")
+        (pos -505.662 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1800")
+        (pos -135.662 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1898")
+        (pos -134.18 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1930")
+        (pos -504.18 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea19c8")
+        (pos -418.992 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1a60")
+        (pos -48.9923 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1af8")
+        (pos -788.992 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1b90")
+        (pos -1158.99 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1c28")
+        (pos -1244.18 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1cc0")
+        (pos -874.18 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1d58")
+        (pos -875.662 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1df0")
+        (pos -1245.66 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1e88")
+        (pos -1160.47 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1f20")
+        (pos -790.475 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea1fb8")
+        (pos 689.526 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2050")
+        (pos 319.525 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea20e8")
+        (pos 234.338 1566.8)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2180")
+        (pos 604.338 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2218")
+        (pos 605.821 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea22b0")
+        (pos 235.82 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2348")
+        (pos 321.008 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea23e0")
+        (pos 691.008 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2478")
+        (pos 1431.01 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2510")
+        (pos 1061.01 797.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea25a8")
+        (pos 975.82 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2640")
+        (pos 1345.82 1053.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea26d8")
+        (pos 1344.34 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9ea2770")
+        (pos 974.338 1565.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb36b8")
+        (pos 1059.53 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3720")
+        (pos 1429.53 1309.24)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb37b8")
+        (pos 1065.67 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3850")
+        (pos 980.485 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb38e8")
+        (pos 1350.49 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3980")
+        (pos 1351.97 29.2407)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3a18")
+        (pos 367.905 -108.259)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3ab0")
+        (pos 1067.15 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3b48")
+        (pos 1437.15 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3be0")
+        (pos 697.155 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3c78")
+        (pos 327.155 -226.759)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3d10")
+        (pos 241.967 29.2407)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3da8")
+        (pos 611.968 29.2407)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3e40")
+        (pos 610.485 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb3ed8")
+        (pos -188.118 395.202)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9eb4028")
+        (pos 240.485 541.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb4968")
+        (pos 325.672 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb4a00")
+        (pos 6.44479 160.077)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9eb4a90")
+        (pos 13.4448 209.264)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9eb4b20")
+        (pos 695.673 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0x9eb4bb8")
+        (pos 588 224)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair2.png")
+        (type 0))
+      (decal
+        (id "0x9eb5710")
+        (pos 588 384)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair1.png")
+        (type 0))
+      (decal
+        (id "0x9eb5858")
+        (pos 716 512)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair1.png")
+        (type 0))
+      (decal
+        (id "0x9eb6188")
+        (pos 336.132 378.827)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9eb6218")
+        (pos 716 352)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair2.png")
+        (type 0))
+      (decal
+        (id "0x9eb62a8")
+        (pos 972 608)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair2.png")
+        (type 0))
+      (decal
+        (id "0x9eb6338")
+        (pos 972 766.438)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair1.png")
+        (type 0))
+      (decal
+        (id "0x9eb63c8")
+        (pos 844 640)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair1.png")
+        (type 0))
+      (decal
+        (id "0x9eb6458")
+        (pos 844 480)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/stair2.png")
+        (type 0))
+      (decal
+        (id "0x9eb64e8")
+        (pos -295.118 263.202)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9eb6578")
+        (pos 396 320.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/wallplate.png")
+        (type 0))
+      (decal
+        (id "0x9f9fd78")
+        (pos 98.6324 375.702)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9f9fe08")
+        (pos -377.93 358.514)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/dark.png")
+        (type 0))
+      (decal
+        (id "0x9f9fe98")
+        (pos 140 320.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/wallplate.png")
+        (type 0))
+      (decal
+        (id "0x9f9ff00")
+        (pos -372 320.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/wallplate.png")
+        (type 0))
+      (decal
+        (id "0x9f9ff98")
+        (pos -116 320.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/wallplate.png")
+        (type 0))
+      (decal
+        (id "0x9fa0030")
+        (pos 379 487.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/rooflamp.png")
+        (type 0))
+      (decal
+        (id "0x9fa01a8")
+        (pos -99 487.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/rooflamp.png")
+        (type 0))
+      (decal
+        (id "0x9fa0af8")
+        (pos 376.312 684.625)
+        (parent "")
+        (select-mask 1)
+        (path "images/objects/apartmentlamp_light.png")
+        (type 1))
+      (decal
+        (id "0x9fa0c38")
+        (pos -66.6875 696.312)
+        (parent "")
+        (select-mask 1)
+        (path "images/objects/apartmentlamp_light.png")
+        (type 1))
+      (decal
+        (id "0x9fa15d0")
+        (pos 385.688 606.5)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/rooflamp_bloom.png")
+        (type 2))
+      (decal
+        (id "0x9fa16c8")
+        (pos -79.9375 597.125)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/rooflamp_bloom.png")
+        (type 2))
+      (decal
+        (id "0x9f13700")
+        (pos -150.336 803.741)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/light.png")
+        (type 1))
+      (decal
+        (id "0x9f14478")
+        (pos 368.377 942.761)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/light.png")
+        (type 1))
+      (decal
+        (id "0x9f14508")
+        (pos 274.615 124.982)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/light.png")
+        (type 1))
+      (decal
+        (id "0x9f14598")
+        (pos 323.559 150.22)
+        (parent "")
+        (select-mask 1)
+        (path "images/streetlamp.png")
+        (type 0))
+      (decal
+        (id "0x9f145f8")
+        (pos 322.07 217.889)
+        (parent "")
+        (select-mask 1)
+        (path "images/streetlamp-light.png")
+        (type 1))
+      (decal
+        (id "0x9f14fa0")
+        (pos 323.632 105.389)
+        (parent "")
+        (select-mask 1)
+        (path "images/streetlamp-highlight.png")
+        (type 2))
+      (decal
+        (id "0xa0a8ae8")
+        (pos 9.67236 108.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/terminal.png")
+        (type 0))
+      (decal
+        (id "0x9f16118")
+        (pos -296.68 180.563)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/bench.png")
+        (type 0))
+      (decal
+        (id "0xa177f38")
+        (pos 981.968 29.2407)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0xa178150")
+        (pos 1435.67 285.241)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/steelplate.png")
+        (type 0))
+      (decal
+        (id "0xa0a6940")
+        (pos -238.868 211.639)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/light.png")
+        (type 1))
+      (decal
+        (id "0xa0a69d0")
+        (pos 0.194588 208.514)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/light.png")
+        (type 1))
+      (decal
+        (id "0xa0a6a60")
+        (pos -475.787 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0d2ea8")
+        (pos -440.787 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a72e8")
+        (pos -370.787 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7380")
+        (pos -405.787 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7418")
+        (pos -300.816 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a74b0")
+        (pos -335.816 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7548")
+        (pos -125.845 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a75e0")
+        (pos -90.8452 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7678")
+        (pos -195.816 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7710")
+        (pos -160.816 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a77a8")
+        (pos -230.816 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7840")
+        (pos -265.816 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a78d8")
+        (pos 154.126 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7970")
+        (pos 189.126 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7a08")
+        (pos 259.126 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7aa0")
+        (pos 224.126 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7b38")
+        (pos 329.097 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7bd0")
+        (pos 294.097 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7c68")
+        (pos 84.1258 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7d00")
+        (pos 119.126 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7d98")
+        (pos 14.1548 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7e30")
+        (pos 49.1548 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7ec8")
+        (pos -20.8452 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7f60")
+        (pos -55.8452 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a7ff8")
+        (pos 498.53 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a8090")
+        (pos 428.559 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a8128")
+        (pos 463.559 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a81c0")
+        (pos 393.559 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0))
+      (decal
+        (id "0xa0a8258")
+        (pos 358.559 265.367)
+        (parent "")
+        (select-mask 1)
+        (path "images/decal/handrail.png")
+        (type 0)))
+    (child-layers)))
 
 ;; EOF ;;

Modified: trunk/windstille/data/sectors/trainstation/train.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/train.wst	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/data/sectors/trainstation/train.wst	2009-03-30 19:08:57 UTC (rev 2827)
@@ -11,66 +11,66 @@
     (locked 0)
     (objects
       (decal
-        (id "0x8b1b3b8")
+        (id "0x9049d48")
         (pos -752 0)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_front.png")
         (type 0))
       (decal
-        (id "0x8b1b440")
+        (id "0x87e4060")
         (pos 696 0)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_back.png")
         (type 0))
       (decal
-        (id "0x8b1b558")
+        (id "0x8d4ab20")
         (pos 974.233 -296.814)
         (parent "")
-        (layer 1)
+        (select-mask 1)
         (path "images/decal/train_middle.png")
         (type 0))
       (decal
-        (id "0x8b1b630")
+        (id "0x8d4ad90")
         (pos -153.68 -216)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_generator.png")
         (type 0))
       (decal
-        (id "0x8b1b750")
+        (id "0x904a968")
         (pos -593.074 240.832)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_engine_front.png")
         (type 0))
       (decal
-        (id "0x8b9ac98")
+        (id "0x8ea4710")
         (pos 586.93 241.832)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_engine_back.png")
         (type 0))
       (decal
-        (id "0x8bdfbe8")
+        (id "0x87e6040")
         (pos -213.07 240.832)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_engine_middle.png")
         (type 0))
       (decal
-        (id "0x8be00c0")
+        (id "0x881a578")
         (pos 242.93 240.832)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_engine_middle.png")
         (type 0))
       (decal
-        (id "0x8b48ff8")
+        (id "0x8bbb7f0")
         (pos 1.44153 -15.168)
-        (parent "0x8b1b558")
-        (layer 1)
+        (parent "0x8d4ab20")
+        (select-mask 1)
         (path "images/decal/train_door.png")
         (type 0)))
     (child-layers)))

Modified: trunk/windstille/data/sectors/trainstation/trainstation.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/data/sectors/trainstation/trainstation.wst	2009-03-30 19:08:57 UTC (rev 2827)
@@ -8,358 +8,358 @@
   (layer
     (name "Trainstation")
     (visible 1)
-    (locked 1)
+    (locked 0)
     (objects)
     (child-layers
       (layer
         (name "Daylight")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0bd010")
+            (id "0x87e61d8")
             (pos -855.442 319.354)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2))
           (decal
-            (id "0xa0bfa48")
+            (id "0x87e5438")
             (pos -1297.52 365.776)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 2))
           (decal
-            (id "0xa0bfaf0")
+            (id "0x87e72f8")
             (pos -1402.7 340.058)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2))
           (decal
-            (id "0xa0bfbc8")
+            (id "0x87e7360")
             (pos -1099.97 336.543)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2))
           (decal
-            (id "0xa0bfca0")
+            (id "0x87e73f8")
             (pos -1569.48 329.078)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2)))
         (child-layers))
       (layer
         (name "Lights")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0bffa8")
+            (id "0x87e34a0")
             (pos 1630.08 1070.32)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0030")
+            (id "0x87e3528")
             (pos 983.756 904.953)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0100")
+            (id "0x87e35f8")
             (pos 315.072 868.593)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0600")
+            (id "0x87e36c8")
             (pos -1636 909.933)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c06a8")
+            (id "0x87e3798")
             (pos -810.844 849.183)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0778")
+            (id "0x87e3868")
             (pos 1559.83 804.374)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0848")
+            (id "0x87e3938")
             (pos -259.112 903.761)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0918")
+            (id "0x87e3e48")
             (pos -477.046 760.753)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c09e8")
+            (id "0x87e3f18")
             (pos -1553.29 729.292)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
-            (id "0xa0c0ab8")
+            (id "0x87e3fe8")
             (pos -1169.49 799.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1)))
         (child-layers
           (layer
             (name "ExtraLight")
             (visible 1)
-            (locked 1)
+            (locked 0)
             (objects
               (decal
-                (id "0xa0c0c58")
+                (id "0x87e4348")
                 (pos -402.054 1017.24)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa0c0ce0")
+                (id "0x87e43d0")
                 (pos 161.91 1097.81)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa0c0db0")
+                (id "0x87e44a0")
                 (pos 860.719 704.086)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa0c0e80")
+                (id "0x87e4570")
                 (pos 208.559 708.054)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa0c0f50")
+                (id "0x87e4be8")
                 (pos -845.605 1035.11)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa0c1020")
+                (id "0x87e4c98")
                 (pos -332.91 1098.59)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa0c10f0")
+                (id "0x87e4d68")
                 (pos -1151.04 1059.27)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa01a398")
+                (id "0x87e4e38")
                 (pos -1663.74 995.791)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1))
               (decal
-                (id "0xa01a468")
+                (id "0x87e4f08")
                 (pos 943.16 1149.08)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/light.png")
                 (type 1)))
             (child-layers))))
       (layer
         (name "Shadow")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0c0c00")
+            (id "0x87e42f0")
             (pos -2249.87 1060.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a5f8")
+            (id "0x87e4230")
             (pos -2244.5 972.452)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a670")
+            (id "0x8816b18")
             (pos -2151.95 1070.86)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a710")
+            (id "0x8816ba8")
             (pos -2223.31 378.014)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a7b0")
+            (id "0x8816c78")
             (pos -2222.56 441.264)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a850")
+            (id "0x8816d48")
             (pos -2231.18 652.952)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a8f0")
+            (id "0x8816e18")
             (pos -2231.93 589.702)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01a990")
+            (id "0x8816ee8")
             (pos -2223.79 825.967)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01aa30")
+            (id "0x8816fb8")
             (pos -2016.48 1029.67)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01af20")
+            (id "0x8817088")
             (pos -2047.33 560.924)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa01afc0")
+            (id "0x8817158")
             (pos -2080.6 782.737)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Roof")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa01b168")
+            (id "0x8819ee0")
             (pos -132.297 329.766)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa01b210")
+            (id "0x881a4a8")
             (pos 378.703 329.766)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa01b2e0")
+            (id "0x881a670")
             (pos 1400.7 331.719)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa01b3b0")
+            (id "0x881a700")
             (pos 889.703 331.719)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa01b480")
+            (id "0x8817778")
             (pos 2422.7 331.719)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa01b550")
+            (id "0x8817848")
             (pos 1911.7 331.719)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa0bff20")
+            (id "0x8817918")
             (pos -1652.53 298.683)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa0bd110")
+            (id "0x88179e8")
             (pos -771.438 410.719)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof.png")
             (type 0))
           (decal
-            (id "0xa0bd1e0")
+            (id "0x8817b18")
             (pos -1141.53 298.683)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa0bd2b0")
+            (id "0x8818478")
             (pos -2163.53 298.683)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0))
           (decal
-            (id "0xa0bd380")
+            (id "0x8818508")
             (pos -2674.53 298.683)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/roof2.png")
             (type 0)))
         (child-layers))
@@ -369,1740 +369,1740 @@
         (locked 0)
         (objects
           (decal
-            (id "0xa0bed58")
+            (id "0x8819e70")
             (pos -752 0)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_front.png")
             (type 0))
           (decal
-            (id "0xa602318")
+            (id "0x8818ca8")
             (pos 696 0)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_back.png")
             (type 0))
           (decal
-            (id "0xa6c5410")
+            (id "0x8819768")
             (pos -2098.65 942.97)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/train_middle.png")
             (type 0))
           (decal
-            (id "0xa09f838")
+            (id "0x8820a90")
             (pos -586.991 241.125)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_engine_front.png")
             (type 0))
           (decal
-            (id "0xa851e48")
+            (id "0x8820c40")
             (pos 593.009 242.125)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_engine_back.png")
             (type 0))
           (decal
-            (id "0xab003d0")
+            (id "0x8821f20")
             (pos -206.991 241.125)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_engine_middle.png")
             (type 0))
           (decal
-            (id "0xa099b20")
+            (id "0x8821d10")
             (pos 249.009 241.125)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_engine_middle.png")
             (type 0))
           (decal
-            (id "0xaafed60")
+            (id "0x891abb8")
             (pos 0.719482 -14.875)
-            (parent "0xa6c5410")
-            (layer 1)
+            (parent "0x8819768")
+            (select-mask 1)
             (path "images/decal/train_door.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Lamps")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0bd498")
+            (id "0x881e4e8")
             (pos 266.7 554.465)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/apartmentlamp_light.png")
             (type 1))
           (decal
-            (id "0xa0bd578")
+            (id "0x881db38")
             (pos 999.122 579.855)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/apartmentlamp_light.png")
             (type 1))
           (decal
-            (id "0xa0bd658")
+            (id "0x881dff0")
             (pos 1651.47 577.902)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/apartmentlamp_light.png")
             (type 1))
           (decal
-            (id "0xa0bd738")
+            (id "0x881ea98")
             (pos 1660.56 541.188)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2))
           (decal
-            (id "0xa0bd810")
+            (id "0x881eb70")
             (pos 998.057 533.375)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2))
           (decal
-            (id "0xa0bdcf0")
+            (id "0x881ec48")
             (pos 237.12 549)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp_bloom.png")
             (type 2))
           (decal
-            (id "0xa0bddc8")
+            (id "0x881ed20")
             (pos 1642.66 434.301)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp.png")
             (type 0))
           (decal
-            (id "0xa0bdea0")
+            (id "0x881faa0")
             (pos 982.958 428.895)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp.png")
             (type 0))
           (decal
-            (id "0xa0bdf78")
+            (id "0x881f438")
             (pos 231.267 426.715)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rooflamp.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Decor Items")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0bef08")
+            (id "0x881f820")
             (pos 240.218 886.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/board.png")
             (type 0))
           (decal
-            (id "0xa0bef70")
+            (id "0x89ad9b8")
             (pos 934.407 913.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/terminal.png")
             (type 0))
           (decal
-            (id "0xa0bf048")
+            (id "0x89ae320")
             (pos -163.625 985.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0xa0bf118")
+            (id "0x89af828")
             (pos 578.562 985.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0xa0be058")
+            (id "0x8b18d80")
             (pos 1244.19 985.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0xa0be128")
+            (id "0x8b18e10")
             (pos 1689.49 985.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0xa0be1f8")
+            (id "0x89af5c8")
             (pos 2006.69 985.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/bench.png")
             (type 0))
           (decal
-            (id "0xa0be2c8")
+            (id "0x89af698")
             (pos 424.131 1013.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/plant.png")
             (type 0))
           (decal
-            (id "0xa0be3a0")
+            (id "0x8a5f0a0")
             (pos -1002.18 1013.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/plant.png")
             (type 0))
           (decal
-            (id "0xa0be478")
+            (id "0x8a5f108")
             (pos -914.086 1013.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/plant.png")
             (type 0))
           (decal
-            (id "0xa0be550")
+            (id "0x881c080")
             (pos -832.618 1013.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/plant.png")
             (type 0))
           (decal
-            (id "0xa0be628")
+            (id "0x881c158")
             (pos 1064.43 1014.67)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/plant.png")
             (type 0))
           (decal
-            (id "0xa017a40")
+            (id "0x881c230")
             (pos 676.954 1029.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017b10")
+            (id "0x89af978")
             (pos 612.954 1029.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017be0")
+            (id "0x881cda8")
             (pos 648.954 965.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017cb0")
+            (id "0x881ce20")
             (pos 740.954 1029.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017d80")
+            (id "0x881ced0")
             (pos 584.954 965.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017e50")
+            (id "0x881cfa0")
             (pos 548.954 1029.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017f20")
+            (id "0x881d070")
             (pos 706.554 965.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/box.png")
             (type 0))
           (decal
-            (id "0xa017ff0")
+            (id "0x881d140")
             (pos 28.218 973.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/trashcan.png")
             (type 0))
           (decal
-            (id "0xa018098")
+            (id "0x881d4d0")
             (pos 1448.12 973.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/trashcan.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Railground")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa018d00")
+            (id "0x8a5dad8")
             (pos -249.032 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa018dd0")
+            (id "0x8bbd6c0")
             (pos -761.032 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa018ea0")
+            (id "0x8a5e330")
             (pos -2297.03 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa018f70")
+            (id "0x8a5e3c0")
             (pos -1785.03 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa019040")
+            (id "0x8a5e490")
             (pos -1273.03 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa019110")
+            (id "0x8a5e560")
             (pos 262.968 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa0191e0")
+            (id "0x8a5e630")
             (pos 774.968 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa0192b0")
+            (id "0x8a5e700")
             (pos 1798.97 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa019380")
+            (id "0x8a5e7d0")
             (pos 1286.97 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xa019450")
+            (id "0x8a5e8a0")
             (pos 1670.97 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xa019520")
+            (id "0x8bbd4c0")
             (pos 1926.97 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xa0195f0")
+            (id "0x8a5e970")
             (pos 1414.97 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xa0196c0")
+            (id "0x8a5ea00")
             (pos 1158.97 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xa019790")
+            (id "0x8a5ead0")
             (pos 2214.14 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xa019860")
+            (id "0x8bbbfd0")
             (pos 1702.14 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xa019930")
+            (id "0x8bbc060")
             (pos 1958.14 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xa019a00")
+            (id "0x8bbc0f0")
             (pos 1446.14 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaae9e28")
+            (id "0x8bbc1c0")
             (pos -121.032 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaae9ef8")
+            (id "0x8bbc290")
             (pos -377.032 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaae9fc8")
+            (id "0x8bbc360")
             (pos 646.968 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaea098")
+            (id "0x8bbc430")
             (pos 902.968 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaea168")
+            (id "0x8bbc500")
             (pos 390.968 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaea238")
+            (id "0x8bbc5d0")
             (pos 134.968 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaea308")
+            (id "0x8bbc6a0")
             (pos 1190.13 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaea3d8")
+            (id "0x8bbc770")
             (pos 934.13 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaea4a8")
+            (id "0x8bbc840")
             (pos 422.13 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaea578")
+            (id "0x8bbc910")
             (pos 166.13 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaea648")
+            (id "0x8bbc9e0")
             (pos 678.13 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaea718")
+            (id "0x8bbcab0")
             (pos -89.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaea7e8")
+            (id "0x8bbcb80")
             (pos -889.032 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaea8b8")
+            (id "0x8bbcc50")
             (pos -633.032 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaea988")
+            (id "0x8bbcd20")
             (pos -345.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeaa58")
+            (id "0x8bbcdf0")
             (pos -601.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeab28")
+            (id "0x8bbcec0")
             (pos -1369.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeabf8")
+            (id "0x8bbcf90")
             (pos -1881.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeacc8")
+            (id "0x8bbd060")
             (pos -1625.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaead98")
+            (id "0x8bbd130")
             (pos -1113.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeae68")
+            (id "0x8bbd200")
             (pos -857.872 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeaf38")
+            (id "0x8bbd2d0")
             (pos -1145.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb008")
+            (id "0x8bbd3a0")
             (pos -1657.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb0d8")
+            (id "0x8d48b20")
             (pos -1401.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb1a8")
+            (id "0x8d48bf0")
             (pos -1913.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb278")
+            (id "0x8d48cc0")
             (pos -2169.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb348")
+            (id "0x8d48d90")
             (pos -3193.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb418")
+            (id "0x8d48e60")
             (pos -2937.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb4e8")
+            (id "0x8d48f30")
             (pos -2681.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0))
           (decal
-            (id "0xaaeb5b8")
+            (id "0x8d49000")
             (pos -2649.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeb688")
+            (id "0x8d490d0")
             (pos -2905.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeb758")
+            (id "0x8d491a0")
             (pos -2809.03 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xaaeb828")
+            (id "0x8d49270")
             (pos -3321.03 1380.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone2.png")
             (type 0))
           (decal
-            (id "0xaaeb8f8")
+            (id "0x8d49340")
             (pos -2393.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeb9c8")
+            (id "0x8d49410")
             (pos -2137.87 1187.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/rail.png")
             (type 0))
           (decal
-            (id "0xaaeba98")
+            (id "0x8d494e0")
             (pos -2425.03 1273.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stone.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Endwall")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa018398")
+            (id "0x8a5d8d0")
             (pos -1681.93 441.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebbb8")
+            (id "0x87e3380")
             (pos -1681.93 313.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebc68")
+            (id "0x881f4f0")
             (pos -1681.93 953.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebd18")
+            (id "0x881f5c0")
             (pos -1681.93 825.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebdc8")
+            (id "0x881f6d0")
             (pos -1681.93 569.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebe78")
+            (id "0x881f7b0")
             (pos -1681.93 697.438)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebf28")
+            (id "0x8c32c18")
             (pos -1681.93 1081.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor_left.png")
             (type 0))
           (decal
-            (id "0xaaebfd8")
+            (id "0x8c32cf8")
             (pos -1883.06 1017.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec050")
+            (id "0x8d4a3d0")
             (pos -2253.06 1017.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec0f8")
+            (id "0x8d4a438")
             (pos -2253.06 757.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec1a0")
+            (id "0x8d4a4d0")
             (pos -1883.06 757.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec248")
+            (id "0x8d4a5a8")
             (pos -2253.06 501.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec2f0")
+            (id "0x8d4a680")
             (pos -1883.06 501.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec398")
+            (id "0x8d4a758")
             (pos -2251.49 245.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec440")
+            (id "0x8d4a830")
             (pos -1881.49 245.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/steelplate.png")
             (type 0))
           (decal
-            (id "0xaaec4e8")
+            (id "0x8d4a908")
             (pos -1763.88 1198.81)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xaaec560")
+            (id "0x8d4a9d8")
             (pos -2080.29 1241.78)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xaaec5d8")
+            (id "0x8d4aaa8")
             (pos -2400.6 1212.48)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xaaec678")
+            (id "0x8d4ab78")
             (pos -2376.41 267.922)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xaaec718")
+            (id "0x8d4ac48")
             (pos -2118.6 301.125)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xaaec7b8")
+            (id "0x8d4ad18")
             (pos -1854.93 254.25)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Ground")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0184a8")
+            (id "0x8a5da28")
             (pos 1836.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xa0bec80")
+            (id "0x8e0a368")
             (pos 2144.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xa0becf8")
+            (id "0x8e0af40")
             (pos -1551.87 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaec8a0")
+            (id "0x8e0afd0")
             (pos -1243.87 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaec940")
+            (id "0x8e0b060")
             (pos -935.87 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaec9e0")
+            (id "0x8e0b130")
             (pos -627.87 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaeca80")
+            (id "0x8e0b200")
             (pos -319.87 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaecb20")
+            (id "0x8c301c0")
             (pos -11.87 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaecbc0")
+            (id "0x8c30290")
             (pos 296.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaecc90")
+            (id "0x8c30360")
             (pos 604.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaecd60")
+            (id "0x8c30430")
             (pos 912.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaece30")
+            (id "0x8c30500")
             (pos 1220.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0))
           (decal
-            (id "0xaaecf00")
+            (id "0x8c305d0")
             (pos 1528.13 1103.44)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/ground.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Stairs")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects)
         (child-layers
           (layer
             (name "Shadow")
             (visible 1)
-            (locked 1)
+            (locked 0)
             (objects
               (decal
-                (id "0xaaedd08")
+                (id "0x8c30718")
                 (pos -1672.24 1055.45)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/dark.png")
                 (type 0))
               (decal
-                (id "0xaaeddb0")
+                (id "0x8c307c0")
                 (pos -1743.76 802.297)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/dark.png")
                 (type 0))
               (decal
-                (id "0xaaede80")
+                (id "0x8c30890")
                 (pos -1723.47 1039.37)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/dark.png")
                 (type 0))
               (decal
-                (id "0xaaedf50")
+                (id "0x8c30960")
                 (pos -1744.37 547.859)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/dark.png")
                 (type 0))
               (decal
-                (id "0xaaee020")
+                (id "0x8c30a30")
                 (pos -1484.44 1141.69)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/dark.png")
                 (type 0))
               (decal
-                (id "0xaaee0f0")
+                (id "0x8c30f40")
                 (pos -937.569 1133.87)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/dark.png")
                 (type 0)))
             (child-layers))
           (layer
             (name "StairHandle")
             (visible 1)
-            (locked 1)
+            (locked 0)
             (objects
               (decal
-                (id "0xaaed210")
+                (id "0x8c31488")
                 (pos -616.808 986.023)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xaaed2a8")
+                (id "0x8d4a358")
                 (pos -747.308 903.961)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xaaed360")
+                (id "0x8c32378")
                 (pos -866.058 819.586)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xaaed438")
+                (id "0x8c32410")
                 (pos -994.995 739.086)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xa0a1e50")
+                (id "0x8c31c38")
                 (pos -1121.56 643.773)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xa0a1f28")
+                (id "0x8c31d10")
                 (pos -1266.12 541.398)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xa0a2000")
+                (id "0x8c31de8")
                 (pos -1417.24 435.273)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xa0a20d8")
+                (id "0x8c31ec0")
                 (pos -616.808 986.023)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xa0a21b0")
+                (id "0x8c31f98")
                 (pos -1548.99 346.023)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail.png")
                 (type 0))
               (decal
-                (id "0xa0a2288")
+                (id "0x8da0910")
                 (pos -1513.04 261.304)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2360")
+                (id "0x8ea6978")
                 (pos -1401.54 337.804)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2438")
+                (id "0x8da1150")
                 (pos -1284.79 418.304)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2510")
+                (id "0x8da11e8")
                 (pos -1168.6 497.851)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a25e8")
+                (id "0x8da12a0")
                 (pos -1055.1 576.164)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a26c0")
+                (id "0x8da1378")
                 (pos -951.354 648.164)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2798")
+                (id "0x8da1450")
                 (pos -951.354 648.164)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2870")
+                (id "0x8da1528")
                 (pos -840.354 724.914)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2948")
+                (id "0x8da1600")
                 (pos -727.167 804.352)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0))
               (decal
-                (id "0xa0a2a20")
+                (id "0x8da16d8")
                 (pos -618.354 880.164)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/handrail2.png")
                 (type 0)))
             (child-layers))
           (layer
             (name "Stairs")
             (visible 1)
-            (locked 1)
+            (locked 0)
             (objects
               (decal
-                (id "0xaaed1d8")
+                (id "0x8c31408")
                 (pos -1136.93 991.617)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a3600")
+                (id "0x8da2258")
                 (pos -908.368 955.628)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a3678")
+                (id "0x8da1a60")
                 (pos -1135.37 789.851)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a3718")
+                (id "0x8da1af0")
                 (pos -1585.06 933.992)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a2b20")
+                (id "0x8da1bc0")
                 (pos -1360.81 868.503)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a2bc0")
+                (id "0x8da1c90")
                 (pos -1356.49 631.226)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a2c60")
+                (id "0x8f003e0")
                 (pos -1583.49 700.43)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a2d00")
+                (id "0x8f004b0")
                 (pos -1583.49 453.94)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0))
               (decal
-                (id "0xa0a2da0")
+                (id "0x8f00580")
                 (pos -1196.46 916.438)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/door.png")
                 (type 0))
               (decal
-                (id "0xa0a2e58")
+                (id "0x8ea4ae8")
                 (pos -681.368 1109.43)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/stairs.png")
                 (type 0)))
             (child-layers))
           (layer
             (name "StairWall")
             (visible 1)
-            (locked 1)
+            (locked 0)
             (objects
               (decal
-                (id "0xa0a90c8")
+                (id "0x8ea54a0")
                 (pos -658.251 306.508)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a9160")
+                (id "0x8ecfc40")
                 (pos -658.251 434.508)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4200")
+                (id "0x8ecfe50")
                 (pos -656.688 690.508)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a42d8")
+                (id "0x8ea6058")
                 (pos -656.688 562.508)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a43b0")
+                (id "0x8ea60f0")
                 (pos -1424.46 307.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4488")
+                (id "0x8ea61c8")
                 (pos -656.462 935.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/tunnelplate_bottom.png")
                 (type 0))
               (decal
-                (id "0xa0a4568")
+                (id "0x8ea65e8")
                 (pos -656.688 818.508)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4640")
+                (id "0x8fef830")
                 (pos -656.688 946.508)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4718")
+                (id "0x8fef8c8")
                 (pos -656.688 1074.51)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a47f0")
+                (id "0x8fef980")
                 (pos -1424.46 563.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a48c8")
+                (id "0x8fefa58")
                 (pos -1424.46 691.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a49a0")
+                (id "0x8fefb30")
                 (pos -1424.46 435.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4a78")
+                (id "0x8ecd9e8")
                 (pos -1424.46 819.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4b50")
+                (id "0x8ecdac0")
                 (pos -1168.46 819.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4c28")
+                (id "0x8ecdb98")
                 (pos -1168.46 435.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4d00")
+                (id "0x8ecdc70")
                 (pos -1168.46 691.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4dd8")
+                (id "0x8ecdd48")
                 (pos -1168.46 563.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4eb0")
+                (id "0x8ecde20")
                 (pos -1168.46 307.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a4f88")
+                (id "0x8ecdef8")
                 (pos -912.462 307.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a5060")
+                (id "0x8ecdfd0")
                 (pos -912.462 563.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a5138")
+                (id "0x8ece0a8")
                 (pos -912.462 691.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a5210")
+                (id "0x8ece180")
                 (pos -912.462 435.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0))
               (decal
-                (id "0xa0a52e8")
+                (id "0x8ece258")
                 (pos -912.462 819.117)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/wallplate.png")
                 (type 0)))
             (child-layers))))
       (layer
         (name "WallShadow")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0a7a88")
+            (id "0x8ea52d8")
             (pos -498.687 804.29)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
-            (id "0xa0a7980")
+            (id "0x8ea5310")
             (pos -418.187 492.016)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Train")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0a3138")
+            (id "0x8f5e3b0")
             (pos -752 0)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_front.png")
             (type 0))
           (decal
-            (id "0xaaed170")
+            (id "0x8ea5410")
             (pos 696 0)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_back.png")
             (type 0))
           (decal
-            (id "0xa0a3038")
+            (id "0x8c312e0")
             (pos 1705.54 939.785)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/train_middle.png")
             (type 0))
           (decal
-            (id "0xa0a7848")
+            (id "0x8ece3b8")
             (pos -586.991 241.125)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_engine_front.png")
             (type 0))
           (decal
-            (id "0xa0a7ef0")
+            (id "0x8ece4d8")
             (pos 593.009 242.125)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_engine_back.png")
             (type 0))
           (decal
-            (id "0xa0a8010")
+            (id "0x8ece5f8")
             (pos -206.991 241.125)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_engine_middle.png")
             (type 0))
           (decal
-            (id "0xa0a8130")
+            (id "0x8ece718")
             (pos 249.009 241.125)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_engine_middle.png")
             (type 0))
           (decal
-            (id "0xa0a8250")
+            (id "0x8ecec50")
             (pos 0.719482 -14.875)
-            (parent "0xa0a3038")
-            (layer 1)
+            (parent "0x8c312e0")
+            (select-mask 1)
             (path "images/decal/train_door.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Tunnel Wall")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
-            (id "0xa0a87e8")
+            (id "0x8ecf3f8")
             (pos 1790.43 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a53c8")
+            (id "0x8f5bfe0")
             (pos 2046.43 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a5488")
+            (id "0x8f5c0c0")
             (pos 1278.43 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a5568")
+            (id "0x8f5c1a0")
             (pos 1534.43 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a5648")
+            (id "0x8f5c280")
             (pos 1022.43 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a5728")
+            (id "0x8f5c360")
             (pos 2165.35 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a5808")
+            (id "0x8f5c4a8")
             (pos 2101.35 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a58e0")
+            (id "0x8f5da10")
             (pos 2037.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a59c0")
+            (id "0x8f5dab0")
             (pos 1781.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a5aa0")
+            (id "0x8f5db50")
             (pos 1845.35 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a5b78")
+            (id "0x8f5dbf8")
             (pos 1909.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a5c58")
+            (id "0x8f5dcd8")
             (pos 1397.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a5d38")
+            (id "0x8f5ddb8")
             (pos 1333.35 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a5e10")
+            (id "0x8f5de90")
             (pos 1269.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a5ef0")
+            (id "0x9049c08")
             (pos 1525.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a5fd0")
+            (id "0x9049cc8")
             (pos 1589.35 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a60a8")
+            (id "0x9049da0")
             (pos 1653.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6188")
+            (id "0x9049e80")
             (pos 629.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6268")
+            (id "0x9049f60")
             (pos 565.354 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a6340")
+            (id "0x904a038")
             (pos 501.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6420")
+            (id "0x904a118")
             (pos 245.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6500")
+            (id "0x904a1f8")
             (pos 309.354 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a65d8")
+            (id "0x904a2d0")
             (pos 373.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a66b8")
+            (id "0x904a3b0")
             (pos 885.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6798")
+            (id "0x904a490")
             (pos 821.354 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a6870")
+            (id "0x904a568")
             (pos 757.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6950")
+            (id "0x904a648")
             (pos 1013.35 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6a30")
+            (id "0x904a728")
             (pos 1077.35 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a6b08")
+            (id "0x904a800")
             (pos 1141.34 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6be8")
+            (id "0x904a8e0")
             (pos -394.638 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6cc8")
+            (id "0x904a9c0")
             (pos -138.648 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6da8")
+            (id "0x904aaa0")
             (pos -202.646 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a6e80")
+            (id "0x904ab78")
             (pos -266.648 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a6f60")
+            (id "0x904ac58")
             (pos -10.6475 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a7040")
+            (id "0x904ad38")
             (pos 53.3544 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a7118")
+            (id "0x904ae10")
             (pos 117.352 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a71f8")
+            (id "0x904aef0")
             (pos 766.427 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a72d8")
+            (id "0x904afd0")
             (pos 510.427 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a9208")
+            (id "0x904b0b0")
             (pos 254.427 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a92d0")
+            (id "0x904b190")
             (pos -458.636 464.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate.png")
             (type 0))
           (decal
-            (id "0xa0a93a8")
+            (id "0x904b268")
             (pos -522.638 656.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_small.png")
             (type 0))
           (decal
-            (id "0xa0a9488")
+            (id "0x904b348")
             (pos -1.57263 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a9568")
+            (id "0x904b428")
             (pos -257.573 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0))
           (decal
-            (id "0xa0a9648")
+            (id "0x904b508")
             (pos -513.573 900.717)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/tunnelplate_bottom.png")
             (type 0)))
         (child-layers)))))

Modified: trunk/windstille/data/sectors/trainstation/worker.wst
===================================================================
--- trunk/windstille/data/sectors/trainstation/worker.wst	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/data/sectors/trainstation/worker.wst	2009-03-30 19:08:57 UTC (rev 2827)
@@ -8,696 +8,806 @@
   (layer
     (name "Scene")
     (visible 1)
-    (locked 1)
+    (locked 0)
     (objects
       (decal
+        (id "0x93586f8")
         (pos 1204.55 268.312)
         (parent "")
-        (layer 1)
+        (select-mask 1)
         (path "images/decal/humanreference.png")
         (type 0)))
     (child-layers
       (layer
         (name "Light")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
+            (id "0x935bb60")
             (pos 58.9653 321.293)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935bff0")
             (pos 1347.85 311.818)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935c080")
             (pos -518.274 304.576)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935c110")
             (pos 667.297 305.114)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935c1a0")
             (pos 45.189 -395.95)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935c230")
             (pos 653.521 -410.567)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935c2c0")
             (pos -535.175 -411.104)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1))
           (decal
+            (id "0x935c350")
             (pos 1334.07 -403.863)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/light.png")
             (type 1)))
         (child-layers
           (layer
             (name "Highlight")
             (visible 1)
-            (locked 1)
+            (locked 0)
             (objects
               (decal
+                (id "0x935c8a0")
                 (pos -520.276 3.38026)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x939bac8")
                 (pos 657.849 1.81776)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x939bb00")
                 (pos 1321.1 -0.557228)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x939c050")
                 (pos 36.7242 -0.55722)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x939c0f8")
                 (pos -499.515 23.7381)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x939c190")
                 (pos 46.7499 29.8416)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x939c228")
                 (pos 656.491 10.0661)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x936f418")
                 (pos 1331.54 20.6863)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x936f4b0")
                 (pos 1394.11 -619.545)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x936f548")
                 (pos 728.826 -616.493)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x936f5e0")
                 (pos 109.319 -610.39)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x936f678")
                 (pos -436.945 -616.493)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/decal/rooflamp_bloom.png")
                 (type 0))
               (decal
+                (id "0x936f710")
                 (pos 99.2935 -640.789)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x936f7b8")
                 (pos 1383.67 -640.789)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x936f860")
                 (pos 720.418 -638.414)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2))
               (decal
+                (id "0x936f908")
                 (pos -457.706 -636.851)
                 (parent "")
-                (layer 1)
+                (select-mask 1)
                 (path "images/objects/apartmentlamp_highlight.png")
                 (type 2)))
             (child-layers))))
       (layer
         (name "Ground")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
+            (id "0x9370518")
             (pos 1641.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x935ab50")
             (pos 873.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x935abb8")
             (pos 1130.5 448.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x935ac50")
             (pos 361.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9370cc8")
             (pos 105.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9370d60")
             (pos -150.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9370df8")
             (pos 617.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9370e90")
             (pos 1385.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9370f28")
             (pos -101.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9371098")
             (pos 154.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x939bf08")
             (pos 410.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9371218")
             (pos 1178.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x93712b0")
             (pos 922.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9371348")
             (pos 666.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x93587e8")
             (pos 1690.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9358880")
             (pos 1434.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9358918")
             (pos -918.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x93589b0")
             (pos -662.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9358a48")
             (pos -1430.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9358ae0")
             (pos -1686.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9358b78")
             (pos -1942.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9358c10")
             (pos -1174.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9358ca8")
             (pos -406.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9358d40")
             (pos -1893.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9358dd8")
             (pos -1637.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9358e70")
             (pos -1381.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9358f08")
             (pos -613.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9358fa0")
             (pos -869.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359038")
             (pos -1125.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x93590d0")
             (pos -357.75 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359168")
             (pos 1897.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359200")
             (pos 2153.5 447.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359298")
             (pos 1946.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359330")
             (pos 2202.25 -64.6875)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x93593c8")
             (pos 1915.34 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359460")
             (pos -388.656 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x93594f8")
             (pos -644.656 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359590")
             (pos -900.656 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359628")
             (pos 1403.34 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x93596c0")
             (pos 635.344 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359758")
             (pos -132.656 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x93597f0")
             (pos 123.344 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359888")
             (pos 379.344 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359920")
             (pos 1147.34 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x93599b8")
             (pos 891.344 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359a50")
             (pos 1659.34 -192.687)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueground.png")
             (type 0))
           (decal
+            (id "0x9359ae8")
             (pos 2225.09 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359b80")
             (pos 1969.09 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359c18")
             (pos -334.905 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359cb0")
             (pos -1102.91 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359d48")
             (pos -846.905 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359de0")
             (pos -590.905 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359e78")
             (pos 1457.09 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359f10")
             (pos 1713.09 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x9359fa8")
             (pos 689.095 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x935a040")
             (pos 945.095 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x935a0d8")
             (pos 1201.09 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x935a170")
             (pos 433.095 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x935a208")
             (pos 177.095 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0))
           (decal
+            (id "0x935a2a0")
             (pos -78.9053 -704.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/blueroof.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Stairs")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
+            (id "0x936fc70")
             (pos 1346.67 98.8136)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair2.png")
             (type 0))
           (decal
+            (id "0x936f9f8")
             (pos 1346.67 258.814)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair1.png")
             (type 0))
           (decal
+            (id "0x936fae0")
             (pos 1474.67 386.814)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair1.png")
             (type 0))
           (decal
+            (id "0x935c738")
             (pos 1474.67 226.814)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair2.png")
             (type 0))
           (decal
+            (id "0x935c7c8")
             (pos 1218.67 -29.1864)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair2.png")
             (type 0))
           (decal
+            (id "0x936fca8")
             (pos 1090.67 2.81363)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair1.png")
             (type 0))
           (decal
+            (id "0x936fd38")
             (pos 1090.67 -157.186)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair2.png")
             (type 0))
           (decal
+            (id "0x936fdc8")
             (pos 1218.67 130.814)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair1.png")
             (type 0))
           (decal
+            (id "0x935b998")
             (pos 958.609 -125.186)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair1.png")
             (type 0))
           (decal
+            (id "0x935ba28")
             (pos 958.609 -285.186)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/stair2.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Locker")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
+            (id "0x935a700")
             (pos 337.491 253.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/locker.png")
             (type 0))
           (decal
+            (id "0x93eed98")
             (pos 465.491 253.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/locker.png")
             (type 0))
           (decal
+            (id "0x93eee30")
             (pos 593.491 253.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/locker.png")
             (type 0))
           (decal
+            (id "0x94ab1e8")
             (pos 721.491 253.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/locker.png")
             (type 0))
           (decal
+            (id "0x94ab280")
             (pos 849.491 253.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/locker.png")
             (type 0))
           (decal
+            (id "0x93ef710")
             (pos -707.071 240.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor.png")
             (type 0))
           (decal
+            (id "0x935c6d0")
             (pos -708.083 255.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/door.png")
             (type 0))
           (decal
+            (id "0x95dd888")
             (pos -326.468 339.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bed.png")
             (type 0))
           (decal
+            (id "0x93f0240")
             (pos 72.6572 339.312)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bed.png")
             (type 0))
           (decal
+            (id "0x93eff18")
             (pos -177.277 -384.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/door.png")
             (type 0))
           (decal
+            (id "0x94a9790")
             (pos -175.578 -399.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor.png")
             (type 0))
           (decal
+            (id "0x94a9828")
             (pos 411.525 -399.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor.png")
             (type 0))
           (decal
+            (id "0x94a98c0")
             (pos 409.826 -384.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/door.png")
             (type 0))
           (decal
+            (id "0x94a9950")
             (pos -726.788 -399.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/elevatordoor.png")
             (type 0))
           (decal
+            (id "0x94a99e8")
             (pos -728.486 -384.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/door.png")
             (type 0)))
         (child-layers))
@@ -707,177 +817,205 @@
         (locked 0)
         (objects
           (decal
+            (id "0x95058b0")
             (pos 1432.09 426.524)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9a88")
             (pos 325.796 355.072)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9ae8")
             (pos 870.812 337.75)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9b48")
             (pos 586.047 254.156)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9ba8")
             (pos -224.968 432.364)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9c08")
             (pos 67.5322 426.114)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9c80")
             (pos 1152.54 -13.9169)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9d10")
             (pos 929.427 -188.448)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0))
           (decal
+            (id "0x94a9da0")
             (pos 1198.26 393.161)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/decal/dark.png")
             (type 0)))
         (child-layers))
       (layer
         (name "Background")
         (visible 1)
-        (locked 1)
+        (locked 0)
         (objects
           (decal
+            (id "0x94a9e90")
             (pos 346.25 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x94aa580")
             (pos 730.25 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x94aa798")
             (pos 1498.25 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x94aa830")
             (pos 1114.25 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x96d7c08")
             (pos -37.75 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x96d7ca0")
             (pos -1573.75 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x96d7d38")
             (pos -421.75 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503708")
             (pos -805.75 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x95037a0")
             (pos -1189.75 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503838")
             (pos 1882.25 191.313)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x95038d0")
             (pos 1975.29 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503968")
             (pos -1096.71 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503a00")
             (pos -712.715 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503a98")
             (pos -328.715 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503b30")
             (pos 55.2852 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503bc8")
             (pos 1207.29 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503c60")
             (pos 1591.29 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503cf8")
             (pos 823.285 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0))
           (decal
+            (id "0x9503d90")
             (pos 439.285 -448.688)
             (parent "")
-            (layer 1)
+            (select-mask 1)
             (path "images/objects/bluewall.png")
             (type 0)))
         (child-layers)))))



From grumbel at mail.berlios.de  Mon Mar 30 21:20:22 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 21:20:22 +0200
Subject: [Windstille-commit] r2828 - in trunk/windstille/src: . editor
Message-ID: <200903301920.n2UJKMKT006818@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 21:20:22 +0200 (Mon, 30 Mar 2009)
New Revision: 2828

Added:
   trunk/windstille/src/editor/layer.cpp
   trunk/windstille/src/editor/layer.hpp
Removed:
   trunk/windstille/src/editor/hard_layer.cpp
   trunk/windstille/src/editor/hard_layer.hpp
Modified:
   trunk/windstille/src/SConscript
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/layer_manager.cpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model.hpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Renamed HardLayer to Layer

Modified: trunk/windstille/src/SConscript
===================================================================
--- trunk/windstille/src/SConscript	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/SConscript	2009-03-30 19:20:22 UTC (rev 2828)
@@ -239,7 +239,7 @@
         'editor/decal_object_model.cpp',
         'editor/editor_window.cpp',
         'editor/layer_widget.cpp',
-        'editor/hard_layer.cpp',
+        'editor/layer.cpp',
         'editor/main.cpp',
         'editor/minimap_widget.cpp',
         'editor/object_model.cpp',      

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -799,7 +799,7 @@
     {
       if (WindstilleWidget* wst = get_windstille_widget())
         {
-          HardLayerHandle layer = wst->get_current_layer();
+          LayerHandle layer = wst->get_current_layer();
           for(Selection::reverse_iterator i = clipboard->rbegin(); i != clipboard->rend(); ++i)
             {
               layer->add(*i);
@@ -818,7 +818,7 @@
   // Select all on current layer
   if (WindstilleWidget* wst = get_windstille_widget())
     {
-      HardLayerHandle layer = wst->get_current_layer();
+      LayerHandle layer = wst->get_current_layer();
       SelectionHandle selection = Selection::create();
       selection->add(layer->begin(), layer->end());
       wst->set_selection(selection);

Deleted: trunk/windstille/src/editor/hard_layer.cpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/hard_layer.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -1,216 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#include "sector_model.hpp"
-#include "hard_layer.hpp"
-
-HardLayer::HardLayer()
-  : visible(true),
-    locked(false)
-{
-}
-
-HardLayer::~HardLayer()
-{
-}
-
-bool
-HardLayer::has_object(const ObjectModelHandle& object) const
-{
-  return std::find(objects.begin(), objects.end(), object) != objects.end();
-}
-
-void
-HardLayer::add(const ObjectModelHandle& object)
-{
-  objects.push_back(object);
-}
-
-void
-HardLayer::remove(const ObjectModelHandle& object)
-{
-  objects.remove(object);
-}
-
-void
-HardLayer::draw(SceneContext& sc, const SelectMask& select_mask)
-{
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      if (select_mask.match((*i)->get_select_mask()))
-        (*i)->draw(sc);
-    }
-}
-
-void
-HardLayer::update(const Gtk::TreeModel::Row& row)
-{
-  name    = ((Glib::ustring)row[LayerManagerColumns::instance().name]).raw();
-  visible = row[LayerManagerColumns::instance().visible];
-  locked  = row[LayerManagerColumns::instance().locked];
-}
-
-void
-HardLayer::update(float delta)
-{
-  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      (*i)->update(delta);
-    }
-}
-
-ObjectModelHandle
-HardLayer::get_object_at(const Vector2f& pos, const SelectMask& select_mask) const
-{
-  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
-    {
-      if (select_mask.match((*i)->get_select_mask()) &&
-          (*i)->get_bounding_box().is_inside(pos))
-        {
-          return *i;
-        }
-    }
-  return ObjectModelHandle();
-}
-
-SelectionHandle
-HardLayer::get_selection(const Rectf& rect, const SelectMask& select_mask) const
-{
- SelectionHandle selection = Selection::create();
-
-  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
-    {
-      if (select_mask.match((*i)->get_select_mask()) &&
-          rect.contains((*i)->get_bounding_box()))
-        {
-          selection->add(*i);
-        }
-    }
-
-  return selection;
-}
-
-void
-HardLayer::raise_to_top(ObjectModelHandle object)
-{
-  objects.remove(object);
-  objects.push_back(object); 
-}
-
-void
-HardLayer::lower_to_bottom(ObjectModelHandle object)
-{
-  objects.remove(object);
-  objects.push_front(object); 
-}
-
-struct OverlapsWith
-{
-  Rectf rect;
-
-  OverlapsWith(const Rectf& rect_)
-    : rect(rect_)
-  {}
-
-  bool operator()(const ObjectModelHandle& object) {
-    return rect.is_overlapped(object->get_bounding_box());
-  }
-};
-
-void
-HardLayer::raise(ObjectModelHandle object)
-{
-  Objects::iterator i = std::find(objects.begin(), objects.end(), object);
-  assert(i != objects.end());
-  Objects::iterator j = i;
-  ++j;
-  j = std::find_if(j, objects.end(), OverlapsWith(object->get_bounding_box()));
-
-  if (j == objects.end())
-    {
-      // object overlaps with no other object, no point in raising it
-    }
-  else
-    {
-      objects.erase(i);
-      objects.insert(++j, object);
-    }
-}
-
-void
-HardLayer::lower(ObjectModelHandle object)
-{
-  // Mostly the same as raise, just with reverse iterators
-  Objects::reverse_iterator i = std::find(objects.rbegin(), objects.rend(), object);
-
-  Objects::reverse_iterator j = i;
-  ++j;
-  j = std::find_if(j, objects.rend(), OverlapsWith(object->get_bounding_box()));
-
-  if (j == objects.rend())
-    {
-      // object overlaps with no other object, no point in lowering it
-    }
-  else
-    {
-      // the base() of base in one further then where the reverse
-      // iterator was, so we have to move back to get the same
-      // position
-      objects.erase(--(i.base()));
-      objects.insert(--(j.base()), object);
-    }
-}
-
-SnapData
-HardLayer::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
-{
-  //float min_x_offset = std::numeric_limits<float>::max();
-  //float min_y_offset = std::numeric_limits<float>::max();
-  SnapData best_snap;
-
-  // Find the smallest snap offset
-  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
-    {
-      // object is not in the list of objects to ignore
-      if ((*i)->is_snappable() &&
-          ignore_objects.find(*i) == ignore_objects.end())
-        {
-          SnapData snap = (*i)->snap_object(rect);
-          best_snap.merge(snap);
-        }
-    }
-
-  return best_snap;
-}
-
-void
-HardLayer::write(FileWriter& writer) const
-{
-  for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
-    {
-      (*i)->write(writer);
-    }
-}
-
-HardLayerHandle
-HardLayer::clone() const
-{
-  return HardLayerHandle();
-}
-
-/* EOF */

Deleted: trunk/windstille/src/editor/hard_layer.hpp
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/hard_layer.hpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -1,95 +0,0 @@
-/*
-**  Windstille - A Sci-Fi Action-Adventure Game
-**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software: you can redistribute it and/or modify
-**  it under the terms of the GNU General Public License as published by
-**  the Free Software Foundation, either version 3 of the License, or
-**  (at your option) any later version.
-**  
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-**  
-**  You should have received a copy of the GNU General Public License
-**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-*/
-
-#ifndef HEADER_WINDSTILLE_EDITOR_HARD_LAYER_HPP
-#define HEADER_WINDSTILLE_EDITOR_HARD_LAYER_HPP
-
-#include <boost/shared_ptr.hpp>
-#include <list>
-#include <set>
-#include <string>
-#include <gtkmm/treemodel.h>
-
-#include "selection.hpp"
-#include "object_model.hpp"
-
-class HardLayer;
-typedef boost::shared_ptr<HardLayer> HardLayerHandle;
-
-class HardLayer
-{
-private:
-  typedef std::list<ObjectModelHandle> Objects;
-
-  Objects objects;
-  std::string name;
-  bool visible;
-  bool locked;
-    
-public:
-  typedef Objects::iterator iterator;
-
-  HardLayer();
-  ~HardLayer();
-  
-  void set_row_ptr(Gtk::TreeModel::Row* row_ptr);
-
-  iterator begin() { return objects.begin(); }
-  iterator end()   { return objects.end(); }
-
-  void set_name(const std::string& str) { name = str; }
-  std::string get_name() const { return name; }
-
-  bool is_visible() const { return visible; }
-  bool is_locked() const { return locked; }
-
-  // These must not be used, since they don't update the Gtk::TreeModel::Row
-  //void set_visible(bool v) { visible = v; }
-  //void set_locked(bool v) { locked = v; }
-
-  bool has_object(const ObjectModelHandle& object) const;
-
-  void add(const ObjectModelHandle& object);
-  void remove(const ObjectModelHandle& object);
-
-  void draw(SceneContext& sc, const SelectMask& layers);
-  void update(float delta);
-  void update(const Gtk::TreeModel::Row& row);
-
-  ObjectModelHandle get_object_at(const Vector2f& pos, const SelectMask& layers) const;
-  SelectionHandle   get_selection(const Rectf& rect, const SelectMask& layers) const;
-
-  void raise_to_top(ObjectModelHandle object);
-  void lower_to_bottom(ObjectModelHandle object);
-  void raise(ObjectModelHandle object);
-  void lower(ObjectModelHandle object);
-
-  SnapData snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const;
-
-  void write(FileWriter& writer) const;
-
-  HardLayerHandle clone() const;
-  
-private:
-  HardLayer(const HardLayer&);
-  HardLayer& operator=(const HardLayer&);
-};
-
-#endif
-
-/* EOF */

Copied: trunk/windstille/src/editor/layer.cpp (from rev 2826, trunk/windstille/src/editor/hard_layer.cpp)
===================================================================
--- trunk/windstille/src/editor/hard_layer.cpp	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/src/editor/layer.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -0,0 +1,216 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include "sector_model.hpp"
+#include "layer.hpp"
+
+Layer::Layer()
+  : visible(true),
+    locked(false)
+{
+}
+
+Layer::~Layer()
+{
+}
+
+bool
+Layer::has_object(const ObjectModelHandle& object) const
+{
+  return std::find(objects.begin(), objects.end(), object) != objects.end();
+}
+
+void
+Layer::add(const ObjectModelHandle& object)
+{
+  objects.push_back(object);
+}
+
+void
+Layer::remove(const ObjectModelHandle& object)
+{
+  objects.remove(object);
+}
+
+void
+Layer::draw(SceneContext& sc, const SelectMask& select_mask)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      if (select_mask.match((*i)->get_select_mask()))
+        (*i)->draw(sc);
+    }
+}
+
+void
+Layer::update(const Gtk::TreeModel::Row& row)
+{
+  name    = ((Glib::ustring)row[LayerManagerColumns::instance().name]).raw();
+  visible = row[LayerManagerColumns::instance().visible];
+  locked  = row[LayerManagerColumns::instance().locked];
+}
+
+void
+Layer::update(float delta)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->update(delta);
+    }
+}
+
+ObjectModelHandle
+Layer::get_object_at(const Vector2f& pos, const SelectMask& select_mask) const
+{
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      if (select_mask.match((*i)->get_select_mask()) &&
+          (*i)->get_bounding_box().is_inside(pos))
+        {
+          return *i;
+        }
+    }
+  return ObjectModelHandle();
+}
+
+SelectionHandle
+Layer::get_selection(const Rectf& rect, const SelectMask& select_mask) const
+{
+ SelectionHandle selection = Selection::create();
+
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      if (select_mask.match((*i)->get_select_mask()) &&
+          rect.contains((*i)->get_bounding_box()))
+        {
+          selection->add(*i);
+        }
+    }
+
+  return selection;
+}
+
+void
+Layer::raise_to_top(ObjectModelHandle object)
+{
+  objects.remove(object);
+  objects.push_back(object); 
+}
+
+void
+Layer::lower_to_bottom(ObjectModelHandle object)
+{
+  objects.remove(object);
+  objects.push_front(object); 
+}
+
+struct OverlapsWith
+{
+  Rectf rect;
+
+  OverlapsWith(const Rectf& rect_)
+    : rect(rect_)
+  {}
+
+  bool operator()(const ObjectModelHandle& object) {
+    return rect.is_overlapped(object->get_bounding_box());
+  }
+};
+
+void
+Layer::raise(ObjectModelHandle object)
+{
+  Objects::iterator i = std::find(objects.begin(), objects.end(), object);
+  assert(i != objects.end());
+  Objects::iterator j = i;
+  ++j;
+  j = std::find_if(j, objects.end(), OverlapsWith(object->get_bounding_box()));
+
+  if (j == objects.end())
+    {
+      // object overlaps with no other object, no point in raising it
+    }
+  else
+    {
+      objects.erase(i);
+      objects.insert(++j, object);
+    }
+}
+
+void
+Layer::lower(ObjectModelHandle object)
+{
+  // Mostly the same as raise, just with reverse iterators
+  Objects::reverse_iterator i = std::find(objects.rbegin(), objects.rend(), object);
+
+  Objects::reverse_iterator j = i;
+  ++j;
+  j = std::find_if(j, objects.rend(), OverlapsWith(object->get_bounding_box()));
+
+  if (j == objects.rend())
+    {
+      // object overlaps with no other object, no point in lowering it
+    }
+  else
+    {
+      // the base() of base in one further then where the reverse
+      // iterator was, so we have to move back to get the same
+      // position
+      objects.erase(--(i.base()));
+      objects.insert(--(j.base()), object);
+    }
+}
+
+SnapData
+Layer::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
+{
+  //float min_x_offset = std::numeric_limits<float>::max();
+  //float min_y_offset = std::numeric_limits<float>::max();
+  SnapData best_snap;
+
+  // Find the smallest snap offset
+  for(Objects::const_reverse_iterator i = objects.rbegin(); i != objects.rend(); ++i)
+    {
+      // object is not in the list of objects to ignore
+      if ((*i)->is_snappable() &&
+          ignore_objects.find(*i) == ignore_objects.end())
+        {
+          SnapData snap = (*i)->snap_object(rect);
+          best_snap.merge(snap);
+        }
+    }
+
+  return best_snap;
+}
+
+void
+Layer::write(FileWriter& writer) const
+{
+  for(Objects::const_iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      (*i)->write(writer);
+    }
+}
+
+LayerHandle
+Layer::clone() const
+{
+  return LayerHandle();
+}
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer.cpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Copied: trunk/windstille/src/editor/layer.hpp (from rev 2826, trunk/windstille/src/editor/hard_layer.hpp)
===================================================================
--- trunk/windstille/src/editor/hard_layer.hpp	2009-03-30 19:07:49 UTC (rev 2826)
+++ trunk/windstille/src/editor/layer.hpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -0,0 +1,95 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_EDITOR_LAYER_HPP
+#define HEADER_WINDSTILLE_EDITOR_LAYER_HPP
+
+#include <boost/shared_ptr.hpp>
+#include <list>
+#include <set>
+#include <string>
+#include <gtkmm/treemodel.h>
+
+#include "selection.hpp"
+#include "object_model.hpp"
+
+class Layer;
+typedef boost::shared_ptr<Layer> LayerHandle;
+
+class Layer
+{
+private:
+  typedef std::list<ObjectModelHandle> Objects;
+
+  Objects objects;
+  std::string name;
+  bool visible;
+  bool locked;
+    
+public:
+  typedef Objects::iterator iterator;
+
+  Layer();
+  ~Layer();
+  
+  void set_row_ptr(Gtk::TreeModel::Row* row_ptr);
+
+  iterator begin() { return objects.begin(); }
+  iterator end()   { return objects.end(); }
+
+  void set_name(const std::string& str) { name = str; }
+  std::string get_name() const { return name; }
+
+  bool is_visible() const { return visible; }
+  bool is_locked() const { return locked; }
+
+  // These must not be used, since they don't update the Gtk::TreeModel::Row
+  //void set_visible(bool v) { visible = v; }
+  //void set_locked(bool v) { locked = v; }
+
+  bool has_object(const ObjectModelHandle& object) const;
+
+  void add(const ObjectModelHandle& object);
+  void remove(const ObjectModelHandle& object);
+
+  void draw(SceneContext& sc, const SelectMask& layers);
+  void update(float delta);
+  void update(const Gtk::TreeModel::Row& row);
+
+  ObjectModelHandle get_object_at(const Vector2f& pos, const SelectMask& layers) const;
+  SelectionHandle   get_selection(const Rectf& rect, const SelectMask& layers) const;
+
+  void raise_to_top(ObjectModelHandle object);
+  void lower_to_bottom(ObjectModelHandle object);
+  void raise(ObjectModelHandle object);
+  void lower(ObjectModelHandle object);
+
+  SnapData snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const;
+
+  void write(FileWriter& writer) const;
+
+  LayerHandle clone() const;
+  
+private:
+  Layer(const Layer&);
+  Layer& operator=(const Layer&);
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/editor/layer.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:mergeinfo
   + 
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/editor/layer_manager.cpp
===================================================================
--- trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/layer_manager.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -142,7 +142,7 @@
             {
               EditorWindow::current()->on_lock_all(true);
               (*it)[LayerManagerColumns::instance().locked] = false;
-              ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+              ((LayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
             }
         }
     }

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/sector_model.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -38,7 +38,7 @@
 
   Gtk::TreeStore::iterator it = layer_tree->append();
 
-  HardLayerHandle layer(new HardLayer());
+  LayerHandle layer(new Layer());
 
   (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
   (*it)[LayerManagerColumns::instance().name]      = Glib::ustring("Scene");
@@ -67,7 +67,7 @@
   (*it)[LayerManagerColumns::instance().name]      = name;
   (*it)[LayerManagerColumns::instance().visible]   = true; 
   (*it)[LayerManagerColumns::instance().locked]    = false; 
-  (*it)[LayerManagerColumns::instance().layer]     = HardLayerHandle(new HardLayer());
+  (*it)[LayerManagerColumns::instance().layer]     = LayerHandle(new Layer());
 }
 
 void
@@ -93,15 +93,15 @@
   else
     { 
       Gtk::TreeStore::iterator it = layer_tree->get_iter(path);
-      ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->add(object);
+      ((LayerHandle)(*it)[LayerManagerColumns::instance().layer])->add(object);
     }
 }
 
 struct GetLayersFunctor
 {
-  SectorModel::HardLayers& objects;
+  SectorModel::Layers& objects;
 
-  GetLayersFunctor(SectorModel::HardLayers& objects_) 
+  GetLayersFunctor(SectorModel::Layers& objects_) 
     : objects(objects_)
   {}
 
@@ -112,16 +112,16 @@
   }
 };
 
-SectorModel::HardLayers
+SectorModel::Layers
 SectorModel::get_layers() const
 {
-  HardLayers lst;
+  Layers lst;
   GetLayersFunctor func(lst);
   layer_tree->foreach_iter(sigc::mem_fun(func, &GetLayersFunctor::get_layers));
   return lst;
 }
 
-HardLayerHandle
+LayerHandle
 SectorModel::get_layer(const Gtk::TreeModel::Path& path) const
 {
   if (path)
@@ -133,21 +133,21 @@
         }
       else
         {
-          return HardLayerHandle();
+          return LayerHandle();
         }
     }
   else
     {
-      return HardLayerHandle();
+      return LayerHandle();
     }
 }
 
 void
 SectorModel::remove(const ObjectModelHandle& object)
 {
-  const HardLayers& layers = get_layers();
+  const Layers& layers = get_layers();
  
-  for(HardLayers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
+  for(Layers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
     {
       (*i)->remove(object);
     }
@@ -156,9 +156,9 @@
 void
 SectorModel::draw(SceneContext& sc, const SelectMask& layermask)
 {
-  const HardLayers& layers = get_layers();
+  const Layers& layers = get_layers();
  
-  for(HardLayers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
+  for(Layers::const_reverse_iterator i = layers.rbegin(); i != layers.rend(); ++i)
     {
       if ((*i)->is_visible())
         (*i)->draw(sc, layermask);
@@ -168,9 +168,9 @@
 void
 SectorModel::update(float delta)
 {
-  const HardLayers& layers = get_layers();
+  const Layers& layers = get_layers();
 
-  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
     {
       if ((*i)->is_visible())
         (*i)->update(delta);
@@ -180,10 +180,10 @@
 ObjectModelHandle
 SectorModel::get_object_at(const Vector2f& pos, const SelectMask& layermask) const
 {
-  const HardLayers& layers = get_layers();
+  const Layers& layers = get_layers();
   SelectionHandle selection = Selection::create();
 
-  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
     {
       if ((*i)->is_visible() && !(*i)->is_locked())
         {
@@ -200,10 +200,10 @@
 SelectionHandle
 SectorModel::get_selection(const Rectf& rect, const SelectMask& layermask) const
 {
-  const HardLayers& layers = get_layers();
+  const Layers& layers = get_layers();
   SelectionHandle selection = Selection::create();
 
-  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
     {
       if ((*i)->is_visible() && !(*i)->is_locked())
         {
@@ -215,16 +215,16 @@
   return selection;
 }
 
-HardLayerHandle
+LayerHandle
 SectorModel::get_layer(ObjectModelHandle object)
 {
-  const HardLayers& layers = get_layers();
-  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  const Layers& layers = get_layers();
+  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
     {
       if ((*i)->has_object(object))
         return *i;
     }
-  return HardLayerHandle();
+  return LayerHandle();
 }
 
 void
@@ -254,10 +254,10 @@
 SnapData
 SectorModel::snap_object(const Rectf& rect, const std::set<ObjectModelHandle>& ignore_objects) const
 {
-  const HardLayers& layers = get_layers();
+  const Layers& layers = get_layers();
 
   SnapData snap_data;
-  for(HardLayers::const_iterator i = layers.begin(); i != layers.end(); ++i)
+  for(Layers::const_iterator i = layers.begin(); i != layers.end(); ++i)
     {
       if ((*i)->is_visible())
         {
@@ -287,7 +287,7 @@
 
   //std::cout << "loading layer: " << reader.get_name() << " " << name << " " << visible << " " << locked << std::endl;
 
-  HardLayerHandle layer = HardLayerHandle(new HardLayer());
+  LayerHandle layer = LayerHandle(new Layer());
 
   const std::vector<FileReader>& objects_sections = objects_reader.get_sections();
   for(std::vector<FileReader>::const_iterator j = objects_sections.begin(); j != objects_sections.end(); ++j)
@@ -378,7 +378,7 @@
   writer.write_raw(";; -*- scheme -*-\n");
   writer.start_section("windstille-sector");
 
-  writer.write("version", 1);
+  writer.write("version", 2);
   writer.write("name", "");
   writer.write("ambient-color", Color());
   writer.write("init-script", "init.nut");
@@ -398,7 +398,7 @@
   writer.write("locked",  (bool)row[LayerManagerColumns::instance().locked]);
 
   writer.start_section("objects");
-  ((HardLayerHandle)row[LayerManagerColumns::instance().layer])->write(writer);
+  ((LayerHandle)row[LayerManagerColumns::instance().layer])->write(writer);
   writer.end_section();
 
   writer.start_section("child-layers");
@@ -422,14 +422,14 @@
   bool set_visible(const Gtk::TreeModel::iterator& it)
   {
     (*it)[LayerManagerColumns::instance().visible] = v;
-    ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+    ((LayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
     return false;
   }
   
   bool set_locked(const Gtk::TreeModel::iterator& it)
   {
     (*it)[LayerManagerColumns::instance().locked] = v;
-    ((HardLayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
+    ((LayerHandle)(*it)[LayerManagerColumns::instance().layer])->update(*it);
     return false;
   }
 };
@@ -465,7 +465,7 @@
   if (iter)
     {
       // Update the Layer object with data from the tree
-      HardLayerHandle layer = (*iter)[LayerManagerColumns::instance().layer];
+      LayerHandle layer = (*iter)[LayerManagerColumns::instance().layer];
       if (layer)
         {
           layer->update(*iter);

Modified: trunk/windstille/src/editor/sector_model.hpp
===================================================================
--- trunk/windstille/src/editor/sector_model.hpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/sector_model.hpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -25,7 +25,7 @@
 #include <gdkmm/pixbuf.h>
 #include <vector>
 
-#include "hard_layer.hpp"
+#include "layer.hpp"
 #include "selection.hpp"
 #include "object_model.hpp"
 #include "math/vector2f.hpp"
@@ -50,7 +50,7 @@
   Gtk::TreeModelColumn<Glib::ustring>              name;
   Gtk::TreeModelColumn<bool>                       visible;
   Gtk::TreeModelColumn<bool>                       locked;
-  Gtk::TreeModelColumn<HardLayerHandle>            layer;
+  Gtk::TreeModelColumn<LayerHandle>            layer;
 
 private:
   LayerManagerColumns() {
@@ -69,7 +69,7 @@
 
 public:
   //typedef Objects::iterator iterator;
-  typedef std::vector<HardLayerHandle> HardLayers;
+  typedef std::vector<LayerHandle> Layers;
 
   SectorModel();
 
@@ -87,9 +87,9 @@
   void add(const ObjectModelHandle& object, const Gtk::TreeModel::Path& path);
   void remove(const ObjectModelHandle& object);
 
-  HardLayerHandle get_layer(const Gtk::TreeModel::Path& path) const;
-  HardLayers get_layers() const;
-  HardLayerHandle get_layer(ObjectModelHandle object);
+  LayerHandle get_layer(const Gtk::TreeModel::Path& path) const;
+  Layers get_layers() const;
+  LayerHandle get_layer(ObjectModelHandle object);
   
   // void select_objects(const Rectf& rect, bool replace_old_selection = true) const;
 

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -87,7 +87,7 @@
   if (!wst.get_draw_only_active_layer())
     {
       // ignore all objects not on the current active layer
-      for(HardLayer::iterator i = wst.get_current_layer()->begin(); i != wst.get_current_layer()->end(); ++i)
+      for(Layer::iterator i = wst.get_current_layer()->begin(); i != wst.get_current_layer()->end(); ++i)
         { // FIXME: Should iterate over all objects, not just objects in the current layer
           if (!wst.get_select_mask().match((*i)->get_select_mask()))
             ignore_objects.insert(*i);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -323,7 +323,7 @@
   SelectionHandle new_selection = Selection::create();
   for(Selection::reverse_iterator i = selection->rbegin(); i != selection->rend(); ++i)
     {
-      HardLayerHandle layer = sector_model->get_layer(*i);
+      LayerHandle layer = sector_model->get_layer(*i);
       ObjectModelHandle obj = (*i)->clone();
 
       parent_map[*i] = obj;
@@ -575,7 +575,7 @@
   return selection;
 }
 
-HardLayerHandle
+LayerHandle
 WindstilleWidget::get_current_layer()
 {
   Gtk::TreeModel::Path path;
@@ -585,7 +585,7 @@
   if (!path.gobj())
     {
       std::cout << "WindstilleWidget::get_current_layer(): Error: Couldn't get path" << std::endl;
-      return HardLayerHandle();
+      return LayerHandle();
     }
   else
     {

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 19:08:57 UTC (rev 2827)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 19:20:22 UTC (rev 2828)
@@ -38,7 +38,7 @@
 #include "decal_object_model.hpp"
 #include "selection.hpp"
 #include "select_mask.hpp"
-#include "hard_layer.hpp"
+#include "layer.hpp"
 
 class Tool;
 class ScrollTool;
@@ -130,7 +130,7 @@
   void enable_grid(bool v) { grid_enabled = v; }
   bool get_enable_grid() const { return grid_enabled; }
 
-  HardLayerHandle get_current_layer();
+  LayerHandle get_current_layer();
   Gtk::TreeModel::Path get_current_layer_path();
 
   std::string get_filename() const { return filename; }



From grumbel at mail.berlios.de  Mon Mar 30 21:28:19 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 21:28:19 +0200
Subject: [Windstille-commit] r2829 - trunk/windstille
Message-ID: <200903301928.n2UJSJGI007738@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 21:28:18 +0200 (Mon, 30 Mar 2009)
New Revision: 2829

Modified:
   trunk/windstille/TODO
Log:
TODO updates

Modified: trunk/windstille/TODO
===================================================================
--- trunk/windstille/TODO	2009-03-30 19:20:22 UTC (rev 2828)
+++ trunk/windstille/TODO	2009-03-30 19:28:18 UTC (rev 2829)
@@ -1,12 +1,13 @@
 Windstille ToDo
 ===============
 
-This is a list of tasks that need to be done in Windstille. However
-this list is neither complete nor authoritative, so don't just blindly
-implement things from this list, instead use this list just as guide
-for things that might be worth to implement, but not necesarrily have
-to. Some ideas in this list might actually be bad and better solved by
-other means.
+This is a list of tasks and issues that might be worth to implement or
+fix. This list is however not an authorative list of things that must
+be done, its a collection of random things that pop up during
+development, therefore not everything in here might be well thought
+out or worth to implement. Use your brain before implementing anything
+on this list and always thing about how useful a new feature would be
+in the context of the whole game.
 
 Scripting
 =========
@@ -502,6 +503,23 @@
 Editor
 ======
 
+* implement Blender-like grab-handles, that toggle between
+  scale/rotation/etc., but also allow limit of move along the x- or
+  y-axis
+
+* figure out how to properly draw controls in the Workspace (resize,
+  rotation, vertices of a quad),
+
+* make use of Statusbar
+  - display mouse coordinates in WorldCo
+  - display what Ctrl/Shift do for the current tool
+
+* add more ways to snapping objects:
+
+  - snap to snap-points
+  - snap to integer positions (IMPORTANT)
+  - snap to grid (IMPORTANT)
+
 * reevaluate the current parent/child implementation, since its very
   tricky currently to move a parent without affecting the child, which
   might be useful in some situation (i.e. hold Ctrl pressed to move
@@ -520,22 +538,17 @@
 
 * raise/lower of multiple objects at once is a bit wonky, when objects
   reach the bottom/top they will change their relative order in the
-  selection
+  selection (not a big deal with layers)
 
-* set cursor in LayerManager when loading a level
+* set cursor in LayerManager when loading a level, as not setting it
+  leads to crash and trouble
 
 * QuadTree could be useful when levels get larger
 
-* make use of Statusbar
-  - display mouse coordinates in WorldCo
-  - display what Ctrl/Shift do for the current tool
-
 * New Layer System:
 
-  - rename HardLayer to Layer and Layers to LayerMask/SelectionMask
-
   - normal Layers can contain child layers, which seems like a bad
-    idea, better way would have special objectless parent layers
+    idea, better way would be to have special objectless parent layers
 
   - there might be a need for special layers, such as a background
     layer or a color gradient layer, that doesn't contain objects, but
@@ -630,12 +643,6 @@
   selection, for scaled, rotated or otherwise deformed objects the
   mouse coordinates need to be transformed into texture space
 
-* add more ways to snapping objects:
-
-  - snap to snap-points
-  - snap to integer positions (important)
-  - snap to grid (important)
-
 * add a way to draw objects to DrawingContext that only does
   translation, but not rotation and scaling, for use in UIElements,
   overlay text, etc.
@@ -646,9 +653,6 @@
   - ambient color (Gtk::ColorSelection)
   - level size (?)
 
-* figure out how to properly draw controls in the Workspace (resize,
-  rotation, vertices of a quad),
-
 * SceneModel seems easier to implement then Sandbox'ing, maybe go with
   that first. TreeModel could be used directly to presenet the Scene,
   instead of trying to keep to things synced.
@@ -660,7 +664,7 @@
   + no obscure version incompatibilty between editor and game objects
   + game editability can be reused in scripts
 
-  - game engine gets more complex
+  - game and editor engine gets more complex
 
 * Sandbox Implementation (similar to Feuerkraft):
 
@@ -676,12 +680,6 @@
 * should objects in the editor be based on real Windstille objects or
   on mookup objects?
 
-* Editor Toolbox:
-
-  - Object Select Tool (move objects around)
-  - Object Manipulation Tool (move vertices in the object around)
-  - Zoom Tool
-
 * Editor Toolbar:
 
   - Visualize parent/child relationship (little arrows)
@@ -693,12 +691,6 @@
   - prefabs
   - enemies
   - active objects (doors, switches, etc.)
-
-* Layer List
-
-  - display objects in the scene as tree
-  - objects can be parented to each other
-  - objects and object groups can be toggled invisible/transparent
 
 Code Cleanup
 ============



From grumbel at mail.berlios.de  Mon Mar 30 22:22:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 22:22:45 +0200
Subject: [Windstille-commit] r2830 - trunk/windstille/data/images
Message-ID: <200903302022.n2UKMjFS014920@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 22:22:44 +0200 (Mon, 30 Mar 2009)
New Revision: 2830

Removed:
   trunk/windstille/data/images/verdana11_blue.png
   trunk/windstille/data/images/verdana32_blue.png
   trunk/windstille/data/images/verdana32_blueh.png
   trunk/windstille/data/images/verdana48_blue.png
   trunk/windstille/data/images/verdana48_blueh.png
Log:
Removed obsolete pixel fonts

Deleted: trunk/windstille/data/images/verdana11_blue.png
===================================================================
(Binary files differ)

Deleted: trunk/windstille/data/images/verdana32_blue.png
===================================================================
(Binary files differ)

Deleted: trunk/windstille/data/images/verdana32_blueh.png
===================================================================
(Binary files differ)

Deleted: trunk/windstille/data/images/verdana48_blue.png
===================================================================
(Binary files differ)

Deleted: trunk/windstille/data/images/verdana48_blueh.png
===================================================================
(Binary files differ)



From grumbel at mail.berlios.de  Mon Mar 30 22:31:01 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 22:31:01 +0200
Subject: [Windstille-commit] r2831 - trunk/windstille/src/editor
Message-ID: <200903302031.n2UKV12m015940@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 22:31:01 +0200 (Mon, 30 Mar 2009)
New Revision: 2831

Modified:
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/object_selector.cpp
Log:
Improved icon generation, keeping aspect intact and adding background color

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 20:22:44 UTC (rev 2830)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-30 20:31:01 UTC (rev 2831)
@@ -670,8 +670,44 @@
           path += *i;
 
           Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(path);
+          Glib::RefPtr<Gdk::Pixbuf> icon;
 
-          object_selector.add_object(path, pixbuf->scale_simple(32, 32, Gdk::INTERP_TILES));
+          { // Create an icon
+            int size     = 48; // size of the icon
+            int min_size = 16; // minimum width/height of the icon after scaling
+
+            icon = Gdk::Pixbuf::create(Gdk::COLORSPACE_RGB, true, 8, size, size);
+
+            icon->fill(0x444444ff);
+
+            // Scale pixbuf to icon size while keeping aspect ratio intact
+            double x_scale = (double)size / pixbuf->get_width();
+            double y_scale = (double)size / pixbuf->get_height();
+
+            if (x_scale * pixbuf->get_width() < min_size)
+              x_scale = min_size / pixbuf->get_width();
+
+            if (y_scale * pixbuf->get_height() < min_size)
+              y_scale = min_size / pixbuf->get_height();
+
+            if (pixbuf->get_width() > pixbuf->get_height())              
+              y_scale = x_scale;
+            else
+              x_scale = y_scale;
+
+            int r_w = int(pixbuf->get_width() * x_scale);
+            int r_h = int(pixbuf->get_height() * y_scale);
+
+            pixbuf->composite(icon, 
+                              (size - r_w)/2, (size - r_h)/2,
+                              r_w, r_h,
+                              (size - r_w)/2, (size - r_h)/2,
+                              x_scale, y_scale,
+                              Gdk::INTERP_TILES, 
+                              255);
+          }
+
+          object_selector.add_object(path, icon);
         }
     }
 }

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2009-03-30 20:22:44 UTC (rev 2830)
+++ trunk/windstille/src/editor/object_selector.cpp	2009-03-30 20:31:01 UTC (rev 2831)
@@ -53,10 +53,15 @@
   list_store = Gtk::ListStore::create(ObjectIconColumns::instance());
 
   // Change background color
-  // iconview.modify_base(Gtk::STATE_NORMAL, Gdk::Color("grey"));
+  // iconview.modify_base(Gtk::STATE_NORMAL, Gdk::Color("#444444"));
   
   iconview.set_model(list_store);
 
+  // Trying to get spacing to minimum, without much effect
+  iconview.set_spacing(0);
+  iconview.set_column_spacing(0);
+  iconview.set_row_spacing(0);
+
   iconview.set_pixbuf_column(ObjectIconColumns::instance().icon);
   //iconview.set_text_column(ObjectIconColumns::instance().pathname);
 



From grumbel at mail.berlios.de  Mon Mar 30 22:45:59 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Mon, 30 Mar 2009 22:45:59 +0200
Subject: [Windstille-commit] r2832 - trunk/windstille/src/editor
Message-ID: <200903302045.n2UKjxJ4017408@sheep.berlios.de>

Author: grumbel
Date: 2009-03-30 22:45:59 +0200 (Mon, 30 Mar 2009)
New Revision: 2832

Modified:
   trunk/windstille/src/editor/editor_window.cpp
Log:
Sort images alphabetically

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 20:31:01 UTC (rev 2831)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-30 20:45:59 UTC (rev 2832)
@@ -661,6 +661,8 @@
 void
 EditorWindow::fill_object_selector(const std::string& directory)
 {
+  std::vector<Glib::ustring> images;
+
   Glib::Dir dir(directory);
   for(Glib::Dir::iterator i = dir.begin(); i != dir.end(); ++i)
     {
@@ -668,47 +670,54 @@
         {
           Glib::ustring path = directory;
           path += *i;
+          images.push_back(path);
+        }
+    }
 
-          Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(path);
-          Glib::RefPtr<Gdk::Pixbuf> icon;
+  std::sort(images.begin(), images.end());
 
-          { // Create an icon
-            int size     = 48; // size of the icon
-            int min_size = 16; // minimum width/height of the icon after scaling
+  for(std::vector<Glib::ustring>::iterator i = images.begin(); i != images.end(); ++i)    
+    {
+      Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(*i);
+      Glib::RefPtr<Gdk::Pixbuf> icon;
 
-            icon = Gdk::Pixbuf::create(Gdk::COLORSPACE_RGB, true, 8, size, size);
+      { // Create an icon, by scaling it down, keeping aspect
+        // intact and adding a background (important to make drag&drop easier)
+        int size     = 48; // size of the icon
+        int min_size = 16; // minimum width/height of the icon after scaling
 
-            icon->fill(0x444444ff);
+        icon = Gdk::Pixbuf::create(Gdk::COLORSPACE_RGB, true, 8, size, size);
 
-            // Scale pixbuf to icon size while keeping aspect ratio intact
-            double x_scale = (double)size / pixbuf->get_width();
-            double y_scale = (double)size / pixbuf->get_height();
+        icon->fill(0x444444ff);
 
-            if (x_scale * pixbuf->get_width() < min_size)
-              x_scale = min_size / pixbuf->get_width();
+        // Scale pixbuf to icon size while keeping aspect ratio intact
+        double x_scale = (double)size / pixbuf->get_width();
+        double y_scale = (double)size / pixbuf->get_height();
 
-            if (y_scale * pixbuf->get_height() < min_size)
-              y_scale = min_size / pixbuf->get_height();
+        if (x_scale * pixbuf->get_width() < min_size)
+          x_scale = min_size / pixbuf->get_width();
 
-            if (pixbuf->get_width() > pixbuf->get_height())              
-              y_scale = x_scale;
-            else
-              x_scale = y_scale;
+        if (y_scale * pixbuf->get_height() < min_size)
+          y_scale = min_size / pixbuf->get_height();
 
-            int r_w = int(pixbuf->get_width() * x_scale);
-            int r_h = int(pixbuf->get_height() * y_scale);
+        if (pixbuf->get_width() > pixbuf->get_height())              
+          y_scale = x_scale;
+        else
+          x_scale = y_scale;
 
-            pixbuf->composite(icon, 
-                              (size - r_w)/2, (size - r_h)/2,
-                              r_w, r_h,
-                              (size - r_w)/2, (size - r_h)/2,
-                              x_scale, y_scale,
-                              Gdk::INTERP_TILES, 
-                              255);
-          }
+        int r_w = int(pixbuf->get_width() * x_scale);
+        int r_h = int(pixbuf->get_height() * y_scale);
 
-          object_selector.add_object(path, icon);
-        }
+        pixbuf->composite(icon, 
+                          (size - r_w)/2, (size - r_h)/2,
+                          r_w, r_h,
+                          (size - r_w)/2, (size - r_h)/2,
+                          x_scale, y_scale,
+                          Gdk::INTERP_TILES, 
+                          255);
+      }
+
+      object_selector.add_object(*i, icon);
     }
 }
 



From grumbel at mail.berlios.de  Tue Mar 31 00:46:23 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 00:46:23 +0200
Subject: [Windstille-commit] r2833 - trunk/windstille/src/math
Message-ID: <200903302246.n2UMkNeX005117@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 00:46:21 +0200 (Tue, 31 Mar 2009)
New Revision: 2833

Modified:
   trunk/windstille/src/math/rect.hpp
Log:
Added grow(Rectf)

Modified: trunk/windstille/src/math/rect.hpp
===================================================================
--- trunk/windstille/src/math/rect.hpp	2009-03-30 20:45:59 UTC (rev 2832)
+++ trunk/windstille/src/math/rect.hpp	2009-03-30 22:46:21 UTC (rev 2833)
@@ -35,6 +35,7 @@
 #include "math/origin.hpp"
 #include "math/vector2f.hpp"
 #include "math/size.hpp"
+#include "math/math.hpp"
 
 class Rectf;
 
@@ -376,6 +377,14 @@
                              right  + x,
                              bottom + y);
 	}
+  
+  // Construct a rectangle large enough
+  Rectf grow(const Rectf& rect) const {
+    return Rectf(math::min(left, rect.left),
+                 math::min(top, rect.top),
+                 math::max(right, rect.right),
+                 math::max(bottom, rect.bottom));
+  }
 };
 
 inline Rect::Rect(const Rectf& rect)



From grumbel at mail.berlios.de  Tue Mar 31 00:47:26 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 00:47:26 +0200
Subject: [Windstille-commit] r2834 - trunk/windstille/src/editor
Message-ID: <200903302247.n2UMlQnI006025@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 00:47:24 +0200 (Tue, 31 Mar 2009)
New Revision: 2834

Modified:
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/control_point.hpp
   trunk/windstille/src/editor/selection.cpp
   trunk/windstille/src/editor/selection.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Some basic code for the creation and updating of ControlPoints

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-03-30 22:46:21 UTC (rev 2833)
+++ trunk/windstille/src/editor/control_point.cpp	2009-03-30 22:47:24 UTC (rev 2834)
@@ -16,11 +16,20 @@
 **  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <iostream>
+#include "display/scene_context.hpp"
 #include "control_point.hpp"
 
-ControlPoint::ControlPoint()
+ControlPointHandle
+ControlPoint::create(const Vector2f& pos)
 {
+  return ControlPointHandle(new ControlPoint(pos));
 }
+
+ControlPoint::ControlPoint(const Vector2f& pos_)
+  : pos(pos_)
+{
+}
 
 ControlPoint::~ControlPoint()
 {
@@ -49,5 +58,12 @@
 {
   return Rectf(pos - Vector2f(8.0f, 8.0f), Sizef(16.0f ,16.0f));
 }
+
+void
+ControlPoint::draw(SceneContext& sc)
+{
+  sc.control().fill_rect(get_bounding_box().grow(4.0f), Color(0.0f, 0.0f, 0.0f));
+  sc.control().fill_rect(get_bounding_box(), Color(1.0f, 0.0f, 0.0f));
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/control_point.hpp
===================================================================
--- trunk/windstille/src/editor/control_point.hpp	2009-03-30 22:46:21 UTC (rev 2833)
+++ trunk/windstille/src/editor/control_point.hpp	2009-03-30 22:47:24 UTC (rev 2834)
@@ -29,16 +29,18 @@
 
 class ControlPoint
 {
+public:
+  static ControlPointHandle create(const Vector2f& pos);
+
 private:
   Vector2f     pos;
   Vector2f  offset;
 
 public:
-  ControlPoint();
+  ControlPoint(const Vector2f& pos);
   ~ControlPoint();
   
-  virtual void update() = 0;
-  virtual void draw(SceneContext& sc) = 0;
+  void draw(SceneContext& sc);
 
   Rectf get_bounding_box() const;
 

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-30 22:46:21 UTC (rev 2833)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-30 22:47:24 UTC (rev 2834)
@@ -21,6 +21,7 @@
 #include "selection.hpp"
 
 Selection::Selection()
+  : moving(false)
 {
 }
 
@@ -32,6 +33,7 @@
 Selection::add(const ObjectModelHandle& object)
 {
   objects.push_back(object);
+  signal_changed();
 }
 
 void
@@ -41,6 +43,7 @@
   if (it != objects.end())
     {
       objects.erase(it);
+      signal_changed();
     }
   else
     {
@@ -54,6 +57,13 @@
   return objects.empty();
 }
 
+void
+Selection::clear()
+{ 
+  objects.clear(); 
+  signal_changed();
+}
+
 bool
 Selection::has_object(ObjectModelHandle object) const
 {
@@ -79,6 +89,8 @@
 void
 Selection::on_move_start()
 {
+  moving = true;
+
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
       if (contains_parent(*i))
@@ -92,6 +104,8 @@
       if (non_moveable_objects.find(*i) == non_moveable_objects.end())
         (*i)->on_move_start();
     }
+
+  signal_changed();
 }
 
 void
@@ -107,6 +121,8 @@
 void
 Selection::on_move_end(const Vector2f& offset)
 {
+  moving = false;
+
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
       if (non_moveable_objects.find(*i) == non_moveable_objects.end())
@@ -114,6 +130,8 @@
     }
 
   non_moveable_objects.clear();
+
+  signal_changed();
 }
 
 SelectionHandle
@@ -149,5 +167,37 @@
 
   return selection;
 }
+
+Rectf
+Selection::get_bounding_box() const
+{
+  if (empty())
+    {
+      return Rectf();
+    }
+  else
+    {
+      Rectf rect = objects.front()->get_bounding_box();
+      for(Objects::const_iterator i = objects.begin()+1; i != objects.end(); ++i)
+        {
+          rect = rect.grow((*i)->get_bounding_box());
+        }
+      return rect;
+    }
+}
+
+void
+Selection::add_control_points(std::vector<ControlPointHandle>& control_points)
+{
+  std::cout << "Adding ControlPoints" << std::endl;
+  if (!empty())
+    {
+      const Rectf& rect = get_bounding_box();
+      control_points.push_back(ControlPoint::create(Vector2f(rect.left, rect.top)));
+      control_points.push_back(ControlPoint::create(Vector2f(rect.right, rect.top)));
+      control_points.push_back(ControlPoint::create(Vector2f(rect.left, rect.bottom)));
+      control_points.push_back(ControlPoint::create(Vector2f(rect.right, rect.bottom)));
+    }
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/selection.hpp
===================================================================
--- trunk/windstille/src/editor/selection.hpp	2009-03-30 22:46:21 UTC (rev 2833)
+++ trunk/windstille/src/editor/selection.hpp	2009-03-30 22:47:24 UTC (rev 2834)
@@ -23,6 +23,7 @@
 #include <set>
 #include <boost/shared_ptr.hpp>
 
+#include "control_point.hpp"
 #include "object_model.hpp"
 
 class Selection;
@@ -36,6 +37,8 @@
 
   std::set<ObjectModelHandle> non_moveable_objects;
 
+  bool moving;
+
   bool contains_parent(ObjectModelHandle object);
 
 public:
@@ -68,8 +71,10 @@
   Selection::reverse_iterator rend() { return objects.rend(); }
 
   bool empty() const;
-  void clear() { objects.clear(); }
+  void clear();
 
+  bool is_moving() const { return moving; }
+
   bool has_object(ObjectModelHandle object) const;
 
   void on_move_start();
@@ -79,6 +84,12 @@
   /** Performs a deep clone of the selection */
   SelectionHandle clone() const;
 
+  void add_control_points(std::vector<ControlPointHandle>& control_points);
+
+  Rectf get_bounding_box() const;
+
+  sigc::signal<void> signal_changed;
+
 private:
   Selection(const Selection&);
   Selection& operator=(const Selection&);

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 22:46:21 UTC (rev 2833)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 22:47:24 UTC (rev 2834)
@@ -75,7 +75,7 @@
   targets.push_back(Gtk::TargetEntry("WindstilleObject"));
   drag_dest_set(targets, Gtk::DEST_DEFAULT_ALL, Gdk::ACTION_COPY);
 
-  selection = Selection::create();
+  set_selection(Selection::create());
 }
 
 WindstilleWidget::~WindstilleWidget()
@@ -226,14 +226,25 @@
       else
         sector_model->draw(*sc, select_mask);
 
-      for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+      if (!selection->empty())
         {
-          if (i == selection->begin())
-            sc->control().draw_rect((*i)->get_bounding_box(), Color(1.0f, 1.0f, 1.0f, 1.0f));
-          else
-            sc->control().draw_rect((*i)->get_bounding_box(), Color(0.5f, 0.5f, 1.0f, 1.0f));
+          for(Selection::iterator i = selection->begin(); i != selection->end(); ++i)
+            {
+              if (i == selection->begin())
+                sc->control().draw_rect((*i)->get_bounding_box(), Color(1.0f, 1.0f, 1.0f, 1.0f));
+              else
+                sc->control().draw_rect((*i)->get_bounding_box(), Color(0.5f, 0.5f, 1.0f, 1.0f));
+            }
+
+          //sc->control().draw_rect(selection->get_bounding_box(), Color(1.0f, 1.0f, 1.0f, 1.0f));
         }
 
+      for(std::vector<ControlPointHandle>::iterator i = control_points.begin();
+          i != control_points.end(); ++i)
+        {
+          (*i)->draw(*sc);
+        }
+
       if (active_tool)
         active_tool->draw(*sc);
 
@@ -567,6 +578,8 @@
 WindstilleWidget::set_selection(const SelectionHandle& selection_)
 {
   selection = selection_;
+  selection->signal_changed.connect(sigc::mem_fun(this, &WindstilleWidget::on_selection_change));
+  on_selection_change();
 }
 
 SelectionHandle
@@ -608,7 +621,22 @@
   else
     {
       return path;
+     }
+}
+
+void
+WindstilleWidget::on_selection_change()
+{
+  control_points.clear();
+
+  if (!selection->is_moving())
+    {
+      selection->add_control_points(control_points);
     }
+  
+  queue_draw();
+
+  std::cout << "WindstilleWidget::on_selection_change(): " << selection->size() << " " << control_points.size() << std::endl;
 }
 
 SectorModel*

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 22:46:21 UTC (rev 2833)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 22:47:24 UTC (rev 2834)
@@ -136,6 +136,8 @@
   std::string get_filename() const { return filename; }
   void set_filename(const std::string& filename_) { filename = filename_; }
 
+  void on_selection_change();
+
 private:
   WindstilleWidget (const WindstilleWidget&);
   WindstilleWidget& operator= (const WindstilleWidget&);



From grumbel at mail.berlios.de  Tue Mar 31 01:01:45 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 01:01:45 +0200
Subject: [Windstille-commit] r2835 - trunk/windstille/src/editor
Message-ID: <200903302301.n2UN1jud017554@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 01:01:42 +0200 (Tue, 31 Mar 2009)
New Revision: 2835

Modified:
   trunk/windstille/src/editor/control_point.cpp
   trunk/windstille/src/editor/select_tool.cpp
   trunk/windstille/src/editor/select_tool.hpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/editor/windstille_widget.hpp
Log:
Some control point dragging

Modified: trunk/windstille/src/editor/control_point.cpp
===================================================================
--- trunk/windstille/src/editor/control_point.cpp	2009-03-30 22:47:24 UTC (rev 2834)
+++ trunk/windstille/src/editor/control_point.cpp	2009-03-30 23:01:42 UTC (rev 2835)
@@ -45,12 +45,16 @@
 ControlPoint::on_move_update(const Vector2f& offset_)
 {
   offset = offset_;
+  std::cout << "on_move_update: " << offset << std::endl;
 }
 
 void
 ControlPoint::on_move_end(const Vector2f& offset_)
 {
   offset = offset_;
+  std::cout << "on_move_end: " << offset << std::endl;
+
+  offset = Vector2f();
 }
 
 Rectf
@@ -62,8 +66,12 @@
 void
 ControlPoint::draw(SceneContext& sc)
 {
-  sc.control().fill_rect(get_bounding_box().grow(4.0f), Color(0.0f, 0.0f, 0.0f));
-  sc.control().fill_rect(get_bounding_box(), Color(1.0f, 0.0f, 0.0f));
+  Rectf rect = get_bounding_box();
+
+  rect += offset;
+
+  sc.control().fill_rect(rect.grow(4.0f), Color(0.0f, 0.0f, 0.0f));
+  sc.control().fill_rect(rect, Color(1.0f, 0.0f, 0.0f));
 }
 
 /* EOF */

Modified: trunk/windstille/src/editor/select_tool.cpp
===================================================================
--- trunk/windstille/src/editor/select_tool.cpp	2009-03-30 22:47:24 UTC (rev 2834)
+++ trunk/windstille/src/editor/select_tool.cpp	2009-03-30 23:01:42 UTC (rev 2835)
@@ -31,49 +31,58 @@
 SelectTool::mouse_down(GdkEventButton* event, WindstilleWidget& wst)
 {
   click_pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
-  
-  ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos, wst.get_select_mask());
-  if (object.get())
+
+  ctrl_point = wst.get_control_point(click_pos);
+  if (ctrl_point)
     {
-      if (wst.get_selection()->has_object(object))
+      mode = CONTROL_DRAG_MODE;
+      ctrl_point->on_move_start();
+    }
+  else
+    {  
+      ObjectModelHandle object = wst.get_sector_model()->get_object_at(click_pos, wst.get_select_mask());
+      if (object.get())
         {
-          selection = wst.get_selection();
-          if (event->state & GDK_SHIFT_MASK)
+          if (wst.get_selection()->has_object(object))
             {
-              selection->remove(object);
+              selection = wst.get_selection();
+              if (event->state & GDK_SHIFT_MASK)
+                {
+                  selection->remove(object);
+                }
+              else
+                {
+                  selection = wst.get_selection();
+                }
             }
           else
             {
-              selection = wst.get_selection();
+              if (event->state & GDK_SHIFT_MASK)
+                {
+                  selection = wst.get_selection();
+                  selection->add(object);
+                }
+              else
+                {
+                  selection = Selection::create();
+                  selection->add(object);
+                  wst.set_selection(selection);
+                }
             }
+      
+          mode = OBJECT_DRAG_MODE;
+          selection->on_move_start();
         }
       else
         {
-          if (event->state & GDK_SHIFT_MASK)
-            {
-              selection = wst.get_selection();
-              selection->add(object);
-            }
-          else
-            {
-              selection = Selection::create();
-              selection->add(object);
-              wst.set_selection(selection);
-            }
+          rect.left   = click_pos.x;
+          rect.top    = click_pos.y;
+          rect.right  = click_pos.x;
+          rect.bottom = click_pos.y;
+      
+          mode = SELECT_MODE;
         }
-      
-      mode = DRAG_MODE;
-      selection->on_move_start();
     }
-  else
-    {
-      rect.left   = click_pos.x;
-      rect.top    = click_pos.y;
-      rect.right  = click_pos.x;
-      rect.bottom = click_pos.y;
-      
-      mode = SELECT_MODE;
-    }
 
   return true;
 }
@@ -110,8 +119,12 @@
 {
   Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
 
-  if (mode == DRAG_MODE)
+  if (mode == CONTROL_DRAG_MODE)
     {
+      ctrl_point->on_move_update(pos - click_pos);
+    }
+  else if (mode == OBJECT_DRAG_MODE)
+    {
       selection->on_move_update(pos - click_pos);
       
       if (event->state & GDK_CONTROL_MASK)
@@ -136,8 +149,12 @@
   Vector2f pos = wst.get_state().screen_to_world(Vector2f(event->x, event->y));
 
   // Select objects
-  if (mode == DRAG_MODE)
+  if (mode == CONTROL_DRAG_MODE)
     {
+      ctrl_point->on_move_end(pos - click_pos);
+    }
+  else if (mode == OBJECT_DRAG_MODE)
+    {
       selection->on_move_update(pos - click_pos);
       
       if (event->state & GDK_CONTROL_MASK)

Modified: trunk/windstille/src/editor/select_tool.hpp
===================================================================
--- trunk/windstille/src/editor/select_tool.hpp	2009-03-30 22:47:24 UTC (rev 2834)
+++ trunk/windstille/src/editor/select_tool.hpp	2009-03-30 23:01:42 UTC (rev 2835)
@@ -29,10 +29,12 @@
   Vector2f click_pos;
   Rectf    rect;
   SelectionHandle selection;
-  
+  ControlPointHandle ctrl_point;
+
   enum { 
     SELECT_MODE,
-    DRAG_MODE,
+    OBJECT_DRAG_MODE,
+    CONTROL_DRAG_MODE,
     NO_MODE
   } mode;
 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 22:47:24 UTC (rev 2834)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2009-03-30 23:01:42 UTC (rev 2835)
@@ -638,6 +638,18 @@
 
   std::cout << "WindstilleWidget::on_selection_change(): " << selection->size() << " " << control_points.size() << std::endl;
 }
+
+ControlPointHandle
+WindstilleWidget::get_control_point(const Vector2f& pos) const
+{
+  for(std::vector<ControlPointHandle>::const_iterator i = control_points.begin();  
+      i != control_points.end(); ++i)
+    {
+      if ((*i)->get_bounding_box().is_inside(pos))
+        return *i;
+    }
+  return ControlPointHandle();
+}
 
 SectorModel*
 WindstilleWidget::get_sector_model()

Modified: trunk/windstille/src/editor/windstille_widget.hpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 22:47:24 UTC (rev 2834)
+++ trunk/windstille/src/editor/windstille_widget.hpp	2009-03-30 23:01:42 UTC (rev 2835)
@@ -136,6 +136,8 @@
   std::string get_filename() const { return filename; }
   void set_filename(const std::string& filename_) { filename = filename_; }
 
+  ControlPointHandle get_control_point(const Vector2f& pos) const;
+
   void on_selection_change();
 
 private:



From grumbel at mail.berlios.de  Tue Mar 31 04:40:24 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 04:40:24 +0200
Subject: [Windstille-commit] r2836 - in trunk/windstille: data/editor
	src/editor
Message-ID: <200903310240.n2V2eOoS002005@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 04:40:20 +0200 (Tue, 31 Mar 2009)
New Revision: 2836

Added:
   trunk/windstille/data/editor/icon_bg.png
Modified:
   trunk/windstille/src/editor/editor_window.cpp
Log:
Use .png as icon background

Added: trunk/windstille/data/editor/icon_bg.png
===================================================================
(Binary files differ)


Property changes on: trunk/windstille/data/editor/icon_bg.png
___________________________________________________________________
Name: svn:mime-type
   + image/png

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2009-03-30 23:01:42 UTC (rev 2835)
+++ trunk/windstille/src/editor/editor_window.cpp	2009-03-31 02:40:20 UTC (rev 2836)
@@ -686,10 +686,17 @@
         int size     = 48; // size of the icon
         int min_size = 16; // minimum width/height of the icon after scaling
 
-        icon = Gdk::Pixbuf::create(Gdk::COLORSPACE_RGB, true, 8, size, size);
+        if (1)
+          {
+            icon = Gdk::Pixbuf::create_from_file("data/editor/icon_bg.png");
+            size = std::max(icon->get_width(), icon->get_height());
+          }
+        else
+          {
+            icon = Gdk::Pixbuf::create(Gdk::COLORSPACE_RGB, true, 8, size, size);
+            icon->fill(0x444444ff);
+          }
 
-        icon->fill(0x444444ff);
-
         // Scale pixbuf to icon size while keeping aspect ratio intact
         double x_scale = (double)size / pixbuf->get_width();
         double y_scale = (double)size / pixbuf->get_height();



From grumbel at mail.berlios.de  Tue Mar 31 17:34:41 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 17:34:41 +0200
Subject: [Windstille-commit] r2837 - in trunk/windstille/src: display editor
	math
Message-ID: <200903311534.n2VFYfJ8007544@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 17:34:40 +0200 (Tue, 31 Mar 2009)
New Revision: 2837

Added:
   trunk/windstille/src/display/drawing_parameters.hpp
   trunk/windstille/src/math/quad.hpp
Modified:
   trunk/windstille/src/display/drawing_context.cpp
   trunk/windstille/src/display/drawing_context.hpp
   trunk/windstille/src/display/surface.hpp
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
Log:
Added Quad drawing capabilites

Modified: trunk/windstille/src/display/drawing_context.cpp
===================================================================
--- trunk/windstille/src/display/drawing_context.cpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/display/drawing_context.cpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -21,15 +21,18 @@
 #include <iosfwd>
 #include <GL/glew.h>
 #include <GL/gl.h>
-#include "font/fonts.hpp"
-#include "sprite2d/sprite.hpp"
-#include "drawing_context.hpp"
+
+#include "display/display.hpp"
 #include "display/opengl_state.hpp"
+#include "display/scene_context.hpp"
+#include "display/surface.hpp"
 #include "display/surface_drawing_parameters.hpp"
+#include "display/drawing_parameters.hpp"
 #include "display/vertex_array_drawing_request.hpp"
-#include "display/scene_context.hpp"
-#include "display/display.hpp"
-#include "display/surface.hpp"
+#include "drawing_context.hpp"
+#include "font/fonts.hpp"
+#include "math/quad.hpp"
+#include "sprite2d/sprite.hpp"
 
 struct DrawingRequestsSorter
 {
@@ -91,6 +94,7 @@
 {
 private:
   Color color;
+
 public:
   FillScreenDrawingRequest(const Color& color_) 
     : DrawingRequest(Vector2f(0, 0), -1000.0f), color(color_)
@@ -126,6 +130,55 @@
   }
 };
 
+class SurfaceQuadDrawingRequest : public DrawingRequest
+{
+private:
+  Surface surface;
+  Quad quad;
+  DrawingParameters params;
+
+public:
+  SurfaceQuadDrawingRequest(Surface surface_, const Vector2f& pos_, const Quad& quad_, 
+                            const DrawingParameters& params_, float z_pos_,
+                            const Matrix modelview_)
+    : DrawingRequest(pos_, z_pos_, modelview_),
+      surface(surface_),
+      quad(quad_),
+      params(params_)
+  {
+  }
+
+  void draw(const Texture& /*tmp_texture*/) 
+  {
+    OpenGLState state;
+    state.enable(GL_BLEND);
+    state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
+    state.bind_texture(surface.get_texture());
+    state.activate();
+
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
+
+    glBegin(GL_QUADS);
+    {
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p1.x, pos.y + quad.p1.y);
+    
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().top);
+      glVertex2f(pos.x + quad.p2.x, pos.y + quad.p2.y);
+
+      glTexCoord2f(surface.get_uv().right, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p3.x, pos.y + quad.p3.y);
+
+      glTexCoord2f(surface.get_uv().left, surface.get_uv().bottom);
+      glVertex2f(pos.x + quad.p4.x, pos.y + quad.p4.y);
+    }
+    glEnd();
+
+    glPopMatrix();    
+  }
+};
+
 class SurfaceDrawingRequest : public DrawingRequest
 {
 private:
@@ -201,6 +254,14 @@
 }
 
 void
+DrawingContext::draw(const Surface surface, const Vector2f& pos, const Quad& quad,
+                     const DrawingParameters& params, float z_pos)
+{
+  draw(new SurfaceQuadDrawingRequest(surface, pos, quad, params, z_pos,
+                                     modelview_stack.back()));
+}
+
+void
 DrawingContext::draw(const Surface surface, const SurfaceDrawingParameters& params, float z_pos)
 {
   draw(new SurfaceDrawingRequest(surface, params, z_pos,

Modified: trunk/windstille/src/display/drawing_context.hpp
===================================================================
--- trunk/windstille/src/display/drawing_context.hpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/display/drawing_context.hpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -29,8 +29,10 @@
 class Texture;
 class Surface;
 class SurfaceDrawingParameters;
+class DrawingParameters;
 class SceneContext;
 class Sprite;
+class Quad;
 
 /** The DrawingContext collects all DrawingRequests and allows you to
     flush them all down to the graphics card in one run, this has the
@@ -75,6 +77,8 @@
   void draw(const Surface surface, const Vector2f& pos, float z = 0, float alpha = 0);
   void draw(const Surface surface, float x, float y, float z = 0, float alpha = 0);
   void draw(const Surface surface, const SurfaceDrawingParameters& params, float z_pos = 0);
+  void draw(const Surface surface, const Vector2f& pos, const Quad& quad,
+            const DrawingParameters& params, float z_pos = 0);
   /*} */
   
   /** Translate the drawing context */

Added: trunk/windstille/src/display/drawing_parameters.hpp
===================================================================
--- trunk/windstille/src/display/drawing_parameters.hpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/display/drawing_parameters.hpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -0,0 +1,63 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_DISPLAY_DRAWING_PARAMETERS_HPP
+#define HEADER_WINDSTILLE_DISPLAY_DRAWING_PARAMETERS_HPP
+
+#include <GL/glew.h>
+#include <GL/gl.h>
+
+#include "color.hpp"
+
+/** Helper class which holds all the parameters that you can tweak
+    when you want to draw a Quad */
+class DrawingParameters
+{
+public:
+  /** This includes flip, rotation, scaling and position */
+  GLenum blendfunc_src;
+  GLenum blendfunc_dst;
+
+  /** Includes color and alpha settings */
+  Color   color;
+
+  DrawingParameters()
+  {
+    blendfunc_src = GL_SRC_ALPHA;
+    blendfunc_dst = GL_ONE_MINUS_SRC_ALPHA;
+
+    color = Color(1.0f, 1.0f, 1.0f, 1.0f);
+  }
+
+  DrawingParameters& set_color(const Color& c)
+  { 
+    color = c;
+    return *this; 
+  }
+  
+  DrawingParameters& set_blend_func(GLenum src, GLenum dst) 
+  { 
+    blendfunc_src = src;
+    blendfunc_dst = dst;
+    return *this; 
+  }  
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/display/drawing_parameters.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native

Modified: trunk/windstille/src/display/surface.hpp
===================================================================
--- trunk/windstille/src/display/surface.hpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/display/surface.hpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -23,10 +23,10 @@
 #include <boost/shared_ptr.hpp>
 #include "math/rect.hpp"
 #include "texture.hpp"
-
+
 class SurfaceDrawingParameters;
 class SurfaceImpl;
-
+
 /**
  * Surface class. This class basically holds a reference to an opengl texture
  * along with texture coordinates that specify a rectangle on that texture.
@@ -68,7 +68,7 @@
 private:
   boost::shared_ptr<SurfaceImpl> impl;
 };
-
+
 #endif
 
 /* EOF */

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -18,7 +18,7 @@
 
 #include "util/file_reader.hpp"
 #include "display/surface.hpp"
-#include "display/surface_drawing_parameters.hpp"
+#include "display/drawing_parameters.hpp"
 #include "display/scene_context.hpp"
 #include "decal_object_model.hpp"
 
@@ -37,6 +37,8 @@
   reader.get("type", map_type);
   type = (MapType)map_type;
   surface = Surface(path);
+
+  quad = Quad(0, 0, surface.get_width(), surface.get_height());
 }
 
 DecalObjectModel::DecalObjectModel(const std::string& name, const Vector2f& rel_pos, 
@@ -46,6 +48,7 @@
     surface(path_),
     type(type_)
 {
+  quad = Quad(0, 0, surface.get_width(), surface.get_height());
 }
 
 DecalObjectModel::~DecalObjectModel()
@@ -64,19 +67,18 @@
   switch(type)
     {
       case COLORMAP:
-        sc.color().draw(surface, wo_pos + center_offset); 
+        sc.color().draw(surface, wo_pos + center_offset, quad,
+                        DrawingParameters());
         break;
 
       case LIGHTMAP:
-        sc.light().draw(surface, SurfaceDrawingParameters()
-                        .set_pos(wo_pos + center_offset)
-                        .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
+        sc.light().draw(surface, wo_pos + center_offset, quad, 
+                        DrawingParameters().set_blend_func(GL_SRC_ALPHA, GL_ONE));
         break;
 
       case HIGHLIGHTMAP:
-        sc.highlight().draw(surface, SurfaceDrawingParameters()
-                            .set_pos(wo_pos + center_offset)
-                            .set_blend_func(GL_SRC_ALPHA, GL_ONE)); 
+        sc.highlight().draw(surface, wo_pos + center_offset, quad, 
+                            DrawingParameters().set_blend_func(GL_SRC_ALPHA, GL_ONE));
         break;
     }
 }

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -19,6 +19,7 @@
 #ifndef HEADER_WINDSTILLE_EDITOR_DECAL_OBJECT_MODEL_HPP
 #define HEADER_WINDSTILLE_EDITOR_DECAL_OBJECT_MODEL_HPP
 
+#include "math/quad.hpp"
 #include "display/surface.hpp"
 #include "object_model.hpp"
 
@@ -32,6 +33,7 @@
 private:
   std::string path;
   Surface surface;
+  Quad quad;
   MapType type;
 
 public:

Added: trunk/windstille/src/math/quad.hpp
===================================================================
--- trunk/windstille/src/math/quad.hpp	2009-03-31 02:40:20 UTC (rev 2836)
+++ trunk/windstille/src/math/quad.hpp	2009-03-31 15:34:40 UTC (rev 2837)
@@ -0,0 +1,67 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**  
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**  
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef HEADER_WINDSTILLE_MATH_QUAD_HPP
+#define HEADER_WINDSTILLE_MATH_QUAD_HPP
+
+#include "math.hpp"
+#include "vector2f.hpp"
+#include "rect.hpp"
+
+class Quad
+{
+private:
+public:
+  Vector2f p1;
+  Vector2f p2;
+  Vector2f p3;
+  Vector2f p4;
+
+  Quad()
+  {}
+
+  Quad(float x1, float y1,
+       float x2, float y2)
+    : p1(x1, y1),
+      p2(x2, y1),
+      p3(x2, y2),
+      p4(x1, y2)
+  {}
+
+  Quad(const Vector2f& p1_,
+       const Vector2f& p2_,
+       const Vector2f& p3_,
+       const Vector2f& p4_)
+    : p1(p1_),
+      p2(p2_),
+      p3(p3_),
+      p4(p4_)
+  {}
+ 
+  Rectf get_bounding_box() const
+  {
+    return Rectf(math::min(math::min(math::min(p1.x, p2.x), p3.x), p4.x),
+                 math::min(math::min(math::min(p1.y, p2.y), p3.y), p4.y),
+                 math::max(math::max(math::max(p1.y, p2.y), p3.y), p4.y),
+                 math::max(math::max(math::max(p1.y, p2.y), p3.y), p4.y));
+  }
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/windstille/src/math/quad.hpp
___________________________________________________________________
Name: svn:keywords
   + Id
Name: svn:eol-style
   + native



From grumbel at mail.berlios.de  Tue Mar 31 17:37:53 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 17:37:53 +0200
Subject: [Windstille-commit] r2838 - in trunk/windstille/src: editor math
Message-ID: <200903311537.n2VFbr7M008435@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 17:37:53 +0200 (Tue, 31 Mar 2009)
New Revision: 2838

Modified:
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/math/quad.hpp
Log:
Bounding Rect calculation fixed

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-31 15:34:40 UTC (rev 2837)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-31 15:37:53 UTC (rev 2838)
@@ -89,7 +89,7 @@
   Vector2f center_offset(-surface.get_width()/2,
                          -surface.get_height()/2);
 
-  return Rectf(get_world_pos() + center_offset, Sizef(surface.get_width(), surface.get_height()));
+  return quad.get_bounding_box() + get_world_pos() + center_offset;
 }
 
 ObjectModelHandle

Modified: trunk/windstille/src/math/quad.hpp
===================================================================
--- trunk/windstille/src/math/quad.hpp	2009-03-31 15:34:40 UTC (rev 2837)
+++ trunk/windstille/src/math/quad.hpp	2009-03-31 15:37:53 UTC (rev 2838)
@@ -57,7 +57,7 @@
   {
     return Rectf(math::min(math::min(math::min(p1.x, p2.x), p3.x), p4.x),
                  math::min(math::min(math::min(p1.y, p2.y), p3.y), p4.y),
-                 math::max(math::max(math::max(p1.y, p2.y), p3.y), p4.y),
+                 math::max(math::max(math::max(p1.x, p2.x), p3.x), p4.x),
                  math::max(math::max(math::max(p1.y, p2.y), p3.y), p4.y));
   }
 };



From grumbel at mail.berlios.de  Tue Mar 31 18:03:03 2009
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Tue, 31 Mar 2009 18:03:03 +0200
Subject: [Windstille-commit] r2839 - trunk/windstille/src/editor
Message-ID: <200903311603.n2VG3317011379@sheep.berlios.de>

Author: grumbel
Date: 2009-03-31 18:03:01 +0200 (Tue, 31 Mar 2009)
New Revision: 2839

Modified:
   trunk/windstille/src/editor/control_point.hpp
   trunk/windstille/src/editor/decal_object_model.cpp
   trunk/windstille/src/editor/decal_object_model.hpp
   trunk/windstille/src/editor/object_model.hpp
   trunk/windstille/src/editor/selection.cpp
Log:
Added some basic quad modifying capabilities

Modified: trunk/windstille/src/editor/control_point.hpp
===================================================================
--- trunk/windstille/src/editor/control_point.hpp	2009-03-31 15:37:53 UTC (rev 2838)
+++ trunk/windstille/src/editor/control_point.hpp	2009-03-31 16:03:01 UTC (rev 2839)
@@ -44,9 +44,9 @@
 
   Rectf get_bounding_box() const;
 
-  void on_move_start();
-  void on_move_update(const Vector2f& offset);
-  void on_move_end(const Vector2f& offset);
+  virtual void on_move_start();
+  virtual void on_move_update(const Vector2f& offset);
+  virtual void on_move_end(const Vector2f& offset);
 
 private:
   ControlPoint(const ControlPoint&);

Modified: trunk/windstille/src/editor/decal_object_model.cpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.cpp	2009-03-31 15:37:53 UTC (rev 2838)
+++ trunk/windstille/src/editor/decal_object_model.cpp	2009-03-31 16:03:01 UTC (rev 2839)
@@ -107,5 +107,45 @@
   writer.write("type",    type);
   writer.end_section();
 }
+
+class QuadControlPoint : public ControlPoint
+{
+private:
+  Quad& quad;
+  int n;
+
+public:
+  QuadControlPoint(int n_, Quad& quad_, const Vector2f& pos_)
+    : ControlPoint(pos_),
+      quad(quad_),
+      n(n_)
+  {}
+
+  void on_move_start() {}
+  void on_move_update(const Vector2f& offset) {}
+  void on_move_end(const Vector2f& offset)
+  {
+    if (n == 0)
+      quad.p1 += offset;
+    else if (n == 1)
+      quad.p2 += offset;
+    else if (n == 2)
+      quad.p3 += offset;
+    else if (n == 3)
+      quad.p4 += offset;
+  }  
+};
+
+void
+DecalObjectModel::add_control_points(std::vector<ControlPointHandle>& control_points)
+{
+  Vector2f center_offset(-surface.get_width()/2,
+                         -surface.get_height()/2);
+
+  control_points.push_back(ControlPointHandle(new QuadControlPoint(0, quad, quad.p1 + get_world_pos() + center_offset)));
+  control_points.push_back(ControlPointHandle(new QuadControlPoint(1, quad, quad.p2 + get_world_pos() + center_offset)));
+  control_points.push_back(ControlPointHandle(new QuadControlPoint(2, quad, quad.p3 + get_world_pos() + center_offset)));
+  control_points.push_back(ControlPointHandle(new QuadControlPoint(3, quad, quad.p4 + get_world_pos() + center_offset)));
+}
 
 /* EOF */

Modified: trunk/windstille/src/editor/decal_object_model.hpp
===================================================================
--- trunk/windstille/src/editor/decal_object_model.hpp	2009-03-31 15:37:53 UTC (rev 2838)
+++ trunk/windstille/src/editor/decal_object_model.hpp	2009-03-31 16:03:01 UTC (rev 2839)
@@ -20,6 +20,7 @@
 #define HEADER_WINDSTILLE_EDITOR_DECAL_OBJECT_MODEL_HPP
 
 #include "math/quad.hpp"
+#include "control_point.hpp"
 #include "display/surface.hpp"
 #include "object_model.hpp"
 
@@ -47,6 +48,8 @@
   Rectf get_bounding_box() const;
   ObjectModelHandle clone() const;
   void write(FileWriter& writer) const;
+
+  void add_control_points(std::vector<ControlPointHandle>& control_points);
 };
 
 #endif

Modified: trunk/windstille/src/editor/object_model.hpp
===================================================================
--- trunk/windstille/src/editor/object_model.hpp	2009-03-31 15:37:53 UTC (rev 2838)
+++ trunk/windstille/src/editor/object_model.hpp	2009-03-31 16:03:01 UTC (rev 2839)
@@ -27,6 +27,7 @@
 #include "util/file_writer.hpp"
 #include "display/surface.hpp"
 #include "math/vector2f.hpp"
+#include "editor/control_point.hpp"
 #include "snap_data.hpp"
 
 class ObjectModel;
@@ -37,7 +38,7 @@
 
 class ObjectModel
 {
-private:
+protected:
   std::string name;
   Vector2f    rel_pos;
   SelectMask  select_mask;
@@ -80,6 +81,8 @@
 
   virtual void write(FileWriter& writer) const =0;
   virtual FileWriter& write_member(FileWriter& writer) const;
+
+  virtual void add_control_points(std::vector<ControlPointHandle>& control_points) {}
 };
 
 #endif

Modified: trunk/windstille/src/editor/selection.cpp
===================================================================
--- trunk/windstille/src/editor/selection.cpp	2009-03-31 15:37:53 UTC (rev 2838)
+++ trunk/windstille/src/editor/selection.cpp	2009-03-31 16:03:01 UTC (rev 2839)
@@ -192,11 +192,18 @@
   std::cout << "Adding ControlPoints" << std::endl;
   if (!empty())
     {
-      const Rectf& rect = get_bounding_box();
-      control_points.push_back(ControlPoint::create(Vector2f(rect.left, rect.top)));
-      control_points.push_back(ControlPoint::create(Vector2f(rect.right, rect.top)));
-      control_points.push_back(ControlPoint::create(Vector2f(rect.left, rect.bottom)));
-      control_points.push_back(ControlPoint::create(Vector2f(rect.right, rect.bottom)));
+      if (size() == 1)
+        {
+          objects[0]->add_control_points(control_points);
+        }
+      else
+        {
+          const Rectf& rect = get_bounding_box();
+          control_points.push_back(ControlPoint::create(Vector2f(rect.left, rect.top)));
+          control_points.push_back(ControlPoint::create(Vector2f(rect.right, rect.top)));
+          control_points.push_back(ControlPoint::create(Vector2f(rect.left, rect.bottom)));
+          control_points.push_back(ControlPoint::create(Vector2f(rect.right, rect.bottom)));
+        }
     }
 }
 



