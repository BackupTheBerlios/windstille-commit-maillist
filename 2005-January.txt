From grumbel at sheep.berlios.de  Mon Jan 31 16:18:09 2005
From: grumbel at sheep.berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 31 Jan 2005 16:18:09 +0100
Subject: [Windstille-commit] r343 - in trunk: data src src/display
Message-ID: <200501311518.j0VFI9PK025875@sheep.berlios.de>

Author: grumbel
Date: 2005-01-31 16:18:07 +0100 (Mon, 31 Jan 2005)
New Revision: 343

Added:
   trunk/src/display/
   trunk/src/display/drawing_context.cxx
   trunk/src/display/drawing_context.hxx
   trunk/src/display/drawing_request.hxx
   trunk/src/display/scene_context.cxx
   trunk/src/display/scene_context.hxx
Removed:
   trunk/src/drawing_context.cxx
   trunk/src/drawing_context.hxx
   trunk/src/drawing_request.hxx
   trunk/src/scene_context.cxx
   trunk/src/scene_context.hxx
Modified:
   trunk/data/tiles.scm
   trunk/src/SConstruct
   trunk/src/background.hxx
   trunk/src/config.h
   trunk/src/game_world.hxx
   trunk/src/gameobj.hxx
   trunk/src/string_converter.hxx
   trunk/src/tile_map.hxx
   trunk/src/windstille_game.cxx
   trunk/src/windstille_game.hxx
   trunk/src/windstille_level.cxx
   trunk/src/windstille_level.hxx
   trunk/src/windstille_main.cxx
   trunk/src/windstille_menu.cxx
Log:
- seperated some stuff in a directory and some other cleanup

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/data/tiles.scm	2005-01-31 15:18:07 UTC (rev 343)
@@ -217,7 +217,7 @@
         (colmap 15 15 15 15 15 15 15 15))
 
   (tiles (id 1)
-        (image "../data/images/groundset.png")
+        (image "../data/images/groundset2.png")
         (colmap 255 255 255 255 255 255 255 255)))
 
 ;; EOF ;;

Modified: trunk/src/SConstruct
===================================================================
--- trunk/src/SConstruct	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/SConstruct	2005-01-31 15:18:07 UTC (rev 343)
@@ -96,8 +96,8 @@
     'collision_manager.cxx',
 
     # drawing
-    'drawing_context.cxx',
-    'scene_context.cxx',
+    'display/drawing_context.cxx',
+    'display/scene_context.cxx',
     
     # Input Subdirectory
     'input/controller.cxx', 

Modified: trunk/src/background.hxx
===================================================================
--- trunk/src/background.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/background.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -20,7 +20,7 @@
 #ifndef HEADER_BACKGROUND_HXX
 #define HEADER_BACKGROUND_HXX
 
-#include "scene_context.hxx"
+#include "display/scene_context.hxx"
 
 /** */
 class Background

Modified: trunk/src/config.h
===================================================================
--- trunk/src/config.h	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/config.h	2005-01-31 15:18:07 UTC (rev 343)
@@ -1,59 +1,5 @@
 /* config.h.  Generated by configure.  */
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
-/* Define to 1 if you have the <inttypes.h> header file. */
-#define HAVE_INTTYPES_H 1
-
-/* Define to 1 if you have the `guile' library (-lguile). */
-#define HAVE_LIBGUILE 1
-
-/* Define to 1 if you have the `qthreads' library (-lqthreads). */
-#define HAVE_LIBQTHREADS 1
-
-/* Define to 1 if you have the <memory.h> header file. */
-#define HAVE_MEMORY_H 1
-
-/* Define to 1 if you have the <stdint.h> header file. */
-#define HAVE_STDINT_H 1
-
-/* Define to 1 if you have the <stdlib.h> header file. */
-#define HAVE_STDLIB_H 1
-
-/* Define to 1 if you have the <strings.h> header file. */
-#define HAVE_STRINGS_H 1
-
-/* Define to 1 if you have the <string.h> header file. */
-#define HAVE_STRING_H 1
-
-/* Define to 1 if you have the <sys/stat.h> header file. */
-#define HAVE_SYS_STAT_H 1
-
-/* Define to 1 if you have the <sys/types.h> header file. */
-#define HAVE_SYS_TYPES_H 1
-
-/* Define to 1 if you have the <unistd.h> header file. */
-#define HAVE_UNISTD_H 1
-
-/* Name of package */
-#define PACKAGE "windstille"
-
-/* Define to the address where bug reports for this package should be sent. */
-#define PACKAGE_BUGREPORT ""
-
-/* Define to the full name of this package. */
-#define PACKAGE_NAME "Windstille"
-
-/* Define to the full name and version of this package. */
-#define PACKAGE_STRING "Windstille 0.2.0"
-
-/* Define to the one symbol short name of this package. */
-#define PACKAGE_TARNAME "windstille"
-
-/* Define to the version of this package. */
-#define PACKAGE_VERSION "0.2.0"
-
-/* Define to 1 if you have the ANSI C header files. */
-#define STDC_HEADERS 1
-
 /* Version number of package */
 #define VERSION "0.2.0"

Copied: trunk/src/display/drawing_context.cxx (from rev 337, trunk/src/drawing_context.cxx)

Copied: trunk/src/display/drawing_context.hxx (from rev 337, trunk/src/drawing_context.hxx)

Copied: trunk/src/display/drawing_request.hxx (from rev 337, trunk/src/drawing_request.hxx)

Copied: trunk/src/display/scene_context.cxx (from rev 337, trunk/src/scene_context.cxx)
===================================================================
--- trunk/src/scene_context.cxx	2004-11-04 02:44:28 UTC (rev 337)
+++ trunk/src/display/scene_context.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -0,0 +1,141 @@
+//  $Id$
+//
+//  Pingus - A free Lemmings clone
+//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+//
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+#include <ClanLib/display.h>
+#include <ClanLib/gl.h>
+#include "scene_context.hxx"
+
+class SceneContextImpl
+{
+public:
+  DrawingContext color;
+  DrawingContext light;
+  DrawingContext highlight; 
+
+  CL_OpenGLSurface lightmap;
+  CL_Canvas        canvas;
+
+  SceneContextImpl() 
+    : lightmap(new CL_PixelBuffer(CL_Display::get_width(), 
+                                  CL_Display::get_height(),
+                                  CL_Display::get_width()*4, CL_PixelFormat::rgba8888), true),
+      canvas(lightmap)
+  {
+    canvas.get_gc()->set_scale(0.25, 0.25);
+  }
+};
+
+SceneContext::SceneContext()
+{
+  impl = new SceneContextImpl();
+}
+
+SceneContext::~SceneContext()
+{
+  delete impl;
+}
+
+DrawingContext&
+SceneContext::color()
+{
+  return impl->color; 
+}
+
+DrawingContext&
+SceneContext::light()
+{ 
+  return impl->light; 
+}
+
+DrawingContext&
+SceneContext::highlight()
+{ 
+  return impl->highlight; 
+}
+
+
+/** Translate the drawing context */
+void
+SceneContext::translate(float x, float y)
+{
+  impl->color.translate(x, y);
+  impl->light.translate(x, y);
+  impl->highlight.translate(x, y);
+}
+
+/** Set the rotation of the drawing context */
+void
+SceneContext::rotate(float angel)
+{
+  impl->color.rotate(angel);
+  impl->light.rotate(angel);
+  impl->highlight.rotate(angel);
+}
+
+/** Set the scaling of the drawing context */
+void
+SceneContext::scale(float x, float y)
+{
+  impl->color.scale(x, y);
+  impl->light.scale(x, y);
+  impl->highlight.scale(x, y);
+}
+
+void
+SceneContext::push_modelview()
+{
+  impl->color.push_modelview();
+  impl->light.push_modelview();
+  impl->highlight.push_modelview();
+}
+
+void
+SceneContext::pop_modelview()
+{
+  impl->color.pop_modelview();
+  impl->light.pop_modelview();
+  impl->highlight.pop_modelview();
+}
+
+void
+SceneContext::render()
+{
+  // Render all buffers
+  // FIXME: Render all to pbuffer for later combining of them
+  impl->color.render(0);
+  
+  impl->light.render(impl->canvas.get_gc());
+  impl->canvas.sync_surface();
+
+  //impl->lightmap.set_blend_func(blend_src_alpha, blend_one);
+  impl->lightmap.set_blend_func(blend_dest_color, blend_zero);
+  //GL_DST_COLOR, GL_ZERO
+  impl->lightmap.set_scale(4.0f, 4.0f);
+  impl->lightmap.draw();
+  impl->canvas.get_gc()->clear();
+
+  impl->highlight.render(0);
+
+  // Clear all DrawingContexts
+  impl->color.clear();
+  impl->light.clear();
+  impl->highlight.clear();
+}
+
+/* EOF */

Copied: trunk/src/display/scene_context.hxx (from rev 337, trunk/src/scene_context.hxx)

Deleted: trunk/src/drawing_context.cxx
===================================================================
--- trunk/src/drawing_context.cxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/drawing_context.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -1,175 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <assert.h>
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Display/graphic_context.h>
-#include <iostream>
-#include "drawing_context.hxx"
-
-struct DrawingRequestsSorter
-{
-  bool operator()(DrawingRequest* a, DrawingRequest* b) {
-    return a->get_z_pos() < b->get_z_pos();
-  }
-};
-
-class FillScreenDrawingRequest : public DrawingRequest
-{
-private:
-  CL_Color color;
-public:
-  FillScreenDrawingRequest(const CL_Color& color_) 
-    : DrawingRequest(CL_Vector(0, 0, -1000.0f)), color(color_)
-  {
-  }
-  virtual ~FillScreenDrawingRequest() {}
-
-  void draw(CL_GraphicContext* gc) {
-    gc->clear(color);
-  }
-};
-
-class SpriteDrawingRequest : public DrawingRequest
-{
-private:
-  CL_Sprite sprite;
-
-public:
-  SpriteDrawingRequest(const CL_Sprite& sprite_, const CL_Vector& pos_)
-    : DrawingRequest(pos_),
-      sprite(sprite_)
-  {}
-  virtual ~SpriteDrawingRequest() {}
-
-  void draw(CL_GraphicContext* gc) {
-    sprite.draw(static_cast<int>(pos.x), static_cast<int>(pos.y), gc);
-  }
-};
-
-class TextDrawingRequest : public DrawingRequest
-{
-private:
-  std::string text;
-public:
-  TextDrawingRequest(const std::string& text_, const CL_Vector& pos_)
-    : DrawingRequest(pos_),
-      text(text_)
-  {}
-  virtual ~TextDrawingRequest() {}
-
-  void draw(CL_GraphicContext* gc) {
-    // FIXME: not implemented
-  }
-};
-
-DrawingContext::DrawingContext()
-{
-  translate_stack.push_back(CL_Pointf(0, 0));
-}
-
-void
-DrawingContext::render(CL_GraphicContext* gc)
-{
-  std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());
-  
-  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
-    {
-      (*i)->draw(gc);
-    }
-}
-
-void
-DrawingContext::clear()
-{
-  for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
-    {
-      delete *i;
-    }
-  drawingrequests.clear();
-}
-
-void
-DrawingContext::draw(DrawingRequest* request)
-{
-  drawingrequests.push_back(request);
-}
-
-void
-DrawingContext::draw(const CL_Sprite&   sprite,  float x, float y, float z)
-{ // FIXME: This should get flattend down to a simple texture draw
-  // command for easier sorting after texture-id/alpha
-  draw(new SpriteDrawingRequest(sprite, CL_Vector(translate_stack.back().x + x,
-                                                  translate_stack.back().y + y,
-                                                  z)));
-}
-
-void
-DrawingContext::draw(const std::string& text,    float x, float y, float z)
-{ 
-  draw(new TextDrawingRequest(text, CL_Vector(x, y, z)));
-}
-
-void
-DrawingContext::fill_screen(const CL_Color& color)
-{
-  draw(new FillScreenDrawingRequest(color));
-}
-
-void
-DrawingContext::rotate(float angel)
-{
-  // FIXME: not implemented
-}
-
-void
-DrawingContext::scale(float x, float y)
-{
-  // FIXME: not implemented
-}
-
-void
-DrawingContext::translate(float x, float y)
-{
-  translate_stack.back().x += x;
-  translate_stack.back().y += y;
-}
-
-void
-DrawingContext::push_modelview()
-{
-  translate_stack.push_back(translate_stack.back());
-}
-
-void
-DrawingContext::pop_modelview()
-{
-  translate_stack.pop_back();
-  assert(!translate_stack.empty());
-}
-
-CL_Rect
-DrawingContext::get_clip_rect()
-{
-  return CL_Rect(CL_Point(static_cast<int>(translate_stack.back().x),
-                          static_cast<int>(translate_stack.back().y)),
-                 CL_Size(800, 600));
-}
-
-/* EOF */

Deleted: trunk/src/drawing_context.hxx
===================================================================
--- trunk/src/drawing_context.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/drawing_context.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -1,85 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DRAWING_CONTEXT_HXX
-#define HEADER_DRAWING_CONTEXT_HXX
-
-#include <ClanLib/Core/Math/rect.h>
-#include <ClanLib/Display/color.h>
-#include <vector>
-#include "drawing_request.hxx"
-
-class CL_Sprite;
-
-/** The DrawingContext collects all DrawingRequests and allows you to
-    flush them all down to the graphics card in one run, this has the
-    advantage that it is possible to z-sort, texture-id sort or
-    otherwise optimize the drawing. In addition to that it also allows
-    you do render the drawing commands to multiple buffers which might
-    be usefull for post-processing effects and such. */
-class DrawingContext
-{
-private:
-  typedef std::vector<DrawingRequest*> DrawingRequests;
-  DrawingRequests drawingrequests;
-
-  std::vector<CL_Pointf> translate_stack;
-
-public:
-  DrawingContext();
-
-  /** Draws everything in the drawing context to the screen */
-  void render(CL_GraphicContext* gc);
-
-  /** Empties the drawing context */
-  void clear();
-
-  /** Fills the screen with a given color, this is different from
-      clear() in that it doesn't remove other DrawingRequest from the
-      queue */
-  void fill_screen(const CL_Color& color);
-
-  /*{ */
-  void draw(DrawingRequest* request);
-  void draw(const CL_Sprite&   sprite,  float x, float y, float z = 0);
-  void draw(const std::string& text,    float x, float y, float z = 0);
-  /*} */
-  
-  /** Translate the drawing context */
-  void translate(float x, float y);
-
-  /** Set the rotation of the drawing context */
-  void rotate(float angel);
-
-  /** Set the scaling of the drawing context */
-  void scale(float x, float y);
-
-  void push_modelview();
-  void pop_modelview();
-
-  /** Return the area of the screen that will be visible*/
-  CL_Rect get_clip_rect();
-private:
-  DrawingContext (const DrawingContext&);
-  DrawingContext& operator= (const DrawingContext&);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/drawing_request.hxx
===================================================================
--- trunk/src/drawing_request.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/drawing_request.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -1,51 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_DRAWING_REQUEST_HXX
-#define HEADER_DRAWING_REQUEST_HXX
-
-#include <ClanLib/Core/Math/cl_vector.h>
-
-class CL_GraphicContext;
-
-/** 
- */
-class DrawingRequest
-{
-protected:
-  CL_Vector pos;
-public:
-  DrawingRequest(const CL_Vector& pos_) : pos(pos_) {}
-  
-  virtual void draw(CL_GraphicContext* gc) = 0;
-  
-  /** Returns true if the request contains an alpha channel and needs
-      to be drawn in order */
-  virtual bool has_alpha() { return true; }
-
-  /** Returns the position at which the request should be drawn */
-  virtual float get_z_pos() { return pos.z; }
-private:
-  DrawingRequest (const DrawingRequest&);
-  DrawingRequest& operator= (const DrawingRequest&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/src/game_world.hxx
===================================================================
--- trunk/src/game_world.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/game_world.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -24,7 +24,7 @@
 #include <vector>
 #include <string>
 #include "coroutine_manager.hxx"
-#include "scene_context.hxx"
+#include "display/scene_context.hxx"
 
 class TileMap;
 class DiamondMap;

Modified: trunk/src/gameobj.hxx
===================================================================
--- trunk/src/gameobj.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/gameobj.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -20,7 +20,7 @@
 #ifndef GAMEOBJ_HXX
 #define GAMEOBJ_HXX
 
-#include "scene_context.hxx"
+#include "display/scene_context.hxx"
 
 class GameWorld;
 

Deleted: trunk/src/scene_context.cxx
===================================================================
--- trunk/src/scene_context.cxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/scene_context.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -1,140 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/display.h>
-#include <ClanLib/gl.h>
-#include "globals.hxx"
-#include "scene_context.hxx"
-
-class SceneContextImpl
-{
-public:
-  DrawingContext color;
-  DrawingContext light;
-  DrawingContext highlight; 
-
-  CL_OpenGLSurface lightmap;
-  CL_Canvas        canvas;
-
-  SceneContextImpl() 
-    : lightmap("black", resources),
-      canvas(lightmap)
-  {
-    canvas.get_gc()->set_scale(0.25, 0.25);
-  }
-};
-
-SceneContext::SceneContext()
-{
-  impl = new SceneContextImpl();
-}
-
-SceneContext::~SceneContext()
-{
-  delete impl;
-}
-
-DrawingContext&
-SceneContext::color()
-{
-  return impl->color; 
-}
-
-DrawingContext&
-SceneContext::light()
-{ 
-  return impl->light; 
-}
-
-DrawingContext&
-SceneContext::highlight()
-{ 
-  return impl->highlight; 
-}
-
-
-/** Translate the drawing context */
-void
-SceneContext::translate(float x, float y)
-{
-  impl->color.translate(x, y);
-  impl->light.translate(x, y);
-  impl->highlight.translate(x, y);
-}
-
-/** Set the rotation of the drawing context */
-void
-SceneContext::rotate(float angel)
-{
-  impl->color.rotate(angel);
-  impl->light.rotate(angel);
-  impl->highlight.rotate(angel);
-}
-
-/** Set the scaling of the drawing context */
-void
-SceneContext::scale(float x, float y)
-{
-  impl->color.scale(x, y);
-  impl->light.scale(x, y);
-  impl->highlight.scale(x, y);
-}
-
-void
-SceneContext::push_modelview()
-{
-  impl->color.push_modelview();
-  impl->light.push_modelview();
-  impl->highlight.push_modelview();
-}
-
-void
-SceneContext::pop_modelview()
-{
-  impl->color.pop_modelview();
-  impl->light.pop_modelview();
-  impl->highlight.pop_modelview();
-}
-
-void
-SceneContext::render()
-{
-  // Render all buffers
-  // FIXME: Render all to pbuffer for later combining of them
-  impl->color.render(0);
-  
-  impl->light.render(impl->canvas.get_gc());
-  impl->canvas.sync_surface();
-
-  //impl->lightmap.set_blend_func(blend_src_alpha, blend_one);
-  impl->lightmap.set_blend_func(blend_dest_color, blend_zero);
-  //GL_DST_COLOR, GL_ZERO
-  impl->lightmap.set_scale(4.0f, 4.0f);
-  impl->lightmap.draw();
-  impl->canvas.get_gc()->clear();
-
-  impl->highlight.render(0);
-
-  // Clear all DrawingContexts
-  impl->color.clear();
-  impl->light.clear();
-  impl->highlight.clear();
-}
-
-/* EOF */

Deleted: trunk/src/scene_context.hxx
===================================================================
--- trunk/src/scene_context.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/scene_context.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -1,81 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_SCENE_CONTEXT_HXX
-#define HEADER_SCENE_CONTEXT_HXX
-
-#include "drawing_context.hxx"
-
-class SceneContextImpl;
-
-/** The SceneContext maintains all the different drawing layers to
-    which a game object can draw. Each drawing layer serves a
-    different purporse and all are combined in the end to form the
-    final image. */
-class SceneContext
-{
-public:
-  SceneContext();
-  ~SceneContext();
-  
-  /** The main drawing context, also known as color buffer, to this
-      you draw all normal graphics, sprites and enemies, as you would
-      do with a normal framebuffer */
-  DrawingContext& color();
-
-  /** This is the lightmap, to this you draw all lights, meaning that
-      a color of white will result in a area that is completly
-      visible, while a value of black will mean that the area will be
-      not lighted at all and be completly black. This lightmap is
-      multiplied with the color buffer to get the light effect */
-  DrawingContext& light();
-
-  /** The highlight map is usefull for all objects that are extremly
-      bright so that they generate a lenseflare or a glow. The
-      highlight map doesn't light the scenario itself, but gets
-      additionally rendered above the color and light buffer, thus its
-      allows to add glow without risking to losing it in an area of
-      darkness */
-  DrawingContext& highlight();
-
-  /** Translate the drawing context */
-  void translate(float x, float y);
-
-  /** Set the rotation of the drawing context */
-  void rotate(float angel);
-
-  /** Set the scaling of the drawing context */
-  void scale(float x, float y);
-
-  void push_modelview();
-  void pop_modelview();
-
-  /** Takes all the buffers and combines them to form the final image
-      that will be shown on the screen */
-  void render();
-private:
-  SceneContextImpl* impl;
-
-  SceneContext (const SceneContext&);
-  SceneContext& operator= (const SceneContext&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/src/string_converter.hxx
===================================================================
--- trunk/src/string_converter.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/string_converter.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -22,7 +22,6 @@
 
 #include <stdexcept>
 #include <sstream>
-#include "config.h"
 
 template <class T>
 std::string to_string(const T& any)

Modified: trunk/src/tile_map.hxx
===================================================================
--- trunk/src/tile_map.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/tile_map.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -25,7 +25,7 @@
 
 #include "globals.hxx"
 #include "field.hxx"
-#include "scene_context.hxx"
+#include "display/scene_context.hxx"
 
 class WindstilleLevel;
 class Tile;

Modified: trunk/src/windstille_game.cxx
===================================================================
--- trunk/src/windstille_game.cxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/windstille_game.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -39,7 +39,7 @@
 #include "dialog_manager.hxx"
 #include "windstille_main.hxx"
 #include "screenshot.hxx"
-#include "scene_context.hxx"
+#include "display/scene_context.hxx"
 #include "input/input_manager.hxx"
 
 #include "windstille_game.hxx"

Modified: trunk/src/windstille_game.hxx
===================================================================
--- trunk/src/windstille_game.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/windstille_game.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -24,7 +24,7 @@
 #include <ClanLib/Display/sprite.h>
 #include <ClanLib/Display/font.h>
 #include <ClanLib/Signals/slot_container.h>
-#include "scene_context.hxx"
+#include "display/scene_context.hxx"
 #include "screen.hxx"
 
 class CL_InputEvent;

Modified: trunk/src/windstille_level.cxx
===================================================================
--- trunk/src/windstille_level.cxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/windstille_level.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -19,7 +19,6 @@
 
 #include <assert.h>
 #include <iostream>
-#include "config.h"
 #include "globals.hxx"
 #include "windstille_level.hxx"
 #include "string_converter.hxx"
@@ -52,7 +51,10 @@
     {
       LispReader reader(lisp_cdr(tree));
 
-      parse_properties(reader.get("properties"));
+      reader.read_int("width",  &width);
+      reader.read_int("height", &height);
+      reader.read_string_vector("scripts", &scripts);
+
       //parse_foreground_tilemap(tree->getLisp("foreground-tilemap"));
       parse_foreground_tilemap(reader.get("interactive-tilemap"));
       parse_background_tilemap(reader.get("background-tilemap"));
@@ -90,23 +92,6 @@
 }
 
 void
-WindstilleLevel::parse_properties (lisp_object_t* tree)
-{
-  if (tree)
-    {
-      LispReader reader(tree);
-
-      reader.read_int("width",  &width);
-      reader.read_int("height", &height);
-      //tree->get("name",   name);
-      reader.read_string_vector("scripts", &scripts);
-    }
-
-  if (debug)
-    std::cout << "WindstilleLevel: dimensions: " << width << "x" << height << std::endl;
-}
-
-void
 WindstilleLevel::parse_background_tilemap (lisp_object_t* cur)
 {
   background_tilemap = parse_tilemap(cur);
@@ -128,7 +113,7 @@
 
   if ((static_cast<int>(field->get_vector().size()) != width*height))
     {
-      std::cout << "Error: Size is " << field->get_vector().size() 
+      std::cout << "WindstilleLevel: Error: Size is " << field->get_vector().size() 
                 << " should be " << width*height << std::endl;
       assert(0);
     }

Modified: trunk/src/windstille_level.hxx
===================================================================
--- trunk/src/windstille_level.hxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/windstille_level.hxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -42,7 +42,6 @@
   std::vector<std::string> scripts;
 
   void parse_file (const std::string& filename);
-  void parse_properties (lisp_object_t* cur);
 
   Field<int>* parse_tilemap (lisp_object_t* cur);
   void parse_foreground_tilemap (lisp_object_t* cur);

Modified: trunk/src/windstille_main.cxx
===================================================================
--- trunk/src/windstille_main.cxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/windstille_main.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -24,7 +24,6 @@
 #include <ClanLib/sound.h>
 #include <ClanLib/display.h>
 
-#include "config.h"
 #include "ruby_functor.hxx"
 #include "string_converter.hxx"
 #include "windstille_error.hxx"

Modified: trunk/src/windstille_menu.cxx
===================================================================
--- trunk/src/windstille_menu.cxx	2004-11-06 23:07:42 UTC (rev 342)
+++ trunk/src/windstille_menu.cxx	2005-01-31 15:18:07 UTC (rev 343)
@@ -25,13 +25,13 @@
 #include <ClanLib/Display/keyboard.h>
 #include "globals.hxx"
 #include "fonts.hxx"
-#include "config.h"
 #include "input/controller.hxx"
 #include "windstille_menu.hxx"
 #include "windstille_game.hxx"
 #include "music_manager.hxx"
 #include "windstille_bonus.hxx"
 #include "input/input_manager.hxx"
+#include "config.h"
 
 WindstilleMenu::WindstilleMenu()
   : background("menu_background", resources),
@@ -202,7 +202,7 @@
 
   Fonts::copyright.set_alignment(origin_bottom_left);
   Fonts::copyright.draw(15, CL_Display::get_height() - 10,
-                        PACKAGE_STRING "\n"
+                        "Windstille " VERSION "\n"
                         "Copyright (c) 2003 Ingo Ruhnke <grumbel at gmx.de>\n"
                         "This game comes with ABSOLUTELY NO WARRANTY. This is free software, and you are welcome\n"
                         "to redistribute it under certain conditions; see the file COPYING for details.\n");



