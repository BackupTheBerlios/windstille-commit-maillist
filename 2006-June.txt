From grumbel at berlios.de  Thu Jun 22 15:58:16 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 15:58:16 +0200
Subject: [Windstille-commit] r1264 - in trunk: . tools
Message-ID: <200606221358.k5MDwGZT001915@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 15:58:15 +0200 (Thu, 22 Jun 2006)
New Revision: 1264

Added:
   trunk/tools/SConstruct
Modified:
   trunk/SConstruct
Log:
- fixed miniswig SConstruct

Modified: trunk/SConstruct
===================================================================
--- trunk/SConstruct	2006-05-11 20:30:54 UTC (rev 1263)
+++ trunk/SConstruct	2006-06-22 13:58:15 UTC (rev 1264)
@@ -105,7 +105,7 @@
     env = conf.Finish() 
 else:
     Export('env')
-    SConscript('tools/miniswig/SConscript')
+    SConscript('tools/SConscript')
     SConscript('lib//SConscript')
     SConscript('src/SConscript')
     SConscript('src/scripting/SConscript')

Added: trunk/tools/SConstruct
===================================================================
--- trunk/tools/SConstruct	2006-05-11 20:30:54 UTC (rev 1263)
+++ trunk/tools/SConstruct	2006-06-22 13:58:15 UTC (rev 1264)
@@ -0,0 +1,18 @@
+##  -*- python -*-
+
+import glob
+
+env = Environment(CPPPATH=['../..'])
+miniswig = env.Program('miniswig/miniswig',
+                       ['miniswig/create_docu.cpp',
+                        'miniswig/xmlwriter.cpp',
+                        'miniswig/create_wrapper.cpp',
+                        'miniswig/main.cpp',
+                        'miniswig/tree.cpp',
+                        'miniswig/parser.yy',
+                        'miniswig/lexer.ll'], 
+                       CPPPATH="..")
+
+Export('miniswig')
+
+# EOF #



From grumbel at berlios.de  Thu Jun 22 15:58:51 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 15:58:51 +0200
Subject: [Windstille-commit] r1265 - trunk/tools
Message-ID: <200606221358.k5MDwpie002372@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 15:58:50 +0200 (Thu, 22 Jun 2006)
New Revision: 1265

Added:
   trunk/tools/SConscript
Log:
- fixed miniswig SConstruct

Copied: trunk/tools/SConscript (from rev 1264, trunk/tools/SConstruct)



From grumbel at berlios.de  Thu Jun 22 16:00:19 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 16:00:19 +0200
Subject: [Windstille-commit] r1266 - trunk
Message-ID: <200606221400.k5ME0J5p003371@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 16:00:10 +0200 (Thu, 22 Jun 2006)
New Revision: 1266

Added:
   trunk/config.h
Log:
added config.h to source tree, not such a good idea, but scons lacks configure at the moment

Added: trunk/config.h
===================================================================
--- trunk/config.h	2006-06-22 13:58:50 UTC (rev 1265)
+++ trunk/config.h	2006-06-22 14:00:10 UTC (rev 1266)
@@ -0,0 +1,97 @@
+/* config.h.  Generated by configure.  */
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Include pthread support for binary relocation? */
+/* #undef BR_PTHREAD */
+
+/* Use binary relocation? */
+/* #undef ENABLE_BINRELOC */
+
+/* Use the Apple OpenGL framework. */
+/* #undef HAVE_APPLE_OPENGL_FRAMEWORK */
+
+/* Define to 1 if you have the <dirent.h> header file, and it defines `DIR'.
+   */
+#define HAVE_DIRENT_H 1
+
+/* Define if you have the iconv() function. */
+#define HAVE_ICONV 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the `pthread' library (-lpthread). */
+/* #undef HAVE_LIBPTHREAD */
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <ndir.h> header file, and it defines `DIR'. */
+/* #undef HAVE_NDIR_H */
+
+/* Define if you have POSIX threads libraries and header files. */
+#define HAVE_PTHREAD 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Define to 1 if you have the <sys/dir.h> header file, and it defines `DIR'.
+   */
+/* #undef HAVE_SYS_DIR_H */
+
+/* Define to 1 if you have the <sys/ndir.h> header file, and it defines `DIR'.
+   */
+/* #undef HAVE_SYS_NDIR_H */
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the <windows.h> header file. */
+/* #undef HAVE_WINDOWS_H */
+
+/* Define as const if the declaration of iconv() needs const. */
+#define ICONV_CONST 
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "matze at braunis.de"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "windstille"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "windstille 0.3.0"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "windstille"
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "0.3.0"
+
+/* Define to necessary symbol if this constant uses a non-standard name on
+   your system. */
+/* #undef PTHREAD_CREATE_JOINABLE */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
+#define TIME_WITH_SYS_TIME 1
+
+/* Define to 1 if `lex' declares `yytext' as a `char *' by default, not a
+   `char[]'. */
+#define YYTEXT_POINTER 1



From grumbel at berlios.de  Thu Jun 22 16:02:17 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 16:02:17 +0200
Subject: [Windstille-commit] r1267 - in trunk: src src/display src/input tools
Message-ID: <200606221402.k5ME2HKn004163@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 16:02:16 +0200 (Thu, 22 Jun 2006)
New Revision: 1267

Removed:
   trunk/tools/SConstruct
Modified:
   trunk/src/display/display.cpp
   trunk/src/input/input_configurator.cpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
   trunk/src/sprite2dview.cpp
   trunk/src/sprite2dview.hpp
   trunk/tools/SConscript
Log:
- some stuff

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/src/display/display.cpp	2006-06-22 14:02:16 UTC (rev 1267)
@@ -37,11 +37,9 @@
 #include "util.hpp"
 #include <assert.h>
 
-namespace {
 SDL_Surface* Display::window       = 0;
 std::vector<Rect> Display::cliprects;
 std::vector<Framebuffer> framebuffers;
-}
 
 void
 Display::draw_line(const Vector& pos1, const Vector& pos2, const Color& color)

Modified: trunk/src/input/input_configurator.cpp
===================================================================
--- trunk/src/input/input_configurator.cpp	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/src/input/input_configurator.cpp	2006-06-22 14:02:16 UTC (rev 1267)
@@ -47,6 +47,7 @@
 
   area.set_font(Fonts::ttffont);
 
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, INVENTORY_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, AIM_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, PDA_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, TERTIARY_BUTTON);

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/src/input/input_manager_sdl.cpp	2006-06-22 14:02:16 UTC (rev 1267)
@@ -37,9 +37,9 @@
 class InputManagerSDLImpl
 {
 public:
-  std::vector<JoystickButtonBinding> joystick_button_bindings;
+  std::vector<JoystickButtonBinding>     joystick_button_bindings;
   std::vector<JoystickButtonAxisBinding> joystick_button_axis_bindings;
-  std::vector<JoystickAxisBinding>   joystick_axis_bindings;
+  std::vector<JoystickAxisBinding>       joystick_axis_bindings;
 
   std::vector<KeyboardButtonBinding> keyboard_button_bindings;
   std::vector<KeyboardAxisBinding>   keyboard_axis_bindings;

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/src/input/input_manager_sdl.hpp	2006-06-22 14:02:16 UTC (rev 1267)
@@ -69,11 +69,20 @@
 
 struct KeyboardAxisBinding
 {
-  int event;
+  int    event;
   SDLKey minus;
   SDLKey plus;
 };
 
+struct ButtonBinding
+{
+  enum Type { JOYSTICK_BUTTON, JOYSTICK_AXIS, JOYSTICK_HAT, MOUSE_BUTTON };
+
+  Type type;
+  int  device;
+  int  button;
+};
+
 /** */
 class InputManagerSDL : public InputManagerImpl
 {

Modified: trunk/src/sprite2dview.cpp
===================================================================
--- trunk/src/sprite2dview.cpp	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/src/sprite2dview.cpp	2006-06-22 14:02:16 UTC (rev 1267)
@@ -56,9 +56,9 @@
         }
     }
   
-  next_image(0);
-  sprite = new_sprite;
-  new_sprite = Sprite();
+  shuffle_directory = directory;
+  shuffle = false;
+  std::random_shuffle(shuffle_directory.begin(), shuffle_directory.end());
 
   offset = 0.0f;
 
@@ -72,6 +72,12 @@
   display_time = 0.0f;
   show_thumbnail = false;
   ignore_delta = false;
+
+
+  next_image(0);
+  sprite = new_sprite;
+  new_sprite = Sprite();
+
 }
 
 void
@@ -230,17 +236,29 @@
 
       index = (unsigned int)(index + i) % directory.size();
 
-    retry:
-      try {
-        new_sprite = Sprite(directory[index]);
-      } catch(std::exception& e) {
-        std::cout << "Error: " << e.what() << std::endl;
-        std::cout << "Removing '" << directory[index] << "' from the list" << std::endl;
-        directory.erase(directory.begin() + index);
-        index = (unsigned int)(index) % directory.size();
-        goto retry;
-      }
+      std::vector<std::string> dir;
 
+      if (shuffle)
+        dir = shuffle_directory;
+      else
+        dir = directory;
+      
+      bool retry = false;
+
+      do {
+        try {
+          new_sprite = Sprite(dir[index]);
+          retry = false;
+        } catch(std::exception& e) {
+          // FIXME: won't work in combination with shuffle
+          std::cout << "Error: " << e.what() << std::endl;
+          std::cout << "Removing '" << directory[index] << "' from the list" << std::endl;
+          directory.erase(directory.begin() + index);
+          index = (unsigned int)(index) % directory.size();
+          retry = true;
+        }
+      } while (retry);
+
       ignore_delta = true;
       fadein = 0.0f;
       prepare_sprite(new_sprite);
@@ -309,8 +327,34 @@
     break;
   }
 
-  if (controller.button_was_pressed(INVENTORY_BUTTON))
-     std::random_shuffle(directory.begin(), directory.end());
+  if (controller.button_was_pressed(PDA_BUTTON))
+    {
+      if (shuffle)
+        {
+          std::vector<std::string>::iterator i = std::find(directory.begin(), directory.end(),
+                                                           shuffle_directory[index]);
+          if (i != directory.end())
+            {
+              index = i - directory.begin() ;
+            }
+        }
+      else
+        {
+          std::vector<std::string>::iterator i = std::find(shuffle_directory.begin(), shuffle_directory.end(),
+                                                           directory[index]);
+          if (i != shuffle_directory.end())
+            {
+              index = i - shuffle_directory.begin();
+            }
+        }
+
+      shuffle = !shuffle;
+
+      std::cout << shuffle << " " << index << std::endl;
+    }
+
+  //  if (controller.button_was_pressed(INVENTORY_BUTTON))
+  //std::random_shuffle(shuffle_directory.begin(), shuffle_directory.end());
    
   if (controller.button_was_pressed(TERTIARY_BUTTON))
     show_thumbnail = !show_thumbnail;

Modified: trunk/src/sprite2dview.hpp
===================================================================
--- trunk/src/sprite2dview.hpp	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/src/sprite2dview.hpp	2006-06-22 14:02:16 UTC (rev 1267)
@@ -39,6 +39,7 @@
 private:
   SceneContext sc;
   std::vector<std::string> directory;
+  std::vector<std::string> shuffle_directory;
 
   enum Mode { SLIDESHOW, MANUAL } mode;
   
@@ -63,7 +64,7 @@
   float display_time;
   bool show_thumbnail;
   bool ignore_delta;
-
+  bool shuffle;
 public:
   Sprite2DView();
   ~Sprite2DView();

Modified: trunk/tools/SConscript
===================================================================
--- trunk/tools/SConscript	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/tools/SConscript	2006-06-22 14:02:16 UTC (rev 1267)
@@ -11,7 +11,7 @@
                         'miniswig/tree.cpp',
                         'miniswig/parser.yy',
                         'miniswig/lexer.ll'], 
-                       CPPPATH="..")
+                       CPPPATH=["..", "miniswig"])
 
 Export('miniswig')
 

Deleted: trunk/tools/SConstruct
===================================================================
--- trunk/tools/SConstruct	2006-06-22 14:00:10 UTC (rev 1266)
+++ trunk/tools/SConstruct	2006-06-22 14:02:16 UTC (rev 1267)
@@ -1,18 +0,0 @@
-##  -*- python -*-
-
-import glob
-
-env = Environment(CPPPATH=['../..'])
-miniswig = env.Program('miniswig/miniswig',
-                       ['miniswig/create_docu.cpp',
-                        'miniswig/xmlwriter.cpp',
-                        'miniswig/create_wrapper.cpp',
-                        'miniswig/main.cpp',
-                        'miniswig/tree.cpp',
-                        'miniswig/parser.yy',
-                        'miniswig/lexer.ll'], 
-                       CPPPATH="..")
-
-Export('miniswig')
-
-# EOF #



From grumbel at berlios.de  Thu Jun 22 16:02:55 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 16:02:55 +0200
Subject: [Windstille-commit] r1268 - trunk/src/display
Message-ID: <200606221402.k5ME2tMT004336@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 16:02:54 +0200 (Thu, 22 Jun 2006)
New Revision: 1268

Modified:
   trunk/src/display/texture.cpp
Log:
- some stuff

Modified: trunk/src/display/texture.cpp
===================================================================
--- trunk/src/display/texture.cpp	2006-06-22 14:02:16 UTC (rev 1267)
+++ trunk/src/display/texture.cpp	2006-06-22 14:02:54 UTC (rev 1268)
@@ -48,7 +48,7 @@
     assert_gl("creating texture handle."); 
   }
 
-  TextureImpl::~TextureImpl()
+  ~TextureImpl()
   {
     glDeleteTextures(1, &handle);
   }



From grumbel at berlios.de  Thu Jun 22 16:59:46 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 16:59:46 +0200
Subject: [Windstille-commit] r1269 - trunk/src
Message-ID: <200606221459.k5MExkRG013560@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 16:59:46 +0200 (Thu, 22 Jun 2006)
New Revision: 1269

Modified:
   trunk/src/screen.hpp
Log:
- stuff

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2006-06-22 14:02:54 UTC (rev 1268)
+++ trunk/src/screen.hpp	2006-06-22 14:59:46 UTC (rev 1269)
@@ -29,6 +29,8 @@
 #include <SDL.h>
 #include "signals/slot.hpp"
 
+namespace {
+
 class Controller;
 
 /** */
@@ -49,6 +51,8 @@
   virtual void handle_event(const SDL_Event& ) {}
 };
 
+} // namespace
+    
 #endif
 
 /* EOF */



From grumbel at berlios.de  Thu Jun 22 17:02:02 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 17:02:02 +0200
Subject: [Windstille-commit] r1271 - in trunk/lib: . glew
Message-ID: <200606221502.k5MF22iF013910@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 17:02:01 +0200 (Thu, 22 Jun 2006)
New Revision: 1271

Modified:
   trunk/lib/SConscript
   trunk/lib/glew/Jamfile
Log:
- stuff

Modified: trunk/lib/SConscript
===================================================================
--- trunk/lib/SConscript	2006-06-22 15:01:06 UTC (rev 1270)
+++ trunk/lib/SConscript	2006-06-22 15:02:01 UTC (rev 1271)
@@ -4,7 +4,7 @@
 
 env = Environment(CPPPATH = ['glew'])
 
-env.Library('glew',
+glew = env.Library('glew',
             glob.glob('glew/*.c') +
             glob.glob('glew/*.h'))
 

Modified: trunk/lib/glew/Jamfile
===================================================================
--- trunk/lib/glew/Jamfile	2006-06-22 15:01:06 UTC (rev 1270)
+++ trunk/lib/glew/Jamfile	2006-06-22 15:02:01 UTC (rev 1271)
@@ -1,7 +1,7 @@
 SubDir TOP lib glew ;
 
 Library glew : [ Wildcard *.c *.h ] ;
-CFlags glew : -Wno-all ;
+# CFlags glew : -Wno-all ;
 IncludeDir glew : . ;
 LinkWith glew : $(GL) ;
 Help glew : "Build the glew support library" ;



From grumbel at berlios.de  Thu Jun 22 17:01:08 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 17:01:08 +0200
Subject: [Windstille-commit] r1270 - trunk/src
Message-ID: <200606221501.k5MF18eg013761@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 17:01:06 +0200 (Thu, 22 Jun 2006)
New Revision: 1270

Modified:
   trunk/src/screen.cpp
   trunk/src/screen.hpp
Log:
- stuff

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2006-06-22 14:59:46 UTC (rev 1269)
+++ trunk/src/screen.cpp	2006-06-22 15:01:06 UTC (rev 1270)
@@ -36,8 +36,6 @@
 #include "input/input_manager_sdl.hpp"
 #include "sound/sound_manager.hpp"
 
-namespace Windstille {
-
 Screen::Screen()
 {
 }
@@ -46,6 +44,4 @@
 {
 }
 
-} // namespace Windstille
-
 /* EOF */

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2006-06-22 14:59:46 UTC (rev 1269)
+++ trunk/src/screen.hpp	2006-06-22 15:01:06 UTC (rev 1270)
@@ -29,8 +29,6 @@
 #include <SDL.h>
 #include "signals/slot.hpp"
 
-namespace {
-
 class Controller;
 
 /** */
@@ -51,8 +49,6 @@
   virtual void handle_event(const SDL_Event& ) {}
 };
 
-} // namespace
-    
 #endif
 
 /* EOF */



From grumbel at berlios.de  Thu Jun 22 17:15:07 2006
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 22 Jun 2006 17:15:07 +0200
Subject: [Windstille-commit] r1272 - in trunk: src/scripting tools
Message-ID: <200606221515.k5MFF7Ln015404@sheep.berlios.de>

Author: grumbel
Date: 2006-06-22 17:15:05 +0200 (Thu, 22 Jun 2006)
New Revision: 1272

Modified:
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/spawn_object.cpp
   trunk/src/scripting/spawn_object.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/tools/SConscript
Log:
- stuff

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2006-06-22 15:02:01 UTC (rev 1271)
+++ trunk/src/scripting/interface.cpp	2006-06-22 15:15:05 UTC (rev 1272)
@@ -238,13 +238,13 @@
   script_manager->set_wakeup_event(v, ScriptManager::CONVERSATION_CLOSED);
 }
 
-int display(HSQUIRRELVM v) __custom
+SQInteger display(HSQUIRRELVM v) __custom
 {
   console << squirrel2string(v, -1);
   return 0;
 }
 
-int println(HSQUIRRELVM v) __custom
+SQInteger println(HSQUIRRELVM v) __custom
 {
   console << squirrel2string(v, -1) << std::endl;
   return 0;

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2006-06-22 15:02:01 UTC (rev 1271)
+++ trunk/src/scripting/interface.hpp	2006-06-22 15:15:05 UTC (rev 1272)
@@ -95,8 +95,8 @@
 //Waits the specified time in seconds.
 void wait(HSQUIRRELVM vm, float time) __suspend;
 
-int display(HSQUIRRELVM) __custom;
-int println(HSQUIRRELVM) __custom;
+SQInteger display(HSQUIRRELVM) __custom;
+SQInteger println(HSQUIRRELVM) __custom;
 
 void set_console_font(const std::string& font, int size);
 void set_gamma(float g);

Modified: trunk/src/scripting/spawn_object.cpp
===================================================================
--- trunk/src/scripting/spawn_object.cpp	2006-06-22 15:02:01 UTC (rev 1271)
+++ trunk/src/scripting/spawn_object.cpp	2006-06-22 15:15:05 UTC (rev 1272)
@@ -96,7 +96,7 @@
   sq_pop(v, 1);
 }
 
-int spawn_object(HSQUIRRELVM v)
+SQInteger spawn_object(HSQUIRRELVM v)
 {
   using namespace lisp;
   

Modified: trunk/src/scripting/spawn_object.hpp
===================================================================
--- trunk/src/scripting/spawn_object.hpp	2006-06-22 15:02:01 UTC (rev 1271)
+++ trunk/src/scripting/spawn_object.hpp	2006-06-22 15:15:05 UTC (rev 1272)
@@ -15,7 +15,7 @@
  *
  * Example: spawn_object("scriptable-object", {name="blup", pos=[350,370], sprite="images/arrow.sprite"});
  */
-int spawn_object(HSQUIRRELVM v) __custom;
+SQInteger spawn_object(HSQUIRRELVM v) __custom;
 
 }
 

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2006-06-22 15:02:01 UTC (rev 1271)
+++ trunk/src/scripting/wrapper.cpp	2006-06-22 15:15:05 UTC (rev 1272)
@@ -18,20 +18,21 @@
 namespace Wrapper
 {
 
-static int GameObject_release_hook(SQUserPointer ptr, int )
+static SQInteger GameObject_release_hook(SQUserPointer ptr, SQInteger )
 {
   Scripting::GameObject* _this = reinterpret_cast<Scripting::GameObject*> (ptr);
   delete _this;
   return 0;
 }
 
-static int GameObject_get_name_wrapper(HSQUIRRELVM vm)
+static SQInteger GameObject_get_name_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::GameObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'get_name' called without instance"));
     return SQ_ERROR;
   }
+  Scripting::GameObject* _this = reinterpret_cast<Scripting::GameObject*> (data);
   
   try {
     const std::string& return_value = _this->get_name();
@@ -49,13 +50,14 @@
   
 }
 
-static int GameObject_remove_wrapper(HSQUIRRELVM vm)
+static SQInteger GameObject_remove_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::GameObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'remove' called without instance"));
     return SQ_ERROR;
   }
+  Scripting::GameObject* _this = reinterpret_cast<Scripting::GameObject*> (data);
   
   try {
     _this->remove();
@@ -72,13 +74,14 @@
   
 }
 
-static int GameObject_set_active_wrapper(HSQUIRRELVM vm)
+static SQInteger GameObject_set_active_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::GameObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'set_active' called without instance"));
     return SQ_ERROR;
   }
+  Scripting::GameObject* _this = reinterpret_cast<Scripting::GameObject*> (data);
   SQBool arg0;
   if(SQ_FAILED(sq_getbool(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a bool"));
@@ -86,7 +89,7 @@
   }
   
   try {
-    _this->set_active(arg0);
+    _this->set_active(arg0 == SQTrue);
   
     return 0;
   
@@ -100,14 +103,15 @@
   
 }
 
-static int GameObject_set_parent_wrapper(HSQUIRRELVM vm)
+static SQInteger GameObject_set_parent_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::GameObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'set_parent' called without instance"));
     return SQ_ERROR;
   }
-  const char* arg0;
+  Scripting::GameObject* _this = reinterpret_cast<Scripting::GameObject*> (data);
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -128,21 +132,22 @@
   
 }
 
-static int TestObject_release_hook(SQUserPointer ptr, int )
+static SQInteger TestObject_release_hook(SQUserPointer ptr, SQInteger )
 {
   Scripting::TestObject* _this = reinterpret_cast<Scripting::TestObject*> (ptr);
   delete _this;
   return 0;
 }
 
-static int TestObject_set_sprite_wrapper(HSQUIRRELVM vm)
+static SQInteger TestObject_set_sprite_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::TestObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'set_sprite' called without instance"));
     return SQ_ERROR;
   }
-  const char* arg0;
+  Scripting::TestObject* _this = reinterpret_cast<Scripting::TestObject*> (data);
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -163,14 +168,15 @@
   
 }
 
-static int TestObject_set_action_wrapper(HSQUIRRELVM vm)
+static SQInteger TestObject_set_action_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::TestObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'set_action' called without instance"));
     return SQ_ERROR;
   }
-  const char* arg0;
+  Scripting::TestObject* _this = reinterpret_cast<Scripting::TestObject*> (data);
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -191,26 +197,27 @@
   
 }
 
-static int TestObject_set_pos_wrapper(HSQUIRRELVM vm)
+static SQInteger TestObject_set_pos_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::TestObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'set_pos' called without instance"));
     return SQ_ERROR;
   }
-  float arg0;
+  Scripting::TestObject* _this = reinterpret_cast<Scripting::TestObject*> (data);
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    _this->set_pos(arg0, arg1);
+    _this->set_pos(static_cast<float> (arg0), static_cast<float> (arg1));
   
     return 0;
   
@@ -224,13 +231,14 @@
   
 }
 
-static int TestObject_set_vflip_wrapper(HSQUIRRELVM vm)
+static SQInteger TestObject_set_vflip_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::TestObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'set_vflip' called without instance"));
     return SQ_ERROR;
   }
+  Scripting::TestObject* _this = reinterpret_cast<Scripting::TestObject*> (data);
   SQBool arg0;
   if(SQ_FAILED(sq_getbool(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a bool"));
@@ -238,7 +246,7 @@
   }
   
   try {
-    _this->set_vflip(arg0);
+    _this->set_vflip(arg0 == SQTrue);
   
     return 0;
   
@@ -252,19 +260,20 @@
   
 }
 
-static int TestObject_attach_wrapper(HSQUIRRELVM vm)
+static SQInteger TestObject_attach_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::TestObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'attach' called without instance"));
     return SQ_ERROR;
   }
-  const char* arg0;
+  Scripting::TestObject* _this = reinterpret_cast<Scripting::TestObject*> (data);
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
   }
-  const char* arg1;
+  const SQChar* arg1;
   if(SQ_FAILED(sq_getstring(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a string"));
     return SQ_ERROR;
@@ -285,20 +294,21 @@
   
 }
 
-static int Player_release_hook(SQUserPointer ptr, int )
+static SQInteger Player_release_hook(SQUserPointer ptr, SQInteger )
 {
   Scripting::Player* _this = reinterpret_cast<Scripting::Player*> (ptr);
   delete _this;
   return 0;
 }
 
-static int Player_start_listening_wrapper(HSQUIRRELVM vm)
+static SQInteger Player_start_listening_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::Player* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'start_listening' called without instance"));
     return SQ_ERROR;
   }
+  Scripting::Player* _this = reinterpret_cast<Scripting::Player*> (data);
   
   try {
     _this->start_listening();
@@ -315,13 +325,14 @@
   
 }
 
-static int Player_stop_listening_wrapper(HSQUIRRELVM vm)
+static SQInteger Player_stop_listening_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::Player* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'stop_listening' called without instance"));
     return SQ_ERROR;
   }
+  Scripting::Player* _this = reinterpret_cast<Scripting::Player*> (data);
   
   try {
     _this->stop_listening();
@@ -338,43 +349,44 @@
   
 }
 
-static int ScriptableObject_release_hook(SQUserPointer ptr, int )
+static SQInteger ScriptableObject_release_hook(SQUserPointer ptr, SQInteger )
 {
   Scripting::ScriptableObject* _this = reinterpret_cast<Scripting::ScriptableObject*> (ptr);
   delete _this;
   return 0;
 }
 
-static int ScriptableObject_move_to_wrapper(HSQUIRRELVM vm)
+static SQInteger ScriptableObject_move_to_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::ScriptableObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'move_to' called without instance"));
     return SQ_ERROR;
   }
-  float arg0;
+  Scripting::ScriptableObject* _this = reinterpret_cast<Scripting::ScriptableObject*> (data);
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a float"));
     return SQ_ERROR;
   }
-  float arg2;
+  SQFloat arg2;
   if(SQ_FAILED(sq_getfloat(vm, 4, &arg2))) {
     sq_throwerror(vm, _SC("Argument 3 not a float"));
     return SQ_ERROR;
   }
-  float arg3;
+  SQFloat arg3;
   if(SQ_FAILED(sq_getfloat(vm, 5, &arg3))) {
     sq_throwerror(vm, _SC("Argument 4 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    _this->move_to(arg0, arg1, arg2, arg3);
+    _this->move_to(static_cast<float> (arg0), static_cast<float> (arg1), static_cast<float> (arg2), static_cast<float> (arg3));
   
     return 0;
   
@@ -388,21 +400,22 @@
   
 }
 
-static int ScriptableObject_start_flash_wrapper(HSQUIRRELVM vm)
+static SQInteger ScriptableObject_start_flash_wrapper(HSQUIRRELVM vm)
 {
-  Scripting::ScriptableObject* _this;
-  if(SQ_FAILED(sq_getinstanceup(vm, 1, reinterpret_cast<SQUserPointer*> (&_this), 0))) {
+  SQUserPointer data;
+  if(SQ_FAILED(sq_getinstanceup(vm, 1, &data, 0))) {
     sq_throwerror(vm, _SC("'start_flash' called without instance"));
     return SQ_ERROR;
   }
-  float arg0;
+  Scripting::ScriptableObject* _this = reinterpret_cast<Scripting::ScriptableObject*> (data);
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    _this->start_flash(arg0);
+    _this->start_flash(static_cast<float> (arg0));
   
     return 0;
   
@@ -416,9 +429,9 @@
   
 }
 
-static int set_sector_wrapper(HSQUIRRELVM vm)
+static SQInteger set_sector_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -439,9 +452,9 @@
   
 }
 
-static int play_music_wrapper(HSQUIRRELVM vm)
+static SQInteger play_music_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -462,16 +475,16 @@
   
 }
 
-static int stop_music_wrapper(HSQUIRRELVM vm)
+static SQInteger stop_music_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::stop_music(arg0);
+    Scripting::stop_music(static_cast<float> (arg0));
   
     return 0;
   
@@ -485,9 +498,9 @@
   
 }
 
-static int play_sound_wrapper(HSQUIRRELVM vm)
+static SQInteger play_sound_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -508,21 +521,21 @@
   
 }
 
-static int caption_add_wrapper(HSQUIRRELVM vm)
+static SQInteger caption_add_wrapper(HSQUIRRELVM vm)
 {
-  int arg0;
+  SQInteger arg0;
   if(SQ_FAILED(sq_getinteger(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not an integer"));
     return SQ_ERROR;
   }
-  const char* arg1;
+  const SQChar* arg1;
   if(SQ_FAILED(sq_getstring(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a string"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::caption_add(arg0, arg1);
+    Scripting::caption_add(static_cast<int> (arg0), arg1);
   
     return 0;
   
@@ -536,7 +549,7 @@
   
 }
 
-static int caption_clear_wrapper(HSQUIRRELVM vm)
+static SQInteger caption_clear_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -555,7 +568,7 @@
   
 }
 
-static int caption_end_wrapper(HSQUIRRELVM vm)
+static SQInteger caption_end_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -574,7 +587,7 @@
   
 }
 
-static int camera_set_active_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_set_active_wrapper(HSQUIRRELVM vm)
 {
   SQBool arg0;
   if(SQ_FAILED(sq_getbool(vm, 2, &arg0))) {
@@ -583,7 +596,7 @@
   }
   
   try {
-    Scripting::camera_set_active(arg0);
+    Scripting::camera_set_active(arg0 == SQTrue);
   
     return 0;
   
@@ -597,7 +610,7 @@
   
 }
 
-static int camera_continue_path_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_continue_path_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -616,7 +629,7 @@
   
 }
 
-static int camera_begin_path_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_begin_path_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -635,26 +648,26 @@
   
 }
 
-static int camera_add_point_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_add_point_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a float"));
     return SQ_ERROR;
   }
-  float arg2;
+  SQFloat arg2;
   if(SQ_FAILED(sq_getfloat(vm, 4, &arg2))) {
     sq_throwerror(vm, _SC("Argument 3 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::camera_add_point(arg0, arg1, arg2);
+    Scripting::camera_add_point(static_cast<float> (arg0), static_cast<float> (arg1), static_cast<float> (arg2));
   
     return 0;
   
@@ -668,7 +681,7 @@
   
 }
 
-static int camera_end_path_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_end_path_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -687,21 +700,21 @@
   
 }
 
-static int camera_set_pos_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_set_pos_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::camera_set_pos(arg0, arg1);
+    Scripting::camera_set_pos(static_cast<float> (arg0), static_cast<float> (arg1));
   
     return 0;
   
@@ -715,16 +728,16 @@
   
 }
 
-static int camera_set_zoom_wrapper(HSQUIRRELVM vm)
+static SQInteger camera_set_zoom_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::camera_set_zoom(arg0);
+    Scripting::camera_set_zoom(static_cast<float> (arg0));
   
     return 0;
   
@@ -738,7 +751,7 @@
   
 }
 
-static int set_controller_help_active_wrapper(HSQUIRRELVM vm)
+static SQInteger set_controller_help_active_wrapper(HSQUIRRELVM vm)
 {
   SQBool arg0;
   if(SQ_FAILED(sq_getbool(vm, 2, &arg0))) {
@@ -747,7 +760,7 @@
   }
   
   try {
-    Scripting::set_controller_help_active(arg0);
+    Scripting::set_controller_help_active(arg0 == SQTrue);
   
     return 0;
   
@@ -761,31 +774,31 @@
   
 }
 
-static int dialog_show_wrapper(HSQUIRRELVM vm)
+static SQInteger dialog_show_wrapper(HSQUIRRELVM vm)
 {
-  int arg0;
+  SQInteger arg0;
   if(SQ_FAILED(sq_getinteger(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not an integer"));
     return SQ_ERROR;
   }
-  const char* arg1;
+  const SQChar* arg1;
   if(SQ_FAILED(sq_getstring(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a string"));
     return SQ_ERROR;
   }
-  const char* arg2;
+  const SQChar* arg2;
   if(SQ_FAILED(sq_getstring(vm, 4, &arg2))) {
     sq_throwerror(vm, _SC("Argument 3 not a string"));
     return SQ_ERROR;
   }
-  const char* arg3;
+  const SQChar* arg3;
   if(SQ_FAILED(sq_getstring(vm, 5, &arg3))) {
     sq_throwerror(vm, _SC("Argument 4 not a string"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::dialog_show(arg0, arg1, arg2, arg3);
+    Scripting::dialog_show(static_cast<int> (arg0), arg1, arg2, arg3);
   
     return 0;
   
@@ -799,7 +812,7 @@
   
 }
 
-static int wait_for_dialog_wrapper(HSQUIRRELVM vm)
+static SQInteger wait_for_dialog_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
   
@@ -818,7 +831,7 @@
   
 }
 
-static int wait_for_fade_wrapper(HSQUIRRELVM vm)
+static SQInteger wait_for_fade_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
   
@@ -837,7 +850,7 @@
   
 }
 
-static int wait_for_camera_wrapper(HSQUIRRELVM vm)
+static SQInteger wait_for_camera_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
   
@@ -856,9 +869,9 @@
   
 }
 
-static int conversation_add_wrapper(HSQUIRRELVM vm)
+static SQInteger conversation_add_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -879,7 +892,7 @@
   
 }
 
-static int conversation_show_wrapper(HSQUIRRELVM vm)
+static SQInteger conversation_show_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -898,7 +911,7 @@
   
 }
 
-static int conversation_get_selection_wrapper(HSQUIRRELVM vm)
+static SQInteger conversation_get_selection_wrapper(HSQUIRRELVM vm)
 {
   
   try {
@@ -917,7 +930,7 @@
   
 }
 
-static int wait_for_conversation_wrapper(HSQUIRRELVM vm)
+static SQInteger wait_for_conversation_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
   
@@ -936,14 +949,14 @@
   
 }
 
-static int add_objective_wrapper(HSQUIRRELVM vm)
+static SQInteger add_objective_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
   }
-  const char* arg1;
+  const SQChar* arg1;
   if(SQ_FAILED(sq_getstring(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a string"));
     return SQ_ERROR;
@@ -964,9 +977,9 @@
   
 }
 
-static int objective_complete_wrapper(HSQUIRRELVM vm)
+static SQInteger objective_complete_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -987,9 +1000,9 @@
   
 }
 
-static int is_objective_given_wrapper(HSQUIRRELVM vm)
+static SQInteger is_objective_given_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -1011,9 +1024,9 @@
   
 }
 
-static int is_objective_complete_wrapper(HSQUIRRELVM vm)
+static SQInteger is_objective_complete_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -1035,7 +1048,7 @@
   
 }
 
-static int run_before_wrapper(HSQUIRRELVM vm)
+static SQInteger run_before_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
   
@@ -1055,10 +1068,10 @@
   
 }
 
-static int save_state_wrapper(HSQUIRRELVM vm)
+static SQInteger save_state_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
-  const char* arg1;
+  const SQChar* arg1;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg1))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -1079,10 +1092,10 @@
   
 }
 
-static int load_state_wrapper(HSQUIRRELVM vm)
+static SQInteger load_state_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
-  const char* arg1;
+  const SQChar* arg1;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg1))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
@@ -1103,7 +1116,7 @@
   
 }
 
-static int list_objects_wrapper(HSQUIRRELVM vm)
+static SQInteger list_objects_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -1122,7 +1135,7 @@
   
 }
 
-static int set_debug_wrapper(HSQUIRRELVM vm)
+static SQInteger set_debug_wrapper(HSQUIRRELVM vm)
 {
   SQBool arg0;
   if(SQ_FAILED(sq_getbool(vm, 2, &arg0))) {
@@ -1131,7 +1144,7 @@
   }
   
   try {
-    Scripting::set_debug(arg0);
+    Scripting::set_debug(arg0 == SQTrue);
   
     return 0;
   
@@ -1145,7 +1158,7 @@
   
 }
 
-static int get_debug_wrapper(HSQUIRRELVM vm)
+static SQInteger get_debug_wrapper(HSQUIRRELVM vm)
 {
   
   try {
@@ -1164,7 +1177,7 @@
   
 }
 
-static int get_game_speed_wrapper(HSQUIRRELVM vm)
+static SQInteger get_game_speed_wrapper(HSQUIRRELVM vm)
 {
   
   try {
@@ -1183,16 +1196,16 @@
   
 }
 
-static int set_game_speed_wrapper(HSQUIRRELVM vm)
+static SQInteger set_game_speed_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::set_game_speed(arg0);
+    Scripting::set_game_speed(static_cast<float> (arg0));
   
     return 0;
   
@@ -1206,17 +1219,17 @@
   
 }
 
-static int wait_wrapper(HSQUIRRELVM vm)
+static SQInteger wait_wrapper(HSQUIRRELVM vm)
 {
   HSQUIRRELVM arg0 = vm;
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg1))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::wait(arg0, arg1);
+    Scripting::wait(arg0, static_cast<float> (arg1));
   
     return sq_suspendvm(vm);
   
@@ -1230,31 +1243,31 @@
   
 }
 
-static int display_wrapper(HSQUIRRELVM vm)
+static SQInteger display_wrapper(HSQUIRRELVM vm)
 {
   return Scripting::display(vm);
 }
 
-static int println_wrapper(HSQUIRRELVM vm)
+static SQInteger println_wrapper(HSQUIRRELVM vm)
 {
   return Scripting::println(vm);
 }
 
-static int set_console_font_wrapper(HSQUIRRELVM vm)
+static SQInteger set_console_font_wrapper(HSQUIRRELVM vm)
 {
-  const char* arg0;
+  const SQChar* arg0;
   if(SQ_FAILED(sq_getstring(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a string"));
     return SQ_ERROR;
   }
-  int arg1;
+  SQInteger arg1;
   if(SQ_FAILED(sq_getinteger(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not an integer"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::set_console_font(arg0, arg1);
+    Scripting::set_console_font(arg0, static_cast<int> (arg1));
   
     return 0;
   
@@ -1268,16 +1281,16 @@
   
 }
 
-static int set_gamma_wrapper(HSQUIRRELVM vm)
+static SQInteger set_gamma_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::set_gamma(arg0);
+    Scripting::set_gamma(static_cast<float> (arg0));
   
     return 0;
   
@@ -1291,26 +1304,26 @@
   
 }
 
-static int set_gamma_rgb_wrapper(HSQUIRRELVM vm)
+static SQInteger set_gamma_rgb_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a float"));
     return SQ_ERROR;
   }
-  float arg2;
+  SQFloat arg2;
   if(SQ_FAILED(sq_getfloat(vm, 4, &arg2))) {
     sq_throwerror(vm, _SC("Argument 3 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::set_gamma_rgb(arg0, arg1, arg2);
+    Scripting::set_gamma_rgb(static_cast<float> (arg0), static_cast<float> (arg1), static_cast<float> (arg2));
   
     return 0;
   
@@ -1324,7 +1337,7 @@
   
 }
 
-static int show_config_wrapper(HSQUIRRELVM vm)
+static SQInteger show_config_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -1343,7 +1356,7 @@
   
 }
 
-static int cutscene_begin_wrapper(HSQUIRRELVM vm)
+static SQInteger cutscene_begin_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -1362,7 +1375,7 @@
   
 }
 
-static int cutscene_end_wrapper(HSQUIRRELVM vm)
+static SQInteger cutscene_end_wrapper(HSQUIRRELVM vm)
 {
   (void) vm;
   
@@ -1381,31 +1394,31 @@
   
 }
 
-static int internal_fadeout_rgb_wrapper(HSQUIRRELVM vm)
+static SQInteger internal_fadeout_rgb_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
-  float arg1;
+  SQFloat arg1;
   if(SQ_FAILED(sq_getfloat(vm, 3, &arg1))) {
     sq_throwerror(vm, _SC("Argument 2 not a float"));
     return SQ_ERROR;
   }
-  float arg2;
+  SQFloat arg2;
   if(SQ_FAILED(sq_getfloat(vm, 4, &arg2))) {
     sq_throwerror(vm, _SC("Argument 3 not a float"));
     return SQ_ERROR;
   }
-  float arg3;
+  SQFloat arg3;
   if(SQ_FAILED(sq_getfloat(vm, 5, &arg3))) {
     sq_throwerror(vm, _SC("Argument 4 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::internal_fadeout_rgb(arg0, arg1, arg2, arg3);
+    Scripting::internal_fadeout_rgb(static_cast<float> (arg0), static_cast<float> (arg1), static_cast<float> (arg2), static_cast<float> (arg3));
   
     return 0;
   
@@ -1419,16 +1432,16 @@
   
 }
 
-static int internal_fadein_wrapper(HSQUIRRELVM vm)
+static SQInteger internal_fadein_wrapper(HSQUIRRELVM vm)
 {
-  float arg0;
+  SQFloat arg0;
   if(SQ_FAILED(sq_getfloat(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not a float"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::internal_fadein(arg0);
+    Scripting::internal_fadein(static_cast<float> (arg0));
   
     return 0;
   
@@ -1442,7 +1455,7 @@
   
 }
 
-static int render_mask_get_wrapper(HSQUIRRELVM vm)
+static SQInteger render_mask_get_wrapper(HSQUIRRELVM vm)
 {
   
   try {
@@ -1461,16 +1474,16 @@
   
 }
 
-static int render_mask_set_wrapper(HSQUIRRELVM vm)
+static SQInteger render_mask_set_wrapper(HSQUIRRELVM vm)
 {
-  int arg0;
+  SQInteger arg0;
   if(SQ_FAILED(sq_getinteger(vm, 2, &arg0))) {
     sq_throwerror(vm, _SC("Argument 1 not an integer"));
     return SQ_ERROR;
   }
   
   try {
-    Scripting::render_mask_set(arg0);
+    Scripting::render_mask_set(static_cast<int> (arg0));
   
     return 0;
   
@@ -1484,7 +1497,7 @@
   
 }
 
-static int spawn_object_wrapper(HSQUIRRELVM vm)
+static SQInteger spawn_object_wrapper(HSQUIRRELVM vm)
 {
   return Scripting::spawn_object(vm);
 }

Modified: trunk/tools/SConscript
===================================================================
--- trunk/tools/SConscript	2006-06-22 15:02:01 UTC (rev 1271)
+++ trunk/tools/SConscript	2006-06-22 15:15:05 UTC (rev 1272)
@@ -2,17 +2,21 @@
 
 import glob
 
-env = Environment(CPPPATH=['../..'])
+env = Environment(CPPPATH=['../..'],
+                  CXXFILESUFFIX = ".cpp",
+                  YACCFLAGS=['-d', '--no-lines'])
 miniswig = env.Program('miniswig/miniswig',
-                       ['miniswig/create_docu.cpp',
+                       ['miniswig/parser.yy',
+                        'miniswig/lexer.ll',
+                        'miniswig/create_docu.cpp',
                         'miniswig/xmlwriter.cpp',
                         'miniswig/create_wrapper.cpp',
                         'miniswig/main.cpp',
-                        'miniswig/tree.cpp',
-                        'miniswig/parser.yy',
-                        'miniswig/lexer.ll'], 
+                        'miniswig/tree.cpp'], 
                        CPPPATH=["..", "miniswig"])
 
+# bison -d --no-lines -o tools/miniswig/parser.cpp tools/miniswig/parser.yy
+
 Export('miniswig')
 
 # EOF #



