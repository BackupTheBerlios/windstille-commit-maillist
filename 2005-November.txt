From grumbel at berlios.de  Tue Nov  1 18:16:58 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 1 Nov 2005 18:16:58 +0100
Subject: [Windstille-commit] r1103 - in trunk/src: . scripting sprite3d
Message-ID: <200511011716.jA1HGwix023283@sheep.berlios.de>

Author: grumbel
Date: 2005-11-01 18:16:56 +0100 (Tue, 01 Nov 2005)
New Revision: 1103

Added:
   trunk/src/sprite3dview.cpp
   trunk/src/sprite3dview.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/globals.cpp
   trunk/src/globals.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/sprite3d/data.hpp
   trunk/src/sprite3d/sprite3d.cpp
   trunk/src/sprite3d/sprite3d.hpp
   trunk/src/windstille_main.cpp
Log:
- added a simple viewer for 3d sprites

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/Jamfile	2005-11-01 17:16:56 UTC (rev 1103)
@@ -96,6 +96,8 @@
         sector.hpp
         spawnpoint.cpp
         spawnpoint.hpp
+        sprite3dview.hpp
+        sprite3dview.cpp
         sharedptr.hpp
         test_object.cpp
         test_object.hpp

Modified: trunk/src/globals.cpp
===================================================================
--- trunk/src/globals.cpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/globals.cpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -31,6 +31,7 @@
 bool debug = false;
 #endif
 bool collision_debug = false;
-bool sound_disabled = false;
+bool sound_disabled  = false;
+bool sprite3dview    = false;
 
 /* EOF */

Modified: trunk/src/globals.hpp
===================================================================
--- trunk/src/globals.hpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/globals.hpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -36,6 +36,7 @@
 
 extern bool debug;
 extern bool collision_debug;
+extern bool sprite3dview;
 
 enum GameMainState { RUN_GAME, LOAD_MENU, LOAD_GAME_SESSION, QUIT_GAME };
 

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/scripting/wrapper.cpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/scripting/wrapper.hpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/sprite3d/data.hpp
===================================================================
--- trunk/src/sprite3d/data.hpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/sprite3d/data.hpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -15,6 +15,7 @@
 //  You should have received a copy of the GNU General Public License
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
 #ifndef HEADER_SPRITE3D_DATA_HPP
 #define HEADER_SPRITE3D_DATA_HPP
 

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -87,6 +87,17 @@
   return frame2.action->name;
 }
 
+std::vector<std::string>
+Sprite3D::get_actions() const
+{
+  std::vector<std::string> actions;
+  for(int i = 0; i < data->action_count; ++i)
+    {
+      actions.push_back(data->actions[i].name);
+    }
+  return actions;
+}
+
 void
 Sprite3D::set_next_action(const std::string& name, float speed)
 {

Modified: trunk/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/src/sprite3d/sprite3d.hpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/sprite3d/sprite3d.hpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -66,6 +66,11 @@
    */
   const std::string& get_action() const;
 
+  /** 
+   * Return a list of all available actions
+   */
+  std::vector<std::string> get_actions() const;
+
   /**
    * Set the next action and vflip value to be played after the current action
    * has finished (or reached the point to be defined by abort_at_marker)

Added: trunk/src/sprite3dview.cpp
===================================================================
--- trunk/src/sprite3dview.cpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/sprite3dview.cpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -0,0 +1,93 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <iostream>
+#include "gameconfig.hpp"
+#include "input/controller.hpp"
+#include "sprite3dview.hpp"
+
+Sprite3DView::Sprite3DView()
+{
+  current_action = 0;
+  //sprite = Sprite3D("models/characters/bob/bob.wsprite");
+  sprite = Sprite3D("models/characters/jane/jane.wsprite");
+  actions = sprite.get_actions();
+
+  for(std::vector<std::string>::iterator i = actions.begin(); i != actions.end(); ++i)
+    {
+      std::cout << "Action: " << *i << std::endl;
+    }
+  
+  sprite.set_action(actions[current_action]);
+}
+
+Sprite3DView::~Sprite3DView()
+{
+}
+
+void
+Sprite3DView::draw()
+{
+  sc.reset_modelview();
+  sc.translate(-config->screen_width/2, -config->screen_height/2 + 150);
+  sc.scale(2.0f, 2.0f);
+  
+  sc.color().fill_screen(Color(0.5, 0.0, 0.5));
+  sprite.draw(sc.color(), Vector(config->screen_width/2, config->screen_height/2), 0); 
+  sc.light().fill_screen(Color(1.0, 1.0, 1.0));
+  //sc.color().draw("Hello World", 100, 100);
+  sc.render();
+}
+
+void
+Sprite3DView::update(float delta, const Controller& controller)
+{
+  sprite.update(delta);
+  //std::cout << "Delta: " << delta << std::endl;
+
+  int last_action = current_action;
+  if (controller.axis_was_pressed_up(Y_AXIS))
+    {
+      if (current_action == int(actions.size())-1)
+        current_action = 0;
+      else
+        current_action += 1;
+    }
+  else if (controller.axis_was_pressed_down(Y_AXIS))
+    {
+      if (current_action == 0)
+        current_action = actions.size()-1;
+      else
+        current_action -= 1;
+    }
+
+  if (last_action != current_action)
+    {
+      std::cout << "Setting actions: " << actions[current_action] << std::endl;
+      sprite.set_action(actions[current_action]);
+    }
+}
+
+/* EOF */

Added: trunk/src/sprite3dview.hpp
===================================================================
--- trunk/src/sprite3dview.hpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/sprite3dview.hpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -0,0 +1,56 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_SPRITE3DVIEW_HPP
+#define HEADER_SPRITE3DVIEW_HPP
+
+#include "display/scene_context.hpp"
+#include "sprite3d/sprite3d.hpp"
+#include "screen.hpp"
+
+/** */
+class Sprite3DView : public Screen
+{
+private:
+  SceneContext sc;
+  Sprite3D sprite;
+  std::vector<std::string> actions;
+  int current_action;
+
+public:
+  Sprite3DView();
+  ~Sprite3DView();
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+private:
+  Sprite3DView (const Sprite3DView&);
+  Sprite3DView& operator= (const Sprite3DView&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-09-28 22:01:03 UTC (rev 1102)
+++ trunk/src/windstille_main.cpp	2005-11-01 17:16:56 UTC (rev 1103)
@@ -47,6 +47,7 @@
 #include "sprite3d/manager.hpp"
 #include "screen_manager.hpp"
 #include "command_line.hpp"
+#include "sprite3dview.hpp"
 #include "sprite2d/manager.hpp"
 
 WindstilleMain::WindstilleMain()
@@ -63,11 +64,15 @@
   CommandLine argp;
 
   const int debug_flag = 256;
+  const int sprite3dview_flag = 257;
     
   argp.set_help_indent(24);
   argp.add_usage ("[LEVELFILE]");
   argp.add_doc   ("Windstille is a classic Jump'n Run game.");
 
+  argp.add_group("Mode Options:");
+  argp.add_option(sprite3dview_flag, "sprite3dview", "", "Launch Sprite3DView instead of the game");
+
   argp.add_group("Display Options:");
   argp.add_option('g', "geometry",   "WxH", "Change window size to WIDTH and HEIGHT");
   argp.add_option('f', "fullscreen", "", "Launch the game in fullscreen");
@@ -124,6 +129,10 @@
           debug = 1;
           break;
 
+        case sprite3dview_flag:
+          sprite3dview = true;
+          break;
+
         case 'f':
           config->use_fullscreen = true;
           break;
@@ -208,15 +217,23 @@
     if (debug) std::cout << "Initialising TileFactory" << std::endl;
     TileFactory::init();
 
-    if (levelfile.empty())
+    if (sprite3dview)
       {
-        screen_manager.set_screen(new GameSession("levels/newformat2.wst"));
+        // Launching Sprite3DView instead of game
+        screen_manager.set_screen(new Sprite3DView());
       }
     else
       {
-        std::string leveldir = dirname(levelfile);
-        PHYSFS_addToSearchPath(leveldir.c_str(), true);
-        screen_manager.set_screen(new GameSession(basename(levelfile)));
+        if (levelfile.empty())
+          {
+            screen_manager.set_screen(new GameSession("levels/newformat2.wst"));
+          }
+        else
+          {
+            std::string leveldir = dirname(levelfile);
+            PHYSFS_addToSearchPath(leveldir.c_str(), true);
+            screen_manager.set_screen(new GameSession(basename(levelfile)));
+          }
       }
         
     console << "Press F1 to open the console" << std::endl;



From grumbel at berlios.de  Tue Nov  1 21:17:23 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 1 Nov 2005 21:17:23 +0100
Subject: [Windstille-commit] r1104 - trunk/data/images
Message-ID: <200511012017.jA1KHNr7002010@sheep.berlios.de>

Author: grumbel
Date: 2005-11-01 21:17:23 +0100 (Tue, 01 Nov 2005)
New Revision: 1104

Removed:
   trunk/data/images/diamond/
Log:
- removed useless diamonds



From grumbel at berlios.de  Tue Nov  1 21:23:26 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 1 Nov 2005 21:23:26 +0100
Subject: [Windstille-commit] r1105 - trunk/data/images
Message-ID: <200511012023.jA1KNQ6A002375@sheep.berlios.de>

Author: grumbel
Date: 2005-11-01 21:21:11 +0100 (Tue, 01 Nov 2005)
New Revision: 1105

Added:
   trunk/data/images/minesketch.xcf
   trunk/data/images/windstillelevel.xcf
Log:
two new sketches

Added: trunk/data/images/minesketch.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/minesketch.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/windstillelevel.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/windstillelevel.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Wed Nov  2 18:39:52 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 2 Nov 2005 18:39:52 +0100
Subject: [Windstille-commit] r1106 - trunk/data/models/characters/jane
Message-ID: <200511021739.jA2Hdq9c030566@sheep.berlios.de>

Author: grumbel
Date: 2005-11-02 18:38:52 +0100 (Wed, 02 Nov 2005)
New Revision: 1106

Added:
   trunk/data/models/characters/jane/suit2-texture.png
   trunk/data/models/characters/jane/texture1.png
Log:
- copied textures

Copied: trunk/data/models/characters/jane/suit2-texture.png (from rev 1097, trunk/data/3dsprites/suit2-texture.png)

Copied: trunk/data/models/characters/jane/texture1.png (from rev 1097, trunk/data/3dsprites/texture1.png)



From grumbel at berlios.de  Wed Nov  2 18:41:40 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 2 Nov 2005 18:41:40 +0100
Subject: [Windstille-commit] r1107 - in trunk/src: . display font math
Message-ID: <200511021741.jA2HferQ030987@sheep.berlios.de>

Author: grumbel
Date: 2005-11-02 18:40:26 +0100 (Wed, 02 Nov 2005)
New Revision: 1107

Modified:
   trunk/src/display/scene_context.cpp
   trunk/src/display/scene_context.hpp
   trunk/src/font/fonts.cpp
   trunk/src/font/fonts.hpp
   trunk/src/math/matrix.cpp
   trunk/src/math/matrix.hpp
   trunk/src/sprite3dview.cpp
   trunk/src/sprite3dview.hpp
Log:
- some improvements to the 3dviewer

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/display/scene_context.cpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -86,11 +86,11 @@
 
 /** Set the rotation of the drawing context */
 void
-SceneContext::rotate(float angel)
+SceneContext::rotate(float angel, float x, float y, float z)
 {
-  impl->color.rotate(angel);
-  impl->light.rotate(angel);
-  impl->highlight.rotate(angel);
+  impl->color.rotate(angel, x, y, z);
+  impl->light.rotate(angel, x, y, z);
+  impl->highlight.rotate(angel, x, y, z);
 }
 
 /** Set the scaling of the drawing context */

Modified: trunk/src/display/scene_context.hpp
===================================================================
--- trunk/src/display/scene_context.hpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/display/scene_context.hpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -58,7 +58,7 @@
   void translate(float x, float y);
 
   /** Set the rotation of the drawing context */
-  void rotate(float angel);
+  void rotate(float angel, float x = 0.0f, float y = 0.0f, float z = 1.0f);
 
   /** Set the scaling of the drawing context */
   void scale(float x, float y);

Modified: trunk/src/font/fonts.cpp
===================================================================
--- trunk/src/font/fonts.cpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/font/fonts.cpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -21,8 +21,8 @@
 #include "border_font_effect.hpp"
 #include "fonts.hpp"
 
-TTFFont* Fonts::ttffont = 0;
-
+TTFFont* Fonts::ttffont   = 0;
+TTFFont* Fonts::vera12    = 0;
 TTFFont* Fonts::ttfdialog = 0;
 
 void
@@ -31,6 +31,7 @@
   BorderFontEffect* border_effect = new BorderFontEffect(1);
 
   ttffont   = new TTFFont("fonts/VeraMono.ttf", 12);
+  vera12      = new TTFFont("fonts/Vera.ttf", 12);
   ttfdialog = new TTFFont("fonts/Vera.ttf", 20);
 
   delete border_effect;
@@ -40,6 +41,7 @@
 Fonts::deinit()
 {
   delete ttffont;
+  delete vera12;
   delete ttfdialog;
 }
 

Modified: trunk/src/font/fonts.hpp
===================================================================
--- trunk/src/font/fonts.hpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/font/fonts.hpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -25,7 +25,7 @@
 namespace Fonts {
 
 extern TTFFont* ttffont;
-
+extern TTFFont* vera12;
 extern TTFFont* ttfdialog;
 
 void init();

Modified: trunk/src/math/matrix.cpp
===================================================================
--- trunk/src/math/matrix.cpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/math/matrix.cpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -123,6 +123,57 @@
 	return result;
 }
 
+Matrix
+Matrix::scale(float x, float y, float z)
+{
+  Matrix matrix = Matrix::identity();
+  matrix[0]  = x;
+  matrix[5]  = y;
+  matrix[10] = z;
+  return multiply(matrix);
+}
+
+Matrix
+Matrix::translate(float x, float y, float z)
+{
+  Matrix matrix = Matrix::identity();
+  matrix[12] = x;
+  matrix[13] = y;
+  matrix[14] = z;
+  return multiply(matrix);
+}
+
+Matrix
+Matrix::rotate(float angle, float x, float y, float z)
+{
+  double len2 = x*x+y*y+z*z;
+  if (len2 != 1.0)
+    {
+      double len = sqrt(len2);
+      x /= len;
+      y /= len;
+      z /= len;
+    }
+
+  double c = cos(angle*3.14159265/180);
+  double s = sin(angle*3.14159265/180);
+
+  Matrix matrix = Matrix::identity();
+  matrix[0]  = x*x*(1-c)+c;
+  matrix[1]  = y*x*(1-c)+z*s;
+  matrix[2]  = x*z*(1-c)-y*s;
+
+  matrix[4]  = x*y*(1-c)-z*s;
+  matrix[5]  = y*y*(1-c)+c;
+  matrix[6]  = y*z*(1-c)+x*s;
+
+  matrix[8]  = x*z*(1-c)+y*s;
+  matrix[9]  = y*z*(1-c)-x*s;
+  matrix[10] = z*z*(1-c)+c;
+
+  return multiply(matrix);
+}
+
 std::ostream& operator<<(std::ostream& s, const Matrix& m)
 {
   s << "[" << m[ 0] << ", " << m[ 4] << ", " << m[ 8] << ", " << m[12] << "\n";

Modified: trunk/src/math/matrix.hpp
===================================================================
--- trunk/src/math/matrix.hpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/math/matrix.hpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -86,6 +86,11 @@
 	//: Multiply two matrices.
 	Matrix multiply(const Matrix &matrix) const;
 
+	//: Multiply the matrix with the given scale/translate/rotate matrix
+	Matrix scale(float x, float y, float z);
+	Matrix translate(float x, float y, float z);
+	Matrix rotate(float angle, float x, float y, float z);
+
 //! Implementation:
 private:
 };

Modified: trunk/src/sprite3dview.cpp
===================================================================
--- trunk/src/sprite3dview.cpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/sprite3dview.cpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -26,6 +26,9 @@
 #include <iostream>
 #include "gameconfig.hpp"
 #include "input/controller.hpp"
+#include "console.hpp"
+#include "font/ttf_font.hpp"
+#include "font/fonts.hpp"
 #include "sprite3dview.hpp"
 
 Sprite3DView::Sprite3DView()
@@ -35,12 +38,11 @@
   sprite = Sprite3D("models/characters/jane/jane.wsprite");
   actions = sprite.get_actions();
 
-  for(std::vector<std::string>::iterator i = actions.begin(); i != actions.end(); ++i)
-    {
-      std::cout << "Action: " << *i << std::endl;
-    }
-  
   sprite.set_action(actions[current_action]);
+
+  rotx  = 0.0f;
+  roty  = 0.0f;
+  scale = 1.0f;
 }
 
 Sprite3DView::~Sprite3DView()
@@ -51,14 +53,47 @@
 Sprite3DView::draw()
 {
   sc.reset_modelview();
-  sc.translate(-config->screen_width/2, -config->screen_height/2 + 150);
-  sc.scale(2.0f, 2.0f);
+  //sc.translate(-config->screen_width/2, -config->screen_height/2 + 150);
+  //sc.scale(2.0f, 2.0f);
   
   sc.color().fill_screen(Color(0.5, 0.0, 0.5));
-  sprite.draw(sc.color(), Vector(config->screen_width/2, config->screen_height/2), 0); 
+
+  sc.push_modelview();
+  sc.translate(config->screen_width/2, config->screen_height/2 + 200);
+  sc.scale(3.0f, 3.0f);
+  sc.rotate(rotx, 0.0f, 1.0f, 0.0f);
+  sprite.draw(sc.color(), Vector(0,0), 0); 
+  sc.pop_modelview();
+
+  //Matrix matrix = sc.color().get_modelview();
+  //matrix.translate(-config->screen_width/2, -config->screen_height/2, 0);
+  //sprite.draw(sc.color(), matrix, 0.0f);
+
   sc.light().fill_screen(Color(1.0, 1.0, 1.0));
   //sc.color().draw("Hello World", 100, 100);
   sc.render();
+  
+  int x = 10;
+  int y =  Fonts::vera12->get_height() + 5;
+  int line_height = Fonts::vera12->get_height()+5;
+
+  for(int i = 0; i < int(actions.size()); ++i)
+    {
+      if (i == current_action)
+        Fonts::vera12->draw(x, y,
+                               actions[i], Color(1.0f, 1.0f, 1.0f));
+      else
+        Fonts::vera12->draw(x, y,
+                               actions[i], Color(0.7f, 0.7f, 0.7f));
+
+
+      y += line_height;
+      if (y > 580)
+        {
+          x += 200;
+          y =  Fonts::vera12->get_height() + 5;
+        }
+    }
 }
 
 void
@@ -85,9 +120,11 @@
 
   if (last_action != current_action)
     {
-      std::cout << "Setting actions: " << actions[current_action] << std::endl;
       sprite.set_action(actions[current_action]);
     }
+
+  roty += delta * 30.0f;
+  rotx += delta * 30.0f;
 }
 
 /* EOF */

Modified: trunk/src/sprite3dview.hpp
===================================================================
--- trunk/src/sprite3dview.hpp	2005-11-02 17:38:52 UTC (rev 1106)
+++ trunk/src/sprite3dview.hpp	2005-11-02 17:40:26 UTC (rev 1107)
@@ -30,7 +30,8 @@
 #include "sprite3d/sprite3d.hpp"
 #include "screen.hpp"
 
-/** */
+/** A simple class to view 3d sprites and their different actions,
+    mostly usefull for debugging */
 class Sprite3DView : public Screen
 {
 private:
@@ -39,6 +40,10 @@
   std::vector<std::string> actions;
   int current_action;
 
+  float rotx;
+  float roty;
+  float scale;
+
 public:
   Sprite3DView();
   ~Sprite3DView();



From grumbel at berlios.de  Thu Nov  3 21:47:12 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 3 Nov 2005 21:47:12 +0100
Subject: [Windstille-commit] r1108 - in trunk/src: . math
Message-ID: <200511032047.jA3KlCdB018885@sheep.berlios.de>

Author: grumbel
Date: 2005-11-03 21:47:10 +0100 (Thu, 03 Nov 2005)
New Revision: 1108

Added:
   trunk/src/background_gradient.cpp
   trunk/src/background_gradient.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/math/matrix.cpp
   trunk/src/sector.cpp
Log:
- added support for gimp-style gradients

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-11-02 17:40:26 UTC (rev 1107)
+++ trunk/src/Jamfile	2005-11-03 20:47:10 UTC (rev 1108)
@@ -22,6 +22,8 @@
 sources = 
         baby_xml.cpp
         baby_xml.hpp
+        background_gradient.cpp
+        background_gradient.hpp
         blitter.cpp
         blitter.hpp        
         bomb.cpp

Added: trunk/src/background_gradient.cpp
===================================================================
--- trunk/src/background_gradient.cpp	2005-11-02 17:40:26 UTC (rev 1107)
+++ trunk/src/background_gradient.cpp	2005-11-03 20:47:10 UTC (rev 1108)
@@ -0,0 +1,117 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "lisp/properties.hpp"
+#include "display/vertex_array_drawing_request.hpp"
+#include "background_gradient.hpp"
+
+BackgroundGradient::BackgroundGradient(const lisp::Lisp* lisp)
+{
+  lisp::Properties props(lisp);
+  props.get("colors", colors);
+  if (colors.size() % (3 + 4 + 4 + 2) != 0)
+    {
+      std::cout << "BackgroundGradient: specified color gradient is invalid" << std::endl;
+      /** Color gradients are in the format:
+          
+      (colors start midpoint end R1 G1 B1 A1 R2 G2 B2 A2 I I
+              start midpoint end R1 G1 B1 A1 R2 G2 B2 A2 I I
+              ...)
+
+              I is ignored
+
+          all specified in float, this is similar to Gimps gradients
+          so you can easily copy&paste
+       */
+      colors.clear();
+    }
+}
+
+BackgroundGradient::~BackgroundGradient()
+{  
+}
+  
+void
+BackgroundGradient::update(float delta)
+{
+}
+
+void
+BackgroundGradient::draw(SceneContext& sc)
+{
+  if (colors.empty())
+    return ;
+
+  // Reset modelview so we can draw in screen space
+  sc.color().push_modelview();
+  sc.color().set_modelview(Matrix::identity());
+  
+  Color topcolor(0.0f, 0.0f, 0.5f);
+  Color bottomcolor(0.5f, 0.5f, 1.0f);
+
+  Rect rect(0, 0, 800, 600);
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), 0, 
+                                                                   sc.color().get_modelview());
+
+  array->set_mode(GL_QUAD_STRIP);
+  array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+
+  for(int i = 0; i < int(colors.size()); i += (3 + 4 + 4 + 2))
+    {
+      float& start    = colors[i + 0];
+      float& midpoint = colors[i + 1];
+      float& end      = colors[i + 2];
+      Color color1(colors[i + 3], colors[i + 4], colors[i + 5], colors[i + 6]);
+      Color color2(colors[i + 7], colors[i + 8], colors[i + 9], colors[i + 10]);
+      Color midcolor((color1.r + color2.r)/2,
+                     (color1.g + color2.g)/2,
+                     (color1.b + color2.b)/2,
+                     (color1.a + color2.a)/2);
+
+      array->color(color1);
+      array->vertex(rect.left, rect.top + start*rect.get_height());
+
+      array->color(color1);
+      array->vertex(rect.right, rect.top + start*rect.get_height());
+
+      array->color(midcolor);
+      array->vertex(rect.left, rect.top + midpoint*rect.get_height());
+
+      array->color(midcolor);
+      array->vertex(rect.right, rect.top + midpoint*rect.get_height());
+
+      array->color(color2);
+      array->vertex(rect.left, rect.top + end*rect.get_height());
+
+      array->color(color2);
+      array->vertex(rect.right, rect.top + end*rect.get_height());  
+    }
+
+  sc.color().draw(array);  
+
+  sc.color().pop_modelview();
+}
+
+/* EOF */

Added: trunk/src/background_gradient.hpp
===================================================================
--- trunk/src/background_gradient.hpp	2005-11-02 17:40:26 UTC (rev 1107)
+++ trunk/src/background_gradient.hpp	2005-11-03 20:47:10 UTC (rev 1108)
@@ -0,0 +1,52 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_BACKGROUND_GRADIENT_HPP
+#define HEADER_BACKGROUND_GRADIENT_HPP
+
+#include "lisp/lisp.hpp"
+#include "game_object.hpp"
+
+/** */
+class BackgroundGradient : public GameObject
+{
+private:
+  std::vector<float> colors;
+
+public:
+  BackgroundGradient(const lisp::Lisp* lisp);
+  ~BackgroundGradient();
+  
+  void update (float delta);
+  void draw (SceneContext& gc);
+    
+private:
+  BackgroundGradient (const BackgroundGradient&);
+  BackgroundGradient& operator= (const BackgroundGradient&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/math/matrix.cpp
===================================================================
--- trunk/src/math/matrix.cpp	2005-11-02 17:40:26 UTC (rev 1107)
+++ trunk/src/math/matrix.cpp	2005-11-03 20:47:10 UTC (rev 1108)
@@ -29,6 +29,7 @@
 
 #include <string.h>
 #include <iostream>
+#include <math.h>
 #include "matrix.hpp"
 
 /////////////////////////////////////////////////////////////////////////////

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-11-02 17:40:26 UTC (rev 1107)
+++ trunk/src/sector.cpp	2005-11-03 20:47:10 UTC (rev 1108)
@@ -26,6 +26,7 @@
 #include "windstille_getters.hpp"
 #include "globals.hpp"
 #include "display/scene_context.hpp"
+#include "background_gradient.hpp"
 #include "tile_map.hpp"
 #include "game_object.hpp"
 #include "player.hpp"
@@ -160,6 +161,8 @@
       interactivebackground_tilemap = tilemap;
   } else if(name == "background") {
     // TODO
+  } else if (name == "background-gradient") {
+    add(new BackgroundGradient(lisp));
   } else if(name == "trigger") {
     add(new Trigger(lisp));
   } else if(name == "box") {



From grumbel at berlios.de  Thu Nov  3 21:53:28 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 3 Nov 2005 21:53:28 +0100
Subject: [Windstille-commit] r1109 - trunk/src
Message-ID: <200511032053.jA3KrSjo019410@sheep.berlios.de>

Author: grumbel
Date: 2005-11-03 21:53:27 +0100 (Thu, 03 Nov 2005)
New Revision: 1109

Modified:
   trunk/src/background_gradient.cpp
   trunk/src/background_gradient.hpp
Log:
- added z_pos handling

Modified: trunk/src/background_gradient.cpp
===================================================================
--- trunk/src/background_gradient.cpp	2005-11-03 20:47:10 UTC (rev 1108)
+++ trunk/src/background_gradient.cpp	2005-11-03 20:53:27 UTC (rev 1109)
@@ -29,7 +29,10 @@
 
 BackgroundGradient::BackgroundGradient(const lisp::Lisp* lisp)
 {
+  z_pos = 0.0;
+
   lisp::Properties props(lisp);
+  props.get("z-pos",  z_pos);
   props.get("colors", colors);
   if (colors.size() % (3 + 4 + 4 + 2) != 0)
     {
@@ -72,7 +75,7 @@
   Color bottomcolor(0.5f, 0.5f, 1.0f);
 
   Rect rect(0, 0, 800, 600);
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), 0, 
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), z_pos, 
                                                                    sc.color().get_modelview());
 
   array->set_mode(GL_QUAD_STRIP);

Modified: trunk/src/background_gradient.hpp
===================================================================
--- trunk/src/background_gradient.hpp	2005-11-03 20:47:10 UTC (rev 1108)
+++ trunk/src/background_gradient.hpp	2005-11-03 20:53:27 UTC (rev 1109)
@@ -34,7 +34,7 @@
 {
 private:
   std::vector<float> colors;
-
+  float z_pos; 
 public:
   BackgroundGradient(const lisp::Lisp* lisp);
   ~BackgroundGradient();



From grumbel at berlios.de  Thu Nov  3 23:16:20 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 3 Nov 2005 23:16:20 +0100
Subject: [Windstille-commit] r1110 - in trunk/data: images/particles levels
Message-ID: <200511032216.jA3MGK3n026534@sheep.berlios.de>

Author: grumbel
Date: 2005-11-03 23:16:19 +0100 (Thu, 03 Nov 2005)
New Revision: 1110

Added:
   trunk/data/images/particles/snow.png
   trunk/data/images/particles/snow.xcf
   trunk/data/images/particles/snow2.png
Modified:
   trunk/data/levels/industrial.wst
Log:
- added some snow

Added: trunk/data/images/particles/snow.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/particles/snow.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/particles/snow.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/particles/snow.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/particles/snow2.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/particles/snow2.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/data/levels/industrial.wst
===================================================================
--- trunk/data/levels/industrial.wst	2005-11-03 20:53:27 UTC (rev 1109)
+++ trunk/data/levels/industrial.wst	2005-11-03 22:16:19 UTC (rev 1110)
@@ -44,7 +44,22 @@
      (distribution (point-distribution))
      )
 
+    (particle-system
+     (lifetime   8.0)
+     (count      70)
 
+     (z-pos  1000)
+     (pos 0 136)
+     (velocity 80 150)
+     (cone    85 95)
+     (gravity 0.0 0.0)
+     (size   0.9 1.0)
+     (drawer (surface-drawer (image "images/particles/snow2.png")))
+     (color-begin 1.0 1.0 1.0 1.0)
+     (color-end 1.0 1.0 1.0 1.0)
+     (distribution (line-distribution (x1 0) (y1 0) (x2 1024) (y2 0)))
+     )
+
     (scriptable-object
       (name "Lamp")
       (pos 256 736)
@@ -59,6 +74,20 @@
       (pos 768 736)
     )
  
+ (background-gradient
+        (name "BackgroundGradient")
+(z-pos -100)
+(colors 
+0.000000 0.101798 0.203595 1.000000 1.000000 1.000000 1.000000 0.948165 0.969697 0.812122 1.000000 0 0
+0.203595 0.379143 0.487479 0.948165 0.969697 0.812122 1.000000 1.000000 0.552632 0.270000 1.000000 0 0
+0.487479 0.503577 0.529137 1.000000 0.552632 0.270000 1.000000 0.581721 0.096155 0.170043 1.000000 0 0
+0.529137 0.545165 0.562604 0.581721 0.096155 0.170043 1.000000 0.287879 0.155229 0.049835 1.000000 0 0
+0.562604 0.609349 0.697830 0.287879 0.155229 0.049835 1.000000 0.336000 0.425966 0.800000 1.000000 0 0
+0.697830 0.845064 1.000000 0.336000 0.425966 0.800000 1.000000 0.852165 0.985930 1.000000 1.000000 0 0
+
+
+)
+        )
     (scriptable-object
       (name "Lamp")
       (pos 768 736)



From grumbel at berlios.de  Fri Nov  4 12:56:11 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 4 Nov 2005 12:56:11 +0100
Subject: [Windstille-commit] r1111 - trunk/src/gui
Message-ID: <200511041156.jA4BuBQw006147@sheep.berlios.de>

Author: grumbel
Date: 2005-11-04 12:56:07 +0100 (Fri, 04 Nov 2005)
New Revision: 1111

Added:
   trunk/src/gui/syntax.txt
Log:
- little pseudo code syntax example for s-expr gui

Added: trunk/src/gui/syntax.txt
===================================================================
--- trunk/src/gui/syntax.txt	2005-11-03 22:16:19 UTC (rev 1110)
+++ trunk/src/gui/syntax.txt	2005-11-04 11:56:07 UTC (rev 1111)
@@ -0,0 +1,41 @@
+;; -*- scheme -*-
+
+(gui
+ (tab
+  (rect x y w h)
+  (components 
+   (pack
+    (label "MAP")
+    (child (automap)))
+   (pack
+    (label "Hello World")
+    (component (automap)))
+   ))
+ )
+
+(gui
+ (grid 
+  (rect x y w h)
+  (width  100)
+  (height 100)
+  (components
+   (pack (x 5) (y 10)
+         (colspan 5)
+         (rowspan 1)
+         (component
+          (button (label "Hello World"))))
+
+   (pack (x 0) (y 0)
+         (colspan 1)
+         (rowspan 5)
+         (component
+          (list-view 
+           (columns (column (width 50) (label "Hello World"))
+                    (column (width 10) (label "Foo bar"))
+                    )
+           )
+          ))
+   )
+  ))
+
+;; EOF ;;



From grumbel at berlios.de  Fri Nov  4 15:21:14 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 4 Nov 2005 15:21:14 +0100
Subject: [Windstille-commit] r1112 - trunk/src/gui
Message-ID: <200511041421.jA4ELEmJ024815@sheep.berlios.de>

Author: grumbel
Date: 2005-11-04 15:21:05 +0100 (Fri, 04 Nov 2005)
New Revision: 1112

Added:
   trunk/src/gui/component_factory.cpp
   trunk/src/gui/component_factory.hpp
Modified:
   trunk/src/gui/Jamfile
   trunk/src/gui/automap.cpp
   trunk/src/gui/automap.hpp
   trunk/src/gui/button.cpp
   trunk/src/gui/button.hpp
   trunk/src/gui/component.cpp
   trunk/src/gui/component.hpp
   trunk/src/gui/grid_component.cpp
   trunk/src/gui/grid_component.hpp
   trunk/src/gui/tab_component.cpp
   trunk/src/gui/tab_component.hpp
Log:
- added a bit of componentfactory framework

Modified: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/Jamfile	2005-11-04 14:21:05 UTC (rev 1112)
@@ -7,6 +7,8 @@
   button.cpp
   component.hpp
   component.cpp
+  component_factory.hpp
+  component_factory.cpp
   gui_manager.hpp
   gui_manager.cpp
   grid_component.hpp

Modified: trunk/src/gui/automap.cpp
===================================================================
--- trunk/src/gui/automap.cpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/automap.cpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -32,6 +32,12 @@
 
 namespace GUI {
 
+Automap::Automap(const lisp::Lisp* lisp, Component* parent)
+  : Component(parent)
+{
+  assert(0);
+}
+
 Automap::Automap(const Rectf& rect, Component* parent)
   : Component(rect, parent),
     pos(0.0f, 0.0f),

Modified: trunk/src/gui/automap.hpp
===================================================================
--- trunk/src/gui/automap.hpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/automap.hpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -40,6 +40,7 @@
   float   zoom;
 
 public:
+  Automap(const lisp::Lisp* lisp, Component* parent);
   Automap(const Rectf& rect, Component* parent);
   ~Automap();
 

Modified: trunk/src/gui/button.cpp
===================================================================
--- trunk/src/gui/button.cpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/button.cpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -30,6 +30,12 @@
 
 namespace GUI {
 
+Button::Button(const lisp::Lisp* lisp, Component* parent)
+  : Component(parent)
+{
+  assert(0);
+}
+
 Button::Button(const std::string& label_, Component* parent)
   : Component(Rectf(), parent),
     label(label_)

Modified: trunk/src/gui/button.hpp
===================================================================
--- trunk/src/gui/button.hpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/button.hpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -27,6 +27,7 @@
 #define HEADER_WINDSTILLE_GUI_BUTTON_HPP
 
 #include <string>
+#include "lisp/lisp.hpp"
 #include "component.hpp"
 
 namespace GUI {
@@ -38,6 +39,7 @@
   std::string label;
 
 public:
+  Button(const lisp::Lisp* lisp, Component* parent);
   Button(const std::string& lable, Component* parent);
   ~Button();
 

Modified: trunk/src/gui/component.cpp
===================================================================
--- trunk/src/gui/component.cpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/component.cpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -27,6 +27,12 @@
 
 namespace GUI {
 
+Component::Component(Component* parent)
+  : parent(parent),
+    active(false)
+{
+}
+
 Component::Component(const Rectf& rect_, Component* parent_)
   : rect(rect_),
     parent(parent_),

Modified: trunk/src/gui/component.hpp
===================================================================
--- trunk/src/gui/component.hpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/component.hpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -41,6 +41,7 @@
   bool active;
 
 public:
+  Component(Component* parent);
   Component(const Rectf& rect, Component* parent);
   virtual ~Component();
   

Added: trunk/src/gui/component_factory.cpp
===================================================================
--- trunk/src/gui/component_factory.cpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/component_factory.cpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -0,0 +1,70 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <stdexcept>
+#include "tab_component.hpp"
+#include "grid_component.hpp"
+#include "automap.hpp"
+#include "button.hpp"
+#include "component_factory.hpp"
+
+namespace GUI {
+
+ComponentFactory::ComponentFactory()
+{
+}
+
+ComponentFactory::~ComponentFactory()
+{
+}
+
+Component*
+ComponentFactory::create(const std::string& name, const lisp::Lisp* lisp, Component* parent)
+{
+  if (name == "tab")
+    {
+      return new TabComponent(lisp, parent);
+    }
+  else if (name == "automap")
+    {
+      return new Automap(lisp, parent);
+    }
+  else if (name == "grid")
+    {
+      return new GridComponent(lisp, parent);
+    }
+  else if (name == "button")
+    {
+      return new Button(lisp, parent);
+    }
+  else
+    {
+      throw std::runtime_error("Error: Unknown component");
+    }
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/component_factory.hpp
===================================================================
--- trunk/src/gui/component_factory.hpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/component_factory.hpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -0,0 +1,55 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_COMPONENT_FACTORY_HPP
+#define HEADER_COMPONENT_FACTORY_HPP
+
+#include <string>
+#include "lisp/lisp.hpp"
+
+namespace GUI {
+
+class Component;
+
+/** */
+class ComponentFactory
+{
+private:
+public:
+  ComponentFactory();
+  ~ComponentFactory();
+
+  Component* create(const std::string& name, const lisp::Lisp* lisp, Component* parent);
+  
+private:
+  ComponentFactory (const ComponentFactory&);
+  ComponentFactory& operator= (const ComponentFactory&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Modified: trunk/src/gui/grid_component.cpp
===================================================================
--- trunk/src/gui/grid_component.cpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/grid_component.cpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -30,6 +30,12 @@
 
 namespace GUI {
 
+GridComponent::GridComponent(const lisp::Lisp* lisp, Component* parent)
+  : Component(parent)
+{
+  assert(0);  
+}
+
 GridComponent::GridComponent(const Rectf& rect, int weight, int height, Component* parent)
   : Component(rect, parent),
     grid(weight, height),

Modified: trunk/src/gui/grid_component.hpp
===================================================================
--- trunk/src/gui/grid_component.hpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/grid_component.hpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -26,6 +26,7 @@
 #ifndef HEADER_WINDSTILLE_GUI_GRID_COMPONENT_HPP
 #define HEADER_WINDSTILLE_GUI_GRID_COMPONENT_HPP
 
+#include "lisp/lisp.hpp"
 #include "field.hpp"
 #include "component.hpp"
 
@@ -59,6 +60,7 @@
   bool child_active;
   
 public:
+  GridComponent(const lisp::Lisp* lisp, Component* parent);
   GridComponent(const Rectf& rect, int weight, int height, Component* parent);
   ~GridComponent();
   

Modified: trunk/src/gui/tab_component.cpp
===================================================================
--- trunk/src/gui/tab_component.cpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/tab_component.cpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -30,6 +30,12 @@
 
 namespace GUI {
 
+TabComponent::TabComponent(const lisp::Lisp* lisp, Component* parent)
+  : Component(parent)
+{
+  assert(0);
+}
+
 TabComponent::TabComponent(const Rectf& rect, Component* parent)
   : Component(rect, parent)
 {

Modified: trunk/src/gui/tab_component.hpp
===================================================================
--- trunk/src/gui/tab_component.hpp	2005-11-04 11:56:07 UTC (rev 1111)
+++ trunk/src/gui/tab_component.hpp	2005-11-04 14:21:05 UTC (rev 1112)
@@ -28,6 +28,7 @@
 
 #include <string>
 #include <vector>
+#include "lisp/lisp.hpp"
 #include "component.hpp"
 
 namespace GUI {
@@ -53,6 +54,7 @@
   int current_tab;
 
 public:
+  TabComponent(const lisp::Lisp* lisp, Component* parent);
   TabComponent(const Rectf& rect, Component* parent);
   ~TabComponent();
 



From grumbel at berlios.de  Fri Nov  4 15:22:40 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 4 Nov 2005 15:22:40 +0100
Subject: [Windstille-commit] r1113 - in trunk/src: display scripting
Message-ID: <200511041422.jA4EMe9L029027@sheep.berlios.de>

Author: grumbel
Date: 2005-11-04 15:22:09 +0100 (Fri, 04 Nov 2005)
New Revision: 1113

Modified:
   trunk/src/display/display.cpp
   trunk/src/display/display.hpp
   trunk/src/display/vertex_array_drawing_request.cpp
   trunk/src/display/vertex_array_drawing_request.hpp
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
- added gamma control

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/display/display.cpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -352,4 +352,13 @@
     }
 }
 
+void
+Display::set_gamma(float r, float g, float b)
+{
+  if (SDL_SetGamma(r, g, b) == -1)
+    {
+      // Couldn't set gamma
+    }
+}
+
 /* EOF */

Modified: trunk/src/display/display.hpp
===================================================================
--- trunk/src/display/display.hpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/display/display.hpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -57,6 +57,8 @@
   static void push_cliprect(const Rect& rect);
   static void pop_cliprect();
 
+  static void set_gamma(float r, float g, float b);
+
   static void init();
 };
 

Modified: trunk/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.cpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/display/vertex_array_drawing_request.cpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -113,6 +113,12 @@
 }
 
 void
+VertexArrayDrawingRequest::vertex(const Vector& vec, float z)
+{
+  vertex(vec.x, vec.y, z);
+}
+
+void
 VertexArrayDrawingRequest::vertex(float x, float y, float z)
 {
   vertices.push_back(x + pos.x);

Modified: trunk/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.hpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/display/vertex_array_drawing_request.hpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -47,6 +47,8 @@
   void draw(int start, int end);
 
   void vertex(float x, float y, float z = 0.0f);
+  void vertex(const Vector& vec, float z = 0.0f);
+
   void texcoord(float u, float v);
   void color(const Color& color);
   void add_texcoords(const float* coords, size_t n);

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/scripting/interface.cpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -11,6 +11,7 @@
 #include "serialize.hpp"
 #include "camera.hpp"
 #include "pda.hpp"
+#include "display/display.hpp"
 #include "controller_help_window.hpp"
 
 namespace Scripting
@@ -196,4 +197,14 @@
   }
 }
 
+void set_gamma(float g)
+{
+  Display::set_gamma(g, g, g);
 }
+
+void set_gamma_rgb(float r, float g, float b)
+{
+  Display::set_gamma(r, g, b);
+}
+
+}

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/scripting/interface.hpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -66,7 +66,8 @@
 int println(HSQUIRRELVM) __custom;
 
 void set_console_font(const std::string& font, int size);
-
+void set_gamma(float g);
+void set_gamma_rgb(float r, float g, float b);
 }
 
 #endif

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/scripting/wrapper.cpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>
@@ -516,6 +516,30 @@
   return 0;
 }
 
+static int set_gamma_wrapper(HSQUIRRELVM v)
+{
+  float arg0;
+  sq_getfloat(v, 2, &arg0);
+  
+  Scripting::set_gamma(arg0);
+  
+  return 0;
+}
+
+static int set_gamma_rgb_wrapper(HSQUIRRELVM v)
+{
+  float arg0;
+  sq_getfloat(v, 2, &arg0);
+  float arg1;
+  sq_getfloat(v, 3, &arg1);
+  float arg2;
+  sq_getfloat(v, 4, &arg2);
+  
+  Scripting::set_gamma_rgb(arg0, arg1, arg2);
+  
+  return 0;
+}
+
 static int spawn_object_wrapper(HSQUIRRELVM v)
 {
   return Scripting::spawn_object(v);
@@ -928,6 +952,22 @@
     throw SquirrelError(v, msg.str());
   }
 
+  sq_pushstring(v, "set_gamma", -1);
+  sq_newclosure(v, &set_gamma_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'set_gamma'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "set_gamma_rgb", -1);
+  sq_newclosure(v, &set_gamma_rgb_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'set_gamma_rgb'";
+    throw SquirrelError(v, msg.str());
+  }
+
   sq_pushstring(v, "spawn_object", -1);
   sq_newclosure(v, &spawn_object_wrapper, 0);
   if(SQ_FAILED(sq_createslot(v, -3))) {

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-11-04 14:21:05 UTC (rev 1112)
+++ trunk/src/scripting/wrapper.hpp	2005-11-04 14:22:09 UTC (rev 1113)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__



From grumbel at berlios.de  Sun Nov 13 04:54:29 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 13 Nov 2005 04:54:29 +0100
Subject: [Windstille-commit] r1115 - in trunk/src: collision math signals sound
Message-ID: <200511130354.jAD3sTGo024520@sheep.berlios.de>

Author: grumbel
Date: 2005-11-13 04:54:28 +0100 (Sun, 13 Nov 2005)
New Revision: 1115

Modified:
   trunk/src/collision/
   trunk/src/math/
   trunk/src/signals/
   trunk/src/sound/
Log:
- some ignore props


Property changes on: trunk/src/collision
___________________________________________________________________
Name: svn:ignore
   + .sconsign



Property changes on: trunk/src/math
___________________________________________________________________
Name: svn:ignore
   + .sconsign



Property changes on: trunk/src/signals
___________________________________________________________________
Name: svn:ignore
   + .sconsign



Property changes on: trunk/src/sound
___________________________________________________________________
Name: svn:ignore
   + .sconsign




From grumbel at berlios.de  Sun Nov 13 04:56:08 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 13 Nov 2005 04:56:08 +0100
Subject: [Windstille-commit] r1116 - trunk/src/squirrel
Message-ID: <200511130356.jAD3u8bk024728@sheep.berlios.de>

Author: grumbel
Date: 2005-11-13 04:56:04 +0100 (Sun, 13 Nov 2005)
New Revision: 1116

Modified:
   trunk/src/squirrel/SConstruct
Log:
- little build fix

Modified: trunk/src/squirrel/SConstruct
===================================================================
--- trunk/src/squirrel/SConstruct	2005-11-13 03:54:28 UTC (rev 1115)
+++ trunk/src/squirrel/SConstruct	2005-11-13 03:56:04 UTC (rev 1116)
@@ -1,6 +1,6 @@
 import glob
 
-env = Environment(CCFLAGS = ['-Iinclude'])
+env = Environment(CPPPATH = ['include'])
 
 env.Library('squirrel',
             glob.glob('squirrel/*.cpp') +



From grumbel at berlios.de  Mon Nov 14 18:08:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 14 Nov 2005 18:08:53 +0100
Subject: [Windstille-commit] r1117 - in trunk: . src src/scripting
Message-ID: <200511141708.jAEH8rTa014111@sheep.berlios.de>

Author: grumbel
Date: 2005-11-14 18:08:45 +0100 (Mon, 14 Nov 2005)
New Revision: 1117

Added:
   trunk/SConstruct
   trunk/src/SConscript
   trunk/src/scripting/SConscript
Log:
- some more work on sconscripts

Added: trunk/SConstruct
===================================================================
--- trunk/SConstruct	2005-11-13 03:56:04 UTC (rev 1116)
+++ trunk/SConstruct	2005-11-14 17:08:45 UTC (rev 1117)
@@ -0,0 +1,85 @@
+##  -*- python -*-
+##  $Id: windstille_main.hpp 1097 2005-09-23 16:01:59Z grumbel $
+##   __      __ __             ___        __   __ __   __
+##  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+##  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+##   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+##    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+##         \/          \/      \/    \/                         \/
+##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+##
+##  This program is free software; you can redistribute it and/or
+##  modify it under the terms of the GNU General Public License
+##  as published by the Free Software Foundation; either version 2
+##  of the License, or (at your option) any later version.
+##
+##  This program is distributed in the hope that it will be useful,
+##  but WITHOUT ANY WARRANTY; without even the implied warranty of
+##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+##  GNU General Public License for more details.
+## 
+##  You should have received a copy of the GNU General Public License
+##  along with this program; if not, write to the Free Software
+##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+##  02111-1307, USA.
+##
+
+import sys, os
+import sys, os
+sys.path.append('scons')
+
+def CheckSDL(context, version):
+    context.Message( 'Checking for SDL >= %s ...' % version )
+    (ret, outstring) = context.TryAction('sdl-config --version > $TARGET')
+    if ret:
+        outstring = outstring[0:-1]
+        if outstring != version:
+            context.Result( "failed, got '%s' instead" % outstring )
+            return 0
+        else:
+            context.Result( 1 )
+            return 1
+    else:
+        context.Result( ret )
+        return ret
+
+def CheckPhysFS(context, version):
+    context.Message( 'Checking for PhysFS >= %s ...' % version )
+    if context.TryCompile("""
+    #include <physfs.h>
+    int main()
+    {
+       return 0;
+    }
+    """, '.c'):
+        context.Result(1)
+        return 1
+    else:
+        context.Result(0)
+        return 0
+
+opts = Options(['options.cache', 'custom.py'])
+opts.Add('CXX', 'The C++ compiler')
+
+env = Environment(options=opts)
+
+# env.BuildDir('build2', '.')
+
+conf = Configure( env, custom_tests = { 'CheckSDL' : CheckSDL, 'CheckPhysFS' : CheckPhysFS } )
+
+if not conf.CheckSDL('1.2.8'):
+    print 'We really need SDL!'
+    Exit(1)
+
+if not conf.CheckPhysFS('1.0'):
+    print "libphysfs missing"
+    Exit(1)
+
+env = conf.Finish() 
+
+Export('env')
+SConscript('tools/miniswig/SConscript')
+SConscript('src/SConscript')
+SConscript('src/scripting/SConscript')
+
+# EOF #

Copied: trunk/src/SConscript (from rev 1114, trunk/src/SConstruct)
===================================================================
--- trunk/src/SConstruct	2005-11-13 03:53:21 UTC (rev 1114)
+++ trunk/src/SConscript	2005-11-14 17:08:45 UTC (rev 1117)
@@ -0,0 +1,172 @@
+##  -*- python -*-
+##  $Id: windstille_main.hpp 1097 2005-09-23 16:01:59Z grumbel $
+##   __      __ __             ___        __   __ __   __
+##  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+##  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+##   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+##    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+##         \/          \/      \/    \/                         \/
+##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+##
+##  This program is free software; you can redistribute it and/or
+##  modify it under the terms of the GNU General Public License
+##  as published by the Free Software Foundation; either version 2
+##  of the License, or (at your option) any later version.
+##
+##  This program is distributed in the hope that it will be useful,
+##  but WITHOUT ANY WARRANTY; without even the implied warranty of
+##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+##  GNU General Public License for more details.
+## 
+##  You should have received a copy of the GNU General Public License
+##  along with this program; if not, write to the Free Software
+##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+##  02111-1307, USA.
+##
+
+SConscript("squirrel/SConstruct")
+
+env = Environment(CC = 'gcc',
+                  CCFLAGS = ['-O2'])
+
+# env.Copy(LIBS = ['a', 'b'])
+
+env.foo = 5
+env.ParseConfig('sdl-config --cflags --libs')
+env.ParseConfig('freetype-config --libs --cflags')
+
+env.Program('windstille', [
+'baby_xml.cpp',
+'background_gradient.cpp',
+'blitter.cpp',
+'bomb.cpp',
+'box.cpp',
+'camera.cpp',
+'character.cpp',
+'command_line.cpp',
+'command_line_generic.cpp',
+'console.cpp',
+'controller_def.cpp',
+'controller_help_window.cpp',
+'conversation.cpp',
+'dialog_manager.cpp',
+'elevator.cpp',
+'energy_bar.cpp',
+'entity.cpp',
+'gameconfig.cpp',
+'game_object.cpp',
+'game_session.cpp',
+'globals.cpp',
+'graphic_context_state.cpp',
+'grenade.cpp',
+'inventory.cpp',
+'laser_pointer.cpp',
+'liquid.cpp',
+'nightvision.cpp',
+'pda.cpp',
+'physics.cpp',
+'pistol.cpp',
+'player.cpp',
+'random.cpp',
+'screen.cpp',
+'screen_manager.cpp',
+'scriptable_object.cpp',
+'script_manager.cpp',
+'sector.cpp',
+'spawnpoint.cpp',
+'sprite3dview.cpp',
+'test_object.cpp',
+'text_area.cpp',
+'tile.cpp',
+'tile_factory.cpp',
+'tile_map.cpp',
+'tile_packer.cpp',
+'timer.cpp',
+'trigger.cpp',
+'util.cpp',
+'view.cpp',
+'windstille_getters.cpp',
+'windstille_main.cpp',
+'badguy/badguy.cpp',
+'badguy/hedgehog.cpp',
+'badguy/spider_mine.cpp',
+'badguy/swarm.cpp',
+'badguy/vrdummy.cpp',
+'collision/collision_data.cpp',
+'collision/collision_engine.cpp',
+'collision/collision_object.cpp',
+'collision/collision_test.cpp',
+'collision/ladder_contact.cpp',
+'collision/stair_contact.cpp',
+'display/display.cpp',
+'display/drawing_context.cpp',
+'display/scene_context.cpp',
+'display/vertex_array_drawing_request.cpp',
+'font/border_font_effect.cpp',
+'font/fonts.cpp',
+'font/ttf_font.cpp',
+'glutil/opengl_state.cpp',
+'glutil/surface.cpp',
+'glutil/surface_manager.cpp',
+'glutil/texture.cpp',
+'glutil/texture_manager.cpp',
+'gui/automap.cpp',
+'gui/button.cpp',
+'gui/component.cpp',
+'gui/component_factory.cpp',
+'gui/grid_component.cpp',
+'gui/gui_manager.cpp',
+'gui/list_view.cpp',
+'gui/root_component.cpp',
+'gui/tab_component.cpp',
+'gui/text_view.cpp',
+'input/controller.cpp',
+'input/input_configurator.cpp',
+'input/input_manager.cpp',
+'input/input_manager_impl.cpp',
+'input/input_manager_player.cpp',
+'input/input_manager_sdl.cpp',
+'input/input_recorder.cpp',
+'lisp/getters.cpp',
+'lisp/lexer.cpp',
+'lisp/lisp.cpp',
+'lisp/parser.cpp',
+'lisp/properties.cpp',
+'lisp/writer.cpp',
+'math/matrix.cpp',
+'math/origin.cpp',
+'math/quaternion.cpp',
+'math/rect.cpp',
+'math/vector.cpp',
+'particles/particle_system.cpp',
+'particles/spark_drawer.cpp',
+'particles/surface_drawer.cpp',
+'physfs/physfs_sdl.cpp',
+'physfs/physfs_stream.cpp',
+'scripting/game_objects.cpp',
+'scripting/interface.cpp',
+'scripting/serialize.cpp',
+'scripting/spawn_object.cpp',
+'scripting/squirrel_error.cpp',
+'scripting/wrapper.cpp',
+'scripting/wrapper_util.cpp',
+'signals/slot.cpp',
+'signals/slot_generic.cpp',
+'sound/sound_file.cpp',
+'sound/sound_manager.cpp',
+'sound/sound_source.cpp',
+'sound/stream_sound_source.cpp',
+'sprite2d/data.cpp',
+'sprite2d/manager.cpp',
+'sprite2d/sprite.cpp',
+'sprite3d/data.cpp',
+'sprite3d/manager.cpp',
+'sprite3d/sprite3d.cpp',
+'tinygettext/gettext.cpp',
+'tinygettext/tinygettext.cpp'
+],
+LIBS    = ['GL', 'squirrel', 'physfs', 'SDL_image', 'openal'] + env['LIBS'],
+LIBPATH = ['squirrel/'],
+CPPPATH = env['CPPPATH'] + ['.', '..', 'squirrel/include/'])
+
+# EOF #

Added: trunk/src/scripting/SConscript
===================================================================
--- trunk/src/scripting/SConscript	2005-11-13 03:56:04 UTC (rev 1116)
+++ trunk/src/scripting/SConscript	2005-11-14 17:08:45 UTC (rev 1117)
@@ -0,0 +1,16 @@
+## -*- python -*-
+
+import SCons
+
+Import(['env', 'miniswig'])
+
+env = Environment(MINISWIG='tools/miniswig/miniswig')
+
+env.Command('miniswig.tmp', 'wrapper.interface.hpp',
+            ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"])
+
+env.Depends(env.Command(['wrapper.cpp', 'wrapper.hpp'], 'miniswig.tmp',
+                        ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),
+            miniswig)
+
+# EOF #



From grumbel at berlios.de  Thu Nov 17 02:16:42 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 17 Nov 2005 02:16:42 +0100
Subject: [Windstille-commit] r1118 - trunk/data/images/tiles
Message-ID: <200511170116.jAH1Gg1N022395@sheep.berlios.de>

Author: grumbel
Date: 2005-11-17 02:16:20 +0100 (Thu, 17 Nov 2005)
New Revision: 1118

Added:
   trunk/data/images/tiles/stonetextures.xcf
   trunk/data/images/tiles/woodblock.xcf
Log:
- some new graphics

Added: trunk/data/images/tiles/stonetextures.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/stonetextures.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/tiles/woodblock.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/woodblock.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Thu Nov 17 19:19:23 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Thu, 17 Nov 2005 19:19:23 +0100
Subject: [Windstille-commit] r1119 - trunk/data/images
Message-ID: <200511171819.jAHIJNuO021149@sheep.berlios.de>

Author: grumbel
Date: 2005-11-17 19:18:22 +0100 (Thu, 17 Nov 2005)
New Revision: 1119

Added:
   trunk/data/images/truck.xcf
Log:
- new graphic

Added: trunk/data/images/truck.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/truck.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Fri Nov 18 17:39:52 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Fri, 18 Nov 2005 17:39:52 +0100
Subject: [Windstille-commit] r1123 - trunk/data/images
Message-ID: <200511181639.jAIGdqqj032481@sheep.berlios.de>

Author: grumbel
Date: 2005-11-18 17:39:48 +0100 (Fri, 18 Nov 2005)
New Revision: 1123

Added:
   trunk/data/images/elevatorhead.xcf
   trunk/data/images/elevatorwheel.xcf
Log:
- more graphics

Added: trunk/data/images/elevatorhead.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/elevatorhead.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/elevatorwheel.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/elevatorwheel.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Sat Nov 19 23:12:35 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Sat, 19 Nov 2005 23:12:35 +0100
Subject: [Windstille-commit] r1124 - in trunk/data/models: . vehicles vehicles/troopshuttle
Message-ID: <200511192212.jAJMCZ3h011762@sheep.berlios.de>

Author: grumbel
Date: 2005-11-19 23:12:24 +0100 (Sat, 19 Nov 2005)
New Revision: 1124

Added:
   trunk/data/models/vehicles/
   trunk/data/models/vehicles/train/
   trunk/data/models/vehicles/troopshuttle/
   trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
Log:
- new models

Added: trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Sat Nov 19 23:38:55 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Sat, 19 Nov 2005 23:38:55 +0100
Subject: [Windstille-commit] r1125 - trunk/data/models/vehicles/troopshuttle
Message-ID: <200511192238.jAJMctjg013537@sheep.berlios.de>

Author: grumbel
Date: 2005-11-19 23:38:46 +0100 (Sat, 19 Nov 2005)
New Revision: 1125

Modified:
   trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
Log:
- uv mapping

Modified: trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Nov 20 00:09:07 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Sun, 20 Nov 2005 00:09:07 +0100
Subject: [Windstille-commit] r1126 - trunk/data/models/vehicles/troopshuttle
Message-ID: <200511192309.jAJN9708015774@sheep.berlios.de>

Author: grumbel
Date: 2005-11-20 00:07:25 +0100 (Sun, 20 Nov 2005)
New Revision: 1126

Added:
   trunk/data/models/vehicles/troopshuttle/troopshuttle-texture.png
   trunk/data/models/vehicles/troopshuttle/troopshuttle-texture.xcf
Modified:
   trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
Log:
- some texture


Added: trunk/data/models/vehicles/troopshuttle/troopshuttle-texture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/vehicles/troopshuttle/troopshuttle-texture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/models/vehicles/troopshuttle/troopshuttle-texture.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/vehicles/troopshuttle/troopshuttle-texture.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/data/models/vehicles/troopshuttle/troopshuttle.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Nov 20 22:43:59 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Sun, 20 Nov 2005 22:43:59 +0100
Subject: [Windstille-commit] r1127 - in trunk/src: . gui squirrel
Message-ID: <200511202143.jAKLhx8m014073@sheep.berlios.de>

Author: grumbel
Date: 2005-11-20 22:43:59 +0100 (Sun, 20 Nov 2005)
New Revision: 1127

Added:
   trunk/src/gui/slider.cpp
   trunk/src/gui/slider.hpp
Removed:
   trunk/src/SConstruct
Modified:
   trunk/src/SConscript
   trunk/src/gui/button.cpp
   trunk/src/gui/grid_component.cpp
   trunk/src/gui/gui_manager.cpp
   trunk/src/gui/text_view.cpp
   trunk/src/squirrel/SConstruct
Log:
- added slider component

Modified: trunk/src/SConscript
===================================================================
--- trunk/src/SConscript	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/SConscript	2005-11-20 21:43:59 UTC (rev 1127)
@@ -35,7 +35,7 @@
 env.ParseConfig('sdl-config --cflags --libs')
 env.ParseConfig('freetype-config --libs --cflags')
 
-env.Program('windstille', [
+env.Program('../windstille', [
 'baby_xml.cpp',
 'background_gradient.cpp',
 'blitter.cpp',
@@ -118,6 +118,7 @@
 'gui/gui_manager.cpp',
 'gui/list_view.cpp',
 'gui/root_component.cpp',
+'gui/slider.cpp',
 'gui/tab_component.cpp',
 'gui/text_view.cpp',
 'input/controller.cpp',

Deleted: trunk/src/SConstruct
===================================================================
--- trunk/src/SConstruct	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/SConstruct	2005-11-20 21:43:59 UTC (rev 1127)
@@ -1,170 +0,0 @@
-##  -*- python -*-
-##  $Id: windstille_main.hpp 1097 2005-09-23 16:01:59Z grumbel $
-##   __      __ __             ___        __   __ __   __
-##  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
-##  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
-##   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
-##    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
-##         \/          \/      \/    \/                         \/
-##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-##
-##  This program is free software; you can redistribute it and/or
-##  modify it under the terms of the GNU General Public License
-##  as published by the Free Software Foundation; either version 2
-##  of the License, or (at your option) any later version.
-##
-##  This program is distributed in the hope that it will be useful,
-##  but WITHOUT ANY WARRANTY; without even the implied warranty of
-##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-##  GNU General Public License for more details.
-## 
-##  You should have received a copy of the GNU General Public License
-##  along with this program; if not, write to the Free Software
-##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-##  02111-1307, USA.
-##
-
-SConscript("squirrel/SConstruct")
-
-env = Environment(CC = 'gcc',
-                  CCFLAGS = ['-O2'])
-
-# env.BuildDir('build', '.')
-env.ParseConfig('sdl-config --cflags --libs')
-env.ParseConfig('freetype-config --libs --cflags')
-
-env.Program('windstille', [
-'baby_xml.cpp',
-'background_gradient.cpp',
-'blitter.cpp',
-'bomb.cpp',
-'box.cpp',
-'camera.cpp',
-'character.cpp',
-'command_line.cpp',
-'command_line_generic.cpp',
-'console.cpp',
-'controller_def.cpp',
-'controller_help_window.cpp',
-'conversation.cpp',
-'dialog_manager.cpp',
-'elevator.cpp',
-'energy_bar.cpp',
-'entity.cpp',
-'gameconfig.cpp',
-'game_object.cpp',
-'game_session.cpp',
-'globals.cpp',
-'graphic_context_state.cpp',
-'grenade.cpp',
-'inventory.cpp',
-'laser_pointer.cpp',
-'liquid.cpp',
-'nightvision.cpp',
-'pda.cpp',
-'physics.cpp',
-'pistol.cpp',
-'player.cpp',
-'random.cpp',
-'screen.cpp',
-'screen_manager.cpp',
-'scriptable_object.cpp',
-'script_manager.cpp',
-'sector.cpp',
-'spawnpoint.cpp',
-'sprite3dview.cpp',
-'test_object.cpp',
-'text_area.cpp',
-'tile.cpp',
-'tile_factory.cpp',
-'tile_map.cpp',
-'tile_packer.cpp',
-'timer.cpp',
-'trigger.cpp',
-'util.cpp',
-'view.cpp',
-'windstille_getters.cpp',
-'windstille_main.cpp',
-'badguy/badguy.cpp',
-'badguy/hedgehog.cpp',
-'badguy/spider_mine.cpp',
-'badguy/swarm.cpp',
-'badguy/vrdummy.cpp',
-'collision/collision_data.cpp',
-'collision/collision_engine.cpp',
-'collision/collision_object.cpp',
-'collision/collision_test.cpp',
-'collision/ladder_contact.cpp',
-'collision/stair_contact.cpp',
-'display/display.cpp',
-'display/drawing_context.cpp',
-'display/scene_context.cpp',
-'display/vertex_array_drawing_request.cpp',
-'font/border_font_effect.cpp',
-'font/fonts.cpp',
-'font/ttf_font.cpp',
-'glutil/opengl_state.cpp',
-'glutil/surface.cpp',
-'glutil/surface_manager.cpp',
-'glutil/texture.cpp',
-'glutil/texture_manager.cpp',
-'gui/automap.cpp',
-'gui/button.cpp',
-'gui/component.cpp',
-'gui/component_factory.cpp',
-'gui/grid_component.cpp',
-'gui/gui_manager.cpp',
-'gui/list_view.cpp',
-'gui/root_component.cpp',
-'gui/tab_component.cpp',
-'gui/text_view.cpp',
-'input/controller.cpp',
-'input/input_configurator.cpp',
-'input/input_manager.cpp',
-'input/input_manager_impl.cpp',
-'input/input_manager_player.cpp',
-'input/input_manager_sdl.cpp',
-'input/input_recorder.cpp',
-'lisp/getters.cpp',
-'lisp/lexer.cpp',
-'lisp/lisp.cpp',
-'lisp/parser.cpp',
-'lisp/properties.cpp',
-'lisp/writer.cpp',
-'math/matrix.cpp',
-'math/origin.cpp',
-'math/quaternion.cpp',
-'math/rect.cpp',
-'math/vector.cpp',
-'particles/particle_system.cpp',
-'particles/spark_drawer.cpp',
-'particles/surface_drawer.cpp',
-'physfs/physfs_sdl.cpp',
-'physfs/physfs_stream.cpp',
-'scripting/game_objects.cpp',
-'scripting/interface.cpp',
-'scripting/serialize.cpp',
-'scripting/spawn_object.cpp',
-'scripting/squirrel_error.cpp',
-'scripting/wrapper.cpp',
-'scripting/wrapper_util.cpp',
-'signals/slot.cpp',
-'signals/slot_generic.cpp',
-'sound/sound_file.cpp',
-'sound/sound_manager.cpp',
-'sound/sound_source.cpp',
-'sound/stream_sound_source.cpp',
-'sprite2d/data.cpp',
-'sprite2d/manager.cpp',
-'sprite2d/sprite.cpp',
-'sprite3d/data.cpp',
-'sprite3d/manager.cpp',
-'sprite3d/sprite3d.cpp',
-'tinygettext/gettext.cpp',
-'tinygettext/tinygettext.cpp'
-],
-LIBS    = ['GL', 'squirrel', 'physfs', 'SDL_image', 'openal'] + env['LIBS'],
-LIBPATH = ['squirrel/'],
-CPPPATH = env['CPPPATH'] + ['.', '..', 'squirrel/include/'])
-
-# EOF #

Modified: trunk/src/gui/button.cpp
===================================================================
--- trunk/src/gui/button.cpp	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/gui/button.cpp	2005-11-20 21:43:59 UTC (rev 1127)
@@ -61,6 +61,8 @@
 void
 Button::update(float , const Controller& controller)
 {
+  set_active(false);
+
   for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
     {
       if (i->type == BUTTON_EVENT && i->button.down)

Modified: trunk/src/gui/grid_component.cpp
===================================================================
--- trunk/src/gui/grid_component.cpp	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/gui/grid_component.cpp	2005-11-20 21:43:59 UTC (rev 1127)
@@ -76,6 +76,7 @@
       {
         if (grid(x, y).component && !grid(x, y).has_parent())
           {
+            // give input to current compontent, empty input to the rest
             if (child_active && pos.x == x && pos.y == y)
               grid(x, y).component->update(delta, controller);
             else
@@ -83,41 +84,49 @@
           }
       }
 
-  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
+  if (child_active && !grid(pos.x, pos.y).component->is_active())
     {
-      if (i->type == BUTTON_EVENT && i->button.down)
+      child_active = false;
+    }
+  else if (!child_active)
+    {
+      for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
         {
-          if (i->button.name == OK_BUTTON)
+          if (i->type == BUTTON_EVENT && i->button.down)
             {
-              child_active = true;
-            }
-          else if (i->button.name == CANCEL_BUTTON)
-            {
-              set_active(false);
-            }
-        }
-      else if (i->type == AXIS_EVENT)
-        {
-          if (i->axis.name == X_AXIS)
-            {
-              if (i->axis.pos < 0)
+              if (i->button.name == OK_BUTTON)
                 {
-                  move_left();
+                  child_active = true;
+                  grid(pos.x, pos.y).component->set_active(true);
                 }
-              else if (i->axis.pos > 0)
+              else if (i->button.name == CANCEL_BUTTON)
                 {
-                  move_right();
+                  set_active(false);
                 }
             }
-          else if (i->axis.name == Y_AXIS)
+          else if (i->type == AXIS_EVENT)
             {
-              if (i->axis.pos < 0)
+              if (i->axis.name == X_AXIS)
                 {
-                  move_down();
+                  if (i->axis.pos < 0)
+                    {
+                      move_left();
+                    }
+                  else if (i->axis.pos > 0)
+                    {
+                      move_right();
+                    }
                 }
-              else if (i->axis.pos > 0)
+              else if (i->axis.name == Y_AXIS)
                 {
-                  move_up();
+                  if (i->axis.pos < 0)
+                    {
+                      move_down();
+                    }
+                  else if (i->axis.pos > 0)
+                    {
+                      move_up();
+                    }
                 }
             }
         }
@@ -127,7 +136,7 @@
 void
 GridComponent::move_up()
 {
-  grid(pos.x, pos.y).component->set_active(false);
+  //grid(pos.x, pos.y).component->set_active(false);
 
   pos.y += grid(pos.x, pos.y).span.height;
   if (pos.y >= grid.get_height())
@@ -136,13 +145,13 @@
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
 
-  grid(pos.x, pos.y).component->set_active(true);
+  //grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
 GridComponent::move_down()
 {
-  grid(pos.x, pos.y).component->set_active(false);
+  //grid(pos.x, pos.y).component->set_active(false);
 
   pos.y -= 1;
   if (pos.y < 0)
@@ -151,13 +160,13 @@
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
 
-  grid(pos.x, pos.y).component->set_active(true);
+  //grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
 GridComponent::move_left()
 {
-  grid(pos.x, pos.y).component->set_active(false);
+  //grid(pos.x, pos.y).component->set_active(false);
 
   pos.x -= 1;
   if (pos.x < 0)
@@ -166,13 +175,13 @@
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
 
-  grid(pos.x, pos.y).component->set_active(true);
+  //grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
 GridComponent::move_right()
 {
-  grid(pos.x, pos.y).component->set_active(false);
+  //grid(pos.x, pos.y).component->set_active(false);
 
   pos.x += grid(pos.x, pos.y).span.width;
   if (pos.x >= grid.get_width())
@@ -181,7 +190,7 @@
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
 
-  grid(pos.x, pos.y).component->set_active(true);
+  //grid(pos.x, pos.y).component->set_active(true);
 }
 
 void

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/gui/gui_manager.cpp	2005-11-20 21:43:59 UTC (rev 1127)
@@ -25,6 +25,7 @@
 
 #include "input/controller.hpp"
 #include "button.hpp"
+#include "slider.hpp"
 #include "root_component.hpp"
 #include "screen_manager.hpp"
 #include "grid_component.hpp"
@@ -48,7 +49,7 @@
   grid->pack(new Button("2", grid), 1, 0);
   grid->pack(new Button("3", grid), 2, 0);
 
-  grid->pack(new Button("4", grid), 0, 1);
+  grid->pack(new Slider(grid), 0, 1);
   //grid->pack(new Button("5", grid), 1, 1, 2, 2);
   TextView* text_view = new TextView(Rectf(), grid);
   grid->pack(text_view, 1, 1, 2, 2);

Added: trunk/src/gui/slider.cpp
===================================================================
--- trunk/src/gui/slider.cpp	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/gui/slider.cpp	2005-11-20 21:43:59 UTC (rev 1127)
@@ -0,0 +1,142 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "input/controller.hpp"
+#include "display/display.hpp"
+#include "color.hpp"
+#include "slider.hpp"
+
+namespace GUI {
+
+Slider::Slider(Component* parent)
+  : Component(parent),
+    min(0),
+    max(100),
+    step(10)
+{
+}
+
+Slider::~Slider()
+{
+}
+
+int
+Slider::set_minimum(int min_)
+{
+  min = min_;
+}
+
+int
+Slider::set_maximum(int max_)
+{
+  max = max_;
+}
+
+void
+Slider::set_range(int min_, int max_)
+{
+  min = min_;
+  max = max_;
+}
+
+void
+Slider::set_step(int step_)
+{
+  step = step_;
+}
+
+void
+Slider::draw()
+{
+  Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
+  Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  
+  int width = 30;
+  Rectf slider_rect(Vector(rect.left + (rect.get_width()-width) * (pos/float(max - min)) ,
+                           rect.top + 2),
+                    Sizef(width, rect.get_height()-4));
+  if (is_active())
+    {
+      Display::fill_rect(slider_rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+      Display::draw_rect(slider_rect, Color(1.0f, 1.0f, 1.0f, 1.0f));
+    }
+  else
+    {
+      Display::draw_rect(slider_rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+    }
+}
+
+void
+Slider::update(float delta, const Controller& controller)
+{
+  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT && i->button.down)
+        {
+          if (i->button.name == OK_BUTTON)
+            {
+              
+            }
+          else if (i->button.name == CANCEL_BUTTON)           
+            {
+              set_active(false);
+            }
+        }
+      else if (i->type == AXIS_EVENT)
+        {
+          if (i->axis.name == X_AXIS)
+            {
+              if (i->axis.pos < 0)
+                {
+                  pos -= step;
+                  if (pos < min) 
+                    pos = min;
+                }
+              else if (i->axis.pos > 0)
+                {
+                  pos += step;
+                  if (pos > max) 
+                    pos = max;
+                }
+            }
+        }
+    }
+}
+
+int
+Slider::get_pos() const
+{
+  return pos;
+}
+
+void
+Slider::set_pos(int pos_)
+{
+  pos = pos_;
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/slider.hpp
===================================================================
--- trunk/src/gui/slider.hpp	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/gui/slider.hpp	2005-11-20 21:43:59 UTC (rev 1127)
@@ -0,0 +1,66 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_SLIDER_HPP
+#define HEADER_SLIDER_HPP
+
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class Slider : public Component
+{
+private:
+  int min;
+  int max;
+  int step;
+  int pos;
+
+public:
+  Slider(Component* parent);
+  ~Slider();
+
+  int  get_pos() const;
+
+  void set_pos(int pos);
+  int  set_minimum(int min);
+  int  set_maximum(int max);
+  void set_range(int min, int max);
+  void set_step(int step);
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+private:
+  Slider (const Slider&);
+  Slider& operator= (const Slider&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Modified: trunk/src/gui/text_view.cpp
===================================================================
--- trunk/src/gui/text_view.cpp	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/gui/text_view.cpp	2005-11-20 21:43:59 UTC (rev 1127)
@@ -47,6 +47,7 @@
 TextView::update(float delta, const Controller& controller)
 {
   text_area.update(delta);
+  set_active(false);
 }
 
 void

Modified: trunk/src/squirrel/SConstruct
===================================================================
--- trunk/src/squirrel/SConstruct	2005-11-19 23:07:25 UTC (rev 1126)
+++ trunk/src/squirrel/SConstruct	2005-11-20 21:43:59 UTC (rev 1127)
@@ -1,3 +1,5 @@
+## -*- python -*-
+
 import glob
 
 env = Environment(CPPPATH = ['include'])



From grumbel at berlios.de  Sun Nov 20 22:47:16 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Sun, 20 Nov 2005 22:47:16 +0100
Subject: [Windstille-commit] r1128 - trunk/src/gui
Message-ID: <200511202147.jAKLlGsu014344@sheep.berlios.de>

Author: grumbel
Date: 2005-11-20 22:47:16 +0100 (Sun, 20 Nov 2005)
New Revision: 1128

Modified:
   trunk/src/gui/slider.cpp
   trunk/src/gui/slider.hpp
Log:
- fixed uninited variable

Modified: trunk/src/gui/slider.cpp
===================================================================
--- trunk/src/gui/slider.cpp	2005-11-20 21:43:59 UTC (rev 1127)
+++ trunk/src/gui/slider.cpp	2005-11-20 21:47:16 UTC (rev 1128)
@@ -34,7 +34,9 @@
   : Component(parent),
     min(0),
     max(100),
-    step(10)
+    step(10),
+    pos (50),
+    horizontal(true)
 {
 }
 

Modified: trunk/src/gui/slider.hpp
===================================================================
--- trunk/src/gui/slider.hpp	2005-11-20 21:43:59 UTC (rev 1127)
+++ trunk/src/gui/slider.hpp	2005-11-20 21:47:16 UTC (rev 1128)
@@ -38,6 +38,7 @@
   int max;
   int step;
   int pos;
+  bool horizontal;
 
 public:
   Slider(Component* parent);



From grumbel at berlios.de  Mon Nov 21 20:04:27 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Mon, 21 Nov 2005 20:04:27 +0100
Subject: [Windstille-commit] r1129 - in trunk/data/images: . caustic
Message-ID: <200511211904.jALJ4R2u022442@sheep.berlios.de>

Author: grumbel
Date: 2005-11-21 20:04:02 +0100 (Mon, 21 Nov 2005)
New Revision: 1129

Added:
   trunk/data/images/caustic/
   trunk/data/images/caustic/01.png
   trunk/data/images/caustic/02.png
   trunk/data/images/caustic/03.png
   trunk/data/images/caustic/04.png
   trunk/data/images/caustic/05.png
   trunk/data/images/caustic/06.png
   trunk/data/images/caustic/07.png
   trunk/data/images/caustic/08.png
   trunk/data/images/caustic/09.png
   trunk/data/images/caustic/10.png
   trunk/data/images/caustic/11.png
   trunk/data/images/caustic/12.png
   trunk/data/images/caustic/13.png
   trunk/data/images/caustic/14.png
   trunk/data/images/caustic/15.png
   trunk/data/images/caustic/16.png
   trunk/data/images/caustic/17.png
   trunk/data/images/caustic/18.png
   trunk/data/images/caustic/19.png
   trunk/data/images/caustic/20.png
   trunk/data/images/caustic/21.png
   trunk/data/images/caustic/22.png
   trunk/data/images/caustic/23.png
   trunk/data/images/caustic/24.png
   trunk/data/images/caustic/25.png
   trunk/data/images/caustic/26.png
   trunk/data/images/caustic/27.png
   trunk/data/images/caustic/28.png
   trunk/data/images/caustic/29.png
   trunk/data/images/caustic/30.png
   trunk/data/images/caustic/31.png
   trunk/data/images/caustic/32.png
Log:
- added animated caustic pattern

Added: trunk/data/images/caustic/01.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/01.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/02.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/02.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/03.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/03.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/04.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/04.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/05.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/05.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/06.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/06.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/07.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/07.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/08.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/08.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/09.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/09.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/10.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/10.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/11.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/11.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/12.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/12.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/13.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/13.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/14.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/14.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/15.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/15.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/16.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/16.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/17.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/17.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/18.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/18.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/19.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/19.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/20.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/20.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/21.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/21.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/22.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/22.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/23.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/23.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/24.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/24.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/25.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/25.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/26.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/26.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/27.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/27.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/28.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/28.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/29.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/29.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/30.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/30.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/31.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/31.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/caustic/32.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/caustic/32.png
___________________________________________________________________
Name: svn:executable
   + *
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Mon Nov 21 23:28:11 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Mon, 21 Nov 2005 23:28:11 +0100
Subject: [Windstille-commit] r1130 - trunk/data/images/tiles
Message-ID: <200511212228.jALMSBQg023840@sheep.berlios.de>

Author: grumbel
Date: 2005-11-21 23:27:33 +0100 (Mon, 21 Nov 2005)
New Revision: 1130

Added:
   trunk/data/images/tiles/building.xcf
   trunk/data/images/tiles/building2.xcf
Log:
- some background tile prototypes

Added: trunk/data/images/tiles/building.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/building.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/tiles/building2.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/building2.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Nov 22 00:51:40 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Tue, 22 Nov 2005 00:51:40 +0100
Subject: [Windstille-commit] r1131 - in trunk/data/models/vehicles: . minetrain
Message-ID: <200511212351.jALNpemb017734@sheep.berlios.de>

Author: grumbel
Date: 2005-11-22 00:50:53 +0100 (Tue, 22 Nov 2005)
New Revision: 1131

Added:
   trunk/data/models/vehicles/minetrain/
   trunk/data/models/vehicles/minetrain/minetrain.blend
   trunk/data/models/vehicles/minetrain/minetrain.xcf
Log:
- added minetrain sketch

Added: trunk/data/models/vehicles/minetrain/minetrain.blend
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/vehicles/minetrain/minetrain.blend
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/models/vehicles/minetrain/minetrain.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/vehicles/minetrain/minetrain.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Mon Nov 28 15:34:05 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Mon, 28 Nov 2005 15:34:05 +0100
Subject: [Windstille-commit] r1132 - in trunk/src: . display gui lisp tinygettext
Message-ID: <200511281434.jASEY5k5023994@sheep.berlios.de>

Author: grumbel
Date: 2005-11-28 15:33:49 +0100 (Mon, 28 Nov 2005)
New Revision: 1132

Added:
   trunk/src/config.cpp
   trunk/src/config.hpp
Removed:
   trunk/src/gameconfig.cpp
   trunk/src/gameconfig.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/SConscript
   trunk/src/dialog_manager.cpp
   trunk/src/display/display.cpp
   trunk/src/gui/slider.cpp
   trunk/src/lisp/parser.cpp
   trunk/src/screen.cpp
   trunk/src/screen_manager.cpp
   trunk/src/sector.cpp
   trunk/src/sprite3dview.cpp
   trunk/src/tinygettext/gettext.hpp
   trunk/src/windstille_main.cpp
   trunk/src/windstille_main.hpp
Log:
- some changes to the config handling (unfinished)

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/Jamfile	2005-11-28 14:33:49 UTC (rev 1132)
@@ -55,8 +55,8 @@
         elevator.hpp
         elevator.cpp
         field.hpp
-        gameconfig.hpp
-        gameconfig.cpp
+        config.hpp
+        config.cpp
         game_object.cpp
         game_object.hpp
         game_session.cpp

Modified: trunk/src/SConscript
===================================================================
--- trunk/src/SConscript	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/SConscript	2005-11-28 14:33:49 UTC (rev 1132)
@@ -27,7 +27,7 @@
 SConscript("squirrel/SConstruct")
 
 env = Environment(CC = 'gcc',
-                  CCFLAGS = ['-O2'])
+                  CCFLAGS = ['-O2', '-Wall', '-Werror', '-g'])
 
 # env.Copy(LIBS = ['a', 'b'])
 
@@ -53,7 +53,7 @@
 'elevator.cpp',
 'energy_bar.cpp',
 'entity.cpp',
-'gameconfig.cpp',
+'config.cpp',
 'game_object.cpp',
 'game_session.cpp',
 'globals.cpp',

Copied: trunk/src/config.cpp (from rev 1116, trunk/src/gameconfig.cpp)
===================================================================
--- trunk/src/gameconfig.cpp	2005-11-13 03:56:04 UTC (rev 1116)
+++ trunk/src/config.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -0,0 +1,401 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "config.hpp"
+
+#include <config.h>
+#include <memory>
+#include <iostream>
+#include "tinygettext/gettext.hpp"
+#include "lisp/lisp.hpp"
+#include "lisp/parser.hpp"
+#include "lisp/writer.hpp"
+#include "lisp/properties.hpp"
+#include "command_line.hpp"
+#include "globals.hpp"
+
+Config config;
+
+Config::Config()
+{
+  add(new ConfigValue<int> ("anti-aliasing",  _("Use NUMx Anti-Aliasing"), true, 0));
+  add(new ConfigValue<bool>("fullscreen",     _("Use fullscreen"),         true, false));
+  add(new ConfigValue<bool>("show-fps",       _("Show frames per second"), true, true));
+
+  add(new ConfigValue<bool>("music",          _("Enable Music"), true, true));
+  add(new ConfigValue<bool>("sound",          _("Enable Sound"), true, true));
+  
+  add(new ConfigValue<int>("screen-width",   _("Screen Width"),   true, 800));
+  add(new ConfigValue<int>("screen-height",   _("Screen Height"), true, 600));
+
+
+  add(new ConfigValue<std::string>("levelfile",       _("Levelfile to be used at startup"), false));
+  add(new ConfigValue<std::string>("controller-file", _("Controller Config file to load"), true));
+
+  add(new ConfigValue<std::string>("screenshot-dir",  _("Directory where Screenshots are saved"), false));
+
+  add(new ConfigValue<std::string>("recorder-file",   _("File to which demos are recorded"), false));
+  add(new ConfigValue<std::string>("playback-file",   _("File from which a demo is played"), false));
+}
+
+Config::~Config()
+{
+  for(ConfigValues::iterator i = config_values.begin(); i != config_values.end(); ++i)
+    {
+      delete i->second;
+    }
+}
+
+void 
+Config::add(ConfigValueBase* value)
+{
+  config_values[value->get_name()] = value;
+}
+
+std::string
+Config::get_string(const std::string& name) const 
+{
+  return get<std::string>(name).get();
+}
+
+bool
+Config::get_bool(const std::string& name) const 
+{
+  return get<bool>(name).get();
+}
+
+int
+Config::get_int(const std::string& name) const 
+{
+  return get<int>(name).get();
+}
+
+float
+Config::get_float(const std::string& name) const 
+{
+  return get<float>(name).get();
+}
+
+void
+Config::set_string(const std::string& name, const std::string& value)
+{
+  get<std::string>(name).set(value);
+}
+
+void
+Config::set_bool  (const std::string& name, bool  value)
+{
+  get<bool>(name).set(value);
+}
+
+void
+Config::set_int   (const std::string& name, int   value)
+{
+  get<int>(name).set(value);
+}
+
+void
+Config::set_float (const std::string& name, float value)
+{
+  get<float>(name).set(value);
+}
+
+void
+Config::parse_args(int argc, char** argv)
+{
+  CommandLine argp;
+
+  const int debug_flag        = 256;
+  const int nodebug_flag      = 257;
+  const int sprite3dview_flag = 258;
+    
+  argp.set_help_indent(24);
+  argp.add_usage ("[LEVELFILE]");
+  argp.add_doc   ("Windstille is a classic Jump'n Run game.");
+
+  argp.add_group("Mode Options:");
+  argp.add_option(sprite3dview_flag, "sprite3dview", "", "Launch Sprite3DView instead of the game");
+
+  argp.add_group("Display Options:");
+  argp.add_option('g', "geometry",   "WxH", "Change window size to WIDTH and HEIGHT");
+  argp.add_option('f', "fullscreen", "", "Launch the game in fullscreen");
+  argp.add_option('a', "anti-aliasing", "NUM", "Enable NUMx Anti-Aliasing");
+
+  argp.add_group("Sound Options:");
+  argp.add_option('s', "disable-sound", "", "Disable sound");
+  argp.add_option('S', "enable-sound", "", "Enable sound");
+
+  argp.add_group("Controlls Options:");
+  argp.add_option('c', "controller", "FILE", "Use controller as defined in FILE");
+
+  argp.add_group("Misc Options:");
+  argp.add_option('d', "datadir",    "DIR", "Fetch game data from DIR");
+  argp.add_option(debug_flag, "debug",      "", "Turn on debug output");
+  argp.add_option(nodebug_flag, "nodebug",      "", "Turn off debug output");
+  argp.add_option('x', "version",       "", "Print Windstille Version");
+  argp.add_option('h', "help",       "", "Print this help");
+
+  argp.add_group("Demo Recording/Playback Options:");
+  argp.add_option('r', "record",      "FILE", "Record input events to FILE");
+  argp.add_option('v', "record-video","DIR",  "Record a gameplay video to DIR");
+  argp.add_option('p', "play",        "FILE", "Playback input events from FILE");
+
+  argp.parse_args(argc, argv);
+
+  while (argp.next())
+    {
+      switch (argp.get_key())
+        {
+        case 'a':
+          int anti_aliasing;
+          if (sscanf(argp.get_argument().c_str(), "%d", &anti_aliasing) != 1)
+            {
+              throw std::runtime_error("Anti-Aliasing option '-a' requires argument of type {NUM}");
+            }
+          else
+            {
+              get<int>("anti-aliasing") = anti_aliasing;
+            }
+          break;
+
+        case 'r':
+          get<std::string>("recorder-file") = argp.get_argument();
+          break;
+
+        case 'x':
+          get<std::string>("screenshot-dir") = argp.get_argument();
+          break;
+
+        case 'p':
+          get<std::string>("playback-file") = argp.get_argument();
+          break;
+
+        case 'd':
+          datadir = argp.get_argument();
+          break;
+
+        case debug_flag:
+          debug = true;
+          break;
+
+        case nodebug_flag:
+          debug = false;
+          break;
+
+        case sprite3dview_flag:
+          sprite3dview = true;
+          break;
+
+        case 'f':
+          set_bool("fullscreen", true);
+          break;
+
+        case 'g':
+          {
+            int screen_width  = 800;
+            int screen_height = 600;
+            if (sscanf(argp.get_argument().c_str(), "%dx%d",
+                       &screen_width, &screen_height) == 2)
+              {
+                get<int>("screen-width")  = screen_width;
+                get<int>("screen-height") = screen_height;
+              
+                std::cout << "Geometry: " << screen_width
+                          << "x" << screen_height << std::endl;
+              }
+            else
+              {
+                throw std::runtime_error("Geometry option '-g' requires argument of type {WIDTH}x{HEIGHT}");
+              }
+          }
+          break;
+        
+        case 's':
+          set_bool("sound", false);
+          break;
+
+        case 'S':
+          set_bool("sound", true);
+          break;  
+
+        case 'c':
+          get<std::string>("controller-file") = argp.get_argument();
+          break;
+
+        case 'v':
+          std::cout << "Windstille " << PACKAGE_VERSION << std::endl;
+          exit(EXIT_SUCCESS);
+          break;
+
+        case 'h':
+          argp.print_help();
+          exit(EXIT_SUCCESS);
+          break;
+
+        case CommandLine::REST_ARG:
+          set_string("levelfile", argp.get_argument());
+          break;
+        }
+    }
+}
+
+bool
+Config::has_key(const std::string& name)
+{
+  ConfigValues::iterator i = config_values.find(name);
+  return (i != config_values.end());
+}
+
+bool
+Config::is_set(const std::string& name)
+{
+  ConfigValues::iterator i = config_values.find(name);
+  if (i == config_values.end())
+    {
+      throw std::runtime_error("Error: unknown Config value: '" + name + "'");        
+    }    
+  else
+    {
+      return i->second->is_set();
+    }
+}
+
+void
+Config::load()
+{
+  using namespace lisp;
+  
+  try {
+    std::auto_ptr<Lisp> root(lisp::Parser::parse("config"));
+    Properties rootp(root.get());
+    
+    const Lisp* config_lisp = 0;
+    if(rootp.get("windstille-config", config_lisp) == false) {
+      std::cerr << "Warning: Config file is not a windstille-config file.\n";
+      return;
+    }
+    
+    Properties props(config_lisp);
+    PropertyIterator<const lisp::Lisp*> iter = props.get_iter();
+
+    while(iter.next()) {
+      // FIXME: this is a little hacky PropertyIterator should be a bit rewritten
+      lisp::Lisp* lisp = (*iter)->get_list_elem(1);
+      switch (lisp->get_type())
+        {
+        case Lisp::TYPE_BOOL:
+          set_bool(iter.item(), lisp->get_bool());
+          break;
+
+        case Lisp::TYPE_INT:
+          set_int(iter.item(), lisp->get_int());
+          break;
+
+        case Lisp::TYPE_FLOAT:
+          set_float(iter.item(), lisp->get_float());
+          break;
+
+        case Lisp::TYPE_STRING:
+          set_string(iter.item(), lisp->get_string());
+          break;
+
+        default:
+          std::cout << "Config: Unhandled type: ";
+          lisp->print();
+          std::cout << std::endl;
+        }
+    }
+
+    /*
+      props.get("fullscreen",    use_fullscreen);
+      props.get("show_fps",      show_fps);
+      props.get("anti-aliasing", antialiasing);
+      props.get("sound_enabled", sound_enabled);
+      props.get("music_enabled", music_enabled);
+    */
+    props.print_unused_warnings("configfile");
+
+    // TODO read controller config
+  } catch(std::exception& e) {
+    std::cerr << "Couldn't open config file: " << e.what() << "\n"
+              << "This is normal on first startup!\n";
+    return;
+  }
+}
+
+void
+Config::save()
+{
+  try {
+    lisp::Writer writer("config");
+
+    writer.start_list("windstille-config");
+
+    for(ConfigValues::iterator i = config_values.begin(); i != config_values.end(); ++i)
+      {
+        if (i->second->should_be_saved() && i->second->is_set())
+          i->second->write(writer);
+      }
+    // TODO write controller config
+    
+    writer.end_list("windstille-config");
+  } catch(std::exception& e) {
+    std::cerr << "Couldn't write config file: " << e.what() << "\n";
+  }
+}
+
+void
+Config::debug_print()
+{
+  std::cout << "Config " << this << ":" << std::endl;
+  for(ConfigValues::iterator i = config_values.begin(); i != config_values.end(); ++i)
+    {
+      std::cout << "  " << i->second->get_name() << " " << i->second->is_set() << std::endl;
+    }  
+}
+
+template<>
+void ConfigValue<bool>::write(lisp::Writer& writer) {
+  writer.write_bool(get_name(), data);
+}
+
+template<>
+void ConfigValue<int>::write(lisp::Writer& writer) {
+  writer.write_int(get_name(), data);
+}
+
+template<>
+void ConfigValue<float>::write(lisp::Writer& writer) {
+  writer.write_float(get_name(), data);
+}
+
+template<>
+void ConfigValue<std::string>::write(lisp::Writer& writer) {
+  writer.write_string(get_name(), data);
+}
+
+
+/* EOF */
+

Copied: trunk/src/config.hpp (from rev 1116, trunk/src/gameconfig.hpp)
===================================================================
--- trunk/src/gameconfig.hpp	2005-11-13 03:56:04 UTC (rev 1116)
+++ trunk/src/config.hpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -0,0 +1,165 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_CONFIG_HPP
+#define HEADER_WINDSTILLE_CONFIG_HPP
+
+#include <map>
+#include <string>
+#include <typeinfo>
+#include <stdexcept>
+#include "lisp/writer.hpp"
+
+class ConfigValueBase
+{
+private:
+  std::string name;
+  std::string docstring;
+
+protected:
+  bool has_been_set;
+  bool do_save;
+
+public:
+  ConfigValueBase(const std::string& name_, const std::string& docstring_, bool do_save_)
+    : name(name_), docstring(docstring_),
+      has_been_set(false),
+      do_save(do_save_)
+  {   
+  }
+
+  virtual ~ConfigValueBase() {}
+
+  const std::string& get_name() { return name; }
+  const std::string& get_docstring() { return docstring; }
+
+  bool is_set() {
+    return has_been_set;
+  }
+
+  bool should_be_saved() {
+    return do_save;
+  }
+
+  virtual void write(lisp::Writer& writer) {}
+};
+
+template<class T>
+class ConfigValue : public ConfigValueBase
+{
+private:
+  T    data;
+
+public:
+  ConfigValue(const std::string& name_, const std::string& docstring_, bool do_save_, const T& data_)
+    : ConfigValueBase(name_, docstring_, do_save_),
+      data(data_)
+  {
+    has_been_set = true;
+  }
+
+  ConfigValue(const std::string& name_, const std::string& docstring_, bool do_save_)
+    : ConfigValueBase(name_, docstring_, do_save_)
+  {    
+    has_been_set = false;
+  }
+
+  const T& get() const { 
+    return data; 
+  }
+
+  T& get() { 
+    return data;
+  }
+
+  T& set(const T& data_) {
+    data = data_;
+    has_been_set  = true;
+    return data;
+  }
+  
+  T& operator=(const T& data_) {
+    return set(data_);
+  }
+
+  void write(lisp::Writer& writer);
+};
+
+class Config
+{
+private:
+  typedef std::map<std::string, ConfigValueBase*> ConfigValues;
+  ConfigValues config_values;
+
+  void add(ConfigValueBase*);
+public:
+  Config();
+  ~Config();
+
+  void set_defaults();
+
+  void parse_args(int argc, char** argv);
+
+  void load();
+  void save();
+
+  bool has_key(const std::string& name);
+
+  bool is_set(const std::string& name);
+
+  template<class T>
+  ConfigValue<T>& get(const std::string& name) const {
+    ConfigValues::const_iterator i = config_values.find(name);
+    if (i == config_values.end())
+      {
+        throw std::runtime_error("Error: unknown Config value: '" + name + "'");
+      }
+    else
+      {
+        ConfigValue<T>* ptr = dynamic_cast<ConfigValue<T>*>(i->second);
+        if (ptr)
+          return *ptr;
+        else
+          throw std::runtime_error("Error: Config value: '" + name + "' as wrong type");
+      }
+  }
+
+  std::string get_string(const std::string& name) const;
+  bool        get_bool  (const std::string& name) const;
+  int         get_int   (const std::string& name) const;
+  float       get_float (const std::string& name) const;
+
+  void set_string(const std::string& name, const std::string& value);
+  void set_bool  (const std::string& name, bool  value);
+  void set_int   (const std::string& name, int   value);
+  void set_float (const std::string& name, float value);
+
+  void debug_print();
+};
+
+extern Config config;
+
+#endif
+

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/dialog_manager.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -26,7 +26,7 @@
 #include "script_manager.hpp"
 #include "text_area.hpp"
 #include "display/display.hpp"
-#include "gameconfig.hpp"
+#include "config.hpp"
 
 DialogManager* DialogManager::current_ = 0;
 
@@ -76,17 +76,17 @@
   if(alignment & LEFT) {
     pos.x = outer_border_x;
   } else if(alignment & RIGHT) {
-    pos.x = config->screen_width - dialog_width - outer_border_x;
+    pos.x = Display::get_width() - dialog_width - outer_border_x;
   } else {
-    pos.x = (config->screen_width - dialog_width) / 2;
+    pos.x = (Display::get_width() - dialog_width) / 2;
   }
 
   if(alignment & TOP) {
     pos.y = outer_border_y;
   } else if(alignment & BOTTOM) {
-    pos.y = config->screen_height - dialog_height - outer_border_y;
+    pos.y = Display::get_height() - dialog_height - outer_border_y;
   } else {
-    pos.y = (config->screen_height - dialog_height) / 2;
+    pos.y = (Display::get_height() - dialog_height) / 2;
   }
 
   if (!caption) {
@@ -146,9 +146,9 @@
   if(alignment & LEFT) {
     pos.x = outer_border_x;
   } else if(alignment & RIGHT) {
-    pos.x = config->screen_width - dialog_width - outer_border_x;
+    pos.x = Display::get_width() - dialog_width - outer_border_x;
   } else {
-    pos.x = (config->screen_width - dialog_width) / 2;
+    pos.x = (Display::get_width() - dialog_width) / 2;
   }
       
   int text_width
@@ -165,9 +165,9 @@
   if(alignment & TOP) {
     pos.y = outer_border_y;
   } else if(alignment & BOTTOM) {
-    pos.y = config->screen_height - dialog_height - outer_border_y;
+    pos.y = Display::get_height() - dialog_height - outer_border_y;
   } else {
-    pos.y = (config->screen_height - dialog_height) / 2;
+    pos.y = (Display::get_height() - dialog_height) / 2;
   }
 
   text_rect.bottom = text_rect.top + text_rect.get_height();

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/display/display.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -26,7 +26,7 @@
 #include <cmath>
 #include <stdexcept>
 #include <SDL.h>
-#include "gameconfig.hpp"
+#include "config.hpp"
 #include "glutil/opengl_state.hpp"
 #include "display.hpp"
 #include "util.hpp"
@@ -211,14 +211,14 @@
   SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
   SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
 
-  if (config->antialiasing)
+  if (config.get_int("anti-aliasing"))
     {
       SDL_GL_SetAttribute( SDL_GL_MULTISAMPLEBUFFERS, 1 ); // boolean value, either it's enabled or not
-      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config->antialiasing ); // 0, 2, or 4 for number of samples
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config.get_int("anti-aliasing") ); // 0, 2, or 4 for number of samples
     }
 
-  window = SDL_SetVideoMode(config->screen_width, config->screen_height,
-                            0, SDL_OPENGL | (config->use_fullscreen ? SDL_FULLSCREEN : 0));
+  window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
+                            0, SDL_OPENGL | (config.get_bool("fullscreen") ? SDL_FULLSCREEN : 0));
   if (!window)
     {
       throw std::runtime_error("Display:: Couldn't create window");
@@ -238,7 +238,7 @@
   glLoadIdentity();
   glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
 
-  if (config->antialiasing)
+  if (config.get_int("anti-aliasing"))
     glEnable(GL_MULTISAMPLE_ARB); 
 
   assert_gl("setup projection");
@@ -253,7 +253,7 @@
   if (fullscreen)
     flags |= SDL_FULLSCREEN;
 
-  window = SDL_SetVideoMode(config->screen_width, config->screen_height,
+  window = SDL_SetVideoMode(config.get_int("screen-width"), config.get_int("screen-height"),
                             0, flags);
   if (!window)
     {

Deleted: trunk/src/gameconfig.cpp
===================================================================
--- trunk/src/gameconfig.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/gameconfig.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -1,85 +0,0 @@
-#include "gameconfig.hpp"
-
-#include <memory>
-#include <iostream>
-#include "lisp/lisp.hpp"
-#include "lisp/parser.hpp"
-#include "lisp/writer.hpp"
-#include "lisp/properties.hpp"
-
-Config* config = 0;
-
-Config::Config()
-{
-  // set default values
-  screen_width = 800;
-  screen_height = 600; 
-  use_fullscreen = false;
-  show_fps = false;
-  sound_enabled = true;
-  music_enabled = true;
-
-  antialiasing = 0;
-}
-
-Config::~Config()
-{
-}
-
-void
-Config::load()
-{
-  using namespace lisp;
-  
-  try {
-    std::auto_ptr<Lisp> root(lisp::Parser::parse("config"));
-    Properties rootp(root.get());
-    
-    const Lisp* config_lisp = 0;
-    if(rootp.get("windstille-config", config_lisp) == false) {
-      std::cerr << "Warning: Config file is not a windstille-config file.\n";
-      return;
-    }
-
-    Properties props(config_lisp);
-    props.get("screen_width", screen_width);
-    props.get("screen_height", screen_height);
-    props.get("fullscreen", use_fullscreen);
-    props.get("show_fps", show_fps);
-    props.get("anti-aliasing", antialiasing);
-    props.get("sound_enabled", sound_enabled);
-    props.get("music_enabled", music_enabled);
-    props.print_unused_warnings("configfile");
-
-    // TODO read controller config
-  } catch(std::exception& e) {
-    std::cerr << "Couldn't open config file: " << e.what() << "\n"
-              << "This is normal on first startup!\n";
-    return;
-  }
-}
-
-void
-Config::save()
-{
-  try {
-    lisp::Writer writer("config");
-
-    writer.start_list("windstille-config");
-
-    writer.write_int("screen_width", screen_width);
-    writer.write_int("screen_height", screen_height);
-    writer.write_int("anti-aliasing", antialiasing);
-    writer.write_bool("fullscreen", use_fullscreen);
-    writer.write_bool("show_fps", show_fps);
-    writer.write_bool("sound_enabled", sound_enabled);
-    writer.write_bool("music_enabled", music_enabled);
-
-    // TODO write controller config
-    
-    writer.end_list("windstille-config");
-  } catch(std::exception& e) {
-    std::cerr << "Couldn't write config file: " << e.what() << "\n";
-  }
-}
-

Deleted: trunk/src/gameconfig.hpp
===================================================================
--- trunk/src/gameconfig.hpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/gameconfig.hpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -1,29 +0,0 @@
-#ifndef __GAMECONFIG_HPP__
-#define __GAMECONFIG_HPP__
-
-#include <string>
-
-class Config
-{
-public:
-  Config();
-  ~Config();
-
-  void load();
-  void save();
-
-  int screen_width;
-  int screen_height;
-  bool use_fullscreen;
-  bool show_fps;
-
-  bool sound_enabled;
-  bool music_enabled;
-
-  int antialiasing;
-};
-
-extern Config* config;
-
-#endif
-

Modified: trunk/src/gui/slider.cpp
===================================================================
--- trunk/src/gui/slider.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/gui/slider.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -47,13 +47,13 @@
 int
 Slider::set_minimum(int min_)
 {
-  min = min_;
+  return min = min_;
 }
 
 int
 Slider::set_maximum(int max_)
 {
-  max = max_;
+  return max = max_;
 }
 
 void

Modified: trunk/src/lisp/parser.cpp
===================================================================
--- trunk/src/lisp/parser.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/lisp/parser.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -39,7 +39,7 @@
   ParseError(const Parser* parser, const std::string& message) throw()
   {
     std::ostringstream msg;
-    msg << "Parse error in '" << parser->filename << "' line "
+    msg << "Parse error in file '" << parser->filename << "' line "
       << parser->lexer->getLineNumber() << ": " << message;
     string = msg.str();
   }

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/screen.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -25,7 +25,7 @@
 #include "font/fonts.hpp"
 #include "globals.hpp"
 #include "console.hpp"
-#include "gameconfig.hpp"
+#include "config.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "sound/sound_manager.hpp"

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/screen_manager.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -30,7 +30,7 @@
 #include "globals.hpp"
 #include "screen.hpp"
 #include "font/fonts.hpp"
-#include "gameconfig.hpp"
+#include "config.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_configurator.hpp"
 #include "sound/sound_manager.hpp"
@@ -106,7 +106,7 @@
 
       console.draw();
 
-      if (config->show_fps)
+      if (config.get_bool("show-fps"))
         draw_fps();
 
       SDL_GL_SwapBuffers();
@@ -174,12 +174,12 @@
                   break;
 
                 case SDLK_F10:
-                  config->show_fps = ! (config->show_fps);
+                  config.set_bool("show-fps", !config.get_bool("show_fps"));
                   break;
               
                 case SDLK_F11:
-                  config->use_fullscreen = ! (config->use_fullscreen);
-                  Display::set_fullscreen(config->use_fullscreen);
+                  config.set_bool("fullscreen", !config.get_bool("fullscreen"));
+                  Display::set_fullscreen(config.get_bool("fullscreen"));
                   break;
               
                 case SDLK_F12:

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/sector.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -104,7 +104,7 @@
 void
 Sector::parse_file(const std::string& filename)
 {
-  if (debug) std::cout << "Parsing " << filename << std::endl;
+  if (debug) std::cout << "Sector:parse_file '" << filename << "'" << std::endl;
   using namespace lisp;
   
   std::auto_ptr<Lisp> root(Parser::parse(filename));

Modified: trunk/src/sprite3dview.cpp
===================================================================
--- trunk/src/sprite3dview.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/sprite3dview.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -24,8 +24,8 @@
 */
 
 #include <iostream>
-#include "gameconfig.hpp"
 #include "input/controller.hpp"
+#include "display/display.hpp"
 #include "console.hpp"
 #include "font/ttf_font.hpp"
 #include "font/fonts.hpp"
@@ -59,14 +59,14 @@
   sc.color().fill_screen(Color(0.5, 0.0, 0.5));
 
   sc.push_modelview();
-  sc.translate(config->screen_width/2, config->screen_height/2 + 200);
+  sc.translate(Display::get_width()/2, Display::get_height()/2 + 200);
   sc.scale(3.0f, 3.0f);
   sc.rotate(rotx, 0.0f, 1.0f, 0.0f);
   sprite.draw(sc.color(), Vector(0,0), 0); 
   sc.pop_modelview();
 
   //Matrix matrix = sc.color().get_modelview();
-  //matrix.translate(-config->screen_width/2, -config->screen_height/2, 0);
+  //matrix.translate(-Display::get_width()/2, -Display::get_height()/2, 0);
   //sprite.draw(sc.color(), matrix, 0.0f);
 
   sc.light().fill_screen(Color(1.0, 1.0, 1.0));

Modified: trunk/src/tinygettext/gettext.hpp
===================================================================
--- trunk/src/tinygettext/gettext.hpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/tinygettext/gettext.hpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -7,7 +7,10 @@
 
 static inline const char* _(const char* message)
 {
+  if (dictionaryManager)
     return dictionaryManager->get_dictionary().translate(message);
+  else
+    return message;
 }
 #define N_(s)      s
 

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/windstille_main.cpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -38,7 +38,7 @@
 #include "tile_factory.hpp"
 #include "script_manager.hpp"
 #include "tinygettext/gettext.hpp"
-#include "gameconfig.hpp"
+#include "config.hpp"
 #include "util.hpp"
 #include "font/ttf_font.hpp"
 #include "display/display.hpp"
@@ -46,7 +46,6 @@
 #include "glutil/texture_manager.hpp"
 #include "sprite3d/manager.hpp"
 #include "screen_manager.hpp"
-#include "command_line.hpp"
 #include "sprite3dview.hpp"
 #include "sprite2d/manager.hpp"
 
@@ -58,127 +57,12 @@
 {
 }
 
-void
-WindstilleMain::parse_command_line(int argc, char** argv)
-{
-  CommandLine argp;
-
-  const int debug_flag = 256;
-  const int sprite3dview_flag = 257;
-    
-  argp.set_help_indent(24);
-  argp.add_usage ("[LEVELFILE]");
-  argp.add_doc   ("Windstille is a classic Jump'n Run game.");
-
-  argp.add_group("Mode Options:");
-  argp.add_option(sprite3dview_flag, "sprite3dview", "", "Launch Sprite3DView instead of the game");
-
-  argp.add_group("Display Options:");
-  argp.add_option('g', "geometry",   "WxH", "Change window size to WIDTH and HEIGHT");
-  argp.add_option('f', "fullscreen", "", "Launch the game in fullscreen");
-  argp.add_option('a', "anti-aliasing", "NUM", "Enable NUMx Anti-Aliasing");
-
-  argp.add_group("Sound Options:");
-  argp.add_option('s', "disable-sound", "", "Disable sound");
-  argp.add_option('S', "enable-sound", "", "Enable sound");
-
-  argp.add_group("Controlls Options:");
-  argp.add_option('c', "controller", "FILE", "Use controller as defined in FILE");
-
-  argp.add_group("Misc Options:");
-  argp.add_option('d', "datadir",    "DIR", "Fetch game data from DIR");
-  argp.add_option(debug_flag, "debug",      "", "Turn on debug output");
-  argp.add_option('x', "version",       "", "Print Windstille Version");
-  argp.add_option('h', "help",       "", "Print this help");
-
-  argp.add_group("Demo Recording/Playback Options:");
-  argp.add_option('r', "record",      "FILE", "Record input events to FILE");
-  argp.add_option('v', "record-video","DIR",  "Record a gameplay video to DIR");
-  argp.add_option('p', "play",        "FILE", "Playback input events from FILE");
-
-  argp.parse_args(argc, argv);
-
-  while (argp.next())
-    {
-      switch (argp.get_key())
-        {
-        case 'a':
-          if (sscanf(argp.get_argument().c_str(), "%d", &config->antialiasing) != 1)
-            {
-              throw std::runtime_error("Anti-Aliasing option '-a' requires argument of type {NUM}");
-            }
-          break;
-
-        case 'r':
-          recorder_file = argp.get_argument();
-          break;
-
-        case 'x':
-          screenshot_dir = argp.get_argument();
-          break;
-
-        case 'p':
-          playback_file = argp.get_argument();
-          break;
-
-        case 'd':
-          datadir = argp.get_argument();
-          break;
-
-        case debug_flag:
-          debug = 1;
-          break;
-
-        case sprite3dview_flag:
-          sprite3dview = true;
-          break;
-
-        case 'f':
-          config->use_fullscreen = true;
-          break;
-
-        case 'g':
-          if (sscanf(argp.get_argument().c_str(), "%dx%d",
-                     &config->screen_width, &config->screen_height) == 2)
-            std::cout << "Geometry: " << config->screen_width
-                      << "x" << config->screen_height << std::endl;
-          else
-            throw std::runtime_error("Geometry option '-g' requires argument of type {WIDTH}x{HEIGHT}");
-          break;
-        
-        case 's':
-          config->sound_enabled = false;
-          break;
-
-        case 'S':
-          config->sound_enabled = true;
-          break;  
-
-        case 'c':
-          controller_file = argp.get_argument();
-          break;
-
-        case 'v':
-          std::cout << "Windstille " << PACKAGE_VERSION << std::endl;
-          exit(EXIT_SUCCESS);
-          break;
-
-        case 'h':
-          argp.print_help();
-          exit(EXIT_SUCCESS);
-          break;
-
-        case CommandLine::REST_ARG:
-          levelfile = argp.get_argument();
-          break;
-        }
-    }
-}
-
 int 
 WindstilleMain::main(int argc, char** argv)
 {
   try {
+    config.parse_args(argc, argv);
+
     init_physfs(argv[0]);
     init_sdl();
 
@@ -186,21 +70,14 @@
     dictionaryManager->set_charset("iso8859-1");
     dictionaryManager->add_directory("locale");
 
-    config = new Config();
-    config->load();
-  } catch(std::exception& e) {
-    std::cout << "std::exception: " << e.what() << std::endl;
-    return 1;
-  }
+    config.load();
 
-  try {
-    parse_command_line(argc, argv);
     init_modules();
 
-    if (playback_file.empty())
+    if (!config.get<std::string>("playback-file").is_set())
       {
-        if (!controller_file.empty())
-          InputManager::init(controller_file);
+        if (config.get<std::string>("controller-file").is_set())
+          InputManager::init(config.get<std::string>("controller-file").get());
         else if (PHYSFS_exists("controller.cfg"))
           InputManager::init("controller.cfg");
         else
@@ -208,11 +85,11 @@
       }
     else
       {
-        InputManager::init_playback(playback_file);
+        InputManager::init_playback(config.get_string("playback-file"));
       }
 
-    if (!recorder_file.empty())
-      InputManager::setup_recorder(recorder_file);
+    if (config.is_set("recorder-file"))
+      InputManager::setup_recorder(config.get_string("recorder-file"));
     
     if (debug) std::cout << "Initialising TileFactory" << std::endl;
     TileFactory::init();
@@ -224,15 +101,17 @@
       }
     else
       {
-        if (levelfile.empty())
+        if (!config.get<std::string>("levelfile").is_set())
           {
             screen_manager.set_screen(new GameSession("levels/newformat2.wst"));
           }
         else
           {
-            std::string leveldir = dirname(levelfile);
+            if (debug) std::cout << "Starting level: '" << config.get_string("levelfile") << "'" 
+                                 << std::endl;
+            std::string leveldir = dirname(config.get_string("levelfile"));
             PHYSFS_addToSearchPath(leveldir.c_str(), true);
-            screen_manager.set_screen(new GameSession(basename(levelfile)));
+            screen_manager.set_screen(new GameSession(basename(config.get_string("levelfile"))));
           }
       }
         
@@ -250,9 +129,7 @@
     std::cout << "Error catched something unknown?!" << std::endl;
   }
 
-  config->save();
-  delete config;
-  config = 0;
+  config.save();
 
   delete dictionaryManager;
   dictionaryManager = 0;
@@ -275,8 +152,8 @@
   if (debug) std::cout << "Initialising Fonts" << std::endl;
   Fonts::init(); 
   sound_manager = new SoundManager();
-  sound_manager->enable_sound(config->sound_enabled);
-  sound_manager->enable_music(config->music_enabled);
+  sound_manager->enable_sound(config.get_bool("sound"));
+  sound_manager->enable_music(config.get_bool("music"));
 
   if (debug) std::cout << "Initialising ScriptManager" << std::endl;
   texture_manager  = new TextureManager();
@@ -431,8 +308,14 @@
   PHYSFS_permitSymbolicLinks(1);
 
   //show search Path
-  for(char** i = PHYSFS_getSearchPath(); *i != NULL; i++)
-    printf("[%s] is in the search path.\n", *i);
+  if (debug)
+    {
+      std::cout << "SearchPath:" << std::endl;
+      char** search_path = PHYSFS_getSearchPath();
+      for(char** i = search_path; *i != NULL; i++)
+        std::cout << "  " << *i << std::endl;;
+      PHYSFS_freeList(search_path);
+    }
 }
 
 int main(int argc, char** argv)

Modified: trunk/src/windstille_main.hpp
===================================================================
--- trunk/src/windstille_main.hpp	2005-11-21 23:50:53 UTC (rev 1131)
+++ trunk/src/windstille_main.hpp	2005-11-28 14:33:49 UTC (rev 1132)
@@ -31,15 +31,8 @@
 struct SDL_Surface;
 
 class WindstilleMain
-{
+{  
 public:
-  std::string levelfile;
-  std::string controller_file;
-  std::string recorder_file;
-  std::string playback_file;
-  std::string screenshot_dir;
-  
-public:
   WindstilleMain();
   ~WindstilleMain();
 
@@ -48,7 +41,6 @@
 private:
   void init_sdl();
   void init_physfs(const char* argv0);
-  void parse_command_line(int argc, char** argv);
   void init_modules();
   void deinit_modules();
 };



From grumbel at berlios.de  Mon Nov 28 17:50:12 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Mon, 28 Nov 2005 17:50:12 +0100
Subject: [Windstille-commit] r1133 - in trunk/src: . scripting
Message-ID: <200511281650.jASGoCgH029243@sheep.berlios.de>

Author: grumbel
Date: 2005-11-28 17:50:09 +0100 (Mon, 28 Nov 2005)
New Revision: 1133

Modified:
   trunk/src/config.cpp
   trunk/src/config.hpp
   trunk/src/scripting/SConscript
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/util.hpp
Log:
- just some debugging stuff

Modified: trunk/src/config.cpp
===================================================================
--- trunk/src/config.cpp	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/config.cpp	2005-11-28 16:50:09 UTC (rev 1133)
@@ -24,7 +24,7 @@
 */
 
 #include "config.hpp"
-
+#include <boost/format.hpp>
 #include <config.h>
 #include <memory>
 #include <iostream>
@@ -367,13 +367,18 @@
 }
 
 void
-Config::debug_print()
+Config::debug_print(std::ostream& out)
 {
-  std::cout << "Config " << this << ":" << std::endl;
+  out << "Config " << this << ":" << std::endl;
   for(ConfigValues::iterator i = config_values.begin(); i != config_values.end(); ++i)
     {
-      std::cout << "  " << i->second->get_name() << " " << i->second->is_set() << std::endl;
-    }  
+      out << boost::format("  %|1$20| = %|2$-20| (set: %|3$|)") 
+        % i->second->get_name()
+        % (boost::format("'%|1s|'") % (*i->second))
+        % i->second->is_set() 
+          << std::endl;
+      
+    }
 }
 
 template<>

Modified: trunk/src/config.hpp
===================================================================
--- trunk/src/config.hpp	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/config.hpp	2005-11-28 16:50:09 UTC (rev 1133)
@@ -63,7 +63,9 @@
     return do_save;
   }
 
-  virtual void write(lisp::Writer& writer) {}
+  virtual std::ostream& print(std::ostream& os) const =0;
+
+  virtual void write(lisp::Writer& writer) =0;
 };
 
 template<class T>
@@ -105,8 +107,17 @@
   }
 
   void write(lisp::Writer& writer);
+
+  std::ostream& print(std::ostream& os) const {
+    return (os << data);
+  }
 };
 
+inline std::ostream& operator<<(std::ostream &o, const ConfigValueBase& value)
+{
+  return value.print(o);
+}
+
 class Config
 {
 private:
@@ -156,10 +167,11 @@
   void set_int   (const std::string& name, int   value);
   void set_float (const std::string& name, float value);
 
-  void debug_print();
+  void debug_print(std::ostream& out);
 };
 
 extern Config config;
 
 #endif
 
+/* EOF */

Modified: trunk/src/scripting/SConscript
===================================================================
--- trunk/src/scripting/SConscript	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/scripting/SConscript	2005-11-28 16:50:09 UTC (rev 1133)
@@ -6,8 +6,9 @@
 
 env = Environment(MINISWIG='tools/miniswig/miniswig')
 
-env.Command('miniswig.tmp', 'wrapper.interface.hpp',
-            ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"])
+env.Depends(env.Command('miniswig.tmp', 'wrapper.interface.hpp',
+                        ["cpp -x c  -CC $SOURCE -o $TARGET -DSCRIPTING_API"]),
+            ['interface.hpp', 'spawn_object.hpp', 'game_objects.hpp'])
 
 env.Depends(env.Command(['wrapper.cpp', 'wrapper.hpp'], 'miniswig.tmp',
                         ["$MINISWIG  --input $SOURCE --output-cpp ${TARGETS[0]} --output-hpp ${TARGETS[1]} --module windstille --select-namespace Scripting"]),

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/scripting/interface.cpp	2005-11-28 16:50:09 UTC (rev 1133)
@@ -1,3 +1,28 @@
+/*  $Id: config.cpp 1132 2005-11-28 14:33:49Z grumbel $
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
 #include <vector>
 #include "wrapper.interface.hpp"
 #include "interface.hpp"
@@ -10,6 +35,7 @@
 #include "font/fonts.hpp"
 #include "serialize.hpp"
 #include "camera.hpp"
+#include "config.hpp"
 #include "pda.hpp"
 #include "display/display.hpp"
 #include "controller_help_window.hpp"
@@ -207,4 +233,11 @@
   Display::set_gamma(r, g, b);
 }
 
+void show_config()
+{
+  config.debug_print(console);
 }
+
+} // namespace Scripting
+
+/* EOF */

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/scripting/interface.hpp	2005-11-28 16:50:09 UTC (rev 1133)
@@ -1,3 +1,28 @@
+/*  $Id: config.cpp 1132 2005-11-28 14:33:49Z grumbel $
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
 #ifndef __INTERFACE_HPP__
 #define __INTERFACE_HPP__
 
@@ -68,7 +93,11 @@
 void set_console_font(const std::string& font, int size);
 void set_gamma(float g);
 void set_gamma_rgb(float r, float g, float b);
-}
 
+void show_config();
+
+} // namespace Scripting
+
 #endif
 
+/* EOF */

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/scripting/wrapper.cpp	2005-11-28 16:50:09 UTC (rev 1133)
@@ -540,6 +540,15 @@
   return 0;
 }
 
+static int show_config_wrapper(HSQUIRRELVM v)
+{
+  (void) v;
+  
+  Scripting::show_config();
+  
+  return 0;
+}
+
 static int spawn_object_wrapper(HSQUIRRELVM v)
 {
   return Scripting::spawn_object(v);
@@ -968,6 +977,14 @@
     throw SquirrelError(v, msg.str());
   }
 
+  sq_pushstring(v, "show_config", -1);
+  sq_newclosure(v, &show_config_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'show_config'";
+    throw SquirrelError(v, msg.str());
+  }
+
   sq_pushstring(v, "spawn_object", -1);
   sq_newclosure(v, &spawn_object_wrapper, 0);
   if(SQ_FAILED(sq_createslot(v, -3))) {

Modified: trunk/src/util.hpp
===================================================================
--- trunk/src/util.hpp	2005-11-28 14:33:49 UTC (rev 1132)
+++ trunk/src/util.hpp	2005-11-28 16:50:09 UTC (rev 1133)
@@ -11,6 +11,14 @@
 std::string basename(const std::string& filename);
 void file_to_string(const std::string& filename, std::string& str);
 
+template<class T>
+std::string to_string(const T& data)
+{
+  std::ostringstream os;
+  os << data;
+  return os.str();
+}
+
 static inline void assert_gl(const char* message)
 {
 #ifdef DEBUG



From grumbel at berlios.de  Mon Nov 28 19:22:16 2005
From: grumbel at berlios.de (grumbel at BerliOS)
Date: Mon, 28 Nov 2005 19:22:16 +0100
Subject: [Windstille-commit] r1134 - trunk/src
Message-ID: <200511281822.jASIMGv9031212@sheep.berlios.de>

Author: grumbel
Date: 2005-11-28 19:22:04 +0100 (Mon, 28 Nov 2005)
New Revision: 1134

Modified:
   trunk/src/config.cpp
   trunk/src/tile_factory.cpp
   trunk/src/tile_factory.hpp
   trunk/src/tile_map.cpp
Log:
- splitted of Tile loading for load on demand (unfinished)

Modified: trunk/src/config.cpp
===================================================================
--- trunk/src/config.cpp	2005-11-28 16:50:09 UTC (rev 1133)
+++ trunk/src/config.cpp	2005-11-28 18:22:04 UTC (rev 1134)
@@ -328,13 +328,6 @@
         }
     }
 
-    /*
-      props.get("fullscreen",    use_fullscreen);
-      props.get("show_fps",      show_fps);
-      props.get("anti-aliasing", antialiasing);
-      props.get("sound_enabled", sound_enabled);
-      props.get("music_enabled", music_enabled);
-    */
     props.print_unused_warnings("configfile");
 
     // TODO read controller config

Modified: trunk/src/tile_factory.cpp
===================================================================
--- trunk/src/tile_factory.cpp	2005-11-28 16:50:09 UTC (rev 1133)
+++ trunk/src/tile_factory.cpp	2005-11-28 18:22:04 UTC (rev 1134)
@@ -41,6 +41,138 @@
 
 std::string TileFactory::tile_def_file = "tiles.scm";
 
+/** Check if the given region of the given image is fully transparent */
+static bool surface_empty(SDL_Surface* image, int sx, int sy, int w, int h)
+{
+  SDL_LockSurface(image);
+  
+  unsigned char* data = static_cast<unsigned char*>(image->pixels);
+  
+  for(int y = sy; y < sy + h; ++y)
+    for(int x = sx; x < sx + w; ++x)
+      {
+        if (data[y * image->pitch + 4*x + 3] != 0)
+          { 
+            SDL_UnlockSurface(image);
+            return false;
+          }
+      }
+
+  SDL_UnlockSurface(image);
+  return true;
+}
+
+class TileDescription
+{
+public:
+  TileFactory* factory;
+
+  std::vector<int> ids;
+  std::vector<int> colmap;
+  std::string filename;
+  int width;
+  int height;
+
+
+  TileDescription(TileFactory* factory_, const lisp::Lisp* data)
+    : factory(factory_), width(0), height(0)
+  {
+    assert(data);
+    lisp::Properties props(data);
+
+    props.get("ids",    ids);
+    props.get("image",  filename);
+    props.get("colmap", colmap);
+    props.get("width",  width);
+    props.get("height", height);
+    
+    props.print_unused_warnings("tiles");
+
+    if(filename == "")
+      throw std::runtime_error("Missing color-image");
+  }
+
+  void load()
+  {
+    if (debug)
+      std::cout << "Loading tiles: " << filename << std::endl;
+
+    SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
+    if(!image) 
+      {
+        std::ostringstream msg;
+        msg << "Couldn't load image '" << filename << "': " << SDL_GetError();
+        throw std::runtime_error(msg.str());
+      }
+ 
+    try {
+      int num_tiles = width * height; //(image->w/TILE_RESOLUTION) * (image->h/TILE_RESOLUTION);
+      if (int(colmap.size()) != num_tiles)
+        {
+          std::ostringstream str;
+          str << "'colmap' information and num_tiles mismatch (" 
+              << colmap.size() << " != " << num_tiles << ") for image '" << filename << "'";
+          throw std::runtime_error(str.str());
+        }
+
+      if (int(ids.size()) != num_tiles)
+        {
+          std::ostringstream str;
+          str << "'ids' information and num_tiles mismatch (" 
+              << ids.size() << " != " << num_tiles << ") for image '" << filename << "'";
+          throw std::runtime_error(str.str());
+        }
+    
+      int i = 0;
+      for (int y = 0; y < height*TILE_RESOLUTION; y += TILE_RESOLUTION)
+        {
+          for (int x = 0; x < width*TILE_RESOLUTION; x += TILE_RESOLUTION)
+            {
+              int id = ids[i];
+              int collider = colmap[i];
+              i++;
+
+              if(id == -1)
+                continue;
+
+              if(id < (int) factory->tiles.size() && factory->tiles[id] != 0)
+                {
+                  std::ostringstream msg;
+                  msg << "Duplicate tile id: " << filename << " " << id;
+                  throw std::runtime_error(msg.str());
+                } 
+
+              if (id >= int(factory->tiles.size()))
+                factory->tiles.resize(id + 1, 0);
+
+              factory->tiles[id] = new Tile(collider); 
+              Tile& tile = *(factory->tiles[id]);
+              tile.id = id;
+
+              if (surface_empty(image, x, y, TILE_RESOLUTION, TILE_RESOLUTION))
+                continue;
+            
+              if(factory->packers[factory->color_packer]->is_full())
+                {
+                  factory->packers.push_back(new TilePacker(1024, 1024));
+                  factory->color_packer = factory->packers.size() - 1;
+                }
+
+              Rectf rect = factory->packers[factory->color_packer]->pack(image, x, y,
+                                                                         TILE_RESOLUTION, TILE_RESOLUTION);
+              tile.color_rect   = rect;
+              tile.color_packer = factory->color_packer;
+              tile.texture      = factory->packers[factory->color_packer]->get_texture();
+            }
+        }
+    } catch(...) {
+      SDL_FreeSurface(image);
+      throw;
+    }
+    SDL_FreeSurface(image);
+  }
+};
+
 TileFactory::TileFactory (const std::string& filename)
 {
   using namespace lisp;
@@ -77,121 +209,15 @@
   tiles.clear();
 }
 
-static bool surface_empty(SDL_Surface* image, int sx, int sy, int w, int h)
-{
-  SDL_LockSurface(image);
-  
-  unsigned char* data = static_cast<unsigned char*>(image->pixels);
-  
-  for(int y = sy; y < sy + h; ++y)
-    for(int x = sx; x < sx + w; ++x)
-      {
-        if (data[y * image->pitch + 4*x + 3] != 0)
-          { 
-            SDL_UnlockSurface(image);
-            return false;
-          }
-      }
-
-  SDL_UnlockSurface(image);
-  return true;
-}
-
 void
 TileFactory::parse_tiles(const lisp::Lisp* data)
 {
   using namespace lisp;
   assert(data);
 
-  std::string filename;
-  std::string highlight_filename;
-  std::vector<int> colmap;
-  std::vector<int> ids;
-  int width  = 0;
-  int height = 0;
+  TileDescription desc(this, data);
 
-  Properties props(data);
-  props.get("ids", ids);
-  props.get("image", filename);
-  props.get("colmap", colmap);
-  props.get("width", width);
-  props.get("height", height);
-  props.print_unused_warnings("tiles");
-
-  if(filename == "")
-    throw std::runtime_error("Missing color-image");
-
-  if (debug)
-    std::cout << "Loading tiles: " << filename << std::endl;
-
-  SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
-  if(!image) 
-    {
-      std::ostringstream msg;
-      msg << "Couldn't load image '" << filename << "': " << SDL_GetError();
-      throw std::runtime_error(msg.str());
-    }
- 
-  try {
-    int num_tiles = width * height; //(image->w/TILE_RESOLUTION) * (image->h/TILE_RESOLUTION);
-    if (int(colmap.size()) != num_tiles)
-      {
-        std::ostringstream str;
-        str << "'colmap' information and num_tiles mismatch (" 
-            << colmap.size() << " != " << num_tiles << ") for image '" << filename << "'";
-        throw std::runtime_error(str.str());
-      }
-
-    if (int(ids.size()) != num_tiles)
-      {
-        std::ostringstream str;
-        str << "'ids' information and num_tiles mismatch (" 
-            << ids.size() << " != " << num_tiles << ") for image '" << filename << "'";
-        throw std::runtime_error(str.str());
-      }
-    
-    int i = 0;
-    for (int y = 0; y < height*TILE_RESOLUTION; y += TILE_RESOLUTION)
-      {
-        for (int x = 0; x < width*TILE_RESOLUTION; x += TILE_RESOLUTION)
-          {
-            int id = ids[i];
-            int collider = colmap[i];
-            i++;
-            if(id == -1)
-              continue;
-            if(id < (int) tiles.size() && tiles[id] != 0)
-              {
-                std::ostringstream msg;
-                msg << "Duplicate tile id: " << filename << " " << id;
-                throw std::runtime_error(msg.str());
-              } 
-            if (id >= int(tiles.size()))
-              tiles.resize(id + 1, 0);
-
-            tiles[id] = new Tile(collider); 
-            Tile& tile = *(tiles[id]);
-            tile.id = id;
-
-            if (surface_empty(image, x, y, TILE_RESOLUTION, TILE_RESOLUTION))
-              continue;
-            
-            if(packers[color_packer]->is_full())
-              {
-                packers.push_back(new TilePacker(1024, 1024));
-                color_packer = packers.size() - 1;
-              }
-            Rectf rect = packers[color_packer]->pack(image, x, y, TILE_RESOLUTION, TILE_RESOLUTION);
-            tile.color_rect     = rect;
-            tile.color_packer = color_packer;
-            tile.texture = packers[color_packer]->get_texture();
-          }
-      }
-  } catch(...) {
-    SDL_FreeSurface(image);
-    throw;
-  }
-  SDL_FreeSurface(image);
+  desc.load();
 }
 
 Tile*

Modified: trunk/src/tile_factory.hpp
===================================================================
--- trunk/src/tile_factory.hpp	2005-11-28 16:50:09 UTC (rev 1133)
+++ trunk/src/tile_factory.hpp	2005-11-28 18:22:04 UTC (rev 1134)
@@ -31,8 +31,6 @@
 class TileFactory
 {
 private:
-  // FIXME: Replace ths with a vector, map is potentially slow
-  //typedef std::map<int, Tile*> Tiles;
   typedef std::vector<Tile*> Tiles;
   Tiles tiles;
   typedef std::vector<TilePacker*> TilePackers;
@@ -40,6 +38,8 @@
   int color_packer;
 
   static TileFactory* current_;
+
+  friend class TileDescription;
 public:
   static std::string tile_def_file;
 
@@ -57,6 +57,8 @@
 
   Texture get_texture(int tile_id);
 
+  void add(int id, Tile* tile);
+
   /** Create the default TileFactor*/
   static void init();
 

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-11-28 16:50:09 UTC (rev 1133)
+++ trunk/src/tile_map.cpp	2005-11-28 18:22:04 UTC (rev 1134)
@@ -132,6 +132,7 @@
           continue;                                    
 
         int packer = tile->color_packer; 
+
         if(packer >= int(requests.size()))
           requests.resize(packer+1);
 



