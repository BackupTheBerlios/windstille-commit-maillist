From grumbel at berlios.de  Mon Aug  1 00:04:38 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 00:04:38 +0200
Subject: [Windstille-commit] r869 - in trunk: data/levels data/scripts/newformat2 src src/display src/glutil src/scripting src/sprite2d
Message-ID: <200507312204.j6VM4ckB032612@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 00:04:37 +0200 (Mon, 01 Aug 2005)
New Revision: 869

Modified:
   trunk/data/levels/newformat2.wst
   trunk/data/scripts/newformat2/bob.nut
   trunk/data/scripts/newformat2/frank.nut
   trunk/src/dialog_manager.cpp
   trunk/src/display/display.cpp
   trunk/src/game_session.cpp
   trunk/src/glutil/surface.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/sprite2d/sprite.cpp
   trunk/src/sprite2d/sprite.hpp
   trunk/src/text_area.cpp
   trunk/src/text_area.hpp
Log:
- added rounded rects to dialog

Modified: trunk/data/levels/newformat2.wst
===================================================================
--- trunk/data/levels/newformat2.wst	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/data/levels/newformat2.wst	2005-07-31 22:04:37 UTC (rev 869)
@@ -187,7 +187,7 @@
     )
     (character
       (name "bob")
-      (pos 50 831)
+      (pos 320 831)
     )
     (character
       (name "frank")

Modified: trunk/data/scripts/newformat2/bob.nut
===================================================================
--- trunk/data/scripts/newformat2/bob.nut	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/data/scripts/newformat2/bob.nut	2005-07-31 22:04:37 UTC (rev 869)
@@ -1,7 +1,7 @@
 function intro()
 {
 	bob_seen_before = true;
-	dialog(0, "portrait", "Hey, my name's bob.  Are you new around here?"); 
+	dialog(0, "images/portrait.sprite", "Hey, my name's bob.  Are you new around here?"); 
 	conversation_add("Yes, I am.");
 	conversation_add("Go away"); 
 	if (!conversation_get())
@@ -16,7 +16,7 @@
 
 function hello_again()
 {
-	dialog(0, "portrait", "Hello again");
+	dialog(0, "images/portrait.sprite", "Hello again");
 	conversation_add("Hey.");
 	conversation_add("Bye");
 	if (!conversation_get())
@@ -27,7 +27,7 @@
 
 function ask_questions()
 {
-	dialog(0, "portrait", "So what are you doing here?");
+	dialog(0, "images/portrait.sprite", "So what are you doing here?");
 	conversation_add("I work as a mercenary.");
 	conversation_add("Not much");
 	if (!conversation_get())
@@ -41,7 +41,7 @@
 
 function offer_job()
 {
-	dialog(0, "portrait", "Are you looking for some work?");
+	dialog(0, "images/portrait.sprite", "Are you looking for some work?");
 	conversation_add("I might be, if the offer is good enough.");
 	conversation_add("No thanks.");
 	if (!conversation_get())
@@ -55,15 +55,15 @@
 
 function explain_job()
 {
-	dialog(0, "portrait", "Your job is to kill the spider at the end of the level ;)");
+	dialog(0, "images/portrait.sprite", "Your job is to kill the spider at the end of the level ;)");
 }
 
 function bye()
 {
 	if (bob_knows_job)
-		dialog(0, "portrait", "Feel free to come back if you need a job");
+		dialog(0, "images/portrait.sprite", "Feel free to come back if you need a job");
 	else
-		dialog(0, "portrait", "See you again some time");
+		dialog(0, "images/portrait.sprite", "See you again some time");
 }
 
 //sintro();

Modified: trunk/data/scripts/newformat2/frank.nut
===================================================================
--- trunk/data/scripts/newformat2/frank.nut	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/data/scripts/newformat2/frank.nut	2005-07-31 22:04:37 UTC (rev 869)
@@ -1,4 +1,4 @@
 if (like_frank)
-	dialog(0, "portrait", "You like me? Have a cookie.");
+	dialog(0, "images/portrait.sprite", "You like me? Have a cookie.");
 else
-	dialog(0, "portrait", "So you don't like me huh? Go away.");
+	dialog(0, "images/portrait.sprite", "So you don't like me huh? Go away.");

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/dialog_manager.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -51,7 +51,6 @@
   portrait  = Sprite(portrait_);
   text      = text_;
 
-
   static const int dialog_width = 600;
   static const int outer_border_x = 20;
   static const int outer_border_y = 20;
@@ -74,7 +73,7 @@
   int text_width
     = dialog_width - portrait_height - portrait_border_x*2 - text_border_x;
   Rect text_rect = Rect(CL_Point(pos.x + portrait_width + portrait_border_x*2, 0),
-                        CL_Size(500, 600)); // FIXME: use real bounding box calc
+                        CL_Size(500, 200)); // FIXME: use real bounding box calc
   
   text_rect.bottom = text_rect.top + text_rect.get_height();
   text_rect.top    = pos.y + text_border_y;
@@ -98,7 +97,7 @@
 
   delete text_area;
   text_area = new TextArea(Rect(CL_Point(text_rect.left, text_rect.top + Fonts::ttfdialog->get_height()),
-                                   CL_Size(text_width, 600)));
+                                   CL_Size(text_width, 200)));
   text_area->set_font(Fonts::ttfdialog);
   text_area->set_text(text);
 }
@@ -106,16 +105,18 @@
 void
 DialogManager::draw()
 {
-  static const int dialog_width = 600;
   static const int outer_border_x = 20;
   static const int outer_border_y = 20;
   static const int portrait_border_x = 10;
   static const int portrait_border_y = 10;
-  static const int text_border_x = 10;
-  static const int text_border_y = 10;
-  static const int portrait_width = 180;
+  static const int dialog_width = 600;
   static const int portrait_height = 192;
+  static const int text_border_y = 10;
 
+  int dialog_height = std::max(portrait_height + portrait_border_y*2,
+                               int(text_area->get_rect().get_height()
+                                   + text_border_y * 2.0f));
+
   CL_Point pos(0,0);
   if(alignment & LEFT) {
     pos.x = outer_border_x;
@@ -124,18 +125,7 @@
   } else {
     pos.x = (config->screen_width - dialog_width) / 2;
   }
-      
-  int text_width
-  = dialog_width - portrait_height - portrait_border_x*2 - text_border_x;
-  Rect text_rect = Rect(CL_Point(pos.x + portrait_width + portrait_border_x*2, 0),
-                        CL_Size(text_width, 600));
-  
-  text_rect.bottom = text_rect.top + text_rect.get_height();
-  text_rect.top = pos.y + text_border_y;
 
-  int dialog_height = std::max(portrait_height + portrait_border_y*2,
-                               text_rect.get_height() + text_border_y*2);
-
   if(alignment & TOP) {
     pos.y = outer_border_y;
   } else if(alignment & BOTTOM) {
@@ -144,15 +134,15 @@
     pos.y = (config->screen_height - dialog_height) / 2;
   }
 
-  text_rect.bottom = text_rect.top + text_rect.get_height();
-  text_rect.top = pos.y + text_border_y;
+  Rectf rect(pos.x,
+             pos.y,
+             pos.x + dialog_width,
+             pos.y + 200);
 
-  CL_Size dialog_size(dialog_width, dialog_height);
-      
-  VDisplay::fill_rect(Rect(pos, dialog_size), 
-                      Color(0, 0, 0.4f, 0.9f));
-  VDisplay::draw_rect(Rect(pos, dialog_size),
-                      Color(1.0f, 1.0f, 1.0f, 0.3f));
+  VDisplay::fill_rounded_rect(rect, 32.0f,
+                              Color(0, 0, 0.4f, 0.8f));
+  VDisplay::draw_rounded_rect(rect, 32.0f,
+                              Color(0.6f, 1.0f, 1.0f, 0.8f));
 
   portrait.draw(Vector(pos.x + portrait_border_x,
                        pos.y + portrait_border_y));

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/display/display.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -148,6 +148,7 @@
   glColor4f(color.r, color.g, color.b, color.a);
 
   int n = 4;
+  glLineWidth(4.0f);
   glBegin(GL_LINE_STRIP);
   for(int i = 0; i <= n; ++i)
     {
@@ -183,6 +184,7 @@
   glVertex2f(irect.left, irect.top - radius);
 
   glEnd();
+  glLineWidth(1.0f);
 }
 
 int

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/game_session.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -111,7 +111,8 @@
   conversation->draw();
 
   //control_dialog.set_alignment(origin_bottom_right);
-  control_dialog.draw(Vector(800-16, 600-16));
+  control_dialog.draw(Vector(800-16 - control_dialog.get_width(), 
+                             600-16 - control_dialog.get_height()));
 }
 
 void

Modified: trunk/src/glutil/surface.cpp
===================================================================
--- trunk/src/glutil/surface.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/glutil/surface.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -27,6 +27,7 @@
 #include <ClanLib/gl.h>
 #include <ClanLib/display.h>
 #include "surface.hpp"
+#include "math/vector.hpp"
 #include "surface_drawing_parameters.hpp"
 #include "surface_manager.hpp"
 

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/scripting/wrapper.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/scripting/wrapper.hpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/sprite2d/sprite.cpp
===================================================================
--- trunk/src/sprite2d/sprite.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/sprite2d/sprite.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -223,4 +223,16 @@
   return blend_dfactor;
 }
 
+int
+Sprite::get_width() const
+{
+  return current_action->surfaces[ static_cast<int> (frame) ].get_width();
+}
+
+int
+Sprite::get_height() const
+{
+  return current_action->surfaces[ static_cast<int> (frame) ].get_height();
+}
+
 /* EOF */

Modified: trunk/src/sprite2d/sprite.hpp
===================================================================
--- trunk/src/sprite2d/sprite.hpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/sprite2d/sprite.hpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -63,6 +63,9 @@
 
   Vector get_offset() const;
 
+  int get_width() const;
+  int get_height() const;
+
   /** true if the Sprite is valid and usable, false if not */
   operator bool() const;
 private:

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/text_area.cpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -329,4 +329,10 @@
   impl->passed_time += delta;
 }
 
+Rectf
+TextArea::get_rect() const
+{
+  return impl->rect;
+}
+
 /* EOF */

Modified: trunk/src/text_area.hpp
===================================================================
--- trunk/src/text_area.hpp	2005-07-31 21:36:19 UTC (rev 868)
+++ trunk/src/text_area.hpp	2005-07-31 22:04:37 UTC (rev 869)
@@ -52,6 +52,7 @@
   void update(float delta);
   void draw();
 
+  Rectf get_rect() const;
 private:
   TextAreaImpl* impl;
 };



From grumbel at berlios.de  Mon Aug  1 01:45:24 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 01:45:24 +0200
Subject: [Windstille-commit] r870 - trunk/src
Message-ID: <200507312345.j6VNjO3I019461@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 01:45:03 +0200 (Mon, 01 Aug 2005)
New Revision: 870

Modified:
   trunk/src/elevator.cpp
   trunk/src/tile_factory.cpp
Log:
- fixed tilefile and added some more parsing to avoid the error message

Modified: trunk/src/elevator.cpp
===================================================================
--- trunk/src/elevator.cpp	2005-07-31 22:04:37 UTC (rev 869)
+++ trunk/src/elevator.cpp	2005-07-31 23:45:03 UTC (rev 870)
@@ -42,6 +42,7 @@
 
   if(spritename == "")
     throw std::runtime_error("No sprite name specified in Elevator");
+
   sprite = Sprite(spritename);
   size  = CL_Size(128, 64);
   colobject = new CollisionObject(Rectf(Vector(0,0), size));

Modified: trunk/src/tile_factory.cpp
===================================================================
--- trunk/src/tile_factory.cpp	2005-07-31 22:04:37 UTC (rev 869)
+++ trunk/src/tile_factory.cpp	2005-07-31 23:45:03 UTC (rev 870)
@@ -116,11 +116,15 @@
   std::string highlight_filename;
   std::vector<int> colmap;
   std::vector<int> ids;
+  int width  = 0;
+  int height = 0;
 
   Properties props(data);
   props.get("ids", ids);
   props.get("image", filename);
   props.get("colmap", colmap);
+  props.get("width", width);
+  props.get("height", height);
   props.print_unused_warnings("tiles");
 
   if(filename == "")



From grumbel at berlios.de  Mon Aug  1 02:47:03 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 02:47:03 +0200
Subject: [Windstille-commit] r871 - in trunk/data: . images/tiles levels
Message-ID: <200508010047.j710l34R018818@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 02:46:51 +0200 (Mon, 01 Aug 2005)
New Revision: 871

Added:
   trunk/data/images/tiles/industrial.png
   trunk/data/levels/industrial.wst
Modified:
   trunk/data/tiles.scm
Log:
- added new tileset

Added: trunk/data/images/tiles/industrial.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/industrial.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/levels/industrial.wst
===================================================================
--- trunk/data/levels/industrial.wst	2005-07-31 23:45:03 UTC (rev 870)
+++ trunk/data/levels/industrial.wst	2005-08-01 00:46:51 UTC (rev 871)
@@ -0,0 +1,110 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (name   "")
+  (music  "")
+  (ambient-color .666 .666 .666)
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      517 518 520 521 522 523 518 520 521 522 523 520 517 518 520 521 522 523 518 520 521 522 523 520 521 522 523 518 520 521 522 523 522 523 518 520 521 522 523 520 521 522 523 518 522 523 518 520 521 522 523 520 521 522 523 518 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      533 534 536 537 538 539 534 536 537 538 539 536 533 534 536 537 538 539 534 536 537 538 539 536 537 538 539 534 536 537 538 539 538 539 534 536 537 538 539 536 537 538 539 534 538 539 534 536 537 538 539 536 537 538 539 534 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      495 496 497 498 431 432 433 434 431 432 433 434 495 496 497 498 431 432 433 434 431 432 433 434 431 432 433 434 495 496 497 498 431 432 433 434 431 432 433 434 431 432 433 434 431 432 433 434 431 432 433 434 431 432 433 434 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      511 512 513 514 447 448 449 450 447 448 449 450 511 512 513 514 447 448 449 450 447 448 449 450 447 448 449 450 511 512 513 514 447 448 449 450 447 448 449 450 447 448 449 450 447 448 449 450 447 448 449 450 447 448 449 450 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      527 528 529 530 463 464 465 466 463 464 465 466 527 528 529 530 463 464 465 466 463 464 465 466 463 464 465 466 527 528 529 530 463 464 465 466 463 464 465 466 463 464 465 466 463 464 465 466 463 464 465 466 463 464 465 466 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      543 544 545 546 479 480 481 482 479 480 481 482 543 544 545 546 479 480 481 482 479 480 481 482 479 480 481 482 543 544 545 546 479 480 481 482 479 480 481 482 479 480 481 482 479 480 481 482 479 480 481 482 479 480 481 482 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 495 496 497 498 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 511 512 513 514 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 527 528 529 530 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 543 544 545 546 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      297 298 299 300 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 421 422 425 426 0 0 0 0 293 294 297 298 297 298 295 297 298 296 297 298 297 298 299 300 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      313 314 315 316 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 437 438 441 442 0 0 0 0 309 310 313 314 313 314 311 313 314 312 313 314 313 314 315 316 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      329 330 331 332 0 0 0 0 421 422 425 426 0 0 421 422 423 424 425 0 0 0 0 0 485 486 489 490 0 0 0 0 389 390 393 394 391 392 391 392 391 392 391 392 391 392 395 396 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      345 346 347 348 0 0 0 0 437 438 441 442 0 0 437 438 439 440 441 0 0 0 0 0 501 502 505 506 0 0 0 0 405 406 409 410 407 408 407 408 407 408 407 408 407 408 411 412 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      329 330 331 332 0 0 0 0 485 486 489 490 0 0 485 486 487 488 489 490 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      345 346 347 348 0 0 0 0 501 502 505 506 0 0 501 502 503 504 505 506 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      329 330 331 332 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      345 346 347 348 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 438 441 438 441 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      361 362 363 364 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 486 489 486 489 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      377 378 379 380 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 438 441 438 441 438 441 438 441 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      329 330 333 334 295 296 295 296 297 298 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 295 296 295 296 297 298 486 489 486 489 486 489 486 489 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 295 296 295 296 297 298 297 298 295 296 295 296 297 298 295 296 297 298 297 298 295 296 295 296 
+      345 346 349 350 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 311 312 311 312 313 314 313 314 311 312 311 312 313 314 311 312 313 314 313 314 311 312 311 312 
+      361 362 327 328 427 428 429 430 329 330 327 328 327 328 327 328 329 330 329 330 327 328 427 428 429 430 327 328 427 428 429 430 329 330 329 330 427 428 429 430 329 330 327 328 327 328 327 328 329 330 329 330 327 328 327 328 329 330 327 328 327 328 327 328 329 330 329 330 327 328 327 328 329 330 327 328 327 328 327 328 329 330 329 330 327 328 327 328 329 330 327 328 329 330 329 330 327 328 327 328 
+      377 378 343 344 443 444 445 446 345 346 343 344 343 344 343 344 345 346 345 346 343 344 443 444 445 446 343 344 443 444 445 446 345 346 345 346 443 444 445 446 345 346 343 344 343 344 343 344 345 346 345 346 343 344 343 344 345 346 343 344 343 344 343 344 345 346 345 346 343 344 343 344 345 346 343 344 343 344 343 344 345 346 345 346 343 344 343 344 345 346 343 344 345 346 345 346 343 344 343 344 
+      361 459 359 360 459 460 461 462 361 362 359 360 359 360 359 360 361 362 361 362 359 360 459 460 461 462 359 360 459 460 461 462 361 362 361 362 459 460 461 462 361 362 359 360 359 360 359 360 361 362 361 362 359 360 359 360 361 362 359 360 359 360 359 360 361 362 361 362 359 360 359 360 361 362 359 360 359 360 359 360 361 362 361 362 359 360 359 360 361 362 359 360 361 362 361 362 359 360 359 360 
+      377 475 375 376 475 476 477 478 377 378 375 376 375 376 375 376 377 378 377 378 375 376 475 476 477 478 375 376 475 476 477 478 377 378 377 378 475 476 477 478 377 378 375 376 375 376 375 376 377 378 377 378 375 376 375 376 377 378 375 376 375 376 375 376 377 378 377 378 375 376 375 376 377 378 375 376 375 376 375 376 377 378 377 378 375 376 375 376 377 378 375 376 377 378 377 378 375 376 375 376 
+      393 394 391 392 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 391 392 391 392 393 394 393 394 391 392 391 392 393 394 391 392 393 394 393 394 391 392 391 392 
+      409 410 407 408 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 407 408 407 408 409 410 409 410 407 408 407 408 409 410 407 408 409 410 409 410 407 408 407 408 
+     ))
+  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+ )
+
+;; EOF ;;

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2005-07-31 23:45:03 UTC (rev 870)
+++ trunk/data/tiles.scm	2005-08-01 00:46:51 UTC (rev 871)
@@ -11,14 +11,55 @@
              23 24 25 26 0 0 
              39 40 41 42 0 0 
              55 56 57 58 0 0 
-         257  258  259  260  261  262
-         263  264  265  266  267  268
-         269  270  271  272  273  274
-         275  276  277  278  279  280
-         281  282  283  284  285  286
-         287  288  289  290  291  292
+             257  258  259  260  261  262
+             263  264  265  266  267  268
+             269  270  271  272  273  274
+             275  276  277  278  279  280
+             281  282  283  284  285  286
+             287  288  289  290  291  292
+             
+             
+             293 294 297 298 299 300
+             309 310 313 314 315 316
+             325 326 329 330 331 332
+             341 342 345 346 347 348
+             357 358 361 362 363 364
+             373 374 377 378 379 380
+             389 390 393 394 395 396
+             405 406 409 410 411 412
+             421 422 423 424 425 426
+             437 438 439 440 441 442
+             453 454 455 456 457 458
+             469 470 471 472 473 474
+             485 486 487 488 489 490
+             501 502 503 504 505 506
+             427 428 429 430 0 0 
+             443 444 445 446 0 0 
+             459 460 461 462 0 0 
+             475 476 477 478 0 0 
+             431 432 433 434 295 296
+             447 448 449 450 311 312
+             463 464 465 466 327 328
+             479 480 481 482 343 344
+             495 496 497 498 359 360
+             511 512 513 514 375 376
+             527 528 529 530 391 392
+             543 544 545 546 407 408
+             301 302 303 304 713 714
+             317 318 319 320 729 730
+             333 334 335 336 745 746
+             349 350 351 352 519 520
+             365 366 367 368 535 536
+             381 382 383 384 798 798
+             517 518 520 521 522 523
+             533 534 536 537 538 539
+             397 398 399 400 401 402
+             413 414 415 416 417 418
+
              ))
- (tiles (image "/images/tiles/virtualreality-foreground.png")
+ (tiles (image "images/tiles/virtualreality-foreground.png")
+        (width  16)
+        (height 16)
         (colmap
          0    0    0    0    0    0    1    1    1    1    0    0    0    0    0    0
          0    1    1    1    1    0    1    0    0    1    0    0    0    0    0    0
@@ -57,7 +98,9 @@
          )
         )
 
- (tiles (image "/images/tiles/virtualreality-background.png")
+ (tiles (image "images/tiles/virtualreality-background.png")
+        (width  6)
+        (height 6)
         (colmap
          0 0 0 0 0 0
          0 0 0 0 0 0
@@ -73,6 +116,111 @@
          281  282  283  284  285  286
          287  288  289  290  291  292
          ))
+
+
+ (tiles (image "images/tiles/industrial.png")
+        (width  16)
+        (height 48)
+        (colmap
+         0    0    0    0    0    0    0    1    1    1    1    0    0    0    0    0
+         0    1    1    1    1    1    0    1    0    0    1    0    0    0    0    0
+         0    1    1    1    1    1    0    1    0    0    1    0    0    0    0    0
+         0    1    1    1    1    1    0    1    1    1    1    0    0    0    0    0
+         0    1    1    1    1    1    0    1    1    1    1    0    0    0    0    0
+         0    1    1    1    1    1    0    0    0    0    0    0    0    0    0    0
+         0    1    1    1    1    1    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    1    1    1    1    0    0    0    0    0    0    0    0    0    0    0
+         0    1    1    1    1    0    0    0    0    0    0    0    0    0    0    0
+         0    1    1    1    1    0    0    0    0    0    0    0    0    0    0    0
+         0    1    1    1    1    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    1    1    1    1    0    0    0    0    0    0
+         0    1    1    1    1    0    1    0    0    1    0    0    0    0    0    0
+         0    1    1    1    1    0    1    0    0    1    0    0    0    0    0    0
+         0    1    1    1    1    0    1    1    1    1    0    0    0    0    0    0
+         0    1    1    1    1    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    1    1    1    1    0    0    0    0    0    0
+         0    1    1    1    1    0    1    0    0    1    0    0    0    0    0    0
+         0    1    1    1    1    0    1    0    0    1    0    0    0    0    0    0
+         0    1    1    1    1    0    1    1    1    1    0    0    0    0    0    0
+         0    1    1    1    1    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0
+         0    0    0    0    0    0    0    0    0    0    0    0    0    0    0    0)
+        (ids
+         293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308
+         309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324
+         325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340
+         341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356
+         357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372
+         373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388
+         389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404
+         405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420
+         421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436
+         437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452
+         453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468
+         469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484
+         485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500
+         501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516
+         517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532
+         533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548
+         549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564
+         565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580
+         581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596
+         597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612
+         613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628
+         629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644
+         645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660
+         661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676
+         677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692
+         693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708
+         709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724
+         725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740
+         741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756
+         757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772
+         773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788
+         789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804
+         805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820
+         821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836
+         837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852
+         853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868
+         869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884
+         885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900
+         901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916
+         917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932
+         933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948
+         949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964
+         965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980
+         981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996
+         997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012
+         1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028
+         1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044
+         1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060
+         ))
+ 
  )
 
 ;; EOF ;;



From grumbel at berlios.de  Mon Aug  1 02:51:32 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 02:51:32 +0200
Subject: [Windstille-commit] r872 - in trunk/src: . display sprite2d
Message-ID: <200508010051.j710pWlR022062@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 02:51:12 +0200 (Mon, 01 Aug 2005)
New Revision: 872

Modified:
   trunk/src/display/scene_context.cpp
   trunk/src/nightvision.cpp
   trunk/src/sprite2d/sprite.cpp
Log:
- some bug fixes

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2005-08-01 00:46:51 UTC (rev 871)
+++ trunk/src/display/scene_context.cpp	2005-08-01 00:51:12 UTC (rev 872)
@@ -150,6 +150,8 @@
       }
     }
 
+  CL_Display::clear();
+
   if (impl->render_mask & COLORMAP)
     {
       impl->color.render();

Modified: trunk/src/nightvision.cpp
===================================================================
--- trunk/src/nightvision.cpp	2005-08-01 00:46:51 UTC (rev 871)
+++ trunk/src/nightvision.cpp	2005-08-01 00:51:12 UTC (rev 872)
@@ -114,7 +114,7 @@
       sc.highlight().push_modelview();
       sc.highlight().set_modelview(Matrix::identity());
       nightvision.set_alpha(0.5f);
-      nightvision.set_blend_func(blend_src_alpha, blend_one);
+      nightvision.set_blend_func(GL_SRC_ALPHA, GL_ONE);
       sc.highlight().draw(nightvision, Vector(0, 0), 10000);
       sc.highlight().pop_modelview();
     }

Modified: trunk/src/sprite2d/sprite.cpp
===================================================================
--- trunk/src/sprite2d/sprite.cpp	2005-08-01 00:46:51 UTC (rev 871)
+++ trunk/src/sprite2d/sprite.cpp	2005-08-01 00:51:12 UTC (rev 872)
@@ -141,7 +141,7 @@
 void
 Sprite::set_alpha(float alpha)
 {
-  this->alpha = alpha;
+  this->color.a = alpha;
 }
 
 float



From grumbel at berlios.de  Mon Aug  1 14:49:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 14:49:41 +0200
Subject: [Windstille-commit] r873 - in trunk/src: . glutil
Message-ID: <200508011249.j71CnfPa021616@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 14:49:33 +0200 (Mon, 01 Aug 2005)
New Revision: 873

Modified:
   trunk/src/glutil/texture.cpp
   trunk/src/glutil/texture.hpp
   trunk/src/nightvision.cpp
Log:
- fixed handling of non RGBA images

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-01 00:51:12 UTC (rev 872)
+++ trunk/src/glutil/texture.cpp	2005-08-01 12:49:33 UTC (rev 873)
@@ -70,7 +70,7 @@
   std::cout << "Filename: " << filename << " -> " << get_handle() << std::endl;
 }
 
-Texture::Texture(int width, int height)
+Texture::Texture(int width, int height, GLint format)
   : impl(new TextureImpl())
 {
   impl->width  = width;
@@ -80,7 +80,7 @@
   state.set_active(); 
   
   glBindTexture(GL_TEXTURE_2D, impl->handle);
-  glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA,
+  glTexImage2D(GL_TEXTURE_2D, 0, format, width, height, 0, GL_RGBA,
                GL_UNSIGNED_BYTE, 0);
 
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
@@ -95,7 +95,7 @@
   return (v & (v-1)) == 0;
 }
 
-Texture::Texture(SDL_Surface* image)
+Texture::Texture(SDL_Surface* image, GLint glformat)
   : impl(new TextureImpl())
 {
   impl->width  = image->w;
@@ -121,11 +121,25 @@
       if(image->w > maxt || image->h > maxt)
         throw std::runtime_error("Texture size not supported");
 
+      GLint sdl_format;
+      if (format->BytesPerPixel == 3)
+        {
+          sdl_format = GL_RGB;
+        }
+      else if (format->BytesPerPixel == 4)
+        {
+          sdl_format = GL_RGBA;
+        }
+      else
+        {
+          throw std::runtime_error("Texture: Image format not supported");
+        }
+
       glBindTexture(GL_TEXTURE_2D, impl->handle);
       glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
       glPixelStorei(GL_UNPACK_ROW_LENGTH, image->pitch/format->BytesPerPixel);
-      glTexImage2D(GL_TEXTURE_2D, 0, format->BytesPerPixel,
-                   image->w, image->h, 0, GL_RGBA,
+      glTexImage2D(GL_TEXTURE_2D, 0, glformat,
+                   image->w, image->h, 0, sdl_format,
                    GL_UNSIGNED_BYTE, image->pixels);
 
       assert_gl("creating texture");
@@ -172,6 +186,20 @@
   CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
   state.set_active(); 
 
+  GLint sdl_format;
+  if (image->format->BytesPerPixel == 3)
+    {
+      sdl_format = GL_RGB;
+    }
+  else if (image->format->BytesPerPixel == 4)
+    {
+      sdl_format = GL_RGBA;
+    }
+  else
+    {
+      throw std::runtime_error("Texture: Image format not supported");
+    }
+
   // FIXME: Add some checks here to make sure image has the right format 
   glBindTexture(GL_TEXTURE_2D, impl->handle);
   glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
@@ -179,7 +207,7 @@
                 image->pitch / image->format->BytesPerPixel);
 
   glTexSubImage2D(GL_TEXTURE_2D, 0, x, y,
-                  image->w, image->h, GL_RGBA, GL_UNSIGNED_BYTE,
+                  image->w, image->h, sdl_format, GL_UNSIGNED_BYTE,
                   image->pixels);
 }
 

Modified: trunk/src/glutil/texture.hpp
===================================================================
--- trunk/src/glutil/texture.hpp	2005-08-01 00:51:12 UTC (rev 872)
+++ trunk/src/glutil/texture.hpp	2005-08-01 12:49:33 UTC (rev 873)
@@ -47,12 +47,12 @@
    * Upload an SDL_Surface onto an OpenGL texture. The surface must have power
    * of 2 dimensions
    * */
-  explicit Texture(SDL_Surface* image);
+  explicit Texture(SDL_Surface* image, GLint format = GL_RGBA);
 
   /** 
    * Create an empty Texture with the given dimensions
    */
-  explicit Texture(int width, int height);
+  explicit Texture(int width, int height, GLint format = GL_RGBA);
 
   ~Texture();
 

Modified: trunk/src/nightvision.cpp
===================================================================
--- trunk/src/nightvision.cpp	2005-08-01 00:51:12 UTC (rev 872)
+++ trunk/src/nightvision.cpp	2005-08-01 12:49:33 UTC (rev 873)
@@ -104,7 +104,6 @@
           array->vertex(0, 600, 1.0f);
         }
 
-      //std::cout << "Drawing night" << std::endl;
       sc.light().draw(array);
     }
   sc.light().pop_modelview();



From grumbel at berlios.de  Mon Aug  1 16:42:32 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 16:42:32 +0200
Subject: [Windstille-commit] r874 - in trunk/data: . images/tiles levels
Message-ID: <200508011442.j71EgWFs007723@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 16:42:25 +0200 (Mon, 01 Aug 2005)
New Revision: 874

Added:
   trunk/data/images/tiles/bluestone.png
   trunk/data/levels/bluestone.wst
Modified:
   trunk/data/tiles.scm
Log:
- added new level

Added: trunk/data/images/tiles/bluestone.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/bluestone.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/levels/bluestone.wst
===================================================================
--- trunk/data/levels/bluestone.wst	2005-08-01 12:49:33 UTC (rev 873)
+++ trunk/data/levels/bluestone.wst	2005-08-01 14:42:25 UTC (rev 874)
@@ -0,0 +1,110 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (name   "")
+  (music  "")
+  (ambient-color .2 .2 .4)
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 120)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1093 1094 1133 1134 1135 1136 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1099 1100 0 0 0 0 1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 1189 1190 1191 1192 1193 1194 1193 1194 1193 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 1061 1062 
+      1109 1110 1149 1150 1151 1152 1113 1114 1113 1114 1111 1112 1113 1114 1149 1150 1151 1152 1113 1114 1115 1116 0 0 0 0 1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 1205 1206 1207 1208 1209 1210 1209 1210 1209 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 1077 1078 
+      1125 1126 1165 1166 1167 1168 1129 1130 1129 1130 1127 1128 1129 1130 1165 1166 1167 1168 1129 1130 1131 1132 0 0 0 0 1093 1094 1133 1134 1135 1136 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1099 1100 0 0 0 0 1157 1158 1159 1160 1161 1162 1071 1072 1095 1096 1097 1098 1095 1096 1097 1098 1097 1098 1069 1070 1163 1164 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 1061 1062 1103 1104 
+      1141 1142 1181 1182 1183 1184 1145 1146 1145 1146 1143 1144 1145 1146 1181 1182 1183 1184 1145 1146 1147 1148 0 0 0 0 1109 1110 1149 1150 1151 1152 1113 1114 1113 1114 1111 1112 1113 1114 1149 1150 1151 1152 1113 1114 1115 1116 0 0 0 0 1173 1174 1175 1176 1177 1178 1087 1088 1111 1112 1113 1114 1111 1112 1113 1114 1113 1114 1085 1086 1179 1180 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 1077 1078 1119 1120 
+      1157 1158 1159 1160 1161 1162 1161 1162 1161 1162 1159 1160 1161 1162 1159 1160 1161 1162 1161 1162 1163 1164 0 0 0 0 1125 1126 1165 1166 1167 1168 1129 1130 1129 1130 1127 1128 1129 1130 1165 1166 1167 1168 1129 1130 1131 1132 0 0 0 0 0 0 0 0 0 0 1157 1158 1071 1072 1095 1096 1097 1098 1097 1098 1069 1070 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1093 1094 1095 1096 
+      1173 1174 1175 1176 1177 1178 1177 1178 1177 1178 1175 1176 1177 1178 1175 1176 1177 1178 1177 1178 1179 1180 0 0 0 0 1141 1142 1181 1182 1183 1184 1145 1146 1145 1146 1143 1144 1145 1146 1181 1182 1183 1184 1145 1146 1147 1148 0 0 0 0 0 0 0 0 0 0 1173 1174 1087 1088 1111 1112 1113 1114 1113 1114 1085 1086 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1109 1110 1111 1112 
+      1067 1068 0 1067 1068 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1161 1162 1161 1162 1159 1160 1161 1162 1159 1160 1161 1162 1161 1162 1163 1164 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1161 1162 1163 1164 1180 0 0 0 1189 1190 1191 1192 1193 1194 1195 1196 0 0 0 0 1189 1190 1195 1196 0 0 0 0 0 0 1093 1094 1097 1098 
+      1083 1084 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1177 1178 1177 1178 1175 1176 1177 1178 1175 1176 1177 1178 1177 1178 1179 1180 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1177 1178 1179 1180 1180 0 0 0 1205 1206 1207 1208 1209 1210 1211 1212 0 0 0 0 1205 1206 1211 1212 0 0 0 0 0 0 1109 1110 1113 1114 
+      1101 1102 1067 1068 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1157 1158 1159 1160 1161 1162 1163 1164 0 0 0 0 1157 1158 1163 1164 0 0 0 0 0 0 1125 1126 1129 1130 
+      1117 1118 1083 1084 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1173 1174 1175 1176 1177 1178 1179 1180 0 0 0 0 1173 1174 1179 1180 0 0 0 0 0 0 1141 1142 1145 1146 
+      1097 1098 1101 1102 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1061 1062 1063 1064 1065 1066 1103 1104 1095 1096 
+      1113 1114 1117 1118 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1077 1078 1079 1080 1081 1082 1119 1120 1111 1112 
+      1095 1096 1097 1098 1101 1102 1063 1194 1191 1192 1193 1194 1191 1192 1193 1194 1193 1194 1195 1196 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1093 1094 1095 1096 1097 1098 1095 1096 1097 1098 
+      1111 1112 1113 1114 1117 1118 1079 1210 1207 1208 1209 1210 1207 1208 1209 1210 1209 1210 1211 1212 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1109 1110 1111 1112 1113 1114 1111 1112 1113 1114 
+      1095 1096 1097 1098 1097 1098 1097 1098 1095 1096 1097 1098 1133 1134 1135 1136 1097 1098 1101 1102 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1065 1066 1063 1064 1063 1064 1065 1066 1063 1064 1065 1066 1103 1104 1127 1128 1129 1130 1095 1096 1097 1098 
+      1111 1112 1113 1114 1113 1114 1113 1114 1111 1112 1113 1114 1149 1150 1151 1152 1113 1114 1117 1118 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1081 1082 1079 1080 1079 1080 1081 1082 1079 1080 1081 1082 1119 1120 1143 1144 1145 1146 1111 1112 1113 1114 
+      1127 1128 1129 1130 1129 1130 1129 1130 1127 1128 1129 1130 1165 1166 1167 1168 1129 1130 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 1095 1096 1097 1098 
+      1143 1144 1145 1146 1145 1146 1145 1146 1143 1144 1145 1146 1181 1182 1183 1184 1145 1146 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 1111 1112 1113 1114 
+     ))
+  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+ )
+
+;; EOF ;;

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2005-08-01 12:49:33 UTC (rev 873)
+++ trunk/data/tiles.scm	2005-08-01 14:42:25 UTC (rev 874)
@@ -1,61 +1,94 @@
 (windstille-tiles
  (tilegroup (name "Virtual Reality")
             (tiles
-             1 2 3 4 5 6
-             17 18 19 20 21 22
-             33 34 35 36 37 38
-             49 50 51 52 53 54
-             65 66 67 68 69 70
-             81 82 83 84 85 86
-             7 8 9 10 0 0 
-             23 24 25 26 0 0 
-             39 40 41 42 0 0 
-             55 56 57 58 0 0 
-             257  258  259  260  261  262
-             263  264  265  266  267  268
-             269  270  271  272  273  274
-             275  276  277  278  279  280
-             281  282  283  284  285  286
-             287  288  289  290  291  292
+             1 2 3 4 5 6 0 0
+             17 18 19 20 21 22 0 0
+             33 34 35 36 37 38 0 0
+             49 50 51 52 53 54 0 0
+             65 66 67 68 69 70 0 0
+             81 82 83 84 85 86 0 0
+             7 8 9 10 0 0  0 0
+             23 24 25 26 0 0  0 0
+             39 40 41 42 0 0  0 0
+             55 56 57 58 0 0  0 0
+             257  258  259  260  261  262 0 0
+             263  264  265  266  267  268 0 0
+             269  270  271  272  273  274 0 0
+             275  276  277  278  279  280 0 0
+             281  282  283  284  285  286 0 0
+             287  288  289  290  291  292 0 0
              
              
-             293 294 297 298 299 300
-             309 310 313 314 315 316
-             325 326 329 330 331 332
-             341 342 345 346 347 348
-             357 358 361 362 363 364
-             373 374 377 378 379 380
-             389 390 393 394 395 396
-             405 406 409 410 411 412
-             421 422 423 424 425 426
-             437 438 439 440 441 442
-             453 454 455 456 457 458
-             469 470 471 472 473 474
-             485 486 487 488 489 490
-             501 502 503 504 505 506
-             427 428 429 430 0 0 
-             443 444 445 446 0 0 
-             459 460 461 462 0 0 
-             475 476 477 478 0 0 
-             431 432 433 434 295 296
-             447 448 449 450 311 312
-             463 464 465 466 327 328
-             479 480 481 482 343 344
-             495 496 497 498 359 360
-             511 512 513 514 375 376
-             527 528 529 530 391 392
-             543 544 545 546 407 408
-             301 302 303 304 713 714
-             317 318 319 320 729 730
-             333 334 335 336 745 746
-             349 350 351 352 519 520
-             365 366 367 368 535 536
-             381 382 383 384 798 798
-             517 518 520 521 522 523
-             533 534 536 537 538 539
-             397 398 399 400 401 402
-             413 414 415 416 417 418
+             293 294 297 298 299 300 0 0
+             309 310 313 314 315 316 0 0
+             325 326 329 330 331 332 0 0
+             341 342 345 346 347 348 0 0
+             357 358 361 362 363 364 0 0
+             373 374 377 378 379 380 0 0
+             389 390 393 394 395 396 0 0
+             405 406 409 410 411 412 0 0
+             421 422 423 424 425 426 0 0
+             437 438 439 440 441 442 0 0
+             453 454 455 456 457 458 0 0
+             469 470 471 472 473 474 0 0
+             485 486 487 488 489 490 0 0
+             501 502 503 504 505 506 0 0
+             427 428 429 430 0   0 0 0
+             443 444 445 446 0   0  0 0
+             459 460 461 462 0   0  0 0
+             475 476 477 478 0   0  0 0
+             431 432 433 434 295 296 0 0
+             447 448 449 450 311 312 0 0
+             463 464 465 466 327 328 0 0
+             479 480 481 482 343 344 0 0
+             495 496 497 498 359 360 0 0
+             511 512 513 514 375 376 0 0
+             527 528 529 530 391 392 0 0
+             543 544 545 546 407 408 0 0
+             301 302 303 304 713 714 0 0
+             317 318 319 320 729 730 0 0
+             333 334 335 336 745 746 0 0
+             349 350 351 352 519 520 0 0
+             365 366 367 368 535 536 0 0
+             381 382 383 384 798 798 0 0
+             517 518 520 521 522 523 0 0
+             533 534 536 537 538 539 0 0
+             397 398 399 400 401 402 0 0
+             413 414 415 416 417 418 0 0
 
+             ;; Sort this properly...
+             1061 1062 1063 1064 1065 1066 1067 1068
+             1077 1078 1079 1080 1081 1082 1083 1084
+             1093 1094 1095 1096 1097 1098 1099 1100
+             1109 1110 1111 1112 1113 1114 1115 1116
+             1125 1126 1127 1128 1129 1130 1131 1132
+             1141 1142 1143 1144 1145 1146 1147 1148
+             1157 1158 1159 1160 1161 1162 1163 1164
+             1173 1174 1175 1176 1177 1178 1179 1180
+             1189 1190 1191 1192 1193 1194 1195 1196
+             1205 1206 1207 1208 1209 1210 1211 1212
+             1221 1222 1223 1224 1225 1226 1227 1228
+             1237 1238 1239 1240 1241 1242 1243 1244
+             1253 1254 1255 1256 1257 1258 1259 1260
+             1269 1270 1271 1272 1273 1274 1275 1276
+             1285 1286 1287 1288 1289 1290 1291 1292
+             1301 1302 1303 1304 1305 1306 1307 1308
+             1069 1070 1071 1072 1073 1074 1075 1076
+             1085 1086 1087 1088 1089 1090 1091 1092
+             1101 1102 1103 1104 1105 1106 1107 1108
+             1117 1118 1119 1120 1121 1122 1123 1124
+             1133 1134 1135 1136 1137 1138 1139 1140
+             1149 1150 1151 1152 1153 1154 1155 1156
+             1165 1166 1167 1168 1169 1170 1171 1172
+             1181 1182 1183 1184 1185 1186 1187 1188
+             1197 1198 1199 1200 1201 1202 1203 1204
+             1213 1214 1215 1216 1217 1218 1219 1220
+             1229 1230 1231 1232 1233 1234 1235 1236
+             1245 1246 1247 1248 1249 1250 1251 1252
+             1261 1262 1263 1264 1265 1266 1267 1268
+             1277 1278 1279 1280 1281 1282 1283 1284
+             1293 1294 1295 1296 1297 1298 1299 1300
+             1309 1310 1311 1312 1313 1314 1315 1316
              ))
  (tiles (image "images/tiles/virtualreality-foreground.png")
         (width  16)
@@ -220,7 +253,47 @@
          1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044
          1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060
          ))
- 
+
+ (tiles (image "images/tiles/bluestone.png")
+        (width  16)
+        (height 16)
+        (ids
+         1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076
+         1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092
+         1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108
+         1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124
+         1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140
+         1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156
+         1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172
+         1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188
+         1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204
+         1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220
+         1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236
+         1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252
+         1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268
+         1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284
+         1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300
+         1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316
+         )
+        (colmap
+         0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 
+         0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 
+         0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 
+         0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 
+         0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 
+         0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 
+         0 1 1 1 1 1 1 0 1 1 1 1 0 0 0 0 
+         0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+         0 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         )
+        )
  )
 
 ;; EOF ;;



From grumbel at berlios.de  Mon Aug  1 17:07:02 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 17:07:02 +0200
Subject: [Windstille-commit] r875 - in trunk/data: . images/tiles levels
Message-ID: <200508011507.j71F72tE010877@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 17:07:01 +0200 (Mon, 01 Aug 2005)
New Revision: 875

Added:
   trunk/data/images/tiles/forestground.png
   trunk/data/levels/forest.wst
Modified:
   trunk/data/tiles.scm
Log:
- added some more tiles

Added: trunk/data/images/tiles/forestground.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/forestground.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/levels/forest.wst
===================================================================
--- trunk/data/levels/forest.wst	2005-08-01 14:42:25 UTC (rev 874)
+++ trunk/data/levels/forest.wst	2005-08-01 15:07:01 UTC (rev 875)
@@ -0,0 +1,115 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (name   "")
+  (music  "")
+  (ambient-color .7 .7 .7)
+  (spawnpoint
+    (name "default")
+    (pos 300 150)
+  )
+  (objects
+
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1317 1318 1319 1320 1321 1322 0 0 1317 1318 1319 1320 1321 1322 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1333 1334 1335 1336 1337 1338 0 0 1333 1334 1335 1336 1337 1338 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1381 1382 1383 1384 1385 1386 0 0 1349 1350 1351 1352 1353 1354 0 0 0 0 0 0 0 0 0 0 1413 1414 1415 1416 1319 1320 1319 1320 1417 1418 1419 1420 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1391 1392 1393 1394 1395 1396 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1397 1398 1399 1400 1401 1402 0 0 1365 1366 1367 1368 1369 1370 0 0 0 0 0 0 0 0 0 0 1429 1430 1431 1432 1335 1336 1335 1336 1433 1434 1435 1436 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1407 1408 1409 1410 1411 1412 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1381 1382 1383 1384 1385 1386 0 0 0 0 0 0 1413 1414 1415 1416 1445 1446 1447 1448 1425 1426 1427 1428 1449 1450 1451 1452 1417 1418 1419 1420 0 0 0 0 0 0 0 0 0 0 0 0 1477 1478 1479 1480 1425 1426 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1397 1398 1399 1400 1401 1402 0 0 0 0 0 0 1429 1430 1431 1432 1461 1462 1463 1464 1441 1442 1443 1444 1465 1466 1467 1468 1433 1434 1435 1436 0 0 0 0 0 0 0 0 0 0 0 0 1493 1494 1495 1496 1441 1442 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1317 1318 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1445 1446 1447 1448 1425 1426 1427 1428 1457 1458 1459 1460 1425 1426 1427 1428 1449 1450 1451 1452 1423 1424 0 0 0 0 0 0 0 0 0 0 1509 1510 1511 1512 1457 1458 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1333 1334 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1461 1462 1463 1464 1441 1442 1443 1444 1473 1474 1475 1476 1441 1442 1443 1444 1465 1466 1467 1468 1439 1440 0 0 0 0 0 0 0 0 0 0 1525 1526 1527 1528 1473 1474 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1349 1350 1425 1426 1427 1428 1425 1426 1351 1352 1427 1428 1427 1428 1427 1428 1425 1426 1425 1426 1427 1428 1459 1460 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1455 1456 1417 1418 1419 1420 0 0 1413 1414 1415 1416 1453 1454 1425 1426 1427 1428 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1365 1366 1441 1442 1443 1444 1441 1442 1367 1368 1443 1444 1443 1444 1443 1444 1441 1442 1441 1442 1443 1444 1475 1476 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1471 1472 1433 1434 1435 1436 0 0 1429 1430 1431 1432 1469 1470 1441 1442 1443 1444 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1349 1350 1351 1352 1351 1352 1457 1458 1351 1352 1459 1460 1351 1352 1351 1352 1457 1458 1457 1458 1459 1460 1425 1426 1427 1428 1459 1460 1457 1458 1459 1460 1457 1458 1425 1426 1427 1428 1449 1450 1451 1452 1319 1320 1445 1446 1447 1448 1425 1426 1457 1458 1459 1460 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1365 1366 1367 1368 1367 1368 1473 1474 1367 1368 1475 1476 1367 1368 1367 1368 1473 1474 1473 1474 1475 1476 1441 1442 1443 1444 1475 1476 1473 1474 1475 1476 1473 1474 1441 1442 1443 1444 1465 1466 1467 1468 1335 1336 1461 1462 1463 1464 1441 1442 1473 1474 1475 1476 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1381 1382 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1325 1326 1457 1458 1425 1426 1427 1428 1459 1460 1425 1426 1427 1428 1425 1426 1427 1428 1457 1458 1459 1460 1425 1426 1427 1428 1351 1352 1425 1426 1427 1428 1457 1458 1459 1460 1425 1426 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 1397 1398 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1341 1342 1473 1474 1441 1442 1443 1444 1475 1476 1441 1442 1443 1444 1441 1442 1443 1444 1473 1474 1475 1476 1441 1442 1443 1444 1367 1368 1441 1442 1443 1444 1473 1474 1475 1476 1441 1442 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1381 1382 1325 1326 1457 1458 1425 1426 1427 1428 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1427 1428 1457 1458 1459 1460 1425 1426 1427 1428 1323 1324 1385 1386 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1397 1398 1341 1342 1473 1474 1441 1442 1443 1444 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1443 1444 1473 1474 1475 1476 1441 1442 1443 1444 1339 1340 1401 1402 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1381 1382 1325 1326 1457 1458 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1425 1426 1427 1428 1427 1428 1427 1428 1427 1428 1457 1458 1459 1460 1353 1354 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1397 1398 1341 1342 1473 1474 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1441 1442 1443 1444 1443 1444 1443 1444 1443 1444 1473 1474 1475 1476 1369 1370 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1319 1320 1357 1358 1425 1426 1427 1428 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1457 1458 1459 1460 1459 1460 1459 1460 1459 1460 1323 1324 1383 1384 1385 1386 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1335 1336 1373 1374 1441 1442 1443 1444 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1473 1474 1475 1476 1475 1476 1475 1476 1475 1476 1339 1340 1399 1400 1401 1402 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1351 1352 1457 1458 1459 1460 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1425 1426 1427 1428 1323 1324 1385 1386 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1367 1368 1473 1474 1475 1476 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1441 1442 1443 1444 1339 1340 1401 1402 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1383 1384 1325 1326 1425 1426 1427 1428 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 1457 1458 1459 1460 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1399 1400 1341 1342 1441 1442 1443 1444 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 1473 1474 1475 1476 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+ )
+
+;; EOF ;;

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2005-08-01 14:42:25 UTC (rev 874)
+++ trunk/data/tiles.scm	2005-08-01 15:07:01 UTC (rev 875)
@@ -89,6 +89,48 @@
              1277 1278 1279 1280 1281 1282 1283 1284
              1293 1294 1295 1296 1297 1298 1299 1300
              1309 1310 1311 1312 1313 1314 1315 1316
+
+      1317 1318 1319 1320 1321 1322 1327 1328
+      1333 1334 1335 1336 1337 1338 1343 1344
+      1349 1350 1351 1352 1353 1354 1329 1330
+      1365 1366 1367 1368 1369 1370 1345 1346
+      1381 1382 1383 1384 1385 1386 0 0
+      1397 1398 1399 1400 1401 1402 0 0
+      1391 1392 1393 1394 1395 1396 1419 1420
+      1407 1408 1409 1410 1411 1412 0 0
+      1413 1414 1415 1416 1417 1418 1419 1420
+      1429 1430 1431 1432 1433 1434 1435 1436
+      1445 1446 1447 1448 1449 1450 1451 1452
+      1461 1462 1463 1464 1465 1466 1467 1468
+      1477 1478 1479 1480 1481 1482 1483 1484
+      1493 1494 1495 1496 1497 1498 1499 1500
+      1509 1510 1511 1512 1513 1514 1515 1516
+      1525 1526 1527 1528 1529 1530 1531 1532
+      1323 1324 1325 1326 1549 1550 1551 1580
+      1339 1340 1341 1342 1565 1566 1567 1596
+      1355 1356 1357 1358 1327 1328 1329 1330
+      1371 1372 1373 1374 1343 1344 1345 1346
+      1485 1486 1487 1488 1425 1426 1427 1428
+      1501 1502 1503 1504 1441 1442 1443 1444
+      1517 1518 1519 1520 1457 1458 1459 1460
+      1583 1583 1583 1583 1473 1474 1475 1476
+      1489 1490 1491 1492 1421 1422 1423 1424
+      1505 1506 1507 1508 1437 1438 1439 1440
+      1521 1522 1523 1524 1453 1454 1455 1456
+      1537 1538 1539 1540 1469 1470 1471 1472
+      1553 1554 1555 1556    0 1359 1379 1361
+      1569 1570 1571 1572    0 1359 1379 1361
+         0 1359 1379    0 1359 1379 1361 1362 
+      1379 1361 1362    0 1359 1379 1361 1362
+      1359 1379 1361    0 1375 1376 1377 1378
+      1359 1379    0    0 1375 1376 1377 1378
+      1359 1379    0 1375 1376 1377 1378 1379
+         0 1359    0 1375 1376 1377 1378 1379 
+         0    0    0 1375 1376 1377 1378 1379 
+         0    0    0 1375 1376 1377 1378 1379
+         0    0 1375 1376 1377 1378 1379 1362
+         0    0 1375 1376 1377 1378 1379 1362
+
              ))
  (tiles (image "images/tiles/virtualreality-foreground.png")
         (width  16)
@@ -294,6 +336,55 @@
          0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
          )
         )
+
+ (tiles (image "images/tiles/forestground.png")
+        (width  16)
+        (height 20)
+        (ids 
+         1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332
+         1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348
+         1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364
+         1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380
+         1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396
+         1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412
+         1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428
+         1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444
+         1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460
+         1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476
+         1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492
+         1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508
+         1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524
+         1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540
+         1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556
+         1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572
+         1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 1585 1586 1587 1588
+         1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604
+         1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 1618 1619 1620
+         1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636
+         )
+        (colmap
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         ))
+
  )
 
-;; EOF ;;
+ ;; EOF ;;



From grumbel at berlios.de  Mon Aug  1 17:08:08 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 17:08:08 +0200
Subject: [Windstille-commit] r876 - trunk/data/images
Message-ID: <200508011508.j71F88FM011043@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 17:08:07 +0200 (Mon, 01 Aug 2005)
New Revision: 876

Modified:
   trunk/data/images/noise.png
Log:
- removed alpha channel, no longer needed

Modified: trunk/data/images/noise.png
===================================================================
(Binary files differ)



From grumbel at berlios.de  Mon Aug  1 17:08:33 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 17:08:33 +0200
Subject: [Windstille-commit] r877 - in trunk/data: levels scripts/newformat2
Message-ID: <200508011508.j71F8XhV011159@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 17:08:31 +0200 (Mon, 01 Aug 2005)
New Revision: 877

Modified:
   trunk/data/levels/newformat2.nut
   trunk/data/scripts/newformat2/frank.nut
Log:
- moved script

Modified: trunk/data/levels/newformat2.nut
===================================================================
--- trunk/data/levels/newformat2.nut	2005-08-01 15:08:07 UTC (rev 876)
+++ trunk/data/levels/newformat2.nut	2005-08-01 15:08:31 UTC (rev 877)
@@ -20,14 +20,6 @@
   player_flames.set_active(false);
 }
 
-/* play_sound("sounds/speech/vr_intro.ogg"); */
-dialog(TOP, "images/portrait.sprite", 
-       "<sin>Welcome</sin> to the <large>VR training program</large>. Here you " +
-       "will learn the <sin>basic manoeuvering</sin> abilities of <large>your</large> " +
-       "powersuit,<sleep> jumping,<sleep> running, <sleep> climbing<sleep> and shooting. " +
-       "We will start with <small>climbing</small>. See the <i>block</i> in front " +
-       "of you? Press <b>Right</b> and <b>Jump</b> to hang on the ledge.");
-
 Block0Sign.start_flash(0.7);
 Block0Sign.move_to(100, 370, 100, 2);
 

Modified: trunk/data/scripts/newformat2/frank.nut
===================================================================
--- trunk/data/scripts/newformat2/frank.nut	2005-08-01 15:08:07 UTC (rev 876)
+++ trunk/data/scripts/newformat2/frank.nut	2005-08-01 15:08:31 UTC (rev 877)
@@ -1,4 +1,12 @@
-if (like_frank)
-	dialog(0, "images/portrait.sprite", "You like me? Have a cookie.");
-else
-	dialog(0, "images/portrait.sprite", "So you don't like me huh? Go away.");
+
+/* play_sound("sounds/speech/vr_intro.ogg"); */
+println("Dislaying dialog");
+dialog(TOP, "images/portrait.sprite", 
+       "<sin>Welcome</sin> to the <large>VR training program</large>. Here you " +
+       "will learn the <sin>basic manoeuvering</sin> abilities of <large>your</large> " +
+       "powersuit,<sleep> jumping,<sleep> running, <sleep> climbing<sleep> and shooting. " +
+       "We will start with <small>climbing</small>. See the <i>block</i> in front " +
+       "of you? Press <b>Right</b> and <b>Jump</b> to hang on the ledge.");
+println("Dislaying done");
+
+/* EOF */



From grumbel at berlios.de  Mon Aug  1 21:30:46 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 21:30:46 +0200
Subject: [Windstille-commit] r878 - in trunk: data/images data/levels src src/display src/scripting
Message-ID: <200508011930.j71JUkEM016042@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 21:30:42 +0200 (Mon, 01 Aug 2005)
New Revision: 878

Added:
   trunk/data/images/streetlamp-highlight.png
   trunk/data/images/streetlamp-highlight.sprite
   trunk/data/images/streetlamp-light.png
   trunk/data/images/streetlamp-light.sprite
   trunk/data/images/streetlamp.png
   trunk/data/images/streetlamp.sprite
   trunk/data/images/streetlamp.xcf
Modified:
   trunk/data/levels/industrial.wst
   trunk/src/dialog_manager.cpp
   trunk/src/display/display.cpp
   trunk/src/player.cpp
   trunk/src/scriptable_object.cpp
   trunk/src/scriptable_object.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/sector.cpp
   trunk/src/sector.hpp
Log:
- added some lamps

Added: trunk/data/images/streetlamp-highlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/streetlamp-highlight.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/streetlamp-highlight.sprite
===================================================================
--- trunk/data/images/streetlamp-highlight.sprite	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/data/images/streetlamp-highlight.sprite	2005-08-01 19:30:42 UTC (rev 878)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "streetlamp-highlight.png")
+    (offset -111 -215)
+  )
+)

Added: trunk/data/images/streetlamp-light.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/streetlamp-light.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/streetlamp-light.sprite
===================================================================
--- trunk/data/images/streetlamp-light.sprite	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/data/images/streetlamp-light.sprite	2005-08-01 19:30:42 UTC (rev 878)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "streetlamp-light.png")
+    (offset -249 -264)
+  )
+)

Added: trunk/data/images/streetlamp.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/streetlamp.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/streetlamp.sprite
===================================================================
--- trunk/data/images/streetlamp.sprite	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/data/images/streetlamp.sprite	2005-08-01 19:30:42 UTC (rev 878)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "streetlamp.png")
+    (offset -18 -220)
+  )
+)

Added: trunk/data/images/streetlamp.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/streetlamp.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/data/levels/industrial.wst
===================================================================
--- trunk/data/levels/industrial.wst	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/data/levels/industrial.wst	2005-08-01 19:30:42 UTC (rev 878)
@@ -3,8 +3,34 @@
   (version 2)
   (name   "")
   (music  "")
-  (ambient-color .666 .666 .666)
+  (ambient-color .4 .4 .4)
   (objects
+    (scriptable-object
+      (name "Lamp")
+      (pos 256 736)
+      (sprite "images/streetlamp.sprite")
+      (highlight "images/streetlamp-highlight.sprite")
+      (light "images/streetlamp-light.sprite")
+      (active #t))
+
+    (scriptable-object
+      (name "Lamp")
+      (pos 768 736)
+      (sprite "images/streetlamp.sprite")
+      (highlight "images/streetlamp-highlight.sprite")
+      (light "images/streetlamp-light.sprite")
+      (active #t))
+
+
+    (scriptable-object
+      (name "Lamp")
+      (pos 1024 736)
+      (sprite "images/streetlamp.sprite")
+      (highlight "images/streetlamp-highlight.sprite")
+      (light "images/streetlamp-light.sprite")
+      (active #t))
+
+
   (tilemap (name "background") (width 100) (height 30) (z-pos 0)
     (data
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/dialog_manager.cpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -139,9 +139,9 @@
              pos.x + dialog_width,
              pos.y + 200);
 
-  VDisplay::fill_rounded_rect(rect, 32.0f,
-                              Color(0, 0, 0.4f, 0.8f));
-  VDisplay::draw_rounded_rect(rect, 32.0f,
+  VDisplay::fill_rounded_rect(rect, 16.0f,
+                              Color(0, 0, 0.3f, 0.5f));
+  VDisplay::draw_rounded_rect(rect, 16.0f,
                               Color(0.6f, 1.0f, 1.0f, 0.8f));
 
   portrait.draw(Vector(pos.x + portrait_border_x,

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/display/display.cpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -148,7 +148,6 @@
   glColor4f(color.r, color.g, color.b, color.a);
 
   int n = 4;
-  glLineWidth(4.0f);
   glBegin(GL_LINE_STRIP);
   for(int i = 0; i <= n; ++i)
     {
@@ -184,7 +183,6 @@
   glVertex2f(irect.left, irect.top - radius);
 
   glEnd();
-  glLineWidth(1.0f);
 }
 
 int

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/player.cpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -75,7 +75,7 @@
   light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   light.set_scale(4.0f);
 
-  sc.light().draw(light, pos, 100.0f);
+  //sc.light().draw(light, pos, 100.0f);
   sprite.draw(sc, pos, 100);
 
   Entity* obj = find_useable_entity();

Modified: trunk/src/scriptable_object.cpp
===================================================================
--- trunk/src/scriptable_object.cpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/scriptable_object.cpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -39,15 +39,18 @@
 { 
   std::string spritename;
   std::string highlightname;
+  std::string lightname;
   
   lisp::Properties props(lisp);
   props.get("name", name);
   props.get("sprite", spritename);
   props.get("highlight", highlightname);
+  props.get("light",   lightname);
   props.get("pos", pos);
   props.get("script", use_script);
   props.get("use-verb", use_verb);
   props.get("active", active);
+  props.get("flash-speed", flash_speed);
   props.print_unused_warnings("scriptable-object");
   
   if (use_verb != "")
@@ -59,6 +62,12 @@
   
   if (highlightname != "")
     highlight = Sprite(highlightname);
+
+  if (lightname != "")
+    light = Sprite(lightname);
+
+  highlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
     
   flash_delta = game_time;
   target_x = pos.x;
@@ -74,13 +83,17 @@
 {
   if (flash_speed != 0)
     flash();
- 
-  sc.color().draw(sprite, pos, 1);
+
+  if (sprite)
+    sc.color().draw(sprite, pos, 50);
   
-  if (highlight) {
-    sc.color().draw(highlight, pos, 2);
-    sc.light().draw(highlight, pos, 1);
-  }
+  if (highlight) 
+    sc.highlight().draw(highlight, pos, 50);
+
+  if (light) 
+    {
+      sc.light().draw(light, pos, 50);
+    }
 }
 
 void
@@ -89,6 +102,9 @@
   sprite.update(delta);
   if (highlight)
     highlight.update(delta);
+
+  if (light)
+    light.update(delta);
     
   if (target_speed > 0)
     move(delta);
@@ -186,11 +202,13 @@
   if(static_cast<int>(time/flash_speed) % 2 == 0) {    
     float alpha = fmodf(time, flash_speed) / flash_speed;
     // fade on
-    sprite.set_alpha(alpha);
+    highlight.set_alpha(alpha);
+    light.set_alpha(alpha);
   } else {
     float alpha = 1.0 - (fmodf(time, flash_speed) / flash_speed);
     // fade off
-    sprite.set_alpha(alpha);
+    highlight.set_alpha(alpha);
+    light.set_alpha(alpha);
   }
 }
 

Modified: trunk/src/scriptable_object.hpp
===================================================================
--- trunk/src/scriptable_object.hpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/scriptable_object.hpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -44,6 +44,7 @@
 {
 private:
   Sprite sprite;
+  Sprite light;
   Sprite highlight;
   
   //useable stuff

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/scripting/wrapper.cpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/scripting/wrapper.hpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/sector.cpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -332,4 +332,16 @@
   interactive_tilemap = t;
 }
 
+void
+Sector::set_ambient_light(const Color& color)
+{
+  ambient_light = color;
+}
+
+Color
+Sector::get_ambient_light() const
+{
+  return ambient_light;
+}
+
 /* EOF */

Modified: trunk/src/sector.hpp
===================================================================
--- trunk/src/sector.hpp	2005-08-01 15:08:31 UTC (rev 877)
+++ trunk/src/sector.hpp	2005-08-01 19:30:42 UTC (rev 878)
@@ -90,6 +90,9 @@
   int get_width () const;
   int get_height () const;
 
+  void set_ambient_light(const Color& color);
+  Color get_ambient_light() const;
+
   void add(GameObject*);
   void add_object(const std::string& name, const lisp::Lisp* lisp);
 



From grumbel at berlios.de  Mon Aug  1 22:13:26 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 22:13:26 +0200
Subject: [Windstille-commit] r879 - trunk/src/sprite3d
Message-ID: <200508012013.j71KDQup019113@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 22:13:19 +0200 (Mon, 01 Aug 2005)
New Revision: 879

Modified:
   trunk/src/sprite3d/sprite3d.cpp
   trunk/src/sprite3d/sprite3d.hpp
Log:
- added blend-func to sprite3d

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-08-01 19:30:42 UTC (rev 878)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-08-01 20:13:19 UTC (rev 879)
@@ -53,20 +53,9 @@
   next_frame.action  = 0;
   next_action.action = 0;
   blend_time = 0.0;
-}
 
-Sprite3D::Sprite3D(const Data* data)
-  : data(data), actions_switched(false)
-{
-  frame1.action = &data->actions[0];
-  frame1.frame = 0;
-  frame1.rot   = false;
-  frame1.speed = 1.0;
-  frame2       = frame1;
-  abort_at_frame.action = 0;
-  next_frame.action  = 0;
-  next_action.action = 0;
-  blend_time = 0.0;
+  blend_sfactor = GL_ONE;
+  blend_sfactor = GL_ZERO;
 }
 
 Sprite3D::~Sprite3D()
@@ -356,10 +345,19 @@
     glRotatef(180, 0, 1.0, 0);
   } 
 
-  glClear(GL_DEPTH_BUFFER_BIT);
-  glEnable(GL_DEPTH_TEST);
   glEnable(GL_TEXTURE_2D);
 
+  if (blend_sfactor != GL_ONE || blend_sfactor != GL_ZERO)
+    {
+      glEnable(GL_BLEND);
+      glBlendFunc(blend_sfactor, blend_dfactor);
+    }
+  else
+    {
+      glClear(GL_DEPTH_BUFFER_BIT);
+      glEnable(GL_DEPTH_TEST);
+    }
+
   glEnableClientState(GL_VERTEX_ARRAY);
   glEnableClientState(GL_NORMAL_ARRAY);
   glEnableClientState(GL_TEXTURE_COORD_ARRAY);  
@@ -379,7 +377,7 @@
     glBindTexture(GL_TEXTURE_2D, mesh.texture.get_handle());
     
     // blend between frame1 + frame2
-    float* verts = new float[mesh.vertex_count * 3];
+    float verts[mesh.vertex_count * 3];
     if(frame1.rot == frame2.rot) {
       for(uint16_t v = 0; v < mesh.vertex_count*3; ++v) {
         verts[v] 
@@ -407,7 +405,6 @@
     glTexCoordPointer(2, GL_FLOAT, 0, mesh.tex_coords);
     glDrawElements(GL_TRIANGLES, mesh.triangle_count * 3, GL_UNSIGNED_SHORT,
         mesh.vertex_indices);
-    delete[] verts;
   }
 
   assert_gl("rendering 3d sprite");      
@@ -421,4 +418,11 @@
   return data != 0;
 }
 
+void
+Sprite3D::set_blend_func(GLenum sfactor, GLenum dfactor)
+{
+  blend_sfactor = sfactor;
+  blend_dfactor = dfactor;
+}
+
 /* EOF */

Modified: trunk/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/src/sprite3d/sprite3d.hpp	2005-08-01 19:30:42 UTC (rev 878)
+++ trunk/src/sprite3d/sprite3d.hpp	2005-08-01 20:13:19 UTC (rev 879)
@@ -47,7 +47,6 @@
 
   Sprite3D();
   Sprite3D(const std::string& filename);
-  Sprite3D(const sprite3d::Data* data);
   ~Sprite3D();
 
   /**
@@ -108,6 +107,8 @@
 
   /** true if the Sprite3D is valid and usable, false if not */
   bool is_valid() const;
+
+  void set_blend_func(GLenum sfactor, GLenum dfactor);
   
 private:  
   friend class Sprite3DDrawingRequest;
@@ -138,6 +139,9 @@
   Frame next_frame;
   Frame next_action;
   Frame abort_at_frame;
+
+  GLenum blend_sfactor;
+  GLenum blend_dfactor;
 };
 
 #endif



From grumbel at berlios.de  Mon Aug  1 22:56:40 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 1 Aug 2005 22:56:40 +0200
Subject: [Windstille-commit] r880 - trunk/src/sprite3d
Message-ID: <200508012056.j71KueFV023889@sheep.berlios.de>

Author: grumbel
Date: 2005-08-01 22:56:36 +0200 (Mon, 01 Aug 2005)
New Revision: 880

Modified:
   trunk/src/sprite3d/sprite3d.cpp
Log:
- fixed blending

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-08-01 20:13:19 UTC (rev 879)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-08-01 20:56:36 UTC (rev 880)
@@ -55,7 +55,7 @@
   blend_time = 0.0;
 
   blend_sfactor = GL_ONE;
-  blend_sfactor = GL_ZERO;
+  blend_dfactor = GL_ZERO;
 }
 
 Sprite3D::~Sprite3D()
@@ -347,7 +347,7 @@
 
   glEnable(GL_TEXTURE_2D);
 
-  if (blend_sfactor != GL_ONE || blend_sfactor != GL_ZERO)
+  if (blend_sfactor != GL_ONE || blend_dfactor != GL_ZERO)
     {
       glEnable(GL_BLEND);
       glBlendFunc(blend_sfactor, blend_dfactor);



From grumbel at berlios.de  Tue Aug  2 13:31:45 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 2 Aug 2005 13:31:45 +0200
Subject: [Windstille-commit] r881 - trunk/data/scripts
Message-ID: <200508021131.j72BVjxb010560@sheep.berlios.de>

Author: grumbel
Date: 2005-08-02 13:31:41 +0200 (Tue, 02 Aug 2005)
New Revision: 881

Modified:
   trunk/data/scripts/windstille.nut
Log:
- fixed nightvision

Modified: trunk/data/scripts/windstille.nut
===================================================================
--- trunk/data/scripts/windstille.nut	2005-08-01 20:56:36 UTC (rev 880)
+++ trunk/data/scripts/windstille.nut	2005-08-02 11:31:41 UTC (rev 881)
@@ -7,7 +7,7 @@
   if (vargc == 1) 
     {
       if (::has_nightvision) {
-        ::activate_object("nightvision", vargv[0]); 
+        nightvision.set_active(vargv[0]); 
       } 
       else if (vargv[0]) 
         {



From grumbel at berlios.de  Tue Aug  2 16:58:02 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 2 Aug 2005 16:58:02 +0200
Subject: [Windstille-commit] r882 - trunk/src/sound
Message-ID: <200508021458.j72Ew28I002342@sheep.berlios.de>

Author: grumbel
Date: 2005-08-02 16:57:59 +0200 (Tue, 02 Aug 2005)
New Revision: 882

Modified:
   trunk/src/sound/sound_manager.cpp
   trunk/src/sound/sound_manager.hpp
   trunk/src/sound/sound_source.cpp
   trunk/src/sound/sound_source.hpp
Log:
- replaced CL_Vector with Vector

Modified: trunk/src/sound/sound_manager.cpp
===================================================================
--- trunk/src/sound/sound_manager.cpp	2005-08-02 11:31:41 UTC (rev 881)
+++ trunk/src/sound/sound_manager.cpp	2005-08-02 14:57:59 UTC (rev 882)
@@ -112,13 +112,13 @@
 }
 
 void
-SoundManager::play(const std::string& filename, const CL_Vector& pos)
+SoundManager::play(const std::string& filename, const Vector& pos)
 {
   try {
     SoundSource* source = create_sound_source(filename);
     if(source == 0)
       return;
-    if(pos == CL_Vector(-1, -1)) {
+    if(pos == Vector(-1, -1)) {
       alSourcef(source->source, AL_ROLLOFF_FACTOR, 0);
     } else {
       source->set_position(pos);
@@ -202,13 +202,13 @@
 }
 
 void
-SoundManager::set_listener_position(CL_Vector pos)
+SoundManager::set_listener_position(const Vector& pos)
 {
   alListener3f(AL_POSITION, pos.x, pos.y, 0);
 }
 
 void
-SoundManager::set_listener_velocity(CL_Vector vel)
+SoundManager::set_listener_velocity(const Vector& vel)
 {
   alListener3f(AL_VELOCITY, vel.x, vel.y, 0);
 }

Modified: trunk/src/sound/sound_manager.hpp
===================================================================
--- trunk/src/sound/sound_manager.hpp	2005-08-02 11:31:41 UTC (rev 881)
+++ trunk/src/sound/sound_manager.hpp	2005-08-02 14:57:59 UTC (rev 882)
@@ -8,7 +8,7 @@
 #include <AL/alc.h>
 #include <AL/al.h>
 
-#include <ClanLib/Core/Math/cl_vector.h>
+#include "math/vector.hpp"
 
 typedef void* SoundHandle;
 
@@ -34,10 +34,10 @@
   /**
    * Convenience function to simply play a sound at a given position.
    */
-  void play(const std::string& name, const CL_Vector& pos = CL_Vector(-1, -1, -1));
+  void play(const std::string& name, const Vector& pos = Vector(-1, -1));
 
-  void set_listener_position(CL_Vector position);
-  void set_listener_velocity(CL_Vector velocity);
+  void set_listener_position(const Vector& position);
+  void set_listener_velocity(const Vector& velocity);
 
   void enable_music(bool music_enabled);
   void play_music(const std::string& filename, bool fade = true);

Modified: trunk/src/sound/sound_source.cpp
===================================================================
--- trunk/src/sound/sound_source.cpp	2005-08-02 11:31:41 UTC (rev 881)
+++ trunk/src/sound/sound_source.cpp	2005-08-02 14:57:59 UTC (rev 882)
@@ -46,13 +46,13 @@
 }
 
 void
-SoundSource::set_position(CL_Vector position)
+SoundSource::set_position(const Vector& position)
 {
   alSource3f(source, AL_POSITION, position.x, position.y, 0);
 }
 
 void
-SoundSource::set_velocity(CL_Vector velocity)
+SoundSource::set_velocity(const Vector& velocity)
 {
   alSource3f(source, AL_VELOCITY, velocity.x, velocity.y, 0);
 }

Modified: trunk/src/sound/sound_source.hpp
===================================================================
--- trunk/src/sound/sound_source.hpp	2005-08-02 11:31:41 UTC (rev 881)
+++ trunk/src/sound/sound_source.hpp	2005-08-02 14:57:59 UTC (rev 882)
@@ -2,7 +2,7 @@
 #define __SOUND_SOURCE_H__
 
 #include <AL/al.h>
-#include <ClanLib/Core/Math/cl_vector.h>
+#include "math/vector.hpp"
 
 class SoundSource
 {
@@ -17,8 +17,8 @@
   void set_looping(bool looping);
   /// Set volume (0.0 is silent, 1.0 is normal)
   void set_gain(float gain);
-  void set_position(CL_Vector position);
-  void set_velocity(CL_Vector position);
+  void set_position(const Vector& position);
+  void set_velocity(const Vector& position);
   void set_reference_distance(float distance);
 
 protected:



From grumbel at berlios.de  Tue Aug  2 17:36:52 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 2 Aug 2005 17:36:52 +0200
Subject: [Windstille-commit] r883 - in trunk/src: . collision display math scripting
Message-ID: <200508021536.j72Faqvo005061@sheep.berlios.de>

Author: grumbel
Date: 2005-08-02 17:36:45 +0200 (Tue, 02 Aug 2005)
New Revision: 883

Added:
   trunk/src/math/origin.cpp
   trunk/src/math/origin.hpp
   trunk/src/math/point.hpp
   trunk/src/math/size.hpp
Modified:
   trunk/src/collision/collision_object.cpp
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/display/drawing_context.cpp
   trunk/src/elevator.cpp
   trunk/src/elevator.hpp
   trunk/src/graphic_context_state.cpp
   trunk/src/math/Jamfile
   trunk/src/math/rect.cpp
   trunk/src/math/rect.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/tile_packer.cpp
   trunk/src/ttf_font.cpp
Log:
- moved size, point and origin over from ClanLib

Modified: trunk/src/collision/collision_object.cpp
===================================================================
--- trunk/src/collision/collision_object.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/collision/collision_object.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -61,7 +61,7 @@
   Vector v = get_pos ();
   Rectf  r = primitive;
 
-  r += CL_Pointf (v.x, v.y);
+  r += v;
 
   VDisplay::fill_rect(r, Color(1.0f, 1.0f, 1.0f));
   

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/conversation.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -54,9 +54,9 @@
       int x = 100;
       int y = 200;
 
-      Rect rect(CL_Point(x - 20, y - 20 + Fonts::ttffont->get_height()/2 - 5),
-                CL_Size(300 + 20, // FIXME:
-                        (Fonts::ttffont->get_height() + 10) * choices.size() + 20));
+      Rect rect(Point(x - 20, y - 20 + Fonts::ttffont->get_height()/2 - 5),
+                Size(300 + 20, // FIXME:
+                     (Fonts::ttffont->get_height() + 10) * choices.size() + 20));
       
       VDisplay::fill_rect(rect, Color(0,0,0,0.5f));
       VDisplay::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.3f));

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/dialog_manager.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -61,7 +61,7 @@
   static const int portrait_width = 180;
   static const int portrait_height = 192;
 
-  CL_Point pos(0,0);
+  Point pos(0,0);
   if(alignment & LEFT) {
     pos.x = outer_border_x;
   } else if(alignment & RIGHT) {
@@ -72,8 +72,8 @@
       
   int text_width
     = dialog_width - portrait_height - portrait_border_x*2 - text_border_x;
-  Rect text_rect = Rect(CL_Point(pos.x + portrait_width + portrait_border_x*2, 0),
-                        CL_Size(500, 200)); // FIXME: use real bounding box calc
+  Rect text_rect = Rect(Point(pos.x + portrait_width + portrait_border_x*2, 0),
+                        Size(500, 200)); // FIXME: use real bounding box calc
   
   text_rect.bottom = text_rect.top + text_rect.get_height();
   text_rect.top    = pos.y + text_border_y;
@@ -92,12 +92,12 @@
   text_rect.bottom = text_rect.top + text_rect.get_height();
   text_rect.top = pos.y + text_border_y;
 
-  CL_Size dialog_size(dialog_width, dialog_height);
+  Size dialog_size(dialog_width, dialog_height);
 
 
   delete text_area;
-  text_area = new TextArea(Rect(CL_Point(text_rect.left, text_rect.top + Fonts::ttfdialog->get_height()),
-                                   CL_Size(text_width, 200)));
+  text_area = new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::ttfdialog->get_height()),
+                                Size(text_width, 200)));
   text_area->set_font(Fonts::ttfdialog);
   text_area->set_text(text);
 }
@@ -117,7 +117,7 @@
                                int(text_area->get_rect().get_height()
                                    + text_border_y * 2.0f));
 
-  CL_Point pos(0,0);
+  Point pos(0,0);
   if(alignment & LEFT) {
     pos.x = outer_border_x;
   } else if(alignment & RIGHT) {

Modified: trunk/src/display/drawing_context.cpp
===================================================================
--- trunk/src/display/drawing_context.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/display/drawing_context.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -268,7 +268,7 @@
   // FIXME: Need to check the modelview matrix
   return Rectf(Vector(modelview_stack.back()[12],
                       modelview_stack.back()[13]),
-               CL_Sizef(800, 600));
+               Sizef(800, 600));
 }
 
 /* EOF */

Modified: trunk/src/elevator.cpp
===================================================================
--- trunk/src/elevator.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/elevator.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -44,7 +44,7 @@
     throw std::runtime_error("No sprite name specified in Elevator");
 
   sprite = Sprite(spritename);
-  size  = CL_Size(128, 64);
+  size  = Size(128, 64);
   colobject = new CollisionObject(Rectf(Vector(0,0), size));
   Sector::current()->get_collision_engine()->add(colobject);
   colobject->set_pos(pos);

Modified: trunk/src/elevator.hpp
===================================================================
--- trunk/src/elevator.hpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/elevator.hpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -33,7 +33,7 @@
 class Elevator : public Entity
 {
 private:
-  CL_Sizef size;
+  Sizef size;
   CollisionObject* colobject;
   Sprite sprite;
 public:

Modified: trunk/src/graphic_context_state.cpp
===================================================================
--- trunk/src/graphic_context_state.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/graphic_context_state.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -112,8 +112,8 @@
 {
   return Rectf(Vector(-impl->offset.x,
                          -impl->offset.y),
-               CL_Sizef(get_width()  / impl->zoom,
-                        get_height() / impl->zoom));
+               Sizef(get_width()  / impl->zoom,
+                     get_height() / impl->zoom));
 }
 
 void

Modified: trunk/src/math/Jamfile
===================================================================
--- trunk/src/math/Jamfile	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/Jamfile	2005-08-02 15:36:45 UTC (rev 883)
@@ -6,6 +6,10 @@
           rect.cpp
           vector.hpp
           vector.cpp
+          size.hpp
+          origin.hpp
+          origin.cpp
+          point.hpp
 ;
 
 TRANSLATABLE_SOURCES = [ SearchSource $(sources) ] ;

Added: trunk/src/math/origin.cpp
===================================================================
--- trunk/src/math/origin.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/origin.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -0,0 +1,102 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+#include "math/origin.hpp"
+
+Point calc_origin(Origin origin, const Size &size)
+{
+	switch(origin)
+	{
+	case origin::top_left:
+	default:
+		return Point(0, 0);
+		break;
+	case origin::top_center:
+		return Point(size.width / 2, 0);
+		break;
+	case origin::top_right:
+		return Point(size.width, 0);
+		break;
+	case origin::center_left:
+		return Point(0, size.height / 2);
+		break;
+	case origin::center:
+		return Point(size.width / 2, size.height / 2);
+		break;
+	case origin::center_right:
+		return Point(size.width, size.height / 2);
+		break;
+	case origin::bottom_left:
+		return Point(0, size.height);
+		break;
+	case origin::bottom_center:
+		return Point(size.width / 2, size.height);
+		break;
+	case origin::bottom_right:
+		return Point(size.width, size.height);
+		break;
+	}
+}
+
+Vector calc_origin(Origin origin, const Sizef &size)
+{
+	switch(origin)
+	{
+	case origin::top_left:
+	default:
+		return Vector(0, 0);
+		break;
+	case origin::top_center:
+		return Vector(size.width / 2, 0);
+		break;
+	case origin::top_right:
+		return Vector(size.width, 0);
+		break;
+	case origin::center_left:
+		return Vector(0, size.height / 2);
+		break;
+	case origin::center:
+		return Vector(size.width / 2, size.height / 2);
+		break;
+	case origin::center_right:
+		return Vector(size.width, size.height / 2);
+		break;
+	case origin::bottom_left:
+		return Vector(0, size.height);
+		break;
+	case origin::bottom_center:
+		return Vector(size.width / 2, size.height);
+		break;
+	case origin::bottom_right:
+		return Vector(size.width, size.height);
+		break;
+	}
+}
+
+/* EOF */

Added: trunk/src/math/origin.hpp
===================================================================
--- trunk/src/math/origin.hpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/origin.hpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -0,0 +1,69 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanCore="Math"
+//! header=core.h
+
+#ifndef HEADER_MATH_ORIGIN_HPP
+#define HEADER_MATH_ORIGIN_HPP
+
+#include "size.hpp"
+#include "point.hpp"
+#include "vector.hpp"
+
+namespace origin {
+
+//: Alignment origins.
+//- !group=Core/Math!
+//- !header=core.h!
+enum Origin
+{
+	top_left,
+	top_center,
+	top_right,
+	center_left,
+	center,
+	center_right,
+	bottom_left,
+	bottom_center,
+	bottom_right
+};
+
+}
+
+typedef origin::Origin Origin;
+
+
+//: Returns the anchor point for the origin within the dimensions of the size structure.
+//- !group=Display/Display 2D!
+//- !header=display.h!
+Point  calc_origin(Origin origin, const Size &size);
+Vector calc_origin(Origin origin, const Sizef &size);
+
+#endif

Added: trunk/src/math/point.hpp
===================================================================
--- trunk/src/math/point.hpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/point.hpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -0,0 +1,146 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanCore="Math"
+//! header=core.h
+
+#ifndef HEADER_MATH_POINT_HPP
+#define HEADER_MATH_POINT_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include <cmath>
+#include "vector.hpp"
+
+class Vector;
+
+//: 2D (x,y) point structure.
+//- !group=Core/Math!
+//- !header=core.h!
+class Point
+{
+// Construction:
+public:
+	//: Constructs a point.
+	//param x: Initial x value.
+	//param y: Initial y value.
+	//param p: Point to use for initial values.
+	Point()
+	{ return; }
+
+	Point(int x, int y)
+	: x(x), y(y) { }
+
+	Point(const Point &p)
+	{ x = p.x; y = p.y; }
+
+	explicit Point(const Vector& p);
+
+// Operations:
+public:
+	//: Return a rotated version of this point.
+	//param hotspot: The point around which to rotate.
+	//param angle: The amount of degrees to rotate by, clockwise.
+	Point rotate(
+		const Point &hotspot,
+		float angle) const
+	{
+		//Move the hotspot to 0,0
+		Point r(x - hotspot.x, y - hotspot.y);
+		
+		//Do some Grumbel voodoo.
+
+		// Because MSVC sucks ass wrt standards compliance, it gets it own special function calls
+		#ifdef _MSC_VER
+		const float c = (float) sqrt((float)r.x*(float)r.x + (float)r.y*(float)r.y);
+		const float nw = (float)(atan2((float)r.y, (float)r.x) + ((angle + 180) * M_PI / 180));
+		r.x = (int)((sin(1.5 * M_PI - nw) * c) + 0.5) + hotspot.x;
+		r.y = -(int)((sin(nw) * c) + 0.5) + hotspot.y;
+		#else
+		const float c = (float) std::sqrt((float)r.x*(float)r.x + (float)r.y*(float)r.y);
+		const float nw = (float)(std::atan2((float)r.y, (float)r.x) + ((angle + 180) * M_PI / 180));
+ 		r.x = (int)((std::sin(1.5 * M_PI - nw) * c) + 0.5) + hotspot.x;
+		r.y = -(int)((std::sin(nw) * c) + 0.5) + hotspot.y;
+		#endif
+
+		return r;
+	}
+
+	//: Return the distance to another point.
+	//param Point &p: The other point.
+	int distance( const Point &p ) const
+	{
+		#ifdef _MSC_VER
+    	return int(sqrt(double((x-p.x)*(x-p.x) + (y-p.y)*(y-p.y))) + 0.5f);
+		#else
+    	return int(std::sqrt(double((x-p.x)*(x-p.x) + (y-p.y)*(y-p.y))) + 0.5f);
+		#endif
+	}
+	
+	//: Translate point.
+	Point &operator+=(const Point &p)
+	{ x += p.x; y += p.y; return *this; }
+
+	//: Translate point negatively.
+	Point &operator-=(const Point &p)
+	{ x -= p.x; y -= p.y; return *this; }
+	
+	//: Point + Point operator.
+	Point operator+(const Point &p) const
+	{ return Point(x + p.x, y + p.y); }
+
+	//: Point - Point operator.
+	Point operator-(const Point &p) const
+	{ return Point(x - p.x, y - p.y); }
+
+	//: Point == Point operator (deep compare)
+	bool operator==(const Point &p) const
+	{ return (x == p.x) && (y == p.y); }
+
+	//: Point != Point operator (deep compare)
+	bool operator!=(const Point &p) const
+	{ return (x != p.x) || (y != p.y); }
+
+// Attributes:
+public:
+	//: X coordinate.
+	int x;
+
+	//: Y coordinate.
+	int y;
+};
+
+inline Point::Point(const Vector& p)
+  : x(static_cast<int>(p.x)),
+    y(static_cast<int>(p.y))
+{}
+
+#endif

Modified: trunk/src/math/rect.cpp
===================================================================
--- trunk/src/math/rect.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/rect.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -27,21 +27,22 @@
 **    (if your name is missing here, please add it)
 */
 
-#include "rect.hpp"
 
 #include <cmath>
 
+#include "rect.hpp"
+
 #define cl_min(a,b) ((a < b) ? a : b)
 #define cl_max(a,b) ((a > b) ? a : b)
 
-Rect Rect::get_rot_bounds(const CL_Point &hotspot, float angle) const
+Rect Rect::get_rot_bounds(const Point &hotspot, float angle) const
 {
 	//Find the rotated positions of each corner
 	Rect retVal(*this);
-	CL_Point ul = CL_Point(retVal.left, retVal.top).rotate(hotspot, angle);
-	CL_Point ur = CL_Point(retVal.right, retVal.top).rotate(hotspot, angle);
-	CL_Point ll = CL_Point(retVal.left, retVal.bottom).rotate(hotspot, angle);
-	CL_Point lr = CL_Point(retVal.right, retVal.bottom).rotate(hotspot, angle);
+	Point ul = Point(retVal.left, retVal.top).rotate(hotspot, angle);
+	Point ur = Point(retVal.right, retVal.top).rotate(hotspot, angle);
+	Point ll = Point(retVal.left, retVal.bottom).rotate(hotspot, angle);
+	Point lr = Point(retVal.right, retVal.bottom).rotate(hotspot, angle);
 	
 	//Use the sidemost corners as the bounds of the new rectangle
 	retVal.left = cl_min(cl_min(ul.x, ur.x), cl_min(ll.x, lr.x));
@@ -52,35 +53,10 @@
 	return retVal;
 }
 
-Rect Rect::get_rot_bounds(CL_Origin origin, int x, int y, float angle) const
+Rect Rect::get_rot_bounds(Origin origin, int x, int y, float angle) const
 {
 	return get_rot_bounds(
-		CL_Point(left, top) + calc_origin(origin, get_size()) + CL_Point(x, y),
+		Point(left, top) + calc_origin(origin, get_size()) + Point(x, y),
 		angle);
 }
 
-Rectf Rectf::get_rot_bounds(const CL_Pointf &hotspot, float angle) const
-{
-	//Find the rotated positions of each corner
-	Rectf retVal(*this);
-	CL_Pointf ul = CL_Pointf(retVal.left, retVal.top).rotate(hotspot, angle);
-	CL_Pointf ur = CL_Pointf(retVal.right, retVal.top).rotate(hotspot, angle);
-	CL_Pointf ll = CL_Pointf(retVal.left, retVal.bottom).rotate(hotspot, angle);
-	CL_Pointf lr = CL_Pointf(retVal.right, retVal.bottom).rotate(hotspot, angle);
-	
-	//Use the sidemost corners as the bounds of the new rectangle
-	retVal.left = cl_min(cl_min(ul.x, ur.x), cl_min(ll.x, lr.x));
-	retVal.right = cl_max(cl_max(ul.x, ur.x), cl_max(ll.x, lr.x));
-	retVal.top = cl_min(cl_min(ul.y, ur.y), cl_min(ll.y, lr.y));
-	retVal.bottom = cl_max(cl_max(ul.y, ur.y), cl_max(ll.y, lr.y));
-	
-	return retVal;
-}
-
-Rectf Rectf::get_rot_bounds(CL_Origin origin, float x, float y, float angle) const
-{
-	return get_rot_bounds(
-		CL_Pointf(left, top) + calc_origin(origin, get_size()) + CL_Pointf(x, y),
-		angle);
-}
-

Modified: trunk/src/math/rect.hpp
===================================================================
--- trunk/src/math/rect.hpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/rect.hpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -30,11 +30,9 @@
 #ifndef __MATH_RECT_HPP__
 #define __MATH_RECT_HPP__
 
-#include <ClanLib/Core/Math/point.h>
-#include <ClanLib/Core/Math/size.h>
-#include <ClanLib/Core/Math/rect.h>
-#include <ClanLib/Core/Math/origin.h>
+#include "math/origin.hpp"
 #include "math/vector.hpp"
+#include "math/size.hpp"
 
 class Rectf;
 
@@ -57,12 +55,10 @@
 
 	explicit Rect(const Rectf& rect);
 
-	operator CL_Rectf() { return CL_Rectf(left, top, right, bottom); }
-
 	Rect(int new_left, int new_top, int new_right, int new_bottom)
 	{ left = new_left; top = new_top; right = new_right; bottom = new_bottom; }
 
-	Rect(const CL_Point &p, const CL_Size &size)
+	Rect(const Point &p, const Size &size)
 	{ left = p.x; top = p.y; right = left + size.width; bottom = top + size.height; }
 
 	Rect(const Rect &rect)
@@ -77,11 +73,11 @@
 	{ left -= r.left; top -= r.top; right -= r.right; bottom -= r.bottom; return *this; }
 	
 	//: Rect += Point operator.
-	Rect &operator+=(const CL_Point &p)
+	Rect &operator+=(const Point &p)
 	{ left += p.x; top += p.y; right += p.x; bottom += p.y; return *this; }
 
 	//: Rect -= Point operator.
-	Rect &operator-=(const CL_Point &p)
+	Rect &operator-=(const Point &p)
 	{ left -= p.x; top -= p.y; right -= p.x; bottom -= p.y; return *this; }
 
 	//: Rect + Rect operator.
@@ -93,11 +89,11 @@
 	{ return Rect(left - r.left, top - r.top, right - r.right, bottom - r.bottom); }
 
 	//: Rect + Point operator.
-	Rect operator+(const CL_Point &p) const
+	Rect operator+(const Point &p) const
 	{ return Rect(left + p.x, top + p.y, right + p.x, bottom + p.y); }
 
 	//: Rect - Point operator.
-	Rect operator-(const CL_Point &p) const
+	Rect operator-(const Point &p) const
 	{ return Rect(left - p.x, top - p.y, right - p.x, bottom - p.y); }
 
 	//: Rect == Rect operator.
@@ -129,10 +125,10 @@
 	int get_height() const { return bottom - top; }
 
 	//: Returns the size of the rectangle.
-	CL_Size get_size() const { return CL_Size(right - left, bottom - top); }
+	Size get_size() const { return Size(right - left, bottom - top); }
 	
 	//: Returns true if point is inside the rectangle.
-	bool is_inside(const CL_Point &p) const { return (p.x >= left && p.y >= top && p.x <= right && p.y <= bottom); }
+	bool is_inside(const Point &p) const { return (p.x >= left && p.y >= top && p.x <= right && p.y <= bottom); }
 
 	//: Returns true if rectangle passed is overlapping or inside this rectangle.
 	bool is_overlapped(const Rect &r) const 
@@ -145,13 +141,13 @@
 	//param origin: Determines the hotspot point within the rectangle
 	//param x, y: Offsets applied negatively to the hotspot point
 	//param angle: Angle to rotate in degrees.
-	Rect get_rot_bounds(const CL_Point &hotspot, float angle) const;
-	Rect get_rot_bounds(CL_Origin origin, int x, int y, float angle) const;
+	Rect get_rot_bounds(const Point &hotspot, float angle) const;
+	Rect get_rot_bounds(Origin origin, int x, int y, float angle) const;
 	
 //! Operations:
 public:
 	//: Sets the size of the rectangle, maintaining top/left position.
-	void set_size(const CL_Size &size)
+	void set_size(const Size &size)
 	{
 		right = left + size.width;
 		bottom = top + size.height;
@@ -189,9 +185,9 @@
 	//: Applies an origin and offset pair to this rectangle
 	//param origin: The new origin to adjust to from default upper-left position
 	//param x, y: Offsets applied negatively to each corner of the rectangle
-	void apply_alignment(CL_Origin origin, int x, int y)
+	void apply_alignment(Origin origin, int x, int y)
 	{
-		CL_Point offset = calc_origin(origin, get_size());
+		Point offset = calc_origin(origin, get_size());
 		offset.x -= x;
 		offset.y -= y;
 		
@@ -227,17 +223,12 @@
 	Rectf(float new_left, float new_top, float new_right, float new_bottom)
 	{ left = new_left; top = new_top; right = new_right; bottom = new_bottom; }
 
-	Rectf(const Vector &p, const CL_Sizef &size)
+	Rectf(const Vector &p, const Sizef &size)
 	{ left = p.x; top = p.y; right = left + size.width; bottom = top + size.height; }
 
-	Rectf(const CL_Pointf &p, const CL_Sizef &size)
-	{ left = p.x; top = p.y; right = left + size.width; bottom = top + size.height; }
-
 	Rectf(const Rectf &rect)
 	{ left = rect.left; top = rect.top; right = rect.right; bottom = rect.bottom; }
 
-	operator CL_Rectf() { return CL_Rectf(left, top, right, bottom); }
-	
    //: Rect += Rect operator.
 	Rectf &operator+=(const Rectf &r)
 	{ left += r.left; top += r.top; right += r.right; bottom += r.bottom; return *this; }
@@ -247,11 +238,11 @@
 	{ left -= r.left; top -= r.top; right -= r.right; bottom -= r.bottom; return *this; }
 	
 	//: Rect += Point operator.
-	Rectf &operator+=(const CL_Pointf &p)
+	Rectf &operator+=(const Vector &p)
 	{ left += p.x; top += p.y; right += p.x; bottom += p.y; return *this; }
 
 	//: Rect -= Point operator.
-	Rectf &operator-=(const CL_Pointf &p)
+	Rectf &operator-=(const Vector &p)
 	{ left -= p.x; top -= p.y; right -= p.x; bottom -= p.y; return *this; }
 
 	//: Rect + Rect operator.
@@ -263,11 +254,11 @@
 	{ return Rectf(left - r.left, top - r.top, right - r.right, bottom - r.bottom); }
 
 	//: Rect + Point operator.
-	Rectf operator+(const CL_Pointf &p) const
+	Rectf operator+(const Vector &p) const
 	{ return Rectf(left + p.x, top + p.y, right + p.x, bottom + p.y); }
 
 	//: Rect - Point operator.
-	Rectf operator-(const CL_Pointf &p) const
+	Rectf operator-(const Vector &p) const
 	{ return Rectf(left - p.x, top - p.y, right - p.x, bottom - p.y); }
 
 	//: Rect == Rect operator.
@@ -299,7 +290,7 @@
 	float get_height() const { return bottom - top; }
 
 	//: Returns the size of the rectangle.
-	CL_Sizef get_size() const { return CL_Sizef(right - left, bottom - top); }
+	Sizef get_size() const { return Sizef(right - left, bottom - top); }
 	
 	//: Returns true if point is inside the rectangle.
 	bool is_inside(const Vector &p) const { return (p.x >= left && p.y >= top && p.x <= right && p.y <= bottom); }
@@ -309,19 +300,11 @@
 	{
 		return (r.left < right && r.right > left && r.top < bottom && r.bottom > top);
 	}
-
-	//: Returns another Rectf containing a rotated version of this one.
-	//param hotspot: Point to rotate around.
-	//param origin: Determines the hotspot point within the rectangle
-	//param x, y: Offsets applied negatively to the hotspot point
-	//param angle: Angle to rotate in degrees.
-	Rectf get_rot_bounds(const CL_Pointf &hotspot, float angle) const;
-	Rectf get_rot_bounds(CL_Origin origin, float x, float y, float angle) const;
 	
 //! Operations:
 public:
 	//: Sets the size of the rectangle, maintaining top/left position.
-	void set_size(const CL_Size &size)
+	void set_size(const Size &size)
 	{
 		right = left + size.width;
 		bottom = top + size.height;
@@ -359,9 +342,9 @@
 	//: Applies an origin and offset pair to this rectangle
 	//param origin: The new origin to adjust to from default upper-left position
 	//param x, y: Offsets applied negatively to each corner of the rectangle
-	void apply_alignment(CL_Origin origin, float x, float y)
+	void apply_alignment(Origin origin, float x, float y)
 	{
-		CL_Pointf offset = calc_origin(origin, get_size());
+		Vector offset = calc_origin(origin, get_size());
 		offset.x -= x;
 		offset.y -= y;
 		

Added: trunk/src/math/size.hpp
===================================================================
--- trunk/src/math/size.hpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/math/size.hpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -0,0 +1,160 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanCore="Math"
+//! header=core.h
+
+#ifndef HEADER_MATH_SIZE_HPP
+#define HEADER_MATH_SIZE_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+class Sizef;
+
+//: 2D (width,height) size structure.
+//- !group=Core/Math!
+//- !header=core.h!
+class Size
+{
+//! Construction:
+public:
+	//: Constructs a size structure.
+	//param width: Initial width of size structure.
+	//param height: Initial height of size structure.
+	//param size: Size structure to construct this one from.
+	Size() { return; }
+
+	Size(int width, int height)
+	: width(width), height(height) { }
+
+	Size(const Size &s)
+	{ width = s.width; height = s.height; }
+
+	explicit Size(const Sizef& s);
+
+//! Attributes:
+public:
+	//: Size width.
+	int width;
+
+	//: Size height.
+	int height;
+
+//! Operations:
+public:
+	//: Size += Size operator.
+	Size &operator+=(const Size &s)
+	{ width += s.width; height += s.height; return *this; }
+
+	//: Size -= Size operator.
+	Size &operator-=(const Size &s)
+	{ width -= s.width; height -= s.height; return *this; }
+	
+	//: Size + Size operator.
+	Size operator+(const Size &s) const
+	{ return Size(width + s.width, height + s.height); }
+
+	//: Size - Size operator.
+	Size operator-(const Size &s) const
+	{ return Size(width - s.width, height - s.height); }
+
+	//: Size == Size operator (deep compare).
+	bool operator==(const Size &s) const
+	{ return (width == s.width) && (height == s.height); }
+
+	//: Size != Size operator (deep compare).
+	bool operator!=(const Size &s) const
+	{ return (width != s.width) || (height != s.height); }
+};
+
+//: 2D (width,height) floating point size structure.
+class Sizef
+{
+//! Construction:
+public:
+	//: Constructs a size structure.
+	//param width: Initial width of size structure.
+	//param height: Initial height of size structure.
+	//param size: Size structure to construct this one from.
+	Sizef() { return; }
+
+	Sizef(const Size& s) 
+		: width((float)s.width),
+		  height((float)s.height)
+	{}
+
+	Sizef(float width, float height)
+	: width(width), height(height) { }
+
+	Sizef(const Sizef &s)
+	{ width = s.width; height = s.height; }
+
+//! Attributes:
+public:
+	//: Size width.
+	float width;
+
+	//: Size height.
+	float height;
+
+//! Operations:
+public:
+	//: Size += Size operator.
+	Sizef &operator+=(const Sizef &s)
+	{ width += s.width; height += s.height; return *this; }
+
+	//: Size -= Size operator.
+	Sizef &operator-=(const Sizef &s)
+	{ width -= s.width; height -= s.height; return *this; }
+	
+	//: Size + Size operator.
+	Sizef operator+(const Sizef &s) const
+	{ return Sizef(width + s.width, height + s.height); }
+
+	//: Size - Size operator.
+	Sizef operator-(const Sizef &s) const
+	{ return Sizef(width - s.width, height - s.height); }
+
+	//: Size == Size operator (deep compare).
+	bool operator==(const Sizef &s) const
+	{ return (width == s.width) && (height == s.height); }
+
+	//: Size != Size operator (deep compare).
+	bool operator!=(const Size &s) const
+	{ return (width != s.width) || (height != s.height); }
+};
+
+inline Size::Size(const Sizef& s)
+	: width(static_cast<int>(s.width)),
+	  height(static_cast<int>(s.height))
+{}
+
+#endif

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/scripting/wrapper.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/scripting/wrapper.hpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/tile_packer.cpp
===================================================================
--- trunk/src/tile_packer.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/tile_packer.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -104,8 +104,8 @@
 
   Rectf rect(Vector(static_cast<float>(impl->x_pos+1)/impl->width, 
                     static_cast<float>(impl->y_pos+1)/impl->height), 
-             CL_Sizef(static_cast<float>(TILE_RESOLUTION)/impl->width, 
-                      static_cast<float>(TILE_RESOLUTION)/impl->height));
+             Sizef(static_cast<float>(TILE_RESOLUTION)/impl->width, 
+                   static_cast<float>(TILE_RESOLUTION)/impl->height));
 
   // we move by TILE_RESOLUTION+1 to avoid tiles bleeding into each other
   // when blending

Modified: trunk/src/ttf_font.cpp
===================================================================
--- trunk/src/ttf_font.cpp	2005-08-02 14:57:59 UTC (rev 882)
+++ trunk/src/ttf_font.cpp	2005-08-02 15:36:45 UTC (rev 883)
@@ -147,8 +147,8 @@
       generate_border(pixelbuffer, x_pos, y_pos, 
                       face->glyph->bitmap.width, face->glyph->bitmap.rows);
 
-      Rect pos(CL_Point(face->glyph->bitmap_left,  -face->glyph->bitmap_top), 
-               CL_Size (face->glyph->bitmap.width, face->glyph->bitmap.rows));
+      Rect pos(Point(face->glyph->bitmap_left,  -face->glyph->bitmap_top), 
+               Size (face->glyph->bitmap.width, face->glyph->bitmap.rows));
 
       Rectf uv(x_pos/float(pixelbuffer->w),
                y_pos/float(pixelbuffer->h),



From grumbel at berlios.de  Tue Aug  2 17:47:37 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 2 Aug 2005 17:47:37 +0200
Subject: [Windstille-commit] r884 - in trunk/src: . badguy collision scripting
Message-ID: <200508021547.j72Flbt1006118@sheep.berlios.de>

Author: grumbel
Date: 2005-08-02 17:47:36 +0200 (Tue, 02 Aug 2005)
New Revision: 884

Modified:
   trunk/src/badguy/hedgehog.cpp
   trunk/src/blitter.hpp
   trunk/src/bomb.hpp
   trunk/src/collision/collision_test.hpp
   trunk/src/entity.hpp
   trunk/src/fonts.hpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/globals.hpp
   trunk/src/nightvision.cpp
   trunk/src/player.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/tile_factory.cpp
   trunk/src/tile_map.hpp
   trunk/src/trigger.hpp
   trunk/src/ttf_font.hpp
   trunk/src/view.cpp
   trunk/src/view.hpp
Log:
- removed some no longer needed clanlib includes
- fixed some blend_func bugs

Modified: trunk/src/badguy/hedgehog.cpp
===================================================================
--- trunk/src/badguy/hedgehog.cpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/badguy/hedgehog.cpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -42,8 +42,8 @@
   
   direction_left = false;
   state = WALKING;
-  light.set_blend_func(blend_src_alpha, blend_one);
-  highlight.set_blend_func(blend_src_alpha, blend_one);
+  light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  highlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
 }
 
 Hedgehog::~Hedgehog()

Modified: trunk/src/blitter.hpp
===================================================================
--- trunk/src/blitter.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/blitter.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -21,7 +21,6 @@
 #define HEADER_BLITTER_HXX
 
 #include <SDL.h>
-#include <ClanLib/Display/pixel_buffer.h>
 
 /** Duplicate all the edge pixel of the given rectangle to the outside
     of the rectangle, thus creating a border around the given

Modified: trunk/src/bomb.hpp
===================================================================
--- trunk/src/bomb.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/bomb.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -25,7 +25,6 @@
 #ifndef HEADER_BOMB_HXX
 #define HEADER_BOMB_HXX
 
-#include <ClanLib/Core/Math/point.h>
 #include "sprite2d/sprite.hpp"
 #include "game_object.hpp"
 

Modified: trunk/src/collision/collision_test.hpp
===================================================================
--- trunk/src/collision/collision_test.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/collision/collision_test.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -25,7 +25,6 @@
 #define MAXF 100000.0f
 
 #include <iostream>
-#include <ClanLib/Core/Math/vector2.h>
 
 struct SweepResult
 {

Modified: trunk/src/entity.hpp
===================================================================
--- trunk/src/entity.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/entity.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -26,7 +26,6 @@
 #ifndef HEADER_ENTITY_HXX
 #define HEADER_ENTITY_HXX
 
-#include <ClanLib/Display/sprite.h>
 #include "math/vector.hpp"
 #include "game_object.hpp"
 #include "collision/collision_object.hpp"

Modified: trunk/src/fonts.hpp
===================================================================
--- trunk/src/fonts.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/fonts.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -20,7 +20,6 @@
 #ifndef HEADER_FONTS_HXX
 #define HEADER_FONTS_HXX
 
-#include <ClanLib/Display/font.h>
 #include "ttf_font.hpp"
 
 namespace Fonts {

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/game_session.cpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -19,6 +19,7 @@
 
 #include <math.h>
 #include <ClanLib/gl.h>
+#include <ClanLib/display.h>
 #include <sstream>
 #include <stdarg.h>
 

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/game_session.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -21,8 +21,6 @@
 #define GAME_SESSION_HXX
 
 #include <string>
-#include <ClanLib/Display/sprite.h>
-#include <ClanLib/Display/font.h>
 #include <ClanLib/Signals/slot_container.h>
 #include "display/scene_context.hpp"
 #include "console.hpp"

Modified: trunk/src/globals.hpp
===================================================================
--- trunk/src/globals.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/globals.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -21,7 +21,6 @@
 #define GLOBALS_HXX
 
 #include <string>
-#include <ClanLib/Core/Resources/resource_manager.h>
 
 typedef enum { WEST, EAST} Direction;
 
@@ -33,8 +32,6 @@
 /** datadir => /usr/local/share/games/windstille/ */
 extern std::string datadir;
 
-extern CL_ResourceManager* resources;
-
 extern float text_speed;
 extern float game_speed;
 extern bool sound_disabled;

Modified: trunk/src/nightvision.cpp
===================================================================
--- trunk/src/nightvision.cpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/nightvision.cpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -55,7 +55,7 @@
   if (1)
     {
       nightvision.set_alpha(1.0f);
-      nightvision.set_blend_func(blend_one, blend_zero);
+      nightvision.set_blend_func(GL_ONE, GL_ZERO);
       sc.light().draw(nightvision, Vector(0, 0), 10000);
     }
 

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/player.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -21,8 +21,6 @@
 #define PLAYER_HXX
 
 #include <ClanLib/core.h>
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 
 #include "sprite2d/sprite.hpp"
 #include "input/controller.hpp"

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/scripting/wrapper.cpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/scripting/wrapper.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/tile_factory.cpp
===================================================================
--- trunk/src/tile_factory.cpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/tile_factory.cpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -40,8 +40,6 @@
 #include "glutil/texture.hpp"
 #include "physfs/physfs_sdl.hpp"
 
-extern CL_ResourceManager* resources;
-
 TileFactory* TileFactory::current_ = 0;
 
 std::string TileFactory::tile_def_file = "tiles.scm";

Modified: trunk/src/tile_map.hpp
===================================================================
--- trunk/src/tile_map.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/tile_map.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -20,8 +20,6 @@
 #ifndef TILEMAP_HXX
 #define TILEMAP_HXX
 
-#include <ClanLib/core.h>
-#include <ClanLib/display.h>
 #include <string>
 
 #include "globals.hpp"

Modified: trunk/src/trigger.hpp
===================================================================
--- trunk/src/trigger.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/trigger.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -21,7 +21,6 @@
 #define HEADER_TRIGGER_HXX
 
 #include <vector>
-#include <ClanLib/Core/Math/rect.h>
 #include "game_object.hpp"
 
 /** */

Modified: trunk/src/ttf_font.hpp
===================================================================
--- trunk/src/ttf_font.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/ttf_font.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -26,8 +26,6 @@
 #ifndef HEADER_TTF_FONT_HXX
 #define HEADER_TTF_FONT_HXX
 
-#include <ClanLib/Core/Math/rect.h>
-#include <ClanLib/GL/opengl_surface.h>
 #include <string>
 #include <GL/gl.h>
 #include "color.hpp"

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/view.cpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -17,6 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include <ClanLib/display.h>
 #include "display/display.hpp"
 #include "player.hpp"
 #include "sector.hpp"

Modified: trunk/src/view.hpp
===================================================================
--- trunk/src/view.hpp	2005-08-02 15:36:45 UTC (rev 883)
+++ trunk/src/view.hpp	2005-08-02 15:47:36 UTC (rev 884)
@@ -20,8 +20,6 @@
 #ifndef HEADER_VIEW_HXX
 #define HEADER_VIEW_HXX
 
-#include <ClanLib/Core/Math/rect.h>
-#include <ClanLib/Core/Math/cl_vector.h>
 #include "camera.hpp"
 #include "graphic_context_state.hpp"
 #include "math/vector.hpp"



From grumbel at berlios.de  Tue Aug  2 20:39:20 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 2 Aug 2005 20:39:20 +0200
Subject: [Windstille-commit] r885 - in trunk: data/3dsprites src src/badguy src/scripting src/sprite3d
Message-ID: <200508021839.j72IdKKE009507@sheep.berlios.de>

Author: grumbel
Date: 2005-08-02 20:39:17 +0200 (Tue, 02 Aug 2005)
New Revision: 885

Added:
   trunk/data/3dsprites/vrdummy.wsprite
   trunk/data/3dsprites/vrdummytexture.png
   trunk/src/badguy/vrdummy.cpp
   trunk/src/badguy/vrdummy.hpp
Modified:
   trunk/src/badguy/Jamfile
   trunk/src/character.cpp
   trunk/src/player.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/sector.cpp
   trunk/src/sprite3d/sprite3d.cpp
   trunk/src/sprite3d/sprite3d.hpp
   trunk/src/test_object.cpp
Log:
- added VRDummy

Added: trunk/data/3dsprites/vrdummy.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/vrdummy.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/vrdummytexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/vrdummytexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/badguy/Jamfile
===================================================================
--- trunk/src/badguy/Jamfile	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/badguy/Jamfile	2005-08-02 18:39:17 UTC (rev 885)
@@ -7,6 +7,8 @@
   hedgehog.hpp
   spider_mine.cpp
   spider_mine.hpp
+  vrdummy.hpp
+  vrdummy.cpp
 ;
 
 TRANSLATABLE_SOURCES += [ SearchSource $(sources) ] ;

Added: trunk/src/badguy/vrdummy.cpp
===================================================================
--- trunk/src/badguy/vrdummy.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/badguy/vrdummy.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -0,0 +1,87 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "lisp/properties.hpp"
+#include "random.hpp"
+#include "windstille_getters.hpp"
+#include "vrdummy.hpp"
+
+VRDummy::VRDummy(const lisp::Lisp* lisp)
+{
+  lisp::Properties props(lisp);
+  props.get("name", name);
+  props.get("pos",  pos);
+  props.print_unused_warnings("VRDummy");
+  
+  sprite = Sprite3D("3dsprites/vrdummy.wsprite");
+  rotation = 0;
+
+  highlight = Sprite("images/hedgehog_highlight.sprite");
+  highlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  
+  jump_time = 0;
+}
+
+VRDummy::~VRDummy()
+{
+  
+}
+
+void
+VRDummy::draw(SceneContext& sc)
+{
+  sc.highlight().push_modelview();
+  sc.highlight().translate(pos.x, pos.y);
+  sc.highlight().rotate(rotation, 0.0f, 1.0f, 0.0f);
+  sprite.draw(sc.highlight(), Vector(0, 0), 1200.0f);
+  sc.highlight().pop_modelview();
+
+  sc.highlight().draw(highlight, pos, 1500.0f);
+}
+
+void
+VRDummy::update(float delta)
+{
+  sprite.update(delta);
+  rotation += delta * 90.0f;
+  jump_time += delta;
+  
+  if (jump_time >= 1.0f && velocity == Vector(0, 0)) 
+    {
+      velocity = Vector(rnd.drand(-300.0f, 300.0f),
+                        rnd.drand(-300.0f, 300.0f));
+    }
+
+  if (jump_time >= 1.5f)
+    {
+      jump_time = 0.0f;
+      
+      velocity = Vector(0, 0);
+    }
+
+  pos += velocity * delta;
+}
+
+/* EOF */

Added: trunk/src/badguy/vrdummy.hpp
===================================================================
--- trunk/src/badguy/vrdummy.hpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/badguy/vrdummy.hpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -0,0 +1,53 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_BADYGUY_VRDUMMY_HPP
+#define HEADER_BADYGUY_VRDUMMY_HPP
+
+#include "lisp/lisp.hpp"
+#include "sprite3d/sprite3d.hpp"
+#include "sprite2d/sprite.hpp"
+#include "entity.hpp"
+
+/** */
+class VRDummy : public Entity
+{
+private:
+  Sprite3D sprite;
+  Sprite   highlight;
+
+  float rotation;
+  float jump_time;
+public:
+  VRDummy(const lisp::Lisp* lisp);
+  ~VRDummy();
+
+  void draw(SceneContext& gc);
+  void update(float delta);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/character.cpp
===================================================================
--- trunk/src/character.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/character.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -58,9 +58,9 @@
 }
 
 void
-Character::draw (SceneContext& gc)
+Character::draw (SceneContext& sc)
 {
-  sprite.draw(gc, pos, 100);
+  sprite.draw(sc.color(), pos, 100);
 }
 
 void

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/player.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -76,7 +76,7 @@
   light.set_scale(4.0f);
 
   //sc.light().draw(light, pos, 100.0f);
-  sprite.draw(sc, pos, 100);
+  sprite.draw(sc.color(), pos, 100);
 
   Entity* obj = find_useable_entity();
   if (obj)

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/scripting/wrapper.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/scripting/wrapper.hpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/sector.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -31,6 +31,7 @@
 #include "trigger.hpp"
 #include "test_object.hpp"
 #include "sector.hpp"
+#include "badguy/vrdummy.hpp"
 #include "spawnpoint.hpp"
 #include "sound/sound_manager.hpp"
 #include "script_manager.hpp"
@@ -154,6 +155,8 @@
     add(new ParticleSystem(lisp));
   } else if(name == "scriptable-object") {    
     add(new ScriptableObject(lisp));
+  } else if (name == "vrdummy") {
+    add(new VRDummy(lisp));
   } else {
     std::cout << "Skipping unknown Object: " << name << "\n";
   }

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -319,15 +319,15 @@
 }
 
 void
-Sprite3D::draw(SceneContext& sc, const Vector& pos, float z_pos) const
+Sprite3D::draw(DrawingContext& dc, const Vector& pos, float z_pos) const
 {
-  sc.color().draw(new Sprite3DDrawingRequest(this, pos, z_pos, sc.color().get_modelview()));
+  dc.draw(new Sprite3DDrawingRequest(this, pos, z_pos, dc.get_modelview()));
 }
 
 void
-Sprite3D::draw(SceneContext& sc, const Matrix& matrix, float z_pos) const
+Sprite3D::draw(DrawingContext& dc, const Matrix& matrix, float z_pos) const
 {
-  sc.color().draw(new Sprite3DDrawingRequest(this, Vector(0, 0), 0.0f, sc.color().get_modelview()));
+  dc.draw(new Sprite3DDrawingRequest(this, Vector(0, 0), 0.0f, dc.get_modelview()));
 }
 
 void

Modified: trunk/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/src/sprite3d/sprite3d.hpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/sprite3d/sprite3d.hpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -26,7 +26,7 @@
 #include "math/matrix.hpp"
 #include "sprite3d/data.hpp"
 
-class SceneContext;
+class DrawingContext;
 
 namespace sprite3d {
 
@@ -53,8 +53,8 @@
    * You should call this every frame
    */
   void update(float elapsed_time);
-  void draw(SceneContext& sc, const Vector& pos, float z_pos) const;
-  void draw(SceneContext& sc, const Matrix& matrix, float z_pos) const;
+  void draw(DrawingContext& sc, const Vector& pos, float z_pos) const;
+  void draw(DrawingContext& sc, const Matrix& matrix, float z_pos) const;
   
   /**
    * Changes action (after the currently shown animation frame)

Modified: trunk/src/test_object.cpp
===================================================================
--- trunk/src/test_object.cpp	2005-08-02 15:47:36 UTC (rev 884)
+++ trunk/src/test_object.cpp	2005-08-02 18:39:17 UTC (rev 885)
@@ -27,13 +27,13 @@
 }
 
 void
-TestObject::draw(SceneContext& context)
+TestObject::draw(SceneContext& sc)
 {
-  sprite.draw(context, pos, 100);
+  sprite.draw(sc.color(), pos, 100);
   for(std::vector<AttachedSprite>::iterator i = attached_sprites.begin();
       i != attached_sprites.end(); ++i) {
     Matrix mat = sprite.get_attachement_point_matrix(i->attachpoint);
-    i->sprite.draw(context, mat, 100);
+    i->sprite.draw(sc.color(), mat, 100);
   }                                                                        
 }
 



From grumbel at berlios.de  Tue Aug  2 21:54:45 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 2 Aug 2005 21:54:45 +0200
Subject: [Windstille-commit] r886 - trunk/src
Message-ID: <200508021954.j72Jsjub024519@sheep.berlios.de>

Author: grumbel
Date: 2005-08-02 21:54:44 +0200 (Tue, 02 Aug 2005)
New Revision: 886

Modified:
   trunk/src/character.cpp
Log:
- fixed exception error message

Modified: trunk/src/character.cpp
===================================================================
--- trunk/src/character.cpp	2005-08-02 18:39:17 UTC (rev 885)
+++ trunk/src/character.cpp	2005-08-02 19:54:44 UTC (rev 886)
@@ -73,7 +73,7 @@
   try 
     {
       script_manager->run_script_file(filename);
-    } catch (std::exception e) {
+    } catch (std::exception& e) {
       console << e.what() << std::endl;
     }
 }



From grumbel at berlios.de  Wed Aug  3 17:00:23 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 3 Aug 2005 17:00:23 +0200
Subject: [Windstille-commit] r887 - in trunk/data: . images/tiles levels
Message-ID: <200508031500.j73F0N4P009960@sheep.berlios.de>

Author: grumbel
Date: 2005-08-03 17:00:17 +0200 (Wed, 03 Aug 2005)
New Revision: 887

Added:
   trunk/data/images/tiles/apartment-background.png
   trunk/data/images/tiles/apartment-foreground.png
   trunk/data/levels/apartment.wst
Modified:
   trunk/data/tiles.scm
Log:
- added apartment tiles

Added: trunk/data/images/tiles/apartment-background.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/apartment-background.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/tiles/apartment-foreground.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/apartment-foreground.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/levels/apartment.wst
===================================================================
--- trunk/data/levels/apartment.wst	2005-08-02 19:54:44 UTC (rev 886)
+++ trunk/data/levels/apartment.wst	2005-08-03 15:00:17 UTC (rev 887)
@@ -0,0 +1,77 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (name   "")
+  (music  "")
+  (ambient-color .666 .666 .666)
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1861 1862 1767 1768 1865 1866 1765 1766 1861 1862 1769 1863 1864 1864 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1865 1866 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 
+      1877 1878 1783 1784 1881 1882 1781 1782 1877 1878 1785 1879 1880 1880 1773 1773 1773 1773 1773 1773 1879 1880 1785 1786 1881 1882 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 
+      1893 1894 1799 1800 1897 1898 1797 1798 1893 1894 1801 1895 1896 1896 1773 1774 1773 1773 1773 1773 1895 1896 1801 1802 1897 1898 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 
+      1909 1910 1815 1816 1913 1914 1813 1814 1909 1910 1817 1911 1912 1912 1771 1773 1773 1771 1773 1773 1911 1912 1817 1818 1913 1914 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 
+      1925 1926 1831 1832 1929 1930 1829 1830 1925 1926 1833 1927 1928 1928 1771 1773 1773 1771 1822 1773 1927 1928 1833 1834 1929 1930 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 
+      1941 1942 1847 1848 1945 1946 1845 1846 1941 1942 1849 1943 1944 1944 1771 1773 1773 1771 1773 1773 1943 1944 1849 1850 1945 1946 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+ )
+
+;; EOF ;;

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2005-08-02 19:54:44 UTC (rev 886)
+++ trunk/data/tiles.scm	2005-08-03 15:00:17 UTC (rev 887)
@@ -16,9 +16,10 @@
              269  270  271  272  273  274 0 0
              275  276  277  278  279  280 0 0
              281  282  283  284  285  286 0 0
-             287  288  289  290  291  292 0 0
-             
-             
+             287  288  289  290  291  292 0 0))
+ 
+ (tilegroup (name "Bluestone")
+            (tiles             
              293 294 297 298 299 300 0 0
              309 310 313 314 315 316 0 0
              325 326 329 330 331 332 0 0
@@ -54,8 +55,10 @@
              517 518 520 521 522 523 0 0
              533 534 536 537 538 539 0 0
              397 398 399 400 401 402 0 0
-             413 414 415 416 417 418 0 0
+             413 414 415 416 417 418 0 0))
 
+ (tilegroup (name "Industrial")
+            (tiles         
              ;; Sort this properly...
              1061 1062 1063 1064 1065 1066 1067 1068
              1077 1078 1079 1080 1081 1082 1083 1084
@@ -88,50 +91,88 @@
              1261 1262 1263 1264 1265 1266 1267 1268
              1277 1278 1279 1280 1281 1282 1283 1284
              1293 1294 1295 1296 1297 1298 1299 1300
-             1309 1310 1311 1312 1313 1314 1315 1316
+             1309 1310 1311 1312 1313 1314 1315 1316))
 
-      1317 1318 1319 1320 1321 1322 1327 1328
-      1333 1334 1335 1336 1337 1338 1343 1344
-      1349 1350 1351 1352 1353 1354 1329 1330
-      1365 1366 1367 1368 1369 1370 1345 1346
-      1381 1382 1383 1384 1385 1386 0 0
-      1397 1398 1399 1400 1401 1402 0 0
-      1391 1392 1393 1394 1395 1396 1419 1420
-      1407 1408 1409 1410 1411 1412 0 0
-      1413 1414 1415 1416 1417 1418 1419 1420
-      1429 1430 1431 1432 1433 1434 1435 1436
-      1445 1446 1447 1448 1449 1450 1451 1452
-      1461 1462 1463 1464 1465 1466 1467 1468
-      1477 1478 1479 1480 1481 1482 1483 1484
-      1493 1494 1495 1496 1497 1498 1499 1500
-      1509 1510 1511 1512 1513 1514 1515 1516
-      1525 1526 1527 1528 1529 1530 1531 1532
-      1323 1324 1325 1326 1549 1550 1551 1580
-      1339 1340 1341 1342 1565 1566 1567 1596
-      1355 1356 1357 1358 1327 1328 1329 1330
-      1371 1372 1373 1374 1343 1344 1345 1346
-      1485 1486 1487 1488 1425 1426 1427 1428
-      1501 1502 1503 1504 1441 1442 1443 1444
-      1517 1518 1519 1520 1457 1458 1459 1460
-      1583 1583 1583 1583 1473 1474 1475 1476
-      1489 1490 1491 1492 1421 1422 1423 1424
-      1505 1506 1507 1508 1437 1438 1439 1440
-      1521 1522 1523 1524 1453 1454 1455 1456
-      1537 1538 1539 1540 1469 1470 1471 1472
-      1553 1554 1555 1556    0 1359 1379 1361
-      1569 1570 1571 1572    0 1359 1379 1361
-         0 1359 1379    0 1359 1379 1361 1362 
-      1379 1361 1362    0 1359 1379 1361 1362
-      1359 1379 1361    0 1375 1376 1377 1378
-      1359 1379    0    0 1375 1376 1377 1378
-      1359 1379    0 1375 1376 1377 1378 1379
-         0 1359    0 1375 1376 1377 1378 1379 
-         0    0    0 1375 1376 1377 1378 1379 
-         0    0    0 1375 1376 1377 1378 1379
-         0    0 1375 1376 1377 1378 1379 1362
-         0    0 1375 1376 1377 1378 1379 1362
+ (tilegroup (name "Forest")
+            (tiles
+             1317 1318 1319 1320 1321 1322 1327 1328
+             1333 1334 1335 1336 1337 1338 1343 1344
+             1349 1350 1351 1352 1353 1354 1329 1330
+             1365 1366 1367 1368 1369 1370 1345 1346
+             1381 1382 1383 1384 1385 1386 0 0
+             1397 1398 1399 1400 1401 1402 0 0
+             1391 1392 1393 1394 1395 1396 1419 1420
+             1407 1408 1409 1410 1411 1412 0 0
+             1413 1414 1415 1416 1417 1418 1419 1420
+             1429 1430 1431 1432 1433 1434 1435 1436
+             1445 1446 1447 1448 1449 1450 1451 1452
+             1461 1462 1463 1464 1465 1466 1467 1468
+             1477 1478 1479 1480 1481 1482 1483 1484
+             1493 1494 1495 1496 1497 1498 1499 1500
+             1509 1510 1511 1512 1513 1514 1515 1516
+             1525 1526 1527 1528 1529 1530 1531 1532
+             1323 1324 1325 1326 1549 1550 1551 1580
+             1339 1340 1341 1342 1565 1566 1567 1596
+             1355 1356 1357 1358 1327 1328 1329 1330
+             1371 1372 1373 1374 1343 1344 1345 1346
+             1485 1486 1487 1488 1425 1426 1427 1428
+             1501 1502 1503 1504 1441 1442 1443 1444
+             1517 1518 1519 1520 1457 1458 1459 1460
+             1583 1583 1583 1583 1473 1474 1475 1476
+             1489 1490 1491 1492 1421 1422 1423 1424
+             1505 1506 1507 1508 1437 1438 1439 1440
+             1521 1522 1523 1524 1453 1454 1455 1456
+             1537 1538 1539 1540 1469 1470 1471 1472
+             1553 1554 1555 1556    0 1359 1379 1361
+             1569 1570 1571 1572    0 1359 1379 1361
+             0 1359 1379    0 1359 1379 1361 1362 
+             1379 1361 1362    0 1359 1379 1361 1362
+             1359 1379 1361    0 1375 1376 1377 1378
+             1359 1379    0    0 1375 1376 1377 1378
+             1359 1379    0 1375 1376 1377 1378 1379
+             0 1359    0 1375 1376 1377 1378 1379 
+             0    0    0 1375 1376 1377 1378 1379 
+             0    0    0 1375 1376 1377 1378 1379
+             0    0 1375 1376 1377 1378 1379 1362
+             0    0 1375 1376 1377 1378 1379 1362
+             ))
 
+ (tilegroup (name "Apartment Forground")
+            (tiles
+             1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652
+             1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668
+             1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 1682 1683 1684
+             1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700
+
+             1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716
+             1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 1732
+             1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748
+             1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764)
+            )
+
+ (tilegroup (name "Apartment Background")
+            (tiles
+             1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780
+             1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796
+             1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812
+             1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828
+
+             1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844
+             1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860
+             1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876
+             1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 1889 1890 1891 1892
+
+             1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908
+             1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924
+             1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940
+             1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956
+
+             1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972
+             1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988
+             1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004
+             2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020
              ))
+
  (tiles (image "images/tiles/virtualreality-foreground.png")
         (width  16)
         (height 16)
@@ -385,6 +426,77 @@
          0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
          ))
 
+ (tiles (image "images/tiles/apartment-foreground.png")
+        (width 16)
+        (height 8)
+        (ids 
+         1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652
+         1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668
+         1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 1682 1683 1684
+         1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700
+
+         1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714 1715 1716
+         1717 1718 1719 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 1732
+         1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748
+         1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764)
+
+        (colmap
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0        
+         0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0     
+         
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         ))
+
+ (tiles (image "images/tiles/apartment-background.png")
+        (width  16)
+        (height 16)
+        (ids
+         1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780
+         1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796
+         1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812
+         1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828
+
+         1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844
+         1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860
+         1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876
+         1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 1889 1890 1891 1892
+
+         1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908
+         1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924
+         1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940
+         1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956
+
+         1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972
+         1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988
+         1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004
+         2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020)
+
+        (colmap
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         ))
  )
 
- ;; EOF ;;
+;; EOF ;;



From grumbel at berlios.de  Thu Aug  4 01:33:50 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 01:33:50 +0200
Subject: [Windstille-commit] r888 - in trunk/src: . collision scripting signals
Message-ID: <200508032333.j73NXowC001454@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 01:33:16 +0200 (Thu, 04 Aug 2005)
New Revision: 888

Added:
   trunk/src/signals/
   trunk/src/signals/signal.hpp
   trunk/src/signals/signal_v0.hpp
   trunk/src/signals/signal_v1.hpp
   trunk/src/signals/signal_v2.hpp
   trunk/src/signals/signal_v3.hpp
   trunk/src/signals/signal_v4.hpp
   trunk/src/signals/signal_v5.hpp
   trunk/src/signals/signals.hpp
   trunk/src/signals/slot.cpp
   trunk/src/signals/slot.hpp
   trunk/src/signals/slot_generic.cpp
   trunk/src/signals/slot_generic.hpp
   trunk/src/signals/slot_v0.hpp
   trunk/src/signals/slot_v1.hpp
   trunk/src/signals/slot_v2.hpp
   trunk/src/signals/slot_v3.hpp
   trunk/src/signals/slot_v4.hpp
   trunk/src/signals/slot_v5.hpp
   trunk/src/signals/slotbuffer_v0.hpp
   trunk/src/signals/slotbuffer_v1.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/box.hpp
   trunk/src/collision/collision_object.hpp
   trunk/src/entity.hpp
   trunk/src/player.hpp
   trunk/src/screen.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
- copied ClanLibs signal code over to windstille

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/Jamfile	2005-08-03 23:33:16 UTC (rev 888)
@@ -15,6 +15,7 @@
 SubInclude TOP src collision ;
 SubInclude TOP src particles ;
 SubInclude TOP src math ;
+SubInclude TOP src signals ;
 
 sources = 
         baby_xml.cpp
@@ -135,6 +136,8 @@
 
         $(math_objects)
 
+        $(signals_objects)
+
         $(sources)
 ;
 

Modified: trunk/src/box.hpp
===================================================================
--- trunk/src/box.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/box.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -32,7 +32,7 @@
 private:
   Sprite sprite;
   CollisionObject* colobj;
-  CL_Slot slot;
+  Slot slot;
   float gravity;
 
 public:

Modified: trunk/src/collision/collision_object.hpp
===================================================================
--- trunk/src/collision/collision_object.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/collision/collision_object.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -22,7 +22,7 @@
 #ifndef HEADER_COLLISION_OBJECT_HPP
 #define HEADER_COLLISION_OBJECT_HPP
 
-#include <ClanLib/core.h>
+#include "signals/signals.hpp"
 #include "math/vector.hpp"
 #include "math/rect.hpp"
 #include "collision_data.hpp"
@@ -53,7 +53,7 @@
 
   GameObject* game_object;
 
-  CL_Signal_v2<const CollisionData &, CollisionObject &> collision;
+  Signal_v2<const CollisionData &, CollisionObject &> collision;
 
   Rectf primitive;
   TileMap* tilemap;
@@ -107,7 +107,7 @@
   void set_unstuck(bool s) { is_unstuckable = s; }
   void set_unstuck_movable(bool s) { is_unstuck_movable = s; }
 
-  CL_Signal_v2<const CollisionData &, CollisionObject &>& sig_collision() { return collision; }
+  Signal_v2<const CollisionData &, CollisionObject &>& sig_collision() { return collision; }
 
   friend class CollisionEngine;
 };

Modified: trunk/src/entity.hpp
===================================================================
--- trunk/src/entity.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/entity.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -26,6 +26,7 @@
 #ifndef HEADER_ENTITY_HXX
 #define HEADER_ENTITY_HXX
 
+#include "signals/signal_v0.hpp"
 #include "math/vector.hpp"
 #include "game_object.hpp"
 #include "collision/collision_object.hpp"
@@ -35,7 +36,7 @@
 class Entity : public GameObject
 {
 private:
-  CL_Signal_v0 done; 
+  Signal_v0 done; 
 
 protected:
   bool on_ground() const;
@@ -75,7 +76,7 @@
 
   void set_parent(Entity* parent_);
 
-  CL_Signal_v0& sig_done() { return done; }
+  Signal_v0& sig_done() { return done; }
 
 private:
   Entity (const Entity&);

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/player.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -48,7 +48,7 @@
   int energy;
 
   CollisionObject* c_object;
-  CL_Slot slot;
+  Slot slot;
 
 public:
   enum State

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/screen.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -20,6 +20,8 @@
 #ifndef HEADER_SCREEN_HXX
 #define HEADER_SCREEN_HXX
 
+#include "signals/slot.hpp"
+
 class CL_InputEvent;
 
 namespace Windstille {

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/scripting/wrapper.cpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/scripting/wrapper.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Added: trunk/src/signals/signal.hpp
===================================================================
--- trunk/src/signals/signal.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,55 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_HPP
+#define HEADER_SIGNALS_SIGNAL_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+class Slot;
+
+//: Parent class for all signal types.
+class Signal
+{
+//! Construction:
+public:
+	virtual ~Signal() { return; }
+
+//! Operations:
+public:
+	//: Disconnect
+	virtual void disconnect(Slot &disconnect_slot)=0;
+};
+
+#endif

Added: trunk/src/signals/signal_v0.hpp
===================================================================
--- trunk/src/signals/signal_v0.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal_v0.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,279 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_V0_HPP
+#define HEADER_SIGNALS_SIGNAL_V0_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#ifdef _MSC_VER
+#pragma warning ( disable : 4786 )
+#pragma warning ( disable : 4355 ) // warning C4355: 'this' : used in base member initializer list
+#endif
+
+#include "signal.hpp"
+#include "slot.hpp"
+#include "slot_v0.hpp"
+#include <list>
+#include <algorithm>
+
+//: CL Signal v0 class
+//- !group=Signal/System!
+//- !header=signals.h!
+class Signal_v0 : public Signal
+{
+public:
+	typedef Slot_v0 *Slot;
+	typedef std::list<Slot>::iterator SlotIterator;
+
+	class Signal_v0_Generic
+	{
+	public:
+		Signal_v0_Generic(Signal_v0 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }
+
+		~Signal_v0_Generic()
+		{
+			for (SlotIterator slot_it = slots.begin(); slot_it != slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+				slot->release_signal_ref(owner);
+			}
+		}
+
+		bool in_call, deleted;
+		std::list<SlotIterator> *in_call_remove_slots;
+		std::list<Slot> slots;
+		Signal_v0 *owner;
+	};
+
+//! Construction:
+public:
+	//: CL Signal v0 constructor
+	Signal_v0() : impl(new Signal_v0_Generic(this))
+	{
+	}
+
+	Signal_v0(const Signal_v0 &copy) : Signal(copy), impl(new Signal_v0_Generic(this))
+	{
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+	}
+
+	//: CL Signal v0 destructor
+	~Signal_v0()
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+	}
+
+//! Operations:
+public:
+	Signal_v0 &operator =(const Signal_v0 &copy)
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+
+		impl = new Signal_v0_Generic(this);
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+		return *this;
+	}
+
+	//: Operator
+	void operator() ()
+	{
+		call();
+	}
+
+	//: Call
+	void call()
+	{
+		Signal_v0_Generic *data = impl;
+		data->in_call = true;
+
+		std::list<SlotIterator> remove_slots;
+		try
+		{
+			data->in_call_remove_slots = &remove_slots;
+
+			// call slots connected to signal:
+			SlotParent_v0 super(data->slots.begin(), data->slots.end());
+			super();
+		}
+		catch(...)
+		{
+			catch_final(data, remove_slots);
+			throw;
+		}
+
+		catch_final(data, remove_slots);
+	}
+
+	//: Connect slot.
+	::Slot connect(Slot slot)
+	{
+		slot->add_signal_ref(this);
+		impl->slots.push_front(slot);
+		return ::Slot(slot);
+	}
+
+	//: Connect callback function slot.
+	::Slot connect(void (*callback)())
+	{
+		return connect(new FunctionSlot_v0(callback, 0));
+	}
+
+	//: Connect virtual callback function slot.
+	::Slot connect_virtual(void (*virtual_callback)(SlotParent_v0 &))
+	{
+		return connect(new FunctionSlot_v0(0, virtual_callback));
+	}
+
+	//: Connect functor slot.
+	template<class Functor>
+	::Slot connect_functor(const Functor &functor)
+	{
+		return connect(new FunctorSlot_v0<Functor>(functor));
+	}
+
+	//: Connect virtual functor slot.
+	template<class Functor>
+	::Slot connect_functor_virtual(const Functor &functor)
+	{
+		return connect(new FunctorVirtualSlot_v0<Functor>(functor));
+	}
+
+	//: Connect member function slot.
+	template <class CallbackClass>
+	::Slot connect(CallbackClass *cb_class, void (CallbackClass::*callback)())
+	{
+		return connect(new MethodSlot_v0<CallbackClass>(cb_class, callback, 0));
+	}
+
+	//: Connect virtual member function slot.
+	template <class CallbackClass>
+	::Slot connect_virtual(CallbackClass *cb_class, void (CallbackClass::*virtual_callback)(SlotParent_v0 &))
+	{
+		return connect(new MethodSlot_v0<CallbackClass>(cb_class, 0, virtual_callback));
+	}
+
+	//: Connect member function with user data slot.
+	template <class CallbackClass, class UserData>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v0<CallbackClass, UserData>(cb_class, callback, 0, user_data));
+	}
+
+	//: Create virtual member function with user data slot.
+	template <class CallbackClass, class UserData>
+	::Slot connect_virtual(
+		CallbackClass *cb_class,
+		void (CallbackClass::*virtual_callback)(SlotParent_v0 &, UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v0<CallbackClass, UserData>(cb_class, 0, virtual_callback, user_data));
+	}
+
+	//: Disconnect
+	void disconnect(::Slot &disconnect_slot)
+	{
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end();)
+		{
+			Slot slot = *slot_it;
+			if (disconnect_slot.impl == slot)
+			{
+				if (impl->in_call)
+				{
+					impl->in_call_remove_slots->push_back(slot_it);
+					++slot_it;
+				}
+				else
+				{
+					slot->release_signal_ref(this);
+					slot_it = impl->slots.erase(slot_it);
+				}
+			}
+			else
+				++slot_it;
+		}
+	}
+
+//! Implementation:
+private:
+	void catch_final(Signal_v0_Generic *data, std::list<SlotIterator> &remove_slots)
+	{
+		data->in_call_remove_slots = 0;
+
+		// find slots to be removed:
+		for (SlotIterator slot_it = data->slots.begin(); slot_it != data->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+
+			// skip slot if it has no more references left in application.
+			// (make it pending for removal)
+			if (slot->get_slot_ref() == 0 && slot->is_persistent() == false)
+			{
+				if (std::find(remove_slots.begin(), remove_slots.end(), slot_it)==remove_slots.end())
+					remove_slots.push_back(slot_it);
+			}
+		}
+
+		// remove all slots no longer connected to any Slot.
+		std::list<SlotIterator>::iterator remove_it;
+		for (remove_it = remove_slots.begin(); remove_it != remove_slots.end(); remove_it++)
+		{
+			Slot slot = **remove_it;
+			slot->release_signal_ref(this);
+			data->slots.erase(*remove_it);
+		}
+
+		data->in_call = false;
+		if (data->deleted) delete data;
+	}
+
+	Signal_v0_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/signal_v1.hpp
===================================================================
--- trunk/src/signals/signal_v1.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal_v1.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,257 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_V1_HPP
+#define HEADER_SIGNALS_SIGNAL_V1_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#ifdef _MSC_VER
+#pragma warning ( disable : 4786 )
+#pragma warning ( disable : 4355 ) // warning C4355: 'this' : used in base member initializer list
+#endif
+
+#include "signal.hpp"
+#include "slot.hpp"
+#include "slot_v1.hpp"
+#include <list>
+#include <algorithm>
+
+//: CL Signal V1 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1>
+class Signal_v1 : public Signal
+{
+public:
+	typedef Slot_v1<PARAM1> *Slot;
+	typedef typename std::list<Slot>::iterator SlotIterator;
+
+	class Signal_v1_Generic
+	{
+	public:
+		Signal_v1_Generic(Signal_v1 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }
+
+		~Signal_v1_Generic()
+		{
+			for (SlotIterator slot_it = slots.begin(); slot_it != slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+				slot->release_signal_ref(owner);
+			}
+		}
+
+		bool in_call, deleted;
+		std::list<SlotIterator> *in_call_remove_slots;
+		std::list<Slot> slots;
+		Signal_v1 *owner;
+	};
+
+//! Construction:
+public:
+	//: CL Signal V1 constructor
+	Signal_v1() : impl(new Signal_v1_Generic(this))
+	{
+	}
+
+	Signal_v1(const Signal_v1 &copy) : Signal(copy), impl(new Signal_v1_Generic(this))
+	{
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+	}
+
+	//: CL Signal V1 destructor
+	~Signal_v1()
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+	}
+
+//! Attributes:
+public:
+	bool has_slots_connected() const
+	{
+		return !impl->slots.empty();
+	}
+
+//! Operations:
+public:
+	Signal_v1 &operator =(const Signal_v1 &copy)
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+
+		impl = new Signal_v1_Generic(this);
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+		return *this;
+	}
+
+	//: Operator
+	void operator() (PARAM1 param1)
+	{
+		call(param1);
+	}
+
+	//: Call
+	void call(PARAM1 param1)
+	{
+		Signal_v1_Generic *data = impl;
+		data->in_call = true;
+
+		std::list<SlotIterator> remove_slots;
+		try
+		{
+			data->in_call_remove_slots = &remove_slots;
+			
+			// call slots connected to signal:
+			for (SlotIterator slot_it = data->slots.begin(); slot_it != data->slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+
+				// skip slot if it has no more references left in application.
+				// (make it pending for removal)
+				if (slot->get_slot_ref() == 0 && slot->is_persistent() == false)
+				{
+					if (std::find(remove_slots.begin(), remove_slots.end(), slot_it)==remove_slots.end())
+						remove_slots.push_back(slot_it);
+				}
+				
+				slot->call(param1);
+				if (data->deleted) break;
+			}
+		}
+		catch (...)
+		{
+			catch_final(data, remove_slots);
+			throw;
+		}
+		catch_final(data, remove_slots);
+	}
+
+	//: Connect slot.
+	::Slot connect(Slot slot)
+	{
+		slot->add_signal_ref(this);
+		impl->slots.push_back(slot);
+		return ::Slot(slot);
+	}
+
+	//: Connect callback function slot.
+	::Slot connect(void (*callback)(PARAM1))
+	{
+		return connect(new FunctionSlot_v1<PARAM1>(callback));
+	}
+
+	//: Connect functor slot.
+	template<class Functor>
+	::Slot connect_functor(const Functor &functor)
+	{
+		return connect(new FunctorSlot_v1<Functor, PARAM1>(functor));
+	}
+
+	//: Connect member function slot.
+	template <class CallbackClass>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1))
+	{
+		return connect(new MethodSlot_v1<CallbackClass, PARAM1>(cb_class, callback));
+	}
+
+	//: Connect member function with user data slot.
+	template <class CallbackClass, class UserData>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v1<CallbackClass, PARAM1, UserData>(cb_class, callback, user_data));
+	}
+
+	//: Disconnect
+	void disconnect(::Slot &disconnect_slot)
+	{
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end();)
+		{
+			Slot slot = *slot_it;
+			if (disconnect_slot.impl == slot)
+			{
+				if (impl->in_call)
+				{
+					impl->in_call_remove_slots->push_back(slot_it);
+					++slot_it;
+				}
+				else
+				{
+					slot->release_signal_ref(this);
+					slot_it = impl->slots.erase(slot_it);
+				}
+			}
+			else
+				++slot_it;
+		}
+	}
+
+//! Implementation:
+private:
+	void catch_final(Signal_v1_Generic *data, std::list<SlotIterator> &remove_slots)
+	{
+		data->in_call_remove_slots = 0;
+
+		// remove all slots no longer connected to any Slot.
+		typename std::list<SlotIterator>::iterator remove_it;
+		for (remove_it = remove_slots.begin(); remove_it != remove_slots.end(); remove_it++)
+		{
+			Slot slot = **remove_it;
+			slot->release_signal_ref(this);
+			data->slots.erase(*remove_it);
+		}
+
+		data->in_call = false;
+		if (data->deleted) delete data;
+	}
+
+	Signal_v1_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/signal_v2.hpp
===================================================================
--- trunk/src/signals/signal_v2.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal_v2.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,257 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_V2_HPP
+#define HEADER_SIGNALS_SIGNAL_V2_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#ifdef _MSC_VER
+#pragma warning ( disable : 4786 )
+#pragma warning ( disable : 4355 ) // warning C4355: 'this' : used in base member initializer list
+#endif
+
+#include <list>
+#include <algorithm>
+#include "signal.hpp"
+#include "slot.hpp"
+#include "slot_v2.hpp"
+
+//: Signal V2 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2>
+class Signal_v2 : public Signal
+{
+public:
+	typedef Slot_v2<PARAM1, PARAM2> *Slot;
+	typedef typename std::list<Slot>::iterator SlotIterator;
+
+	class Signal_v2_Generic
+	{
+	public:
+		Signal_v2_Generic(Signal_v2 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }
+
+		~Signal_v2_Generic()
+		{
+			for (SlotIterator slot_it = slots.begin(); slot_it != slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+				slot->release_signal_ref(owner);
+			}
+		}
+
+		bool in_call, deleted;
+		std::list<SlotIterator> *in_call_remove_slots;
+		std::list<Slot> slots;
+		Signal_v2 *owner;
+	};
+
+//! Construction:
+public:
+	//: Signal V2 Constructor
+	Signal_v2() : impl(new Signal_v2_Generic(this))
+	{
+	}
+
+	Signal_v2(const Signal_v2 &copy) : Signal(copy), impl(new Signal_v2_Generic(this))
+	{
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+	}
+
+	//: Signal V2 Destructor
+	~Signal_v2()
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+	}
+
+//! Attributes:
+public:
+	bool has_slots_connected() const
+	{
+		return !impl->slots.empty();
+	}
+
+//! Operations:
+public:
+	Signal_v2 &operator =(const Signal_v2 &copy)
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+
+		impl = new Signal_v2_Generic(this);
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+		return *this;
+	}
+
+	//: Operator
+	void operator() (PARAM1 param1, PARAM2 param2)
+	{
+		call(param1, param2);
+	}
+
+	//: Call
+	void call(PARAM1 param1, PARAM2 param2)
+	{
+		Signal_v2_Generic *data = impl;
+		data->in_call = true;
+
+		std::list<SlotIterator> remove_slots;
+		try
+		{
+			data->in_call_remove_slots = &remove_slots;
+
+			// call slots connected to signal:
+			for (SlotIterator slot_it = data->slots.begin(); slot_it != data->slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+	
+				// skip slot if it has no more references left in application.
+				// (make it pending for removal)
+				if (slot->get_slot_ref() == 0 && slot->is_persistent() == false)
+				{
+					if (std::find(remove_slots.begin(), remove_slots.end(), slot_it)==remove_slots.end())
+						remove_slots.push_back(slot_it);
+				}
+			
+				slot->call(param1, param2);
+				if (data->deleted) break;
+			}
+		}
+		catch (...)
+		{
+			catch_final(data, remove_slots);
+			throw;
+		}
+		catch_final(data, remove_slots);
+	}
+
+	//: Connect slot.
+	::Slot connect(Slot slot)
+	{
+		slot->add_signal_ref(this);
+		impl->slots.push_back(slot);
+		return ::Slot(slot);
+	}
+
+	//: Connect callback function slot.
+	::Slot connect(void (*callback)(PARAM1, PARAM2))
+	{
+		return connect(new FunctionSlot_v2<PARAM1, PARAM2>(callback));
+	}
+
+	//: Connect functor slot.
+	template<class Functor>
+	::Slot connect_functor(const Functor &functor)
+	{
+		return connect(new FunctorSlot_v2<Functor, PARAM1, PARAM2>(functor));
+	}
+
+	//: Connect member function slot.
+	template <class CallbackClass>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2))
+	{
+		return connect(new MethodSlot_v2<CallbackClass, PARAM1, PARAM2>(cb_class, callback));
+	}
+
+	//: Connect member function with user data slot.
+	template <class CallbackClass, class UserData>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v2<CallbackClass, PARAM1, PARAM2, UserData>(cb_class, callback, user_data));
+	}
+
+	//: Disconnect
+	void disconnect(::Slot &disconnect_slot)
+	{
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end();)
+		{
+			Slot slot = *slot_it;
+			if (disconnect_slot.impl == slot)
+			{
+				if (impl->in_call)
+				{
+					impl->in_call_remove_slots->push_back(slot_it);
+					++slot_it;
+				}
+				else
+				{
+					slot->release_signal_ref(this);
+					slot_it = impl->slots.erase(slot_it);
+				}
+			}
+			else
+				++slot_it;
+		}
+	}
+
+//! Implementation:
+private:
+	void catch_final(Signal_v2_Generic *data, std::list<SlotIterator> &remove_slots)
+	{
+		data->in_call_remove_slots = 0;
+
+		// remove all slots no longer connected to any Slot.
+		typename std::list<SlotIterator>::iterator remove_it;
+		for (remove_it = remove_slots.begin(); remove_it != remove_slots.end(); remove_it++)
+		{
+			Slot slot = **remove_it;
+			slot->release_signal_ref(this);
+			data->slots.erase(*remove_it);
+		}
+
+		data->in_call = false;
+		if (data->deleted) delete data;
+	}
+
+	Signal_v2_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/signal_v3.hpp
===================================================================
--- trunk/src/signals/signal_v3.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal_v3.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,256 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_V3_HPP
+#define HEADER_SIGNALS_SIGNAL_V3_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#ifdef _MSC_VER
+#pragma warning ( disable : 4786 )
+#pragma warning ( disable : 4355 ) // warning C4355: 'this' : used in base member initializer list
+#endif
+
+#include "signal.hpp"
+#include "slot.hpp"
+#include "slot_v3.hpp"
+#include <list>
+
+//: Signal V3 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3>
+class Signal_v3 : public Signal
+{
+public:
+	typedef Slot_v3<PARAM1, PARAM2, PARAM3> *Slot;
+	typedef typename std::list<Slot>::iterator SlotIterator;
+
+	class Signal_v3_Generic
+	{
+	public:
+		Signal_v3_Generic(Signal_v3 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }
+
+		~Signal_v3_Generic()
+		{
+			for (SlotIterator slot_it = slots.begin(); slot_it != slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+				slot->release_signal_ref(this->owner);
+			}
+		}
+
+		bool in_call, deleted;
+		std::list<SlotIterator> *in_call_remove_slots;
+		std::list<Slot> slots;
+		Signal_v3 *owner;
+	};
+
+//! Construction:
+public:
+	//: Signal V3 Constructor
+	Signal_v3() : impl(new Signal_v3_Generic(this))
+	{
+	}
+
+	Signal_v3(const Signal_v3 &copy) : Signal(copy), impl(new Signal_v3_Generic(this))
+	{
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this->owner);
+		}
+	}
+
+	//: Signal V3 Destructor
+	~Signal_v3()
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+	}
+
+//! Attributes:
+public:
+	bool has_slots_connected() const
+	{
+		return !impl->slots.empty();
+	}
+
+//! Operations:
+public:
+	Signal_v3 &operator =(const Signal_v3 &copy)
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+
+		impl = new Signal_v3_Generic(this);
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+		return *this;
+	}
+
+	//: Operator
+	void operator() (PARAM1 param1, PARAM2 param2, PARAM3 param3)
+	{
+		call(param1, param2, param3);
+	}
+
+	//: Call
+	void call(PARAM1 param1, PARAM2 param2, PARAM3 param3)
+	{
+		Signal_v3_Generic *data = impl;
+		data->in_call = true;
+
+		std::list<SlotIterator> remove_slots;
+		try
+		{
+			data->in_call_remove_slots = &remove_slots;
+
+			// call slots connected to signal:
+			for (SlotIterator slot_it = data->slots.begin(); slot_it != data->slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+
+				// skip slot if it has no more references left in application.
+				// (make it pending for removal)
+				if (slot->get_slot_ref() == 0 && slot->is_persistent() == false)
+				{
+					if (std::find(remove_slots.begin(), remove_slots.end(), slot_it)==remove_slots.end())
+						remove_slots.push_back(slot_it);
+				}
+			
+				slot->call(param1, param2, param3);
+				if (data->deleted) break;
+			}
+		}
+		catch (...)
+		{
+			catch_final(data, remove_slots);
+			throw;
+		}
+		catch_final(data, remove_slots);
+	}
+
+	//: Connect slot.
+	::Slot connect(Slot slot)
+	{
+		slot->add_signal_ref(this);
+		impl->slots.push_back(slot);
+		return ::Slot(slot);
+	}
+
+	//: Connect callback function slot.
+	::Slot connect(void (*callback)(PARAM1, PARAM2, PARAM3))
+	{
+		return connect(new FunctionSlot_v3<PARAM1,PARAM2,PARAM3>(callback));
+	}
+
+	//: Connect functor slot.
+	template<class Functor>
+	::Slot connect_functor(const Functor &functor)
+	{
+		return connect(new FunctorSlot_v3<Functor, PARAM1, PARAM2, PARAM3>(functor));
+	}
+
+	//: Connect member function slot.
+	template <class CallbackClass>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, PARAM3))
+	{
+		return connect(new MethodSlot_v3<CallbackClass, PARAM1, PARAM2, PARAM3>(cb_class, callback));
+	}
+
+	//: Connect member function with user data slot.
+	template <class CallbackClass, class UserData>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, PARAM3, UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v3<CallbackClass, PARAM1, PARAM2, PARAM3, UserData>(cb_class, callback, user_data));
+	}
+
+	//: Disconnect
+	void disconnect(::Slot &disconnect_slot)
+	{
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end();)
+		{
+			Slot slot = *slot_it;
+			if (disconnect_slot.impl == slot)
+			{
+				if (impl->in_call)
+				{
+					impl->in_call_remove_slots->push_back(slot_it);
+					++slot_it;
+				}
+				else
+				{
+					slot->release_signal_ref(this);
+					slot_it = impl->slots.erase(slot_it);
+				}
+			}
+			else
+				++slot_it;
+		}
+	}
+
+//! Implementation:
+private:
+	void catch_final(Signal_v3_Generic *data, std::list<SlotIterator> &remove_slots)
+	{
+		data->in_call_remove_slots = 0;
+
+		// remove all slots no longer connected to any Slot.
+		typename std::list<SlotIterator>::iterator remove_it;
+		for (remove_it = remove_slots.begin(); remove_it != remove_slots.end(); remove_it++)
+		{
+			Slot slot = **remove_it;
+			slot->release_signal_ref(this);
+			data->slots.erase(*remove_it);
+		}
+
+		data->in_call = false;
+		if (data->deleted) delete data;
+	}
+
+	Signal_v3_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/signal_v4.hpp
===================================================================
--- trunk/src/signals/signal_v4.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal_v4.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,256 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_V4_HPP
+#define HEADER_SIGNALS_SIGNAL_V4_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#ifdef _MSC_VER
+#pragma warning ( disable : 4786 )
+#pragma warning ( disable : 4355 ) // warning C4355: 'this' : used in base member initializer list
+#endif
+
+#include "signal.hpp"
+#include "slot.hpp"
+#include "slot_v4.hpp"
+#include <list>
+
+//: Signal V4 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3, class PARAM4>
+class Signal_v4 : public Signal
+{
+public:
+	typedef Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4> *Slot;
+	typedef typename std::list<Slot>::iterator SlotIterator;
+
+	class Signal_v4_Generic
+	{
+	public:
+		Signal_v4_Generic(Signal_v4 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }
+
+		~Signal_v4_Generic()
+		{
+			for (SlotIterator slot_it = slots.begin(); slot_it != slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+				slot->release_signal_ref(owner);
+			}
+		}
+
+		bool in_call, deleted;
+		std::list<SlotIterator> *in_call_remove_slots;
+		std::list<Slot> slots;
+		Signal_v4 *owner;
+	};
+
+//! Construction:
+public:
+	//: Signal V4 constructor
+	Signal_v4() : impl(new Signal_v4_Generic(this))
+	{
+	}
+
+	Signal_v4(const Signal_v4 &copy) : Signal(copy), impl(new Signal_v4_Generic(this))
+	{
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+	}
+
+	//: Signal V4 destructor
+	~Signal_v4()
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+	}
+
+//! Attributes:
+public:
+	bool has_slots_connected() const
+	{
+		return !impl->slots.empty();
+	}
+
+//! Operations:
+public:
+	Signal_v4 &operator =(const Signal_v4 &copy)
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+
+		impl = new Signal_v4_Generic(this);
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+		return *this;
+	}
+
+	//: Opererator
+	void operator() (PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4)
+	{
+		call(param1, param2, param3, param4);
+	}
+
+	//: Call
+	void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4)
+	{
+		Signal_v4_Generic *data = impl;
+		data->in_call = true;
+
+		std::list<SlotIterator> remove_slots;
+		try
+		{
+			data->in_call_remove_slots = &remove_slots;
+
+			// call slots connected to signal:
+			for (SlotIterator slot_it = data->slots.begin(); slot_it != data->slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+
+				// skip slot if it has no more references left in application.
+				// (make it pending for removal)
+				if (slot->get_slot_ref() == 0 && slot->is_persistent() == false)
+				{
+					if (std::find(remove_slots.begin(), remove_slots.end(), slot_it)==remove_slots.end())
+						remove_slots.push_back(slot_it);
+				}
+			
+				slot->call(param1, param2, param3, param4);
+				if (data->deleted) break;
+			}
+		}
+		catch (...)
+		{
+			catch_final(data, remove_slots);
+			throw;
+		}
+		catch_final(data, remove_slots);
+	}
+
+	//: Connect slot.
+	::Slot connect(Slot slot)
+	{
+		slot->add_signal_ref(this);
+		impl->slots.push_back(slot);
+		return ::Slot(slot);
+	}
+
+	//: Connect callback function slot.
+	::Slot connect(void (*callback)(PARAM1, PARAM2, PARAM3, PARAM4))
+	{
+		return connect(new FunctionSlot_v4<PARAM1,PARAM2,PARAM3,PARAM4>(callback));
+	}
+
+	//: Connect functor slot.
+	template<class Functor>
+	::Slot connect_functor(const Functor &functor)
+	{
+		return connect(new FunctorSlot_v4<Functor, PARAM1, PARAM2, PARAM3, PARAM4>(functor));
+	}
+
+	//: Connect member function slot.
+	template <class CallbackClass>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, PARAM3, PARAM4))
+	{
+		return connect(new MethodSlot_v4<CallbackClass, PARAM1, PARAM2, PARAM3, PARAM4>(cb_class, callback));
+	}
+
+	//: Connect member function with user data slot.
+	template <class CallbackClass, class UserData>
+	::Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, PARAM3, PARAM4, UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v4<CallbackClass, PARAM1, PARAM2, PARAM3, PARAM4, UserData>(cb_class, callback, user_data));
+	}
+
+	//: Disconnect
+	void disconnect(::Slot &disconnect_slot)
+	{
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end();)
+		{
+			Slot slot = *slot_it;
+			if (disconnect_slot.impl == slot)
+			{
+				if (impl->in_call)
+				{
+					impl->in_call_remove_slots->push_back(slot_it);
+					++slot_it;
+				}
+				else
+				{
+					slot->release_signal_ref(this);
+					slot_it = impl->slots.erase(slot_it);
+				}
+			}
+			else
+				++slot_it;
+		}
+	}
+
+//! Implementation:
+private:
+	void catch_final(Signal_v4_Generic *data, std::list<SlotIterator> &remove_slots)
+	{
+		data->in_call_remove_slots = 0;
+
+		// remove all slots no longer connected to any Slot.
+		typename std::list<SlotIterator>::iterator remove_it;
+		for (remove_it = remove_slots.begin(); remove_it != remove_slots.end(); remove_it++)
+		{
+			Slot slot = **remove_it;
+			slot->release_signal_ref(this);
+			data->slots.erase(*remove_it);
+		}
+
+		data->in_call = false;
+		if (data->deleted) delete data;
+	}
+
+	Signal_v4_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/signal_v5.hpp
===================================================================
--- trunk/src/signals/signal_v5.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signal_v5.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,256 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SIGNAL_V5_HPP
+#define HEADER_SIGNALS_SIGNAL_V5_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#ifdef _MSC_VER
+#pragma warning ( disable : 4786 )
+#pragma warning ( disable : 4355 ) // warning C4355: 'this' : used in base member initializer list
+#endif
+
+#include "signal.hpp"
+#include "slot.hpp"
+#include "slot_v5.hpp"
+#include <list>
+
+//: Signal V5 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3, class PARAM4, class PARAM5>
+class Signal_v5 : public Signal
+{
+public:
+	typedef Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5> *Slot;
+	typedef typename std::list<Slot>::iterator SlotIterator;
+
+	class Signal_v5_Generic
+	{
+	public:
+		Signal_v5_Generic(Signal_v5 *owner) : in_call(false), deleted(false), in_call_remove_slots(0), owner(owner) { return; }
+
+		~Signal_v5_Generic()
+		{
+			for (SlotIterator slot_it = slots.begin(); slot_it != slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+				slot->release_signal_ref(owner);
+			}
+		}
+
+		bool in_call, deleted;
+		std::list<SlotIterator> *in_call_remove_slots;
+		std::list<Slot> slots;
+		Signal_v5 *owner;
+	};
+
+//! Construction:
+public:
+	//: Signal V5 Constructor
+	Signal_v5() : impl(new Signal_v5_Generic(this))
+	{
+	}
+
+	Signal_v5(const Signal_v5 &copy) : Signal(copy), impl(new Signal_v5_Generic(this))
+	{
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+	}
+
+	//: Signal V5 Destructor
+	~Signal_v5()
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+	}
+
+//! Attributes:
+public:
+	bool has_slots_connected() const
+	{
+		return !impl->slots.empty();
+	}
+
+//! Operations:
+public:
+	Signal_v5 &operator =(const Signal_v5 &copy)
+	{
+		if (impl->in_call) impl->deleted = true;
+		else delete impl;
+
+		impl = new Signal_v5_Generic(this);
+		impl->slots = copy.impl->slots;
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end(); slot_it++)
+		{
+			Slot slot = *slot_it;
+			slot->add_signal_ref(this);
+		}
+		return *this;
+	}
+
+	//: Operator
+	void operator() (PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5)
+	{
+		call(param1, param2, param3, param4, param5);
+	}
+
+	//: Call
+	void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5)
+	{
+		Signal_v5_Generic *data = impl;
+		data->in_call = true;
+
+		std::list<SlotIterator> remove_slots;
+		try
+		{
+			data->in_call_remove_slots = &remove_slots;
+
+			// call slots connected to signal:
+			for (SlotIterator slot_it = data->slots.begin(); slot_it != data->slots.end(); slot_it++)
+			{
+				Slot slot = *slot_it;
+
+				// skip slot if it has no more references left in application.
+				// (make it pending for removal)
+				if (slot->get_slot_ref() == 0 && slot->is_persistent() == false)
+				{
+					if (std::find(remove_slots.begin(), remove_slots.end(), slot_it)==remove_slots.end())
+						remove_slots.push_back(slot_it);
+				}
+			
+				slot->call(param1, param2, param3, param4, param5);
+				if (data->deleted) break;
+			}
+		}
+		catch (...)
+		{
+			catch_final(data, remove_slots);
+			throw;
+		}
+		catch_final(data, remove_slots);
+	}
+
+	//: Connect slot.
+	Slot connect(Slot slot)
+	{
+		slot->add_signal_ref(this);
+		impl->slots.push_back(slot);
+		return Slot(slot);
+	}
+
+	//: Connect callback function slot.
+	Slot connect(void (*callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5))
+	{
+		return connect(new FunctionSlot_v5<PARAM1,PARAM2,PARAM3,PARAM4,PARAM5>(callback));
+	}
+
+	//: Connect functor slot.
+	template<class Functor>
+	Slot connect_functor(const Functor &functor)
+	{
+		return connect(new FunctorSlot_v5<Functor, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>(functor));
+	}
+
+	//: Connect member function slot.
+	template <class CallbackClass>
+	Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5))
+	{
+		return connect(new MethodSlot_v5<CallbackClass, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>(cb_class, callback));
+	}
+
+	//: Connect member function with user data slot.
+	template <class CallbackClass, class UserData>
+	Slot connect(
+		CallbackClass *cb_class,
+		void (CallbackClass::*callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, UserData),
+		UserData user_data)
+	{
+		return connect(new UserDataMethodSlot_v5<CallbackClass, PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, UserData>(cb_class, callback, user_data));
+	}
+
+	//: Disconnect
+	void disconnect(::Slot &disconnect_slot)
+	{
+		for (SlotIterator slot_it = impl->slots.begin(); slot_it != impl->slots.end();)
+		{
+			Slot slot = *slot_it;
+			if (disconnect_slot.impl == slot)
+			{
+				if (impl->in_call)
+				{
+					impl->in_call_remove_slots->push_back(slot_it);
+					++slot_it;
+				}
+				else
+				{
+					slot->release_signal_ref(this);
+					slot_it = impl->slots.erase(slot_it);
+				}
+			}
+			else
+				++slot_it;
+		}
+	}
+
+//! Implementation:
+private:
+	void catch_final(Signal_v5_Generic *data, std::list<SlotIterator> &remove_slots)
+	{
+		data->in_call_remove_slots = 0;
+
+		// remove all slots no longer connected to any Slot.
+		typename std::list<SlotIterator>::iterator remove_it;
+		for (remove_it = remove_slots.begin(); remove_it != remove_slots.end(); remove_it++)
+		{
+			Slot slot = **remove_it;
+			slot->release_signal_ref(this);
+			data->slots.erase(*remove_it);
+		}
+
+		data->in_call = false;
+		if (data->deleted) delete data;
+	}
+
+	Signal_v5_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/signals.hpp
===================================================================
--- trunk/src/signals/signals.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/signals.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,42 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_SIGNALS_SIGNALS_HPP
+#define HEADER_SIGNALS_SIGNALS_HPP
+
+
+#include "signals/slot.hpp"
+#include "signals/signal_v0.hpp"
+#include "signals/signal_v1.hpp"
+#include "signals/signal_v2.hpp"
+#include "signals/signal_v3.hpp"
+#include "signals/signal_v4.hpp"
+#include "signals/signal_v5.hpp"
+#include "signals/slotbuffer_v0.hpp"
+#include "signals/slotbuffer_v1.hpp"
+
+#endif
+
+/* EOF */

Added: trunk/src/signals/slot.cpp
===================================================================
--- trunk/src/signals/slot.cpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot.cpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,91 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+#include "signals/slot.hpp"
+#include "signals/slot_generic.hpp"
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot construction:
+
+Slot::Slot() : impl(0)
+{
+}
+
+Slot::Slot(const Slot &copy) : impl(copy.impl)
+{
+	if (impl != 0) impl->add_slot_ref();
+}
+
+Slot::~Slot()
+{
+	if (impl != 0) impl->release_slot_ref();
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot attributes:
+
+int Slot::get_slot_ref() const
+{
+	if (impl) return impl->get_slot_ref();
+	else return 0;
+}
+
+int Slot::get_signal_ref() const
+{
+	if (impl) return impl->get_signal_ref();
+	else return 0;
+}
+
+bool Slot::is_persistent() const
+{
+	return impl->is_persistent();
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot operations:
+
+void Slot::operator =(const Slot &copy)
+{
+	if (impl) impl->release_slot_ref();
+	impl = copy.impl;
+	if (impl) impl->add_slot_ref();
+}
+
+void Slot::set_persistent(bool flag)
+{
+	if (impl) impl->set_persistent(flag);
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot implementation:
+
+Slot::Slot(Slot_Generic *impl) : impl(impl)
+{
+	if (impl != 0) impl->add_slot_ref();
+}

Added: trunk/src/signals/slot.hpp
===================================================================
--- trunk/src/signals/slot.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,90 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_HPP
+#define HEADER_SIGNALS_SLOT_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+class Slot_Generic;
+
+//: Slot class
+//- !group=Signal/System!
+//- !header=signals.h!
+class Slot
+{
+//! Construction:
+public:
+	//: Create an unconnected slot.
+	Slot();
+
+	//: Copy a slot.
+	Slot(const Slot &copy);
+
+	//: Slot destructor
+	~Slot();
+
+//! Attributes:
+public:
+	//: Returns the number of Slot references still pointing at this slot.
+	int get_slot_ref() const;
+
+	//: Returns the number of signals this slot is connected to.
+	int get_signal_ref() const;
+
+	//: Returns true if slot is persistent.
+	//- <p>If the slot is persistent, it will remain connected to
+	//- signals even when all references to Slot are gone.</p>
+	bool is_persistent() const;
+
+//! Operations:
+public:
+	//: Slot copy operator
+	void operator =(const Slot &copy);
+
+	//: Sets the persistent flag.
+	//- <p>If the slot is persistent, it will remain connected to
+	//- signals even when all references to Slot are gone.</p>
+	void set_persistent(bool flag = true);
+
+//! Implementation:
+public:
+	//: Slot constructor
+	Slot(Slot_Generic *impl);
+
+	//: Slot Generic Implementation
+	Slot_Generic *impl;
+};
+
+#endif

Added: trunk/src/signals/slot_generic.cpp
===================================================================
--- trunk/src/signals/slot_generic.cpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_generic.cpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,121 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+#include "signals/slot_generic.hpp"
+#include "signals/slot.hpp"
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot_Generic construction:
+
+Slot_Generic::Slot_Generic() : persistent(false), slot_ref_count(0), signal_ref_count(0)
+{
+}
+
+Slot_Generic::~Slot_Generic()
+{
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot_Generic attributes:
+
+int Slot_Generic::get_slot_ref() const
+{
+	return slot_ref_count;
+}
+
+int Slot_Generic::get_signal_ref() const
+{
+	return signal_ref_count;
+}
+
+bool Slot_Generic::is_persistent() const
+{
+	return persistent;
+}
+
+/////////////////////////////////////////////////////////////////////////////
+// Slot_Generic operations:
+
+void Slot_Generic::add_slot_ref()
+{
+	slot_ref_count++;
+}
+
+void Slot_Generic::release_slot_ref()
+{
+	slot_ref_count--;
+	check_delete();
+}
+
+void Slot_Generic::add_signal_ref(Signal *signal)
+{
+	connected_signals.push_back(signal);
+	signal_ref_count++;
+}
+
+void Slot_Generic::release_signal_ref(Signal *signal)
+{
+	connected_signals.remove(signal);
+	signal_ref_count--;
+	check_delete();
+}
+
+void Slot_Generic::set_persistent(bool flag)
+{
+	persistent = flag;
+}
+
+/////////////////////////////////////////////////////////////////////////////
+//! Implementation:
+
+void Slot_Generic::check_delete()
+{
+	// Try remove from signals immidiately, if possible:
+	if (slot_ref_count == 0 && signal_ref_count > 0)
+	{
+		// Prevent recursive looping (and allows us to create a helper Slot object):
+		slot_ref_count++;
+
+		std::list<Signal *> signals = connected_signals;
+		connected_signals.clear(); // clear member list to avoid recursive loop problems
+
+		std::list<Signal *>::iterator it;
+		for (it = signals.begin(); it != signals.end(); ++it)
+		{
+			Signal *cur = (*it);
+			Slot slot(this);
+			cur->disconnect(slot);
+		}
+
+		slot_ref_count--;
+	}
+
+	// Delete ourselves if nobody reference us anymore
+	if (slot_ref_count == 0 && signal_ref_count == 0) delete this;
+}

Added: trunk/src/signals/slot_generic.hpp
===================================================================
--- trunk/src/signals/slot_generic.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_generic.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,103 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_GENERIC
+#define HEADER_SIGNALS_SLOT_GENERIC
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include <list>
+#include "signal.hpp"
+
+class Slot;
+
+//: Slot Generic Class
+//- !group=Signal/System!
+//- !header=signals.h!
+class Slot_Generic
+{
+//! Construction:
+public:
+	//: Slot Generic Constructor
+	Slot_Generic();
+
+	//: Slot Generic Destructor
+	virtual ~Slot_Generic();
+
+//! Attributes:
+public:
+	//: Get slot ref
+	int get_slot_ref() const;
+
+	//: Get signal ref
+	int get_signal_ref() const;
+
+	//: Returns true if persistent.
+	//- <p>If the slot is persistent, it will remain connected to
+	//- signals even when all references to Slot are gone.</p>
+	bool is_persistent() const;
+
+//! Operations:
+public:
+	//: Add slot ref
+	void add_slot_ref();
+
+	//: Release slot ref
+	void release_slot_ref();
+
+	//: Add signal ref
+	void add_signal_ref(Signal *signal);
+
+	//: Release signal ref
+	void release_signal_ref(Signal *signal);
+
+	//: Sets the persistent flag.
+	//- <p>If the slot is persistent, it will remain connected to
+	//- signals even when all references to Slot are gone.</p>
+	void set_persistent(bool flag = true);
+
+//! Implementation:
+private:
+	void check_delete();
+
+	bool persistent;
+
+	int slot_ref_count;
+
+	int signal_ref_count;
+
+	std::list<Signal *> connected_signals;
+};
+
+#endif

Added: trunk/src/signals/slot_v0.hpp
===================================================================
--- trunk/src/signals/slot_v0.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_v0.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,216 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_V0_HPP
+#define HEADER_SIGNALS_SLOT_V0_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "slot_generic.hpp"
+#include <list>
+
+//: Slot V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+class Slot_v0 : public Slot_Generic
+{
+public:
+	//: Call
+	virtual void call(class SlotParent_v0 &super)=0;
+};
+
+//: Slot Parent V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+class SlotParent_v0
+{
+public:
+	typedef Slot_v0 *Slot;
+	typedef std::list<Slot>::iterator SlotIterator;
+
+//! Construction:
+public:
+	
+	//: Slot Parent V0 Constructor
+	SlotParent_v0(const SlotIterator &pos, const SlotIterator &end)
+	: pos(pos), end(end)
+	{
+	}
+
+//! Operations:
+public:
+	//: Operator
+	void operator() ()
+	{
+		if (pos == end) return;
+
+		SlotIterator next = pos;
+		next++;
+
+		if ((*pos)->get_slot_ref() > 0)
+		{
+			SlotParent_v0 super(next, end);
+			(*pos)->call(super);
+		}
+	}
+
+//! Implementation:
+private:
+	SlotIterator pos, end;
+};
+
+//: FunctionSlot V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+class FunctionSlot_v0 : public Slot_v0
+{
+public:
+	typedef void (*Callback)();
+	typedef void (*VirtualCallback)(SlotParent_v0 &);
+
+	//: FunctionSlot V0 Constructor
+	FunctionSlot_v0(Callback callback, VirtualCallback virtual_callback)
+	: callback(callback), virtual_callback(virtual_callback) { return; }
+
+	//: Call
+	virtual void call(SlotParent_v0 &super)
+	{
+		if (callback) { super(); callback(); }
+		else virtual_callback(super);
+	}
+
+private:
+	Callback callback;
+	VirtualCallback virtual_callback;
+};
+
+//: FunctorSlot V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor>
+class FunctorSlot_v0 : public Slot_v0
+{
+public:
+	//: FunctorSlot V0 Constructor
+	FunctorSlot_v0(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(SlotParent_v0 &super)
+	{
+		super();
+		functor();
+	}
+
+private:
+	Functor functor;
+};
+
+//: FunctorSlot V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor>
+class FunctorVirtualSlot_v0 : public Slot_v0
+{
+public:
+	//: FunctorVirtualSlot V0 Constructor
+	FunctorVirtualSlot_v0(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(SlotParent_v0 &super)
+	{
+		functor(super);
+	}
+
+private:
+	Functor functor;
+};
+
+//: Method Slot V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass>
+class MethodSlot_v0 : public Slot_v0
+{
+public:
+	typedef void (CallbackClass::*Callback)();
+	typedef void (CallbackClass::*VirtualCallback)(SlotParent_v0 &);
+
+	//: Method Slot V0 Constructor
+	MethodSlot_v0(CallbackClass *cb_class, Callback callback, VirtualCallback virtual_callback)
+	: cb_class(cb_class), callback(callback), virtual_callback(virtual_callback) { return; }
+
+	//: Call
+	virtual void call(SlotParent_v0 &super)
+	{
+		if (callback) { super(); (cb_class->*callback)(); }
+		else (cb_class->*virtual_callback)(super);
+	}
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	VirtualCallback virtual_callback;
+};
+
+//: User Data Methane Slot V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class UserData>
+class UserDataMethodSlot_v0 : public Slot_v0
+{
+public:
+	typedef void (CallbackClass::*Callback)(UserData);
+	typedef void (CallbackClass::*VirtualCallback)(SlotParent_v0 &, UserData);
+
+	//: User Data Methane Slot V0 Constructor
+	UserDataMethodSlot_v0(CallbackClass *cb_class, Callback callback, VirtualCallback virtual_callback, UserData user_data)
+	: cb_class(cb_class), callback(callback), virtual_callback(virtual_callback), user_data(user_data) { return; }
+
+	//: Call
+	virtual void call(SlotParent_v0 &super)
+	{
+		if (callback) { super(); (cb_class->*callback)(user_data); }
+		else (cb_class->*virtual_callback)(super, user_data);
+	}
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	VirtualCallback virtual_callback;
+	UserData user_data;
+};
+
+#endif

Added: trunk/src/signals/slot_v1.hpp
===================================================================
--- trunk/src/signals/slot_v1.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_v1.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,133 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_V1_HPP
+#define HEADER_SIGNALS_SLOT_V1_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "slot_generic.hpp"
+
+//: Slot V1 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1>
+class Slot_v1 : public Slot_Generic
+{
+public:
+	//: Call
+	virtual void call(PARAM1 param1)=0;
+};
+
+//: Funtion Slot V1 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1>
+class FunctionSlot_v1 : public Slot_v1<PARAM1>
+{
+public:
+	typedef void (*Callback)(PARAM1);
+
+	//: Funtion Slot V1 constructor
+	FunctionSlot_v1(Callback callback) : callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1) { callback(param1); }
+
+private:
+	Callback callback;
+};
+
+//: FunctorSlot V1 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor, class PARAM1>
+class FunctorSlot_v1 : public Slot_v1<PARAM1>
+{
+public:
+	//: FunctorSlot V1 Constructor
+	FunctorSlot_v1(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1) { functor(param1); }
+
+private:
+	Functor functor;
+};
+
+//: Method Slot V1
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1>
+class MethodSlot_v1 : public Slot_v1<PARAM1>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1);
+
+	//: Method Slot V1 constructor
+	MethodSlot_v1(CallbackClass *cb_class, Callback callback)
+	: cb_class(cb_class), callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1) { (cb_class->*callback)(param1); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+};
+
+//: User Data Method Slot V1 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class UserData>
+class UserDataMethodSlot_v1 : public Slot_v1<PARAM1>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, UserData);
+
+	//: User Data Method Slot V1 constructor
+	UserDataMethodSlot_v1(CallbackClass *cb_class, Callback callback, UserData user_data)
+	: cb_class(cb_class), callback(callback), user_data(user_data) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1) { (cb_class->*callback)(param1, user_data); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	UserData user_data;
+};
+
+#endif

Added: trunk/src/signals/slot_v2.hpp
===================================================================
--- trunk/src/signals/slot_v2.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_v2.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,133 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_V2_HPP
+#define HEADER_SIGNALS_SLOT_V2_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "slot_generic.hpp"
+
+//: Slot V2 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2>
+class Slot_v2 : public Slot_Generic
+{
+public:
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2)=0;
+};
+
+//: FunctionSlot V2 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2>
+class FunctionSlot_v2 : public Slot_v2<PARAM1, PARAM2>
+{
+public:
+	typedef void (*Callback)(PARAM1, PARAM2);
+
+	//: FunctionSlot V2 Constructor
+	FunctionSlot_v2(Callback callback) : callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2) { callback(param1, param2); }
+
+private:
+	Callback callback;
+};
+
+//: FunctorSlot V2 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor, class PARAM1, class PARAM2>
+class FunctorSlot_v2 : public Slot_v2<PARAM1, PARAM2>
+{
+public:
+	//: FunctorSlot V2 Constructor
+	FunctorSlot_v2(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2) { functor(param1, param2); }
+
+private:
+	Functor functor;
+};
+
+//: Methane Slot V2 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2>
+class MethodSlot_v2 : public Slot_v2<PARAM1, PARAM2>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2);
+
+	//: Methane Slot V2 constructor
+	MethodSlot_v2(CallbackClass *cb_class, Callback callback)
+	: cb_class(cb_class), callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2) { (cb_class->*callback)(param1, param2); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+};
+
+//: User Data Methane Slot V2 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class UserData>
+class UserDataMethodSlot_v2 : public Slot_v2<PARAM1, PARAM2>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, UserData);
+
+	//: User Data Methane Slot V2 Constructor
+	UserDataMethodSlot_v2(CallbackClass *cb_class, Callback callback, UserData user_data)
+	: cb_class(cb_class), callback(callback), user_data(user_data) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2) { (cb_class->*callback)(param1, param2, user_data); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	UserData user_data;
+};
+
+#endif

Added: trunk/src/signals/slot_v3.hpp
===================================================================
--- trunk/src/signals/slot_v3.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_v3.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,133 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_V3_HPP
+#define HEADER_SIGNALS_SLOT_V3_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "slot_generic.hpp"
+
+//: Slot V3 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3>
+class Slot_v3 : public Slot_Generic
+{
+public:
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3)=0;
+};
+
+//: FunctionSlot V3 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3>
+class FunctionSlot_v3 : public Slot_v3<PARAM1, PARAM2, PARAM3>
+{
+public:
+	typedef void (*Callback)(PARAM1, PARAM2, PARAM3);
+
+	//: FunctionSlot V3 Constructor
+	FunctionSlot_v3(Callback callback) : callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { callback(param1, param2, param3); }
+
+private:
+	Callback callback;
+};
+
+//: FunctorSlot V3 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor, class PARAM1, class PARAM2, class PARAM3>
+class FunctorSlot_v3 : public Slot_v3<PARAM1, PARAM2, PARAM3>
+{
+public:
+	//: FunctorSlot V3 Constructor
+	FunctorSlot_v3(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { functor(param1, param2, param3); }
+
+private:
+	Functor functor;
+};
+
+//: Methane Slot V3 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class PARAM3>
+class MethodSlot_v3 : public Slot_v3<PARAM1, PARAM2, PARAM3>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3);
+
+	//: Methane Slot V3 constructor
+	MethodSlot_v3(CallbackClass *cb_class, Callback callback)
+	: cb_class(cb_class), callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { (cb_class->*callback)(param1, param2, param3); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+};
+
+//: User Data Methane Slot V3 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class PARAM3, class UserData>
+class UserDataMethodSlot_v3 : public Slot_v3<PARAM1, PARAM2, PARAM3>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, UserData);
+
+	//: User Data Methane Slot V3 Constructor
+	UserDataMethodSlot_v3(CallbackClass *cb_class, Callback callback, UserData user_data)
+	: cb_class(cb_class), callback(callback), user_data(user_data) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3) { (cb_class->*callback)(param1, param2, param3, user_data); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	UserData user_data;
+};
+
+#endif

Added: trunk/src/signals/slot_v4.hpp
===================================================================
--- trunk/src/signals/slot_v4.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_v4.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,133 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_V4_HPP
+#define HEADER_SIGNALS_SLOT_V4_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "slot_generic.hpp"
+
+//: Slot V4 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3, class PARAM4>
+class Slot_v4 : public Slot_Generic
+{
+public:
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4)=0;
+};
+
+//: FunctionSlot V4 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3, class PARAM4>
+class FunctionSlot_v4 : public Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>
+{
+public:
+	typedef void (*Callback)(PARAM1, PARAM2, PARAM3, PARAM4);
+
+	//: FunctionSlot V4 Constructor
+	FunctionSlot_v4(Callback callback) : callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { callback(param1, param2, param3, param4); }
+
+private:
+	Callback callback;
+};
+
+//: FunctorSlot V4 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor, class PARAM1, class PARAM2, class PARAM3, class PARAM4>
+class FunctorSlot_v4 : public Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>
+{
+public:
+	//: FunctorSlot V4 Constructor
+	FunctorSlot_v4(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { functor(param1, param2, param3, param4); }
+
+private:
+	Functor functor;
+};
+
+//: Methane Slot V4 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class PARAM3, class PARAM4>
+class MethodSlot_v4 : public Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4);
+
+	//: Methane Slot V4 constructor
+	MethodSlot_v4(CallbackClass *cb_class, Callback callback)
+	: cb_class(cb_class), callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { (cb_class->*callback)(param1, param2, param3, param4); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+};
+
+//: User Data Methane Slot V4 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class PARAM3, class PARAM4, class UserData>
+class UserDataMethodSlot_v4 : public Slot_v4<PARAM1, PARAM2, PARAM3, PARAM4>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, UserData);
+
+	//: User Data Methane Slot V4 Constructor
+	UserDataMethodSlot_v4(CallbackClass *cb_class, Callback callback, UserData user_data)
+	: cb_class(cb_class), callback(callback), user_data(user_data) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4) { (cb_class->*callback)(param1, param2, param3, param4, user_data); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	UserData user_data;
+};
+
+#endif

Added: trunk/src/signals/slot_v5.hpp
===================================================================
--- trunk/src/signals/slot_v5.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slot_v5.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,133 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOT_V5_HPP
+#define HEADER_SIGNALS_SLOT_V5_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "slot_generic.hpp"
+
+//: Slot V5 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3, class PARAM4, class PARAM5>
+class Slot_v5 : public Slot_Generic
+{
+public:
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5)=0;
+};
+
+//: FunctionSlot V5 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1, class PARAM2, class PARAM3, class PARAM4, class PARAM5>
+class FunctionSlot_v5 : public Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>
+{
+public:
+	typedef void (*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5);
+
+	//: FunctionSlot V5 Constructor
+	FunctionSlot_v5(Callback callback) : callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { callback(param1, param2, param3, param4, param5); }
+
+private:
+	Callback callback;
+};
+
+//: FunctorSlot V5 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template<class Functor, class PARAM1, class PARAM2, class PARAM3, class PARAM4, class PARAM5>
+class FunctorSlot_v5 : public Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>
+{
+public:
+	//: FunctorSlot V5 Constructor
+	FunctorSlot_v5(const Functor &functor)
+	: functor(functor) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { functor(param1, param2, param3, param4, param5); }
+
+private:
+	Functor functor;
+};
+
+//: Methane Slot V5 class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class PARAM3, class PARAM4, class PARAM5>
+class MethodSlot_v5 : public Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5);
+
+	//: Methane Slot V5 constructor
+	MethodSlot_v5(CallbackClass *cb_class, Callback callback)
+	: cb_class(cb_class), callback(callback) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { (cb_class->*callback)(param1, param2, param3, param4, param5); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+};
+
+//: User Data Methane Slot V5 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class CallbackClass, class PARAM1, class PARAM2, class PARAM3, class PARAM4, class PARAM5, class UserData>
+class UserDataMethodSlot_v5 : public Slot_v5<PARAM1, PARAM2, PARAM3, PARAM4, PARAM5>
+{
+public:
+	typedef void (CallbackClass::*Callback)(PARAM1, PARAM2, PARAM3, PARAM4, PARAM5, UserData);
+
+	//: User Data Methane Slot V5 Constructor
+	UserDataMethodSlot_v5(CallbackClass *cb_class, Callback callback, UserData user_data)
+	: cb_class(cb_class), callback(callback), user_data(user_data) { return; }
+
+	//: Call
+	virtual void call(PARAM1 param1, PARAM2 param2, PARAM3 param3, PARAM4 param4, PARAM5 param5) { (cb_class->*callback)(param1, param2, param3, param4, param5, user_data); }
+
+private:
+	CallbackClass *cb_class;
+	Callback callback;
+	UserData user_data;
+};
+
+#endif

Added: trunk/src/signals/slotbuffer_v0.hpp
===================================================================
--- trunk/src/signals/slotbuffer_v0.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slotbuffer_v0.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,99 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOTBUFFER_V0_HPP
+#define HEADER_SIGNALS_SLOTBUFFER_V0_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include "signal_v0.hpp"
+
+//: Slot Buffer V0 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+class SlotBuffer_v0
+{
+//! Construction:
+public:
+	//: Slot Buffer V0 Constructor
+	SlotBuffer_v0() : count(0)
+	{
+	}
+
+	//: Slot Buffer V0 Constructor
+	SlotBuffer_v0(Signal_v0 &signal) : count(0)
+	{
+		connect(signal);
+	}
+
+//! Attributes:
+public:
+	//: Bool
+	operator bool()
+	{
+		return count > 0;
+	}
+
+	//: Size
+	int size()
+	{
+		return count;
+	}
+
+//! Operations:
+public:
+	//: Connect
+	void connect(Signal_v0 &signal)
+	{
+		slot = signal.connect(this, &SlotBuffer_v0::callback);
+	}
+
+	//: Disconnect
+	void disconnect(Signal_v0 &signal)
+	{
+		signal.disconnect(slot);
+	}
+
+//! Implementation:
+private:
+	void callback()
+	{
+		count++;
+	}
+
+	Slot slot;
+	int count;
+};
+
+#endif

Added: trunk/src/signals/slotbuffer_v1.hpp
===================================================================
--- trunk/src/signals/slotbuffer_v1.hpp	2005-08-03 15:00:17 UTC (rev 887)
+++ trunk/src/signals/slotbuffer_v1.hpp	2005-08-03 23:33:16 UTC (rev 888)
@@ -0,0 +1,118 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanSignal="System"
+//! header=signals.h
+
+#ifndef HEADER_SIGNALS_SLOTBUFFER_V1_HPP
+#define HEADER_SIGNALS_SLOTBUFFER_V1_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include <vector>
+#include "slot.hpp"
+
+template <class PARAM1> class Signal_v1;
+
+//: SlotBuffer V1 Class
+//- !group=Signal/System!
+//- !header=signals.h!
+template <class PARAM1>
+class SlotBuffer_v1
+{
+public:
+	struct Params
+	{
+		PARAM1 p1;
+	};
+
+//! Construction:
+public:
+	//: Slot Buffer V1 Constructor
+	SlotBuffer_v1()
+	{
+	}
+
+	//: Slot Buffer V1 Constructor
+	SlotBuffer_v1(Signal_v1<PARAM1> &signal)
+	{
+		connect(signal);
+	}
+
+//! Attributes:
+public:
+	//: Bool
+	operator bool()
+	{
+		return !params.empty();
+	}
+
+	//: Size
+	int size()
+	{
+		return params.size();
+	}
+
+	//: Operator
+	Params &operator[](int index)
+	{
+		return params[index];
+	}
+
+//! Operations:
+public:
+	//: Connect
+	void connect(Signal_v1<PARAM1> &signal)
+	{
+		slot = signal.connect(this, &SlotBuffer_v1::callback);
+	}
+
+	//: Disconnect
+	void disconnect(Signal_v1<PARAM1> &signal)
+	{
+		signal.disconnect(slot);
+	}
+
+//! Implementation:
+private:
+	void callback(PARAM1 p1)
+	{
+		Params p;
+		p.p1 = p1;
+
+		params.push_back(p);
+	}
+
+	std::vector<Params> params;
+	Slot slot;
+};
+
+#endif



From grumbel at berlios.de  Thu Aug  4 01:37:58 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 01:37:58 +0200
Subject: [Windstille-commit] r889 - in trunk/src: . scripting
Message-ID: <200508032337.j73NbwQo003559@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 01:37:46 +0200 (Thu, 04 Aug 2005)
New Revision: 889

Modified:
   trunk/src/blitter.cpp
   trunk/src/console.cpp
   trunk/src/conversation.cpp
   trunk/src/energy_bar.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/tile.cpp
   trunk/src/tile_map.cpp
Log:
- removed some unneeded clanlib includes


Modified: trunk/src/blitter.cpp
===================================================================
--- trunk/src/blitter.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/blitter.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -21,8 +21,6 @@
 #include <iostream>
 #include <algorithm>
 #include <stdint.h>
-#include <ClanLib/Display/pixel_format.h>
-#include <ClanLib/Display/palette.h>
 #include "blitter.hpp"
 
 void generate_border(SDL_Surface* surface,

Modified: trunk/src/console.cpp
===================================================================
--- trunk/src/console.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/console.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -24,7 +24,6 @@
 
 #include <assert.h>
 #include <ClanLib/Display/keys.h>
-#include <ClanLib/Display/keyboard.h>
 #include <ClanLib/core.h>
 #include "math/rect.hpp"
 #include "fonts.hpp"

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/conversation.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -17,7 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/Display/display.h>
 #include "input/controller.hpp"
 #include "input/input_manager.hpp"
 #include "fonts.hpp"

Modified: trunk/src/energy_bar.cpp
===================================================================
--- trunk/src/energy_bar.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/energy_bar.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -17,10 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/Display/color.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
-#include <ClanLib/Display/graphic_context.h>
 #include "globals.hpp"
 #include "player.hpp"
 #include "energy_bar.hpp"

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/scripting/wrapper.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/scripting/wrapper.hpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/tile.cpp
===================================================================
--- trunk/src/tile.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/tile.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -17,9 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/Core/System/error.h>
-#include <ClanLib/Display/sprite_description.h>
-#include <ClanLib/Display/pixel_buffer.h>
 #include <iostream>
 #include "globals.hpp"
 #include "tile.hpp"

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-03 23:33:16 UTC (rev 888)
+++ trunk/src/tile_map.cpp	2005-08-03 23:37:46 UTC (rev 889)
@@ -17,8 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include <sstream>
 #include "tile_map.hpp"
 #include "tile.hpp"
@@ -28,8 +26,6 @@
 #include "display/vertex_array_drawing_request.hpp"
 #include "lisp/properties.hpp"
 
-extern CL_ResourceManager* resources;
-
 TileMap::TileMap(const lisp::Lisp* lisp)
 {
   using namespace lisp;



From grumbel at berlios.de  Thu Aug  4 02:03:36 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 02:03:36 +0200
Subject: [Windstille-commit] r890 - trunk/src
Message-ID: <200508040003.j7403aiA012575@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 02:03:25 +0200 (Thu, 04 Aug 2005)
New Revision: 890

Modified:
   trunk/src/player.hpp
   trunk/src/script_manager.hpp
Log:
- removed another unused header

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-03 23:37:46 UTC (rev 889)
+++ trunk/src/player.hpp	2005-08-04 00:03:25 UTC (rev 890)
@@ -20,8 +20,6 @@
 #ifndef PLAYER_HXX
 #define PLAYER_HXX
 
-#include <ClanLib/core.h>
-
 #include "sprite2d/sprite.hpp"
 #include "input/controller.hpp"
 #include "sprite3d/sprite3d.hpp"

Modified: trunk/src/script_manager.hpp
===================================================================
--- trunk/src/script_manager.hpp	2005-08-03 23:37:46 UTC (rev 889)
+++ trunk/src/script_manager.hpp	2005-08-04 00:03:25 UTC (rev 890)
@@ -3,6 +3,7 @@
 
 #include <vector>
 #include <list>
+#include <map>
 #include <squirrel.h>
 #include <iostream>
 #include "timer.hpp"



From grumbel at berlios.de  Thu Aug  4 02:09:21 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 02:09:21 +0200
Subject: [Windstille-commit] r891 - trunk/src
Message-ID: <200508040009.j7409LaL013981@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 02:09:04 +0200 (Thu, 04 Aug 2005)
New Revision: 891

Modified:
   trunk/src/tile_factory.cpp
   trunk/src/ttf_font.cpp
Log:
- removed to unneded OpenGLStates

Modified: trunk/src/tile_factory.cpp
===================================================================
--- trunk/src/tile_factory.cpp	2005-08-04 00:03:25 UTC (rev 890)
+++ trunk/src/tile_factory.cpp	2005-08-04 00:09:04 UTC (rev 891)
@@ -48,10 +48,6 @@
 {
   using namespace lisp;
 
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();                                                
-  state.setup_2d();                                                  
-
   packers.push_back(new TilePacker(1024, 1024));
   packers.push_back(new TilePacker(1024, 1024));
   color_packer     = 0;

Modified: trunk/src/ttf_font.cpp
===================================================================
--- trunk/src/ttf_font.cpp	2005-08-04 00:03:25 UTC (rev 890)
+++ trunk/src/ttf_font.cpp	2005-08-04 00:09:04 UTC (rev 891)
@@ -171,10 +171,6 @@
     }
   FT_Done_Face(face);
 
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
-
   try {
     impl->texture = Texture(pixelbuffer);
   } catch(...) {



From grumbel at berlios.de  Thu Aug  4 13:41:57 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 13:41:57 +0200
Subject: [Windstille-commit] r892 - trunk/src/signals
Message-ID: <200508041141.j74Bfv1q016014@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 13:41:50 +0200 (Thu, 04 Aug 2005)
New Revision: 892

Added:
   trunk/src/signals/Jamfile
Log:
- added missing file

Added: trunk/src/signals/Jamfile
===================================================================
--- trunk/src/signals/Jamfile	2005-08-04 00:09:04 UTC (rev 891)
+++ trunk/src/signals/Jamfile	2005-08-04 11:41:50 UTC (rev 892)
@@ -0,0 +1,12 @@
+SubDir TOP src signals ;
+
+sources = 
+slot.cpp  slot_generic.cpp
+signal.hpp     signal_v3.hpp	  slotbuffer_v1.hpp   slot_v0.hpp  slot_v4.hpp
+signal_v0.hpp  signal_v4.hpp	   slot_v1.hpp  slot_v5.hpp
+signal_v1.hpp  signal_v5.hpp	  slot_generic.hpp    slot_v2.hpp
+signal_v2.hpp  slotbuffer_v0.hpp  slot.hpp	      slot_v3.hpp signals.hpp
+;
+
+TRANSLATABLE_SOURCES = [ SearchSource $(sources) ] ;
+signals_objects = [ CompileObjects $(sources) ] ;



From grumbel at berlios.de  Thu Aug  4 16:37:07 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 16:37:07 +0200
Subject: [Windstille-commit] r893 - in trunk/src: . display glutil scripting
Message-ID: <200508041437.j74Eb7M9018592@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 16:37:06 +0200 (Thu, 04 Aug 2005)
New Revision: 893

Added:
   trunk/src/glutil/opengl_state.cpp
   trunk/src/glutil/opengl_state.hpp
Modified:
   trunk/src/display/scene_context.cpp
   trunk/src/glutil/Jamfile
   trunk/src/glutil/texture.cpp
   trunk/src/glutil/texture.hpp
   trunk/src/screen.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/text_area.cpp
Log:
- added the beginning of a state checker class

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/display/scene_context.cpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -142,7 +142,7 @@
         state.set_active();
         
         // Weird y-pos is needed since OpenGL is upside down when it comes to y-coordinate
-        impl->lightmap.get_texture().bind();
+        glBindTexture(GL_TEXTURE_2D, impl->lightmap.get_texture().get_handle());
         glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
                             0, 0, 
                             0, 600 - impl->lightmap.get_height(),

Modified: trunk/src/glutil/Jamfile
===================================================================
--- trunk/src/glutil/Jamfile	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/glutil/Jamfile	2005-08-04 14:37:06 UTC (rev 893)
@@ -1,6 +1,8 @@
 SubDir TOP src glutil ;
 
 sources =
+    opengl_state.hpp
+    opengl_state.cpp
     texture.cpp
     texture.hpp
     surface.hpp

Added: trunk/src/glutil/opengl_state.cpp
===================================================================
--- trunk/src/glutil/opengl_state.cpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/glutil/opengl_state.cpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -0,0 +1,93 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "texture.hpp"
+#include "color.hpp"
+#include "opengl_state.hpp"
+
+class OpenGLStateImpl
+{
+};
+
+// The code here is just as placeholder for the moment, should be
+// replaced with something more optimized later
+OpenGLState::OpenGLState()
+  : impl(new OpenGLStateImpl())
+{
+  // init some defaults
+  glDisable(GL_TEXTURE_2D);
+  glDisable(GL_DEPTH_TEST);
+  glDisable(GL_BLEND);
+  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+}
+
+OpenGLState::~OpenGLState()
+{
+}
+
+void
+OpenGLState::bind(const Texture& texture)
+{
+  glBindTexture(GL_TEXTURE_2D, texture.get_handle());
+}
+
+void
+OpenGLState::set_blend_func(GLenum sfactor, GLenum dfactor)
+{
+  glBlendFunc(sfactor, dfactor);
+}
+
+void
+OpenGLState::enable(GLenum cap)
+{
+  glEnable(cap);
+}
+
+void
+OpenGLState::disable(GLenum cap)
+{  
+  glDisable(cap);
+}
+  
+void
+OpenGLState::enable_client_state(GLenum array)
+{
+  glEnableClientState(array);
+}
+
+void
+OpenGLState::disable_client_state(GLenum array)
+{
+  glDisableClientState(array);
+}
+
+void
+OpenGLState::color(const Color& color)
+{
+  glColor4f(color.r, color.g, color.b, color.a);
+}
+
+/* EOF */

Added: trunk/src/glutil/opengl_state.hpp
===================================================================
--- trunk/src/glutil/opengl_state.hpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/glutil/opengl_state.hpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -0,0 +1,65 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_OPENGL_STATE_HPP
+#define HEADER_OPENGL_STATE_HPP
+
+#include <memory>
+#include <GL/gl.h>
+
+class Texture;
+class Color;
+class OpenGLStateImpl;
+
+/** This class manages the state of a OpenGL context, meaning it tries
+    to reduce state changes and in addition to that it gives a well
+    default defined state to begin with. */
+class OpenGLState
+{
+public:
+  OpenGLState();
+  ~OpenGLState();
+
+  void bind(const Texture& texture);
+  void set_blend_func(GLenum sfactor, GLenum dfactor);
+
+  void enable(GLenum cap);
+  void disable(GLenum cap);
+  
+  void enable_client_state(GLenum array);
+  void disable_client_state(GLenum array);
+
+  void color(const Color& color);
+
+private:
+  std::auto_ptr<OpenGLStateImpl> impl;
+
+  OpenGLState (const OpenGLState&);
+  OpenGLState& operator= (const OpenGLState&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/glutil/texture.cpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -236,12 +236,6 @@
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, mode);
 }
 
-void 
-Texture::bind() const
-{
-  glBindTexture(GL_TEXTURE_2D, impl->handle);
-}
-
 Texture::operator bool() const
 {
   return !impl.is_null();

Modified: trunk/src/glutil/texture.hpp
===================================================================
--- trunk/src/glutil/texture.hpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/glutil/texture.hpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -27,6 +27,7 @@
 #ifndef __TEXTURE_HPP__
 #define __TEXTURE_HPP__
 
+#include <string>
 #include <GL/gl.h>
 #include <SDL.h>
 #include "../sharedptr.hpp"
@@ -69,8 +70,6 @@
   /** Uploads the given image to the given coordinates */
   void put(SDL_Surface* image, int x, int y);
 
-  void bind() const;
-
   GLuint get_handle() const;
 
   /** true if the Texture is valid and usable, false if not */

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/screen.cpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -77,12 +77,19 @@
 
   sound_manager->update();
 
-  draw();
+  {
+    CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
+    state.set_active(); 
+    state.setup_2d(); 
+
+    draw();
     
-  if (config->show_fps)
-    draw_fps(delta);
+    if (config->show_fps)
+      draw_fps(delta);
   
-  console.draw();
+    console.draw();
+  }
+
   CL_Display::flip(0);
   ++frames;
   

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/scripting/wrapper.cpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/scripting/wrapper.hpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-04 11:41:50 UTC (rev 892)
+++ trunk/src/text_area.cpp	2005-08-04 14:37:06 UTC (rev 893)
@@ -123,10 +123,6 @@
 void
 TextArea::draw()
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
-
   glDisable(GL_DEPTH_TEST);
   glEnable(GL_TEXTURE_2D);
   glEnable(GL_BLEND);



From grumbel at berlios.de  Thu Aug  4 19:03:51 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 19:03:51 +0200
Subject: [Windstille-commit] r894 - in trunk/src: . display glutil sprite3d
Message-ID: <200508041703.j74H3p8N012628@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 19:03:43 +0200 (Thu, 04 Aug 2005)
New Revision: 894

Modified:
   trunk/src/display/display.cpp
   trunk/src/display/drawing_context.cpp
   trunk/src/display/scene_context.cpp
   trunk/src/display/vertex_array_drawing_request.cpp
   trunk/src/display/vertex_array_drawing_request.hpp
   trunk/src/glutil/opengl_state.cpp
   trunk/src/glutil/opengl_state.hpp
   trunk/src/glutil/surface.cpp
   trunk/src/glutil/surface_manager.cpp
   trunk/src/glutil/texture.cpp
   trunk/src/glutil/texture_manager.cpp
   trunk/src/graphic_context_state.cpp
   trunk/src/sprite3d/sprite3d.cpp
   trunk/src/ttf_font.cpp
   trunk/src/windstille_main.cpp
Log:
- changed most code to use OpenGLState instead of CL_OpenGLState


Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/display/display.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -23,21 +23,19 @@
 **  02111-1307, USA.
 */
 
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include <cmath>
+#include "glutil/opengl_state.hpp"
 #include "display.hpp"
 
 void
 VDisplay::draw_line(const Vector& pos1, const Vector& pos2, const Color& color)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
+  OpenGLState state;
 
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-  glColor4f(color.r, color.g, color.b, color.a);
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
 
   glBegin(GL_LINES);
   glVertex2f(pos1.x, pos1.y);
@@ -48,13 +46,12 @@
 void
 VDisplay::fill_rect(const Rectf& rect, const Color& color)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
+  OpenGLState state;
 
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-  glColor4f(color.r, color.g, color.b, color.a);
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
 
   glBegin(GL_QUADS);
   glVertex2f(rect.left,  rect.top);
@@ -67,13 +64,12 @@
 void
 VDisplay::draw_rect(const Rectf& rect, const Color& color)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
+  OpenGLState state;
 
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-  glColor4f(color.r, color.g, color.b, color.a);
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
 
   glBegin(GL_LINE_STRIP);
   glVertex2f(rect.left,  rect.top);
@@ -87,10 +83,6 @@
 void
 VDisplay::fill_rounded_rect(const Rectf& rect, float radius, const Color& color)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
-
   // Keep radius in the limits, so that we get a circle instead of
   // just graphic junk
   radius = std::min(radius, std::min(rect.get_width()/2, rect.get_height()/2));
@@ -101,10 +93,14 @@
               rect.right   - radius,
               rect.bottom  - radius);
 
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-  glColor4f(color.r, color.g, color.b, color.a);
 
+  OpenGLState state;
+
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
+
   int n = 8;
   glBegin(GL_QUAD_STRIP);
   for(int i = 0; i <= n; ++i)
@@ -129,10 +125,6 @@
 void
 VDisplay::draw_rounded_rect(const Rectf& rect, float radius, const Color& color)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
-
   // Keep radius in the limits, so that we get a circle instead of
   // just graphic junk
   radius = std::min(radius, std::min(rect.get_width()/2, rect.get_height()/2));
@@ -143,10 +135,13 @@
               rect.right   - radius,
               rect.bottom  - radius);
 
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-  glColor4f(color.r, color.g, color.b, color.a);
+  OpenGLState state;
 
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
+
   int n = 4;
   glBegin(GL_LINE_STRIP);
   for(int i = 0; i <= n; ++i)

Modified: trunk/src/display/drawing_context.cpp
===================================================================
--- trunk/src/display/drawing_context.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/display/drawing_context.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -18,16 +18,13 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <assert.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
-#include <ClanLib/Display/graphic_context.h>
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include <iostream>
 #include <iosfwd>
+#include <GL/gl.h>
 #include "fonts.hpp"
 #include "sprite2d/sprite.hpp"
 #include "drawing_context.hpp"
+#include "glutil/opengl_state.hpp"
 #include "glutil/surface_drawing_parameters.hpp"
 #include "glutil/surface.hpp"
 
@@ -50,11 +47,11 @@
   virtual ~FillScreenDrawingRequest() {}
 
   void draw(CL_GraphicContext* gc) {
-    gc->clear(CL_Color(
-                static_cast<unsigned int> (color.r * 255.0),
-                static_cast<unsigned int> (color.g * 255.0),
-                static_cast<unsigned int> (color.b * 255.0),
-                static_cast<unsigned int> (color.a * 255.0)));
+    OpenGLState state;
+    // FIXME: move clear color to opengl_state
+    state.activate();
+    glClearColor(color.r, color.g, color.b, color.a);
+    glClear(GL_COLOR_BUFFER_BIT);
   }
 };
 
@@ -70,10 +67,10 @@
   virtual ~TextDrawingRequest() {}
 
   void draw(CL_GraphicContext* gc) {
-    gc->push_modelview();
-    gc->add_modelview(modelview.matrix);
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
     Fonts::ttffont->draw(int(pos.x), int(pos.y), text);
-    gc->pop_modelview();
+    glPopMatrix();
   }
 };
 
@@ -93,12 +90,12 @@
 
   void draw(CL_GraphicContext* gc) 
   {
-    gc->push_modelview();
-    gc->add_modelview(modelview.matrix);
+    glPushMatrix();
+    glMultMatrixf(modelview.matrix);
 
     surface.draw(params);
 
-    gc->pop_modelview();
+    glPopMatrix();
   }
 };
 
@@ -117,7 +114,7 @@
 {
   if (gc == 0)
     {
-      gc = CL_Display::get_current_window()->get_gc();
+      //gc = CL_Display::get_current_window()->get_gc();
     }
 
   std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/display/scene_context.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -17,9 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/display.h>
-#include <ClanLib/gl.h>
 #include "glutil/surface.hpp"
+#include "glutil/opengl_state.hpp"
 #include "scene_context.hpp"
 
 // The lightmap has a resolution of screen.w/LIGHTMAP, screen.h/LIGHTMAP
@@ -130,19 +129,21 @@
 {
   if (impl->render_mask & LIGHTMAPSCREEN)
     {
-      CL_Display::clear();
+      glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
       
-      CL_Display::push_modelview();
-      CL_Display::add_scale(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
+      glPushMatrix();
+      glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
+
       impl->light.render();
-      CL_Display::pop_modelview();
+      glPopMatrix();
       
       {
-        CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-        state.set_active();
+        OpenGLState state;
         
         // Weird y-pos is needed since OpenGL is upside down when it comes to y-coordinate
-        glBindTexture(GL_TEXTURE_2D, impl->lightmap.get_texture().get_handle());
+        state.bind_texture(impl->lightmap.get_texture());
+        state.activate();
+
         glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
                             0, 0, 
                             0, 600 - impl->lightmap.get_height(),
@@ -150,7 +151,7 @@
       }
     }
 
-  CL_Display::clear();
+  glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
 
   if (impl->render_mask & COLORMAP)
     {
@@ -159,18 +160,17 @@
 
   if (impl->render_mask & LIGHTMAP)
     {
-      CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-      state.set_active(); 
-      state.setup_2d(); 
+      OpenGLState state;
 
       Rectf uv = impl->lightmap.get_uv();
 
-      glEnable(GL_TEXTURE_2D);
-      glBindTexture(GL_TEXTURE_2D, impl->lightmap.get_texture().get_handle());
+      state.enable(GL_TEXTURE_2D);
+      state.bind_texture(impl->lightmap.get_texture());
 
-      glEnable(GL_BLEND);
-      glBlendFunc(GL_DST_COLOR, GL_ZERO);
-      
+      state.enable(GL_BLEND);
+      state.set_blend_func(GL_DST_COLOR, GL_ZERO);
+      state.activate();
+
       glBegin(GL_QUADS);
 
       glTexCoord2f(uv.left, uv.bottom);

Modified: trunk/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/display/vertex_array_drawing_request.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -1,26 +1,33 @@
-//  $Id$
-//
-//  Windstille - A Jump'n Shoot Game
-//  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
 #include <config.h>
 
 #include <assert.h>
 
-#include <ClanLib/Display/graphic_context.h>
+#include "glutil/opengl_state.hpp"
 #include "vertex_array_drawing_request.hpp"
 
 VertexArrayDrawingRequest::VertexArrayDrawingRequest(const Vector& pos_, float z_pos_, 
@@ -51,61 +58,57 @@
   assert(texcoords.empty() || int(texcoords.size()/2) == num_vertices());
   assert(colors.empty() || int(colors.size()/4) == num_vertices());
 
-  CL_OpenGLState state(gc);
-  state.set_active();
-  state.setup_2d();
+  OpenGLState state;
 
   glClear(GL_DEPTH_BUFFER_BIT);
-  glDisable(GL_DEPTH_TEST);
+  state.disable(GL_DEPTH_TEST);
+  state.enable(GL_BLEND);
+  state.set_blend_func(blend_sfactor, blend_dfactor);
 
-  glPushMatrix();
-  glMultMatrixf(modelview.matrix);
-
-  glEnable(GL_BLEND);
-  glBlendFunc(blend_sfactor, blend_dfactor);
-
   if (!colors.empty())
     {
-      glEnableClientState(GL_COLOR_ARRAY);
+      state.enable_client_state(GL_COLOR_ARRAY);
       glColorPointer(4, GL_UNSIGNED_BYTE, 0, &*colors.begin());
     }
   else
     {
-      glDisableClientState(GL_COLOR_ARRAY);
-      glColor3f(1.0f, 1.0f, 1.0f);
+      state.disable_client_state(GL_COLOR_ARRAY);
+      state.color(Color(1.0f, 1.0f, 1.0f));
     }
 
   if (!texcoords.empty())
     {
-      glEnableClientState(GL_TEXTURE_COORD_ARRAY);
+      state.enable_client_state(GL_TEXTURE_COORD_ARRAY);
       glTexCoordPointer(2, GL_FLOAT, 0, &*texcoords.begin());
     }
   else
     {
-      glDisableClientState(GL_TEXTURE_COORD_ARRAY);
+      state.disable_client_state(GL_TEXTURE_COORD_ARRAY);
     }
 
   // FIXME: Might be worth to not use VertexArrays when we have a pretty small number of vertices
-  glDisableClientState(GL_NORMAL_ARRAY);
-  glEnableClientState(GL_VERTEX_ARRAY);
+  state.disable_client_state(GL_NORMAL_ARRAY);
+  state.enable_client_state(GL_VERTEX_ARRAY);
+
   glVertexPointer  (3, GL_FLOAT, 0, &*vertices.begin());
   
   if (texture)
     {
-      glEnable(GL_TEXTURE_2D);
-      glBindTexture(GL_TEXTURE_2D, texture.get_handle());
+      state.enable(GL_TEXTURE_2D);
+      state.bind_texture(texture);
     }
   else
     {
-      glDisable(GL_TEXTURE_2D);
+      state.disable(GL_TEXTURE_2D);
     }
 
+  state.activate();
+
+  glPushMatrix();
+  glMultMatrixf(modelview.matrix);
+
   glDrawArrays(mode, start, end);
 
-  glDisableClientState(GL_COLOR_ARRAY);
-  glDisableClientState(GL_TEXTURE_COORD_ARRAY);
-  glDisableClientState(GL_VERTEX_ARRAY);
-
   glPopMatrix();
 }
 

Modified: trunk/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.hpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/display/vertex_array_drawing_request.hpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -21,7 +21,6 @@
 #define HEADER_VERTEX_ARRAY_DRAWING_REQUEST_HXX
 
 #include <vector>
-#include <ClanLib/gl.h>
 #include "color.hpp"
 #include "math/matrix.hpp"
 #include "glutil/texture.hpp"

Modified: trunk/src/glutil/opengl_state.cpp
===================================================================
--- trunk/src/glutil/opengl_state.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/glutil/opengl_state.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -29,6 +29,13 @@
 
 class OpenGLStateImpl
 {
+public:
+  bool was_activated;
+
+  OpenGLStateImpl()
+    : was_activated(false)
+  {}
+
 };
 
 // The code here is just as placeholder for the moment, should be
@@ -42,14 +49,19 @@
   glDisable(GL_BLEND);
   glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
   glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+
+  glDisableClientState(GL_COLOR_ARRAY);
+  glDisableClientState(GL_TEXTURE_COORD_ARRAY);
+  glDisableClientState(GL_VERTEX_ARRAY);
 }
 
 OpenGLState::~OpenGLState()
 {
+  assert(impl->was_activated);
 }
 
 void
-OpenGLState::bind(const Texture& texture)
+OpenGLState::bind_texture(const Texture& texture)
 {
   glBindTexture(GL_TEXTURE_2D, texture.get_handle());
 }
@@ -90,4 +102,11 @@
   glColor4f(color.r, color.g, color.b, color.a);
 }
 
+void
+OpenGLState::activate()
+{
+  // do nothing for now, should be implemented later on
+  impl->was_activated = true;
+}
+
 /* EOF */

Modified: trunk/src/glutil/opengl_state.hpp
===================================================================
--- trunk/src/glutil/opengl_state.hpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/glutil/opengl_state.hpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -42,7 +42,7 @@
   OpenGLState();
   ~OpenGLState();
 
-  void bind(const Texture& texture);
+  void bind_texture(const Texture& texture);
   void set_blend_func(GLenum sfactor, GLenum dfactor);
 
   void enable(GLenum cap);
@@ -53,6 +53,10 @@
 
   void color(const Color& color);
 
+  /** Activates the given state, you *must* call this before you issue
+      gl commands that depend on the given state */
+  void activate();
+
 private:
   std::auto_ptr<OpenGLStateImpl> impl;
 

Modified: trunk/src/glutil/surface.cpp
===================================================================
--- trunk/src/glutil/surface.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/glutil/surface.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -24,10 +24,9 @@
 */
 #include <config.h>
 
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include "surface.hpp"
 #include "math/vector.hpp"
+#include "glutil/opengl_state.hpp"
 #include "surface_drawing_parameters.hpp"
 #include "surface_manager.hpp"
 
@@ -143,13 +142,11 @@
 void
 Surface::draw(const Vector& pos) const
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
-  state.setup_2d(); 
+  OpenGLState state;
+  state.enable(GL_TEXTURE_2D);
+  state.bind_texture(impl->texture);
+  state.activate();
 
-  glEnable(GL_TEXTURE_2D);
-  glBindTexture(GL_TEXTURE_2D, impl->texture.get_handle());
-
   glBegin(GL_QUADS);
 
   glTexCoord2f(impl->uv.left, impl->uv.top);
@@ -170,19 +167,14 @@
 void
 Surface::draw(const SurfaceDrawingParameters& params) const
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
-  state.setup_2d(); 
+  OpenGLState state;
+  state.enable(GL_TEXTURE_2D);
+  state.enable(GL_BLEND);
+  state.set_blend_func(params.blendfunc_src, params.blendfunc_dst);
+  state.bind_texture(impl->texture);
+  state.color(params.color);
+  state.activate();
 
-  glEnable(GL_TEXTURE_2D);
-  glEnable(GL_BLEND);
-  glBlendFunc(params.blendfunc_src, params.blendfunc_dst);
-  glBindTexture(GL_TEXTURE_2D, impl->texture.get_handle());
-  glColor4f(params.color.r,
-            params.color.g,
-            params.color.b,
-            params.color.a);
-
   glBegin(GL_QUADS);
 
   // FIXME: This is just a primitive prototype, should take things

Modified: trunk/src/glutil/surface_manager.cpp
===================================================================
--- trunk/src/glutil/surface_manager.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/glutil/surface_manager.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -6,9 +6,6 @@
 #include <sstream>
 #include <stdexcept>
 #include <SDL_image.h>
-#include <ClanLib/GL/opengl_state.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
 #include <GL/gl.h>
 #include <GL/glext.h>
 #include "util.hpp"
@@ -127,10 +124,6 @@
 SurfaceManager::create_texture(SDL_Surface* image,
                                float& maxu, float& maxv)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
-
   int texture_w = power_of_two(image->w);
   int texture_h = power_of_two(image->h);
 #if SDL_BYTEORDER == SDL_BIG_ENDIAN

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/glutil/texture.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -24,14 +24,14 @@
 **  02111-1307, USA.
 */
 
+#include <ClanLib/display.h>
+#include <ClanLib/gl.h>
 #include <stdexcept>
 #include <iostream>
 #include <GL/gl.h>
 #include <GL/glext.h>
-#include <ClanLib/GL/opengl_state.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
 #include "texture.hpp"
+#include "glutil/opengl_state.hpp"
 #include "texture_manager.hpp"
 #include "util.hpp"
 
@@ -45,16 +45,14 @@
   TextureImpl()
   {
     CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-    state.set_active();                                                
-
+    state.set_active(); 
     glGenTextures(1, &handle);
   }
 
   TextureImpl::~TextureImpl()
   {
     CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-    state.set_active();                                                
-
+    state.set_active(); 
     glDeleteTextures(1, &handle);
   }
 };
@@ -76,10 +74,13 @@
   impl->width  = width;
   impl->height = height;
 
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
-  
-  glBindTexture(GL_TEXTURE_2D, impl->handle);
+  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
+  cstate.set_active(); 
+
+  OpenGLState state;
+  state.bind_texture(*this);
+  state.activate();
+
   glTexImage2D(GL_TEXTURE_2D, 0, format, width, height, 0, GL_RGBA,
                GL_UNSIGNED_BYTE, 0);
 
@@ -107,19 +108,20 @@
   if(format->BitsPerPixel != 24 && format->BitsPerPixel != 32)
     throw std::runtime_error("image has not 24 or 32 bit color depth");
 
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
+  assert_gl("creating texture handle.");
 
-  glEnable(GL_TEXTURE_2D);
+  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
+  cstate.set_active(); 
 
-  assert_gl("creating texture handle.");
-
   try 
     {
       GLint maxt;
       glGetIntegerv(GL_MAX_TEXTURE_SIZE, &maxt);
       if(image->w > maxt || image->h > maxt)
-        throw std::runtime_error("Texture size not supported");
+        {
+          
+          throw std::runtime_error("Texture size not supported");
+        }
 
       GLint sdl_format;
       if (format->BytesPerPixel == 3)
@@ -135,7 +137,11 @@
           throw std::runtime_error("Texture: Image format not supported");
         }
 
-      glBindTexture(GL_TEXTURE_2D, impl->handle);
+      OpenGLState state;
+      state.enable(GL_TEXTURE_2D);
+      state.bind_texture(*this);
+      state.activate();
+
       glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
       glPixelStorei(GL_UNPACK_ROW_LENGTH, image->pitch/format->BytesPerPixel);
       glTexImage2D(GL_TEXTURE_2D, 0, glformat,
@@ -183,9 +189,6 @@
 void
 Texture::put(SDL_Surface* image, int x, int y)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
-
   GLint sdl_format;
   if (image->format->BytesPerPixel == 3)
     {
@@ -200,8 +203,14 @@
       throw std::runtime_error("Texture: Image format not supported");
     }
 
+  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
+  cstate.set_active(); 
+
+  OpenGLState state;
+  state.bind_texture(*this);
+  state.activate();
+
   // FIXME: Add some checks here to make sure image has the right format 
-  glBindTexture(GL_TEXTURE_2D, impl->handle);
   glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
   glPixelStorei(GL_UNPACK_ROW_LENGTH,
                 image->pitch / image->format->BytesPerPixel);
@@ -214,11 +223,12 @@
 void
 Texture::set_wrap(GLenum mode)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
-  
-  glBindTexture(GL_TEXTURE_2D, impl->handle);
+  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
+  cstate.set_active(); 
 
+  OpenGLState state;
+  state.bind_texture(*this);
+
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, mode);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, mode);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_R, mode); // FIXME: only good for 3d textures?!
@@ -227,11 +237,13 @@
 void
 Texture::set_filter(GLenum mode)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active(); 
-  
-  glBindTexture(GL_TEXTURE_2D, impl->handle);
+  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
+  cstate.set_active(); 
 
+  OpenGLState state;
+  state.bind_texture(*this);
+  state.activate();
+
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, mode);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, mode);
 }

Modified: trunk/src/glutil/texture_manager.cpp
===================================================================
--- trunk/src/glutil/texture_manager.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/glutil/texture_manager.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -6,9 +6,6 @@
 #include <sstream>
 #include <stdexcept>
 #include <SDL_image.h>
-#include <ClanLib/GL/opengl_state.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
 #include <GL/gl.h>
 #include <GL/glext.h>
 #include "util.hpp"

Modified: trunk/src/graphic_context_state.cpp
===================================================================
--- trunk/src/graphic_context_state.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/graphic_context_state.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -17,11 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
-#include <ClanLib/Display/graphic_context.h>
-#include <ClanLib/GUI/component.h>
 #include <math.h>
+#include <GL/gl.h>
 #include "display/scene_context.hpp"
 #include "graphic_context_state.hpp"
 
@@ -85,26 +82,20 @@
 void
 GraphicContextState::push(CL_GraphicContext* gc)
 {
-  if (gc == 0)
-    gc = CL_Display::get_current_window()->get_gc();
+  glPushMatrix();
   
-  gc->push_modelview();
+  glTranslatef(impl->width/2, impl->height/2, 0);
+  glRotatef(impl->rotation, 0, 0, 1.0);
+  glTranslatef(-impl->width/2, -impl->height/2, 0);
 
-  gc->add_translate(impl->width/2, impl->height/2);
-  gc->add_rotate(impl->rotation, 0, 0, 1.0);
-  gc->add_translate(-impl->width/2, -impl->height/2);
-
-  gc->add_scale(get_zoom(), get_zoom());
-  gc->add_translate(impl->offset.x, impl->offset.y);
+  glScalef(get_zoom(), get_zoom(), 1.0f);
+  glTranslatef(impl->offset.x, impl->offset.y, 0);
 }
 
 void
 GraphicContextState::pop(CL_GraphicContext* gc)
 {
-  if (gc == 0)
-    gc = CL_Display::get_current_window()->get_gc();
-  
-  gc->pop_modelview();
+  glPopMatrix();
 }
 
 Rectf

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -31,6 +31,7 @@
 #include "globals.hpp"
 #include "util.hpp"
 #include "timer.hpp"
+#include "glutil/opengl_state.hpp"
 #include "sprite3d/manager.hpp"
 #include "sprite3d/data.hpp"
 
@@ -333,10 +334,6 @@
 void
 Sprite3D::draw(CL_GraphicContext* gc, const Vector& pos, const Matrix& modelview) const
 {
-  CL_OpenGLState state(gc);
-  state.set_active();
-  state.setup_2d();
-
   glMatrixMode(GL_MODELVIEW);
   glPushMatrix(); 
   glMultMatrixf(modelview.matrix);
@@ -345,22 +342,23 @@
     glRotatef(180, 0, 1.0, 0);
   } 
 
-  glEnable(GL_TEXTURE_2D);
+  OpenGLState state;
+  state.enable(GL_TEXTURE_2D);
 
   if (blend_sfactor != GL_ONE || blend_dfactor != GL_ZERO)
     {
-      glEnable(GL_BLEND);
-      glBlendFunc(blend_sfactor, blend_dfactor);
+      state.enable(GL_BLEND);
+      state.set_blend_func(blend_sfactor, blend_dfactor);
     }
   else
     {
       glClear(GL_DEPTH_BUFFER_BIT);
-      glEnable(GL_DEPTH_TEST);
+      state.enable(GL_DEPTH_TEST);
     }
 
-  glEnableClientState(GL_VERTEX_ARRAY);
-  glEnableClientState(GL_NORMAL_ARRAY);
-  glEnableClientState(GL_TEXTURE_COORD_ARRAY);  
+  state.enable_client_state(GL_VERTEX_ARRAY);
+  state.enable_client_state(GL_NORMAL_ARRAY);
+  state.enable_client_state(GL_TEXTURE_COORD_ARRAY);  
 
   assert_gl("gl init before sprite");
 
@@ -368,44 +366,47 @@
   const ActionFrame& aframe2 = frame2.action->frames[frame2.frame];
   
   float t_1 = 1.0 - blend_time;
-  for(uint16_t m = 0; m < data->mesh_count; ++m) {
-    const Mesh& mesh = data->meshs[m];
-    const MeshVertices& vertices1 = aframe1.meshs[m];
-    const MeshVertices& vertices2 = aframe2.meshs[m];
+  for(uint16_t m = 0; m < data->mesh_count; ++m) 
+    {
+      const Mesh& mesh = data->meshs[m];
+      const MeshVertices& vertices1 = aframe1.meshs[m];
+      const MeshVertices& vertices2 = aframe2.meshs[m];
 
-    // set texture
-    glBindTexture(GL_TEXTURE_2D, mesh.texture.get_handle());
-    
-    // blend between frame1 + frame2
-    float verts[mesh.vertex_count * 3];
-    if(frame1.rot == frame2.rot) {
-      for(uint16_t v = 0; v < mesh.vertex_count*3; ++v) {
-        verts[v] 
-          = vertices1.vertices[v] * t_1 + vertices2.vertices[v] * blend_time;
+      // set texture
+      state.bind_texture(mesh.texture);
+
+      // blend between frame1 + frame2
+      float verts[mesh.vertex_count * 3];
+      if(frame1.rot == frame2.rot) {
+        for(uint16_t v = 0; v < mesh.vertex_count*3; ++v) {
+          verts[v] 
+            = vertices1.vertices[v] * t_1 + vertices2.vertices[v] * blend_time;
+        }
+      } else {
+        // need to manually rotate 180 degree here because frames have different
+        // rot values (=> x=-x, y=y, z=-z)
+        for(uint16_t v = 0; v < mesh.vertex_count; ++v) {
+          verts[v*3] 
+            = vertices1.vertices[v*3] * t_1 
+            - vertices2.vertices[v*3] * blend_time;
+          verts[v*3+1]
+            = vertices1.vertices[v*3+1] * t_1 
+            + vertices2.vertices[v*3+1] * blend_time;
+          verts[v*3+2]
+            = vertices1.vertices[v*3+2] * t_1
+            - vertices2.vertices[v*3+2] * blend_time;
+        }
       }
-    } else {
-      // need to manually rotate 180 degree here because frames have different
-      // rot values (=> x=-x, y=y, z=-z)
-      for(uint16_t v = 0; v < mesh.vertex_count; ++v) {
-        verts[v*3] 
-          = vertices1.vertices[v*3] * t_1 
-              - vertices2.vertices[v*3] * blend_time;
-        verts[v*3+1]
-          = vertices1.vertices[v*3+1] * t_1 
-              + vertices2.vertices[v*3+1] * blend_time;
-        verts[v*3+2]
-          = vertices1.vertices[v*3+2] * t_1
-              - vertices2.vertices[v*3+2] * blend_time;
-      }
+
+      state.activate();
+
+      // draw mesh
+      glVertexPointer(3, GL_FLOAT, 0, verts);
+      glNormalPointer(GL_FLOAT, 0, mesh.normals);
+      glTexCoordPointer(2, GL_FLOAT, 0, mesh.tex_coords);
+      glDrawElements(GL_TRIANGLES, mesh.triangle_count * 3, GL_UNSIGNED_SHORT,
+                     mesh.vertex_indices);
     }
-   
-    // draw mesh
-    glVertexPointer(3, GL_FLOAT, 0, verts);
-    glNormalPointer(GL_FLOAT, 0, mesh.normals);
-    glTexCoordPointer(2, GL_FLOAT, 0, mesh.tex_coords);
-    glDrawElements(GL_TRIANGLES, mesh.triangle_count * 3, GL_UNSIGNED_SHORT,
-        mesh.vertex_indices);
-  }
 
   assert_gl("rendering 3d sprite");      
 

Modified: trunk/src/ttf_font.cpp
===================================================================
--- trunk/src/ttf_font.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/ttf_font.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -33,6 +33,7 @@
 #include FT_FREETYPE_H
 #include FT_GLYPH_H
 
+#include "glutil/opengl_state.hpp"
 #include "physfs/physfs_stream.hpp"
 #include "glutil/texture_manager.hpp"
 #include "blitter.hpp"
@@ -201,22 +202,19 @@
 void
 TTFFont::draw(float x_pos, float y_pos, const std::string& str, const Color& color)
 {
-  CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-  state.set_active();
-  state.setup_2d();
+  OpenGLState state;
 
-  glDisable(GL_DEPTH_TEST);
-  glEnable(GL_TEXTURE_2D);
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.enable(GL_TEXTURE_2D);
+  state.bind_texture(impl->texture);
+  state.color(color);
+  state.activate();
 
-  glBindTexture(GL_TEXTURE_2D, impl->texture.get_handle());
-
   // Voodoo to get non-blurry fonts
   float mx = -0.375;
   float my = -0.375; 
   glBegin(GL_QUADS);
-  glColor4f(color.r, color.g, color.b, color.a);
   for(std::string::const_iterator i = str.begin(); i != str.end(); ++i)
     {
       const TTFCharacter& character = impl->characters[*i];

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-04 14:37:06 UTC (rev 893)
+++ trunk/src/windstille_main.cpp	2005-08-04 17:03:43 UTC (rev 894)
@@ -274,8 +274,6 @@
   window = new CL_DisplayWindow("Windstille",
                                 config->screen_width, config->screen_height,
                                 config->use_fullscreen, false);
-  CL_Display::clear();
-  CL_Display::flip(0);
 
   resources =  new CL_ResourceManager();
   resources->add_resources(CL_ResourceManager(datadir + "windstille.xml", false));



From grumbel at berlios.de  Thu Aug  4 20:39:44 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 20:39:44 +0200
Subject: [Windstille-commit] r895 - in trunk: . src src/glutil src/input src/scripting
Message-ID: <200508041839.j74IdiPv009497@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 20:39:41 +0200 (Thu, 04 Aug 2005)
New Revision: 895

Modified:
   trunk/configure.ac
   trunk/src/game_session.cpp
   trunk/src/glutil/texture.cpp
   trunk/src/input/input_manager_custom.cpp
   trunk/src/screen.cpp
   trunk/src/screen.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/view.cpp
   trunk/src/windstille_main.cpp
   trunk/src/windstille_main.hpp
Log:
- switched from ClanLib to SDL

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/configure.ac	2005-08-04 18:39:41 UTC (rev 895)
@@ -4,7 +4,7 @@
 #----------------------------------------------------------------------------
 AC_PREREQ([2.54])
 
-AC_INIT([windstille], [0.5], [matze at braunis.de])
+AC_INIT([windstille], [0.3.0], [matze at braunis.de])
 AC_CONFIG_SRCDIR([mk/jam/build.jam])
 AC_CONFIG_AUX_DIR([mk/autoconf])
 
@@ -96,7 +96,7 @@
     AC_MSG_ERROR([You need to have GLU headers and libraries installed])
 fi
 
-PKG_CHECK_MODULES([CLANLIB], [clanApp-0.7 clanCore-0.7 clanDisplay-0.7 clanGL-0.7 clanSignals-0.7])
+PKG_CHECK_MODULES([CLANLIB], [clanCore-0.7 clanDisplay-0.7 clanGL-0.7 clanSignals-0.7])
 
 XIPH_PATH_OGG(, [AC_MSG_ERROR([Please install libogg])])
 XIPH_PATH_VORBIS(, [AC_MSG_ERROR([Please install libvorbis])])

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/game_session.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -67,8 +67,8 @@
   if (debug) std::cout << "Creating new GameSession" << std::endl;
   current_ = this;
   
-  slots.push_back(CL_Keyboard::sig_key_down().connect(this, &GameSession::on_key_down));
-  slots.push_back(CL_Mouse::sig_key_down().connect(this, &GameSession::on_mouse_down));
+  //FIXME:slots.push_back(CL_Keyboard::sig_key_down().connect(this, &GameSession::on_key_down));
+  //FIXME:slots.push_back(CL_Mouse::sig_key_down().connect(this, &GameSession::on_mouse_down));
 
   view = new View();  
   energy_bar = new EnergyBar();
@@ -138,27 +138,18 @@
     default:
       break;
     }
-
-  if (!main_app.screenshot_dir.empty())
-    {
-      std::stringstream filename;
-      filename << main_app.screenshot_dir;
-      filename.width(8);
-      filename.fill('0');
-      filename << frames;
-      filename << ".png";
-      CL_ProviderFactory::save(CL_Display::get_front_buffer(), filename.str());
-    }
 }
 
 void
 GameSession::update(float delta)
 {  
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD1))
+  Uint8 *keystate = SDL_GetKeyState(NULL);
+
+  if(keystate[SDLK_KP1])
     game_speed *= 1.0 - delta;
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD3))
+  if(keystate[SDLK_KP3])
     game_speed *= 1.0 + delta;
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD5))
+  if(keystate[SDLK_KP5])
     game_speed = 1.0;
 
   InputManager::update(delta);
@@ -202,7 +193,7 @@
     }
   conversation->update(delta);
   
-  if (CL_Keyboard::get_keycode(CL_KEY_ESCAPE))
+  if(keystate[SDLK_ESCAPE])
     quit();
 }
 

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/glutil/texture.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -44,15 +44,11 @@
 
   TextureImpl()
   {
-    CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-    state.set_active(); 
     glGenTextures(1, &handle);
   }
 
   TextureImpl::~TextureImpl()
   {
-    CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-    state.set_active(); 
     glDeleteTextures(1, &handle);
   }
 };
@@ -74,9 +70,6 @@
   impl->width  = width;
   impl->height = height;
 
-  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
-  cstate.set_active(); 
-
   OpenGLState state;
   state.bind_texture(*this);
   state.activate();
@@ -110,9 +103,6 @@
 
   assert_gl("creating texture handle.");
 
-  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
-  cstate.set_active(); 
-
   try 
     {
       GLint maxt;
@@ -203,9 +193,6 @@
       throw std::runtime_error("Texture: Image format not supported");
     }
 
-  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
-  cstate.set_active(); 
-
   OpenGLState state;
   state.bind_texture(*this);
   state.activate();
@@ -223,9 +210,6 @@
 void
 Texture::set_wrap(GLenum mode)
 {
-  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
-  cstate.set_active(); 
-
   OpenGLState state;
   state.bind_texture(*this);
 
@@ -237,9 +221,6 @@
 void
 Texture::set_filter(GLenum mode)
 {
-  CL_OpenGLState cstate(CL_Display::get_current_window()->get_gc());
-  cstate.set_active(); 
-
   OpenGLState state;
   state.bind_texture(*this);
   state.activate();

Modified: trunk/src/input/input_manager_custom.cpp
===================================================================
--- trunk/src/input/input_manager_custom.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/input/input_manager_custom.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -36,45 +36,48 @@
 
 InputManagerCustom::InputManagerCustom(const lisp::Lisp* lisp)
 {
-  init(lisp);
+  if (0) // FIXME: input disabled, change this to SDL
+    {
+      init(lisp);
 
-  for (int i = 0; i < (int)buttons.size(); ++i)
-    {
-      if (buttons[i])
+      for (int i = 0; i < (int)buttons.size(); ++i)
         {
-          slots.push_back(buttons[i]->on_key_down().connect(this, &InputManagerCustom::on_button_down, i));
-          slots.push_back(buttons[i]->on_key_up().connect  (this, &InputManagerCustom::on_button_up,   i));
+          if (buttons[i])
+            {
+              slots.push_back(buttons[i]->on_key_down().connect(this, &InputManagerCustom::on_button_down, i));
+              slots.push_back(buttons[i]->on_key_up().connect  (this, &InputManagerCustom::on_button_up,   i));
+            }
+          else
+            {
+              std::cout << "# Warrning: Button '" << ControllerDef::button_id2name(i)
+                        << "' not configured and will not be usable" << std::endl;
+            }
         }
-      else
-        {
-          std::cout << "# Warrning: Button '" << ControllerDef::button_id2name(i)
-                    << "' not configured and will not be usable" << std::endl;
-        }
-    }
 
-  for (int i = 0; i < (int)axes.size(); ++i)
-    {
-      if (axes[i])
+      for (int i = 0; i < (int)axes.size(); ++i)
         {
-          slots.push_back(axes[i]->on_move().connect(this, &InputManagerCustom::on_axis_move, i));
+          if (axes[i])
+            {
+              slots.push_back(axes[i]->on_move().connect(this, &InputManagerCustom::on_axis_move, i));
+            }
+          else
+            {
+              std::cout << "# Warrning: Axis '" << ControllerDef::axis_id2name(i)
+                        << "' not configured and will not be usable" << std::endl;
+            }
         }
-      else
-        {
-          std::cout << "# Warrning: Axis '" << ControllerDef::axis_id2name(i)
-                    << "' not configured and will not be usable" << std::endl;
-        }
-    }
 
-  for (int i = 0; i < (int)keyboards.size(); ++i)
-    {
-      if (keyboards[i])
+      for (int i = 0; i < (int)keyboards.size(); ++i)
         {
-          slots.push_back(keyboards[i]->on_key().connect(this, &InputManagerCustom::on_key));
+          if (keyboards[i])
+            {
+              slots.push_back(keyboards[i]->on_key().connect(this, &InputManagerCustom::on_key));
+            }
+          else
+            {
+              std::cout << "# Warrning: Keyboard not configured" << std::endl;
+            }
         }
-      else
-        {
-          std::cout << "# Warrning: Keyboard not configured" << std::endl;
-        }
     }
 }
 

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/screen.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -17,10 +17,8 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/display.h>
-#include <ClanLib/Core/System/system.h>
-
 #include <math.h>
+#include <iostream>
 #include "display/display.hpp"
 #include "windstille_main.hpp"
 #include "screen.hpp"
@@ -40,12 +38,11 @@
     fps_save(0),
     overlap_delta(0)
 {
-  ticks = CL_System::get_time();
+  ticks = SDL_GetTicks();
 }
 
 Screen::~Screen()
 {
-  CL_Keyboard::sig_key_down().disconnect(slot);
 }
 
 void 
@@ -55,9 +52,9 @@
   /// independed of the number of frames and always constant
   static const float step = 10/1000.0f;
 
-  slot = CL_Keyboard::sig_key_down().connect(this, &Screen::key_down);
+  //slot = CL_Keyboard::sig_key_down().connect(this, &Screen::key_down);
 
-  unsigned int now = CL_System::get_time();
+  Uint32 now = SDL_GetTicks();
   float delta = static_cast<float>(now - ticks) / 1000.0f;
   ticks = now;
 
@@ -78,22 +75,29 @@
   sound_manager->update();
 
   {
-    CL_OpenGLState state(CL_Display::get_current_window()->get_gc());
-    state.set_active(); 
-    state.setup_2d(); 
-
     draw();
     
     if (config->show_fps)
       draw_fps(delta);
-  
+ 
     console.draw();
   }
 
-  CL_Display::flip(0);
+  SDL_GL_SwapBuffers();
   ++frames;
   
-  CL_System::keep_alive ();
+  SDL_Event event;
+  while(SDL_PollEvent(&event))
+    {
+      switch(event.type)
+        {
+        case SDL_QUIT:
+          // FIXME: This should be a bit more gentle, but will do for now
+          exit(EXIT_SUCCESS);
+          break;
+        }
+    }
+
 }
 
 void 

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/screen.hpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -20,6 +20,8 @@
 #ifndef HEADER_SCREEN_HXX
 #define HEADER_SCREEN_HXX
 
+#include <ClanLib/display.h>
+#include <ClanLib/core.h>
 #include "signals/slot.hpp"
 
 class CL_InputEvent;

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/scripting/wrapper.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/scripting/wrapper.hpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/view.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -17,7 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/display.h>
+#include <SDL.h>
 #include "display/display.hpp"
 #include "player.hpp"
 #include "sector.hpp"
@@ -49,20 +49,22 @@
 {
   camera.update(delta);
 
-  if (CL_Keyboard::get_keycode(CL_KEY_ADD))
+  Uint8 *keystate = SDL_GetKeyState(NULL);
+
+  if (keystate[SDLK_KP_PLUS])
     zoom *= 1.0 + delta;
-  if (CL_Keyboard::get_keycode(CL_KEY_SUBTRACT))
+  if (keystate[SDLK_KP_MINUS])
     zoom *= 1.0 - delta;
 
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD2))
+  if(keystate[SDLK_KP2])
     transform.y += delta * 200 / zoom;
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD8))
+  if(keystate[SDLK_KP8])
     transform.y -= delta * 200 / zoom;
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD4))
+  if(keystate[SDLK_KP4])
     transform.x -= delta * 200 / zoom;
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD6))
+  if(keystate[SDLK_KP6])
     transform.x += delta * 200 / zoom;
-  if(CL_Keyboard::get_keycode(CL_KEY_NUMPAD5)) {
+  if(keystate[SDLK_KP5]){
     transform = Vector(0, 0);
     zoom = 1.0;
   }

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/windstille_main.cpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -54,9 +54,6 @@
 
 using namespace Windstille;
 
-WindstilleMain main_app;
-CL_ResourceManager* resources;
-
 WindstilleMain::WindstilleMain()
   : screen(0)
 {
@@ -171,11 +168,6 @@
 int 
 WindstilleMain::main(int argc, char** argv)
 {
-#ifdef WIN32
-  CL_ConsoleWindow cl_console("Console Output");
-  cl_console.redirect_stdio("windstille.log");
-#endif
-
   try {
     init_physfs(argv[0]);
     init_sdl();
@@ -195,6 +187,8 @@
     parse_command_line(argc, argv);
     init_modules();
 
+    std::cout << "Modules inited" << std::endl;
+
     if (playback_file.empty())
       {
         if (!controller_file.empty())
@@ -261,23 +255,29 @@
   if (debug) std::cout << "Initialising Freetype2" << std::endl;
     
   TTFFont::init();
-
-  if (debug) std::cout << "Initialising ClanLib" << std::endl;
-  // Init ClanLib
-  CL_SetupCore::init();
   
-  if (debug) std::cout << "Initialising GL" << std::endl;
-  CL_SetupGL::init();
+  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
+  SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
 
-  CL_SetupDisplay::init();
+  window = SDL_SetVideoMode(config->screen_width, config->screen_height,
+                            0, SDL_OPENGL | (config->use_fullscreen ? SDL_FULLSCREEN : 0));
+  SDL_WM_SetCaption("Windstille", 0 /* icon */);
 
-  window = new CL_DisplayWindow("Windstille",
-                                config->screen_width, config->screen_height,
-                                config->use_fullscreen, false);
+  std::cout << "Window: " << window->w << "x" << window->h << std::endl;
 
-  resources =  new CL_ResourceManager();
-  resources->add_resources(CL_ResourceManager(datadir + "windstille.xml", false));
+  glViewport(0, 0, window->w, window->h);
+  glMatrixMode(GL_PROJECTION);
+  glLoadIdentity();
 
+#define cl_pixelcenter_constant 0.375
+
+  glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+  glMatrixMode(GL_MODELVIEW);
+  glLoadIdentity();
+  glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
+
   if (debug) std::cout << "Initialising Fonts" << std::endl;
   Fonts::init(); 
   sound_manager = new SoundManager();
@@ -316,14 +316,6 @@
   sound_manager = 0;
   Fonts::deinit();
 
-  delete window;
-
-  CL_SetupDisplay::deinit();
-
-  CL_SetupGL::deinit();
-
-  CL_SetupCore::deinit(); 
-
   TTFFont::deinit();
 }
 
@@ -332,9 +324,9 @@
 {
 #ifdef DEBUG
   // I wanna have usefull backtraces in debug mode
-  if(SDL_Init(SDL_INIT_EVERYTHING | SDL_INIT_NOPARACHUTE) < 0) {
+  if(SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK | SDL_INIT_NOPARACHUTE) < 0) {
 #else
-  if(SDL_Init(SDL_INIT_EVERYTHING) < 0) {
+  if(SDL_Init(SDL_INIT_VIDEO | SDL_INIT_JOYSTICK) < 0) {
 #endif
     std::stringstream msg;
     msg << "Couldn't initialize SDL: " << SDL_GetError();
@@ -474,4 +466,13 @@
   return true;
 }
 
+int main(int argc, char** argv)
+{
+  WindstilleMain main_app;
+
+  main_app.main(argc, argv);
+
+  return 0;
+}
+
 /* EOF */

Modified: trunk/src/windstille_main.hpp
===================================================================
--- trunk/src/windstille_main.hpp	2005-08-04 17:03:43 UTC (rev 894)
+++ trunk/src/windstille_main.hpp	2005-08-04 18:39:41 UTC (rev 895)
@@ -26,12 +26,11 @@
 #ifndef WINDSTILLEMAIN_HPP
 #define WINDSTILLEMAIN_HPP
 
-#include <ClanLib/gl.h>
-#include <ClanLib/application.h>
-
 #include "screen.hpp"
 
-class WindstilleMain : public CL_ClanApplication
+struct SDL_Surface;
+
+class WindstilleMain
 {
 public:
   std::string levelfile;
@@ -40,13 +39,12 @@
   std::string playback_file;
   std::string screenshot_dir;
   
-  CL_DisplayWindow* window;
+  SDL_Surface* window;
 public:
   WindstilleMain();
   ~WindstilleMain();
 
-  virtual char* get_title() { return "Windstille"; }
-  virtual int main(int argc, char** argv);
+  int main(int argc, char** argv);
 
 private:
   void init_sdl();
@@ -59,8 +57,6 @@
   Windstille::Screen* screen;
 };
 
-extern WindstilleMain main_app;
-
 #endif
 
 /* EOF */



From grumbel at berlios.de  Thu Aug  4 22:40:16 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 22:40:16 +0200
Subject: [Windstille-commit] r896 - in trunk/src: . collision display input
Message-ID: <200508042040.j74KeGwD016621@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 22:40:15 +0200 (Thu, 04 Aug 2005)
New Revision: 896

Added:
   trunk/src/event_manager.cpp
   trunk/src/event_manager.hpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/camera.cpp
   trunk/src/collision/collision_object.cpp
   trunk/src/console.cpp
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/display/display.cpp
   trunk/src/display/display.hpp
   trunk/src/game_session.cpp
   trunk/src/input/Jamfile
   trunk/src/input/input_manager.cpp
   trunk/src/input/input_manager_custom.cpp
   trunk/src/input/input_manager_custom.hpp
   trunk/src/input/input_manager_impl.cpp
   trunk/src/screen.cpp
   trunk/src/view.cpp
   trunk/src/windstille_main.cpp
   trunk/src/windstille_main.hpp
Log:
- fixed control issues a bit

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/Jamfile	2005-08-04 20:40:15 UTC (rev 896)
@@ -40,6 +40,8 @@
         dialog_manager.hpp
         energy_bar.cpp
         energy_bar.hpp
+        event_manager.hpp
+        event_manager.cpp
         entity.cpp
         entity.hpp
         elevator.hpp

Modified: trunk/src/camera.cpp
===================================================================
--- trunk/src/camera.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/camera.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -50,11 +50,11 @@
   else if (dist < -vscroll_threshold)
     pos.y = tpos.y + vscroll_threshold;
 
-  int start_x = VDisplay::get_width()/2;
-  int end_x   = Sector::current()->get_width() - VDisplay::get_width()/2;
+  int start_x = Display::get_width()/2;
+  int end_x   = Sector::current()->get_width() - Display::get_width()/2;
 
-  int start_y = VDisplay::get_height()/2;
-  int end_y   = Sector::current()->get_height() - VDisplay::get_height()/2;
+  int start_y = Display::get_height()/2;
+  int end_y   = Sector::current()->get_height() - Display::get_height()/2;
 
   if (pos.x < start_x)
     pos.x = start_x;

Modified: trunk/src/collision/collision_object.cpp
===================================================================
--- trunk/src/collision/collision_object.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/collision/collision_object.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -63,11 +63,11 @@
 
   r += v;
 
-  VDisplay::fill_rect(r, Color(1.0f, 1.0f, 1.0f));
+  Display::fill_rect(r, Color(1.0f, 1.0f, 1.0f));
   
-  VDisplay::draw_rect(r, Color(0.6f, 0.6f, 0.6f));
+  Display::draw_rect(r, Color(0.6f, 0.6f, 0.6f));
   
-  VDisplay::draw_line(Vector(r.left + r.get_width ()/2,
+  Display::draw_line(Vector(r.left + r.get_width ()/2,
                              r.top  + r.get_height ()/2),
                       Vector(r.left + r.get_width ()/2  + get_velocity ().x,
                              r.top  + r.get_height ()/2 + get_velocity ().y),

Modified: trunk/src/console.cpp
===================================================================
--- trunk/src/console.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/console.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -164,8 +164,8 @@
   int num_lines = 600 / (Fonts::ttffont->get_height() + 2);
 
   if (console.is_active())
-    VDisplay::fill_rect(Rect(0,0, 800, 600),
-                        Color(0, 0, 0, 0.25f));
+    Display::fill_rect(Rect(0,0, 800, 600),
+                       Color(0, 0, 0, 0.25f));
 
   for(int i = buffer.size()-1 - scroll_offset; i >= 0 && i > int(buffer.size()) - num_lines - scroll_offset; --i)
     {
@@ -231,7 +231,7 @@
 
                   switch (i->keyboard.code)
                     {
-                    case CL_KEY_BACKSPACE:
+                    case SDLK_BACKSPACE:
                       if (!command_line.empty() && cursor_pos > 0)
                         {
                           command_line.erase(cursor_pos - 1, 1);
@@ -239,14 +239,14 @@
                         }
                       break;
 
-                    case CL_KEY_DELETE:
+                    case SDLK_DELETE:
                       if (!command_line.empty())
                         {
                           command_line.erase(cursor_pos, 1);
                         }
                       break;
 
-                    case CL_KEY_DOWN:
+                    case SDLK_DOWN:
                       if (!history.empty())
                         {
                           history_position += 1;
@@ -257,27 +257,27 @@
                         }
                       break;
 
-                    case CL_KEY_HOME:
+                    case SDLK_HOME:
                       cursor_pos = 0;
                       break;
                       
-                    case CL_KEY_END:
+                    case SDLK_END:
                       cursor_pos = command_line.size();
                       break;
                         
-                    case CL_KEY_PRIOR:
+                    case SDLK_PAGEUP:
                       console.scroll(10);
                       break;
 
-                    case CL_KEY_NEXT:
+                    case SDLK_PAGEDOWN:
                       console.scroll(-10);
                       break;
 
-                    case CL_KEY_TAB:
+                    case SDLK_TAB:
                       tab_complete();
                       break;
 
-                    case CL_KEY_UP:
+                    case SDLK_UP:
                       if (!history.empty())
                         {
                           history_position -= 1;
@@ -289,24 +289,24 @@
                         }
                       break;
 
-                    case CL_KEY_LEFT:
+                    case SDLK_LEFT:
                       cursor_pos -= 1;
                       if (cursor_pos < 0)
                         cursor_pos = 0;
                       break;
 
-                    case CL_KEY_RIGHT:
+                    case SDLK_RIGHT:
                       cursor_pos += 1;
                       if (cursor_pos > int(command_line.size()))
                         cursor_pos = command_line.size();
                       break;
 
-                    case CL_KEY_ENTER:
+                    case SDLK_RETURN:
                       eval_command_line();
                       break;
 
-                    case CL_KEY_ESCAPE:
-                    case CL_KEY_F1:
+                    case SDLK_ESCAPE:
+                    case SDLK_F1:
                       console.deactive();
                       break;
                     }

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/conversation.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -57,8 +57,8 @@
                 Size(300 + 20, // FIXME:
                      (Fonts::ttffont->get_height() + 10) * choices.size() + 20));
       
-      VDisplay::fill_rect(rect, Color(0,0,0,0.5f));
-      VDisplay::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.3f));
+      Display::fill_rect(rect, Color(0,0,0,0.5f));
+      Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.3f));
  
       for(int i = 0; i < int(choices.size()); ++i)
         {

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/dialog_manager.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -139,10 +139,10 @@
              pos.x + dialog_width,
              pos.y + 200);
 
-  VDisplay::fill_rounded_rect(rect, 16.0f,
-                              Color(0, 0, 0.3f, 0.5f));
-  VDisplay::draw_rounded_rect(rect, 16.0f,
-                              Color(0.6f, 1.0f, 1.0f, 0.8f));
+  Display::fill_rounded_rect(rect, 16.0f,
+                             Color(0, 0, 0.3f, 0.5f));
+  Display::draw_rounded_rect(rect, 16.0f,
+                             Color(0.6f, 1.0f, 1.0f, 0.8f));
 
   portrait.draw(Vector(pos.x + portrait_border_x,
                        pos.y + portrait_border_y));

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/display/display.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -24,11 +24,16 @@
 */
 
 #include <cmath>
+#include <stdexcept>
+#include <SDL.h>
+#include "gameconfig.hpp"
 #include "glutil/opengl_state.hpp"
 #include "display.hpp"
 
+SDL_Surface* window;
+
 void
-VDisplay::draw_line(const Vector& pos1, const Vector& pos2, const Color& color)
+Display::draw_line(const Vector& pos1, const Vector& pos2, const Color& color)
 {
   OpenGLState state;
 
@@ -44,7 +49,7 @@
 }
 
 void
-VDisplay::fill_rect(const Rectf& rect, const Color& color)
+Display::fill_rect(const Rectf& rect, const Color& color)
 {
   OpenGLState state;
 
@@ -62,7 +67,7 @@
 }
 
 void
-VDisplay::draw_rect(const Rectf& rect, const Color& color)
+Display::draw_rect(const Rectf& rect, const Color& color)
 {
   OpenGLState state;
 
@@ -81,7 +86,7 @@
 }
 
 void
-VDisplay::fill_rounded_rect(const Rectf& rect, float radius, const Color& color)
+Display::fill_rounded_rect(const Rectf& rect, float radius, const Color& color)
 {
   // Keep radius in the limits, so that we get a circle instead of
   // just graphic junk
@@ -123,7 +128,7 @@
 }
 
 void
-VDisplay::draw_rounded_rect(const Rectf& rect, float radius, const Color& color)
+Display::draw_rounded_rect(const Rectf& rect, float radius, const Color& color)
 {
   // Keep radius in the limits, so that we get a circle instead of
   // just graphic junk
@@ -181,15 +186,44 @@
 }
 
 int
-VDisplay::get_width()
+Display::get_width()
 {
-  return 800;
+  return window->w;
 }
 
 int
-VDisplay::get_height()
+Display::get_height()
 {
-  return 600;
+  return window->h;
 }
 
+void
+Display::init()
+{
+  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
+  SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
+  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
+
+  window = SDL_SetVideoMode(config->screen_width, config->screen_height,
+                            0, SDL_OPENGL | (config->use_fullscreen ? SDL_FULLSCREEN : 0));
+  if (!window)
+    {
+      throw std::runtime_error("Display:: Couldn't create window");
+    }
+
+  SDL_WM_SetCaption("Windstille", 0 /* icon */);
+
+  glViewport(0, 0, window->w, window->h);
+  glMatrixMode(GL_PROJECTION);
+  glLoadIdentity();
+
+#define cl_pixelcenter_constant 0.375
+
+  glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+  glMatrixMode(GL_MODELVIEW);
+  glLoadIdentity();
+  glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
+}
+
 /* EOF */

Modified: trunk/src/display/display.hpp
===================================================================
--- trunk/src/display/display.hpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/display/display.hpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -33,7 +33,7 @@
     conflict with X11 header, should be renamed as soon as we got rid
     of ClanLib, which includes the X11 header in one of the
     headerfiles */
-class VDisplay
+class Display
 {
 private:
 public:
@@ -47,6 +47,8 @@
 
   static int  get_width();
   static int  get_height();
+
+  static void init();
 };
 
 #endif

Added: trunk/src/event_manager.cpp
===================================================================
--- trunk/src/event_manager.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/event_manager.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -0,0 +1,118 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <stdlib.h>
+#include <SDL.h>
+#include <iostream>
+#include "console.hpp"
+#include "input/input_manager_sdl.hpp"
+#include "event_manager.hpp"
+
+EventManager* EventManager::instance_ = 0;
+
+EventManager::EventManager()
+{
+  
+}
+
+EventManager::~EventManager()
+{
+  
+}
+
+EventManager*
+EventManager::instance()
+{
+  if (instance_)
+    return instance_;
+  else
+    return (instance_ = new EventManager());
+}
+
+void
+EventManager::update()
+{
+  SDL_Event event;
+  while(SDL_PollEvent(&event))
+    {
+      switch(event.type)
+        {
+        case SDL_QUIT:
+          // FIXME: This should be a bit more gentle, but will do for now
+          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
+          exit(EXIT_SUCCESS);
+          break;
+          
+        case SDL_ACTIVEEVENT:
+          // event.active
+          break;
+          
+        case SDL_VIDEORESIZE:
+          // event.resize
+          break;
+              
+        case SDL_VIDEOEXPOSE:
+          // event.expose
+          break;
+                
+        case SDL_USEREVENT:
+          // event.user
+          break;
+                    
+        case SDL_SYSWMEVENT:
+          // event.syswm
+          break;
+          break;
+
+        case SDL_KEYDOWN:
+        case SDL_KEYUP:
+          if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
+            {
+              console.activate();
+            }
+          else
+            {
+              if (InputManagerSDL::current())
+                InputManagerSDL::current()->on_event(event);
+            }
+          break;
+
+        case SDL_MOUSEMOTION:
+        case SDL_MOUSEBUTTONDOWN:
+        case SDL_MOUSEBUTTONUP:
+        case SDL_JOYAXISMOTION:
+        case SDL_JOYBALLMOTION:
+        case SDL_JOYHATMOTION:
+        case SDL_JOYBUTTONUP:
+        case SDL_JOYBUTTONDOWN:
+          if (InputManagerSDL::current())
+            InputManagerSDL::current()->on_event(event);
+          break;
+        }
+    }
+
+}
+
+/* EOF */

Added: trunk/src/event_manager.hpp
===================================================================
--- trunk/src/event_manager.hpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/event_manager.hpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -0,0 +1,45 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_EVENT_MANAGER_HPP
+#define HEADER_EVENT_MANAGER_HPP
+
+/** Management class for SDL events */
+class EventManager
+{
+private:
+  EventManager();
+  ~EventManager();
+
+  static EventManager* instance_;
+public:
+  static EventManager* instance();
+
+  void update();
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/game_session.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -18,8 +18,6 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <math.h>
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include <sstream>
 #include <stdarg.h>
 
@@ -125,14 +123,14 @@
   switch (fade_state)
     {
     case FADEOUT:
-      VDisplay::fill_rect(Rect(0, 0, 
-                               VDisplay::get_width(), VDisplay::get_height()),
+      Display::fill_rect(Rect(0, 0, 
+                               Display::get_width(), Display::get_height()),
                           Color(0,0,0, fadeout_value));
       break;
     case FADEIN:
-      VDisplay::fill_rect(Rect(0, 0, 
-                               VDisplay::get_width(), VDisplay::get_height()),
-                          Color(0,0,0, 1.0f - fadeout_value));
+      Display::fill_rect(Rect(0, 0, 
+                               Display::get_width(), Display::get_height()),
+                         Color(0,0,0, 1.0f - fadeout_value));
       break;
 
     default:
@@ -271,22 +269,22 @@
     {
       switch(event.id)
         {
-        case CL_KEY_1:
+        case SDLK_1:
           sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
           console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
           break;
 
-        case CL_KEY_2:
+        case SDLK_2:
           sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
           console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
           break;
           
-        case CL_KEY_3:
+        case SDLK_3:
           sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
           console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
           break;      
       
-        case CL_KEY_4:
+        case SDLK_4:
           sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
           console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
           break;

Modified: trunk/src/input/Jamfile
===================================================================
--- trunk/src/input/Jamfile	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/Jamfile	2005-08-04 20:40:15 UTC (rev 896)
@@ -23,6 +23,8 @@
     input_event.hpp
     input_manager_custom.cpp
     input_manager_custom.hpp
+    input_manager_sdl.cpp
+    input_manager_sdl.hpp
     input_manager.cpp
     input_manager.hpp
     input_manager_impl.cpp

Modified: trunk/src/input/input_manager.cpp
===================================================================
--- trunk/src/input/input_manager.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/input_manager.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -29,6 +29,7 @@
 #include "lisp/properties.hpp"
 #include "windstille_error.hpp"
 #include "input_manager_custom.hpp"
+#include "input_manager_sdl.hpp"
 #include "input_manager_player.hpp"
 #include "input_manager_impl.hpp"
 #include "input_recorder.hpp"
@@ -56,7 +57,7 @@
     throw std::runtime_error(msg.str());
   }
   
-  impl = new InputManagerCustom(controller);
+  impl = new InputManagerSDL();
 }
 
 void

Modified: trunk/src/input/input_manager_custom.cpp
===================================================================
--- trunk/src/input/input_manager_custom.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/input_manager_custom.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -122,21 +122,18 @@
 InputManagerCustom::on_axis_move(float pos, int name)
 {
   add_axis_event(name, pos);
-  controller.set_axis_state(name, pos);
 }
 
 void
 InputManagerCustom::on_button_up(int name)
 {
   add_button_event(name, false);
-  controller.set_button_state(name, false);
 }
 
 void
 InputManagerCustom::on_button_down(int name)
 {
   add_button_event(name, true);
-  controller.set_button_state(name, true);
 }
 
 void

Modified: trunk/src/input/input_manager_custom.hpp
===================================================================
--- trunk/src/input/input_manager_custom.hpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/input_manager_custom.hpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -52,6 +52,7 @@
   void on_button_down(int name);
   void on_axis_move(float pos, int name);
   void on_key(KeyboardEvent::KeyType key_type, int code);
+
 private:
   void init(const lisp::Lisp* lisp);
 

Modified: trunk/src/input/input_manager_impl.cpp
===================================================================
--- trunk/src/input/input_manager_impl.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/input_manager_impl.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -40,6 +40,8 @@
   event.axis.name = name;
   event.axis.pos  = pos;
   events.push_back(event);
+
+  controller.set_axis_state(name, pos);
 }
 
 void
@@ -50,6 +52,8 @@
   event.button.name = name;
   event.button.down = down;
   events.push_back(event);
+
+  controller.set_button_state(name, down);
 }
 
 void

Added: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -0,0 +1,148 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <iostream>
+#include "input_manager_sdl.hpp"
+
+InputManagerSDL* InputManagerSDL::current_ = 0;
+
+InputManagerSDL::InputManagerSDL()
+{
+  current_ = this;
+}
+
+InputManagerSDL::~InputManagerSDL()
+{
+}
+
+void
+InputManagerSDL::on_event(const SDL_Event& event)
+{
+  switch(event.type)
+    {        
+    case SDL_KEYUP:
+    case SDL_KEYDOWN:
+      {
+        if (event.key.state)
+          {
+            if ((event.key.keysym.unicode > 0 && event.key.keysym.unicode < 128)
+                && (isgraph(event.key.keysym.unicode) || event.key.keysym.unicode == ' '))
+              {
+                std::cout << "Letter: '" << event.key.keysym.unicode << "'" << std::endl;
+                add_keyboard_event(0, KeyboardEvent::LETTER, event.key.keysym.unicode);
+              }
+            else
+              {
+                std::cout << "Special: '" << event.key.keysym.sym << "'" << std::endl;
+                add_keyboard_event(0, KeyboardEvent::SPECIAL, event.key.keysym.sym);
+              }
+          }
+
+
+        switch (event.key.keysym.sym)
+          {
+          case SDLK_LEFT:
+            add_button_event(LEFT_BUTTON, event.key.state);
+            break;
+
+          case SDLK_RIGHT:
+            add_button_event(RIGHT_BUTTON, event.key.state);
+            break;
+
+          case SDLK_UP:
+            add_button_event(UP_BUTTON, event.key.state);
+            break;
+
+          case SDLK_DOWN:
+            add_button_event(DOWN_BUTTON, event.key.state);
+            break;
+
+          case SDLK_a:
+            add_button_event(RUN_BUTTON, event.key.state);
+            break;
+
+          case SDLK_d:
+            add_button_event(FIRE_BUTTON, event.key.state);
+            break;
+
+          case SDLK_s:
+            add_button_event(JUMP_BUTTON, event.key.state);
+            break;
+
+          case SDLK_w:
+            add_button_event(USE_BUTTON, event.key.state);
+            break;
+            
+          default:
+            break;
+          }
+      }
+      break;
+
+    case SDL_MOUSEMOTION:
+      // event.motion:
+      break;
+
+    case SDL_MOUSEBUTTONDOWN:
+      // event.button
+      break;
+
+    case SDL_MOUSEBUTTONUP:
+      // event.button
+      break;
+
+    case SDL_JOYAXISMOTION:
+      // event.jaxis
+      break;
+
+    case SDL_JOYBALLMOTION:
+      // event.jball
+      break;
+          
+    case SDL_JOYHATMOTION:
+      // event.jhat
+      break;
+          
+    case SDL_JOYBUTTONUP:
+      // event.jbutton
+      break;
+
+    case SDL_JOYBUTTONDOWN:
+      // event.jbutton
+      break;
+
+    default:
+      std::cout << "InputManagerSDL: unknown event" << std::endl;
+      break;
+    }
+}
+
+void
+InputManagerSDL::update(float delta)
+{
+  
+}
+
+/* EOF */

Added: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -0,0 +1,54 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_INPUT_MANAGER_SDL_HPP
+#define HEADER_INPUT_MANAGER_SDL_HPP
+
+#include "input_manager_impl.hpp"
+
+#include <SDL.h>
+
+/** */
+class InputManagerSDL : public InputManagerImpl
+{
+private:
+  static InputManagerSDL* current_;
+public:
+  static InputManagerSDL* current() { return current_; }
+
+  InputManagerSDL();
+  virtual ~InputManagerSDL();
+
+  void update(float delta);
+  
+  void on_event(const SDL_Event& event);
+private:
+  InputManagerSDL (const InputManagerSDL&);
+  InputManagerSDL& operator= (const InputManagerSDL&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/screen.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -26,6 +26,7 @@
 #include "globals.hpp"
 #include "console.hpp"
 #include "gameconfig.hpp"
+#include "event_manager.hpp"
 #include "input/input_manager.hpp"
 #include "sound/sound_manager.hpp"
 
@@ -85,19 +86,8 @@
 
   SDL_GL_SwapBuffers();
   ++frames;
-  
-  SDL_Event event;
-  while(SDL_PollEvent(&event))
-    {
-      switch(event.type)
-        {
-        case SDL_QUIT:
-          // FIXME: This should be a bit more gentle, but will do for now
-          exit(EXIT_SUCCESS);
-          break;
-        }
-    }
 
+  EventManager::instance()->update();
 }
 
 void 
@@ -115,7 +105,7 @@
   char output[20];
   snprintf(output, sizeof(output), "FPS: %d", fps_save);
   
-  Fonts::ttffont->draw(VDisplay::get_width() - 100, 30, output);
+  Fonts::ttffont->draw(Display::get_width() - 100, 30, output);
 }
 
 void
@@ -123,21 +113,21 @@
 {
   switch (event.id) 
     {
-    case CL_KEY_F1:
+    case SDLK_F1:
       if (!console.is_active())
         console.activate();
       break;
 
-    case CL_KEY_C:
+    case SDLK_c:
       if(debug) {
         collision_debug = !collision_debug;
         console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
       }
       break;
-    case CL_KEY_F10:
+    case SDLK_F10:
       config->show_fps = ! (config->show_fps);
       break;
-    case CL_KEY_F11:
+    case SDLK_F11:
       config->use_fullscreen = ! (config->use_fullscreen);
       
       if (config->use_fullscreen)
@@ -146,7 +136,7 @@
       else
         CL_Display::set_windowed();
       break;
-    case CL_KEY_F12:
+    case SDLK_F12:
       std::string filename = "screenshot.png";
       std::cout << "Saving screenshot to: " << filename << std::endl;
       CL_ProviderFactory::save(CL_Display::get_front_buffer(),

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/view.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -26,8 +26,8 @@
 View* View::current_ = 0;
 
 View::View()
-  : state(VDisplay::get_width(), VDisplay::get_height()),
-  zoom(1), transform(0, 0)
+  : state(Display::get_width(), Display::get_height()),
+    zoom(1), transform(0, 0)
 {
   current_ = this;
 }

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/windstille_main.cpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -43,6 +43,7 @@
 #include "gameconfig.hpp"
 #include "util.hpp"
 #include "ttf_font.hpp"
+#include "display/display.hpp"
 #include "glutil/surface_manager.hpp"
 #include "glutil/texture_manager.hpp"
 #include "sprite3d/manager.hpp"
@@ -256,28 +257,8 @@
     
   TTFFont::init();
   
-  SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1); 
-  SDL_GL_SetAttribute(SDL_GL_RED_SIZE, 5);
-  SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
-  SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
+  Display::init();
 
-  window = SDL_SetVideoMode(config->screen_width, config->screen_height,
-                            0, SDL_OPENGL | (config->use_fullscreen ? SDL_FULLSCREEN : 0));
-  SDL_WM_SetCaption("Windstille", 0 /* icon */);
-
-  std::cout << "Window: " << window->w << "x" << window->h << std::endl;
-
-  glViewport(0, 0, window->w, window->h);
-  glMatrixMode(GL_PROJECTION);
-  glLoadIdentity();
-
-#define cl_pixelcenter_constant 0.375
-
-  glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
-  glMatrixMode(GL_MODELVIEW);
-  glLoadIdentity();
-  glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
-
   if (debug) std::cout << "Initialising Fonts" << std::endl;
   Fonts::init(); 
   sound_manager = new SoundManager();
@@ -332,6 +313,8 @@
     msg << "Couldn't initialize SDL: " << SDL_GetError();
     throw std::runtime_error(msg.str());
   }
+
+  SDL_EnableUNICODE(1);
 }
 
 void

Modified: trunk/src/windstille_main.hpp
===================================================================
--- trunk/src/windstille_main.hpp	2005-08-04 18:39:41 UTC (rev 895)
+++ trunk/src/windstille_main.hpp	2005-08-04 20:40:15 UTC (rev 896)
@@ -39,7 +39,6 @@
   std::string playback_file;
   std::string screenshot_dir;
   
-  SDL_Surface* window;
 public:
   WindstilleMain();
   ~WindstilleMain();



From grumbel at berlios.de  Thu Aug  4 23:11:32 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 4 Aug 2005 23:11:32 +0200
Subject: [Windstille-commit] r897 - trunk/src/input
Message-ID: <200508042111.j74LBWvi018314@sheep.berlios.de>

Author: grumbel
Date: 2005-08-04 23:11:31 +0200 (Thu, 04 Aug 2005)
New Revision: 897

Modified:
   trunk/src/input/input_manager_sdl.cpp
Log:
- removed some debug couts
- added hardcoded joystick support

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-04 20:40:15 UTC (rev 896)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-04 21:11:31 UTC (rev 897)
@@ -28,9 +28,16 @@
 
 InputManagerSDL* InputManagerSDL::current_ = 0;
 
+#define DEAD_ZONE 4096
+
 InputManagerSDL::InputManagerSDL()
 {
   current_ = this;
+  
+  int num_joysticks = SDL_NumJoysticks();
+
+  if (num_joysticks > 0)
+    /*SDL_Joystick* joy =*/ SDL_JoystickOpen(0);
 }
 
 InputManagerSDL::~InputManagerSDL()
@@ -50,12 +57,10 @@
             if ((event.key.keysym.unicode > 0 && event.key.keysym.unicode < 128)
                 && (isgraph(event.key.keysym.unicode) || event.key.keysym.unicode == ' '))
               {
-                std::cout << "Letter: '" << event.key.keysym.unicode << "'" << std::endl;
                 add_keyboard_event(0, KeyboardEvent::LETTER, event.key.keysym.unicode);
               }
             else
               {
-                std::cout << "Special: '" << event.key.keysym.sym << "'" << std::endl;
                 add_keyboard_event(0, KeyboardEvent::SPECIAL, event.key.keysym.sym);
               }
           }
@@ -114,7 +119,42 @@
       break;
 
     case SDL_JOYAXISMOTION:
-      // event.jaxis
+      if (event.jaxis.axis == 0) 
+        {
+          if (event.jaxis.value < -DEAD_ZONE)
+            {
+              add_button_event(LEFT_BUTTON, true);   
+              add_button_event(RIGHT_BUTTON, false);
+            }
+          else if (event.jaxis.value > DEAD_ZONE)
+            {
+              add_button_event(LEFT_BUTTON, false); 
+              add_button_event(RIGHT_BUTTON, true); 
+            }
+          else
+            {
+              add_button_event(LEFT_BUTTON, false);
+              add_button_event(RIGHT_BUTTON, false);
+            }
+        }
+      else if (event.jaxis.axis == 1) 
+        {
+          if (event.jaxis.value < -DEAD_ZONE)
+            {
+              add_button_event(UP_BUTTON, true);   
+              add_button_event(DOWN_BUTTON, false);
+            }
+          else if (event.jaxis.value > DEAD_ZONE)
+            {
+              add_button_event(UP_BUTTON, false); 
+              add_button_event(DOWN_BUTTON, true); 
+            }
+          else
+            {
+              add_button_event(UP_BUTTON, false);
+              add_button_event(DOWN_BUTTON, false);
+            }
+        }
       break;
 
     case SDL_JOYBALLMOTION:
@@ -126,11 +166,23 @@
       break;
           
     case SDL_JOYBUTTONUP:
-      // event.jbutton
-      break;
-
     case SDL_JOYBUTTONDOWN:
-      // event.jbutton
+      if (event.jbutton.button == 0)
+        {
+          add_button_event(FIRE_BUTTON, event.jbutton.state); 
+        }
+      else if (event.jbutton.button == 1)
+        {
+          add_button_event(USE_BUTTON, event.jbutton.state); 
+        }
+      else if (event.jbutton.button == 2)
+        {
+          add_button_event(JUMP_BUTTON, event.jbutton.state);
+        }
+      else if (event.jbutton.button == 3)
+        {
+          add_button_event(RUN_BUTTON, event.jbutton.state);
+        }
       break;
 
     default:



From grumbel at berlios.de  Fri Aug  5 00:43:13 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 00:43:13 +0200
Subject: [Windstille-commit] r898 - in trunk/src: . input scripting
Message-ID: <200508042243.j74MhDua031483@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 00:43:04 +0200 (Fri, 05 Aug 2005)
New Revision: 898

Modified:
   trunk/src/controller_def.cpp
   trunk/src/controller_def.hpp
   trunk/src/conversation.cpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/player.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
- changed directions from buttons to axis

Modified: trunk/src/controller_def.cpp
===================================================================
--- trunk/src/controller_def.cpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/controller_def.cpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -22,13 +22,13 @@
 int
 ControllerDef::get_button_count()
 {
-  return 8;
+  return 4;
 }
 
 int
 ControllerDef::get_axis_count()
 {
-  return 0;
+  return 2;
 }
 
 int
@@ -42,14 +42,6 @@
 {
   switch (id)
     {
-    case UP_BUTTON:
-      return "up";
-    case DOWN_BUTTON:
-      return "down";
-    case LEFT_BUTTON:
-      return "left";
-    case RIGHT_BUTTON:
-      return "right";
     case FIRE_BUTTON:
       return "fire";
     case USE_BUTTON:
@@ -66,15 +58,7 @@
 int
 ControllerDef::button_name2id(const std::string& name)
 {
-  if (name == "up") 
-    return UP_BUTTON;
-  else if (name == "down")
-    return DOWN_BUTTON;
-  else if (name == "left")
-    return LEFT_BUTTON;
-  else if (name == "right")
-    return (RIGHT_BUTTON);
-  else if (name == "fire")
+  if (name == "fire")
     return FIRE_BUTTON;
   else if (name == "use")
     return USE_BUTTON;
@@ -87,15 +71,29 @@
 }
 
 std::string
-ControllerDef::axis_id2name(int )
+ControllerDef::axis_id2name(int id)
 {
-  return "unknown";
+  switch (id)
+    {
+    case HORIZONTAL_AXIS:
+      return "horizontal";
+
+    case VERTICAL_AXIS:
+      return "vertical";
+    }
+  
+  return "<unknown>";
 }
 
 int 
-ControllerDef::axis_name2id(const std::string& )
+ControllerDef::axis_name2id(const std::string& id)
 {
-  return -1;
+  if (id == "horizontal")
+    return HORIZONTAL_AXIS;
+  else if (id == "vertical")
+    return VERTICAL_AXIS;
+  else
+    return -1;
 }
 
 /* EOF */

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/controller_def.hpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -23,7 +23,8 @@
 #include <string>
 
 //enum AxisName       { ORIENTATION_AXIS, ACCELERATE_AXIS, STRAFE_AXIS };
-enum ButtonName     { UP_BUTTON, DOWN_BUTTON, LEFT_BUTTON, RIGHT_BUTTON, FIRE_BUTTON, JUMP_BUTTON, USE_BUTTON, RUN_BUTTON };
+enum AxisName    { HORIZONTAL_AXIS, VERTICAL_AXIS };
+enum ButtonName  { FIRE_BUTTON, JUMP_BUTTON, USE_BUTTON, RUN_BUTTON };
 
 /** */
 class ControllerDef

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/conversation.cpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -80,6 +80,19 @@
     {
       Controller controller = InputManager::get_controller();
       const InputEventLst& events = controller.get_events();
+
+      if (controller.get_axis_state(VERTICAL_AXIS) > 0)
+        {
+          selection -= 1;
+          if (selection < 0)
+            selection = choices.size() - 1;
+        }
+      else if (controller.get_axis_state(VERTICAL_AXIS) < 0)
+        {        
+          selection += 1;
+          if (selection >= int(choices.size()))
+            selection = 0;
+        }
   
       for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
         {
@@ -87,18 +100,6 @@
             {
               switch (i->button.name)
                 {
-                case UP_BUTTON:
-                  selection -= 1;
-                  if (selection < 0)
-                    selection = choices.size() - 1;
-                  break;
-              
-                case DOWN_BUTTON:
-                  selection += 1;
-                  if (selection >= int(choices.size()))
-                    selection = 0;
-                  break;
-
                 case FIRE_BUTTON:
                   visible = false;
                   choices.clear();

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -69,19 +69,31 @@
         switch (event.key.keysym.sym)
           {
           case SDLK_LEFT:
-            add_button_event(LEFT_BUTTON, event.key.state);
+            if (event.key.state)
+              add_axis_event(HORIZONTAL_AXIS, -1.0);
+            else
+              add_axis_event(HORIZONTAL_AXIS, 0);
             break;
 
           case SDLK_RIGHT:
-            add_button_event(RIGHT_BUTTON, event.key.state);
+            if (event.key.state)
+              add_axis_event(HORIZONTAL_AXIS, 1.0);
+            else
+              add_axis_event(HORIZONTAL_AXIS, 0);
             break;
 
           case SDLK_UP:
-            add_button_event(UP_BUTTON, event.key.state);
+            if (event.key.state)
+              add_axis_event(VERTICAL_AXIS, 1.0);
+            else
+              add_axis_event(VERTICAL_AXIS, 0);
             break;
 
           case SDLK_DOWN:
-            add_button_event(DOWN_BUTTON, event.key.state);
+            if (event.key.state)
+              add_axis_event(VERTICAL_AXIS, -1.0);
+            else
+              add_axis_event(VERTICAL_AXIS, 0);
             break;
 
           case SDLK_a:
@@ -123,36 +135,30 @@
         {
           if (event.jaxis.value < -DEAD_ZONE)
             {
-              add_button_event(LEFT_BUTTON, true);   
-              add_button_event(RIGHT_BUTTON, false);
+              add_axis_event(HORIZONTAL_AXIS, -1.0);
             }
           else if (event.jaxis.value > DEAD_ZONE)
             {
-              add_button_event(LEFT_BUTTON, false); 
-              add_button_event(RIGHT_BUTTON, true); 
+              add_axis_event(HORIZONTAL_AXIS, 1.0);
             }
           else
             {
-              add_button_event(LEFT_BUTTON, false);
-              add_button_event(RIGHT_BUTTON, false);
+              add_axis_event(HORIZONTAL_AXIS, 0);
             }
         }
       else if (event.jaxis.axis == 1) 
         {
           if (event.jaxis.value < -DEAD_ZONE)
             {
-              add_button_event(UP_BUTTON, true);   
-              add_button_event(DOWN_BUTTON, false);
+              add_axis_event(VERTICAL_AXIS, -1.0);
             }
           else if (event.jaxis.value > DEAD_ZONE)
             {
-              add_button_event(UP_BUTTON, false); 
-              add_button_event(DOWN_BUTTON, true); 
+              add_axis_event(VERTICAL_AXIS, 1.0);
             }
           else
             {
-              add_button_event(UP_BUTTON, false);
-              add_button_event(DOWN_BUTTON, false);
+              add_axis_event(VERTICAL_AXIS, 0);
             }
         }
       break;

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/player.cpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -172,7 +172,7 @@
 void
 Player::update_walk_stand()
 {
-  if(controller.get_button_state(DOWN_BUTTON)) {
+  if (controller.get_axis_state(VERTICAL_AXIS) > 0) {
     set_ducking();
     return;
   }
@@ -214,14 +214,12 @@
         obj->use();
     }
 
-  if(controller.get_button_state(LEFT_BUTTON)
-      && !controller.get_button_state(RIGHT_BUTTON)) {
+  if (controller.get_axis_state(HORIZONTAL_AXIS) < 0) {
     if(get_direction() == WEST)
       set_walk(WEST);
     else
       set_turnaround();
-  } else if(controller.get_button_state(RIGHT_BUTTON)
-      && !controller.get_button_state(LEFT_BUTTON)) {
+  } else if (controller.get_axis_state(HORIZONTAL_AXIS) > 0) {
     if(get_direction() == EAST)
       set_walk(EAST);
     else
@@ -245,14 +243,13 @@
 void
 Player::update_walk()
 {
-  if(controller.get_button_state(LEFT_BUTTON)
-     == controller.get_button_state(RIGHT_BUTTON)) {
+  if (controller.get_axis_state(HORIZONTAL_AXIS) == 0) {
     set_stand();
     return;
   }
 
-  if(get_direction() == WEST && controller.get_button_state(RIGHT_BUTTON)
-     || get_direction() == EAST && controller.get_button_state(LEFT_BUTTON)) {
+  if(get_direction() == WEST && controller.get_axis_state(HORIZONTAL_AXIS) > 0
+     || get_direction() == EAST && controller.get_axis_state(HORIZONTAL_AXIS) < 0) {
     set_turnaround();
     return;
   }
@@ -286,13 +283,12 @@
     return;
   }
   
-  if(!controller.get_button_state(DOWN_BUTTON) && sprite.get_speed() > 0) {
+  if(!(controller.get_axis_state(VERTICAL_AXIS) > 0) && sprite.get_speed() > 0) {
     printf("Changespeed1.\n");
     sprite.set_speed(-1.0);
     sprite.set_next_action("Stand");
     state = STAND;
-  } else if(controller.get_button_state(DOWN_BUTTON) 
-      && sprite.get_speed() < 0) {
+  } else if(controller.get_axis_state(VERTICAL_AXIS) > 0 && sprite.get_speed() < 0) {
     printf("Changespeed2.\n");
     sprite.set_speed(1.0);
     sprite.set_next_action("Ducking");
@@ -310,7 +306,7 @@
 void
 Player::update_ducked()
 {
-  if(!controller.get_button_state(DOWN_BUTTON)) {
+  if(!controller.get_axis_state(VERTICAL_AXIS) > 0) {
     printf("ducking.\n");
     state = DUCKING;
     sprite.set_action("StandToDuck", -1.0);
@@ -339,8 +335,8 @@
       set_walk(WEST);
     }
   } 
-  if(sprite.get_rot() && controller.button_pressed(RIGHT_BUTTON)
-     || !sprite.get_rot() && controller.button_pressed(LEFT_BUTTON)) {
+  if(sprite.get_rot() && controller.get_axis_state(HORIZONTAL_AXIS) > 0
+     || !sprite.get_rot() && controller.get_axis_state(HORIZONTAL_AXIS) < 0) {
     sprite.set_speed(-1.0);
     sprite.set_next_action("Walk");
     state = WALK;

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/scripting/wrapper.cpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-04 21:11:31 UTC (rev 897)
+++ trunk/src/scripting/wrapper.hpp	2005-08-04 22:43:04 UTC (rev 898)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__



From grumbel at berlios.de  Fri Aug  5 00:58:36 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 00:58:36 +0200
Subject: [Windstille-commit] r899 - in trunk/src: . sound
Message-ID: <200508042258.j74MwaDX011356@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 00:58:27 +0200 (Fri, 05 Aug 2005)
New Revision: 899

Modified:
   trunk/src/console.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/entity.cpp
   trunk/src/game_session.hpp
   trunk/src/sound/stream_sound_source.cpp
   trunk/src/tile_factory.cpp
   trunk/src/tile_packer.cpp
   trunk/src/ttf_font.cpp
Log:
- removed some more Clanlib stuff

Modified: trunk/src/console.cpp
===================================================================
--- trunk/src/console.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/console.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -23,8 +23,6 @@
 */
 
 #include <assert.h>
-#include <ClanLib/Display/keys.h>
-#include <ClanLib/core.h>
 #include "math/rect.hpp"
 #include "fonts.hpp"
 #include "game_session.hpp"

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/dialog_manager.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -17,7 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/Display/display.h>
 #include <iostream>
 #include "fonts.hpp"
 #include "game_session.hpp"

Modified: trunk/src/entity.cpp
===================================================================
--- trunk/src/entity.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/entity.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -23,7 +23,6 @@
 **  02111-1307, USA.
 */
 
-#include <ClanLib/Display/display.h>
 #include <assert.h>
 #include "globals.hpp"
 #include "entity.hpp"

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/game_session.hpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -21,7 +21,6 @@
 #define GAME_SESSION_HXX
 
 #include <string>
-#include <ClanLib/Signals/slot_container.h>
 #include "display/scene_context.hpp"
 #include "console.hpp"
 #include "squirrel/include/squirrel.h"
@@ -58,7 +57,6 @@
   enum { DIALOG, GAME } control_state;
   GameMainState target_state;
 
-  std::vector<CL_Slot> slots;
   void on_key_down  (const CL_InputEvent& event);
   void on_mouse_down  (const CL_InputEvent& event);
   void change_sector ();

Modified: trunk/src/sound/stream_sound_source.cpp
===================================================================
--- trunk/src/sound/stream_sound_source.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/sound/stream_sound_source.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -1,9 +1,9 @@
 #include <config.h>
 
+#include <SDL.h>
 #include "stream_sound_source.hpp"
 #include "sound_manager.hpp"
 #include "sound_file.hpp"
-#include <ClanLib/Core/System/system.h>
 
 StreamSoundSource::StreamSoundSource(SoundFile* file)
 {
@@ -52,7 +52,7 @@
   }
 
   if(fade_state == FadingOn) {
-    unsigned int ticks = CL_System::get_time();
+    unsigned int ticks = SDL_GetTicks();
     float time = (ticks - fade_start_ticks) / 1000.0;
     if(time >= fade_time) {
       set_gain(1.0);
@@ -61,7 +61,7 @@
       set_gain(time / fade_time);
     }
   } else if(fade_state == FadingOff) {
-    unsigned int ticks = CL_System::get_time();
+    unsigned int ticks = SDL_GetTicks();
     float time = (ticks - fade_start_ticks) / 1000.0;
     if(time >= fade_time) {                              
       stop();
@@ -77,7 +77,7 @@
 {
   this->fade_state = state;
   this->fade_time = fade_time;
-  this->fade_start_ticks = CL_System::get_time();
+  this->fade_start_ticks = SDL_GetTicks();
 }
 
 void

Modified: trunk/src/tile_factory.cpp
===================================================================
--- trunk/src/tile_factory.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/tile_factory.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -26,9 +26,6 @@
 #include <sstream>
 #include <iostream>
 #include <memory>
-#include <ClanLib/GL/opengl_state.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
 #include "globals.hpp"
 #include "tile.hpp"
 #include "tile_packer.hpp"

Modified: trunk/src/tile_packer.cpp
===================================================================
--- trunk/src/tile_packer.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/tile_packer.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -19,9 +19,6 @@
 #include <config.h>
 
 #include <assert.h>
-#include <ClanLib/GL/opengl_state.h>
-#include <ClanLib/Display/display.h>
-#include <ClanLib/Display/display_window.h>
 #include <GL/gl.h>
 #include <GL/glext.h>
 #include "windstille_error.hpp"

Modified: trunk/src/ttf_font.cpp
===================================================================
--- trunk/src/ttf_font.cpp	2005-08-04 22:43:04 UTC (rev 898)
+++ trunk/src/ttf_font.cpp	2005-08-04 22:58:27 UTC (rev 899)
@@ -26,8 +26,6 @@
 #include <vector>
 #include <stdexcept>
 #include <sstream>
-#include <ClanLib/gl.h>
-#include <ClanLib/Display/display.h>
 
 #include <ft2build.h>
 #include FT_FREETYPE_H



From grumbel at berlios.de  Fri Aug  5 01:30:07 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 01:30:07 +0200
Subject: [Windstille-commit] r900 - in trunk/src: . collision display input
Message-ID: <200508042330.j74NU7iw028403@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 01:30:00 +0200 (Fri, 05 Aug 2005)
New Revision: 900

Modified:
   trunk/src/collision/collision_engine.cpp
   trunk/src/collision/collision_engine.hpp
   trunk/src/collision/collision_object.cpp
   trunk/src/collision/collision_object.hpp
   trunk/src/display/drawing_context.cpp
   trunk/src/display/drawing_context.hpp
   trunk/src/game_session.cpp
   trunk/src/graphic_context_state.cpp
   trunk/src/graphic_context_state.hpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/view.cpp
Log:
- some more cleanup

Modified: trunk/src/collision/collision_engine.cpp
===================================================================
--- trunk/src/collision/collision_engine.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/collision/collision_engine.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -40,11 +40,11 @@
 }
 
 void
-CollisionEngine::draw()
+CollisionEngine::draw(DrawingContext& dc)
 {
   for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
     {
-      (*i)->drawCollision();
+      (*i)->draw(dc);
     }
 }
 

Modified: trunk/src/collision/collision_engine.hpp
===================================================================
--- trunk/src/collision/collision_engine.hpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/collision/collision_engine.hpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -24,6 +24,8 @@
 
 #include "collision_object.hpp"
 
+class DrawingContext;
+
 class CollisionEngine
 {
 private:
@@ -35,7 +37,7 @@
   CollisionEngine();
   ~CollisionEngine();
 
-  void draw();
+  void draw(DrawingContext& dc);
   void update(float delta);
   void update(CollisionObject& obj, float delta);
   void collision(CollisionObject& a, CollisionObject& b, const CollisionData &result, float delta);

Modified: trunk/src/collision/collision_object.cpp
===================================================================
--- trunk/src/collision/collision_object.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/collision/collision_object.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -21,6 +21,7 @@
 
 #include <assert.h>
 
+#include "display/drawing_context.hpp"
 #include "display/display.hpp"
 #include "collision_object.hpp"
 #include "collision_engine.hpp"
@@ -56,22 +57,22 @@
 }
 
 void
-CollisionObject::drawCollision()
+CollisionObject::draw(DrawingContext& dc)
 {
   Vector v = get_pos ();
   Rectf  r = primitive;
 
   r += v;
 
-  Display::fill_rect(r, Color(1.0f, 1.0f, 1.0f));
+  dc.fill_rect(r, Color(1.0f, 1.0f, 1.0f), 100.0f);
   
-  Display::draw_rect(r, Color(0.6f, 0.6f, 0.6f));
+  dc.draw_rect(r, Color(0.6f, 0.6f, 0.6f), 100.0f);
   
-  Display::draw_line(Vector(r.left + r.get_width ()/2,
-                             r.top  + r.get_height ()/2),
-                      Vector(r.left + r.get_width ()/2  + get_velocity ().x,
-                             r.top  + r.get_height ()/2 + get_velocity ().y),
-                      Color(1.0f, 0, 1.0f));
+  dc.draw_line(Vector(r.left + r.get_width ()/2,
+                      r.top  + r.get_height ()/2),
+               Vector(r.left + r.get_width ()/2  + get_velocity ().x,
+                      r.top  + r.get_height ()/2 + get_velocity ().y),
+               Color(1.0f, 0, 1.0f), 100.0f);
 }
 
 void CollisionObject::update(float delta)

Modified: trunk/src/collision/collision_object.hpp
===================================================================
--- trunk/src/collision/collision_object.hpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/collision/collision_object.hpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -27,6 +27,7 @@
 #include "math/rect.hpp"
 #include "collision_data.hpp"
 
+class DrawingContext;
 class TileMap;
 class CollisionEngine;
 class GameObject;
@@ -96,7 +97,7 @@
   void update(float delta);
 
   // debugging helpers
-  void drawCollision();
+  void draw(DrawingContext& dc);
 
   // this functions support unstucking, which needs to be done, when more than 2 object stack over one another
   // should this object be unstuck ??

Modified: trunk/src/display/drawing_context.cpp
===================================================================
--- trunk/src/display/drawing_context.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/display/drawing_context.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -26,6 +26,7 @@
 #include "drawing_context.hpp"
 #include "glutil/opengl_state.hpp"
 #include "glutil/surface_drawing_parameters.hpp"
+#include "display/vertex_array_drawing_request.hpp"
 #include "glutil/surface.hpp"
 
 struct DrawingRequestsSorter
@@ -268,4 +269,70 @@
                Sizef(800, 600));
 }
 
+void
+DrawingContext::draw_line(const Vector& pos1, const Vector& pos2, const Color& color, float z_pos)
+{
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), z_pos, modelview_stack.back());
+
+  array->set_mode(GL_LINES);
+  array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+
+  array->color(color);
+  array->vertex(pos1.x, pos1.y);
+
+  array->color(color);
+  array->vertex(pos2.x, pos2.y);
+
+  draw(array);
+}
+
+void
+DrawingContext::draw_rect(const Rectf& rect, const Color& color, float z_pos)
+{
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), z_pos, modelview_stack.back());
+
+  array->set_mode(GL_LINE_STRIP);
+  array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+
+  array->color(color);
+  array->vertex(rect.left, rect.top);
+
+  array->color(color);
+  array->vertex(rect.right, rect.top);  
+
+  array->color(color);
+  array->vertex(rect.right, rect.bottom);  
+
+  array->color(color);
+  array->vertex(rect.left, rect.bottom);  
+  
+  array->color(color);
+  array->vertex(rect.left, rect.top);
+  
+  draw(array);
+}
+
+void
+DrawingContext::fill_rect(const Rectf& rect, const Color& color, float z_pos)
+{
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), z_pos, modelview_stack.back());
+
+  array->set_mode(GL_QUADS);
+  array->set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+
+  array->color(color);
+  array->vertex(rect.left, rect.top);
+
+  array->color(color);
+  array->vertex(rect.right, rect.top);  
+
+  array->color(color);
+  array->vertex(rect.right, rect.bottom);  
+
+  array->color(color);
+  array->vertex(rect.left, rect.bottom);  
+
+  draw(array);
+}
+
 /* EOF */

Modified: trunk/src/display/drawing_context.hpp
===================================================================
--- trunk/src/display/drawing_context.hpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/display/drawing_context.hpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -60,6 +60,11 @@
       queue */
   void fill_screen(const Color& color);
 
+  void draw_line(const Vector& pos1, const Vector& pos2, const Color& color, float z_pos);
+
+  void draw_rect(const Rectf& rect, const Color& color, float z_pos);
+  void fill_rect(const Rectf& rect, const Color& color, float z_pos);
+
   /*{ */
   void draw(DrawingRequest* request);
   void draw(const Sprite&   sprite,  const Vector& pos, float z = 0);

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/game_session.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -68,10 +68,10 @@
   //FIXME:slots.push_back(CL_Keyboard::sig_key_down().connect(this, &GameSession::on_key_down));
   //FIXME:slots.push_back(CL_Mouse::sig_key_down().connect(this, &GameSession::on_mouse_down));
 
-  view = new View();  
-  energy_bar = new EnergyBar();
+  view           = new View();  
+  energy_bar     = new EnergyBar();
   dialog_manager = new DialogManager();
-  conversation  = new Conversation();
+  conversation   = new Conversation();
 
   filename = arg_filename;
   change_sector();
@@ -94,13 +94,6 @@
   // Render the scene to the screen
   sc.render();
 
-  if (debug)
-    {
-      view->get_gc_state().push();
-      sector->get_collision_engine()->draw();
-      view->get_gc_state().pop();
-    }
-
   // Draw HUD
   energy_bar->draw();
 

Modified: trunk/src/graphic_context_state.cpp
===================================================================
--- trunk/src/graphic_context_state.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/graphic_context_state.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -79,25 +79,6 @@
   sc.pop_modelview();
 }
 
-void
-GraphicContextState::push(CL_GraphicContext* gc)
-{
-  glPushMatrix();
-  
-  glTranslatef(impl->width/2, impl->height/2, 0);
-  glRotatef(impl->rotation, 0, 0, 1.0);
-  glTranslatef(-impl->width/2, -impl->height/2, 0);
-
-  glScalef(get_zoom(), get_zoom(), 1.0f);
-  glTranslatef(impl->offset.x, impl->offset.y, 0);
-}
-
-void
-GraphicContextState::pop(CL_GraphicContext* gc)
-{
-  glPopMatrix();
-}
-
 Rectf
 GraphicContextState::get_clip_rect()
 {

Modified: trunk/src/graphic_context_state.hpp
===================================================================
--- trunk/src/graphic_context_state.hpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/graphic_context_state.hpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -40,9 +40,6 @@
 
   void set_size(int w, int h);
 
-  void push(CL_GraphicContext* gc = 0);
-  void pop (CL_GraphicContext* gc = 0);
-
   void push(SceneContext& sc);
   void pop(SceneContext& sc);
 

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -84,14 +84,14 @@
 
           case SDLK_UP:
             if (event.key.state)
-              add_axis_event(VERTICAL_AXIS, 1.0);
+              add_axis_event(VERTICAL_AXIS, -1.0);
             else
               add_axis_event(VERTICAL_AXIS, 0);
             break;
 
           case SDLK_DOWN:
             if (event.key.state)
-              add_axis_event(VERTICAL_AXIS, -1.0);
+              add_axis_event(VERTICAL_AXIS, 1.0);
             else
               add_axis_event(VERTICAL_AXIS, 0);
             break;

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2005-08-04 22:58:27 UTC (rev 899)
+++ trunk/src/view.cpp	2005-08-04 23:30:00 UTC (rev 900)
@@ -19,6 +19,7 @@
 
 #include <SDL.h>
 #include "display/display.hpp"
+#include "collision/collision_engine.hpp"
 #include "player.hpp"
 #include "sector.hpp"
 #include "view.hpp"
@@ -41,6 +42,8 @@
 
   state.push(sc);
   Sector::current()->draw(sc);
+  if (debug)
+    Sector::current()->get_collision_engine()->draw(sc.highlight());
   state.pop(sc);
 }
 



From grumbel at berlios.de  Fri Aug  5 01:41:33 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 01:41:33 +0200
Subject: [Windstille-commit] r901 - in trunk/src: . display
Message-ID: <200508042341.j74NfXuG031160@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 01:41:08 +0200 (Fri, 05 Aug 2005)
New Revision: 901

Modified:
   trunk/src/display/display.cpp
   trunk/src/display/display.hpp
   trunk/src/event_manager.cpp
   trunk/src/screen.cpp
Log:
- added fullscreen toogle

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-04 23:30:00 UTC (rev 900)
+++ trunk/src/display/display.cpp	2005-08-04 23:41:08 UTC (rev 901)
@@ -226,4 +226,28 @@
   glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
 }
 
+void
+Display::set_fullscreen(bool fullscreen)
+{
+  if (fullscreen)
+    {
+      window = SDL_SetVideoMode(config->screen_width, config->screen_height,
+                                0, SDL_OPENGL | SDL_FULLSCREEN);
+      if (!window)
+        {
+          throw std::runtime_error("Display:: Couldn't create window");
+        }
+
+    }
+  else
+    {
+      window = SDL_SetVideoMode(config->screen_width, config->screen_height,
+                                0, SDL_OPENGL);
+      if (!window)
+        {
+          throw std::runtime_error("Display:: Couldn't create window");
+        }
+    }
+}
+
 /* EOF */

Modified: trunk/src/display/display.hpp
===================================================================
--- trunk/src/display/display.hpp	2005-08-04 23:30:00 UTC (rev 900)
+++ trunk/src/display/display.hpp	2005-08-04 23:41:08 UTC (rev 901)
@@ -48,6 +48,8 @@
   static int  get_width();
   static int  get_height();
 
+  static void set_fullscreen(bool fullscreen);
+
   static void init();
 };
 

Modified: trunk/src/event_manager.cpp
===================================================================
--- trunk/src/event_manager.cpp	2005-08-04 23:30:00 UTC (rev 900)
+++ trunk/src/event_manager.cpp	2005-08-04 23:41:08 UTC (rev 901)
@@ -27,6 +27,9 @@
 #include <SDL.h>
 #include <iostream>
 #include "console.hpp"
+#include "globals.hpp"
+#include "gameconfig.hpp"
+#include "display/display.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "event_manager.hpp"
 
@@ -88,6 +91,39 @@
 
         case SDL_KEYDOWN:
         case SDL_KEYUP:
+          if (event.key.state)
+            {
+              switch (event.key.keysym.sym)
+                {
+                case SDLK_c:
+                  if (debug) {
+                    collision_debug = !collision_debug;
+                    console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
+                  }
+                  break;
+
+                case SDLK_F10:
+                  config->show_fps = ! (config->show_fps);
+                  break;
+              
+                case SDLK_F11:
+                  config->use_fullscreen = ! (config->use_fullscreen);
+                  Display::set_fullscreen(config->use_fullscreen);
+                  break;
+              
+                case SDLK_F12:
+                  // FIXME: Implement me for SDL
+                  {
+                    std::string filename = "screenshot.png";
+                    std::cout << "Saving screenshot *NOT* to: " << filename << std::endl;
+                  }
+                  break;
+              
+                default:
+                  break;
+                }
+            }
+              
           if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
             {
               console.activate();

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-04 23:30:00 UTC (rev 900)
+++ trunk/src/screen.cpp	2005-08-04 23:41:08 UTC (rev 901)
@@ -113,35 +113,6 @@
 {
   switch (event.id) 
     {
-    case SDLK_F1:
-      if (!console.is_active())
-        console.activate();
-      break;
-
-    case SDLK_c:
-      if(debug) {
-        collision_debug = !collision_debug;
-        console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
-      }
-      break;
-    case SDLK_F10:
-      config->show_fps = ! (config->show_fps);
-      break;
-    case SDLK_F11:
-      config->use_fullscreen = ! (config->use_fullscreen);
-      
-      if (config->use_fullscreen)
-        CL_Display::set_fullscreen(config->screen_width,
-                                 config->screen_height, 32);
-      else
-        CL_Display::set_windowed();
-      break;
-    case SDLK_F12:
-      std::string filename = "screenshot.png";
-      std::cout << "Saving screenshot to: " << filename << std::endl;
-      CL_ProviderFactory::save(CL_Display::get_front_buffer(),
-                               filename);
-      break;
     }
 }
 



From grumbel at berlios.de  Fri Aug  5 01:50:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 01:50:41 +0200
Subject: [Windstille-commit] r902 - trunk/src
Message-ID: <200508042350.j74NofHY001000@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 01:50:32 +0200 (Fri, 05 Aug 2005)
New Revision: 902

Added:
   trunk/src/command_line.cpp
   trunk/src/command_line.hpp
   trunk/src/command_line_generic.cpp
   trunk/src/command_line_generic.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/screen.cpp
   trunk/src/sharedptr.hpp
   trunk/src/windstille_main.cpp
Log:
- moved cl_commandline code into windstille


Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/Jamfile	2005-08-04 23:50:32 UTC (rev 902)
@@ -32,6 +32,10 @@
         character.hpp
         console.cpp
         console.hpp
+        command_line.hpp
+        command_line.cpp
+        command_line_generic.hpp
+        command_line_generic.cpp
         controller_def.cpp
         controller_def.hpp
         conversation.hpp

Added: trunk/src/command_line.cpp
===================================================================
--- trunk/src/command_line.cpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/command_line.cpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -0,0 +1,96 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+#include "command_line.hpp"
+#include "command_line_generic.hpp"
+
+CommandLine::CommandLine()
+{
+	impl = new CommandLine_Generic();
+}
+
+CommandLine::~CommandLine()
+{
+	delete impl;
+}
+
+void CommandLine::parse_args(int argc, char** argv)
+{
+	impl->parse_args(argc, argv);
+}
+
+void CommandLine::print_help()
+{
+	impl->print_help();
+}
+
+void CommandLine::set_help_indent(int i)
+{
+	impl->set_help_indent(i);
+}
+
+void CommandLine::add_usage(const std::string& usage)
+{
+	impl->add_usage(usage);
+}
+
+void CommandLine::add_doc(const std::string& doc)
+{
+	impl->add_doc(doc);
+}
+
+void CommandLine::add_group(const std::string& grouptopic)
+{
+	impl->add_group(grouptopic);
+}
+
+void CommandLine::add_option(
+	int key, 
+	const std::string& long_option, 
+	const std::string& argument,
+	const std::string& help,
+	bool visible)
+{
+	impl->add_option(key, long_option, argument, help, visible);
+}
+
+bool CommandLine::next()
+{
+	return impl->next();
+}
+
+int CommandLine::get_key()
+{
+	return impl->get_key();
+}
+
+std::string CommandLine::get_argument()
+{
+	return impl->get_argument();
+}

Added: trunk/src/command_line.hpp
===================================================================
--- trunk/src/command_line.hpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/command_line.hpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -0,0 +1,157 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+//! clanCore="System"
+//! header=core.h
+
+#ifndef HEADER_COMMAND_LINE_HPP
+#define HEADER_COMMAND_LINE_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include <string>
+#include <vector>
+
+class CommandLine_Generic;
+
+//: Helper class to parse command line arguments
+//- !group=Core/System!
+//- !header=core.h!
+//- <p>The CommandLine class helps to parse command line arguments, namely
+//- the argc/argv pair that you get from main(). CommandLine mimics
+//- getopt_long() behaviour as closely as possible, while providing a
+//- cleaner interface and a few additional features, like automatic
+//- generation of '--help' output. CommandLine can parse long arguments
+//- in the following styles:</p>
+//-
+//- <p>program --file FILENAME<br>
+//- program --file=FILENAME</p>
+//-
+//- <p>Short arguments are handled like this:</p>
+//-
+//- <p>program -f FILENAME</p>
+//-
+//- <p>Concatenating short arguments is also supported, so that:</p>
+//- 
+//- <p>program -f -a -b FILENAME</p>
+//-
+//- <p>is equivalent to:</p>
+//-
+//- <p>program -fab FILENAME</p>
+//-
+//- <p>Non-option arguments (aka rest arguments) are supported as well:</p>
+//-
+//- <p>program SOMEFILE SOMEOTHERFILE ...</p>
+//- 
+//- <p>To avoid ambiguity when a filename starts with '-' CommandLine stops
+//- parsing arguments after the first encounter of a '--', so in</p>
+//-
+//- <p>program -f -b -- -f -b</p>
+//-
+//- <p>In the above example the first '-f -b' options are treated as
+//- normal while the ones after the '--' are treated as rest arguments
+//- (aka filenames in most programs).</p>
+class CommandLine
+{
+//! Construction:
+public:
+	CommandLine();
+
+	~CommandLine();
+
+//! Attributes:
+public:
+	enum
+	{
+		REST_ARG  = -2
+	};
+
+	//: Return the key of the current option
+	int get_key();
+
+	//: Return the argument to the current option
+	std::string get_argument();
+
+//! Operations:
+public:
+	//: Change the indention used for the help message, default is 18
+	void set_help_indent(int i);
+
+	//: Add a usage line to the help output, usage is for example
+	//: "[OPTIONS]... FILE", the program name will get appended
+	//: automatically
+	void add_usage(const std::string& usage);
+
+	//: Adds extra documentation to the help output, should only be
+	//: used at the beginning or at the end, to
+	void add_doc(const std::string& doc);
+	
+	//: Starts a new group of options, the grouptopic gets printed
+	//: above the group of options in the print_help() output
+	void add_group(const std::string& grouptopic);
+  
+	//: Adds a option to the parser
+	//param key: a letter for a short-option or a numeric value
+	//param key: larger than 255 that identifies the option
+	//param long_option: the long name of this option or "" if non
+	//param long_option: should be used for this option
+	//param argument: the type of the argument that this option
+	//param argument: requires (i.e. FILE, SIZE, WIDTH, etc.) or "" if no argument is
+	//param argument: required
+	//param help: the help string for this option
+	//param visible: true if the option should be listed in the help
+	//param visible: output, false will not list it in the help output which might
+	//param visible: be usefull for cheat-options or backward-compability options
+	//param visible: than would only clutter the help output
+	void add_option(
+		int key,
+		const std::string& long_option, 
+		const std::string& argument,
+		const std::string& help,
+		bool visible = true);
+	
+	//: Parse the options arcording to the options added with
+	//: add_option(), result of the parsing is accessible via
+	//: next() and get_key()/get_argument()
+	void parse_args(int argc, char** argv);
+
+	//: Print the help output, normaly done via a --help option
+	void print_help();
+
+	//: Goto the next option
+	bool next();
+
+//! Implementation:
+private:
+	CommandLine_Generic* impl;
+};
+
+#endif

Added: trunk/src/command_line_generic.cpp
===================================================================
--- trunk/src/command_line_generic.cpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/command_line_generic.cpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -0,0 +1,336 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+#include <iomanip>
+#include <iostream>
+#include <stdexcept>
+#include <stdio.h>
+
+#include "command_line_generic.hpp"
+
+
+#ifdef WIN32
+#define snprintf _snprintf
+#endif
+
+CommandLine_Generic::CommandLine_Generic()
+{
+  help_indent = 18;
+}
+
+void CommandLine_Generic::parse_args(int argc, char** argv)
+{
+  programm = argv[0];
+
+  for(int i = 1; i < argc; ++i) 
+    {
+      if (argv[i][0] == '-') 
+        {
+          if (argv[i][1] == '-') 
+            {
+              // We got a long option
+              if (argv[i][2] == '\0') { 
+                // Got a '--', so we stop evaluating arguments
+                ++i;
+                while(i < argc) 
+                  {
+                    read_option(CommandLine::REST_ARG, argv[i]);
+                    ++i;
+                  }
+              } 
+              else
+                {
+                  std::string opt = argv[i] + 2;
+                  std::string long_opt;
+                  std::string long_opt_arg;
+
+                  std::string::size_type pos = opt.find('=');
+
+                  if (pos != std::string::npos) 
+                    {
+                      long_opt = opt.substr(0, pos);
+                      long_opt_arg = opt.substr(pos+1);
+                    }
+                  else 
+                    {
+                      long_opt = opt;
+                    }
+
+                  // Long Option
+                  Option* option = lookup_long_option(long_opt);
+
+                  if (option) 
+                    {
+                      if (option->argument.empty()) 
+                        {
+                          read_option(option->key, "");
+                        } 
+                      else
+                        {
+                          if (pos != std::string::npos) 
+                            {
+                              read_option(option->key, long_opt_arg);
+                            }
+                          else
+                            {            
+                              if (i == argc - 1) 
+                                {
+                                  throw std::runtime_error("option '" + std::string(argv[i]) + "' requires an argument");
+                                }
+                              else 
+                                {
+                                  read_option(option->key, argv[i + 1]);
+                                  ++i;
+                                }
+                            }
+                        }
+                    }
+                  else
+                    {
+                      throw std::runtime_error("unrecognized option '" + std::string(argv[i]) + "'");
+                    }
+                }
+            } 
+          else 
+            {
+              // We got a short option
+              char* p = argv[i] + 1;
+          
+              if (*p != '\0') {
+                // Handle option chains
+                while (*p) 
+                  {
+                    // Short option(s)
+                    Option* option = lookup_short_option(*p);
+
+                    if (option) 
+                      {
+                        if (option->argument.empty()) 
+                          {
+                            read_option(option->key, "");
+                          } 
+                        else 
+                          {
+                            if (i == argc - 1 || *(p+1) != '\0') 
+                              {
+                                // No more arguments
+                                throw std::runtime_error("option requires an argument -- " + std::string(1, *p));
+                              }
+                            else
+                              {
+                                read_option(option->key, argv[i + 1]);
+                                ++i;
+                              }
+                          }
+                      } 
+                    else 
+                      {
+                        throw std::runtime_error("invalid option -- " + std::string(1, *p));
+                      }
+                    ++p; 
+                  }
+              } 
+              else
+                {
+                  read_option(CommandLine::REST_ARG, "-");
+                } 
+            }
+        } 
+      else
+        {
+          read_option(CommandLine::REST_ARG, argv[i]);
+        }
+    }
+
+  current_option = parsed_options.end();
+}
+
+CommandLine_Generic::Option *CommandLine_Generic::lookup_short_option(char short_option)
+{
+  for(Options::iterator i = options.begin(); i != options.end(); ++i)
+    {
+      if (i->key == short_option)
+        return &(*i);
+    }
+  return 0;
+}
+
+CommandLine_Generic::Option *CommandLine_Generic::lookup_long_option(const std::string& long_option)
+{
+  for(Options::iterator i = options.begin(); i != options.end(); ++i)
+    {
+      if (i->long_option == long_option)
+        return &*i;
+    }
+  return 0;
+}
+
+void CommandLine_Generic::read_option(int key, const std::string& argument)
+{
+  ParsedOption parsed_option;
+  
+  parsed_option.key = key;
+  parsed_option.argument = argument;
+
+  parsed_options.push_back(parsed_option);
+}
+
+void CommandLine_Generic::print_help()
+{
+  bool first_usage = true;
+  for(Options::iterator i = options.begin(); i != options.end(); ++i)
+    {
+      if (i->visible)
+        {
+          if (i->key == USAGE) 
+            {
+              if (first_usage) 
+                {
+                  std::cout << "Usage: " << programm << " " <<  i->help << std::endl; 
+                  first_usage = false;
+                }
+              else
+                {
+                  std::cout << "or:    " << programm << " " << i->help << std::endl; 
+                }
+            } 
+          else if (i->key == GROUP) 
+            {
+              if (i != options.begin())
+                std::cout << std::endl;
+              std::cout << i->help << std::endl;
+            }
+          else if (i->key == DOC) 
+            {
+              if (i != options.begin())
+                std::cout << std::endl;
+              std::cout << i->help << std::endl;
+            }
+          else 
+            {
+              char option[256]   = { 0 };
+              char argument[256] = { 0 };
+
+              if (i->key > 255 || i->key < 0)
+                snprintf(option, 256, "--%s", i->long_option.c_str());
+              else if (i->long_option.empty())
+                snprintf(option, 256, "-%c", char(i->key));
+              else
+                snprintf(option, 256, "-%c, --%s", char(i->key), i->long_option.c_str());
+
+              if (!i->argument.empty())
+                {
+                  if (i->long_option.empty())
+                    snprintf(argument, 256, " %s", i->argument.c_str());
+                  else
+                    snprintf(argument, 256, "=%s", i->argument.c_str());
+                }
+
+              std::cout << "  " 
+                        << std::setiosflags(std::ios::left) << std::setw(help_indent)
+                        << (std::string(option) + std::string(argument)) << std::setw(0)
+                        << " " << i->help << std::endl;
+            }
+        }
+    }
+  std::cout << std::endl;
+}
+
+void CommandLine_Generic::add_usage(const std::string& usage)
+{
+  Option option;
+
+  option.key          = USAGE;
+  option.help         = usage;
+  option.visible      = true;
+
+  options.push_back(option);   
+}
+
+void CommandLine_Generic::add_doc(const std::string& grouptopic)
+{
+  Option option;
+
+  option.key          = DOC;
+  option.help         = grouptopic;
+  option.visible      = true;
+
+  options.push_back(option);  
+}
+
+void CommandLine_Generic::add_group(const std::string& grouptopic)
+{
+  Option option;
+
+  option.key          = GROUP;
+  option.help         = grouptopic;
+  option.visible      = true;
+
+  options.push_back(option);  
+}
+
+void CommandLine_Generic::add_option(int key, 
+                                        const std::string& long_option, 
+                                        const std::string& argument,
+                                        const std::string& help,
+                                        bool visible)
+{
+  Option option;
+
+  option.key          = key;
+  option.help         = help;
+  option.long_option  = long_option;
+  option.argument     = argument;
+  option.visible      = visible;
+
+  options.push_back(option);
+}
+
+bool CommandLine_Generic::next()
+{
+  if (current_option == parsed_options.end()) 
+    {
+      (current_option = parsed_options.begin());
+      return current_option != parsed_options.end();
+    }
+  else
+    {
+      return (++current_option) != parsed_options.end();
+    }
+}
+
+int CommandLine_Generic::get_key()
+{
+  return current_option->key;
+}
+
+std::string CommandLine_Generic::get_argument()
+{
+  return current_option->argument;
+}

Added: trunk/src/command_line_generic.hpp
===================================================================
--- trunk/src/command_line_generic.hpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/command_line_generic.hpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -0,0 +1,111 @@
+/*
+**  ClanLib SDK
+**  Copyright (c) 1997-2005 The ClanLib Team
+**
+**  This software is provided 'as-is', without any express or implied
+**  warranty.  In no event will the authors be held liable for any damages
+**  arising from the use of this software.
+**
+**  Permission is granted to anyone to use this software for any purpose,
+**  including commercial applications, and to alter it and redistribute it
+**  freely, subject to the following restrictions:
+**
+**  1. The origin of this software must not be misrepresented; you must not
+**     claim that you wrote the original software. If you use this software
+**     in a product, an acknowledgment in the product documentation would be
+**     appreciated but is not required.
+**  2. Altered source versions must be plainly marked as such, and must not be
+**     misrepresented as being the original software.
+**  3. This notice may not be removed or altered from any source distribution.
+**
+**  Note: Some of the libraries ClanLib may link to may have additional
+**  requirements or restrictions.
+**
+**  File Author(s):
+**
+**    Magnus Norddahl
+**    (if your name is missing here, please add it)
+*/
+
+#ifndef HEADER_COMMAND_LINE_GENERIC_HPP
+#define HEADER_COMMAND_LINE_GENERIC_HPP
+
+#if _MSC_VER > 1000
+#pragma once
+#endif
+
+#include <string>
+#include <vector>
+#include "command_line.hpp"
+
+class CommandLine_Generic
+{
+private:
+	int help_indent;
+
+	std::string programm;
+
+	struct Option 
+	{
+		int key;
+		std::string help;
+		std::string long_option;
+		std::string argument;
+		bool visible;
+	};
+  
+	typedef std::vector<Option> Options;
+	Options options;
+
+	struct ParsedOption
+	{
+		int key;
+		std::string argument;
+	};
+
+	typedef std::vector<ParsedOption> ParsedOptions;
+	ParsedOptions parsed_options;
+	ParsedOptions::iterator current_option;
+
+	enum
+	{
+		GROUP     = -3,
+		DOC       = -4,
+		USAGE     = -5
+	};
+
+public:  
+	CommandLine_Generic();
+
+	void set_help_indent(int i) { help_indent = i; }
+
+	void add_usage(const std::string& usage);
+	void add_doc(const std::string& doc);
+	void add_group(const std::string& grouptopic);
+  
+	void add_option(int key,
+						 const std::string& long_option, 
+						 const std::string& argument,
+						 const std::string& help,
+						 bool visible = true);
+
+	void parse_args(int argc, char** argv);
+	void print_help();
+  
+	bool next();
+	int get_key();
+	std::string get_argument();
+
+private:
+	void read_option(int id, const std::string& argument);
+
+	/** Find the Option structure that matches \a short_option */
+	Option* lookup_short_option(char short_option);
+
+	/** Find the Option structure that matches \a long_option */
+	Option* lookup_long_option (const std::string& long_option);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/screen.cpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -53,8 +53,6 @@
   /// independed of the number of frames and always constant
   static const float step = 10/1000.0f;
 
-  //slot = CL_Keyboard::sig_key_down().connect(this, &Screen::key_down);
-
   Uint32 now = SDL_GetTicks();
   float delta = static_cast<float>(now - ticks) / 1000.0f;
   ticks = now;

Modified: trunk/src/sharedptr.hpp
===================================================================
--- trunk/src/sharedptr.hpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/sharedptr.hpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -97,7 +97,7 @@
 	
 	//: Gives access to the pointer itself.
 	//- <p> Be careful not to keep the returned pointer around after doing any
-	//- non-const operations on the CL_LazyCopyPtr; it could be invalid
+	//- non-const operations on the SharedPtr; it could be invalid
 	//- after that.</p>
 	U* get() { return (U*) ((impl != 0) ? impl->ptr : 0); }
 

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-04 23:41:08 UTC (rev 901)
+++ trunk/src/windstille_main.cpp	2005-08-04 23:50:32 UTC (rev 902)
@@ -47,6 +47,7 @@
 #include "glutil/surface_manager.hpp"
 #include "glutil/texture_manager.hpp"
 #include "sprite3d/manager.hpp"
+#include "command_line.hpp"
 #include "sprite2d/manager.hpp"
 
 #ifdef main
@@ -68,7 +69,7 @@
 void
 WindstilleMain::parse_command_line(int argc, char** argv)
 {
-  CL_CommandLine argp;
+  CommandLine argp;
 
   const int debug_flag = 256;
     



From grumbel at berlios.de  Fri Aug  5 02:31:49 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 02:31:49 +0200
Subject: [Windstille-commit] r903 - in trunk: . src src/display src/glutil src/input src/math src/particles src/scripting src/sprite2d src/sprite3d
Message-ID: <200508050031.j750VnNa023534@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 02:31:28 +0200 (Fri, 05 Aug 2005)
New Revision: 903

Modified:
   trunk/Jamrules
   trunk/src/display/display.hpp
   trunk/src/display/drawing_context.cpp
   trunk/src/display/drawing_context.hpp
   trunk/src/display/drawing_request.hpp
   trunk/src/display/vertex_array_drawing_request.cpp
   trunk/src/display/vertex_array_drawing_request.hpp
   trunk/src/event_manager.cpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/glutil/texture.cpp
   trunk/src/graphic_context_state.hpp
   trunk/src/input/Jamfile
   trunk/src/input/input_manager.cpp
   trunk/src/math/matrix.cpp
   trunk/src/particles/particle_system.cpp
   trunk/src/particles/spark_drawer.cpp
   trunk/src/screen.cpp
   trunk/src/screen.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/sprite2d/sprite.cpp
   trunk/src/sprite2d/sprite.hpp
   trunk/src/sprite3d/sprite3d.cpp
   trunk/src/sprite3d/sprite3d.hpp
   trunk/src/text_area.cpp
   trunk/src/windstille_main.cpp
Log:
- removed ClanLib from the compiler flags

Modified: trunk/Jamrules
===================================================================
--- trunk/Jamrules	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/Jamrules	2005-08-05 00:31:28 UTC (rev 903)
@@ -52,7 +52,7 @@
 IncludeDir $(top_srcdir)/src/squirrel/include ;
 
 # use CLANLIB, OPENAL and PHYSFS
-USE_LIBS = CLANLIB FT2 OPENAL PHYSFS VORBISFILE VORBIS OGG ICONV GL GLU SDL SDLIMAGE ;
+USE_LIBS = FT2 OPENAL PHYSFS VORBISFILE VORBIS OGG ICONV GL GLU SDL SDLIMAGE ;
 CXXFLAGS += $($(USE_LIBS)_CFLAGS) ;
 CFLAGS += $($(USE_LIBS)_CFLAGS) ;
 LIBS += $($(USE_LIBS)_LIBS) ;

Modified: trunk/src/display/display.hpp
===================================================================
--- trunk/src/display/display.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/display/display.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -29,10 +29,6 @@
 #include "math/rect.hpp"
 #include "color.hpp"
 
-/** FIXME: its called VDisplay instead of Display to avoid naming
-    conflict with X11 header, should be renamed as soon as we got rid
-    of ClanLib, which includes the X11 header in one of the
-    headerfiles */
 class Display
 {
 private:

Modified: trunk/src/display/drawing_context.cpp
===================================================================
--- trunk/src/display/drawing_context.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/display/drawing_context.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -47,7 +47,7 @@
   }
   virtual ~FillScreenDrawingRequest() {}
 
-  void draw(CL_GraphicContext* gc) {
+  void draw() {
     OpenGLState state;
     // FIXME: move clear color to opengl_state
     state.activate();
@@ -67,7 +67,7 @@
   {}
   virtual ~TextDrawingRequest() {}
 
-  void draw(CL_GraphicContext* gc) {
+  void draw() {
     glPushMatrix();
     glMultMatrixf(modelview.matrix);
     Fonts::ttffont->draw(int(pos.x), int(pos.y), text);
@@ -89,7 +89,7 @@
   virtual ~SurfaceDrawingRequest()
   {}
 
-  void draw(CL_GraphicContext* gc) 
+  void draw() 
   {
     glPushMatrix();
     glMultMatrixf(modelview.matrix);
@@ -111,18 +111,13 @@
 }
 
 void
-DrawingContext::render(CL_GraphicContext* gc)
+DrawingContext::render()
 {
-  if (gc == 0)
-    {
-      //gc = CL_Display::get_current_window()->get_gc();
-    }
-
   std::stable_sort(drawingrequests.begin(), drawingrequests.end(), DrawingRequestsSorter());
   
   for(DrawingRequests::iterator i = drawingrequests.begin(); i != drawingrequests.end(); ++i)
     {
-      (*i)->draw(gc);
+      (*i)->draw();
     }
 }
 

Modified: trunk/src/display/drawing_context.hpp
===================================================================
--- trunk/src/display/drawing_context.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/display/drawing_context.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -50,7 +50,7 @@
   ~DrawingContext();
 
   /** Draws everything in the drawing context to the screen */
-  void render(CL_GraphicContext* gc = 0);
+  void render();
 
   /** Empties the drawing context */
   void clear();

Modified: trunk/src/display/drawing_request.hpp
===================================================================
--- trunk/src/display/drawing_request.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/display/drawing_request.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -23,8 +23,6 @@
 #include "math/vector.hpp"
 #include "math/matrix.hpp"
 
-class CL_GraphicContext;
-
 /** 
  */
 class DrawingRequest
@@ -40,7 +38,7 @@
   {}
   virtual ~DrawingRequest() {}
   
-  virtual void draw(CL_GraphicContext* gc) = 0;
+  virtual void draw() = 0;
   
   /** Returns the position at which the request should be drawn */
   float get_z_pos() const { return z_pos; }

Modified: trunk/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/display/vertex_array_drawing_request.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -46,13 +46,13 @@
 }
 
 void
-VertexArrayDrawingRequest::draw(CL_GraphicContext* gc)
+VertexArrayDrawingRequest::draw()
 {
-  draw(gc, 0, num_vertices());
+  draw(0, num_vertices());
 }
 
 void
-VertexArrayDrawingRequest::draw(CL_GraphicContext* gc, int start, int end)
+VertexArrayDrawingRequest::draw(int start, int end)
 {
   assert(!vertices.empty());
   assert(texcoords.empty() || int(texcoords.size()/2) == num_vertices());

Modified: trunk/src/display/vertex_array_drawing_request.hpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/display/vertex_array_drawing_request.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -43,8 +43,8 @@
 public:
   VertexArrayDrawingRequest(const Vector& pos_, float z_pos_, const Matrix& modelview_);
 
-  void draw(CL_GraphicContext* gc);
-  void draw(CL_GraphicContext* gc, int start, int end);
+  void draw();
+  void draw(int start, int end);
 
   void vertex(float x, float y, float z = 0.0f);
   void texcoord(float u, float v);

Modified: trunk/src/event_manager.cpp
===================================================================
--- trunk/src/event_manager.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/event_manager.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -30,6 +30,9 @@
 #include "globals.hpp"
 #include "gameconfig.hpp"
 #include "display/display.hpp"
+#include "display/scene_context.hpp"
+#include "game_session.hpp"
+#include "view.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "event_manager.hpp"
 
@@ -93,8 +96,30 @@
         case SDL_KEYUP:
           if (event.key.state)
             {
+              SceneContext& sc = GameSession::current()->get_scene_context();
+          
               switch (event.key.keysym.sym)
                 {
+                case SDLK_1:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
+                  console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
+                  break;
+
+                case SDLK_2:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
+                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
+                  break;
+          
+                case SDLK_3:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
+                  console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
+                  break;      
+      
+                case SDLK_4:
+                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
+                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
+                  break;
+
                 case SDLK_c:
                   if (debug) {
                     collision_debug = !collision_debug;
@@ -135,9 +160,17 @@
             }
           break;
 
-        case SDL_MOUSEMOTION:
         case SDL_MOUSEBUTTONDOWN:
+          {
+            Vector real_pos = GameSession::current()->get_view()->screen2world(Vector(event.button.x,
+                                                                                      event.button.y));
+          
+            console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
+          }
+          break;
+
         case SDL_MOUSEBUTTONUP:
+        case SDL_MOUSEMOTION:
         case SDL_JOYAXISMOTION:
         case SDL_JOYBALLMOTION:
         case SDL_JOYHATMOTION:

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/game_session.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -1,21 +1,27 @@
-//  $Id$
-//
-//  Windstille - A Jump'n Shoot Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
 
 #include <math.h>
 #include <sstream>
@@ -65,9 +71,6 @@
   if (debug) std::cout << "Creating new GameSession" << std::endl;
   current_ = this;
   
-  //FIXME:slots.push_back(CL_Keyboard::sig_key_down().connect(this, &GameSession::on_key_down));
-  //FIXME:slots.push_back(CL_Mouse::sig_key_down().connect(this, &GameSession::on_mouse_down));
-
   view           = new View();  
   energy_bar     = new EnergyBar();
   dialog_manager = new DialogManager();
@@ -239,56 +242,4 @@
     }
 }
 
-void
-GameSession::on_mouse_down(const CL_InputEvent& event)
-{
-  Vector real_pos = view->screen2world(Vector(event.mouse_pos.x,
-                                              event.mouse_pos.y));
-
-  switch(event.id)
-    {
-    case CL_MOUSE_LEFT:
-      console << "Click at: " << real_pos.x << ", " << real_pos.y << std::endl;
-      break;
-    default:
-      break;
-    }
-}
-
-void
-GameSession::on_key_down(const CL_InputEvent& event)
-{
-  if (!console.is_active())
-    {
-      switch(event.id)
-        {
-        case SDLK_1:
-          sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
-          console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
-          break;
-
-        case SDLK_2:
-          sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
-          console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
-          break;
-          
-        case SDLK_3:
-          sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
-          console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
-          break;      
-      
-        case SDLK_4:
-          sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
-          console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
-          break;
-
-
-        default:
-          // ignore key
-          //console.add("Key pressed:: ", event.id);
-          break;
-        }
-    }
-}
-
 /* EOF */

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/game_session.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -1,21 +1,27 @@
-//  $Id$
-// 
-//  Windstille - A Jump'n Shoot Game
-//  Copyright (C) 2000 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
 
 #ifndef GAME_SESSION_HXX
 #define GAME_SESSION_HXX
@@ -28,8 +34,6 @@
 #include "sprite2d/sprite.hpp"
 #include "globals.hpp"
 
-class CL_InputEvent;
-
 class EnergyBar;
 class View;
 class Sector;
@@ -57,8 +61,6 @@
   enum { DIALOG, GAME } control_state;
   GameMainState target_state;
 
-  void on_key_down  (const CL_InputEvent& event);
-  void on_mouse_down  (const CL_InputEvent& event);
   void change_sector ();
 
   static GameSession* current_; 
@@ -68,6 +70,9 @@
   GameSession (const std::string& arg_filename);
   ~GameSession ();
 
+  SceneContext& get_scene_context() { return sc; }
+  View* get_view() { return view; }
+
   void set_dialog_state() { control_state = DIALOG; }
   void set_game_state()   { control_state = GAME; }
   void set_sector(const std::string& arg_filename);

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/glutil/texture.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -24,8 +24,6 @@
 **  02111-1307, USA.
 */
 
-#include <ClanLib/display.h>
-#include <ClanLib/gl.h>
 #include <stdexcept>
 #include <iostream>
 #include <GL/gl.h>

Modified: trunk/src/graphic_context_state.hpp
===================================================================
--- trunk/src/graphic_context_state.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/graphic_context_state.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -25,7 +25,6 @@
 #include "sharedptr.hpp"
 
 class SceneContext;
-class CL_GraphicContext;
 
 class GraphicContextStateImpl;
 

Modified: trunk/src/input/Jamfile
===================================================================
--- trunk/src/input/Jamfile	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/input/Jamfile	2005-08-05 00:31:28 UTC (rev 903)
@@ -1,28 +1,28 @@
 SubDir TOP src input ;
 
 sources =
-    axis_button.cpp                
-    axis_button.hpp
-    axis_factory.cpp
-    axis_factory.hpp
-    button_axis.cpp
-    button_axis.hpp
-    button_factory.cpp
-    button_factory.hpp
+#    axis_button.cpp                
+#    axis_button.hpp
+#    axis_factory.cpp
+#    axis_factory.hpp
+#    button_axis.cpp
+#    button_axis.hpp
+#    button_factory.cpp
+#    button_factory.hpp
     controller.cpp
     controller.hpp
-    input_axis.hpp
-    input_axis_input_device.cpp
-    input_axis_input_device.hpp
-    input_button.hpp
-    input_keyboard.hpp
-    input_button_input_device.cpp
-    input_button_input_device.hpp
-    input_keyboard_input_device.hpp
-    input_keyboard_input_device.cpp
+#    input_axis.hpp
+#    input_axis_input_device.cpp
+#    input_axis_input_device.hpp
+#    input_button.hpp
+#    input_keyboard.hpp
+#    input_button_input_device.cpp
+#    input_button_input_device.hpp
+#    input_keyboard_input_device.hpp
+#    input_keyboard_input_device.cpp
     input_event.hpp
-    input_manager_custom.cpp
-    input_manager_custom.hpp
+#    input_manager_custom.cpp
+#    input_manager_custom.hpp
     input_manager_sdl.cpp
     input_manager_sdl.hpp
     input_manager.cpp
@@ -33,8 +33,8 @@
     input_manager_player.hpp
     input_recorder.cpp
     input_recorder.hpp
-    multi_button.cpp
-    multi_button.hpp
+#    multi_button.cpp
+#    multi_button.hpp
 ;
 
 TRANSLATABLE_SOURCES += [ SearchSource $(sources) ] ;

Modified: trunk/src/input/input_manager.cpp
===================================================================
--- trunk/src/input/input_manager.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/input/input_manager.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -22,13 +22,11 @@
 #include <stdexcept>
 #include <sstream>
 #include <memory>
-#include <ClanLib/Display/joystick.h>
 
 #include "lisp/parser.hpp"
 #include "lisp/lisp.hpp"
 #include "lisp/properties.hpp"
 #include "windstille_error.hpp"
-#include "input_manager_custom.hpp"
 #include "input_manager_sdl.hpp"
 #include "input_manager_player.hpp"
 #include "input_manager_impl.hpp"

Modified: trunk/src/math/matrix.cpp
===================================================================
--- trunk/src/math/matrix.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/math/matrix.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -32,7 +32,7 @@
 #include "matrix.hpp"
 
 /////////////////////////////////////////////////////////////////////////////
-// CL_Matrix construction:
+// Matrix construction:
 
 Matrix::Matrix()
 {

Modified: trunk/src/particles/particle_system.cpp
===================================================================
--- trunk/src/particles/particle_system.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/particles/particle_system.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -19,7 +19,6 @@
 
 #include <math.h>
 #include <iostream>
-#include <ClanLib/gl.h>
 #include "particle_system.hpp"
 #include "display/scene_context.hpp"
 #include "math/vector.hpp"

Modified: trunk/src/particles/spark_drawer.cpp
===================================================================
--- trunk/src/particles/spark_drawer.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/particles/spark_drawer.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -17,9 +17,6 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-#include <ClanLib/Display/graphic_context.h>
-#include <ClanLib/Display/surface.h>
-#include <ClanLib/gl.h>
 #include "display/drawing_request.hpp"
 #include "display/vertex_array_drawing_request.hpp"
 #include "particle_system.hpp"

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/screen.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -106,14 +106,6 @@
   Fonts::ttffont->draw(Display::get_width() - 100, 30, output);
 }
 
-void
-Screen::key_down(const CL_InputEvent& event)
-{
-  switch (event.id) 
-    {
-    }
-}
-
 } // namespace Windstille
 
 /* EOF */

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/screen.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -20,12 +20,8 @@
 #ifndef HEADER_SCREEN_HXX
 #define HEADER_SCREEN_HXX
 
-#include <ClanLib/display.h>
-#include <ClanLib/core.h>
 #include "signals/slot.hpp"
 
-class CL_InputEvent;
-
 namespace Windstille {
 
 /** */
@@ -33,9 +29,6 @@
 {
 private:
   void draw_fps(float delta);
-  void key_down(const CL_InputEvent& event);
-  
-  CL_Slot slot;
   unsigned int ticks;
 
 protected:  

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/scripting/wrapper.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/scripting/wrapper.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/sprite2d/sprite.cpp
===================================================================
--- trunk/src/sprite2d/sprite.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/sprite2d/sprite.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -4,8 +4,6 @@
 
 #include <math.h>
 #include <GL/gl.h>
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include "display/drawing_request.hpp"
 #include "display/scene_context.hpp"
 #include "sprite2d/data.hpp"

Modified: trunk/src/sprite2d/sprite.hpp
===================================================================
--- trunk/src/sprite2d/sprite.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/sprite2d/sprite.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -8,7 +8,6 @@
 #include "math/vector.hpp"
 #include "math/matrix.hpp"
 
-class CL_GraphicContext;
 class DrawingContext;
 class Color;
 

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -23,8 +23,6 @@
 #include <stdint.h>
 #include <sstream>
 #include <stdexcept>
-#include <ClanLib/gl.h>
-#include <ClanLib/display.h>
 #include <physfs.h>
 #include "display/drawing_request.hpp"
 #include "display/scene_context.hpp"
@@ -263,9 +261,9 @@
     : DrawingRequest(pos, z_pos, modelview), sprite(sprite)
   {}
 
-  void draw(CL_GraphicContext* gc)
+  void draw()
   {
-    sprite->draw(gc, pos, modelview);
+    sprite->draw(pos, modelview);
   }
 };
 
@@ -332,7 +330,7 @@
 }
 
 void
-Sprite3D::draw(CL_GraphicContext* gc, const Vector& pos, const Matrix& modelview) const
+Sprite3D::draw(const Vector& pos, const Matrix& modelview) const
 {
   glMatrixMode(GL_MODELVIEW);
   glPushMatrix(); 

Modified: trunk/src/sprite3d/sprite3d.hpp
===================================================================
--- trunk/src/sprite3d/sprite3d.hpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/sprite3d/sprite3d.hpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -112,7 +112,7 @@
   
 private:  
   friend class Sprite3DDrawingRequest;
-  void draw(CL_GraphicContext* gc, const Vector& pos, const Matrix& modelview) const;
+  void draw(const Vector& pos, const Matrix& modelview) const;
   
   struct Frame {
     const sprite3d::Action* action;

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/text_area.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -23,8 +23,6 @@
 **  02111-1307, USA.
 */
 
-#include <ClanLib/gl.h>
-#include <ClanLib/Display/display.h>
 #include "ttf_font.hpp"
 #include "text_area.hpp"
 #include "baby_xml.hpp"

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-04 23:50:32 UTC (rev 902)
+++ trunk/src/windstille_main.cpp	2005-08-05 00:31:28 UTC (rev 903)
@@ -23,9 +23,6 @@
 **  02111-1307, USA.
 */
 
-#include <ClanLib/core.h>
-#include <ClanLib/vorbis.h>
-#include <ClanLib/display.h>
 #include <physfs.h>
 
 #include "windstille_error.hpp"
@@ -135,7 +132,7 @@
             std::cout << "Geometry: " << config->screen_width
                       << "x" << config->screen_height << std::endl;
           else
-            throw CL_Error("Geometry option '-g' requires argument of type {WIDTH}x{HEIGHT}");
+            throw std::runtime_error("Geometry option '-g' requires argument of type {WIDTH}x{HEIGHT}");
           break;
         
         case 's':
@@ -160,7 +157,7 @@
           exit(EXIT_SUCCESS);
           break;
 
-        case CL_CommandLine::REST_ARG:
+        case CommandLine::REST_ARG:
           levelfile = argp.get_argument();
           break;
         }
@@ -229,8 +226,6 @@
 
     deinit_modules();
 
-  } catch (CL_Error& error) {
-    std::cout << "CL_Error: " << error.message << std::endl;
   } catch (WindstilleError& err) {
     std::cout << "WindstilleError: " << err.what() << std::endl;
   } catch (std::exception& err) {



From grumbel at berlios.de  Fri Aug  5 02:33:46 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 02:33:46 +0200
Subject: [Windstille-commit] r904 - trunk
Message-ID: <200508050033.j750XkFP023812@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 02:33:00 +0200 (Fri, 05 Aug 2005)
New Revision: 904

Modified:
   trunk/configure.ac
Log:
- removed ClanLib from the compiler flags

Modified: trunk/configure.ac
===================================================================
--- trunk/configure.ac	2005-08-05 00:31:28 UTC (rev 903)
+++ trunk/configure.ac	2005-08-05 00:33:00 UTC (rev 904)
@@ -96,8 +96,6 @@
     AC_MSG_ERROR([You need to have GLU headers and libraries installed])
 fi
 
-PKG_CHECK_MODULES([CLANLIB], [clanCore-0.7 clanDisplay-0.7 clanGL-0.7 clanSignals-0.7])
-
 XIPH_PATH_OGG(, [AC_MSG_ERROR([Please install libogg])])
 XIPH_PATH_VORBIS(, [AC_MSG_ERROR([Please install libvorbis])])
 



From grumbel at berlios.de  Fri Aug  5 12:26:47 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 5 Aug 2005 12:26:47 +0200
Subject: [Windstille-commit] r905 - in trunk/src: . display input math scripting
Message-ID: <200508051026.j75AQlo6017040@sheep.berlios.de>

Author: grumbel
Date: 2005-08-05 12:26:45 +0200 (Fri, 05 Aug 2005)
New Revision: 905

Added:
   trunk/src/controller_help_window.cpp
   trunk/src/controller_help_window.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/controller_def.hpp
   trunk/src/display/display.cpp
   trunk/src/display/display.hpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/math/rect.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/text_area.cpp
Log:
- added controller help window, added functions to draw circles

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/Jamfile	2005-08-05 10:26:45 UTC (rev 905)
@@ -38,6 +38,8 @@
         command_line_generic.cpp
         controller_def.cpp
         controller_def.hpp
+        controller_help_window.hpp
+        controller_help_window.cpp
         conversation.hpp
         conversation.cpp
         dialog_manager.cpp

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/controller_def.hpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -24,7 +24,7 @@
 
 //enum AxisName       { ORIENTATION_AXIS, ACCELERATE_AXIS, STRAFE_AXIS };
 enum AxisName    { HORIZONTAL_AXIS, VERTICAL_AXIS };
-enum ButtonName  { FIRE_BUTTON, JUMP_BUTTON, USE_BUTTON, RUN_BUTTON };
+enum ButtonName  { RUN_BUTTON, JUMP_BUTTON, FIRE_BUTTON, USE_BUTTON };
 
 /** */
 class ControllerDef

Added: trunk/src/controller_help_window.cpp
===================================================================
--- trunk/src/controller_help_window.cpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/controller_help_window.cpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -0,0 +1,107 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "input/input_manager.hpp"
+#include "display/display.hpp"
+#include "text_area.hpp"
+#include "fonts.hpp"
+#include "controller_help_window.hpp"
+
+class ControllerHelpWindowImpl
+{
+public:
+  TextArea* text_area;
+};
+
+ControllerHelpWindow::ControllerHelpWindow()
+  : impl(new ControllerHelpWindowImpl)
+{
+  int width  = 200;
+  int height = 120;
+
+  impl->text_area = new TextArea(Rect(Point(Display::get_width() - width - 16,
+                                            Display::get_height() - height - 16),
+                                      Size(width, height)));
+  impl->text_area->set_font(Fonts::ttffont);
+  impl->text_area->set_text("<large>Control Help</large>\n"
+                            "------------------------\n"
+                            "walk: left/right\n"
+                            "duck: down\n"
+                            "run:  a\n"
+                            "jump: s\n"
+                            "fire: d\n"
+                            "use:  w\n"
+                            );
+}
+
+void
+ControllerHelpWindow::draw()
+{
+  const Rectf& rect = impl->text_area->get_rect().grow(8.0f);
+
+  Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
+  Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  impl->text_area->draw();
+
+  Controller controller = InputManager::get_controller();
+  
+  Rectf crect(Vector(rect.right - 100, rect.top - 100 - 8.0f),
+              Size(100, 100));
+
+  Display::fill_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
+  Display::draw_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+  Vector pos(crect.left + crect.get_width()/2  + controller.get_axis_state(HORIZONTAL_AXIS) * (crect.get_width()-16.0f)/2,
+             crect.top  + crect.get_height()/2 + controller.get_axis_state(VERTICAL_AXIS)   * (crect.get_width()-16.0f)/2);
+
+  Display::fill_circle(pos, 10.0f, Color(0.8f, 0, 0));
+  Display::draw_circle(pos, 10.0f, Color(1.0f, 0, 0));
+
+  for(int i = 0; i < 4; ++i)
+    {
+      if (controller.get_button_state(i))
+        {
+          Display::fill_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f, Color(0.8f, 0, 0));
+          Display::draw_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f, Color(1.0f, 0.0f, 0.0f));
+        }
+      else
+        {
+          Display::fill_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
+          Display::draw_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f,  Color(1.0f, 1.0f, 1.0f, 0.5f));
+        }
+    }
+}
+
+void
+ControllerHelpWindow::update(float delta)
+{
+  impl->text_area->update(delta);
+}
+
+/* EOF */

Added: trunk/src/controller_help_window.hpp
===================================================================
--- trunk/src/controller_help_window.hpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/controller_help_window.hpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -0,0 +1,48 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_CONTROLLER_HELP_WINDOW_HPP
+#define HEADER_CONTROLLER_HELP_WINDOW_HPP
+
+#include "sharedptr.hpp"
+
+class ControllerHelpWindowImpl;
+
+/** */
+class ControllerHelpWindow
+{
+public:
+  ControllerHelpWindow();
+
+  void draw();
+  void update(float delta);
+
+private:
+  SharedPtr<ControllerHelpWindowImpl> impl;
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/display/display.cpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -250,4 +250,53 @@
     }
 }
 
+void
+Display::draw_circle(const Vector& pos, float radius, const Color& color)
+{
+  OpenGLState state;
+
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
+
+  int n = 4;
+  glBegin(GL_LINE_STRIP);
+  glVertex2f(radius + pos.x, pos.y);
+  for(int i = 1; i < n * 4; ++i)
+    {
+      float x = cosf(i * (M_PI/2) / n) * radius;
+      float y = sinf(i * (M_PI/2) / n) * radius;
+      
+      glVertex2f(x + pos.x, y + pos.y);
+    }
+  glVertex2f(radius + pos.x, pos.y);
+  glEnd();
+}
+
+void
+Display::fill_circle(const Vector& pos, float radius, const Color& color)
+{
+  OpenGLState state;
+
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.color(color);
+  state.activate();
+
+  int n = 4;
+  glBegin(GL_TRIANGLE_FAN);
+  glVertex2f(pos.x, pos.y);
+  glVertex2f(radius + pos.x, pos.y);
+  for(int i = 1; i < n * 4; ++i)
+    {
+      float x = cosf(i * (M_PI/2) / n) * radius;
+      float y = sinf(i * (M_PI/2) / n) * radius;
+      
+      glVertex2f(x + pos.x, y + pos.y);
+    }
+  glVertex2f(radius + pos.x, pos.y);
+  glEnd();
+}
+
 /* EOF */

Modified: trunk/src/display/display.hpp
===================================================================
--- trunk/src/display/display.hpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/display/display.hpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -41,6 +41,9 @@
 
   static void draw_line(const Vector& pos1, const Vector& pos2, const Color& color);
 
+  static void draw_circle(const Vector& pos, float radius, const Color& color);
+  static void fill_circle(const Vector& pos, float radius, const Color& color);
+
   static int  get_width();
   static int  get_height();
 

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/game_session.cpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -65,8 +65,7 @@
 GameSession* GameSession::current_ = 0; 
 
 GameSession::GameSession(const std::string& arg_filename)
-  : control_dialog("images/controldialog.sprite"),
-    sector (0)
+  : sector (0)
 {
   if (debug) std::cout << "Creating new GameSession" << std::endl;
   current_ = this;
@@ -104,10 +103,7 @@
     dialog_manager->draw(); 
   
   conversation->draw();
-
-  //control_dialog.set_alignment(origin_bottom_right);
-  control_dialog.draw(Vector(800-16 - control_dialog.get_width(), 
-                             600-16 - control_dialog.get_height()));
+  controller_help_window.draw();
 }
 
 void
@@ -186,6 +182,7 @@
       break;
     }
   conversation->update(delta);
+  controller_help_window.update(delta);
   
   if(keystate[SDLK_ESCAPE])
     quit();

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/game_session.hpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -31,6 +31,7 @@
 #include "console.hpp"
 #include "squirrel/include/squirrel.h"
 #include "screen.hpp"
+#include "controller_help_window.hpp"
 #include "sprite2d/sprite.hpp"
 #include "globals.hpp"
 
@@ -41,6 +42,7 @@
 class DialogManager;
 class Conversation;
 
+
 class GameSession : public Windstille::Screen
 {
 private:
@@ -48,7 +50,7 @@
 
   float fadeout_value;
 
-  Sprite control_dialog;
+  ControllerHelpWindow controller_help_window;
 
   std::string filename;
   Sector* sector;

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -135,11 +135,11 @@
         {
           if (event.jaxis.value < -DEAD_ZONE)
             {
-              add_axis_event(HORIZONTAL_AXIS, -1.0);
+              add_axis_event(HORIZONTAL_AXIS, event.jaxis.value/32768.0f);
             }
           else if (event.jaxis.value > DEAD_ZONE)
             {
-              add_axis_event(HORIZONTAL_AXIS, 1.0);
+              add_axis_event(HORIZONTAL_AXIS, event.jaxis.value/32767.0f);
             }
           else
             {
@@ -150,11 +150,11 @@
         {
           if (event.jaxis.value < -DEAD_ZONE)
             {
-              add_axis_event(VERTICAL_AXIS, -1.0);
+              add_axis_event(VERTICAL_AXIS, event.jaxis.value/32768.0f);
             }
           else if (event.jaxis.value > DEAD_ZONE)
             {
-              add_axis_event(VERTICAL_AXIS, 1.0);
+              add_axis_event(VERTICAL_AXIS, event.jaxis.value/32767.0f);
             }
           else
             {

Modified: trunk/src/math/rect.hpp
===================================================================
--- trunk/src/math/rect.hpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/math/rect.hpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -353,6 +353,14 @@
 		right += offset.x;
 		bottom += offset.y;
 	}
+
+	// Moves each edge f away from the center, thus width = old_width + 2*f
+	Rectf grow(float f) const {
+		return Rectf(left   - f, 
+						 top    - f,
+						 right  + f,
+						 bottom + f);
+	}
 };
 
 inline Rect::Rect(const Rectf& rect)

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/scripting/wrapper.cpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/scripting/wrapper.hpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-05 00:33:00 UTC (rev 904)
+++ trunk/src/text_area.cpp	2005-08-05 10:26:45 UTC (rev 905)
@@ -129,7 +129,7 @@
   glBindTexture(GL_TEXTURE_2D, impl->font->get_texture().get_handle());
 
   glPushMatrix();
-  glTranslatef(impl->rect.left, impl->rect.top, 0);
+  glTranslatef(impl->rect.left, impl->rect.top + impl->font->get_height(), 0);
   // Voodoo to get non-blurry fonts
   float mx = -0.375;
   float my = -0.375; 



From matzebraun at berlios.de  Fri Aug  5 16:10:57 2005
From: matzebraun at berlios.de (Matthias Braun at BerliOS)
Date: Fri, 5 Aug 2005 16:10:57 +0200
Subject: [Windstille-commit] r906 - in trunk: . src
Message-ID: <200508051410.j75EAv2l013333@sheep.berlios.de>

Author: matzebraun
Date: 2005-08-05 16:10:55 +0200 (Fri, 05 Aug 2005)
New Revision: 906

Modified:
   trunk/Jamrules
   trunk/src/Jamfile
Log:
only set CFLAGS globally, set LFLAGS for windstille only for now, because you can't link miniswig with SDL on win32

Modified: trunk/Jamrules
===================================================================
--- trunk/Jamrules	2005-08-05 10:26:45 UTC (rev 905)
+++ trunk/Jamrules	2005-08-05 14:10:55 UTC (rev 906)
@@ -55,7 +55,9 @@
 USE_LIBS = FT2 OPENAL PHYSFS VORBISFILE VORBIS OGG ICONV GL GLU SDL SDLIMAGE ;
 CXXFLAGS += $($(USE_LIBS)_CFLAGS) ;
 CFLAGS += $($(USE_LIBS)_CFLAGS) ;
-LIBS += $($(USE_LIBS)_LIBS) ;
+# don't set LIBS globally for now, as miniswig doesn't link with SDL on win32
+# we set libs for the windstille target manually
+#LIBS += $($(USE_LIBS)_LIBS) ;
 
 # for the emacsers out there (compiles all objects in current subdir if jam is
 # invoked in a subdir)

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-05 10:26:45 UTC (rev 905)
+++ trunk/src/Jamfile	2005-08-05 14:10:55 UTC (rev 906)
@@ -151,4 +151,6 @@
 
 C++Flags windstille : -DAPPDATADIR='\"$(appdatadir)\"' ;
 LinkWith windstille : squirrel ;
+LFlags windstille : $($(USE_LIBS)_LIBS) ;
 Help windstille : "Build the windstille executable" ;
+



From jamesgregory at berlios.de  Fri Aug  5 16:45:48 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Fri, 5 Aug 2005 16:45:48 +0200
Subject: [Windstille-commit] r907 - trunk/src
Message-ID: <200508051445.j75EjmDF014677@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-05 16:45:47 +0200 (Fri, 05 Aug 2005)
New Revision: 907

Modified:
   trunk/src/windstille_main.cpp
Log:
remove ifdefing that was there to allow clanlib and sdl to coexist in windows

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-05 14:10:55 UTC (rev 906)
+++ trunk/src/windstille_main.cpp	2005-08-05 14:45:47 UTC (rev 907)
@@ -47,10 +47,6 @@
 #include "command_line.hpp"
 #include "sprite2d/manager.hpp"
 
-#ifdef main
-#undef main
-#endif
-
 using namespace Windstille;
 
 WindstilleMain::WindstilleMain()
@@ -428,6 +424,9 @@
       break;
 
     case LOAD_MENU:
+      delete screen;
+      screen = 0;
+      return false;
       // Fall through and load the game directly as long as we don't
       // have a new menu
     case LOAD_GAME_SESSION:



From jamesgregory at berlios.de  Fri Aug  5 17:07:31 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Fri, 5 Aug 2005 17:07:31 +0200
Subject: [Windstille-commit] r908 - trunk/src
Message-ID: <200508051507.j75F7VKV016383@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-05 17:07:30 +0200 (Fri, 05 Aug 2005)
New Revision: 908

Modified:
   trunk/src/windstille_main.cpp
Log:
oops

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-05 14:45:47 UTC (rev 907)
+++ trunk/src/windstille_main.cpp	2005-08-05 15:07:30 UTC (rev 908)
@@ -424,9 +424,6 @@
       break;
 
     case LOAD_MENU:
-      delete screen;
-      screen = 0;
-      return false;
       // Fall through and load the game directly as long as we don't
       // have a new menu
     case LOAD_GAME_SESSION:



From jamesgregory at berlios.de  Fri Aug  5 18:43:27 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Fri, 5 Aug 2005 18:43:27 +0200
Subject: [Windstille-commit] r909 - trunk/src/input
Message-ID: <200508051643.j75GhROP005856@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-05 18:43:03 +0200 (Fri, 05 Aug 2005)
New Revision: 909

Modified:
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
Log:
allow changing of direction without having to totally release last pressed direction

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-05 15:07:30 UTC (rev 908)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-05 16:43:03 UTC (rev 909)
@@ -38,6 +38,8 @@
 
   if (num_joysticks > 0)
     /*SDL_Joystick* joy =*/ SDL_JoystickOpen(0);
+    
+  keystate = SDL_GetKeyState(0);
 }
 
 InputManagerSDL::~InputManagerSDL()
@@ -71,14 +73,14 @@
           case SDLK_LEFT:
             if (event.key.state)
               add_axis_event(HORIZONTAL_AXIS, -1.0);
-            else
+            else if (!keystate[SDLK_RIGHT])
               add_axis_event(HORIZONTAL_AXIS, 0);
             break;
 
           case SDLK_RIGHT:
             if (event.key.state)
               add_axis_event(HORIZONTAL_AXIS, 1.0);
-            else
+            else if (!keystate[SDLK_LEFT])
               add_axis_event(HORIZONTAL_AXIS, 0);
             break;
 

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-05 15:07:30 UTC (rev 908)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-05 16:43:03 UTC (rev 909)
@@ -47,6 +47,7 @@
 private:
   InputManagerSDL (const InputManagerSDL&);
   InputManagerSDL& operator= (const InputManagerSDL&);
+  Uint8* keystate;
 };
 
 #endif



From jamesgregory at berlios.de  Fri Aug  5 19:29:23 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Fri, 5 Aug 2005 19:29:23 +0200
Subject: [Windstille-commit] r911 - trunk/src
Message-ID: <200508051729.j75HTNWP005288@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-05 19:29:19 +0200 (Fri, 05 Aug 2005)
New Revision: 911

Modified:
   trunk/src/sector.cpp
Log:
don't attempt to run init-script if the sector doesn't have one

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-05 17:26:02 UTC (rev 910)
+++ trunk/src/sector.cpp	2005-08-05 17:29:19 UTC (rev 911)
@@ -169,7 +169,8 @@
   commit_removes();
 
   sound_manager->play_music(music);
-  script_manager->run_script_file(init_script);
+  if (init_script != "")
+    script_manager->run_script_file(init_script);
 }
 
 void



From jamesgregory at berlios.de  Fri Aug  5 19:26:15 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Fri, 5 Aug 2005 19:26:15 +0200
Subject: [Windstille-commit] r910 - trunk/src
Message-ID: <200508051726.j75HQF0v001779@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-05 19:26:02 +0200 (Fri, 05 Aug 2005)
New Revision: 910

Modified:
   trunk/src/screen.cpp
Log:
Hacky workaround to make it seem like vsync is off in debug mode, to see what the framerate is like

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-05 16:43:03 UTC (rev 909)
+++ trunk/src/screen.cpp	2005-08-05 17:26:02 UTC (rev 910)
@@ -56,6 +56,10 @@
   Uint32 now = SDL_GetTicks();
   float delta = static_cast<float>(now - ticks) / 1000.0f;
   ticks = now;
+  
+  /*only used in debug. Limits page flipping so one can see what the framerate
+  is like without it being clipped by vsync*/  
+  static int last_flip_time = 0;
 
   ++frames;
  
@@ -82,7 +86,11 @@
     console.draw();
   }
 
-  SDL_GL_SwapBuffers();
+  if (!debug || now - last_flip_time > 20)
+    {
+      SDL_GL_SwapBuffers();
+      last_flip_time = now;
+    }
   ++frames;
 
   EventManager::instance()->update();



From davidkamphausen at berlios.de  Sat Aug  6 11:09:07 2005
From: davidkamphausen at berlios.de (David Kamphausen at BerliOS)
Date: Sat, 6 Aug 2005 11:09:07 +0200
Subject: [Windstille-commit] r912 - in trunk/src: collision scripting
Message-ID: <200508060909.j769977Y000058@sheep.berlios.de>

Author: davidkamphausen
Date: 2005-08-06 11:09:00 +0200 (Sat, 06 Aug 2005)
New Revision: 912

Modified:
   trunk/src/collision/collision_engine.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
* fixed collision unstucking, when stuck in several map-tiles


Modified: trunk/src/collision/collision_engine.cpp
===================================================================
--- trunk/src/collision/collision_engine.cpp	2005-08-05 17:29:19 UTC (rev 911)
+++ trunk/src/collision/collision_engine.cpp	2005-08-06 09:09:00 UTC (rev 912)
@@ -24,7 +24,7 @@
 #include "globals.hpp"
 #include "tile_map.hpp"
 
-std::vector<Rectf> tilemap_collision_list(TileMap *tilemap, const Rectf &r);
+std::vector<Rectf> tilemap_collision_list(TileMap *tilemap, const Rectf &r, bool is_ground);
 
 /***********************************************************************
  * Collision
@@ -113,9 +113,99 @@
   return dir;
 }
 
+int c_roundup(float f)
+{
+  int i=(int)f;
+  if(f>i)
+    i++;
+  return i;
+}
+
+int c_round(float f)
+{
+  int i=(int)f;
+  if(fabs(f-i)>0.5)
+    {
+      if(i>0)
+	i++;
+      else
+	i--;
+    }
+  return i;
+}
+
+bool is_rect_free(TileMap *tilemap, int l, int t, int w,int h)
+{
+  int x,y;
+  for (x=l; x<=l+w; x++)
+    for (y=t; y<=t+h; y++)
+      {
+	if (tilemap->is_ground( x * TILE_SIZE, y * TILE_SIZE))
+	  return false;
+      }
+  return true;
+}
+
+Rectf get_next_free_rect(TileMap *tilemap, const Rectf &r)
+{
+  int rx = c_round (r.left / TILE_SIZE);
+  int ry = c_round (std::min (r.top, r.bottom)  / TILE_SIZE);
+  
+  float fw = r.right - r.left;
+  float fh = fabs (r.bottom   - r.top);
+  
+  int rw = c_roundup (fw / TILE_SIZE);
+  int rh = c_roundup (fh / TILE_SIZE);
+
+  std::vector<Rectf> rects;
+
+  // find first set of free rectangle
+  // simply iterate the rectangles around current position
+  for(int d=1; d<20; d++) // not more than 20 steps
+    {
+      for(int i=-d; i<=d; i++)
+	{
+	  if (is_rect_free(tilemap, i + rx, -d + ry, rw, rh))
+	    rects.push_back( Rect(i + rx, -d + ry, rw, rh));
+	  if (is_rect_free(tilemap, i + rx, d + ry, rw, rh))
+	    rects.push_back( Rect(i + rx, d + ry, rw, rh));
+
+	  if (is_rect_free(tilemap, -d + rx, i + ry, rw, rh))
+	    rects.push_back( Rect(-d + rx, i + ry, rw, rh));
+	  if (is_rect_free(tilemap,  d + rx, i + ry, rw, rh))
+	    rects.push_back( Rect(d  + rx, i + ry, rw, rh));
+	}
+      if (rects.size())
+	break;
+    }
+  assert(rects.size());
+
+  // find nearest rectangle in this set
+  float distance=10000.0f;
+  float dx,dy,d;
+  Rectf nr;
+  for (std::vector<Rectf>::iterator i = rects.begin(); i != rects.end(); ++i)
+    {
+      dx = i->left - r.left / TILE_SIZE;
+      dy = i->top  - r.top  / TILE_SIZE;
+      d = sqrt( dx * dx + dy * dy );
+      if (d < distance)
+	{
+	  distance=d;
+	  nr=*i;
+	}
+    }
+
+  nr.right += nr.left; 
+  nr.bottom += nr.top; 
+
+  return nr;
+}
+
 void
 CollisionEngine::unstuck_tilemap(CollisionObject& a, CollisionObject& b, float delta)
 {
+  (void)delta;
   Rectf rb = b.primitive;
 
   rb.left   += b.get_pos().x;
@@ -123,21 +213,29 @@
   rb.top    += b.get_pos().y;
   rb.bottom += b.get_pos().y;
 
-  // assume, that only one tile is penetrated
-  std::vector<Rectf> rect_list= tilemap_collision_list (a.tilemap, rb);
+  Rectf target = get_next_free_rect(a.tilemap, rb);
   
-  assert (b.get_type() == CollisionObject::RECTANGLE);
-  assert (a.get_type() == CollisionObject::TILEMAP);
-	
-  if (rect_list.size() == 0)
-    return;
-  assert (rect_list.size()>=1);
+  target.left   *= TILE_SIZE;
+  target.top    *= TILE_SIZE;
+  target.right  = target.left + (rb.right - rb.left);
+  target.bottom = target.top  + (rb.top - rb.bottom);
 
-  Vector dir = unstuck_direction (rect_list[0], rb, delta, unstuck_velocity);
-  
-  assert (b.unstuck_movable());
-  b.pos += dir;
+  // align to grid, if coming from right or bottom
 
+  if(target.top < rb.top)
+    {
+      float add = c_roundup (target.bottom / TILE_SIZE) * TILE_SIZE - target.bottom;
+      target.top    += add;
+      target.bottom += add;
+    }
+  if(target.left < rb.left)
+    {
+      float add = c_roundup (target.right / TILE_SIZE) * TILE_SIZE - target.right;
+      target.left  += add;
+      target.right += add;
+    }
+
+  b.pos = Vector(target.left-b.primitive.left, target.top-b.primitive.top);
 }
 
 void
@@ -250,10 +348,9 @@
 	      
 	      if (i != j && ((*i)->unstuck_movable() || ((*j)->unstuck_movable())))
 		{
-		  CollisionData r = collide(**i, **j, delta/1000.0f);
+		  CollisionData r = collide(**i, **j, 0);
 		  if(r.state!=CollisionData::NONE)
 		    {
-		      //		      collision(**i, **j, r, delta);///30.0f);
 		      penetration=true;
 		      unstuck(**i, **j, delta/3.0f);
 		    }
@@ -434,7 +531,7 @@
   return false;
 }
 
-std::vector<Rectf> tilemap_collision_list(TileMap *tilemap, const Rectf &r)
+std::vector<Rectf> tilemap_collision_list(TileMap *tilemap, const Rectf &r,bool is_ground)
 {
   std::vector<Rectf> rect_list;
   int minx, maxx;
@@ -449,7 +546,7 @@
   for (y = std::max (0, miny); y <= std::min (maxy, tilemap->get_height() - 1); ++y)
     for (x = std::max (0, minx); x <= std::min (maxx, tilemap->get_width() - 1); ++x)
       {
-	if(tilemap->is_ground (x * TILE_SIZE, y * TILE_SIZE ))
+	if(tilemap->is_ground (x * TILE_SIZE, y * TILE_SIZE ) == is_ground)
 	  {
 	    rect_list.push_back (Rectf (x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE));
 	  }

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-05 17:29:19 UTC (rev 911)
+++ trunk/src/scripting/wrapper.cpp	2005-08-06 09:09:00 UTC (rev 912)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-05 17:29:19 UTC (rev 911)
+++ trunk/src/scripting/wrapper.hpp	2005-08-06 09:09:00 UTC (rev 912)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__



From jamesgregory at berlios.de  Sat Aug  6 14:54:15 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 14:54:15 +0200
Subject: [Windstille-commit] r913 - trunk/src
Message-ID: <200508061254.j76CsFH1032467@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 14:54:13 +0200 (Sat, 06 Aug 2005)
New Revision: 913

Added:
   trunk/src/pda.cpp
   trunk/src/pda.hpp
Removed:
   trunk/src/event_manager.cpp
   trunk/src/event_manager.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/controller_help_window.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/screen.cpp
   trunk/src/screen.hpp
Log:
- split events between shared screen events and events specific to GameSession
- removed EventManager
- added a very basic PDA

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/Jamfile	2005-08-06 12:54:13 UTC (rev 913)
@@ -46,8 +46,6 @@
         dialog_manager.hpp
         energy_bar.cpp
         energy_bar.hpp
-        event_manager.hpp
-        event_manager.cpp
         entity.cpp
         entity.hpp
         elevator.hpp
@@ -70,6 +68,8 @@
         math.hpp
         nightvision.cpp
         nightvision.hpp
+        pda.cpp
+        pda.hpp
         player.cpp
         player.hpp
         random.cpp

Modified: trunk/src/controller_help_window.cpp
===================================================================
--- trunk/src/controller_help_window.cpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/controller_help_window.cpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -53,6 +53,7 @@
                             "jump: s\n"
                             "fire: d\n"
                             "use:  w\n"
+                            "PDA:  z\n"
                             );
 }
 

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/dialog_manager.cpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -43,7 +43,7 @@
 
 void
 DialogManager::add_dialog(int alignment_, const std::string& portrait_, const std::string& text_)
-{
+{ 
   progress  = 0;
   delay     = 0.0;
   alignment = alignment_;
@@ -99,6 +99,8 @@
                                 Size(text_width, 200)));
   text_area->set_font(Fonts::ttfdialog);
   text_area->set_text(text);
+  
+  GameSession::current()->pda.add_dialog(text);
 }
 
 void

Deleted: trunk/src/event_manager.cpp
===================================================================
--- trunk/src/event_manager.cpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/event_manager.cpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -1,187 +0,0 @@
-/*  $Id$
-**   __      __ __             ___        __   __ __   __
-**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
-**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
-**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
-**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
-**         \/          \/      \/    \/                         \/
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software; you can redistribute it and/or
-**  modify it under the terms of the GNU General Public License
-**  as published by the Free Software Foundation; either version 2
-**  of the License, or (at your option) any later version.
-**
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-** 
-**  You should have received a copy of the GNU General Public License
-**  along with this program; if not, write to the Free Software
-**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-**  02111-1307, USA.
-*/
-
-#include <stdlib.h>
-#include <SDL.h>
-#include <iostream>
-#include "console.hpp"
-#include "globals.hpp"
-#include "gameconfig.hpp"
-#include "display/display.hpp"
-#include "display/scene_context.hpp"
-#include "game_session.hpp"
-#include "view.hpp"
-#include "input/input_manager_sdl.hpp"
-#include "event_manager.hpp"
-
-EventManager* EventManager::instance_ = 0;
-
-EventManager::EventManager()
-{
-  
-}
-
-EventManager::~EventManager()
-{
-  
-}
-
-EventManager*
-EventManager::instance()
-{
-  if (instance_)
-    return instance_;
-  else
-    return (instance_ = new EventManager());
-}
-
-void
-EventManager::update()
-{
-  SDL_Event event;
-  while(SDL_PollEvent(&event))
-    {
-      switch(event.type)
-        {
-        case SDL_QUIT:
-          // FIXME: This should be a bit more gentle, but will do for now
-          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
-          exit(EXIT_SUCCESS);
-          break;
-          
-        case SDL_ACTIVEEVENT:
-          // event.active
-          break;
-          
-        case SDL_VIDEORESIZE:
-          // event.resize
-          break;
-              
-        case SDL_VIDEOEXPOSE:
-          // event.expose
-          break;
-                
-        case SDL_USEREVENT:
-          // event.user
-          break;
-                    
-        case SDL_SYSWMEVENT:
-          // event.syswm
-          break;
-          break;
-
-        case SDL_KEYDOWN:
-        case SDL_KEYUP:
-          if (event.key.state)
-            {
-              SceneContext& sc = GameSession::current()->get_scene_context();
-          
-              switch (event.key.keysym.sym)
-                {
-                case SDLK_1:
-                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
-                  console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
-                  break;
-
-                case SDLK_2:
-                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
-                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
-                  break;
-          
-                case SDLK_3:
-                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
-                  console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
-                  break;      
-      
-                case SDLK_4:
-                  sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
-                  console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
-                  break;
-
-                case SDLK_c:
-                  if (debug) {
-                    collision_debug = !collision_debug;
-                    console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
-                  }
-                  break;
-
-                case SDLK_F10:
-                  config->show_fps = ! (config->show_fps);
-                  break;
-              
-                case SDLK_F11:
-                  config->use_fullscreen = ! (config->use_fullscreen);
-                  Display::set_fullscreen(config->use_fullscreen);
-                  break;
-              
-                case SDLK_F12:
-                  // FIXME: Implement me for SDL
-                  {
-                    std::string filename = "screenshot.png";
-                    std::cout << "Saving screenshot *NOT* to: " << filename << std::endl;
-                  }
-                  break;
-              
-                default:
-                  break;
-                }
-            }
-              
-          if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
-            {
-              console.activate();
-            }
-          else
-            {
-              if (InputManagerSDL::current())
-                InputManagerSDL::current()->on_event(event);
-            }
-          break;
-
-        case SDL_MOUSEBUTTONDOWN:
-          {
-            Vector real_pos = GameSession::current()->get_view()->screen2world(Vector(event.button.x,
-                                                                                      event.button.y));
-          
-            console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
-          }
-          break;
-
-        case SDL_MOUSEBUTTONUP:
-        case SDL_MOUSEMOTION:
-        case SDL_JOYAXISMOTION:
-        case SDL_JOYBALLMOTION:
-        case SDL_JOYHATMOTION:
-        case SDL_JOYBUTTONUP:
-        case SDL_JOYBUTTONDOWN:
-          if (InputManagerSDL::current())
-            InputManagerSDL::current()->on_event(event);
-          break;
-        }
-    }
-
-}
-
-/* EOF */

Deleted: trunk/src/event_manager.hpp
===================================================================
--- trunk/src/event_manager.hpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/event_manager.hpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -1,45 +0,0 @@
-/*  $Id$
-**   __      __ __             ___        __   __ __   __
-**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
-**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
-**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
-**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
-**         \/          \/      \/    \/                         \/
-**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software; you can redistribute it and/or
-**  modify it under the terms of the GNU General Public License
-**  as published by the Free Software Foundation; either version 2
-**  of the License, or (at your option) any later version.
-**
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-** 
-**  You should have received a copy of the GNU General Public License
-**  along with this program; if not, write to the Free Software
-**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-**  02111-1307, USA.
-*/
-
-#ifndef HEADER_EVENT_MANAGER_HPP
-#define HEADER_EVENT_MANAGER_HPP
-
-/** Management class for SDL events */
-class EventManager
-{
-private:
-  EventManager();
-  ~EventManager();
-
-  static EventManager* instance_;
-public:
-  static EventManager* instance();
-
-  void update();
-};
-
-#endif
-
-/* EOF */

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/game_session.cpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -104,6 +104,7 @@
   
   conversation->draw();
   controller_help_window.draw();
+  pda.draw();
 }
 
 void
@@ -183,6 +184,7 @@
     }
   conversation->update(delta);
   controller_help_window.update(delta);
+  pda.update(delta);
   
   if(keystate[SDLK_ESCAPE])
     quit();
@@ -227,6 +229,64 @@
 }
 
 void
+GameSession::handle_event(const SDL_Event& event)
+{
+  switch(event.type)
+  {
+    case SDL_KEYDOWN:
+    case SDL_KEYUP:
+      if (event.key.state)
+        {    
+          switch (event.key.keysym.sym)
+            {
+            case SDLK_1:
+              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::COLORMAP);
+              console << "Toggled COLORMAP: " << ((sc.get_render_mask() & SceneContext::COLORMAP) > 0) << std::endl;
+              break;
+
+            case SDLK_2:
+              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAP);
+              console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAP) > 0) << std::endl;
+              break;
+      
+            case SDLK_3:
+              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::HIGHLIGHTMAP);
+              console << "Toggled HIGHLIGHTMAP: " << ((sc.get_render_mask() & SceneContext::HIGHLIGHTMAP) > 0) << std::endl;
+              break;      
+  
+            case SDLK_4:
+              sc.set_render_mask(sc.get_render_mask() ^ SceneContext::LIGHTMAPSCREEN);
+              console << "Toggled LIGHTMAP: " << ((sc.get_render_mask() & SceneContext::LIGHTMAPSCREEN) > 0) << std::endl;
+              break;
+
+            case SDLK_c:
+              if (debug) {
+                collision_debug = !collision_debug;
+                console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
+              }
+              break;
+              
+            case SDLK_z:
+              pda.set_visible(!pda.get_visible());
+              break;
+          
+            default:
+              break;
+            }
+        }
+      break;
+        
+    case SDL_MOUSEBUTTONDOWN:
+      {
+        Vector real_pos = GameSession::current()->get_view()->screen2world(Vector(event.button.x,
+                                                                                  event.button.y));      
+        console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
+      }
+      break;
+  }
+}
+
+void
 GameSession::quit()
 {
   if (fade_state != FADEOUT)

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/game_session.hpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -32,6 +32,7 @@
 #include "squirrel/include/squirrel.h"
 #include "screen.hpp"
 #include "controller_help_window.hpp"
+#include "pda.hpp"
 #include "sprite2d/sprite.hpp"
 #include "globals.hpp"
 
@@ -74,6 +75,7 @@
 
   SceneContext& get_scene_context() { return sc; }
   View* get_view() { return view; }
+  PDA pda;
 
   void set_dialog_state() { control_state = DIALOG; }
   void set_game_state()   { control_state = GAME; }
@@ -83,6 +85,7 @@
   void draw();
   void draw_game();
   void update(float delta);
+  void handle_event(const SDL_Event& event);
 
   void quit();
 };

Added: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/pda.cpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -0,0 +1,116 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "input/input_manager.hpp"
+#include "display/display.hpp"
+#include "text_area.hpp"
+#include "fonts.hpp"
+#include "pda.hpp"
+
+PDA::PDA()
+  : visible(false)
+{ 
+  text_area = 0;
+}
+
+void
+PDA::draw()
+{
+  if (!visible)
+    return;
+    
+  const Rectf& rect = text_area->get_rect().grow(8.0f);
+
+  Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
+  Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  text_area->draw();
+
+  Controller controller = InputManager::get_controller();
+  
+  Rectf crect(Vector(rect.right - 100, rect.top - 100 - 8.0f),
+              Size(100, 100));
+
+  Display::fill_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
+  Display::draw_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+  Vector pos(crect.left + crect.get_width()/2  + controller.get_axis_state(HORIZONTAL_AXIS) * (crect.get_width()-16.0f)/2,
+             crect.top  + crect.get_height()/2 + controller.get_axis_state(VERTICAL_AXIS)   * (crect.get_width()-16.0f)/2);
+
+  Display::fill_circle(pos, 10.0f, Color(0.8f, 0, 0));
+  Display::draw_circle(pos, 10.0f, Color(1.0f, 0, 0));
+
+  for(int i = 0; i < 4; ++i)
+    {
+      if (controller.get_button_state(i))
+        {
+          Display::fill_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f, Color(0.8f, 0, 0));
+          Display::draw_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f, Color(1.0f, 0.0f, 0.0f));
+        }
+      else
+        {
+          Display::fill_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
+          Display::draw_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
+                               10.0f,  Color(1.0f, 1.0f, 1.0f, 0.5f));
+        }
+    }
+}
+
+void
+PDA::update(float delta)
+{
+  int width  = 200;
+  int height = 120;
+  std::string text;
+  text = "<large>PDA</large>\n"
+         "------------------------\n";
+
+  for (unsigned i = 0; i != messages.size(); ++i)
+    text += messages[i] + '\n';
+  
+  if (text != old_text)
+  {
+    delete text_area;
+    text_area = new TextArea(Rect(Point(16,
+                Display::get_height() - height - 16),
+                Size(width, height)));
+    text_area->set_font(Fonts::ttffont);
+    text_area->set_text(text);
+    
+    old_text = text;
+  }
+  
+  text_area->update(delta);
+}
+
+void
+PDA::add_dialog(const std::string& text)
+{
+  messages.push_back(text);
+}
+
+/* EOF */


Property changes on: trunk/src/pda.cpp
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/pda.hpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -0,0 +1,52 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_PDA_HPP
+#define HEADER_PDA_HPP
+
+class TextArea;
+
+/** */
+class PDA
+{
+public:
+  PDA();
+
+  void draw();
+  void update(float delta);
+  bool get_visible() const {return visible;}
+  void set_visible(bool arg_visible) {visible = arg_visible;}
+  void add_dialog(const std::string& text);
+
+private:
+  TextArea* text_area;
+  bool visible;
+  std::vector<std::string> messages;
+  std::string old_text;
+};
+
+#endif
+
+/* EOF */


Property changes on: trunk/src/pda.hpp
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/screen.cpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -28,6 +28,7 @@
 #include "gameconfig.hpp"
 #include "event_manager.hpp"
 #include "input/input_manager.hpp"
+#include "input/input_manager_sdl.hpp"
 #include "sound/sound_manager.hpp"
 
 namespace Windstille {
@@ -93,7 +94,7 @@
     }
   ++frames;
 
-  EventManager::instance()->update();
+  poll_events();
 }
 
 void 
@@ -114,6 +115,99 @@
   Fonts::ttffont->draw(Display::get_width() - 100, 30, output);
 }
 
+void
+Screen::poll_events()
+{
+  SDL_Event event;
+  while(SDL_PollEvent(&event))
+    {
+      switch(event.type)
+        {
+        case SDL_QUIT:
+          // FIXME: This should be a bit more gentle, but will do for now
+          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
+          exit(EXIT_SUCCESS);
+          break;
+          
+        case SDL_ACTIVEEVENT:
+          // event.active
+          break;
+          
+        case SDL_VIDEORESIZE:
+          // event.resize
+          break;
+              
+        case SDL_VIDEOEXPOSE:
+          // event.expose
+          break;
+                
+        case SDL_USEREVENT:
+          // event.user
+          break;
+                    
+        case SDL_SYSWMEVENT:
+          // event.syswm
+          break;
+          break;
+
+        case SDL_KEYDOWN:
+        case SDL_KEYUP:
+          if (event.key.state)
+            {    
+              switch (event.key.keysym.sym)
+                {               
+                case SDLK_F10:
+                  config->show_fps = ! (config->show_fps);
+                  break;
+              
+                case SDLK_F11:
+                  config->use_fullscreen = ! (config->use_fullscreen);
+                  Display::set_fullscreen(config->use_fullscreen);
+                  break;
+              
+                case SDLK_F12:
+                  // FIXME: Implement me for SDL
+                  {
+                    std::string filename = "screenshot.png";
+                    std::cout << "Saving screenshot *NOT* to: " << filename << std::endl;
+                  }
+                  break;
+              
+                default:
+                  handle_event(event);
+                  break;
+                }
+            }
+              
+          if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
+            {
+              console.activate();
+            }
+          else
+            {
+              if (InputManagerSDL::current())
+                InputManagerSDL::current()->on_event(event);
+            }
+          break;
+
+        case SDL_MOUSEBUTTONUP:
+        case SDL_MOUSEMOTION:
+        case SDL_JOYAXISMOTION:
+        case SDL_JOYBALLMOTION:
+        case SDL_JOYHATMOTION:
+        case SDL_JOYBUTTONUP:
+        case SDL_JOYBUTTONDOWN:
+          if (InputManagerSDL::current())
+            InputManagerSDL::current()->on_event(event);
+          break;
+        
+        default:
+          handle_event(event);
+          break;
+      }
+    }
+}
+
 } // namespace Windstille
 
 /* EOF */

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-06 09:09:00 UTC (rev 912)
+++ trunk/src/screen.hpp	2005-08-06 12:54:13 UTC (rev 913)
@@ -20,6 +20,7 @@
 #ifndef HEADER_SCREEN_HXX
 #define HEADER_SCREEN_HXX
 
+#include <SDL.h>
 #include "signals/slot.hpp"
 
 namespace Windstille {
@@ -30,6 +31,7 @@
 private:
   void draw_fps(float delta);
   unsigned int ticks;
+  void poll_events();
 
 protected:  
   int frames;
@@ -43,6 +45,7 @@
 
   virtual void draw() =0;
   virtual void update(float delta) =0;
+  virtual void handle_event(const SDL_Event& event) =0;
 
   void display();
 };



From grumbel at berlios.de  Sat Aug  6 15:26:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 15:26:53 +0200
Subject: [Windstille-commit] r914 - in trunk/src: . display glutil lisp scripting
Message-ID: <200508061326.j76DQr5D000999@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 15:26:51 +0200 (Sat, 06 Aug 2005)
New Revision: 914

Modified:
   trunk/src/display/display.cpp
   trunk/src/display/vertex_array_drawing_request.cpp
   trunk/src/glutil/opengl_state.cpp
   trunk/src/glutil/opengl_state.hpp
   trunk/src/glutil/surface.cpp
   trunk/src/glutil/texture.cpp
   trunk/src/glutil/texture.hpp
   trunk/src/lisp/properties.hpp
   trunk/src/player.cpp
   trunk/src/screen.cpp
   trunk/src/scripting/game_objects.cpp
   trunk/src/text_area.cpp
   trunk/src/tile_factory.cpp
   trunk/src/windstille_main.cpp
Log:
- optimized OpenGL state a bit

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/display/display.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -30,7 +30,7 @@
 #include "glutil/opengl_state.hpp"
 #include "display.hpp"
 
-SDL_Surface* window;
+SDL_Surface* window       = 0;
 
 void
 Display::draw_line(const Vector& pos1, const Vector& pos2, const Color& color)
@@ -224,6 +224,8 @@
   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
   glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
+
+  OpenGLState::init();
 }
 
 void

Modified: trunk/src/display/vertex_array_drawing_request.cpp
===================================================================
--- trunk/src/display/vertex_array_drawing_request.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/display/vertex_array_drawing_request.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -64,6 +64,16 @@
   state.disable(GL_DEPTH_TEST);
   state.enable(GL_BLEND);
   state.set_blend_func(blend_sfactor, blend_dfactor);
+  
+  if (texture)
+    {
+      state.enable(GL_TEXTURE_2D);
+      state.bind_texture(texture);
+    }
+  else
+    {
+      state.disable(GL_TEXTURE_2D);
+    }
 
   if (!colors.empty())
     {
@@ -91,16 +101,6 @@
   state.enable_client_state(GL_VERTEX_ARRAY);
 
   glVertexPointer  (3, GL_FLOAT, 0, &*vertices.begin());
-  
-  if (texture)
-    {
-      state.enable(GL_TEXTURE_2D);
-      state.bind_texture(texture);
-    }
-  else
-    {
-      state.disable(GL_TEXTURE_2D);
-    }
 
   state.activate();
 

Modified: trunk/src/glutil/opengl_state.cpp
===================================================================
--- trunk/src/glutil/opengl_state.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/glutil/opengl_state.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -23,38 +23,93 @@
 **  02111-1307, USA.
 */
 
+#include <assert.h>
+#include <map>
+#include <iostream>
+#include <GL/gl.h>
+#include <GL/glext.h>
 #include "texture.hpp"
 #include "color.hpp"
+#include "globals.hpp"
+#include "display/display.hpp"
+#include "util.hpp"
 #include "opengl_state.hpp"
 
 class OpenGLStateImpl
 {
 public:
+  /** Used to check if the OpenGLState was properly used or if
+      somebody forget the final activate() call */
   bool was_activated;
 
+  Texture texture;
+
+  Color color;
+
+  GLenum blend_sfactor;
+  GLenum blend_dfactor;
+
+  /** glEnable/glDisable */
+  std::map<GLenum, bool> state;
+
+  /** glEnableClientState/glDisableClientState */
+  std::map<GLenum, bool> client_state;
+
   OpenGLStateImpl()
     : was_activated(false)
   {}
-
 };
 
-// The code here is just as placeholder for the moment, should be
-// replaced with something more optimized later
-OpenGLState::OpenGLState()
-  : impl(new OpenGLStateImpl())
+OpenGLState* OpenGLState::global_ = 0;
+
+void
+OpenGLState::init()
 {
-  // init some defaults
+  // Init the default settings
   glDisable(GL_TEXTURE_2D);
   glDisable(GL_DEPTH_TEST);
   glDisable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
-  glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
 
   glDisableClientState(GL_COLOR_ARRAY);
   glDisableClientState(GL_TEXTURE_COORD_ARRAY);
   glDisableClientState(GL_VERTEX_ARRAY);
+  glDisableClientState(GL_NORMAL_ARRAY);
+
+  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  glColor4f(1.0f, 1.0f, 1.0f, 1.0f);
+
+  global_ = new OpenGLState();
+
+  if (debug)
+    global_->verify();
 }
 
+OpenGLState*
+OpenGLState::global()
+{
+  return global_;
+}
+
+// The code here is just as placeholder for the moment, should be
+// replaced with something more optimized later
+OpenGLState::OpenGLState()
+  : impl(new OpenGLStateImpl())
+{
+  impl->state[GL_TEXTURE_2D] = false;
+  impl->state[GL_DEPTH_TEST] = false;
+  impl->state[GL_BLEND]      = false;
+
+  impl->client_state[GL_VERTEX_ARRAY]        = false;
+  impl->client_state[GL_COLOR_ARRAY]         = false;
+  impl->client_state[GL_TEXTURE_COORD_ARRAY] = false;
+  impl->client_state[GL_NORMAL_ARRAY]        = false;
+  
+  impl->blend_sfactor      = GL_SRC_ALPHA;
+  impl->blend_dfactor      = GL_ONE_MINUS_SRC_ALPHA;
+  
+  impl->color              = Color(1.0f, 1.0f, 1.0f);
+}
+
 OpenGLState::~OpenGLState()
 {
   assert(impl->was_activated);
@@ -63,43 +118,102 @@
 void
 OpenGLState::bind_texture(const Texture& texture)
 {
-  glBindTexture(GL_TEXTURE_2D, texture.get_handle());
+  impl->texture = texture;
 }
 
 void
 OpenGLState::set_blend_func(GLenum sfactor, GLenum dfactor)
 {
-  glBlendFunc(sfactor, dfactor);
+  impl->blend_sfactor = sfactor;
+  impl->blend_dfactor = dfactor;
 }
 
+bool
+OpenGLState::get_state(GLenum cap) const
+{
+  std::map<GLenum, bool>::const_iterator i = impl->state.find(cap);
+  if (i == impl->state.end())
+    {
+      std::cout << "OpenGLState: Unknown state requested: " << cap << std::endl;
+      return false;
+    }
+  else
+    {
+      return i->second;
+    }
+}
+
+void 
+OpenGLState::set_state(GLenum cap, bool value)
+{
+  std::map<GLenum, bool>::iterator i = impl->state.find(cap);
+  if (i == impl->state.end())
+    {
+      std::cout << "OpenGLState: Unknown state set: " << cap << std::endl;
+    }
+  else
+    {
+      i->second = value;
+    } 
+}
+
 void
 OpenGLState::enable(GLenum cap)
 {
-  glEnable(cap);
+  set_state(cap, true);
 }
 
 void
 OpenGLState::disable(GLenum cap)
 {  
-  glDisable(cap);
+  set_state(cap, false);
 }
+
+bool
+OpenGLState::get_client_state(GLenum array) const
+{
+  std::map<GLenum, bool>::const_iterator i = impl->client_state.find(array);
+  if (i == impl->client_state.end())
+    {
+      std::cout << "OpenGLState: Unknown client state requested: " << array << std::endl;
+      return false;
+    }
+  else
+    {
+      return i->second;
+    }
+}
+
+void
+OpenGLState::set_client_state(GLenum array, bool value)
+{
+  std::map<GLenum, bool>::iterator i = impl->client_state.find(array);
+  if (i == impl->client_state.end())
+    {
+      std::cout << "OpenGLState: Unknown client state set: " << array << std::endl;
+    }
+  else
+    {
+      i->second = value;
+    }
+}
   
 void
 OpenGLState::enable_client_state(GLenum array)
 {
-  glEnableClientState(array);
+  set_client_state(array, true);
 }
 
 void
 OpenGLState::disable_client_state(GLenum array)
 {
-  glDisableClientState(array);
+  set_client_state(array, false);
 }
 
 void
 OpenGLState::color(const Color& color)
 {
-  glColor4f(color.r, color.g, color.b, color.a);
+  impl->color = color;
 }
 
 void
@@ -107,6 +221,104 @@
 {
   // do nothing for now, should be implemented later on
   impl->was_activated = true;
+
+  OpenGLState* global = OpenGLState::global();;
+  assert(global);
+
+  // always apply color since it might have got changed between a glBegin/glEnd
+  glColor4f(impl->color.r, impl->color.g, impl->color.b, impl->color.a);
+
+  for(std::map<GLenum, bool>::iterator i = impl->state.begin();
+      i != impl->state.end(); ++i)
+    {
+      if (global->get_state(i->first) != i->second)
+        {
+          if (i->second)
+            glEnable(i->first);
+          else
+            glDisable(i->first);
+
+          global->set_state(i->first, i->second);
+        }
+    }
+
+  for(std::map<GLenum, bool>::iterator i = impl->client_state.begin();
+      i != impl->client_state.end(); ++i)
+    {
+      if (global->get_client_state(i->first) != i->second)
+        {
+          if (i->second)
+            glEnableClientState(i->first);
+          else
+            glDisableClientState(i->first);
+
+          global->set_client_state(i->first, i->second);
+        }
+    }
+
+  if (impl->blend_sfactor != global->impl->blend_sfactor ||
+      impl->blend_dfactor != global->impl->blend_dfactor)
+    {
+      glBlendFunc(impl->blend_sfactor, impl->blend_dfactor);
+
+      global->impl->blend_sfactor = impl->blend_sfactor;
+      global->impl->blend_dfactor = impl->blend_dfactor;
+    }
+
+  if (impl->texture != global->impl->texture)
+    {
+      if (impl->texture)
+        {
+          glBindTexture(GL_TEXTURE_2D, impl->texture.get_handle());
+          global->impl->texture = impl->texture;
+        }
+    }
+
+  if (debug)
+    verify();
 }
 
+void
+OpenGLState::verify()
+{
+  for(std::map<GLenum, bool>::iterator i = impl->client_state.begin();
+      i != impl->client_state.end(); ++i)
+    {
+      if (glIsEnabled(i->first) != i->second)
+        {
+          std::cout << "OpenGLState: client_state " << i->first << " is out of sync" << std::endl;
+        }
+    }  
+
+  for(std::map<GLenum, bool>::iterator i = impl->state.begin();
+      i != impl->state.end(); ++i)
+    {
+      if (glIsEnabled(i->first) != i->second)
+        {
+          std::cout << "OpenGLState: state " << i->first << " is out of sync" << std::endl;
+        }
+    }
+
+  GLint sfactor; glGetIntegerv(GL_BLEND_SRC, &sfactor);
+  if (sfactor != int(impl->blend_sfactor))
+    {
+      std::cout << "OpenGLState: src blendfunc is out of sync" << std::endl;
+    }
+
+  GLint dfactor; glGetIntegerv(GL_BLEND_DST, &dfactor);
+  if (dfactor != int(impl->blend_dfactor))
+    {
+      std::cout << "OpenGLState: dst blendfunc is out of sync" << std::endl;
+    }
+
+  GLint texture_handle;
+  glGetIntegerv(GL_TEXTURE_2D_BINDING_EXT, &texture_handle);
+  if (impl->texture && static_cast<GLuint>(texture_handle) != impl->texture.get_handle())
+    {
+      std::cout << "OpenGLState: texture handle is out of sync: " << impl->texture.get_handle() << std::endl;
+    }
+
+  assert_gl("OpenGLState::verify");
+}
+
 /* EOF */

Modified: trunk/src/glutil/opengl_state.hpp
===================================================================
--- trunk/src/glutil/opengl_state.hpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/glutil/opengl_state.hpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -38,25 +38,40 @@
     default defined state to begin with. */
 class OpenGLState
 {
+private:
+  static OpenGLState* global_;
 public:
+  static void init();
+  static OpenGLState* global();
+
   OpenGLState();
   ~OpenGLState();
 
   void bind_texture(const Texture& texture);
   void set_blend_func(GLenum sfactor, GLenum dfactor);
 
+
   void enable(GLenum cap);
   void disable(GLenum cap);
+
+  void set_state(GLenum array, bool value);
+  bool get_state(GLenum array) const;
   
+
   void enable_client_state(GLenum array);
   void disable_client_state(GLenum array);
 
+  void set_client_state(GLenum array, bool value);
+  bool get_client_state(GLenum array) const;
+
   void color(const Color& color);
 
   /** Activates the given state, you *must* call this before you issue
       gl commands that depend on the given state */
   void activate();
-
+  
+  /** Verify that all states got set as planed, for debugging purpose only */
+  void verify();
 private:
   std::auto_ptr<OpenGLStateImpl> impl;
 

Modified: trunk/src/glutil/surface.cpp
===================================================================
--- trunk/src/glutil/surface.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/glutil/surface.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -143,6 +143,8 @@
 Surface::draw(const Vector& pos) const
 {
   OpenGLState state;
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
   state.enable(GL_TEXTURE_2D);
   state.bind_texture(impl->texture);
   state.activate();

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/glutil/texture.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -232,4 +232,16 @@
   return !impl.is_null();
 }
 
+bool
+Texture::operator==(const Texture& other) const
+{
+  return impl.get() == other.impl.get();
+}
+
+bool
+Texture::operator!=(const Texture& other) const
+{
+  return impl.get() != other.impl.get();
+}
+
 /* EOF */

Modified: trunk/src/glutil/texture.hpp
===================================================================
--- trunk/src/glutil/texture.hpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/glutil/texture.hpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -57,6 +57,9 @@
 
   ~Texture();
 
+  bool operator==(const Texture&) const;
+  bool operator!=(const Texture&) const;
+
   int get_width() const;
   int get_height() const;
 

Modified: trunk/src/lisp/properties.hpp
===================================================================
--- trunk/src/lisp/properties.hpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/lisp/properties.hpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -32,6 +32,18 @@
     return true;
   }
 
+  /** 
+   * Ignore a property so that it doesn't give a warning, usefull for
+   * example if some tags are only used by the editor but not by the
+   * game.
+   */
+  void ignore(const std::string& name)
+  {
+    PropertyMap::iterator i = properties.find(name);
+    if(i != properties.end())
+      i->second.used = true;
+  }
+
   /**
    * returns an iterator over all properties with a certain name
    */

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/player.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -166,7 +166,6 @@
   try_set_action("Stand");
   velocity = Vector(0, 0);
   state = STAND;
-  printf("stand.\n");
 }
 
 void
@@ -237,7 +236,6 @@
     velocity.x = WALK_SPEED;
   else
     velocity.x = -WALK_SPEED;
-  printf("walk.\n");
 }
 
 void
@@ -267,7 +265,6 @@
   sprite.set_next_action("Ducking");
   state = DUCKING;
   velocity.x = 0;
-  printf("ducking.\n");
 }
 
 void
@@ -275,7 +272,6 @@
 {
   // ducking
   if(sprite.switched_actions()) {
-    printf("finished.\n");
     if(sprite.get_action() == "Ducking")
       set_ducked();
     else
@@ -284,12 +280,10 @@
   }
   
   if(!(controller.get_axis_state(VERTICAL_AXIS) > 0) && sprite.get_speed() > 0) {
-    printf("Changespeed1.\n");
     sprite.set_speed(-1.0);
     sprite.set_next_action("Stand");
     state = STAND;
   } else if(controller.get_axis_state(VERTICAL_AXIS) > 0 && sprite.get_speed() < 0) {
-    printf("Changespeed2.\n");
     sprite.set_speed(1.0);
     sprite.set_next_action("Ducking");
   }
@@ -299,7 +293,6 @@
 Player::set_ducked()
 {
   assert(sprite.get_action() == "Ducking");
-  printf("ducked.\n");
   state = DUCKED;
 }
 
@@ -307,7 +300,6 @@
 Player::update_ducked()
 {
   if(!controller.get_axis_state(VERTICAL_AXIS) > 0) {
-    printf("ducking.\n");
     state = DUCKING;
     sprite.set_action("StandToDuck", -1.0);
     sprite.set_next_action("Stand");
@@ -322,7 +314,6 @@
   sprite.set_next_action("Walk");
   sprite.set_next_rot(! sprite.get_rot());
   state = TURNAROUND;
-  printf("turn.\n");
 }
 
 void
@@ -410,17 +401,14 @@
   if(sprite.before_marker("RightFoot")) {
     sprite.set_next_action("JumpRightFoot");
     sprite.abort_at_marker("RightFoot");
-    printf("jumpright.\n");
     jump_foot = LEFT_FOOT;
   } else if(sprite.before_marker("LeftFoot")) {
     sprite.set_next_action("JumpLeftFoot");
     sprite.abort_at_marker("LeftFoot");
-    printf("jumpleft.\n");
     jump_foot = RIGHT_FOOT;
   } else {
     sprite.set_next_action("JumpRightFoot");
     sprite.abort_at_marker("RightFoot");
-    printf("jumpright.\n");
     jump_foot = LEFT_FOOT;
   }
   state = JUMP_BEGIN;

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/screen.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -26,7 +26,6 @@
 #include "globals.hpp"
 #include "console.hpp"
 #include "gameconfig.hpp"
-#include "event_manager.hpp"
 #include "input/input_manager.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "sound/sound_manager.hpp"

Modified: trunk/src/scripting/game_objects.cpp
===================================================================
--- trunk/src/scripting/game_objects.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/scripting/game_objects.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -27,13 +27,10 @@
 void
 GameObject::set_parent(const std::string& name)
 {
-  std::cout << "Trying to set parent" << std::endl;
   if (::Entity* entity = dynamic_cast<Entity*>(object.get()))
     {
-      std::cout << "Have Entity: " << name << std::endl;
       if (::GameObject* obj = Sector::current()->get_object(name))
         {
-          std::cout << "Setting parent: " << name << std::endl;
           entity->set_parent(dynamic_cast<Entity*>(obj));
         }
     }

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/text_area.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -23,6 +23,7 @@
 **  02111-1307, USA.
 */
 
+#include "glutil/opengl_state.hpp"
 #include "ttf_font.hpp"
 #include "text_area.hpp"
 #include "baby_xml.hpp"
@@ -121,12 +122,14 @@
 void
 TextArea::draw()
 {
-  glDisable(GL_DEPTH_TEST);
-  glEnable(GL_TEXTURE_2D);
-  glEnable(GL_BLEND);
-  glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  OpenGLState state;
+  
+  state.enable(GL_TEXTURE_2D);
+  state.bind_texture(impl->font->get_texture());
 
-  glBindTexture(GL_TEXTURE_2D, impl->font->get_texture().get_handle());
+  state.enable(GL_BLEND);
+  state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
+  state.activate();
 
   glPushMatrix();
   glTranslatef(impl->rect.left, impl->rect.top + impl->font->get_height(), 0);

Modified: trunk/src/tile_factory.cpp
===================================================================
--- trunk/src/tile_factory.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/tile_factory.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -120,7 +120,10 @@
 
   if(filename == "")
     throw std::runtime_error("Missing color-image");
- 
+
+  if (debug)
+    std::cout << "Loading tiles: " << filename << std::endl;
+
   SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
   if(!image) 
     {

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-06 12:54:13 UTC (rev 913)
+++ trunk/src/windstille_main.cpp	2005-08-06 13:26:51 UTC (rev 914)
@@ -182,8 +182,6 @@
     parse_command_line(argc, argv);
     init_modules();
 
-    std::cout << "Modules inited" << std::endl;
-
     if (playback_file.empty())
       {
         if (!controller_file.empty())



From jamesgregory at berlios.de  Sat Aug  6 15:35:26 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 15:35:26 +0200
Subject: [Windstille-commit] r915 - trunk/src/display
Message-ID: <200508061335.j76DZQrb001562@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 15:35:24 +0200 (Sat, 06 Aug 2005)
New Revision: 915

Modified:
   trunk/src/display/display.cpp
Log:
same thing with less lines

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-06 13:26:51 UTC (rev 914)
+++ trunk/src/display/display.cpp	2005-08-06 13:35:24 UTC (rev 915)
@@ -230,25 +230,16 @@
 
 void
 Display::set_fullscreen(bool fullscreen)
-{
+{ 
+  Uint32 flags = SDL_OPENGL;
   if (fullscreen)
-    {
-      window = SDL_SetVideoMode(config->screen_width, config->screen_height,
-                                0, SDL_OPENGL | SDL_FULLSCREEN);
-      if (!window)
-        {
-          throw std::runtime_error("Display:: Couldn't create window");
-        }
+    flags |= SDL_FULLSCREEN;
 
-    }
-  else
+  window = SDL_SetVideoMode(config->screen_width, config->screen_height,
+                            0, flags);
+  if (!window)
     {
-      window = SDL_SetVideoMode(config->screen_width, config->screen_height,
-                                0, SDL_OPENGL);
-      if (!window)
-        {
-          throw std::runtime_error("Display:: Couldn't create window");
-        }
+      throw std::runtime_error("Display:: Couldn't create window");
     }
 }
 



From grumbel at berlios.de  Sat Aug  6 15:43:34 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 15:43:34 +0200
Subject: [Windstille-commit] r916 - in trunk/src: display sprite3d
Message-ID: <200508061343.j76DhYIH001790@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 15:43:31 +0200 (Sat, 06 Aug 2005)
New Revision: 916

Modified:
   trunk/src/display/scene_context.cpp
   trunk/src/sprite3d/sprite3d.cpp
Log:
- removed deepbuffer clear from sprite3d (no longer needed, should instead use o different z-pos if sprite shouldn't walk through each other)
- added scissor for lightmap so that a smaller region of the screen gets cleared/filled, gives some more fps in some scenarios

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2005-08-06 13:35:24 UTC (rev 915)
+++ trunk/src/display/scene_context.cpp	2005-08-06 13:43:31 UTC (rev 916)
@@ -17,6 +17,7 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include "display/display.hpp"
 #include "glutil/surface.hpp"
 #include "glutil/opengl_state.hpp"
 #include "scene_context.hpp"
@@ -127,10 +128,14 @@
 void
 SceneContext::render()
 {
+  glClear(GL_DEPTH_BUFFER_BIT);
+      
   if (impl->render_mask & LIGHTMAPSCREEN)
     {
-      glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-      
+      glEnable(GL_SCISSOR_TEST);
+      glScissor(0, Display::get_height() - impl->lightmap.get_height(), 
+                impl->lightmap.get_width(), impl->lightmap.get_height());
+
       glPushMatrix();
       glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
 
@@ -146,13 +151,13 @@
 
         glCopyTexSubImage2D(GL_TEXTURE_2D, 0,
                             0, 0, 
-                            0, 600 - impl->lightmap.get_height(),
+                            0, Display::get_height() - impl->lightmap.get_height(),
                             impl->lightmap.get_width(), impl->lightmap.get_height());
       }
+
+      glDisable(GL_SCISSOR_TEST);
     }
 
-  glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
-
   if (impl->render_mask & COLORMAP)
     {
       impl->color.render();

Modified: trunk/src/sprite3d/sprite3d.cpp
===================================================================
--- trunk/src/sprite3d/sprite3d.cpp	2005-08-06 13:35:24 UTC (rev 915)
+++ trunk/src/sprite3d/sprite3d.cpp	2005-08-06 13:43:31 UTC (rev 916)
@@ -350,7 +350,6 @@
     }
   else
     {
-      glClear(GL_DEPTH_BUFFER_BIT);
       state.enable(GL_DEPTH_TEST);
     }
 



From jamesgregory at berlios.de  Sat Aug  6 15:53:17 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 15:53:17 +0200
Subject: [Windstille-commit] r917 - trunk/src
Message-ID: <200508061353.j76DrHCP002330@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 15:53:16 +0200 (Sat, 06 Aug 2005)
New Revision: 917

Modified:
   trunk/src/dialog_manager.cpp
   trunk/src/pda.cpp
   trunk/src/text_area.cpp
   trunk/src/text_area.hpp
Log:
- make letter-by-letter display of textarea optional
- remove unneeded code in pda which had been copied from controller_help_window

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-06 13:43:31 UTC (rev 916)
+++ trunk/src/dialog_manager.cpp	2005-08-06 13:53:16 UTC (rev 917)
@@ -148,7 +148,7 @@
   portrait.draw(Vector(pos.x + portrait_border_x,
                        pos.y + portrait_border_y));
   
-  text_area->draw();
+  text_area->draw(true);
 }
 
 void

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-06 13:43:31 UTC (rev 916)
+++ trunk/src/pda.cpp	2005-08-06 13:53:16 UTC (rev 917)
@@ -46,38 +46,6 @@
   Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
   Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
   text_area->draw();
-
-  Controller controller = InputManager::get_controller();
-  
-  Rectf crect(Vector(rect.right - 100, rect.top - 100 - 8.0f),
-              Size(100, 100));
-
-  Display::fill_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
-  Display::draw_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
-
-  Vector pos(crect.left + crect.get_width()/2  + controller.get_axis_state(HORIZONTAL_AXIS) * (crect.get_width()-16.0f)/2,
-             crect.top  + crect.get_height()/2 + controller.get_axis_state(VERTICAL_AXIS)   * (crect.get_width()-16.0f)/2);
-
-  Display::fill_circle(pos, 10.0f, Color(0.8f, 0, 0));
-  Display::draw_circle(pos, 10.0f, Color(1.0f, 0, 0));
-
-  for(int i = 0; i < 4; ++i)
-    {
-      if (controller.get_button_state(i))
-        {
-          Display::fill_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f, Color(0.8f, 0, 0));
-          Display::draw_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f, Color(1.0f, 0.0f, 0.0f));
-        }
-      else
-        {
-          Display::fill_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
-          Display::draw_circle(Vector(crect.left - 16.0f, crect.top + (crect.get_height()-20)/3 * i + 10.0f),
-                               10.0f,  Color(1.0f, 1.0f, 1.0f, 0.5f));
-        }
-    }
 }
 
 void

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-06 13:43:31 UTC (rev 916)
+++ trunk/src/text_area.cpp	2005-08-06 13:53:16 UTC (rev 917)
@@ -120,7 +120,7 @@
 }
 
 void
-TextArea::draw()
+TextArea::draw(bool letter_by_letter)
 {
   OpenGLState state;
   
@@ -230,8 +230,11 @@
                 }
               else
                 {
-                  for(std::string::const_iterator j = i->content.begin(); j != i->content.end() && eat_time > 0; ++j)
+                  for(std::string::const_iterator j = i->content.begin(); j != i->content.end(); ++j)
                     {
+                      if (letter_by_letter && eat_time <= 0)
+                        break;
+                        
                       int x = x_pos;
                       int y = y_pos;
 

Modified: trunk/src/text_area.hpp
===================================================================
--- trunk/src/text_area.hpp	2005-08-06 13:43:31 UTC (rev 916)
+++ trunk/src/text_area.hpp	2005-08-06 13:53:16 UTC (rev 917)
@@ -50,7 +50,7 @@
   void set_font(TTFFont* font);
 
   void update(float delta);
-  void draw();
+  void draw(bool letter_by_letter = false);
 
   Rectf get_rect() const;
 private:



From jamesgregory at berlios.de  Sat Aug  6 16:24:28 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 16:24:28 +0200
Subject: [Windstille-commit] r918 - trunk/src
Message-ID: <200508061424.j76EOSSD003521@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 16:24:27 +0200 (Sat, 06 Aug 2005)
New Revision: 918

Modified:
   trunk/src/controller_help_window.cpp
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/pda.cpp
   trunk/src/text_area.cpp
   trunk/src/text_area.hpp
Log:
selecting conversation answers now works properly on keyboard, I have no way to test gamepads

Modified: trunk/src/controller_help_window.cpp
===================================================================
--- trunk/src/controller_help_window.cpp	2005-08-06 13:53:16 UTC (rev 917)
+++ trunk/src/controller_help_window.cpp	2005-08-06 14:24:27 UTC (rev 918)
@@ -43,7 +43,7 @@
 
   impl->text_area = new TextArea(Rect(Point(Display::get_width() - width - 16,
                                             Display::get_height() - height - 16),
-                                      Size(width, height)));
+                                      Size(width, height)), false);
   impl->text_area->set_font(Fonts::ttffont);
   impl->text_area->set_text("<large>Control Help</large>\n"
                             "------------------------\n"

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-06 13:53:16 UTC (rev 917)
+++ trunk/src/conversation.cpp	2005-08-06 14:24:27 UTC (rev 918)
@@ -80,24 +80,26 @@
     {
       Controller controller = InputManager::get_controller();
       const InputEventLst& events = controller.get_events();
-
-      if (controller.get_axis_state(VERTICAL_AXIS) > 0)
-        {
-          selection -= 1;
-          if (selection < 0)
-            selection = choices.size() - 1;
-        }
-      else if (controller.get_axis_state(VERTICAL_AXIS) < 0)
-        {        
-          selection += 1;
-          if (selection >= int(choices.size()))
-            selection = 0;
-        }
-  
+ 
       for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
         {
-          if (i->type == BUTTON_EVENT && i->button.down)
+          if (i->type == AXIS_EVENT && i->axis.name == VERTICAL_AXIS)
             {
+              if (i->axis.pos > 0)
+                {
+                  selection -= 1;
+                  if (selection < 0)
+                    selection = choices.size() - 1;
+                }
+              else if (i->axis.pos < 0)
+                {        
+                  selection += 1;
+                  if (selection >= int(choices.size()))
+                    selection = 0;
+                }
+            }
+          else if (i->type == BUTTON_EVENT && i->button.down)
+            {
               switch (i->button.name)
                 {
                 case FIRE_BUTTON:

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-06 13:53:16 UTC (rev 917)
+++ trunk/src/dialog_manager.cpp	2005-08-06 14:24:27 UTC (rev 918)
@@ -96,7 +96,7 @@
 
   delete text_area;
   text_area = new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::ttfdialog->get_height()),
-                                Size(text_width, 200)));
+                                Size(text_width, 200)), true);
   text_area->set_font(Fonts::ttfdialog);
   text_area->set_text(text);
   
@@ -148,7 +148,7 @@
   portrait.draw(Vector(pos.x + portrait_border_x,
                        pos.y + portrait_border_y));
   
-  text_area->draw(true);
+  text_area->draw();
 }
 
 void

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-06 13:53:16 UTC (rev 917)
+++ trunk/src/pda.cpp	2005-08-06 14:24:27 UTC (rev 918)
@@ -65,7 +65,7 @@
     delete text_area;
     text_area = new TextArea(Rect(Point(16,
                 Display::get_height() - height - 16),
-                Size(width, height)));
+                Size(width, height)), false);
     text_area->set_font(Fonts::ttffont);
     text_area->set_text(text);
     

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-06 13:53:16 UTC (rev 917)
+++ trunk/src/text_area.cpp	2005-08-06 14:24:27 UTC (rev 918)
@@ -48,16 +48,17 @@
   float passed_time;
 
   int v_space;
+  bool letter_by_letter;
   std::vector<TextAreaCommand> commands;
 };
 
-TextArea::TextArea(const Rectf& rect)
+TextArea::TextArea(const Rectf& rect, bool letter_by_letter)
   : impl(new TextAreaImpl)
 {
   impl->rect    = rect;
   // FIXME: freetype might provide info for vspacing, not sure
   impl->v_space = 2;
-
+  impl->letter_by_letter = letter_by_letter;
   impl->passed_time = 0;
 }
 
@@ -120,7 +121,7 @@
 }
 
 void
-TextArea::draw(bool letter_by_letter)
+TextArea::draw()
 {
   OpenGLState state;
   
@@ -232,7 +233,7 @@
                 {
                   for(std::string::const_iterator j = i->content.begin(); j != i->content.end(); ++j)
                     {
-                      if (letter_by_letter && eat_time <= 0)
+                      if (impl->letter_by_letter && eat_time <= 0)
                         break;
                         
                       int x = x_pos;

Modified: trunk/src/text_area.hpp
===================================================================
--- trunk/src/text_area.hpp	2005-08-06 13:53:16 UTC (rev 917)
+++ trunk/src/text_area.hpp	2005-08-06 14:24:27 UTC (rev 918)
@@ -39,7 +39,7 @@
 {
 public:
   /** The area which the TextArea should cover */
-  TextArea(const Rectf& rect);
+  TextArea(const Rectf& rect, bool letter_by_letter);
   ~TextArea();
 
   /** Sets the text to be displayed in the text box */
@@ -50,7 +50,7 @@
   void set_font(TTFFont* font);
 
   void update(float delta);
-  void draw(bool letter_by_letter = false);
+  void draw();
 
   Rectf get_rect() const;
 private:



From jamesgregory at berlios.de  Sat Aug  6 16:29:59 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 16:29:59 +0200
Subject: [Windstille-commit] r919 - trunk
Message-ID: <200508061429.j76ETx22003920@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 16:29:57 +0200 (Sat, 06 Aug 2005)
New Revision: 919

Modified:
   trunk/BUGS
Log:
various bugs have been fixed

Modified: trunk/BUGS
===================================================================
--- trunk/BUGS	2005-08-06 14:24:27 UTC (rev 918)
+++ trunk/BUGS	2005-08-06 14:29:57 UTC (rev 919)
@@ -1,9 +1,6 @@
 Windstille Bugs
 ===============
 
-- if you keep alternately holding down left and right, and sometimes
-  hold both at once, you can sometimes get the player stuck
-
 - Jane's hat is white, caused by one mesh using two textures, could be
   fixed in either the exporter or in the model itself
 
@@ -19,8 +16,4 @@
   in general the game shouldn't crash when stuff isn't found, but
   instead fallback to placeholders and give a error message on the console
 
-- sometimes (very rarly) the game freezes at startup
-
-- can't Ctrl-c the game
-
 # EOF #



From jamesgregory at berlios.de  Sat Aug  6 17:36:25 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 17:36:25 +0200
Subject: [Windstille-commit] r920 - trunk/src
Message-ID: <200508061536.j76FaP7f007254@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 17:36:24 +0200 (Sat, 06 Aug 2005)
New Revision: 920

Modified:
   trunk/src/screen.cpp
Log:
ignore keyboard except F keys when console is active

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-06 14:29:57 UTC (rev 919)
+++ trunk/src/screen.cpp	2005-08-06 15:36:24 UTC (rev 920)
@@ -173,7 +173,8 @@
                   break;
               
                 default:
-                  handle_event(event);
+                  if (!console.is_active())
+                    handle_event(event);
                   break;
                 }
             }



From grumbel at berlios.de  Sat Aug  6 17:51:30 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 17:51:30 +0200
Subject: [Windstille-commit] r921 - trunk/src/input
Message-ID: <200508061551.j76FpUWk007996@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 17:51:29 +0200 (Sat, 06 Aug 2005)
New Revision: 921

Modified:
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
Log:
- enabled keyrepeat

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-06 15:36:24 UTC (rev 920)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-06 15:51:29 UTC (rev 921)
@@ -39,7 +39,7 @@
   if (num_joysticks > 0)
     /*SDL_Joystick* joy =*/ SDL_JoystickOpen(0);
     
-  keystate = SDL_GetKeyState(0);
+  SDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY, SDL_DEFAULT_REPEAT_INTERVAL);
 }
 
 InputManagerSDL::~InputManagerSDL()
@@ -49,6 +49,8 @@
 void
 InputManagerSDL::on_event(const SDL_Event& event)
 {
+  Uint8* keystate = SDL_GetKeyState(0);
+
   switch(event.type)
     {        
     case SDL_KEYUP:

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-06 15:36:24 UTC (rev 920)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-06 15:51:29 UTC (rev 921)
@@ -47,7 +47,6 @@
 private:
   InputManagerSDL (const InputManagerSDL&);
   InputManagerSDL& operator= (const InputManagerSDL&);
-  Uint8* keystate;
 };
 
 #endif



From jamesgregory at berlios.de  Sat Aug  6 18:08:02 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 18:08:02 +0200
Subject: [Windstille-commit] r922 - trunk/src/scripting
Message-ID: <200508061608.j76G82Em009297@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 18:07:58 +0200 (Sat, 06 Aug 2005)
New Revision: 922

Modified:
   trunk/src/scripting/spawn_object.hpp
Log:
correct doc comment

Modified: trunk/src/scripting/spawn_object.hpp
===================================================================
--- trunk/src/scripting/spawn_object.hpp	2005-08-06 15:51:29 UTC (rev 921)
+++ trunk/src/scripting/spawn_object.hpp	2005-08-06 16:07:58 UTC (rev 922)
@@ -13,7 +13,7 @@
  *    name:    string with name of object
  *    table:   table that is parsed to get object properties
  *
- * Example: spawn_object("ScriptableObject", { name="blup", x = 2.0, y = 5.0, sprite="arrows/red" });
+ * Example: spawn_object("scriptable-object", {name="blup", pos=[350,370], sprite="images/arrow.sprite"});
  */
 int spawn_object(HSQUIRRELVM v) __custom;
 



From jamesgregory at berlios.de  Sat Aug  6 18:09:26 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 18:09:26 +0200
Subject: [Windstille-commit] r923 - trunk/src
Message-ID: <200508061609.j76G9QuA009376@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 18:09:23 +0200 (Sat, 06 Aug 2005)
New Revision: 923

Modified:
   trunk/src/scriptable_object.cpp
   trunk/src/scriptable_object.hpp
Log:
allow setting of z-pos

Modified: trunk/src/scriptable_object.cpp
===================================================================
--- trunk/src/scriptable_object.cpp	2005-08-06 16:07:58 UTC (rev 922)
+++ trunk/src/scriptable_object.cpp	2005-08-06 16:09:23 UTC (rev 923)
@@ -33,7 +33,8 @@
 #include "script_manager.hpp"
 
 ScriptableObject::ScriptableObject(const lisp::Lisp* lisp)
-  : target_speed(0),
+  : z_pos(50),
+    target_speed(0),
     acceleration(0),
     flash_speed(0)
 { 
@@ -51,6 +52,7 @@
   props.get("use-verb", use_verb);
   props.get("active", active);
   props.get("flash-speed", flash_speed);
+  props.get("z-pos", z_pos);
   props.print_unused_warnings("scriptable-object");
   
   if (use_verb != "")
@@ -85,14 +87,14 @@
     flash();
 
   if (sprite)
-    sc.color().draw(sprite, pos, 50);
+    sc.color().draw(sprite, pos, z_pos);
   
   if (highlight) 
-    sc.highlight().draw(highlight, pos, 50);
+    sc.highlight().draw(highlight, pos, z_pos);
 
   if (light) 
     {
-      sc.light().draw(light, pos, 50);
+      sc.light().draw(light, pos, z_pos);
     }
 }
 

Modified: trunk/src/scriptable_object.hpp
===================================================================
--- trunk/src/scriptable_object.hpp	2005-08-06 16:07:58 UTC (rev 922)
+++ trunk/src/scriptable_object.hpp	2005-08-06 16:09:23 UTC (rev 923)
@@ -46,6 +46,7 @@
   Sprite sprite;
   Sprite light;
   Sprite highlight;
+  float z_pos;
   
   //useable stuff
   std::string use_script;



From jamesgregory at berlios.de  Sat Aug  6 18:21:25 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 18:21:25 +0200
Subject: [Windstille-commit] r924 - trunk/src
Message-ID: <200508061621.j76GLP32010312@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 18:21:23 +0200 (Sat, 06 Aug 2005)
New Revision: 924

Modified:
   trunk/src/game_session.cpp
   trunk/src/graphic_context_state.cpp
   trunk/src/graphic_context_state.hpp
   trunk/src/view.cpp
   trunk/src/view.hpp
Log:
change function name to fit in with other x_to_y functions

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 16:09:23 UTC (rev 923)
+++ trunk/src/game_session.cpp	2005-08-06 16:21:23 UTC (rev 924)
@@ -278,7 +278,7 @@
         
     case SDL_MOUSEBUTTONDOWN:
       {
-        Vector real_pos = GameSession::current()->get_view()->screen2world(Vector(event.button.x,
+        Vector real_pos = GameSession::current()->get_view()->screen_to_world(Vector(event.button.x,
                                                                                   event.button.y));      
         console << "Click at: " << int(real_pos.x) << ", " << int(real_pos.y) << std::endl;
       }

Modified: trunk/src/graphic_context_state.cpp
===================================================================
--- trunk/src/graphic_context_state.cpp	2005-08-06 16:09:23 UTC (rev 923)
+++ trunk/src/graphic_context_state.cpp	2005-08-06 16:21:23 UTC (rev 924)
@@ -149,7 +149,7 @@
 }
 
 Vector
-GraphicContextState::screen2world(const Vector& pos_)
+GraphicContextState::screen_to_world(const Vector& pos_)
 {
   Vector pos(pos_.x, pos_.y);
   float sa = sin(-impl->rotation/180.0f*M_PI);

Modified: trunk/src/graphic_context_state.hpp
===================================================================
--- trunk/src/graphic_context_state.hpp	2005-08-06 16:09:23 UTC (rev 923)
+++ trunk/src/graphic_context_state.hpp	2005-08-06 16:21:23 UTC (rev 924)
@@ -68,7 +68,7 @@
 
   void zoom_to (const Rectf& rect);
 
-  Vector screen2world(const Vector& pos);
+  Vector screen_to_world(const Vector& pos);
 
 private:
   SharedPtr<GraphicContextStateImpl> impl;

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2005-08-06 16:09:23 UTC (rev 923)
+++ trunk/src/view.cpp	2005-08-06 16:21:23 UTC (rev 924)
@@ -80,9 +80,9 @@
 }
 
 Vector
-View::screen2world(const Vector& point)
+View::screen_to_world(const Vector& point)
 {
-  return state.screen2world(point);
+  return state.screen_to_world(point);
 }
 
 /* EOF */

Modified: trunk/src/view.hpp
===================================================================
--- trunk/src/view.hpp	2005-08-06 16:09:23 UTC (rev 923)
+++ trunk/src/view.hpp	2005-08-06 16:21:23 UTC (rev 924)
@@ -46,7 +46,7 @@
   /** @return the rectangle which represents the currently visible
       area, everything outside of it doesn't have to be drawn */
   Rectf get_clip_rect();
-  Vector screen2world(const Vector& point);
+  Vector screen_to_world(const Vector& point);
 
   void draw(SceneContext& gc);
   void update(float delta);



From jamesgregory at berlios.de  Sat Aug  6 18:51:02 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 18:51:02 +0200
Subject: [Windstille-commit] r925 - trunk/src/scripting
Message-ID: <200508061651.j76Gp2t7003747@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 18:50:45 +0200 (Sat, 06 Aug 2005)
New Revision: 925

Modified:
   trunk/src/scripting/spawn_object.cpp
Log:
convert underscores in squirrel variable names to hyphens in lisp variable names, e.g. my_var to my-var

Modified: trunk/src/scripting/spawn_object.cpp
===================================================================
--- trunk/src/scripting/spawn_object.cpp	2005-08-06 16:21:23 UTC (rev 924)
+++ trunk/src/scripting/spawn_object.cpp	2005-08-06 16:50:45 UTC (rev 925)
@@ -13,6 +13,16 @@
 
 void table_to_lisp(HSQUIRRELVM v, int table_idx, std::vector<Lisp*>& entries);
 
+std::string sq_to_lisp_string(std::string sq_str)
+{
+  for (unsigned i = 0; i != sq_str.size(); ++i) {
+    if (sq_str[i] == '_')
+      sq_str[i] = '-';
+  }
+  
+  return sq_str;
+}
+
 void sq_to_lisp(HSQUIRRELVM v, std::vector<Lisp*>& entries)
 {
   switch(sq_gettype(v, -1)) {
@@ -31,7 +41,9 @@
     case OT_STRING: {
       const char* str;
       sq_getstring(v, -1, &str);
-      entries.push_back(new Lisp(Lisp::TYPE_STRING, str));
+      std::string lisp_str = sq_to_lisp_string(str);
+      
+      entries.push_back(new Lisp(Lisp::TYPE_STRING, lisp_str));
       break;
     }                                                    
     case OT_BOOL: {



From jamesgregory at berlios.de  Sat Aug  6 18:54:54 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 18:54:54 +0200
Subject: [Windstille-commit] r926 - trunk/src/scripting
Message-ID: <200508061654.j76GssBO006547@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 18:54:40 +0200 (Sat, 06 Aug 2005)
New Revision: 926

Modified:
   trunk/src/scripting/spawn_object.cpp
Log:
use underscore translation function on the key rather than on the parameter

Modified: trunk/src/scripting/spawn_object.cpp
===================================================================
--- trunk/src/scripting/spawn_object.cpp	2005-08-06 16:50:45 UTC (rev 925)
+++ trunk/src/scripting/spawn_object.cpp	2005-08-06 16:54:40 UTC (rev 926)
@@ -40,10 +40,8 @@
     }
     case OT_STRING: {
       const char* str;
-      sq_getstring(v, -1, &str);
-      std::string lisp_str = sq_to_lisp_string(str);
-      
-      entries.push_back(new Lisp(Lisp::TYPE_STRING, lisp_str));
+      sq_getstring(v, -1, &str);      
+      entries.push_back(new Lisp(Lisp::TYPE_STRING, str));
       break;
     }                                                    
     case OT_BOOL: {
@@ -81,9 +79,10 @@
 
       const char* key;
       sq_getstring(v, -2, &key);
+      std::string lisp_key = sq_to_lisp_string(key);
 
       std::vector<Lisp*> childs;
-      childs.push_back(new Lisp(Lisp::TYPE_SYMBOL, key));
+      childs.push_back(new Lisp(Lisp::TYPE_SYMBOL, lisp_key));
       sq_to_lisp(v, childs);
       entries.push_back(new Lisp(childs));
     } else {



From jamesgregory at berlios.de  Sat Aug  6 19:03:27 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 19:03:27 +0200
Subject: [Windstille-commit] r927 - trunk/src
Message-ID: <200508061703.j76H3Rdq011739@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 19:03:20 +0200 (Sat, 06 Aug 2005)
New Revision: 927

Modified:
   trunk/src/game_session.cpp
Log:
init_script_vars.nut should be run when a new game is started, not every time you switch sector

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 16:54:40 UTC (rev 926)
+++ trunk/src/game_session.cpp	2005-08-06 17:03:20 UTC (rev 927)
@@ -76,6 +76,10 @@
   conversation   = new Conversation();
 
   filename = arg_filename;
+  
+  if (1)
+    script_manager->run_script_file("scripts/init_script_vars.nut");
+    
   change_sector();
 }
 
@@ -198,11 +202,6 @@
 
   sector = new Sector(filename);
   
-  if (1)
-    {
-      script_manager->run_script_file("scripts/init_script_vars.nut");
-    }
-
   //sector->add(new TestObject());
   
   sector->activate();



From grumbel at berlios.de  Sat Aug  6 19:12:44 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 19:12:44 +0200
Subject: [Windstille-commit] r928 - in trunk/src: . input scripting
Message-ID: <200508061712.j76HCisk018555@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 19:12:35 +0200 (Sat, 06 Aug 2005)
New Revision: 928

Modified:
   trunk/src/console.cpp
   trunk/src/controller_def.cpp
   trunk/src/controller_def.hpp
   trunk/src/controller_help_window.cpp
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/input/controller.cpp
   trunk/src/input/controller.hpp
   trunk/src/input/input_manager.hpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/player.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
- activate keyrepeat only when console is in use
- added some more buttons (pause, pda) and renamed some

Modified: trunk/src/console.cpp
===================================================================
--- trunk/src/console.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/console.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -535,12 +535,16 @@
   // Get rid of all input events so that we don't double press
   InputManager::clear();
   impl->active = true;
+
+  SDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY, SDL_DEFAULT_REPEAT_INTERVAL);
 }
 
 void
 Console::deactive()
 {
   impl->active = false;
+
+  SDL_EnableKeyRepeat(0, SDL_DEFAULT_REPEAT_INTERVAL);
 }
 
 bool

Modified: trunk/src/controller_def.cpp
===================================================================
--- trunk/src/controller_def.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/controller_def.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -17,83 +17,98 @@
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
+#include <stdexcept>
 #include "controller_def.hpp"
 
+ControllerDef::ControllerDef()
+{
+  add_button("primary-button",   PRIMARY_BUTTON);
+  add_button("secondary-button", SECONDARY_BUTTON);
+  add_button("tertiary-button",  TERTIARY_BUTTON);
+
+  add_button("pda-button", PDA_BUTTON);
+
+  add_button("aim-button",       AIM_BUTTON);
+  add_button("pause-button",     PAUSE_BUTTON);
+
+  add_axis("x-axis", X_AXIS);
+  add_axis("y-axis", Y_AXIS);
+}
+
+ControllerDef::~ControllerDef()
+{
+}
+
+void
+ControllerDef::add_button(const std::string& name, int id)
+{
+  buttons[name] = id;
+}
+
+void
+ControllerDef::add_axis  (const std::string& name, int id)
+{
+  axes[name] = id;
+}
+
 int
-ControllerDef::get_button_count()
+ControllerDef::get_button_count() const
 {
-  return 4;
+  return buttons.size();
 }
 
 int
-ControllerDef::get_axis_count()
+ControllerDef::get_axis_count() const
 {
-  return 2;
+  return axes.size();
 }
 
 int
-ControllerDef::get_keyboard_count()
+ControllerDef::get_keyboard_count() const
 {
   return 1;
 }
 
 std::string
-ControllerDef::button_id2name(int id)
+ControllerDef::button_id2name(int id) const
 {
-  switch (id)
+  for(std::map<std::string, int>::const_iterator i = buttons.begin(); i != buttons.end(); ++i)
     {
-    case FIRE_BUTTON:
-      return "fire";
-    case USE_BUTTON:
-      return "use";
-    case JUMP_BUTTON:
-      return "jump";
-    case RUN_BUTTON:
-      return "run";
-    default:
-      return "unknown";
+      if (i->second == id)
+        return i->first;
     }
+  throw std::runtime_error("Unknown button id");
 }
 
 int
-ControllerDef::button_name2id(const std::string& name)
+ControllerDef::button_name2id(const std::string& name) const
 {
-  if (name == "fire")
-    return FIRE_BUTTON;
-  else if (name == "use")
-    return USE_BUTTON;
-  else if (name == "jump")
-    return JUMP_BUTTON;
-  else if (name == "run")
-    return RUN_BUTTON;
-  else
-    return -1;
+  std::map<std::string, int>::const_iterator i = axes.find(name);
+  if (i == axes.end())
+    throw std::runtime_error("Unknown button id: " + name);
+
+  return i->second;
 }
 
 std::string
-ControllerDef::axis_id2name(int id)
+ControllerDef::axis_id2name(int id) const
 {
-  switch (id)
+  for(std::map<std::string, int>::const_iterator i = axes.begin(); i != axes.end(); ++i)
     {
-    case HORIZONTAL_AXIS:
-      return "horizontal";
-
-    case VERTICAL_AXIS:
-      return "vertical";
+      if (i->second == id)
+        return i->first;
     }
-  
-  return "<unknown>";
+  throw std::runtime_error("Unknown axis id");
 }
 
 int 
-ControllerDef::axis_name2id(const std::string& id)
+ControllerDef::axis_name2id(const std::string& name) const
 {
-  if (id == "horizontal")
-    return HORIZONTAL_AXIS;
-  else if (id == "vertical")
-    return VERTICAL_AXIS;
-  else
-    return -1;
+  std::map<std::string, int>::const_iterator i = axes.find(name);
+  if (i == axes.end())
+    throw std::runtime_error("Unknown axis name: " + name);
+
+  return i->second;
 }
 
 /* EOF */

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/controller_def.hpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -20,26 +20,52 @@
 #ifndef HEADER_CONTROLLER_DEF_HXX
 #define HEADER_CONTROLLER_DEF_HXX
 
+#include <map>
 #include <string>
 
-//enum AxisName       { ORIENTATION_AXIS, ACCELERATE_AXIS, STRAFE_AXIS };
-enum AxisName    { HORIZONTAL_AXIS, VERTICAL_AXIS };
-enum ButtonName  { RUN_BUTTON, JUMP_BUTTON, FIRE_BUTTON, USE_BUTTON };
+enum AxisName
+  { 
+    X_AXIS, // used to run left/right
+    Y_AXIS  // used to aim up/down
+  };
 
+enum ButtonName
+  { 
+    PRIMARY_BUTTON,   // used to ok a dialog or for running
+    SECONDARY_BUTTON, // used to cancel a dialog or for jumping
+    TERTIARY_BUTTON, // used to cancel a dialog or for jumping
+    PDA_BUTTON,       // display the PDA
+    
+    PAUSE_BUTTON,     // used to pause the game
+    AIM_BUTTON,       // used to draw the gun and aim
+  };
+
+#define JUMP_BUTTON SECONDARY_BUTTON
+#define RUN_BUTTON  PRIMARY_BUTTON
+
 /** */
 class ControllerDef
 {
 private:
+  std::map<std::string, int> buttons;
+  std::map<std::string, int> axes;
+
 public:
-  static int         get_button_count();
-  static int         get_axis_count();
-  static int         get_keyboard_count();
+  ControllerDef();
+  ~ControllerDef();
 
-  static std::string button_id2name(int id);
-  static int         button_name2id(const std::string& name);
+  void add_button(const std::string& name, int id);
+  void add_axis  (const std::string& name, int id);
 
-  static std::string axis_id2name(int id);
-  static int         axis_name2id(const std::string& name);
+  int         get_button_count()   const;
+  int         get_axis_count()     const;
+  int         get_keyboard_count() const;
+
+  std::string button_id2name(int id) const;
+  int         button_name2id(const std::string& name) const;
+
+  std::string axis_id2name(int id) const;
+  int         axis_name2id(const std::string& name) const;
 };
 
 #endif

Modified: trunk/src/controller_help_window.cpp
===================================================================
--- trunk/src/controller_help_window.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/controller_help_window.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -45,15 +45,14 @@
                                             Display::get_height() - height - 16),
                                       Size(width, height)), false);
   impl->text_area->set_font(Fonts::ttffont);
-  impl->text_area->set_text("<large>Control Help</large>\n"
-                            "------------------------\n"
+  impl->text_area->set_text("Control Help\n"
+                            "------------\n"
                             "walk: left/right\n"
-                            "duck: down\n"
-                            "run:  a\n"
-                            "jump: s\n"
-                            "fire: d\n"
-                            "use:  w\n"
-                            "PDA:  z\n"
+                            "duck: down\n\n"
+                            "primary/run:    s\n"
+                            "secondary/jump: d\n"
+                            "tertiary:       a\n"
+                            "pda:            w\n"
                             );
 }
 
@@ -74,13 +73,13 @@
   Display::fill_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.2f));
   Display::draw_rounded_rect(crect, 10.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
 
-  Vector pos(crect.left + crect.get_width()/2  + controller.get_axis_state(HORIZONTAL_AXIS) * (crect.get_width()-16.0f)/2,
-             crect.top  + crect.get_height()/2 + controller.get_axis_state(VERTICAL_AXIS)   * (crect.get_width()-16.0f)/2);
+  Vector pos(crect.left + crect.get_width()/2  + controller.get_axis_state(X_AXIS) * (crect.get_width()-16.0f)/2,
+             crect.top  + crect.get_height()/2 + controller.get_axis_state(Y_AXIS)   * (crect.get_width()-16.0f)/2);
 
   Display::fill_circle(pos, 10.0f, Color(0.8f, 0, 0));
   Display::draw_circle(pos, 10.0f, Color(1.0f, 0, 0));
 
-  for(int i = 0; i < 4; ++i)
+  for(int i = 0; i < 6; ++i)
     {
       if (controller.get_button_state(i))
         {

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/conversation.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -83,7 +83,7 @@
  
       for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
         {
-          if (i->type == AXIS_EVENT && i->axis.name == VERTICAL_AXIS)
+          if (i->type == AXIS_EVENT && i->axis.name == Y_AXIS)
             {
               if (i->axis.pos > 0)
                 {
@@ -102,7 +102,7 @@
             {
               switch (i->button.name)
                 {
-                case FIRE_BUTTON:
+                case PRIMARY_BUTTON:
                   visible = false;
                   choices.clear();
                   script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/dialog_manager.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -157,7 +157,8 @@
   text_area->update(delta);
 
   delay += delta;
-  if (InputManager::get_controller().get_button_state(FIRE_BUTTON) && delay > 0.2 && progress * text_speed < text.size())
+  if (InputManager::get_controller().get_button_state(PRIMARY_BUTTON) 
+      && delay > 0.2 && progress * text_speed < text.size())
     progress = int(text.size()) / text_speed;
   else
     progress += delta;
@@ -168,7 +169,7 @@
     {
       if ((*i).type == BUTTON_EVENT)
         {
-          if ((*i).button.name == FIRE_BUTTON && (*i).button.down == true
+          if ((*i).button.name == PRIMARY_BUTTON && (*i).button.down == true
               && int(progress * text_speed) > int(text.size()))
             {
               GameSession::current()->set_game_state();

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/game_session.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -81,6 +81,7 @@
     script_manager->run_script_file("scripts/init_script_vars.nut");
     
   change_sector();
+  pause = false;
 }
 
 GameSession::~GameSession()
@@ -133,11 +134,23 @@
     default:
       break;
     }
+
+  if (pause)
+    {
+      if ((SDL_GetTicks() / 1000) % 2)
+        Fonts::ttfdialog->draw(Display::get_width()/2, Display::get_height()/2, "Pause");
+    }
 }
 
 void
 GameSession::update(float delta)
 {  
+  if (InputManager::get_controller().button_pressed(PDA_BUTTON))
+    pda.set_visible(!pda.get_visible());
+
+  if (InputManager::get_controller().button_pressed(PAUSE_BUTTON))
+    pause = !pause;
+
   Uint8 *keystate = SDL_GetKeyState(NULL);
 
   if(keystate[SDLK_KP1])
@@ -148,47 +161,51 @@
     game_speed = 1.0;
 
   InputManager::update(delta);
+  
   delta *= game_speed;
 
-  game_time += delta;
-  script_manager->update();
-
-  view->update(delta);
-
-  switch (fade_state)
+  if (!pause)
     {
-    case FADEIN:
-      if (fadeout_value > 1.0f)
-        fade_state = RUNNING;
-      fadeout_value += delta;
-      break;
-    case FADEOUT:
-      if (fadeout_value > 1.0f)
-        {
-          if (target_state == LOAD_GAME_SESSION)
-            change_sector();
-          else
-            game_main_state = target_state;
-        }
-      fadeout_value += delta;
-      break;
+      game_time += delta;
+      script_manager->update();
 
-    case RUNNING:
-      sector->update (delta);
-      energy_bar->update(delta);
-      switch (control_state) 
+      view->update(delta);
+  
+      switch (fade_state)
         {
-        case DIALOG:
-          dialog_manager->update(delta);
+        case FADEIN:
+          if (fadeout_value > 1.0f)
+            fade_state = RUNNING;
+          fadeout_value += delta;
           break;
-        case GAME:
+        case FADEOUT:
+          if (fadeout_value > 1.0f)
+            {
+              if (target_state == LOAD_GAME_SESSION)
+                change_sector();
+              else
+                game_main_state = target_state;
+            }
+          fadeout_value += delta;
           break;
+
+        case RUNNING:
+          sector->update (delta);
+          energy_bar->update(delta);
+          switch (control_state) 
+            {
+            case DIALOG:
+              dialog_manager->update(delta);
+              break;
+            case GAME:
+              break;
+            }
+          break;
         }
-      break;
+      conversation->update(delta);
+      controller_help_window.update(delta);
+      pda.update(delta);
     }
-  conversation->update(delta);
-  controller_help_window.update(delta);
-  pda.update(delta);
   
   if(keystate[SDLK_ESCAPE])
     quit();
@@ -264,11 +281,7 @@
                 console << "Collision Debugging " << (collision_debug ? "enabled" : "disabled") << std::endl;
               }
               break;
-              
-            case SDLK_z:
-              pda.set_visible(!pda.get_visible());
-              break;
-          
+        
             default:
               break;
             }

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/game_session.hpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -59,6 +59,7 @@
   EnergyBar* energy_bar;
   DialogManager* dialog_manager;
   Conversation*  conversation;
+  bool pause;
 
   enum { FADEIN, RUNNING, FADEOUT } fade_state;
   enum { DIALOG, GAME } control_state;

Modified: trunk/src/input/controller.cpp
===================================================================
--- trunk/src/input/controller.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/input/controller.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -18,12 +18,15 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <assert.h>
+#include "controller_def.hpp"
 #include "controller.hpp"
 
 Controller::Controller()
 {
-  buttons.resize(ControllerDef::get_button_count());
-  axes.resize(ControllerDef::get_axis_count());
+  ControllerDef def;
+
+  buttons.resize(def.get_button_count());
+  axes.resize(def.get_axis_count());
 }
 
 float

Modified: trunk/src/input/controller.hpp
===================================================================
--- trunk/src/input/controller.hpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/input/controller.hpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -21,7 +21,7 @@
 #define HEADER_CONTROLLER_HXX
 
 #include <vector>
-#include "../controller_def.hpp"
+#include "controller_def.hpp"
 #include "input_event.hpp"
 
 /** The Controller class presents the current state of the controller

Modified: trunk/src/input/input_manager.hpp
===================================================================
--- trunk/src/input/input_manager.hpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/input/input_manager.hpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -20,6 +20,7 @@
 #ifndef HEADER_INPUT_MANAGER_HXX
 #define HEADER_INPUT_MANAGER_HXX
 
+#include <string>
 #include <vector>
 #include "controller.hpp"
 #include "input_event.hpp"

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -24,6 +24,7 @@
 */
 
 #include <iostream>
+#include "controller_def.hpp"
 #include "input_manager_sdl.hpp"
 
 InputManagerSDL* InputManagerSDL::current_ = 0;
@@ -38,8 +39,6 @@
 
   if (num_joysticks > 0)
     /*SDL_Joystick* joy =*/ SDL_JoystickOpen(0);
-    
-  SDL_EnableKeyRepeat(SDL_DEFAULT_REPEAT_DELAY, SDL_DEFAULT_REPEAT_INTERVAL);
 }
 
 InputManagerSDL::~InputManagerSDL()
@@ -74,48 +73,57 @@
           {
           case SDLK_LEFT:
             if (event.key.state)
-              add_axis_event(HORIZONTAL_AXIS, -1.0);
+              add_axis_event(X_AXIS, -1.0);
             else if (!keystate[SDLK_RIGHT])
-              add_axis_event(HORIZONTAL_AXIS, 0);
+              add_axis_event(X_AXIS, 0);
             break;
 
           case SDLK_RIGHT:
             if (event.key.state)
-              add_axis_event(HORIZONTAL_AXIS, 1.0);
+              add_axis_event(X_AXIS, 1.0);
             else if (!keystate[SDLK_LEFT])
-              add_axis_event(HORIZONTAL_AXIS, 0);
+              add_axis_event(X_AXIS, 0);
             break;
 
           case SDLK_UP:
             if (event.key.state)
-              add_axis_event(VERTICAL_AXIS, -1.0);
+              add_axis_event(Y_AXIS, -1.0);
             else
-              add_axis_event(VERTICAL_AXIS, 0);
+              add_axis_event(Y_AXIS, 0);
             break;
 
           case SDLK_DOWN:
             if (event.key.state)
-              add_axis_event(VERTICAL_AXIS, 1.0);
+              add_axis_event(Y_AXIS, 1.0);
             else
-              add_axis_event(VERTICAL_AXIS, 0);
+              add_axis_event(Y_AXIS, 0);
             break;
 
           case SDLK_a:
-            add_button_event(RUN_BUTTON, event.key.state);
+            add_button_event(TERTIARY_BUTTON, event.key.state);
             break;
 
-          case SDLK_d:
-            add_button_event(FIRE_BUTTON, event.key.state);
+          case SDLK_s:
+            add_button_event(PRIMARY_BUTTON, event.key.state);
             break;
 
-          case SDLK_s:
-            add_button_event(JUMP_BUTTON, event.key.state);
+          case SDLK_d:
+            add_button_event(SECONDARY_BUTTON, event.key.state);
             break;
 
           case SDLK_w:
-            add_button_event(USE_BUTTON, event.key.state);
+            add_button_event(PDA_BUTTON, event.key.state);
             break;
-            
+
+          case SDLK_LSHIFT:
+            add_button_event(AIM_BUTTON, event.key.state);
+            break;
+
+          case SDLK_PAUSE:
+          case SDLK_p:
+            add_button_event(PAUSE_BUTTON, event.key.state);
+            break;
+           
           default:
             break;
           }
@@ -123,8 +131,7 @@
       break;
 
     case SDL_MOUSEMOTION:
-      // event.motion:
-      break;
+      // event.motion:      break;
 
     case SDL_MOUSEBUTTONDOWN:
       // event.button
@@ -139,30 +146,30 @@
         {
           if (event.jaxis.value < -DEAD_ZONE)
             {
-              add_axis_event(HORIZONTAL_AXIS, event.jaxis.value/32768.0f);
+              add_axis_event(X_AXIS, event.jaxis.value/32768.0f);
             }
           else if (event.jaxis.value > DEAD_ZONE)
             {
-              add_axis_event(HORIZONTAL_AXIS, event.jaxis.value/32767.0f);
+              add_axis_event(X_AXIS, event.jaxis.value/32767.0f);
             }
           else
             {
-              add_axis_event(HORIZONTAL_AXIS, 0);
+              add_axis_event(X_AXIS, 0);
             }
         }
       else if (event.jaxis.axis == 1) 
         {
           if (event.jaxis.value < -DEAD_ZONE)
             {
-              add_axis_event(VERTICAL_AXIS, event.jaxis.value/32768.0f);
+              add_axis_event(Y_AXIS, event.jaxis.value/32768.0f);
             }
           else if (event.jaxis.value > DEAD_ZONE)
             {
-              add_axis_event(VERTICAL_AXIS, event.jaxis.value/32767.0f);
+              add_axis_event(Y_AXIS, event.jaxis.value/32767.0f);
             }
           else
             {
-              add_axis_event(VERTICAL_AXIS, 0);
+              add_axis_event(Y_AXIS, 0);
             }
         }
       break;
@@ -179,20 +186,28 @@
     case SDL_JOYBUTTONDOWN:
       if (event.jbutton.button == 0)
         {
-          add_button_event(FIRE_BUTTON, event.jbutton.state); 
+          add_button_event(PDA_BUTTON, event.jbutton.state); 
         }
       else if (event.jbutton.button == 1)
         {
-          add_button_event(USE_BUTTON, event.jbutton.state); 
+          add_button_event(TERTIARY_BUTTON, event.jbutton.state); 
         }
       else if (event.jbutton.button == 2)
         {
-          add_button_event(JUMP_BUTTON, event.jbutton.state);
+          add_button_event(SECONDARY_BUTTON, event.jbutton.state);
         }
       else if (event.jbutton.button == 3)
         {
-          add_button_event(RUN_BUTTON, event.jbutton.state);
+          add_button_event(PRIMARY_BUTTON, event.jbutton.state);
         }
+      else if (event.jbutton.button == 7)
+        {
+          add_button_event(AIM_BUTTON, event.jbutton.state);
+        }
+      else if (event.jbutton.button == 9)
+        {
+          add_button_event(PAUSE_BUTTON, event.jbutton.state);
+        }
       break;
 
     default:

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/player.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -171,7 +171,7 @@
 void
 Player::update_walk_stand()
 {
-  if (controller.get_axis_state(VERTICAL_AXIS) > 0) {
+  if (controller.get_axis_state(Y_AXIS) > 0) {
     set_ducking();
     return;
   }
@@ -206,19 +206,19 @@
 void
 Player::update_stand()
 { 
-  if(controller.button_pressed(USE_BUTTON))
+  if(controller.button_pressed(PRIMARY_BUTTON))
     {
       Entity* obj = find_useable_entity();
       if (obj)
         obj->use();
     }
 
-  if (controller.get_axis_state(HORIZONTAL_AXIS) < 0) {
+  if (controller.get_axis_state(X_AXIS) < 0) {
     if(get_direction() == WEST)
       set_walk(WEST);
     else
       set_turnaround();
-  } else if (controller.get_axis_state(HORIZONTAL_AXIS) > 0) {
+  } else if (controller.get_axis_state(X_AXIS) > 0) {
     if(get_direction() == EAST)
       set_walk(EAST);
     else
@@ -241,13 +241,13 @@
 void
 Player::update_walk()
 {
-  if (controller.get_axis_state(HORIZONTAL_AXIS) == 0) {
+  if (controller.get_axis_state(X_AXIS) == 0) {
     set_stand();
     return;
   }
 
-  if(get_direction() == WEST && controller.get_axis_state(HORIZONTAL_AXIS) > 0
-     || get_direction() == EAST && controller.get_axis_state(HORIZONTAL_AXIS) < 0) {
+  if(get_direction() == WEST && controller.get_axis_state(X_AXIS) > 0
+     || get_direction() == EAST && controller.get_axis_state(X_AXIS) < 0) {
     set_turnaround();
     return;
   }
@@ -279,11 +279,11 @@
     return;
   }
   
-  if(!(controller.get_axis_state(VERTICAL_AXIS) > 0) && sprite.get_speed() > 0) {
+  if(!(controller.get_axis_state(Y_AXIS) > 0) && sprite.get_speed() > 0) {
     sprite.set_speed(-1.0);
     sprite.set_next_action("Stand");
     state = STAND;
-  } else if(controller.get_axis_state(VERTICAL_AXIS) > 0 && sprite.get_speed() < 0) {
+  } else if(controller.get_axis_state(Y_AXIS) > 0 && sprite.get_speed() < 0) {
     sprite.set_speed(1.0);
     sprite.set_next_action("Ducking");
   }
@@ -299,7 +299,7 @@
 void
 Player::update_ducked()
 {
-  if(!controller.get_axis_state(VERTICAL_AXIS) > 0) {
+  if(!controller.get_axis_state(Y_AXIS) > 0) {
     state = DUCKING;
     sprite.set_action("StandToDuck", -1.0);
     sprite.set_next_action("Stand");
@@ -326,8 +326,8 @@
       set_walk(WEST);
     }
   } 
-  if(sprite.get_rot() && controller.get_axis_state(HORIZONTAL_AXIS) > 0
-     || !sprite.get_rot() && controller.get_axis_state(HORIZONTAL_AXIS) < 0) {
+  if(sprite.get_rot() && controller.get_axis_state(X_AXIS) > 0
+     || !sprite.get_rot() && controller.get_axis_state(X_AXIS) < 0) {
     sprite.set_speed(-1.0);
     sprite.set_next_action("Walk");
     state = WALK;

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/scripting/wrapper.cpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-06 17:03:20 UTC (rev 927)
+++ trunk/src/scripting/wrapper.hpp	2005-08-06 17:12:35 UTC (rev 928)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__



From grumbel at berlios.de  Sat Aug  6 20:05:01 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 20:05:01 +0200
Subject: [Windstille-commit] r929 - in trunk/src: display glutil
Message-ID: <200508061805.j76I51HT004961@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 20:04:58 +0200 (Sat, 06 Aug 2005)
New Revision: 929

Modified:
   trunk/src/display/display.cpp
   trunk/src/glutil/opengl_state.cpp
Log:
- enabled line antialiasing, might cost some speed, but looks a lot better

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-06 17:12:35 UTC (rev 928)
+++ trunk/src/display/display.cpp	2005-08-06 18:04:58 UTC (rev 929)
@@ -37,6 +37,7 @@
 {
   OpenGLState state;
 
+  state.enable(GL_LINE_SMOOTH);
   state.enable(GL_BLEND);
   state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
   state.color(color);
@@ -143,6 +144,7 @@
   OpenGLState state;
 
   state.enable(GL_BLEND);
+  state.enable(GL_LINE_SMOOTH);
   state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
   state.color(color);
   state.activate();
@@ -249,6 +251,7 @@
   OpenGLState state;
 
   state.enable(GL_BLEND);
+  state.enable(GL_LINE_SMOOTH);
   state.set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
   state.color(color);
   state.activate();

Modified: trunk/src/glutil/opengl_state.cpp
===================================================================
--- trunk/src/glutil/opengl_state.cpp	2005-08-06 17:12:35 UTC (rev 928)
+++ trunk/src/glutil/opengl_state.cpp	2005-08-06 18:04:58 UTC (rev 929)
@@ -95,9 +95,10 @@
 OpenGLState::OpenGLState()
   : impl(new OpenGLStateImpl())
 {
-  impl->state[GL_TEXTURE_2D] = false;
-  impl->state[GL_DEPTH_TEST] = false;
-  impl->state[GL_BLEND]      = false;
+  impl->state[GL_TEXTURE_2D]  = false;
+  impl->state[GL_DEPTH_TEST]  = false;
+  impl->state[GL_BLEND]       = false;
+  impl->state[GL_LINE_SMOOTH] = false;
 
   impl->client_state[GL_VERTEX_ARRAY]        = false;
   impl->client_state[GL_COLOR_ARRAY]         = false;



From jamesgregory at berlios.de  Sat Aug  6 20:54:26 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 20:54:26 +0200
Subject: [Windstille-commit] r930 - in trunk/src: . scripting
Message-ID: <200508061854.j76IsQcT007868@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 20:54:25 +0200 (Sat, 06 Aug 2005)
New Revision: 930

Modified:
   trunk/src/camera.cpp
   trunk/src/camera.hpp
   trunk/src/controller_help_window.cpp
   trunk/src/controller_help_window.hpp
   trunk/src/dialog_manager.cpp
   trunk/src/dialog_manager.hpp
   trunk/src/game_session.cpp
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
- added set_caption and end_caption scripting functions
- made activating a sector and running its init script the last thing that is done when sector is changed
- added set_pos and set_active functions to camera
- removed repetition of setting static variables in DialogManager

Modified: trunk/src/camera.cpp
===================================================================
--- trunk/src/camera.cpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/camera.cpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -25,7 +25,8 @@
 Camera* Camera::current_ = 0;
 
 Camera::Camera()
-  : pos(0, 0)
+  : pos(0, 0),
+    active(true)
 {
   current_ = this;
 }
@@ -33,6 +34,9 @@
 void
 Camera::update(float )
 {
+  if (!active)
+    return;
+    
   int hscroll_threshold = 100;
   int vscroll_threshold = 150;
 
@@ -69,4 +73,11 @@
     pos.y = end_y;
 }
 
+void
+Camera::set_pos(float x, float y)
+{
+  pos.x = x + Display::get_width()/2;
+  pos.y = y + Display::get_height()/2;
+}
+
 /* EOF */

Modified: trunk/src/camera.hpp
===================================================================
--- trunk/src/camera.hpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/camera.hpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -28,6 +28,7 @@
 {
 private:
   Vector pos;
+  bool active;
 
   static Camera* current_;
 public:
@@ -37,6 +38,8 @@
 
   void update(float delta);
   Vector get_pos() const { return pos; }
+  void set_pos(float x, float y);
+  void set_active(bool arg_active) { active = arg_active; }
 private:
   Camera (const Camera&);
   Camera& operator= (const Camera&);

Modified: trunk/src/controller_help_window.cpp
===================================================================
--- trunk/src/controller_help_window.cpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/controller_help_window.cpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -29,18 +29,23 @@
 #include "fonts.hpp"
 #include "controller_help_window.hpp"
 
+ControllerHelpWindow* ControllerHelpWindow::current_ = 0;
+
 class ControllerHelpWindowImpl
 {
 public:
   TextArea* text_area;
+  bool active;
 };
 
 ControllerHelpWindow::ControllerHelpWindow()
   : impl(new ControllerHelpWindowImpl)
 {
+  current_ = this;
   int width  = 200;
   int height = 120;
-
+  
+  impl->active = false;
   impl->text_area = new TextArea(Rect(Point(Display::get_width() - width - 16,
                                             Display::get_height() - height - 16),
                                       Size(width, height)), false);
@@ -59,6 +64,9 @@
 void
 ControllerHelpWindow::draw()
 {
+  if (!impl->active)
+    return;
+    
   const Rectf& rect = impl->text_area->get_rect().grow(8.0f);
 
   Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
@@ -104,4 +112,10 @@
   impl->text_area->update(delta);
 }
 
+void
+ControllerHelpWindow::set_active(bool active)
+{
+  impl->active = active;
+}
+
 /* EOF */

Modified: trunk/src/controller_help_window.hpp
===================================================================
--- trunk/src/controller_help_window.hpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/controller_help_window.hpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -38,9 +38,12 @@
 
   void draw();
   void update(float delta);
+  void set_active(bool active);
+  static ControllerHelpWindow* current() { return current_; }
 
 private:
   SharedPtr<ControllerHelpWindowImpl> impl;
+  static ControllerHelpWindow* current_;
 };
 
 #endif

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/dialog_manager.cpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -49,71 +49,27 @@
   alignment = alignment_;
   portrait  = Sprite(portrait_);
   text      = text_;
-
-  static const int dialog_width = 600;
-  static const int outer_border_x = 20;
-  static const int outer_border_y = 20;
-  static const int portrait_border_x = 10;
-  static const int portrait_border_y = 10;
-  static const int text_border_x = 10;
-  static const int text_border_y = 10;
-  static const int portrait_width = 180;
-  static const int portrait_height = 192;
-
-  Point pos(0,0);
-  if(alignment & LEFT) {
-    pos.x = outer_border_x;
-  } else if(alignment & RIGHT) {
-    pos.x = config->screen_width - dialog_width - outer_border_x;
-  } else {
-    pos.x = (config->screen_width - dialog_width) / 2;
-  }
-      
-  int text_width
-    = dialog_width - portrait_height - portrait_border_x*2 - text_border_x;
-  Rect text_rect = Rect(Point(pos.x + portrait_width + portrait_border_x*2, 0),
-                        Size(500, 200)); // FIXME: use real bounding box calc
+  caption = false;
   
-  text_rect.bottom = text_rect.top + text_rect.get_height();
-  text_rect.top    = pos.y + text_border_y;
+  create_text();  
+  GameSession::current()->pda.add_dialog(text);
+}
 
-  int dialog_height = std::max(portrait_height + portrait_border_y*2,
-                               text_rect.get_height() + text_border_y*2);
-
-  if(alignment & TOP) {
-    pos.y = outer_border_y;
-  } else if(alignment & BOTTOM) {
-    pos.y = config->screen_height - dialog_height - outer_border_y;
-  } else {
-    pos.y = (config->screen_height - dialog_height) / 2;
-  }
-
-  text_rect.bottom = text_rect.top + text_rect.get_height();
-  text_rect.top = pos.y + text_border_y;
-
-  Size dialog_size(dialog_width, dialog_height);
-
-
-  delete text_area;
-  text_area = new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::ttfdialog->get_height()),
-                                Size(text_width, 200)), true);
-  text_area->set_font(Fonts::ttfdialog);
-  text_area->set_text(text);
+void
+DialogManager::add_caption(int alignment_, const std::string& text_)
+{
+  progress  = 0;
+  delay     = 0.0;
+  alignment = alignment_;
+  text      = text_;
+  caption = true;
   
-  GameSession::current()->pda.add_dialog(text);
+  create_text();
 }
 
 void
 DialogManager::draw()
 {
-  static const int outer_border_x = 20;
-  static const int outer_border_y = 20;
-  static const int portrait_border_x = 10;
-  static const int portrait_border_y = 10;
-  static const int dialog_width = 600;
-  static const int portrait_height = 192;
-  static const int text_border_y = 10;
-
   int dialog_height = std::max(portrait_height + portrait_border_y*2,
                                int(text_area->get_rect().get_height()
                                    + text_border_y * 2.0f));
@@ -135,19 +91,21 @@
     pos.y = (config->screen_height - dialog_height) / 2;
   }
 
-  Rectf rect(pos.x,
-             pos.y,
-             pos.x + dialog_width,
-             pos.y + 200);
-
-  Display::fill_rounded_rect(rect, 16.0f,
-                             Color(0, 0, 0.3f, 0.5f));
-  Display::draw_rounded_rect(rect, 16.0f,
-                             Color(0.6f, 1.0f, 1.0f, 0.8f));
-
-  portrait.draw(Vector(pos.x + portrait_border_x,
-                       pos.y + portrait_border_y));
+  if (!caption) {
+    Rectf rect(pos.x,
+               pos.y,
+               pos.x + dialog_width,
+               pos.y + 200);
+    
+    Display::fill_rounded_rect(rect, 16.0f,
+                               Color(0, 0, 0.3f, 0.5f));
+    Display::draw_rounded_rect(rect, 16.0f,
+                               Color(0.6f, 1.0f, 1.0f, 0.8f));
   
+    portrait.draw(Vector(pos.x + portrait_border_x,
+                         pos.y + portrait_border_y));
+  }
+  
   text_area->draw();
 }
 
@@ -179,4 +137,53 @@
     }
 }
 
+void
+DialogManager::create_text()
+{
+  if (caption)
+    outer_border_y = 0;
+  else
+    outer_border_y = 20;
+    
+  Point pos(0,0);
+  if(alignment & LEFT) {
+    pos.x = outer_border_x;
+  } else if(alignment & RIGHT) {
+    pos.x = config->screen_width - dialog_width - outer_border_x;
+  } else {
+    pos.x = (config->screen_width - dialog_width) / 2;
+  }
+      
+  int text_width
+    = dialog_width - portrait_height - portrait_border_x*2 - text_border_x;
+  Rect text_rect = Rect(Point(pos.x + portrait_width + portrait_border_x*2, 0),
+                        Size(500, 200)); // FIXME: use real bounding box calc
+  
+  text_rect.bottom = text_rect.top + text_rect.get_height();
+  text_rect.top    = pos.y + text_border_y;
+
+  int dialog_height = std::max(portrait_height + portrait_border_y*2,
+                               text_rect.get_height() + text_border_y*2);
+
+  if(alignment & TOP) {
+    pos.y = outer_border_y;
+  } else if(alignment & BOTTOM) {
+    pos.y = config->screen_height - dialog_height - outer_border_y;
+  } else {
+    pos.y = (config->screen_height - dialog_height) / 2;
+  }
+
+  text_rect.bottom = text_rect.top + text_rect.get_height();
+  text_rect.top = pos.y + text_border_y;
+
+  Size dialog_size(dialog_width, dialog_height);
+
+
+  delete text_area;
+  text_area = new TextArea(Rect(Point(text_rect.left, text_rect.top + Fonts::ttfdialog->get_height()),
+                                Size(text_width, 200)), true);
+  text_area->set_font(Fonts::ttfdialog);
+  text_area->set_text(text);
+}
+
 /* EOF */

Modified: trunk/src/dialog_manager.hpp
===================================================================
--- trunk/src/dialog_manager.hpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/dialog_manager.hpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -31,6 +31,8 @@
 class DialogManager
 {
 private:
+  void create_text();
+  
   Sprite portrait;
   std::string text;
   float progress;
@@ -46,6 +48,17 @@
     BOTTOM  = 0x20
   };
   int alignment;
+  bool caption;
+  
+  static const int dialog_width = 600;
+  static const int portrait_border_x = 10;
+  static const int portrait_border_y = 10;
+  static const int text_border_x = 10;
+  static const int text_border_y = 10;
+  static const int portrait_width = 180;
+  static const int portrait_height = 192;
+  static const int outer_border_x = 20;
+  int outer_border_y;
 
   static DialogManager* current_;
 public:
@@ -58,6 +71,7 @@
   void update(float delta);
 
   void add_dialog(int alignment, const std::string& portrait, const std::string& text);
+  void add_caption(int alignment, const std::string& text);
 };
 
 #endif

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/game_session.cpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -168,7 +168,7 @@
     {
       game_time += delta;
       script_manager->update();
-
+      
       view->update(delta);
   
       switch (fade_state)
@@ -218,18 +218,18 @@
     delete sector;
 
   sector = new Sector(filename);
+  fade_state = FADEIN;
+  fadeout_value = 0;
+  control_state = GAME;
+  target_state = RUN_GAME;
+  GameObject::set_world(sector);
   
+  //FIXME: does the TestObject class still need to exist?
   //sector->add(new TestObject());
   
+  sector->spawn_player("default");
   sector->activate();
-  sector->spawn_player("default");
   
-  GameObject::set_world(sector);
-  
-  fade_state = FADEIN;
-  fadeout_value = 0;
-  control_state = GAME;
-  target_state = RUN_GAME;
   if (debug) std::cout << "Finished changing sector" << std::endl;
 }
 

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/scripting/interface.cpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -9,6 +9,8 @@
 #include "sector.hpp"
 #include "fonts.hpp"
 #include "serialize.hpp"
+#include "camera.hpp"
+#include "controller_help_window.hpp"
 
 namespace Scripting
 {
@@ -33,6 +35,32 @@
   sound_manager->play(soundfile);
 }
 
+void add_caption(int alignment, const std::string& text)
+{
+  DialogManager::current()->add_caption(alignment, text);
+  GameSession::current()->set_dialog_state();
+}
+
+void end_caption()
+{
+  GameSession::current()->set_game_state();
+}
+
+void set_view(float x, float y)
+{
+  Camera::current()->set_pos(x, y);
+}
+
+void set_camera_active(bool active)
+{
+  Camera::current()->set_active(active);
+}
+
+void set_controller_help_active(bool active)
+{
+  ControllerHelpWindow::current()->set_active(active);
+}
+
 void wait(HSQUIRRELVM vm, float time)
 {
   script_manager->set_wakeup_event(vm, ScriptManager::TIME, time);

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/scripting/interface.hpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -17,6 +17,13 @@
 
 void play_sound(const std::string& soundfile);
 
+void add_caption(int alignment, const std::string& text);
+void end_caption();
+
+void set_view(float x, float y);
+void set_camera_active(bool active);
+void set_controller_help_active(bool active);
+
 // dialog alignment constants
 static const int VCENTER = 0x00;
 static const int LEFT    = 0x01;

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/scripting/wrapper.cpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>
@@ -326,6 +326,59 @@
   return 0;
 }
 
+static int add_caption_wrapper(HSQUIRRELVM v)
+{
+  int arg0;
+  sq_getinteger(v, 2, &arg0);
+  const char* arg1;
+  sq_getstring(v, 3, &arg1);
+  
+  Scripting::add_caption(arg0, arg1);
+  
+  return 0;
+}
+
+static int end_caption_wrapper(HSQUIRRELVM v)
+{
+  (void) v;
+  
+  Scripting::end_caption();
+  
+  return 0;
+}
+
+static int set_view_wrapper(HSQUIRRELVM v)
+{
+  float arg0;
+  sq_getfloat(v, 2, &arg0);
+  float arg1;
+  sq_getfloat(v, 3, &arg1);
+  
+  Scripting::set_view(arg0, arg1);
+  
+  return 0;
+}
+
+static int set_camera_active_wrapper(HSQUIRRELVM v)
+{
+  SQBool arg0;
+  sq_getbool(v, 2, &arg0);
+  
+  Scripting::set_camera_active(arg0);
+  
+  return 0;
+}
+
+static int set_controller_help_active_wrapper(HSQUIRRELVM v)
+{
+  SQBool arg0;
+  sq_getbool(v, 2, &arg0);
+  
+  Scripting::set_controller_help_active(arg0);
+  
+  return 0;
+}
+
 static int dialog_show_wrapper(HSQUIRRELVM v)
 {
   int arg0;
@@ -605,6 +658,46 @@
     throw SquirrelError(v, msg.str());
   }
 
+  sq_pushstring(v, "add_caption", -1);
+  sq_newclosure(v, &add_caption_wrapper, 0);
+  if(sq_createslot(v, -3) < 0) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'add_caption'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "end_caption", -1);
+  sq_newclosure(v, &end_caption_wrapper, 0);
+  if(sq_createslot(v, -3) < 0) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'end_caption'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "set_view", -1);
+  sq_newclosure(v, &set_view_wrapper, 0);
+  if(sq_createslot(v, -3) < 0) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'set_view'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "set_camera_active", -1);
+  sq_newclosure(v, &set_camera_active_wrapper, 0);
+  if(sq_createslot(v, -3) < 0) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'set_camera_active'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "set_controller_help_active", -1);
+  sq_newclosure(v, &set_controller_help_active_wrapper, 0);
+  if(sq_createslot(v, -3) < 0) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'set_controller_help_active'";
+    throw SquirrelError(v, msg.str());
+  }
+
   sq_pushstring(v, "dialog_show", -1);
   sq_newclosure(v, &dialog_show_wrapper, 0);
   if(sq_createslot(v, -3) < 0) {

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-06 18:04:58 UTC (rev 929)
+++ trunk/src/scripting/wrapper.hpp	2005-08-06 18:54:25 UTC (rev 930)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__



From jamesgregory at berlios.de  Sat Aug  6 20:57:51 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 20:57:51 +0200
Subject: [Windstille-commit] r931 - in trunk/data: . images levels
Message-ID: <200508061857.j76Ivp5i008080@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 20:57:49 +0200 (Sat, 06 Aug 2005)
New Revision: 931

Added:
   trunk/data/images/planet.jpg
   trunk/data/images/planet.sprite
   trunk/data/levels/intro.nut
   trunk/data/levels/intro.wst
Removed:
   trunk/data/windstille.xml
Modified:
   trunk/data/levels/newformat2.nut
Log:
- made showing controller help optional
- removed windstille.xml
- added an example level that plays with the idea of a cutscene

Added: trunk/data/images/planet.jpg
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/planet.jpg
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/planet.sprite
===================================================================
--- trunk/data/images/planet.sprite	2005-08-06 18:54:25 UTC (rev 930)
+++ trunk/data/images/planet.sprite	2005-08-06 18:57:49 UTC (rev 931)
@@ -0,0 +1,6 @@
+(sprite
+  (action
+    (name "default")
+    (images "planet.jpg")
+  )
+)


Property changes on: trunk/data/images/planet.sprite
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/intro.nut
===================================================================
--- trunk/data/levels/intro.nut	2005-08-06 18:54:25 UTC (rev 930)
+++ trunk/data/levels/intro.nut	2005-08-06 18:57:49 UTC (rev 931)
@@ -0,0 +1,17 @@
+set_camera_active(false);
+player.set_active(false);
+set_view(0, 0);
+spawn_object("scriptable-object", {name="planet", pos=[0,0], sprite="images/planet.sprite", z_pos=1001});
+wait(3);
+add_caption(BOTTOM, "The Big Boom. Humanity found out it could travel to the stars, and it did, en masse.");
+wait(10);
+add_caption(BOTTOM, "But it didn't take long for it to turn into The Big Bust. The guilds, the governments and the corporations staked out the best worlds.");
+wait(10);
+add_caption(BOTTOM, "Still, many individuals took their chances, even without military hardware and terraformers. Most worlds were so barren or so dangerous that whole colonies died out. In the Free Colonies that survive, life isn't easy.");
+wait(15);
+end_caption();
+player.set_active(true);
+set_camera_active(true);
+planet.remove();
+
+/* EOF */


Property changes on: trunk/data/levels/intro.nut
___________________________________________________________________
Name: svn:eol-style
   + native

Added: trunk/data/levels/intro.wst
===================================================================
--- trunk/data/levels/intro.wst	2005-08-06 18:54:25 UTC (rev 930)
+++ trunk/data/levels/intro.wst	2005-08-06 18:57:49 UTC (rev 931)
@@ -0,0 +1,82 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (name   "")
+  (music  "silence_wip.ogg")
+  (ambient-color .666 .666 .666)
+  (init-script "levels/intro.nut")
+  (spawnpoint
+    (name "default")
+    (pos 300 650)
+  )
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1861 1862 1767 1768 1865 1866 1765 1766 1861 1862 1769 1863 1864 1864 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1865 1866 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 
+      1877 1878 1783 1784 1881 1882 1781 1782 1877 1878 1785 1879 1880 1880 1773 1773 1773 1773 1773 1773 1879 1880 1785 1786 1881 1882 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 
+      1893 1894 1799 1800 1897 1898 1797 1798 1893 1894 1801 1895 1896 1896 1773 1774 1773 1773 1773 1773 1895 1896 1801 1802 1897 1898 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 
+      1909 1910 1815 1816 1913 1914 1813 1814 1909 1910 1817 1911 1912 1912 1771 1773 1773 1771 1773 1773 1911 1912 1817 1818 1913 1914 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 
+      1925 1926 1831 1832 1929 1930 1829 1830 1925 1926 1833 1927 1928 1928 1771 1773 1773 1771 1822 1773 1927 1928 1833 1834 1929 1930 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 
+      1941 1942 1847 1848 1945 1946 1845 1846 1941 1942 1849 1943 1944 1944 1771 1773 1773 1771 1773 1773 1943 1944 1849 1850 1945 1946 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+      1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1927 1928 1833 1834 1829 1830 1831 1832 1833 1834 1829 1830 1929 1930 
+      1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1943 1944 1849 1850 1845 1846 1847 1848 1849 1850 1845 1846 1945 1946 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1863 1864 1769 1770 1765 1766 1767 1768 1769 1770 1765 1766 1865 1866 
+      1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1879 1880 1785 1786 1781 1782 1783 1784 1785 1786 1781 1782 1881 1882 
+      1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
+      1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+   )
+ )
+
+;; EOF ;;


Property changes on: trunk/data/levels/intro.wst
___________________________________________________________________
Name: svn:eol-style
   + native

Modified: trunk/data/levels/newformat2.nut
===================================================================
--- trunk/data/levels/newformat2.nut	2005-08-06 18:54:25 UTC (rev 930)
+++ trunk/data/levels/newformat2.nut	2005-08-06 18:57:49 UTC (rev 931)
@@ -1,3 +1,4 @@
+set_controller_help_active(true);
 player_flames2.set_active(false);
 player_flames.set_active(false);      
 

Deleted: trunk/data/windstille.xml
===================================================================
--- trunk/data/windstille.xml	2005-08-06 18:54:25 UTC (rev 930)
+++ trunk/data/windstille.xml	2005-08-06 18:57:49 UTC (rev 931)
@@ -1,174 +0,0 @@
-<resources>
-  <section name="particles">
-    <surface name="smoke" file="images/particles/smoke.png" />
-    <surface name="smoke2" file="images/particles/smoke2.png" />
-  </section>
-
-  <sprite name="controldialog">
-    <image file="images/controldialog.png" />
-  </sprite>
-
-  <sprite name="font_glyphs">
-    <image name="image1" file="images/verdana32_blue.png"><alpha /></image>
-  </sprite>
-
-  <sprite name="font_glyphsh">
-    <image name="image1" file="images/verdana32_blueh.png"><alpha /></image>
-  </sprite>
-
-  <font name="font">
-    <bitmap glyphs="font_glyphs" letters="!&quot;#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~" />
-  </font>
-
-  <font name="font_h">
-    <bitmap glyphs="font_glyphsh" letters="!&quot;#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~" />
-  </font>
-
-  <sprite name="menu_glyphs">
-    <image file="images/verdana48_blue.png"><alpha /></image>
-  </sprite>
-
-  <sprite name="menu_glyphsh">
-    <image file="images/verdana48_blueh.png"><alpha /></image>
-  </sprite>
-
-  <font name="menu">
-    <bitmap glyphs="menu_glyphs" letters="!&quot;#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~" />
-  </font>
-
-  <font name="menu_h">
-    <bitmap glyphs="menu_glyphsh" letters="!&quot;#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~" />
-  </font>
-
-  <section name="brush">
-    <sprite name="light">
-      <image file="images/light.png" />
-      <translation origin="bottom_center" />
-    </sprite>
-    <sprite name="exit">
-      <image file="images/exit.png" />
-    </sprite>
-  </section>
-
-  <sprite name="copyright_glyphs">
-    <image file="images/verdana11_blue.png"><alpha /></image>
-  </sprite>
-
-  <font name="copyright">
-    <bitmap glyphs="copyright_glyphs" letters="!&quot;#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~" />
-  </font>
-
-  <surface name="black" file="images/black.png" />
-
-  <section name="lights">
-    <sprite name="light1">
-      <image file="images/light1.png" name="image1" />
-    </sprite>
-    <sprite name="light2">
-      <image file="images/light2.png" name="image1" />
-    </sprite>
-    <sprite name="light3">
-      <image file="images/light3.png" name="image1" />
-    </sprite>
-  </section>
-
-  <sprite name="energy_bar">
-    <image file="images/energy_bar.png" name="image1" />
-  </sprite>
-
-  <sprite name="hedgehog_light">
-    <image file="images/hedgehog_light.png" />
-    <translation origin="center" x="0" y="0"/>
-    <scale x="4.0" y="4.0"/>
-  </sprite>
-
-  <sprite name="hedgehog_highlight">
-    <image file="images/hedgehog_highlight.png" />
-    <translation origin="center" x="0" y="0"/>
-    <scale x="2.0" y="2.0"/>
-  </sprite>
-
-
-  <sprite name="hedgehog_die">
-    <animation speed="70" loop="no" />
-    <translation origin="bottom_center" />
-
-    <image file="images/hedgehog_die1.png" />
-    <image file="images/hedgehog_die2.png" />
-    <image file="images/hedgehog_die3.png" />
-    <image file="images/hedgehog_die4.png" />
-    <image file="images/hedgehog_die5.png" />
-  </sprite>
-
-  <sprite name="hedgehog">
-    <animation speed="100" />
-    <image file="images/hedgehog.png" name="image1" />
-    <image file="images/hedgehog1.png" name="image2" />
-    <translation origin="bottom_center" />
-  </sprite>
-  
-  <sprite name="light">
-      <image file="images/hedgehog_light.png" />
-      <translation origin="center" x="0" y="-8"/>
-      <scale x="5.0" y="5.0"/>
-  </sprite>
-
-  <sprite name="watersplash">
-    <image file="images/watersplash.png" name="image1" />
-    <translation origin="bottom_center" />
-  </sprite>
-
-  <sprite name="portrait">
-    <translation origin="top_left" x="0" y="0" />
-    <image file="images/human_portrait.png" /> 
-  </sprite>
-
-  <sprite name="bombhighlight">
-    <image file="images/bombhighlight.png" />
-    <translation origin="center" x="0" y="-8"/>
-  </sprite>
-
-  <sprite name="bomblight">
-    <image file="images/bomblight.png" />
-    <translation origin="center" x="0" y="-8"/>
-  </sprite>
-
-  <sprite name="bomb">
-    <animation speed="200" />
-    <translation origin="bottom_center" />
-    <image file="images/bomb.png" name="image1" />
-    <image file="images/bomb1.png" name="image2" />
-  </sprite>
-
-  <sprite name="explolight">
-    <image file="images/explolight.png" />
-    <translation origin="center"/>
-  </sprite>
-
-  <sprite name="explo">
-    <animation speed="60" loop="no" />
-    <translation origin="bottom_center" />
-    <image file="images/explosion.png" name="image1">
-      <grid array="6,1" size="64,98" />
-    </image>
-  </sprite>
-
-  <sprite name="logo_large">
-    <image file="images/logo_large.png" />
-  </sprite>
-
-  <sprite name="menu_background">
-    <image file="images/menu_background.jpg" />
-  </sprite>
-
-  <sprite name="logo">
-    <image file="images/logo.png" name="image1" />
-  </sprite>
-  <sprite name="logo_black">
-    <image file="images/logo_black.png" name="image1" />
-  </sprite>
-
-  <surface name="nightvision"  file="images/nightvision.png" />
-  <surface name="noise"  file="images/noise.png" />
-
-</resources>



From grumbel at berlios.de  Sat Aug  6 22:30:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 22:30:53 +0200
Subject: [Windstille-commit] r932 - trunk/src/input
Message-ID: <200508062030.j76KUroJ011580@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 22:30:51 +0200 (Sat, 06 Aug 2005)
New Revision: 932

Modified:
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
Log:
- added input config support for keyboard and joystick, currently in code only

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-06 18:57:49 UTC (rev 931)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-06 20:30:51 UTC (rev 932)
@@ -24,6 +24,7 @@
 */
 
 #include <iostream>
+#include <vector>
 #include "controller_def.hpp"
 #include "input_manager_sdl.hpp"
 
@@ -31,7 +32,45 @@
 
 #define DEAD_ZONE 4096
 
+struct JoystickButtonBinding
+{
+  int event;
+  int device;
+  int button;
+};
+
+struct JoystickAxisBinding
+{
+  int event;
+  int device;
+  int axis;
+};
+
+struct KeyboardButtonBinding
+{
+  int event;
+  SDLKey key;
+};
+
+struct KeyboardAxisBinding
+{
+  int event;
+  SDLKey plus;
+  SDLKey minus;
+};
+
+class InputManagerSDLImpl
+{
+public:
+  std::vector<JoystickButtonBinding> joystick_button_bindings;
+  std::vector<JoystickAxisBinding>   joystick_axis_bindings;
+
+  std::vector<KeyboardButtonBinding> keyboard_button_bindings;
+  std::vector<KeyboardAxisBinding>   keyboard_axis_bindings;
+};
+
 InputManagerSDL::InputManagerSDL()
+  : impl(new InputManagerSDLImpl)
 {
   current_ = this;
   
@@ -39,6 +78,40 @@
 
   if (num_joysticks > 0)
     /*SDL_Joystick* joy =*/ SDL_JoystickOpen(0);
+
+  //SDLK_LAST
+
+  bind_joystick_button(PDA_BUTTON,       0, 0);
+  bind_joystick_button(TERTIARY_BUTTON,  0, 1);
+  bind_joystick_button(SECONDARY_BUTTON, 0, 2);
+  bind_joystick_button(PRIMARY_BUTTON,   0, 3);
+  bind_joystick_button(AIM_BUTTON,       0, 7);
+  bind_joystick_button(PAUSE_BUTTON,     0, 9);
+
+  bind_joystick_axis(X_AXIS, 0, 0);
+  bind_joystick_axis(Y_AXIS, 0, 1);
+
+  if (1)
+    {
+      bind_keyboard_button(PDA_BUTTON,       SDLK_w);
+      bind_keyboard_button(TERTIARY_BUTTON,  SDLK_a);
+      bind_keyboard_button(SECONDARY_BUTTON, SDLK_d);
+      bind_keyboard_button(PRIMARY_BUTTON,   SDLK_s);
+      bind_keyboard_button(AIM_BUTTON,       SDLK_LSHIFT);
+      bind_keyboard_button(PAUSE_BUTTON,     SDLK_p);
+    }
+  else
+    {
+      bind_keyboard_button(PDA_BUTTON,       SDLK_COMMA);
+      bind_keyboard_button(TERTIARY_BUTTON,  SDLK_a);
+      bind_keyboard_button(SECONDARY_BUTTON, SDLK_e);
+      bind_keyboard_button(PRIMARY_BUTTON,   SDLK_o);
+      bind_keyboard_button(AIM_BUTTON,       SDLK_LSHIFT);
+      bind_keyboard_button(PAUSE_BUTTON,     SDLK_p);
+    }
+
+  bind_keyboard_axis(X_AXIS, SDLK_LEFT, SDLK_RIGHT);
+  bind_keyboard_axis(Y_AXIS, SDLK_UP, SDLK_DOWN);
 }
 
 InputManagerSDL::~InputManagerSDL()
@@ -46,10 +119,85 @@
 }
 
 void
-InputManagerSDL::on_event(const SDL_Event& event)
+InputManagerSDL::on_key_event(const SDL_KeyboardEvent& event)
 {
+  for (std::vector<KeyboardButtonBinding>::const_iterator i = impl->keyboard_button_bindings.begin();
+       i != impl->keyboard_button_bindings.end();
+       ++i)
+    {
+      if (event.keysym.sym == i->key)
+        {
+          add_button_event(i->event, event.state);
+        }
+    }
+
   Uint8* keystate = SDL_GetKeyState(0);
 
+  for (std::vector<KeyboardAxisBinding>::const_iterator i = impl->keyboard_axis_bindings.begin();
+       i != impl->keyboard_axis_bindings.end();
+       ++i)
+    {
+      if (event.keysym.sym == i->minus)
+        {
+          if (event.state)
+            add_axis_event(i->event, -1.0f);
+          else if (!keystate[i->plus])
+            add_axis_event(i->event, 0.0f);
+        }
+      else if (event.keysym.sym == i->plus)
+        {
+          if (event.state)
+            add_axis_event(i->event, 1.0f);
+          else if (!keystate[i->minus])
+            add_axis_event(i->event, 0.0f);
+        }
+    }
+}
+
+void
+InputManagerSDL::on_joy_button_event(const SDL_JoyButtonEvent& button)
+{
+  for (std::vector<JoystickButtonBinding>::const_iterator i = impl->joystick_button_bindings.begin();
+       i != impl->joystick_button_bindings.end();
+       ++i)
+    {
+      if (button.which  == i->device &&
+          button.button == i->button)
+        {
+          add_button_event(i->event, button.state);
+        }
+    }
+}
+
+void
+InputManagerSDL::on_joy_axis_event(const SDL_JoyAxisEvent& event)
+{
+  for (std::vector<JoystickAxisBinding>::const_iterator i = impl->joystick_axis_bindings.begin();
+       i != impl->joystick_axis_bindings.end();
+       ++i)
+    {
+      if (event.which  == i->device &&
+          event.axis   == i->axis)
+        {
+          if (event.value < -DEAD_ZONE)
+            {
+              add_axis_event(i->event, event.value/32768.0f);
+            }
+          else if (event.value > DEAD_ZONE)
+            {
+              add_axis_event(i->event, event.value/32767.0f);
+            }
+          else
+            {
+              add_axis_event(i->event, 0);
+            }
+        }
+    }
+}
+
+void
+InputManagerSDL::on_event(const SDL_Event& event)
+{
   switch(event.type)
     {        
     case SDL_KEYUP:
@@ -67,67 +215,8 @@
                 add_keyboard_event(0, KeyboardEvent::SPECIAL, event.key.keysym.sym);
               }
           }
-
-
-        switch (event.key.keysym.sym)
-          {
-          case SDLK_LEFT:
-            if (event.key.state)
-              add_axis_event(X_AXIS, -1.0);
-            else if (!keystate[SDLK_RIGHT])
-              add_axis_event(X_AXIS, 0);
-            break;
-
-          case SDLK_RIGHT:
-            if (event.key.state)
-              add_axis_event(X_AXIS, 1.0);
-            else if (!keystate[SDLK_LEFT])
-              add_axis_event(X_AXIS, 0);
-            break;
-
-          case SDLK_UP:
-            if (event.key.state)
-              add_axis_event(Y_AXIS, -1.0);
-            else
-              add_axis_event(Y_AXIS, 0);
-            break;
-
-          case SDLK_DOWN:
-            if (event.key.state)
-              add_axis_event(Y_AXIS, 1.0);
-            else
-              add_axis_event(Y_AXIS, 0);
-            break;
-
-          case SDLK_a:
-            add_button_event(TERTIARY_BUTTON, event.key.state);
-            break;
-
-          case SDLK_s:
-            add_button_event(PRIMARY_BUTTON, event.key.state);
-            break;
-
-          case SDLK_d:
-            add_button_event(SECONDARY_BUTTON, event.key.state);
-            break;
-
-          case SDLK_w:
-            add_button_event(PDA_BUTTON, event.key.state);
-            break;
-
-          case SDLK_LSHIFT:
-            add_button_event(AIM_BUTTON, event.key.state);
-            break;
-
-          case SDLK_PAUSE:
-          case SDLK_p:
-            add_button_event(PAUSE_BUTTON, event.key.state);
-            break;
-           
-          default:
-            break;
-          }
       }
+      on_key_event(event.key);
       break;
 
     case SDL_MOUSEMOTION:
@@ -142,36 +231,7 @@
       break;
 
     case SDL_JOYAXISMOTION:
-      if (event.jaxis.axis == 0) 
-        {
-          if (event.jaxis.value < -DEAD_ZONE)
-            {
-              add_axis_event(X_AXIS, event.jaxis.value/32768.0f);
-            }
-          else if (event.jaxis.value > DEAD_ZONE)
-            {
-              add_axis_event(X_AXIS, event.jaxis.value/32767.0f);
-            }
-          else
-            {
-              add_axis_event(X_AXIS, 0);
-            }
-        }
-      else if (event.jaxis.axis == 1) 
-        {
-          if (event.jaxis.value < -DEAD_ZONE)
-            {
-              add_axis_event(Y_AXIS, event.jaxis.value/32768.0f);
-            }
-          else if (event.jaxis.value > DEAD_ZONE)
-            {
-              add_axis_event(Y_AXIS, event.jaxis.value/32767.0f);
-            }
-          else
-            {
-              add_axis_event(Y_AXIS, 0);
-            }
-        }
+      on_joy_axis_event(event.jaxis);
       break;
 
     case SDL_JOYBALLMOTION:
@@ -184,30 +244,7 @@
           
     case SDL_JOYBUTTONUP:
     case SDL_JOYBUTTONDOWN:
-      if (event.jbutton.button == 0)
-        {
-          add_button_event(PDA_BUTTON, event.jbutton.state); 
-        }
-      else if (event.jbutton.button == 1)
-        {
-          add_button_event(TERTIARY_BUTTON, event.jbutton.state); 
-        }
-      else if (event.jbutton.button == 2)
-        {
-          add_button_event(SECONDARY_BUTTON, event.jbutton.state);
-        }
-      else if (event.jbutton.button == 3)
-        {
-          add_button_event(PRIMARY_BUTTON, event.jbutton.state);
-        }
-      else if (event.jbutton.button == 7)
-        {
-          add_button_event(AIM_BUTTON, event.jbutton.state);
-        }
-      else if (event.jbutton.button == 9)
-        {
-          add_button_event(PAUSE_BUTTON, event.jbutton.state);
-        }
+      on_joy_button_event(event.jbutton);
       break;
 
     default:
@@ -219,7 +256,58 @@
 void
 InputManagerSDL::update(float delta)
 {
+}
+
+void
+InputManagerSDL::bind_joystick_hat_axis(int event, int device, int axis)
+{
+}
+
+void
+InputManagerSDL::bind_joystick_axis(int event, int device, int axis)
+{
+  JoystickAxisBinding binding;
+
+  binding.event  = event;
+  binding.device = device;
+  binding.axis   = axis;
+
+  impl->joystick_axis_bindings.push_back(binding);
+}
+
+void
+InputManagerSDL::bind_joystick_button(int event, int device, int button)
+{
+  JoystickButtonBinding binding;
+
+  binding.event  = event;
+  binding.device = device;
+  binding.button = button;
+
+  impl->joystick_button_bindings.push_back(binding);
+}
+
+void
+InputManagerSDL::bind_keyboard_button(int event, SDLKey key)
+{
+  KeyboardButtonBinding binding;
   
+  binding.event = event;
+  binding.key   = key;
+
+  impl->keyboard_button_bindings.push_back(binding);
 }
 
+void
+InputManagerSDL::bind_keyboard_axis(int event, SDLKey minus, SDLKey plus)
+{
+  KeyboardAxisBinding binding;
+  
+  binding.event = event;
+  binding.minus = minus;
+  binding.plus  = plus;
+
+  impl->keyboard_axis_bindings.push_back(binding);
+}
+
 /* EOF */

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-06 18:57:49 UTC (rev 931)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-06 20:30:51 UTC (rev 932)
@@ -30,6 +30,8 @@
 
 #include <SDL.h>
 
+class InputManagerSDLImpl;
+
 /** */
 class InputManagerSDL : public InputManagerImpl
 {
@@ -42,9 +44,23 @@
   virtual ~InputManagerSDL();
 
   void update(float delta);
+
+  void bind_joystick_hat_axis(int event, int device, int axis);
+
+  void bind_joystick_axis(int event, int device, int axis);
+  void bind_joystick_button(int event, int device, int button);
+
+  void bind_keyboard_button(int event, SDLKey key);
+  void bind_keyboard_axis(int event, SDLKey minus, SDLKey plus);
   
   void on_event(const SDL_Event& event);
 private:
+  void on_key_event(const SDL_KeyboardEvent& key);
+  void on_joy_button_event(const SDL_JoyButtonEvent& button);
+  void on_joy_axis_event(const SDL_JoyAxisEvent& button);
+  
+  std::auto_ptr<InputManagerSDLImpl> impl;
+
   InputManagerSDL (const InputManagerSDL&);
   InputManagerSDL& operator= (const InputManagerSDL&);
 };



From jamesgregory at berlios.de  Sat Aug  6 22:38:49 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 22:38:49 +0200
Subject: [Windstille-commit] r933 - trunk/src
Message-ID: <200508062038.j76Kcnnu011834@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 22:38:47 +0200 (Sat, 06 Aug 2005)
New Revision: 933

Modified:
   trunk/src/player.cpp
   trunk/src/player.hpp
   trunk/src/view.cpp
Log:
- integrated jump up movement to player
- collision boxes only drawn if collision_debug is enabled

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-06 20:30:51 UTC (rev 932)
+++ trunk/src/player.cpp	2005-08-06 20:38:47 UTC (rev 933)
@@ -144,6 +144,15 @@
     case JUMP_LAND:
       update_jump_land();
       break;
+    case JUMP_UP_BEGIN:
+      update_jump_up_begin();
+      break;
+    case JUMP_UP_AIR:
+      update_jump_up_air();
+      break;
+    case JUMP_UP_LAND:
+      update_jump_up_land();
+      break;
     default:
       assert(false);
       break;
@@ -211,7 +220,13 @@
       Entity* obj = find_useable_entity();
       if (obj)
         obj->use();
+      return;
     }
+    
+  if(controller.get_button_state(JUMP_BUTTON)) {
+    set_jump_up_begin();
+    return;
+  }
 
   if (controller.get_axis_state(X_AXIS) < 0) {
     if(get_direction() == WEST)
@@ -462,6 +477,55 @@
   }
 }
 
+void
+Player::set_jump_up_begin()
+{
+  sprite.set_next_action("JumpUp");
+  state = JUMP_UP_BEGIN;
+}
+
+void
+Player::update_jump_up_begin()
+{
+  if(sprite.switched_actions()) {
+    set_jump_up_air();
+    return;
+  }
+}
+
+void
+Player::set_jump_up_air()
+{
+  velocity.y = -400;
+  sprite.set_next_action("JumpLandSofttoRun");
+  state = JUMP_UP_AIR;
+}
+
+void
+Player::update_jump_up_air()
+{
+  if(sprite.switched_actions()) {
+    set_jump_up_land();
+    return;
+  }
+}
+
+void
+Player::set_jump_up_land()
+{
+  sprite.set_next_action("Stand");
+  state = JUMP_UP_LAND;
+}
+
+void
+Player::update_jump_up_land()
+{
+  if(sprite.switched_actions()) {
+    set_stand();
+    return;
+  }
+}
+
 Direction
 Player::get_direction() const
 {

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-06 20:30:51 UTC (rev 932)
+++ trunk/src/player.hpp	2005-08-06 20:38:47 UTC (rev 933)
@@ -63,7 +63,10 @@
     LISTEN,
     JUMP_BEGIN,
     JUMP_AIR,
-    JUMP_LAND
+    JUMP_LAND,
+    JUMP_UP_BEGIN,
+    JUMP_UP_AIR,
+    JUMP_UP_LAND
   };
 
 private:
@@ -119,12 +122,20 @@
   void update_listen();
   void set_run();
   void update_run();
+  
   void set_jump_begin();
   void update_jump_begin();
   void set_jump_air();
   void update_jump_air();
   void set_jump_land();
   void update_jump_land();
+  
+  void set_jump_up_begin();
+  void update_jump_up_begin();
+  void set_jump_up_air();
+  void update_jump_up_air();
+  void set_jump_up_land();
+  void update_jump_up_land();
 
   /**
    * Sets an action for the sprite. In contrast to sprite->set_action this

Modified: trunk/src/view.cpp
===================================================================
--- trunk/src/view.cpp	2005-08-06 20:30:51 UTC (rev 932)
+++ trunk/src/view.cpp	2005-08-06 20:38:47 UTC (rev 933)
@@ -42,7 +42,7 @@
 
   state.push(sc);
   Sector::current()->draw(sc);
-  if (debug)
+  if (collision_debug)
     Sector::current()->get_collision_engine()->draw(sc.highlight());
   state.pop(sc);
 }



From grumbel at berlios.de  Sat Aug  6 22:50:31 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 6 Aug 2005 22:50:31 +0200
Subject: [Windstille-commit] r934 - trunk/src/input
Message-ID: <200508062050.j76KoViT012341@sheep.berlios.de>

Author: grumbel
Date: 2005-08-06 22:50:29 +0200 (Sat, 06 Aug 2005)
New Revision: 934

Removed:
   trunk/src/input/axis_button.cpp
   trunk/src/input/axis_button.hpp
   trunk/src/input/axis_factory.cpp
   trunk/src/input/axis_factory.hpp
   trunk/src/input/button_axis.cpp
   trunk/src/input/button_axis.hpp
   trunk/src/input/button_factory.cpp
   trunk/src/input/button_factory.hpp
   trunk/src/input/input_axis.hpp
   trunk/src/input/input_axis_input_device.cpp
   trunk/src/input/input_axis_input_device.hpp
   trunk/src/input/input_button.hpp
   trunk/src/input/input_button_input_device.cpp
   trunk/src/input/input_button_input_device.hpp
   trunk/src/input/input_keyboard.hpp
   trunk/src/input/input_keyboard_input_device.cpp
   trunk/src/input/input_keyboard_input_device.hpp
   trunk/src/input/multi_button.cpp
   trunk/src/input/multi_button.hpp
Log:
- removed some unused input stuff, not all yet, some of the rest might get recycled

Deleted: trunk/src/input/axis_button.cpp
===================================================================
--- trunk/src/input/axis_button.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/axis_button.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,72 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "input_axis.hpp"
-#include "axis_button.hpp"
-
-AxisButton::AxisButton(InputAxis* axis, bool top)
-  : axis(axis),
-    down(false),
-    top(top)
-{
-  on_axis_move_slot = axis->on_move().connect(this, &AxisButton::on_axis_move);
-}
-
-AxisButton::~AxisButton()
-{
-}
-
-void
-AxisButton::update(float )
-{
-}
-
-void
-AxisButton::on_axis_move(float pos)
-{
-  if (top)
-    {
-      if (down && pos < 0.5f)
-        {
-          down = false;
-          button_up();
-        }
-      else if (!down && pos > 0.5f)
-        {
-          down = true;
-          button_down();
-        }
-    }
-  else
-    {
-      if (down && pos > -0.5f)
-        {
-          down = false;
-          button_up();
-        }
-      else if (!down && pos < -0.5f)
-        {
-          down = true;
-          button_down();
-        }
-    }
-}
-
-/* EOF */

Deleted: trunk/src/input/axis_button.hpp
===================================================================
--- trunk/src/input/axis_button.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/axis_button.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,53 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AXIS_BUTTON_HXX
-#define HEADER_AXIS_BUTTON_HXX
-
-#include "input_button.hpp"
-
-class InputAxis;
-
-/** */
-class AxisButton : public InputButton
-{
-private:
-  CL_Slot on_axis_move_slot;
-  InputAxis* axis;
-  bool down;
-
-  /** true if the range 0..1 should be used to trigger, false if -1..0
-      should be used */
-  bool top;
-public:
-  AxisButton(InputAxis* axis, bool top);
-  ~AxisButton();
-
-  void update(float delta);
-  
-private:
-  void on_axis_move(float pos);
-
-  AxisButton (const AxisButton&);
-  AxisButton& operator= (const AxisButton&);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/axis_factory.cpp
===================================================================
--- trunk/src/input/axis_factory.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/axis_factory.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,78 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-#include <config.h>
-
-#include <ClanLib/Display/joystick.h>
-#include <sstream>
-#include <stdexcept>
-#include "input_axis_input_device.hpp"
-#include "windstille_error.hpp"
-#include "button_factory.hpp"
-#include "button_axis.hpp"
-#include "axis_factory.hpp"
-#include "lisp/lisp.hpp"
-
-InputAxis* 
-AxisFactory::create(const lisp::Lisp* lisp)
-{
-  if(lisp->get_type() != lisp::Lisp::TYPE_LIST)
-    throw std::runtime_error("expected list in axis argument");
-  if(lisp->get_list_size() == 0)
-    throw std::runtime_error("List needs at least 1 argument in axis");
-  const lisp::Lisp* namel = lisp->get_list_elem(0);
-  if(namel->get_type() != lisp::Lisp::TYPE_SYMBOL)
-    throw std::runtime_error("axis needs symbol as first argument");
-
-  std::string name = namel->get_string();
-  if(name == "joystick-axis")
-    return create_joystick_axis(lisp);
-  else if(name == "button-axis")
-    return create_button_axis(lisp);
-  
-  std::ostringstream msg;
-  msg << "Unknown axis type '" << name << "' found";
-  throw std::runtime_error(msg.str());
-}
-
-InputAxis*
-AxisFactory::create_joystick_axis(const lisp::Lisp* lisp)
-{
-  if(lisp->get_list_size() != 3)
-    throw std::runtime_error("joystick-axis needs 2 arguments");
-  int device_num = lisp->get_list_elem(1)->get_int();
-  int axis_num   = lisp->get_list_elem(2)->get_int();
-
-  if (device_num >= 0 && device_num < CL_Joystick::get_device_count())
-    return new InputAxisInputDevice(CL_Joystick::get_device(device_num), axis_num);
-  else
-    throw WindstilleError("Error: AxisFactory::create_joystick_axis: ");
-}
-
-InputAxis*
-AxisFactory::create_button_axis(const lisp::Lisp* lisp)
-{
-  if(lisp->get_list_size() != 3)
-    throw std::runtime_error("button-axis needs 2 arguments");
-  InputButton* left  = ButtonFactory::create(lisp->get_list_elem(1));
-  InputButton* right = ButtonFactory::create(lisp->get_list_elem(2));
-
-  return new ButtonAxis(left, right);
-}
-
-/* EOF */

Deleted: trunk/src/input/axis_factory.hpp
===================================================================
--- trunk/src/input/axis_factory.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/axis_factory.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,38 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_AXIS_FACTORY_HXX
-#define HEADER_AXIS_FACTORY_HXX
-
-#include "lisp/lisp.hpp"
-#include "input_axis.hpp"
-
-/** */
-class AxisFactory
-{
-public:
-  static InputAxis* create(const lisp::Lisp* lisp);
-private:
-  static InputAxis* create_joystick_axis(const lisp::Lisp* lisp);
-  static InputAxis* create_button_axis(const lisp::Lisp* lisp);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/button_axis.cpp
===================================================================
--- trunk/src/input/button_axis.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/button_axis.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,87 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "input_button.hpp"
-#include "button_axis.hpp"
-
-ButtonAxis::ButtonAxis(InputButton* left, InputButton* right)
-  : left(left), right(right)
-{
-  slots.push_back(left->on_key_down().connect(this, &ButtonAxis::on_left_down));
-  slots.push_back(left->on_key_up().connect  (this, &ButtonAxis::on_left_up));
-
-  slots.push_back(right->on_key_down().connect(this, &ButtonAxis::on_right_down));
-  slots.push_back(right->on_key_up().connect  (this, &ButtonAxis::on_right_up));
-
-  left_state  = false;
-  right_state = false;
-  
-  pos = 0.0f;
-}
-
-void
-ButtonAxis::update(float delta)
-{
-  left->update(delta);
-  right->update(delta);
-
-  float new_pos = 0.0f;
-  if (left_state)
-    {
-      new_pos -= 1.0f;
-    }
-  
-  if (right_state)
-    {
-      new_pos += 1.0f;
-    }
-
-  if (new_pos != pos)
-    {
-      pos = new_pos;
-      move(pos);
-    }
-}
-
-void
-ButtonAxis::on_left_up()
-{
-  left_state = false;
-}
-
-void
-ButtonAxis::on_left_down()
-{
-  left_state = true;
-}
-
-void
-ButtonAxis::on_right_up()
-{
-  right_state = false;
-}
-
-void
-ButtonAxis::on_right_down()
-{
-  right_state = true;
-}
-
-/* EOF */

Deleted: trunk/src/input/button_axis.hpp
===================================================================
--- trunk/src/input/button_axis.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/button_axis.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,50 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BUTTON_AXIS_HXX
-#define HEADER_BUTTON_AXIS_HXX
-
-#include "input_axis.hpp"
-
-class InputButton;
-
-class ButtonAxis : public InputAxis
-{
-private:
-  InputButton* left;
-  InputButton* right;
-
-  bool left_state;
-  bool right_state;
-  
-  float pos;
-private:
-  void on_left_up();
-  void on_left_down();
-
-  void on_right_up();
-  void on_right_down();
-public:
-  ButtonAxis(InputButton* left, InputButton* right);
-  void update(float delta);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/button_factory.cpp
===================================================================
--- trunk/src/input/button_factory.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/button_factory.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,114 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/joystick.h>
-#include <ClanLib/Display/keyboard.h>
-#include "windstille_error.hpp"
-#include "input_button.hpp"
-#include "input_axis.hpp"
-#include "input_button_input_device.hpp"
-#include "axis_factory.hpp"
-#include "axis_button.hpp"
-#include "multi_button.hpp"
-#include "button_factory.hpp"
-#include "lisp/lisp.hpp"
-#include "lisp/properties.hpp"
-
-InputButton* 
-ButtonFactory::create(const lisp::Lisp* lisp)
-{
-  if(lisp->get_type() != lisp::Lisp::TYPE_LIST)
-    throw std::runtime_error("expected list in axis argument");
-  if(lisp->get_list_size() == 0)
-    throw std::runtime_error("List needs at least 1 argument in axis");
-  const lisp::Lisp* namel = lisp->get_list_elem(0);
-  if(namel->get_type() != lisp::Lisp::TYPE_SYMBOL)
-    throw std::runtime_error("axis needs symbol as first argument");
- 
-  std::string name = namel->get_symbol();
-
-  if(name == "joystick_button") {
-    return create_joystick_button(lisp);
-  } else if(name == "keyboard-button") {
-    return create_keyboard_button(lisp);
-  } else if(name == "axis-button") {
-    return create_axis_button(lisp);
-  } else if(name == "multi-button") {
-    return create_multi_button(lisp);
-  }
-  
-  std::ostringstream msg;
-  msg << "Unknown button type '" << name << "' found";
-  throw std::runtime_error(msg.str());
-}
-
-InputButton*
-ButtonFactory::create_axis_button(const lisp::Lisp* lisp)
-{
-  if(lisp->get_list_size() != 3)
-    throw std::runtime_error("axis_button needs exactly 2 arguments");
-  
-  InputAxis* axis = AxisFactory::create(lisp->get_list_elem(1));
-  bool top = lisp->get_list_elem(2)->get_bool();
-  
-  return new AxisButton(axis, top);
-}
-
-InputButton*
-ButtonFactory::create_joystick_button(const lisp::Lisp* lisp)
-{
-  if(lisp->get_list_size() != 3)
-    throw std::runtime_error("joystick_button needs exactly 2 arguments");
-
-  int device_num = lisp->get_list_elem(1)->get_int();
-  int button_num = lisp->get_list_elem(2)->get_int();
-  
-  if (device_num >= 0 && device_num < CL_Joystick::get_device_count())
-    return new InputButtonInputDevice(CL_Joystick::get_device(device_num), button_num);
-  else
-    throw WindstilleError("Error: ButtonFactory::create_joystick_button: device out of range");
-}
-
-InputButton*
-ButtonFactory::create_keyboard_button(const lisp::Lisp* lisp)
-{
-  if(lisp->get_list_size() != 2)
-    throw std::runtime_error("keyboard_button needs exactly 1 argument");
-  std::string key_str = lisp->get_list_elem(1)->get_string();
-  int key_num         = CL_Keyboard::get_device().string_to_keyid(key_str);
-
-  // FIXME: No error checking
-  return new InputButtonInputDevice(CL_Keyboard::get_device(), key_num);
-}
-
-InputButton*
-ButtonFactory::create_multi_button(const lisp::Lisp* lisp)
-{
-  MultiButton* button = new MultiButton();
- 
-  lisp::Properties props(lisp);
-  lisp::PropertyIterator<const lisp::Lisp*> iter = props.get_iter();
-  while(iter.next()) {
-    button->add(create(*iter));
-  }
-  
-  return button;
-}
-
-/* EOF */

Deleted: trunk/src/input/button_factory.hpp
===================================================================
--- trunk/src/input/button_factory.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/button_factory.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_BUTTON_FACTORY_HXX
-#define HEADER_BUTTON_FACTORY_HXX
-
-#include "lisp/lisp.hpp"
-
-class InputButton;
-
-/** */
-class ButtonFactory
-{
-private:
-public:
-  static InputButton* create(const lisp::Lisp* lisp);
-
-private:
-  static InputButton* create_joystick_button(const lisp::Lisp* lisp);
-  static InputButton* create_keyboard_button(const lisp::Lisp* lisp);
-  static InputButton* create_axis_button(const lisp::Lisp* lisp);
-  static InputButton* create_multi_button(const lisp::Lisp* lisp);
-
-  ButtonFactory (const ButtonFactory&);
-  ButtonFactory& operator= (const ButtonFactory&);
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/input_axis.hpp
===================================================================
--- trunk/src/input/input_axis.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_axis.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,42 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_AXIS_HXX
-#define HEADER_INPUT_AXIS_HXX
-
-#include <vector>
-#include <ClanLib/Signals/slot.h>
-#include <ClanLib/Signals/signal_v1.h>
-
-class InputAxis
-{
-protected:
-  std::vector<CL_Slot> slots;
-  CL_Signal_v1<float> move;  
-public:
-  InputAxis() {}
-  virtual ~InputAxis() {}
-
-  virtual void update(float ) {}
-  CL_Signal_v1<float>& on_move() { return move; }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/input_axis_input_device.cpp
===================================================================
--- trunk/src/input/input_axis_input_device.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_axis_input_device.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,38 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ClanLib/Display/input_event.h>
-#include "input_axis_input_device.hpp"
-
-InputAxisInputDevice::InputAxisInputDevice(CL_InputDevice& dev, int num)
-  : dev(dev), axis_num(num)
-{
-  slots.push_back(dev.sig_axis_move().connect(this, &InputAxisInputDevice::on_axis_move));
-}
-
-void
-InputAxisInputDevice::on_axis_move(const CL_InputEvent& event)
-{
-  if (event.id == axis_num)
-    {
-      move(event.axis_pos);
-    }
-}
-
-/* EOF */

Deleted: trunk/src/input/input_axis_input_device.hpp
===================================================================
--- trunk/src/input/input_axis_input_device.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_axis_input_device.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,41 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_AXIS_INPUT_DEVICE_HXX
-#define HEADER_INPUT_AXIS_INPUT_DEVICE_HXX
-
-#include <ClanLib/Display/input_device.h>
-#include "input_axis.hpp"
-
-class InputAxisInputDevice : public InputAxis
-{
-private:
-  CL_InputDevice dev;
-  int axis_num;
-
-  void on_axis_move(const CL_InputEvent& event); 
-
-public:
-  InputAxisInputDevice(CL_InputDevice& dev, int num);
-  void update(float ) {}
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/input_button.hpp
===================================================================
--- trunk/src/input/input_button.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_button.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_BOTTON_HXX
-#define HEADER_INPUT_BOTTON_HXX
-
-#include <vector>
-#include <ClanLib/Signals/slot.h>
-#include <ClanLib/Signals/signal_v0.h>
-
-class InputButton
-{
-protected:
-  std::vector<CL_Slot> slots;
-  CL_Signal_v0 button_down;
-  CL_Signal_v0 button_up;
-
-public:
-  InputButton() {}
-  virtual ~InputButton() {}
-  
-  virtual void update(float ) {}
-
-  CL_Signal_v0& on_key_down() { return button_down; }
-  CL_Signal_v0& on_key_up()   { return button_up; }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/input_button_input_device.cpp
===================================================================
--- trunk/src/input/input_button_input_device.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_button_input_device.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,49 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/input_event.h>
-#include "input_button_input_device.hpp"
-
-InputButtonInputDevice::InputButtonInputDevice(CL_InputDevice& dev_, int keycode_)
-  : dev(dev_), keycode(keycode_)
-{
-  slots.push_back(dev.sig_key_down().connect(this, &InputButtonInputDevice::on_key_down));
-  slots.push_back(dev.sig_key_up().connect(this, &InputButtonInputDevice::on_key_up));
-}
-
-void
-InputButtonInputDevice::on_key_down(const CL_InputEvent& event)
-{
-  if (keycode == event.id)
-    {
-      button_down();
-    }
-}
-
-void
-InputButtonInputDevice::on_key_up(const CL_InputEvent& event)
-{
-  if (keycode == event.id)
-    {
-      button_up();
-    }
-}
-
-/* EOF */

Deleted: trunk/src/input/input_button_input_device.hpp
===================================================================
--- trunk/src/input/input_button_input_device.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_button_input_device.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,43 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_BOTTON_INPUT_DEVICE_HXX
-#define HEADER_INPUT_BOTTON_INPUT_DEVICE_HXX
-
-#include <ClanLib/Display/input_device.h>
-#include "input_button.hpp"
-
-class InputButtonInputDevice : public InputButton
-{
-private:
-  CL_InputDevice dev;
-  int keycode;
-
-  void on_key_down(const CL_InputEvent& event);
-  void on_key_up(const CL_InputEvent& event);
-
-public:
-  InputButtonInputDevice(CL_InputDevice& dev, int keycode);
-  
-  void update(float ) {}
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/input_keyboard.hpp
===================================================================
--- trunk/src/input/input_keyboard.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_keyboard.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,43 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_KEYBOARD_HXX
-#define HEADER_INPUT_KEYBOARD_HXX
-
-#include "input_event.hpp"
-
-/** */
-class InputKeyboard
-{
-protected:
-  std::vector<CL_Slot> slots;
-  CL_Signal_v2<KeyboardEvent::KeyType, int> key;
-
-public:
-  InputKeyboard() {}
-  virtual ~InputKeyboard() {}
-  
-  virtual void update(float ) {}
-
-  CL_Signal_v2<KeyboardEvent::KeyType, int>& on_key() { return key; }
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/input_keyboard_input_device.cpp
===================================================================
--- trunk/src/input/input_keyboard_input_device.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_keyboard_input_device.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,46 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <ctype.h>
-#include <ClanLib/Display/input_event.h>
-#include "input_event.hpp"
-#include "input_keyboard_input_device.hpp"
-
-InputKeyboardInputDevice::InputKeyboardInputDevice(CL_InputDevice& dev_)
-  : dev(dev_)
-{
-  slots.push_back(dev.sig_key_down().connect(this, &InputKeyboardInputDevice::on_key_down)); 
-  slots.push_back(dev.sig_key_up().connect(this, &InputKeyboardInputDevice::on_key_up)); 
-}
-
-void
-InputKeyboardInputDevice::on_key_up(const CL_InputEvent& )
-{
-}
-
-void
-InputKeyboardInputDevice::on_key_down(const CL_InputEvent& event)
-{
-  if (!event.str.empty() && (isgraph(event.str[0]) || event.str[0] == ' '))
-    key(KeyboardEvent::LETTER, event.str[0]);
-  else
-    key(KeyboardEvent::SPECIAL, event.id);
-}
-
-/* EOF */

Deleted: trunk/src/input/input_keyboard_input_device.hpp
===================================================================
--- trunk/src/input/input_keyboard_input_device.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/input_keyboard_input_device.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,42 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_KEYBOARD_INPUT_DEVICE_HXX
-#define HEADER_INPUT_KEYBOARD_INPUT_DEVICE_HXX
-
-#include <ClanLib/Display/input_device.h>
-#include "input_keyboard.hpp"
-
-/** */
-class InputKeyboardInputDevice : public InputKeyboard
-{
-private:
-  CL_InputDevice dev;
-
-  void on_key_up(const CL_InputEvent& event);
-  void on_key_down(const CL_InputEvent& event);
-
-public:
-  InputKeyboardInputDevice(CL_InputDevice& dev);
-  void update(float) {}
-};
-
-#endif
-
-/* EOF */

Deleted: trunk/src/input/multi_button.cpp
===================================================================
--- trunk/src/input/multi_button.cpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/multi_button.cpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,65 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include "multi_button.hpp"
-
-MultiButton::MultiButton()
-{
-  press_count = 0;
-}
-
-void
-MultiButton::add(InputButton* button)
-{
-  buttons.push_back(button);
-  slots.push_back(button->on_key_down().connect(this, &MultiButton::pressed));
-  slots.push_back(button->on_key_up().connect(this, &MultiButton::released));
-}
-
-void
-MultiButton::update(float delta)
-{
-  for (Buttons::iterator i = buttons.begin(); i != buttons.end(); ++i)
-    (*i)->update(delta);
-}
-
-void
-MultiButton::released()
-{
-  press_count -= 1;
-
-  if (press_count == 0)
-    button_up();
-
-  // FIXME: Workaround
-  if (press_count < 0)
-    press_count = 0;
-}
-
-void
-MultiButton::pressed()
-{
-  press_count += 1;
-
-  if (press_count == 1)
-    button_down();
-}
-
-/* EOF */

Deleted: trunk/src/input/multi_button.hpp
===================================================================
--- trunk/src/input/multi_button.hpp	2005-08-06 20:38:47 UTC (rev 933)
+++ trunk/src/input/multi_button.hpp	2005-08-06 20:50:29 UTC (rev 934)
@@ -1,46 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_MULTI_BUTTON_HXX
-#define HEADER_MULTI_BUTTON_HXX
-
-#include <vector>
-#include "input_button.hpp"
-
-/** */
-class MultiButton : public InputButton
-{
-private:
-  typedef std::vector<InputButton*> Buttons;
-  Buttons buttons;
-  std::vector<CL_Slot> slots;  
-  int press_count;
-public:
-  MultiButton();
-  
-  void add(InputButton*);
-  void update(float delta);
-private:
-  void released();
-  void pressed();
-};
-
-#endif
-
-/* EOF */



From jamesgregory at berlios.de  Sat Aug  6 23:07:22 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 23:07:22 +0200
Subject: [Windstille-commit] r935 - trunk/src
Message-ID: <200508062107.j76L7McU013402@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 23:07:21 +0200 (Sat, 06 Aug 2005)
New Revision: 935

Modified:
   trunk/src/conversation.cpp
Log:
make conversation use the same large font as the people talking to you

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-06 20:50:29 UTC (rev 934)
+++ trunk/src/conversation.cpp	2005-08-06 21:07:21 UTC (rev 935)
@@ -63,11 +63,11 @@
       for(int i = 0; i < int(choices.size()); ++i)
         {
           if (i == selection)
-            Fonts::ttffont->draw(x, y, choices[i]);
+            Fonts::ttfdialog->draw(x, y, choices[i]);
           else
-            Fonts::ttffont->draw(x, y, choices[i], Color(0.5f, 0.5f, 0.5f));
+            Fonts::ttfdialog->draw(x, y, choices[i], Color(0.5f, 0.5f, 0.5f));
       
-          y += Fonts::ttffont->get_height() + 10;
+          y += Fonts::ttfdialog->get_height() + 10;
         }
     }
 }



From jamesgregory at berlios.de  Sat Aug  6 23:11:15 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 6 Aug 2005 23:11:15 +0200
Subject: [Windstille-commit] r936 - trunk
Message-ID: <200508062111.j76LBFtu013526@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-06 23:11:14 +0200 (Sat, 06 Aug 2005)
New Revision: 936

Modified:
   trunk/BUGS
Log:
update

Modified: trunk/BUGS
===================================================================
--- trunk/BUGS	2005-08-06 21:07:21 UTC (rev 935)
+++ trunk/BUGS	2005-08-06 21:11:14 UTC (rev 936)
@@ -4,11 +4,14 @@
 - Jane's hat is white, caused by one mesh using two textures, could be
   fixed in either the exporter or in the model itself
 
-- when a Windstille is in window mode a window infront of it will
+- when Windstille is in windowed mode a window infront of it will
   cause graphical errors, this is caused by the non-pbuffer based
-  lightmap rendering, implementing proper pbuffer would fix itx 
+  lightmap rendering, implementing proper pbuffer would fix it
+  
+- quickly tapping forward-back-hold down forward makes your character play
+  the walking animation without actually moving anywhere
    
-- Pressing left (or right), jump and up at the same time throws an
+- Pressing left (or right), jump and and run at the same time throws an
   exception that causes the game to exit:
 
   std::exception: No marker with name 'RightFoot' defined in action 'Stand'



From jamesgregory at berlios.de  Sun Aug  7 00:13:42 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sun, 7 Aug 2005 00:13:42 +0200
Subject: [Windstille-commit] r937 - trunk/src
Message-ID: <200508062213.j76MDgMZ016604@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-07 00:13:39 +0200 (Sun, 07 Aug 2005)
New Revision: 937

Modified:
   trunk/src/conversation.cpp
   trunk/src/conversation.hpp
   trunk/src/game_session.cpp
   trunk/src/pda.cpp
   trunk/src/pda.hpp
Log:
- made PDA much bigger and slightly better
- changed some "visibles" to "actives" to make things more unified across different classes

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-06 21:11:14 UTC (rev 936)
+++ trunk/src/conversation.cpp	2005-08-06 22:13:39 UTC (rev 937)
@@ -30,14 +30,14 @@
 Conversation::Conversation()
 {
   current_ = this;
-  visible = false;
+  active = false;
   selection = 0;
 }
 
 void
 Conversation::add(const std::string& text)
 {
-  if (!visible)
+  if (!active)
     {
       choices.push_back(text);
       if (selection >= int(choices.size()))
@@ -48,27 +48,27 @@
 void
 Conversation::draw()
 {
-  if (visible)
+  if (!active)
+    return;
+    
+  int x = 100;
+  int y = 200;
+
+  Rect rect(Point(x - 20, y - 20 + Fonts::ttffont->get_height()/2 - 5),
+            Size(300 + 20, // FIXME:
+                 (Fonts::ttffont->get_height() + 10) * choices.size() + 20));
+  
+  Display::fill_rect(rect, Color(0,0,0,0.5f));
+  Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.3f));
+
+  for(int i = 0; i < int(choices.size()); ++i)
     {
-      int x = 100;
-      int y = 200;
-
-      Rect rect(Point(x - 20, y - 20 + Fonts::ttffont->get_height()/2 - 5),
-                Size(300 + 20, // FIXME:
-                     (Fonts::ttffont->get_height() + 10) * choices.size() + 20));
-      
-      Display::fill_rect(rect, Color(0,0,0,0.5f));
-      Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.3f));
- 
-      for(int i = 0; i < int(choices.size()); ++i)
-        {
-          if (i == selection)
-            Fonts::ttfdialog->draw(x, y, choices[i]);
-          else
-            Fonts::ttfdialog->draw(x, y, choices[i], Color(0.5f, 0.5f, 0.5f));
-      
-          y += Fonts::ttfdialog->get_height() + 10;
-        }
+      if (i == selection)
+        Fonts::ttfdialog->draw(x, y, choices[i]);
+      else
+        Fonts::ttfdialog->draw(x, y, choices[i], Color(0.5f, 0.5f, 0.5f));
+  
+      y += Fonts::ttfdialog->get_height() + 10;
     }
 }
 
@@ -76,39 +76,39 @@
 Conversation::update(float delta)
 {
   (void) delta;
-  if (visible)
+  if (!active)
+    return;
+    
+  Controller controller = InputManager::get_controller();
+  const InputEventLst& events = controller.get_events();
+
+  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
     {
-      Controller controller = InputManager::get_controller();
-      const InputEventLst& events = controller.get_events();
- 
-      for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
+      if (i->type == AXIS_EVENT && i->axis.name == Y_AXIS)
         {
-          if (i->type == AXIS_EVENT && i->axis.name == Y_AXIS)
+          if (i->axis.pos > 0)
             {
-              if (i->axis.pos > 0)
-                {
-                  selection -= 1;
-                  if (selection < 0)
-                    selection = choices.size() - 1;
-                }
-              else if (i->axis.pos < 0)
-                {        
-                  selection += 1;
-                  if (selection >= int(choices.size()))
-                    selection = 0;
-                }
+              selection -= 1;
+              if (selection < 0)
+                selection = choices.size() - 1;
             }
-          else if (i->type == BUTTON_EVENT && i->button.down)
+          else if (i->axis.pos < 0)
+            {        
+              selection += 1;
+              if (selection >= int(choices.size()))
+                selection = 0;
+            }
+        }
+      else if (i->type == BUTTON_EVENT && i->button.down)
+        {
+          switch (i->button.name)
             {
-              switch (i->button.name)
-                {
-                case PRIMARY_BUTTON:
-                  visible = false;
-                  choices.clear();
-                  script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
-                  return;
-                  break;
-                }
+            case PRIMARY_BUTTON:
+              active = false;
+              choices.clear();
+              script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
+              return;
+              break;
             }
         }
     }
@@ -123,7 +123,7 @@
 void
 Conversation::show()
 {
-  visible = true;
+  active = true;
 }
 
 /* EOF */

Modified: trunk/src/conversation.hpp
===================================================================
--- trunk/src/conversation.hpp	2005-08-06 21:11:14 UTC (rev 936)
+++ trunk/src/conversation.hpp	2005-08-06 22:13:39 UTC (rev 937)
@@ -28,7 +28,7 @@
 class Conversation
 {
 private:
-  bool visible;
+  bool active;
   int selection;
 
   typedef std::vector<std::string> Choices;

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 21:11:14 UTC (rev 936)
+++ trunk/src/game_session.cpp	2005-08-06 22:13:39 UTC (rev 937)
@@ -146,7 +146,7 @@
 GameSession::update(float delta)
 {  
   if (InputManager::get_controller().button_pressed(PDA_BUTTON))
-    pda.set_visible(!pda.get_visible());
+    pda.set_active(!pda.is_active());
 
   if (InputManager::get_controller().button_pressed(PAUSE_BUTTON))
     pause = !pause;

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-06 21:11:14 UTC (rev 936)
+++ trunk/src/pda.cpp	2005-08-06 22:13:39 UTC (rev 937)
@@ -29,8 +29,15 @@
 #include "fonts.hpp"
 #include "pda.hpp"
 
+Dialog_Entry::Dialog_Entry(const std::string& arg_character, const std::string& arg_text)
+  : character(arg_character),
+    text(arg_text)
+{
+}
+
 PDA::PDA()
-  : visible(false)
+  : active(false),
+    state(PDA_INVENTORY)
 { 
   text_area = 0;
 }
@@ -38,7 +45,7 @@
 void
 PDA::draw()
 {
-  if (!visible)
+  if (!active)
     return;
     
   const Rectf& rect = text_area->get_rect().grow(8.0f);
@@ -51,25 +58,50 @@
 void
 PDA::update(float delta)
 {
-  int width  = 200;
-  int height = 120;
-  std::string text;
-  text = "<large>PDA</large>\n"
-         "------------------------\n";
-
-  for (unsigned i = 0; i != messages.size(); ++i)
-    text += messages[i] + '\n';
+  if (!active)
+    return;
   
-  if (text != old_text)
-  {
+  Controller controller = InputManager::get_controller();
+  const InputEventLst& events = controller.get_events();
+  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i) {
+    if (i->type == AXIS_EVENT && i->axis.name == X_AXIS) {
+      if (i->axis.pos > 0) {
+        state = static_cast<pda_state>(state + 1);
+        if (state > PDA_DIALOGS)
+          state = PDA_INVENTORY;
+      }
+      else if (i->axis.pos < 0) {
+        state = static_cast<pda_state>(state - 1);
+        if (state < PDA_INVENTORY)
+          state = PDA_DIALOGS;
+      }
+    }
+  }
+  
+  int width  = 600;
+  int height = 400;
+  
+  switch (state) {
+    case PDA_INVENTORY:
+      show_inventory();
+      break;
+    case PDA_MISSIONS:
+      show_missions();
+      break;
+    case PDA_DIALOGS:
+      show_dialogs();
+      break;
+  }
+ 
+  if (new_text != old_text) {
     delete text_area;
-    text_area = new TextArea(Rect(Point(16,
-                Display::get_height() - height - 16),
+    text_area = new TextArea(Rect(Point(100,
+                100),
                 Size(width, height)), false);
     text_area->set_font(Fonts::ttffont);
-    text_area->set_text(text);
+    text_area->set_text(new_text);
     
-    old_text = text;
+    old_text = new_text;
   }
   
   text_area->update(delta);
@@ -78,7 +110,35 @@
 void
 PDA::add_dialog(const std::string& text)
 {
-  messages.push_back(text);
+  dialogs.push_back(Dialog_Entry("Someone", text));
 }
 
+void
+PDA::show_inventory()
+{
+  new_text = "<large>Personal Digital Assistant</large>\n";
+  new_text += "<b>inventory</b> - missions - dialogs\n\n";
+}
+
+void
+PDA::show_missions()
+{
+  new_text = "<large>Personal Digital Assistant</large>\n";
+  new_text += "inventory - <b>missions</b> - dialogs\n\n";
+
+}
+
+void
+PDA::show_dialogs()
+{
+  new_text = "<large>Personal Digital Assistant</large>\n";
+  new_text += "inventory - missions - <b>dialogs</b>\n\n";
+  
+  for (unsigned i = 0; i != dialogs.size(); ++i) {
+    new_text += dialogs[i].character;
+    new_text += ": ";
+    new_text += dialogs[i].text + '\n';
+  }
+}
+
 /* EOF */

Modified: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-06 21:11:14 UTC (rev 936)
+++ trunk/src/pda.hpp	2005-08-06 22:13:39 UTC (rev 937)
@@ -28,6 +28,15 @@
 
 class TextArea;
 
+class Dialog_Entry
+{
+public:
+  Dialog_Entry(const std::string& arg_character, const std::string& arg_text);
+  
+  std::string character;
+  std::string text;
+};
+
 /** */
 class PDA
 {
@@ -36,15 +45,21 @@
 
   void draw();
   void update(float delta);
-  bool get_visible() const {return visible;}
-  void set_visible(bool arg_visible) {visible = arg_visible;}
+  bool is_active() const {return active;}
+  void set_active(bool arg_active) {active = arg_active;}
   void add_dialog(const std::string& text);
 
 private:
+  void show_inventory();
+  void show_missions();
+  void show_dialogs();
+  
   TextArea* text_area;
-  bool visible;
-  std::vector<std::string> messages;
+  bool active;
+  std::vector<Dialog_Entry> dialogs;
+  std::string new_text;  
   std::string old_text;
+  enum pda_state { PDA_INVENTORY, PDA_MISSIONS, PDA_DIALOGS } state;
 };
 
 #endif



From grumbel at berlios.de  Sun Aug  7 23:16:38 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 7 Aug 2005 23:16:38 +0200
Subject: [Windstille-commit] r941 - in trunk/data: images/objects levels
Message-ID: <200508072116.j77LGcSY000043@sheep.berlios.de>

Author: grumbel
Date: 2005-08-07 23:16:35 +0200 (Sun, 07 Aug 2005)
New Revision: 941

Added:
   trunk/data/images/objects/painting1.png
   trunk/data/images/objects/painting1.sprite
   trunk/data/images/objects/painting2.png
   trunk/data/images/objects/painting2.sprite
   trunk/data/images/objects/painting3.png
   trunk/data/images/objects/painting3.sprite
Modified:
   trunk/data/levels/apartment.wst
Log:
some images

Added: trunk/data/images/objects/painting1.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/painting1.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/objects/painting1.sprite
===================================================================
--- trunk/data/images/objects/painting1.sprite	2005-08-07 15:22:25 UTC (rev 940)
+++ trunk/data/images/objects/painting1.sprite	2005-08-07 21:16:35 UTC (rev 941)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "painting1.png")
+    (scale 0.5)
+  )
+)

Added: trunk/data/images/objects/painting2.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/painting2.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/objects/painting2.sprite
===================================================================
--- trunk/data/images/objects/painting2.sprite	2005-08-07 15:22:25 UTC (rev 940)
+++ trunk/data/images/objects/painting2.sprite	2005-08-07 21:16:35 UTC (rev 941)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "painting2.png")
+    (scale 0.5)
+  )
+)

Added: trunk/data/images/objects/painting3.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/painting3.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/objects/painting3.sprite
===================================================================
--- trunk/data/images/objects/painting3.sprite	2005-08-07 15:22:25 UTC (rev 940)
+++ trunk/data/images/objects/painting3.sprite	2005-08-07 21:16:35 UTC (rev 941)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "painting3.png")
+    (scale 0.5)
+  )
+)

Modified: trunk/data/levels/apartment.wst
===================================================================
--- trunk/data/levels/apartment.wst	2005-08-07 15:22:25 UTC (rev 940)
+++ trunk/data/levels/apartment.wst	2005-08-07 21:16:35 UTC (rev 941)
@@ -38,7 +38,7 @@
       1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
       1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
      ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos -10)
     (data
       1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
       1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
@@ -71,6 +71,28 @@
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
      ))
+
+    (scriptable-object
+      (name "Painting1")
+      (pos 72 135)
+        (z-pos 100)
+      (sprite "images/objects/painting1.sprite")
+      (active #t))
+
+    (scriptable-object
+      (name "Painting2")
+      (pos 336 125)
+        (z-pos 100)
+      (sprite "images/objects/painting2.sprite")
+      (active #t))
+
+    (scriptable-object
+      (name "Painting3")
+      (pos 563 131)
+        (z-pos 100)
+      (sprite "images/objects/painting3.sprite")
+      (active #t))
+
    )
  )
 



From grumbel at berlios.de  Mon Aug  8 00:00:06 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 8 Aug 2005 00:00:06 +0200
Subject: [Windstille-commit] r942 - in trunk/src: . glutil input sprite2d
Message-ID: <200508072200.j77M06IP002739@sheep.berlios.de>

Author: grumbel
Date: 2005-08-08 00:00:00 +0200 (Mon, 08 Aug 2005)
New Revision: 942

Added:
   trunk/src/input/input_configurator.cpp
   trunk/src/input/input_configurator.hpp
Modified:
   trunk/src/glutil/texture.cpp
   trunk/src/input/Jamfile
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
   trunk/src/sprite2d/sprite.cpp
   trunk/src/text_area.cpp
Log:
- fixed scaling in Sprite2D
- changed Textures to default to GL_LINEAR interpolation
- added graphical input configurator (not yet hooked up into the game, but mostly working)

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/glutil/texture.cpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -75,8 +75,8 @@
   glTexImage2D(GL_TEXTURE_2D, 0, format, width, height, 0, GL_RGBA,
                GL_UNSIGNED_BYTE, 0);
 
-  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
-  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
+  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+  glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_R, GL_CLAMP);
@@ -138,8 +138,8 @@
 
       assert_gl("creating texture");
 
-      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);
-      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);
+      glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);
       glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP);
       glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP);
       glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_R, GL_CLAMP);

Modified: trunk/src/input/Jamfile
===================================================================
--- trunk/src/input/Jamfile	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/input/Jamfile	2005-08-07 22:00:00 UTC (rev 942)
@@ -1,28 +1,9 @@
 SubDir TOP src input ;
 
 sources =
-#    axis_button.cpp                
-#    axis_button.hpp
-#    axis_factory.cpp
-#    axis_factory.hpp
-#    button_axis.cpp
-#    button_axis.hpp
-#    button_factory.cpp
-#    button_factory.hpp
     controller.cpp
     controller.hpp
-#    input_axis.hpp
-#    input_axis_input_device.cpp
-#    input_axis_input_device.hpp
-#    input_button.hpp
-#    input_keyboard.hpp
-#    input_button_input_device.cpp
-#    input_button_input_device.hpp
-#    input_keyboard_input_device.hpp
-#    input_keyboard_input_device.cpp
     input_event.hpp
-#    input_manager_custom.cpp
-#    input_manager_custom.hpp
     input_manager_sdl.cpp
     input_manager_sdl.hpp
     input_manager.cpp
@@ -33,8 +14,8 @@
     input_manager_player.hpp
     input_recorder.cpp
     input_recorder.hpp
-#    multi_button.cpp
-#    multi_button.hpp
+    input_configurator.hpp
+    input_configurator.cpp
 ;
 
 TRANSLATABLE_SOURCES += [ SearchSource $(sources) ] ;

Added: trunk/src/input/input_configurator.cpp
===================================================================
--- trunk/src/input/input_configurator.cpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/input/input_configurator.cpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -0,0 +1,225 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "display/display.hpp"
+#include "math/rect.hpp"
+#include "controller_def.hpp"
+#include "fonts.hpp"
+#include "input/input_manager_sdl.hpp"
+#include "input_configurator.hpp"
+
+InputConfigurator::InputConfigurator()
+  : area(Rectf(120, 120,
+               Display::get_width()  - 220, 
+               Display::get_height() - 220), 
+         false)
+{
+  out << "Input Configurator\n"
+      << "------------------\n"
+      << "Press Escape to ignore a setting\n"
+      << std::endl; 
+
+  area.set_text(out.str());
+
+  area.set_font(Fonts::ttffont);
+
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, PDA_BUTTON);
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, TERTIARY_BUTTON);
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, SECONDARY_BUTTON);
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, PRIMARY_BUTTON);
+
+  add_configure_item(ConfigureItem::CONFIGURE_AXIS, Y_AXIS);
+  add_configure_item(ConfigureItem::CONFIGURE_AXIS, X_AXIS);
+
+
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, AIM_BUTTON);
+
+  print_item();
+}
+
+InputConfigurator::~InputConfigurator()
+{
+}
+
+void
+InputConfigurator::add_configure_item(ConfigureItem::Mode mode, int event_id)
+{
+  ConfigureItem item;
+  
+  item.mode     = mode;
+  item.event_id = event_id;
+
+  items.push_back(item);
+
+}
+  
+void
+InputConfigurator::draw()
+{
+  Rectf rect(100, 100,
+             Display::get_width()  - 200, 
+             Display::get_height() - 200);
+
+  Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
+  Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f)); 
+  area.draw();
+}
+
+void
+InputConfigurator::update(float delta)
+{
+  
+}
+
+void
+InputConfigurator::print_item()
+{
+  ControllerDef def;
+
+  if (!items.empty())
+    {
+      const ConfigureItem& item = items.back();
+      
+      if (item.mode == ConfigureItem::CONFIGURE_AXIS)
+        {
+          out << "Configuring " << def.axis_id2name(item.event_id) << ": " << std::endl;
+        }
+      else if (item.mode == ConfigureItem::CONFIGURE_BUTTON)
+        {
+          out << "Configuring " << def.button_id2name(item.event_id) << ": " << std::endl;
+        }
+    }
+
+  area.set_text(out.str());
+}
+
+void
+InputConfigurator::next_item()
+{
+  ControllerDef def;
+
+  out << std::endl;
+  items.pop_back();
+
+  print_item();
+
+  area.set_text(out.str());
+}
+
+void
+InputConfigurator::on_event(const SDL_Event& event)
+{
+  if (items.empty())
+    return; 
+
+  switch(event.type)
+    {        
+    case SDL_MOUSEMOTION:
+      // event.motion:      
+      break;
+
+    case SDL_MOUSEBUTTONDOWN:
+      // event.button
+      break;
+
+    case SDL_MOUSEBUTTONUP:
+      // event.button
+      break;
+
+    case SDL_JOYAXISMOTION:
+      if (items.back().mode == ConfigureItem::CONFIGURE_AXIS)
+        {
+          InputManagerSDL::current()->bind_joystick_axis(items.back().event_id, event.jaxis.which, event.jaxis.axis);
+          out << "(joystick-axis (device " << event.jaxis.which << ")\n"
+              << "               (axis   " << event.jaxis.axis << "))" << std::endl;
+          next_item();
+        }
+      break;
+
+    case SDL_JOYBALLMOTION:
+      // event.jball
+      break;
+          
+    case SDL_JOYHATMOTION:
+      // event.jhat
+      break;
+          
+    case SDL_JOYBUTTONUP:
+      break;
+
+    case SDL_JOYBUTTONDOWN:
+      if (items.back().mode == ConfigureItem::CONFIGURE_BUTTON)
+        {
+          InputManagerSDL::current()->bind_joystick_button(items.back().event_id, event.jbutton.which, event.jbutton.button);
+          out << "(joystick-button (device " << event.jbutton.which << ")\n"
+              << "                 (button " << event.jbutton.button << "))" << std::endl;
+          next_item();
+        }
+      else if (items.back().mode == ConfigureItem::CONFIGURE_AXIS)
+        {
+          // ignore
+        }
+      break;
+
+    case SDL_KEYUP:
+      break;
+
+    case SDL_KEYDOWN:
+      if (event.key.keysym.sym == SDLK_ESCAPE)
+        {
+          next_item();
+        }
+      else
+        {
+          if (items.back().mode == ConfigureItem::CONFIGURE_BUTTON)
+            {
+              InputManagerSDL::current()->bind_keyboard_button(items.back().event_id, event.key.keysym.sym);
+              out << "(keyboard-button (key " << InputManagerSDL::current()->keyid_to_string(event.key.keysym.sym) << "))" << std::endl;
+              next_item();
+            }
+          else if (items.back().mode == ConfigureItem::CONFIGURE_AXIS)
+            {
+              if (wait_for_plus && minus.type == SDL_KEYDOWN)
+                {
+                  out << "(keyboard-axis (minus " << InputManagerSDL::current()->keyid_to_string(minus.key.keysym.sym) << ") "
+                      << "(plus  " << InputManagerSDL::current()->keyid_to_string(event.key.keysym.sym) << "))" << std::endl;
+                  InputManagerSDL::current()->bind_keyboard_axis(items.back().event_id, minus.key.keysym.sym, event.key.keysym.sym);
+                  next_item();
+                  wait_for_plus = false;
+                }
+              else if (!wait_for_plus)
+                {
+                  out << "Print key for other direction" << std::endl;
+                  area.set_text(out.str());
+                  minus = event;
+                  wait_for_plus = true;
+                }
+            }
+        }
+      break;
+    }
+}
+
+/* EOF */

Added: trunk/src/input/input_configurator.hpp
===================================================================
--- trunk/src/input/input_configurator.hpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/input/input_configurator.hpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -0,0 +1,66 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_INPUT_CONFIGURATOR_HPP
+#define HEADER_INPUT_CONFIGURATOR_HPP
+
+#include "text_area.hpp"
+
+struct ConfigureItem
+{
+  enum Mode { CONFIGURE_AXIS, CONFIGURE_BUTTON };
+  Mode mode;
+  int  event_id;
+};
+
+/** */
+class InputConfigurator
+{
+private:
+  std::vector<ConfigureItem> items;
+  bool wait_for_plus;
+  SDL_Event minus;
+  std::ostringstream out;
+  TextArea area;
+  
+public:
+  InputConfigurator();
+  ~InputConfigurator();
+  
+  void draw();
+  void update(float delta);
+  void on_event(const SDL_Event& event);
+  void add_configure_item(ConfigureItem::Mode mode, int event_id);
+  void next_item();
+  void print_item();
+  
+private:
+  InputConfigurator(const InputConfigurator&);
+  InputConfigurator& operator=(const InputConfigurator&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -34,33 +34,6 @@
 
 #define DEAD_ZONE 4096
 
-struct JoystickButtonBinding
-{
-  int event;
-  int device;
-  int button;
-};
-
-struct JoystickAxisBinding
-{
-  int event;
-  int device;
-  int axis;
-};
-
-struct KeyboardButtonBinding
-{
-  int event;
-  SDLKey key;
-};
-
-struct KeyboardAxisBinding
-{
-  int event;
-  SDLKey plus;
-  SDLKey minus;
-};
-
 class InputManagerSDLImpl
 {
 public:

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -32,6 +32,33 @@
 
 class InputManagerSDLImpl;
 
+struct JoystickButtonBinding
+{
+  int event;
+  int device;
+  int button;
+};
+
+struct JoystickAxisBinding
+{
+  int event;
+  int device;
+  int axis;
+};
+
+struct KeyboardButtonBinding
+{
+  int event;
+  SDLKey key;
+};
+
+struct KeyboardAxisBinding
+{
+  int event;
+  SDLKey plus;
+  SDLKey minus;
+};
+
 /** */
 class InputManagerSDL : public InputManagerImpl
 {

Modified: trunk/src/sprite2d/sprite.cpp
===================================================================
--- trunk/src/sprite2d/sprite.cpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/sprite2d/sprite.cpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -28,7 +28,7 @@
   pingpong = false;
   reverse  = false;
   alpha    = 0.0;
-  scale    = 1.0f;
+  scale = current_action->scale;
   color    = Color(1.0f, 1.0f, 1.0f);
   blend_sfactor = GL_SRC_ALPHA;
   blend_dfactor = GL_ONE_MINUS_SRC_ALPHA;
@@ -44,7 +44,7 @@
   pingpong = false;
   reverse = false;
   alpha = 0.0;
-  scale    = 1.0f;
+  scale = current_action->scale;
   color    = Color(1.0f, 1.0f, 1.0f);
   blend_sfactor = GL_SRC_ALPHA;
   blend_dfactor = GL_ONE_MINUS_SRC_ALPHA;
@@ -80,7 +80,7 @@
       frame = 0;
       vflip = false;
       alpha = 0.0;
-      scale = 1.0f;
+      scale = current_action->scale;
       color = Color(1.0f, 1.0f, 1.0f);
       blend_sfactor = GL_SRC_ALPHA;
       blend_dfactor = GL_ONE_MINUS_SRC_ALPHA;

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-07 21:16:35 UTC (rev 941)
+++ trunk/src/text_area.cpp	2005-08-07 22:00:00 UTC (rev 942)
@@ -70,6 +70,8 @@
 void
 TextArea::set_text(const std::string& str)
 {
+  impl->commands.clear();
+
   BabyXML xml(str);
 
   for(BabyXML::iterator i = xml.begin(); i != xml.end(); ++i)



From jamesgregory at berlios.de  Sun Aug  7 01:14:07 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sun, 7 Aug 2005 01:14:07 +0200
Subject: [Windstille-commit] r939 - in trunk: data/scripts data/scripts/newformat2 src src/scripting
Message-ID: <200508062314.j76NE7jc024503@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-07 01:13:55 +0200 (Sun, 07 Aug 2005)
New Revision: 939

Modified:
   trunk/data/scripts/newformat2/bob.nut
   trunk/data/scripts/newformat2/frank.nut
   trunk/data/scripts/windstille.nut
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/pda.cpp
   trunk/src/pda.hpp
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/wrapper.cpp
Log:
- added Squirrel Dialog class to reduce code repetition in creating dialogs
- dialogs include the name of the character/source
- conversation responses get added to pda

Modified: trunk/data/scripts/newformat2/bob.nut
===================================================================
--- trunk/data/scripts/newformat2/bob.nut	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/data/scripts/newformat2/bob.nut	2005-08-06 23:13:55 UTC (rev 939)
@@ -1,7 +1,7 @@
 function intro()
 {
 	bob_seen_before = true;
-	dialog(0, "images/portrait.sprite", "Hey, my name's bob.  Are you new around here?"); 
+  dialog.set("Hey, my name's bob.  Are you new around here?"); 
 	conversation_add("Yes, I am.");
 	conversation_add("Go away"); 
 	if (!conversation_get())
@@ -16,7 +16,7 @@
 
 function hello_again()
 {
-	dialog(0, "images/portrait.sprite", "Hello again");
+	dialog.set("Hello again");
 	conversation_add("Hey.");
 	conversation_add("Bye");
 	if (!conversation_get())
@@ -27,7 +27,7 @@
 
 function ask_questions()
 {
-	dialog(0, "images/portrait.sprite", "So what are you doing here?");
+	dialog.set("So what are you doing here?");
 	conversation_add("I work as a mercenary.");
 	conversation_add("Not much");
 	if (!conversation_get())
@@ -41,7 +41,7 @@
 
 function offer_job()
 {
-	dialog(0, "images/portrait.sprite", "Are you looking for some work?");
+	dialog.set("Are you looking for some work?");
 	conversation_add("I might be, if the offer is good enough.");
 	conversation_add("No thanks.");
 	if (!conversation_get())
@@ -55,19 +55,20 @@
 
 function explain_job()
 {
-	dialog(0, "images/portrait.sprite", "Your job is to kill the spider at the end of the level ;)");
+	dialog.set("Your job is to kill the spider at the end of the level ;)");
 }
 
 function bye()
 {
 	if (bob_knows_job)
-		dialog(0, "images/portrait.sprite", "Feel free to come back if you need a job");
+		dialog.set("Feel free to come back if you need a job");
 	else
-		dialog(0, "images/portrait.sprite", "See you again some time");
+		dialog.set("See you again some time");
 }
 
 //sintro();
 
+dialog <- Dialog(0, "Bob", "images/portrait.sprite");
 if (bob_knows_job)
 	explain_job();
 else if (bob_knows_your_mercenary)

Modified: trunk/data/scripts/newformat2/frank.nut
===================================================================
--- trunk/data/scripts/newformat2/frank.nut	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/data/scripts/newformat2/frank.nut	2005-08-06 23:13:55 UTC (rev 939)
@@ -1,7 +1,7 @@
 
 /* play_sound("sounds/speech/vr_intro.ogg"); */
 println("Dislaying dialog");
-dialog(TOP, "images/portrait.sprite", 
+add_dialog(TOP, "Frank", "images/portrait.sprite", 
        "<sin>Welcome</sin> to the <large>VR training program</large>. Here you " +
        "will learn the <sin>basic manoeuvering</sin> abilities of <large>your</large> " +
        "powersuit,<sleep> jumping,<sleep> running, <sleep> climbing<sleep> and shooting. " +

Modified: trunk/data/scripts/windstille.nut
===================================================================
--- trunk/data/scripts/windstille.nut	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/data/scripts/windstille.nut	2005-08-06 23:13:55 UTC (rev 939)
@@ -36,10 +36,29 @@
   return conversation_get_selection();
 }
 
-function dialog(align, portrait, text)
+class Dialog {
+  constructor(arg_align, arg_character, arg_portrait)
+  {
+    align = arg_align;
+    character = arg_character;
+    portrait = arg_portrait;
+  }
+
+  function set(text)
+  {
+    dialog_show(align, character, portrait, text);
+    wait_for_dialog();
+  }
+
+  align = null;
+  character = null;
+  portrait = null;
+}
+
+function add_dialog(align, character, portrait, text)
 {
-        dialog_show(align, portrait, text);
-        wait_for_dialog();
+  dialog_show(align, character, portrait, text);
+  wait_for_dialog();  
 }
 
 /* Some debugging/testing stuff */

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/conversation.cpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -24,6 +24,7 @@
 #include "script_manager.hpp"
 #include "display/display.hpp"
 #include "conversation.hpp"
+#include "game_session.hpp"
 
 Conversation* Conversation::current_ = 0;
 
@@ -105,6 +106,7 @@
             {
             case PRIMARY_BUTTON:
               active = false;
+              GameSession::current()->pda.add_dialog("Jane", choices[selection]);
               choices.clear();
               script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
               return;

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/dialog_manager.cpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -51,8 +51,7 @@
   text      = text_;
   caption = false;
   
-  create_text();  
-  GameSession::current()->pda.add_dialog(text);
+  create_text();
 }
 
 void

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/pda.cpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -108,9 +108,9 @@
 }
 
 void
-PDA::add_dialog(const std::string& text)
+PDA::add_dialog(const std::string& character, const std::string& text)
 {
-  dialogs.push_back(Dialog_Entry("Someone", text));
+  dialogs.push_back(Dialog_Entry(character, text));
 }
 
 void

Modified: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/pda.hpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -47,7 +47,7 @@
   void update(float delta);
   bool is_active() const {return active;}
   void set_active(bool arg_active) {active = arg_active;}
-  void add_dialog(const std::string& text);
+  void add_dialog(const std::string& character, const std::string& text);
 
 private:
   void show_inventory();

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/scripting/interface.cpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -71,10 +71,11 @@
   script_manager->set_wakeup_event(vm, ScriptManager::DIALOG_CLOSED);
 }
 
-void dialog_show(int alignment, const std::string& portrait, const std::string& text)
+void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text)
 {
   DialogManager::current()->add_dialog(alignment, portrait, text);
   GameSession::current()->set_dialog_state();
+  GameSession::current()->pda.add_dialog(character, text);
 }
 
 bool run_before(HSQUIRRELVM vm)

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/scripting/interface.hpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -32,7 +32,7 @@
 static const int TOP     = 0x10;
 static const int BOTTOM  = 0x20;
 
-void dialog_show(int alignment, const std::string& portrait, const std::string& text);
+void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text);
 void wait_for_dialog(HSQUIRRELVM vm) __suspend;
 
 void conversation_add(const std::string& text);

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-06 23:13:02 UTC (rev 938)
+++ trunk/src/scripting/wrapper.cpp	2005-08-06 23:13:55 UTC (rev 939)
@@ -387,8 +387,10 @@
   sq_getstring(v, 3, &arg1);
   const char* arg2;
   sq_getstring(v, 4, &arg2);
+  const char* arg3;
+  sq_getstring(v, 5, &arg3);
   
-  Scripting::dialog_show(arg0, arg1, arg2);
+  Scripting::dialog_show(arg0, arg1, arg2, arg3);
   
   return 0;
 }



From jamesgregory at berlios.de  Sun Aug  7 17:22:27 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sun, 7 Aug 2005 17:22:27 +0200
Subject: [Windstille-commit] r940 - in trunk/src: . scripting
Message-ID: <200508071522.j77FMRSq027584@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-07 17:22:25 +0200 (Sun, 07 Aug 2005)
New Revision: 940

Modified:
   trunk/src/controller_def.hpp
   trunk/src/conversation.cpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/pda.cpp
   trunk/src/player.cpp
   trunk/src/scripting/interface.cpp
Log:
- player control is blocked when when console, pda dialog, or conversation is active
- pda displays dialogs in reverse chronological order
- dialogs stay on the screen when you are selecting a conversation answer, this needs tidying up though
- changed run button back to primary button

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/controller_def.hpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -40,8 +40,8 @@
     AIM_BUTTON,       // used to draw the gun and aim
   };
 
-#define JUMP_BUTTON PRIMARY_BUTTON
-#define RUN_BUTTON  SECONDARY_BUTTON
+#define JUMP_BUTTON SECONDARY_BUTTON
+#define RUN_BUTTON PRIMARY_BUTTON
 
 /** */
 class ControllerDef

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/conversation.cpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -108,6 +108,7 @@
               active = false;
               GameSession::current()->pda.add_dialog("Jane", choices[selection]);
               choices.clear();
+              GameSession::current()->set_game_state();
               script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
               return;
               break;

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/game_session.cpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -196,13 +196,14 @@
             {
             case DIALOG:
               dialog_manager->update(delta);
+              conversation->update(delta);
               break;
             case GAME:
               break;
             }
           break;
         }
-      conversation->update(delta);
+      
       controller_help_window.update(delta);
       pda.update(delta);
     }

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/game_session.hpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -46,6 +46,8 @@
 
 class GameSession : public Windstille::Screen
 {
+public:
+  enum ControlState { DIALOG, GAME };
 private:
   SceneContext sc;
 
@@ -62,7 +64,7 @@
   bool pause;
 
   enum { FADEIN, RUNNING, FADEOUT } fade_state;
-  enum { DIALOG, GAME } control_state;
+  ControlState control_state;
   GameMainState target_state;
 
   void change_sector ();
@@ -81,6 +83,8 @@
   void set_dialog_state() { control_state = DIALOG; }
   void set_game_state()   { control_state = GAME; }
   void set_sector(const std::string& arg_filename);
+  
+  ControlState get_game_state() const { return control_state; }
   const std::string& get_filename () const { return filename; }
 
   void draw();

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/pda.cpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -134,10 +134,10 @@
   new_text = "<large>Personal Digital Assistant</large>\n";
   new_text += "inventory - missions - <b>dialogs</b>\n\n";
   
-  for (unsigned i = 0; i != dialogs.size(); ++i) {
-    new_text += dialogs[i].character;
+  for (std::vector<Dialog_Entry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) {
+    new_text += i->character;
     new_text += ": ";
-    new_text += dialogs[i].text + '\n';
+    new_text += i->text + '\n';
   }
 }
 

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/player.cpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -29,6 +29,8 @@
 #include "glutil/surface_manager.hpp"
 #include "particles/particle_system.hpp"
 #include "collision/collision_engine.hpp"
+#include "game_session.hpp"
+#include "console.hpp"
 
 static const int MAX_ENERGY = 16;
 static const float WALK_SPEED = 128.0;
@@ -112,51 +114,55 @@
 {
   controller = InputManager::get_controller();
 
-  switch(state) {
-    case STAND:
-    case WALK:
-      update_walk_stand();
-      break;
-    case RUN:
-      update_run();
-      break;
-    case DUCKING:
-      update_ducking();
-      break;
-    case DUCKED:
-      update_ducked();
-      break;
-    case TURNAROUND:
-      update_turnaround();
-      break;
-    case STAND_TO_LISTEN:
-      update_stand_to_listen();
-      break;
-    case LISTEN:
-      update_listen();
-      break;
-    case JUMP_BEGIN:
-      update_jump_begin();
-      break;
-    case JUMP_AIR:
-      update_jump_air();
-      break;
-    case JUMP_LAND:
-      update_jump_land();
-      break;
-    case JUMP_UP_BEGIN:
-      update_jump_up_begin();
-      break;
-    case JUMP_UP_AIR:
-      update_jump_up_air();
-      break;
-    case JUMP_UP_LAND:
-      update_jump_up_land();
-      break;
-    default:
-      assert(false);
-      break;
-  }
+  if (!console.is_active() && !GameSession::current()->pda.is_active()
+  && GameSession::current()->get_game_state() != GameSession::DIALOG)
+    {
+      switch(state) {
+        case STAND:
+        case WALK:
+          update_walk_stand();
+          break;
+        case RUN:
+          update_run();
+          break;
+        case DUCKING:
+          update_ducking();
+          break;
+        case DUCKED:
+          update_ducked();
+          break;
+        case TURNAROUND:
+          update_turnaround();
+          break;
+        case STAND_TO_LISTEN:
+          update_stand_to_listen();
+          break;
+        case LISTEN:
+          update_listen();
+          break;
+        case JUMP_BEGIN:
+          update_jump_begin();
+          break;
+        case JUMP_AIR:
+          update_jump_air();
+          break;
+        case JUMP_LAND:
+          update_jump_land();
+          break;
+        case JUMP_UP_BEGIN:
+          update_jump_up_begin();
+          break;
+        case JUMP_UP_AIR:
+          update_jump_up_air();
+          break;
+        case JUMP_UP_LAND:
+          update_jump_up_land();
+          break;
+        default:
+          assert(false);
+          break;
+      }
+    }
 
   // fall down
   velocity.y += GRAVITY * delta;

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-06 23:13:55 UTC (rev 939)
+++ trunk/src/scripting/interface.cpp	2005-08-07 15:22:25 UTC (rev 940)
@@ -138,6 +138,7 @@
 void conversation_show()
 {
   Conversation::current()->show();
+  GameSession::current()->set_dialog_state();
 }
 
 int  conversation_get_selection()



From grumbel at berlios.de  Sun Aug  7 01:13:24 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 7 Aug 2005 01:13:24 +0200
Subject: [Windstille-commit] r938 - in trunk: data/controller src src/input
Message-ID: <200508062313.j76NDOId023994@sheep.berlios.de>

Author: grumbel
Date: 2005-08-07 01:13:02 +0200 (Sun, 07 Aug 2005)
New Revision: 938

Modified:
   trunk/data/controller/keyboard.scm
   trunk/src/controller_def.cpp
   trunk/src/controller_def.hpp
   trunk/src/input/input_manager.cpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
Log:
- read input settings from file again

Modified: trunk/data/controller/keyboard.scm
===================================================================
--- trunk/data/controller/keyboard.scm	2005-08-06 22:13:39 UTC (rev 937)
+++ trunk/data/controller/keyboard.scm	2005-08-06 23:13:02 UTC (rev 938)
@@ -1,13 +1,37 @@
+;; -*- scheme -*-
 (windstille-controller
- (up    (keyboard-button "up"))
- (down  (keyboard-button "down"))
- (left  (keyboard-button "left"))
- (right (keyboard-button "right"))
- (jump  (keyboard-button "up"))
- (fire  (keyboard-button "space"))
- (use   (keyboard-button "s"))
- (run   (keyboard-button "e"))
- (keyboard #t)
+ (x-axis
+  (keyboard-axis (minus "left") (plus "right"))
+  (joystick-axis (device 0)  (axis 2)))
+
+ (y-axis
+  (keyboard-axis (minus "up") (plus "down"))
+  (joystick-axis (device 0)  (axis 2)))
+ 
+ (primary-button
+  (keyboard-button (key "s"))
+  (joystick-button (device 0)  (button 2)))
+
+ (secondary-button
+  (keyboard-button (key "d"))
+  (joystick-button (device 0)  (button 3)))
+
+ (tertiary-button
+  (keyboard-button (key "a"))
+  (joystick-button (device 0)  (button 1)))
+
+ (pda-button
+  (keyboard-button (key "w"))
+  (joystick-button (device 0)  (button 0)))
+
+ (aim-button
+  (keyboard-button (key "shift"))
+  (joystick-button (device 0)  (button 7)))
+ 
+ (pause-button
+  (keyboard-button (key "p"))
+  (joystick-button (device 0)  (button 9)))
  )
- 
-;; EOF ;;
+
+
+;; EOF ;;
\ No newline at end of file

Modified: trunk/src/controller_def.cpp
===================================================================
--- trunk/src/controller_def.cpp	2005-08-06 22:13:39 UTC (rev 937)
+++ trunk/src/controller_def.cpp	2005-08-06 23:13:02 UTC (rev 938)
@@ -83,9 +83,9 @@
 int
 ControllerDef::button_name2id(const std::string& name) const
 {
-  std::map<std::string, int>::const_iterator i = axes.find(name);
-  if (i == axes.end())
-    throw std::runtime_error("Unknown button id: " + name);
+  std::map<std::string, int>::const_iterator i = buttons.find(name);
+  if (i == buttons.end())
+    throw std::runtime_error("Unknown button name: " + name);
 
   return i->second;
 }

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-06 22:13:39 UTC (rev 937)
+++ trunk/src/controller_def.hpp	2005-08-06 23:13:02 UTC (rev 938)
@@ -40,8 +40,8 @@
     AIM_BUTTON,       // used to draw the gun and aim
   };
 
-#define JUMP_BUTTON SECONDARY_BUTTON
-#define RUN_BUTTON  PRIMARY_BUTTON
+#define JUMP_BUTTON PRIMARY_BUTTON
+#define RUN_BUTTON  SECONDARY_BUTTON
 
 /** */
 class ControllerDef

Modified: trunk/src/input/input_manager.cpp
===================================================================
--- trunk/src/input/input_manager.cpp	2005-08-06 22:13:39 UTC (rev 937)
+++ trunk/src/input/input_manager.cpp	2005-08-06 23:13:02 UTC (rev 938)
@@ -55,7 +55,7 @@
     throw std::runtime_error(msg.str());
   }
   
-  impl = new InputManagerSDL();
+  impl = new InputManagerSDL(controller);
 }
 
 void

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-06 22:13:39 UTC (rev 937)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-06 23:13:02 UTC (rev 938)
@@ -25,6 +25,8 @@
 
 #include <iostream>
 #include <vector>
+#include "lisp/properties.hpp"
+#include "lisp/property_iterator.hpp"
 #include "controller_def.hpp"
 #include "input_manager_sdl.hpp"
 
@@ -67,53 +69,147 @@
 
   std::vector<KeyboardButtonBinding> keyboard_button_bindings;
   std::vector<KeyboardAxisBinding>   keyboard_axis_bindings;
+
+  std::vector<SDL_Joystick*> joysticks;
+
+  std::map<std::string, SDLKey> keyidmapping;
 };
 
-InputManagerSDL::InputManagerSDL()
-  : impl(new InputManagerSDLImpl)
+std::string
+InputManagerSDL::keyid_to_string(SDLKey id)
 {
-  current_ = this;
-  
-  int num_joysticks = SDL_NumJoysticks();
+  return SDL_GetKeyName(id);
+}
 
-  if (num_joysticks > 0)
-    /*SDL_Joystick* joy =*/ SDL_JoystickOpen(0);
+SDLKey
+InputManagerSDL::string_to_keyid(const std::string& str)
+{
+  return impl->keyidmapping[str];
+}
 
-  //SDLK_LAST
+void
+InputManagerSDL::ensure_open_joystick(int device)
+{
+  if (device >= int(impl->joysticks.size()))
+    impl->joysticks.resize(device + 1, 0);
 
-  bind_joystick_button(PDA_BUTTON,       0, 0);
-  bind_joystick_button(TERTIARY_BUTTON,  0, 1);
-  bind_joystick_button(SECONDARY_BUTTON, 0, 2);
-  bind_joystick_button(PRIMARY_BUTTON,   0, 3);
-  bind_joystick_button(AIM_BUTTON,       0, 7);
-  bind_joystick_button(PAUSE_BUTTON,     0, 9);
-
-  bind_joystick_axis(X_AXIS, 0, 0);
-  bind_joystick_axis(Y_AXIS, 0, 1);
-
-  if (1)
+  if (!impl->joysticks[device])
     {
-      bind_keyboard_button(PDA_BUTTON,       SDLK_w);
-      bind_keyboard_button(TERTIARY_BUTTON,  SDLK_a);
-      bind_keyboard_button(SECONDARY_BUTTON, SDLK_d);
-      bind_keyboard_button(PRIMARY_BUTTON,   SDLK_s);
-      bind_keyboard_button(AIM_BUTTON,       SDLK_LSHIFT);
-      bind_keyboard_button(PAUSE_BUTTON,     SDLK_p);
+      if (SDL_Joystick* joystick = SDL_JoystickOpen(device))
+        {
+          impl->joysticks[device] = joystick;
+        }
+      else
+        {
+          std::cout << "InputManagerSDL: Couldn't open joystick device " << device << std::endl;
+        }
     }
+  
+}
+
+static bool has_suffix(const std::string& str, const std::string& suffix)
+{
+  if (str.length() >= suffix.length())
+    return str.compare(str.length() - suffix.length(), suffix.length(), suffix) == 0;
   else
+    return false;
+}
+
+void
+InputManagerSDL::parse_config(const lisp::Lisp* lisp)
+{
+  ControllerDef controller_def;
+  
+  lisp::Properties cur(lisp);
+  lisp::PropertyIterator<const lisp::Lisp*> iter = cur.get_iter();
+
+  while(iter.next()) 
     {
-      bind_keyboard_button(PDA_BUTTON,       SDLK_COMMA);
-      bind_keyboard_button(TERTIARY_BUTTON,  SDLK_a);
-      bind_keyboard_button(SECONDARY_BUTTON, SDLK_e);
-      bind_keyboard_button(PRIMARY_BUTTON,   SDLK_o);
-      bind_keyboard_button(AIM_BUTTON,       SDLK_LSHIFT);
-      bind_keyboard_button(PAUSE_BUTTON,     SDLK_p);
+      if (has_suffix(iter.item(), "-button"))
+        {
+          lisp::Properties dev_prop(*iter);
+          lisp::PropertyIterator<const lisp::Lisp*> dev_iter = dev_prop.get_iter();
+          while(dev_iter.next())
+            {
+              if (dev_iter.item() == "joystick-button")
+                {
+                  int device = 0;
+                  int button = 0;
+
+                  lisp::Properties props(*dev_iter);
+                  props.get("device", device);
+                  props.get("button", button);
+
+                  bind_joystick_button(controller_def.button_name2id(iter.item()),
+                                       device, button);
+                }
+              else if (dev_iter.item() == "keyboard-button")
+                {
+                  std::string key;
+
+                  lisp::Properties props(*dev_iter);
+                  props.get("key", key);
+
+                  bind_keyboard_button(controller_def.button_name2id(iter.item()), 
+                                       string_to_keyid(key));
+                }
+              else
+                {
+                  std::cout << "InputManagerSDL: Unknown tag: " << dev_iter.item() << std::endl;
+                }
+            }
+        }
+      else if (has_suffix(iter.item(), "-axis"))
+        {
+          lisp::Properties dev_prop(*iter);
+          lisp::PropertyIterator<const lisp::Lisp*> dev_iter = dev_prop.get_iter();
+          while(dev_iter.next())
+            {
+              if (dev_iter.item() == "joystick-axis")
+                {
+                  int device = 0;
+                  int axis   = 0;
+
+                  lisp::Properties props(*dev_iter);
+                  props.get("device", device);
+                  props.get("axis",   axis);
+
+                  bind_joystick_axis(controller_def.axis_name2id(iter.item()), device, axis);
+                }
+              else if (dev_iter.item() == "keyboard-axis")
+                {
+                  std::string minus;
+                  std::string plus;
+
+                  lisp::Properties props(*dev_iter);
+                  props.get("minus", minus);
+                  props.get("plus",  plus);
+
+                  bind_keyboard_axis(controller_def.axis_name2id(iter.item()), 
+                                     string_to_keyid(minus), string_to_keyid(plus));
+                }
+              else
+                {
+                  std::cout << "InputManagerSDL: Unknown tag: " << dev_iter.item() << std::endl;
+                }
+            }
+
+        }
     }
 
-  bind_keyboard_axis(X_AXIS, SDLK_LEFT, SDLK_RIGHT);
-  bind_keyboard_axis(Y_AXIS, SDLK_UP, SDLK_DOWN);
 }
 
+InputManagerSDL::InputManagerSDL(const lisp::Lisp* lisp)
+  : impl(new InputManagerSDLImpl)
+{
+  current_ = this;
+
+  for (int i = 0; i < SDLK_LAST; ++i)
+    impl->keyidmapping[SDL_GetKeyName(static_cast<SDLKey>(i))] = static_cast<SDLKey>(i);
+
+  parse_config(lisp);
+}
+
 InputManagerSDL::~InputManagerSDL()
 {
 }
@@ -266,6 +362,8 @@
 void
 InputManagerSDL::bind_joystick_axis(int event, int device, int axis)
 {
+  ensure_open_joystick(device);
+
   JoystickAxisBinding binding;
 
   binding.event  = event;
@@ -278,6 +376,8 @@
 void
 InputManagerSDL::bind_joystick_button(int event, int device, int button)
 {
+  ensure_open_joystick(device);
+
   JoystickButtonBinding binding;
 
   binding.event  = event;

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-06 22:13:39 UTC (rev 937)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-06 23:13:02 UTC (rev 938)
@@ -26,10 +26,10 @@
 #ifndef HEADER_INPUT_MANAGER_SDL_HPP
 #define HEADER_INPUT_MANAGER_SDL_HPP
 
+#include <SDL.h>
 #include "input_manager_impl.hpp"
+#include "lisp/lisp.hpp"
 
-#include <SDL.h>
-
 class InputManagerSDLImpl;
 
 /** */
@@ -40,7 +40,7 @@
 public:
   static InputManagerSDL* current() { return current_; }
 
-  InputManagerSDL();
+  InputManagerSDL(const lisp::Lisp* lisp);
   virtual ~InputManagerSDL();
 
   void update(float delta);
@@ -53,12 +53,20 @@
   void bind_keyboard_button(int event, SDLKey key);
   void bind_keyboard_axis(int event, SDLKey minus, SDLKey plus);
   
+  std::string keyid_to_string(SDLKey id);
+  SDLKey string_to_keyid(const std::string& str);
+
   void on_event(const SDL_Event& event);
 private:
   void on_key_event(const SDL_KeyboardEvent& key);
   void on_joy_button_event(const SDL_JoyButtonEvent& button);
   void on_joy_axis_event(const SDL_JoyAxisEvent& button);
   
+  /** Ensure that the joystick device \a device is open */
+  void ensure_open_joystick(int device);
+
+  void parse_config(const lisp::Lisp* lisp);
+
   std::auto_ptr<InputManagerSDLImpl> impl;
 
   InputManagerSDL (const InputManagerSDL&);



From grumbel at berlios.de  Mon Aug  8 14:29:38 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 8 Aug 2005 14:29:38 +0200
Subject: [Windstille-commit] r943 - trunk/src
Message-ID: <200508081229.j78CTcuW030961@sheep.berlios.de>

Author: grumbel
Date: 2005-08-08 14:29:37 +0200 (Mon, 08 Aug 2005)
New Revision: 943

Modified:
   trunk/src/text_area.cpp
Log:
- some error checking

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-07 22:00:00 UTC (rev 942)
+++ trunk/src/text_area.cpp	2005-08-08 12:29:37 UTC (rev 943)
@@ -55,6 +55,7 @@
 TextArea::TextArea(const Rectf& rect, bool letter_by_letter)
   : impl(new TextAreaImpl)
 {
+  impl->font = 0;
   impl->rect    = rect;
   // FIXME: freetype might provide info for vspacing, not sure
   impl->v_space = 2;
@@ -125,6 +126,8 @@
 void
 TextArea::draw()
 {
+  assert(impl->font);
+
   OpenGLState state;
   
   state.enable(GL_TEXTURE_2D);



From grumbel at berlios.de  Mon Aug  8 18:26:13 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 8 Aug 2005 18:26:13 +0200
Subject: [Windstille-commit] r944 - in trunk/src: . input
Message-ID: <200508081626.j78GQDR3009412@sheep.berlios.de>

Author: grumbel
Date: 2005-08-08 18:26:06 +0200 (Mon, 08 Aug 2005)
New Revision: 944

Modified:
   trunk/src/controller_def.hpp
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/game_session.cpp
   trunk/src/input/controller.cpp
   trunk/src/input/controller.hpp
   trunk/src/player.cpp
   trunk/src/screen.hpp
Log:
- added some symbolic defines for primary, secondary, terticary buttons
- added axis_was_pressed() function

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/controller_def.hpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -33,15 +33,18 @@
   { 
     PRIMARY_BUTTON,   // used to ok a dialog or for running
     SECONDARY_BUTTON, // used to cancel a dialog or for jumping
-    TERTIARY_BUTTON, // used to cancel a dialog or for jumping
+    TERTIARY_BUTTON,  // used to cancel a dialog or for jumping
     PDA_BUTTON,       // display the PDA
     
     PAUSE_BUTTON,     // used to pause the game
     AIM_BUTTON,       // used to draw the gun and aim
   };
 
-#define JUMP_BUTTON SECONDARY_BUTTON
-#define RUN_BUTTON PRIMARY_BUTTON
+#define JUMP_BUTTON PRIMARY_BUTTON
+#define RUN_BUTTON  SECONDARY_BUTTON
+#define USE_BUTTON  TERTIARY_BUTTON
+#define OK_BUTTON   PRIMARY_BUTTON
+#define CANCEL_BUTTON SECONDARY_BUTTON
 
 /** */
 class ControllerDef

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/conversation.cpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -104,7 +104,7 @@
         {
           switch (i->button.name)
             {
-            case PRIMARY_BUTTON:
+            case OK_BUTTON:
               active = false;
               GameSession::current()->pda.add_dialog("Jane", choices[selection]);
               choices.clear();

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/dialog_manager.cpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -114,7 +114,7 @@
   text_area->update(delta);
 
   delay += delta;
-  if (InputManager::get_controller().get_button_state(PRIMARY_BUTTON) 
+  if (InputManager::get_controller().get_button_state(OK_BUTTON) 
       && delay > 0.2 && progress * text_speed < text.size())
     progress = int(text.size()) / text_speed;
   else
@@ -126,7 +126,7 @@
     {
       if ((*i).type == BUTTON_EVENT)
         {
-          if ((*i).button.name == PRIMARY_BUTTON && (*i).button.down == true
+          if ((*i).button.name == OK_BUTTON && (*i).button.down == true
               && int(progress * text_speed) > int(text.size()))
             {
               GameSession::current()->set_game_state();

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/game_session.cpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -115,7 +115,6 @@
 void
 GameSession::draw()
 {
-  //std::cout << gluErrorString(glGetError()) << std::endl;
   draw_game();
 
   switch (fade_state)
@@ -145,10 +144,10 @@
 void
 GameSession::update(float delta)
 {  
-  if (InputManager::get_controller().button_pressed(PDA_BUTTON))
+  if (InputManager::get_controller().button_was_pressed(PDA_BUTTON))
     pda.set_active(!pda.is_active());
 
-  if (InputManager::get_controller().button_pressed(PAUSE_BUTTON))
+  if (InputManager::get_controller().button_was_pressed(PAUSE_BUTTON))
     pause = !pause;
 
   Uint8 *keystate = SDL_GetKeyState(NULL);

Modified: trunk/src/input/controller.cpp
===================================================================
--- trunk/src/input/controller.cpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/input/controller.cpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -91,7 +91,7 @@
 }
 
 bool
-Controller::button_pressed(int name)
+Controller::button_was_pressed(int name)
 {
   for(InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
     {
@@ -103,4 +103,30 @@
   return false;
 }
 
+bool
+Controller::axis_was_pressed_up(int name)
+{
+  for(InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
+    {
+      if (i->type == AXIS_EVENT && i->axis.name == name && i->axis.pos > 0.5f)
+        {
+          return true;
+        }
+    }
+  return false;  
+}
+
+bool
+Controller::axis_was_pressed_down(int name)
+{
+  for(InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
+    {
+      if (i->type == AXIS_EVENT && i->axis.name == name && i->axis.pos < -0.5f)
+        {
+          return true;
+        }
+    }
+  return false;
+}
+
 /* EOF */

Modified: trunk/src/input/controller.hpp
===================================================================
--- trunk/src/input/controller.hpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/input/controller.hpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -55,7 +55,15 @@
 
   /** Convenience function that searches for a button down event for
       the given button */
-  bool button_pressed(int name);
+  bool button_was_pressed(int name);
+
+  /** Convenience function that searches for a AxisMove event that
+      pushed the axis up */
+  bool axis_was_pressed_up(int name);
+
+  /** Convenience function that searches for a AxisMove event that
+      pushed the axis down */
+  bool axis_was_pressed_down(int name);
 };
 
 #endif

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/player.cpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -221,7 +221,7 @@
 void
 Player::update_stand()
 { 
-  if(controller.button_pressed(PRIMARY_BUTTON))
+  if(controller.button_was_pressed(USE_BUTTON))
     {
       Entity* obj = find_useable_entity();
       if (obj)

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-08 12:29:37 UTC (rev 943)
+++ trunk/src/screen.hpp	2005-08-08 16:26:06 UTC (rev 944)
@@ -34,11 +34,12 @@
   void poll_events();
 
 protected:  
-  int frames;
+  int   frames;
   float time_counter;
-  int fps_counter;
-  int fps_save;
+  int   fps_counter;
+  int   fps_save;
   float overlap_delta;
+
 public:
   Screen();
   virtual ~Screen();



From grumbel at berlios.de  Mon Aug  8 18:48:07 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 8 Aug 2005 18:48:07 +0200
Subject: [Windstille-commit] r945 - in trunk/src: . input scripting
Message-ID: <200508081648.j78Gm7no029867@sheep.berlios.de>

Author: grumbel
Date: 2005-08-08 18:47:57 +0200 (Mon, 08 Aug 2005)
New Revision: 945

Added:
   trunk/src/screen_manager.cpp
   trunk/src/screen_manager.hpp
Removed:
   trunk/src/windstille_error.cpp
   trunk/src/windstille_error.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/input/controller.cpp
   trunk/src/input/controller.hpp
   trunk/src/input/input_manager.cpp
   trunk/src/screen.cpp
   trunk/src/screen.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/windstille_main.cpp
   trunk/src/windstille_main.hpp
Log:
- removed WindstilleError
- added ScreenManager back

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/Jamfile	2005-08-08 16:47:57 UTC (rev 945)
@@ -76,8 +76,10 @@
         random.hpp
         screen.cpp
         screen.hpp
+        screen_manager.cpp
+        screen_manager.hpp
+        script_manager.cpp
         script_manager.hpp
-        script_manager.cpp
         scriptable_object.hpp
         scriptable_object.cpp
         sector.cpp
@@ -105,8 +107,6 @@
         util.hpp
         view.cpp
         view.hpp
-        windstille_error.cpp
-        windstille_error.hpp
         windstille_getters.hpp
         windstille_getters.cpp
         windstille_main.cpp

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/game_session.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -60,8 +60,6 @@
 
 #include "game_session.hpp"
 
-using namespace Windstille;
-
 GameSession* GameSession::current_ = 0; 
 
 GameSession::GameSession(const std::string& arg_filename)
@@ -142,12 +140,12 @@
 }
 
 void
-GameSession::update(float delta)
+GameSession::update(float delta, const Controller& controller)
 {  
-  if (InputManager::get_controller().button_was_pressed(PDA_BUTTON))
+  if (controller.button_was_pressed(PDA_BUTTON))
     pda.set_active(!pda.is_active());
 
-  if (InputManager::get_controller().button_was_pressed(PAUSE_BUTTON))
+  if (controller.button_was_pressed(PAUSE_BUTTON))
     pause = !pause;
 
   Uint8 *keystate = SDL_GetKeyState(NULL);

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/game_session.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -43,8 +43,7 @@
 class DialogManager;
 class Conversation;
 
-
-class GameSession : public Windstille::Screen
+class GameSession : public Screen
 {
 public:
   enum ControlState { DIALOG, GAME };
@@ -89,7 +88,7 @@
 
   void draw();
   void draw_game();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
   void handle_event(const SDL_Event& event);
 
   void quit();

Modified: trunk/src/input/controller.cpp
===================================================================
--- trunk/src/input/controller.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/input/controller.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -91,9 +91,9 @@
 }
 
 bool
-Controller::button_was_pressed(int name)
+Controller::button_was_pressed(int name) const
 {
-  for(InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
+  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
     {
       if (i->type == BUTTON_EVENT && i->button.name == name && i->button.down)
         {
@@ -104,9 +104,9 @@
 }
 
 bool
-Controller::axis_was_pressed_up(int name)
+Controller::axis_was_pressed_up(int name) const
 {
-  for(InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
+  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
     {
       if (i->type == AXIS_EVENT && i->axis.name == name && i->axis.pos > 0.5f)
         {
@@ -117,9 +117,9 @@
 }
 
 bool
-Controller::axis_was_pressed_down(int name)
+Controller::axis_was_pressed_down(int name) const
 {
-  for(InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
+  for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
     {
       if (i->type == AXIS_EVENT && i->axis.name == name && i->axis.pos < -0.5f)
         {

Modified: trunk/src/input/controller.hpp
===================================================================
--- trunk/src/input/controller.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/input/controller.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -55,15 +55,15 @@
 
   /** Convenience function that searches for a button down event for
       the given button */
-  bool button_was_pressed(int name);
+  bool button_was_pressed(int name) const;
 
   /** Convenience function that searches for a AxisMove event that
       pushed the axis up */
-  bool axis_was_pressed_up(int name);
+  bool axis_was_pressed_up(int name) const;
 
   /** Convenience function that searches for a AxisMove event that
       pushed the axis down */
-  bool axis_was_pressed_down(int name);
+  bool axis_was_pressed_down(int name) const;
 };
 
 #endif

Modified: trunk/src/input/input_manager.cpp
===================================================================
--- trunk/src/input/input_manager.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/input/input_manager.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -26,7 +26,6 @@
 #include "lisp/parser.hpp"
 #include "lisp/lisp.hpp"
 #include "lisp/properties.hpp"
-#include "windstille_error.hpp"
 #include "input_manager_sdl.hpp"
 #include "input_manager_player.hpp"
 #include "input_manager_impl.hpp"

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/screen.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -67,7 +67,7 @@
   while (time_delta > step)
     {
       console.update(step);
-      update(step);
+      update(step, InputManager::get_controller());
       InputManager::clear();
   
       time_delta -= step;

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/screen.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -23,7 +23,7 @@
 #include <SDL.h>
 #include "signals/slot.hpp"
 
-namespace Windstille {
+class Controller;
 
 /** */
 class Screen
@@ -45,14 +45,12 @@
   virtual ~Screen();
 
   virtual void draw() =0;
-  virtual void update(float delta) =0;
+  virtual void update(float delta, const Controller& controller) =0;
   virtual void handle_event(const SDL_Event& event) =0;
 
   void display();
 };
 
-} // namespace Windstille
-
 #endif
 
 /* EOF */

Added: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/screen_manager.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -0,0 +1,78 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "game_session.hpp"
+#include "globals.hpp"
+#include "screen.hpp"
+#include "screen_manager.hpp"
+
+ScreenManager::ScreenManager()
+{
+  screen = 0;
+}
+
+ScreenManager::~ScreenManager()
+{
+}
+
+void
+ScreenManager::run()
+{
+  bool quit = false;
+  while (!quit)
+    {
+      switch (game_main_state)
+        {
+        case RUN_GAME:
+          screen->display();
+          break;
+
+        case LOAD_MENU:
+          // Fall through and load the game directly as long as we don't
+          // have a new menu
+        case LOAD_GAME_SESSION:
+          delete screen;
+          screen = new GameSession("levels/newformat2.wst");
+          game_main_state = RUN_GAME;
+          break;
+
+        case QUIT_GAME:
+          delete screen;
+          screen = 0;
+          quit = true;
+          break;
+        }
+    }
+ 
+}
+
+void
+ScreenManager::set_screen(Screen* s)
+{
+  delete screen;
+  screen = s;
+}
+
+/* EOF */

Added: trunk/src/screen_manager.hpp
===================================================================
--- trunk/src/screen_manager.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/screen_manager.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -0,0 +1,50 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_SCREEN_MANAGER_HPP
+#define HEADER_SCREEN_MANAGER_HPP
+
+class Screen;
+
+/** */
+class ScreenManager
+{
+private:
+  Screen* screen;
+
+public:
+  ScreenManager();
+  ~ScreenManager();
+
+  void run();
+  void set_screen(Screen* s);
+private:
+  ScreenManager (const ScreenManager&);
+  ScreenManager& operator= (const ScreenManager&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/scripting/wrapper.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/scripting/wrapper.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Deleted: trunk/src/windstille_error.cpp
===================================================================
--- trunk/src/windstille_error.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/windstille_error.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -1,43 +0,0 @@
-//  $Id: windstille_error.cxx,v 1.1 2003/11/05 22:51:27 grumbel Exp $
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 1999 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include "windstille_error.hpp"
-
-WindstilleError::WindstilleError (const std::string& mes) 
-  : message("WindstilleError: " + mes)
-{
-}
-
-WindstilleError::~WindstilleError() throw()
-{
-}
-
-const std::string&
-WindstilleError::get_message () const
-{
-  return message;
-}
-
-const char* 
-WindstilleError::what() const throw()
-{
-  return message.c_str(); 
-}
-
-/* EOF */

Deleted: trunk/src/windstille_error.hpp
===================================================================
--- trunk/src/windstille_error.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/windstille_error.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -1,42 +0,0 @@
-//  $Id: windstille_error.hpp,v 1.1 2003/11/05 22:51:27 grumbel Exp $
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_WINDSTILLE_ERROR_HXX
-#define HEADER_WINDSTILLE_ERROR_HXX
-
-#include <string>
-#include <exception>
-
-/** A WindstilleError is thrown in situation where an error occured due to
-    invalid user input, file not found events or similar stuff. */
-class WindstilleError : public std::exception
-{
-protected:
-  std::string message;
-public:
-  WindstilleError(const std::string& mes);
-  ~WindstilleError() throw();
-
-  const std::string& get_message () const;
-  const char* what() const throw();
-};
-
-#endif
-
-/* EOF */

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/windstille_main.cpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -25,12 +25,11 @@
 
 #include <physfs.h>
 
-#include "windstille_error.hpp"
 #include "globals.hpp"
 #include "screen.hpp"
-#include "game_session.hpp"
 #include "windstille_main.hpp"
 #include "fonts.hpp"
+#include "game_session.hpp"
 #include "sector.hpp"
 #include "input/input_manager.hpp"
 #include "sound/sound_manager.hpp"
@@ -44,13 +43,11 @@
 #include "glutil/surface_manager.hpp"
 #include "glutil/texture_manager.hpp"
 #include "sprite3d/manager.hpp"
+#include "screen_manager.hpp"
 #include "command_line.hpp"
 #include "sprite2d/manager.hpp"
 
-using namespace Windstille;
-
 WindstilleMain::WindstilleMain()
-  : screen(0)
 {
   game_main_state = LOAD_GAME_SESSION;
 }
@@ -199,6 +196,8 @@
     
     if (debug) std::cout << "Initialising TileFactory" << std::endl;
     TileFactory::init();
+
+    ScreenManager screen_manager;
     
     if (levelfile.empty())
       {
@@ -208,20 +207,18 @@
       {
         std::string leveldir = dirname(levelfile);
         PHYSFS_addToSearchPath(leveldir.c_str(), true);
-        screen = new GameSession(basename(levelfile));
+        screen_manager.set_screen(new GameSession(basename(levelfile)));
         game_main_state = RUN_GAME;
       }
-   
+    
     console << "Press F1 to open the console" << std::endl;
-    while (game_main());
+    screen_manager.run();
     
     TileFactory::deinit();
     InputManager::deinit();
 
     deinit_modules();
 
-  } catch (WindstilleError& err) {
-    std::cout << "WindstilleError: " << err.what() << std::endl;
   } catch (std::exception& err) {
     std::cout << "std::exception: " << err.what() << std::endl;
   } catch (...) {
@@ -412,33 +409,6 @@
     printf("[%s] is in the search path.\n", *i);
 }
 
-bool
-WindstilleMain::game_main()
-{
-  switch (game_main_state)
-    {
-    case RUN_GAME:
-      screen->display();
-      break;
-
-    case LOAD_MENU:
-      // Fall through and load the game directly as long as we don't
-      // have a new menu
-    case LOAD_GAME_SESSION:
-      delete screen;
-      screen = new GameSession("levels/newformat2.wst");
-      game_main_state = RUN_GAME;
-      break;
-
-    case QUIT_GAME:
-      delete screen;
-      screen = 0;
-      return false;
-    }
-  
-  return true;
-}
-
 int main(int argc, char** argv)
 {
   WindstilleMain main_app;

Modified: trunk/src/windstille_main.hpp
===================================================================
--- trunk/src/windstille_main.hpp	2005-08-08 16:26:06 UTC (rev 944)
+++ trunk/src/windstille_main.hpp	2005-08-08 16:47:57 UTC (rev 945)
@@ -51,9 +51,6 @@
   void parse_command_line(int argc, char** argv);
   void init_modules();
   void deinit_modules();
-  bool game_main();
-
-  Windstille::Screen* screen;
 };
 
 #endif



From grumbel at berlios.de  Mon Aug  8 20:34:50 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 8 Aug 2005 20:34:50 +0200
Subject: [Windstille-commit] r946 - in trunk/src: . scripting
Message-ID: <200508081834.j78IYoXt004558@sheep.berlios.de>

Author: grumbel
Date: 2005-08-08 20:34:49 +0200 (Mon, 08 Aug 2005)
New Revision: 946

Modified:
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/globals.cpp
   trunk/src/globals.hpp
   trunk/src/screen.cpp
   trunk/src/screen.hpp
   trunk/src/screen_manager.cpp
   trunk/src/screen_manager.hpp
   trunk/src/scripting/interface.cpp
   trunk/src/tile_packer.cpp
   trunk/src/windstille_main.cpp
Log:
- moved some screen code into the screenmanager

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/game_session.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -37,6 +37,7 @@
 #include "game_object.hpp"
 #include "player.hpp"
 #include "tile_map.hpp"
+#include "screen_manager.hpp"
 #include "view.hpp"
 #include "timer.hpp"
 #include "energy_bar.hpp"
@@ -63,23 +64,23 @@
 GameSession* GameSession::current_ = 0; 
 
 GameSession::GameSession(const std::string& arg_filename)
-  : sector (0)
+  : sector (0),
+    filename(arg_filename)
 {
   if (debug) std::cout << "Creating new GameSession" << std::endl;
   current_ = this;
-  
+
   view           = new View();  
   energy_bar     = new EnergyBar();
   dialog_manager = new DialogManager();
   conversation   = new Conversation();
 
-  filename = arg_filename;
+  pause = false;
   
   if (1)
     script_manager->run_script_file("scripts/init_script_vars.nut");
     
-  change_sector();
-  pause = false;
+  set_sector(filename);
 }
 
 GameSession::~GameSession()
@@ -175,14 +176,25 @@
             fade_state = RUNNING;
           fadeout_value += delta;
           break;
+
         case FADEOUT:
           if (fadeout_value > 1.0f)
             {
-              if (target_state == LOAD_GAME_SESSION)
-                change_sector();
-              else
-                game_main_state = target_state;
+              switch(next_action)
+                {
+                case CHANGE_SECTOR_ACTION:
+                  set_sector(filename);
+                  break;
+
+                case QUIT_ACTION:
+                  screen_manager.quit();
+                  break;
+
+                default:
+                  break;
+                }
             }
+
           fadeout_value += delta;
           break;
 
@@ -210,39 +222,40 @@
 }
 
 void
-GameSession::change_sector()
+GameSession::change_sector(const std::string& arg_filename)
 {
-  if (sector)
-    delete sector;
+  filename = arg_filename;
+ 
+  sound_manager->stop_music();
 
+  fade_state    = FADEOUT;
+  fadeout_value = 0;
+  next_action   = CHANGE_SECTOR_ACTION;
+}
+
+void
+GameSession::set_sector(const std::string& arg_filename)
+{
+  delete sector;
   sector = new Sector(filename);
-  fade_state = FADEIN;
-  fadeout_value = 0;
-  control_state = GAME;
-  target_state = RUN_GAME;
+ 
   GameObject::set_world(sector);
-  
+
   //FIXME: does the TestObject class still need to exist?
   //sector->add(new TestObject());
   
   sector->spawn_player("default");
   sector->activate();
-  
+    
+  fade_state    = FADEIN;
+  fadeout_value = 0;
+  control_state = GAME;
+  next_action   = NO_ACTION;
+
   if (debug) std::cout << "Finished changing sector" << std::endl;
 }
 
 void
-GameSession::set_sector(const std::string& arg_filename)
-{
-  target_state = LOAD_GAME_SESSION;
-  filename = arg_filename;
-  
-  fadeout_value = 0;
-  sound_manager->stop_music();
-  fade_state = FADEOUT;
-}
-
-void
 GameSession::handle_event(const SDL_Event& event)
 {
   switch(event.type)
@@ -301,11 +314,10 @@
 {
   if (fade_state != FADEOUT)
     {
-      target_state = LOAD_MENU;
-      
       fadeout_value = 0;
       sound_manager->stop_music();
       fade_state = FADEOUT;
+      next_action = QUIT_ACTION;
     }
 }
 

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/game_session.hpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -54,21 +54,23 @@
 
   ControllerHelpWindow controller_help_window;
 
-  std::string filename;
-  Sector* sector;
-  View* view;
-  EnergyBar* energy_bar;
+  Sector*        sector;
+  View*          view;
+  EnergyBar*     energy_bar;
   DialogManager* dialog_manager;
   Conversation*  conversation;
+
+  std::string filename;
+
   bool pause;
 
+  enum { NO_ACTION, QUIT_ACTION, CHANGE_SECTOR_ACTION } next_action;
+  
   enum { FADEIN, RUNNING, FADEOUT } fade_state;
   ControlState control_state;
-  GameMainState target_state;
 
-  void change_sector ();
+  static GameSession* current_; 
 
-  static GameSession* current_; 
 public:
   static GameSession* current() { return current_; } 
 
@@ -81,8 +83,13 @@
 
   void set_dialog_state() { control_state = DIALOG; }
   void set_game_state()   { control_state = GAME; }
-  void set_sector(const std::string& arg_filename);
-  
+
+  /** Switches the sector instantly without fadeout */
+  void set_sector(const std::string& filename);
+
+  /** Fades out then switches sectors and fades in again */
+  void change_sector(const std::string& filename);
+
   ControlState get_game_state() const { return control_state; }
   const std::string& get_filename () const { return filename; }
 

Modified: trunk/src/globals.cpp
===================================================================
--- trunk/src/globals.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/globals.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -1,4 +1,4 @@
-//  $Id: globals.cxx,v 1.6 2003/11/07 22:41:18 grumbel Exp $
+//  $Id$
 //
 //  Pingus - A free Lemmings clone
 //  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
@@ -33,6 +33,5 @@
 #endif
 bool collision_debug = false;
 bool sound_disabled = false;
-GameMainState game_main_state;
 
 /* EOF */

Modified: trunk/src/globals.hpp
===================================================================
--- trunk/src/globals.hpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/globals.hpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -40,7 +40,6 @@
 extern bool collision_debug;
 
 enum GameMainState { RUN_GAME, LOAD_MENU, LOAD_GAME_SESSION, QUIT_GAME };
-extern GameMainState game_main_state;
 
 #endif
 

Modified: trunk/src/screen.cpp
===================================================================
--- trunk/src/screen.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/screen.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -33,181 +33,13 @@
 namespace Windstille {
 
 Screen::Screen()
-  : frames(0),
-    time_counter(0),
-    fps_counter(0),
-    fps_save(0),
-    overlap_delta(0)
 {
-  ticks = SDL_GetTicks();
 }
 
 Screen::~Screen()
 {
 }
 
-void 
-Screen::display()
-{
-  /// Amount of time the world moves forward each update(), this is
-  /// independed of the number of frames and always constant
-  static const float step = 10/1000.0f;
-
-  Uint32 now = SDL_GetTicks();
-  float delta = static_cast<float>(now - ticks) / 1000.0f;
-  ticks = now;
-  
-  /*only used in debug. Limits page flipping so one can see what the framerate
-  is like without it being clipped by vsync*/  
-  static int last_flip_time = 0;
-
-  ++frames;
- 
-  float time_delta = delta + overlap_delta;
-  while (time_delta > step)
-    {
-      console.update(step);
-      update(step, InputManager::get_controller());
-      InputManager::clear();
-  
-      time_delta -= step;
-    }
-
-  overlap_delta = time_delta;
-
-  sound_manager->update();
-
-  {
-    draw();
-    
-    if (config->show_fps)
-      draw_fps(delta);
- 
-    console.draw();
-  }
-
-  if (!debug || now - last_flip_time > 20)
-    {
-      SDL_GL_SwapBuffers();
-      last_flip_time = now;
-    }
-  ++frames;
-
-  poll_events();
-}
-
-void 
-Screen::draw_fps(float delta)
-{
-  time_counter += delta;
-  ++fps_counter;
-
-  if(time_counter > 1) {
-    fps_save = fps_counter;
-    time_counter = fmodf(time_counter, 1.0);
-    fps_counter = 0;
-  }
-  
-  char output[20];
-  snprintf(output, sizeof(output), "FPS: %d", fps_save);
-  
-  Fonts::ttffont->draw(Display::get_width() - 100, 30, output);
-}
-
-void
-Screen::poll_events()
-{
-  SDL_Event event;
-  while(SDL_PollEvent(&event))
-    {
-      switch(event.type)
-        {
-        case SDL_QUIT:
-          // FIXME: This should be a bit more gentle, but will do for now
-          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
-          exit(EXIT_SUCCESS);
-          break;
-          
-        case SDL_ACTIVEEVENT:
-          // event.active
-          break;
-          
-        case SDL_VIDEORESIZE:
-          // event.resize
-          break;
-              
-        case SDL_VIDEOEXPOSE:
-          // event.expose
-          break;
-                
-        case SDL_USEREVENT:
-          // event.user
-          break;
-                    
-        case SDL_SYSWMEVENT:
-          // event.syswm
-          break;
-          break;
-
-        case SDL_KEYDOWN:
-        case SDL_KEYUP:
-          if (event.key.state)
-            {    
-              switch (event.key.keysym.sym)
-                {               
-                case SDLK_F10:
-                  config->show_fps = ! (config->show_fps);
-                  break;
-              
-                case SDLK_F11:
-                  config->use_fullscreen = ! (config->use_fullscreen);
-                  Display::set_fullscreen(config->use_fullscreen);
-                  break;
-              
-                case SDLK_F12:
-                  // FIXME: Implement me for SDL
-                  {
-                    std::string filename = "screenshot.png";
-                    std::cout << "Saving screenshot *NOT* to: " << filename << std::endl;
-                  }
-                  break;
-              
-                default:
-                  if (!console.is_active())
-                    handle_event(event);
-                  break;
-                }
-            }
-              
-          if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
-            {
-              console.activate();
-            }
-          else
-            {
-              if (InputManagerSDL::current())
-                InputManagerSDL::current()->on_event(event);
-            }
-          break;
-
-        case SDL_MOUSEBUTTONUP:
-        case SDL_MOUSEMOTION:
-        case SDL_JOYAXISMOTION:
-        case SDL_JOYBALLMOTION:
-        case SDL_JOYHATMOTION:
-        case SDL_JOYBUTTONUP:
-        case SDL_JOYBUTTONDOWN:
-          if (InputManagerSDL::current())
-            InputManagerSDL::current()->on_event(event);
-          break;
-        
-        default:
-          handle_event(event);
-          break;
-      }
-    }
-}
-
 } // namespace Windstille
 
 /* EOF */

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/screen.hpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -28,18 +28,6 @@
 /** */
 class Screen
 {
-private:
-  void draw_fps(float delta);
-  unsigned int ticks;
-  void poll_events();
-
-protected:  
-  int   frames;
-  float time_counter;
-  int   fps_counter;
-  int   fps_save;
-  float overlap_delta;
-
 public:
   Screen();
   virtual ~Screen();
@@ -47,8 +35,6 @@
   virtual void draw() =0;
   virtual void update(float delta, const Controller& controller) =0;
   virtual void handle_event(const SDL_Event& event) =0;
-
-  void display();
 };
 
 #endif

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/screen_manager.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -23,14 +23,29 @@
 **  02111-1307, USA.
 */
 
+#include <iostream>
 #include "game_session.hpp"
+#include "input/input_manager_sdl.hpp"
+#include "display/display.hpp"
 #include "globals.hpp"
 #include "screen.hpp"
+#include "fonts.hpp"
+#include "gameconfig.hpp"
+#include "input/input_manager.hpp"
+#include "sound/sound_manager.hpp"
 #include "screen_manager.hpp"
 
+ScreenManager screen_manager; 
+
 ScreenManager::ScreenManager()
+  : time_counter(0),
+    frame_counter(0),
+    last_fps(0),
+    overlap_delta(0),
+    do_quit(false)
 {
   screen = 0;
+  ticks = 0;
 }
 
 ScreenManager::~ScreenManager()
@@ -40,34 +55,159 @@
 void
 ScreenManager::run()
 {
-  bool quit = false;
-  while (!quit)
+  do_quit = false;
+
+  ticks = SDL_GetTicks();
+
+  while (!do_quit)
     {
-      switch (game_main_state)
+      /// Amount of time the world moves forward each update(), this is
+      /// independed of the number of frames and always constant
+      static const float step = 10/1000.0f;
+
+      Uint32 now = SDL_GetTicks();
+      float delta = static_cast<float>(now - ticks) / 1000.0f + overlap_delta;
+      ticks = now;
+
+      time_counter  += delta;
+
+      while (delta > step)
         {
-        case RUN_GAME:
-          screen->display();
+          console.update(step);
+          screen->update(step, InputManager::get_controller());
+          InputManager::clear();
+  
+          delta -= step;
+        }
+
+      overlap_delta = delta;
+
+      sound_manager->update();
+
+      screen->draw();
+      
+      console.draw();
+
+      if (config->show_fps)
+        draw_fps();
+
+      SDL_GL_SwapBuffers();
+      frame_counter += 1;
+
+      poll_events();
+    }
+}
+
+void
+ScreenManager::poll_events()
+{
+  SDL_Event event;
+  while(SDL_PollEvent(&event))
+    {
+      switch(event.type)
+        {
+        case SDL_QUIT:
+          // FIXME: This should be a bit more gentle, but will do for now
+          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
+          quit();
           break;
+          
+        case SDL_ACTIVEEVENT:
+          // event.active
+          break;
+          
+        case SDL_VIDEORESIZE:
+          // event.resize
+          break;
+              
+        case SDL_VIDEOEXPOSE:
+          // event.expose
+          break;
+                
+        case SDL_USEREVENT:
+          // event.user
+          break;
+                    
+        case SDL_SYSWMEVENT:
+          // event.syswm
+          break;
+          break;
 
-        case LOAD_MENU:
-          // Fall through and load the game directly as long as we don't
-          // have a new menu
-        case LOAD_GAME_SESSION:
-          delete screen;
-          screen = new GameSession("levels/newformat2.wst");
-          game_main_state = RUN_GAME;
+        case SDL_KEYDOWN:
+        case SDL_KEYUP:
+          if (event.key.state)
+            {    
+              switch (event.key.keysym.sym)
+                {               
+                case SDLK_F10:
+                  config->show_fps = ! (config->show_fps);
+                  break;
+              
+                case SDLK_F11:
+                  config->use_fullscreen = ! (config->use_fullscreen);
+                  Display::set_fullscreen(config->use_fullscreen);
+                  break;
+              
+                case SDLK_F12:
+                  // FIXME: Implement me for SDL
+                  {
+                    std::string filename = "screenshot.png";
+                    std::cout << "Saving screenshot *NOT* to: " << filename << std::endl;
+                  }
+                  break;
+              
+                default:
+                  if (!console.is_active())
+                    screen->handle_event(event);
+                  break;
+                }
+            }
+              
+          if (!console.is_active() && event.key.state && event.key.keysym.sym == SDLK_F1)
+            {
+              console.activate();
+            }
+          else
+            {
+              if (InputManagerSDL::current())
+                InputManagerSDL::current()->on_event(event);
+            }
           break;
 
-        case QUIT_GAME:
-          delete screen;
-          screen = 0;
-          quit = true;
+        case SDL_MOUSEBUTTONUP:
+        case SDL_MOUSEMOTION:
+        case SDL_JOYAXISMOTION:
+        case SDL_JOYBALLMOTION:
+        case SDL_JOYHATMOTION:
+        case SDL_JOYBUTTONUP:
+        case SDL_JOYBUTTONDOWN:
+          if (InputManagerSDL::current())
+            InputManagerSDL::current()->on_event(event);
           break;
-        }
+        
+        default:
+          screen->handle_event(event);
+          break;
+      }
     }
- 
 }
 
+void 
+ScreenManager::draw_fps()
+{
+  if(time_counter > 1) 
+    {
+      last_fps = int(frame_counter / time_counter);
+
+      time_counter  = fmodf(time_counter, 1.0);
+      frame_counter = 0;
+    }
+  
+  char output[20];
+  snprintf(output, sizeof(output), "FPS: %d", last_fps);
+  Fonts::ttffont->draw(Display::get_width() - 100, 30, output);
+}
+
 void
 ScreenManager::set_screen(Screen* s)
 {
@@ -75,4 +215,10 @@
   screen = s;
 }
 
+void
+ScreenManager::quit()
+{
+  do_quit = true;
+}
+
 /* EOF */

Modified: trunk/src/screen_manager.hpp
===================================================================
--- trunk/src/screen_manager.hpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/screen_manager.hpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -34,17 +34,31 @@
 private:
   Screen* screen;
 
+  unsigned int ticks;
+
+  float time_counter;
+  int   frame_counter;
+  int   last_fps;
+  float overlap_delta;
+  bool  do_quit;
+
 public:
   ScreenManager();
   ~ScreenManager();
 
   void run();
   void set_screen(Screen* s);
+  void quit();
 private:
+  void poll_events();
+  void draw_fps();
+
   ScreenManager (const ScreenManager&);
   ScreenManager& operator= (const ScreenManager&);
 };
 
+extern ScreenManager screen_manager; 
+
 #endif
 
 /* EOF */

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/scripting/interface.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -17,7 +17,7 @@
 
 void set_sector(const std::string& filename)
 {
-  GameSession::current()->set_sector(filename);
+  GameSession::current()->change_sector(filename);
 }
 
 void play_music(const std::string& musicfile)

Modified: trunk/src/tile_packer.cpp
===================================================================
--- trunk/src/tile_packer.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/tile_packer.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -21,7 +21,6 @@
 #include <assert.h>
 #include <GL/gl.h>
 #include <GL/glext.h>
-#include "windstille_error.hpp"
 #include "glutil/texture.hpp"
 #include "globals.hpp"
 #include "tile_packer.hpp"

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-08 16:47:57 UTC (rev 945)
+++ trunk/src/windstille_main.cpp	2005-08-08 18:34:49 UTC (rev 946)
@@ -49,7 +49,6 @@
 
 WindstilleMain::WindstilleMain()
 {
-  game_main_state = LOAD_GAME_SESSION;
 }
 
 WindstilleMain::~WindstilleMain()
@@ -197,20 +196,17 @@
     if (debug) std::cout << "Initialising TileFactory" << std::endl;
     TileFactory::init();
 
-    ScreenManager screen_manager;
-    
     if (levelfile.empty())
       {
-        game_main_state = LOAD_MENU;
+        screen_manager.set_screen(new GameSession("levels/newformat2.wst"));
       }
-    else 
+    else
       {
         std::string leveldir = dirname(levelfile);
         PHYSFS_addToSearchPath(leveldir.c_str(), true);
         screen_manager.set_screen(new GameSession(basename(levelfile)));
-        game_main_state = RUN_GAME;
       }
-    
+        
     console << "Press F1 to open the console" << std::endl;
     screen_manager.run();
     



From grumbel at berlios.de  Mon Aug  8 23:16:55 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 8 Aug 2005 23:16:55 +0200
Subject: [Windstille-commit] r947 - in trunk/src: . input
Message-ID: <200508082116.j78LGt1S002017@sheep.berlios.de>

Author: grumbel
Date: 2005-08-08 23:16:53 +0200 (Mon, 08 Aug 2005)
New Revision: 947

Modified:
   trunk/src/input/input_configurator.cpp
   trunk/src/input/input_configurator.hpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
   trunk/src/screen_manager.cpp
   trunk/src/screen_manager.hpp
Log:
- integrated controller config screen a bit more, press F9 to use it

Modified: trunk/src/input/input_configurator.cpp
===================================================================
--- trunk/src/input/input_configurator.cpp	2005-08-08 18:34:49 UTC (rev 946)
+++ trunk/src/input/input_configurator.cpp	2005-08-08 21:16:53 UTC (rev 947)
@@ -27,13 +27,14 @@
 #include "math/rect.hpp"
 #include "controller_def.hpp"
 #include "fonts.hpp"
+#include "screen_manager.hpp"
 #include "input/input_manager_sdl.hpp"
 #include "input_configurator.hpp"
 
 InputConfigurator::InputConfigurator()
-  : area(Rectf(120, 120,
-               Display::get_width()  - 220, 
-               Display::get_height() - 220), 
+  : area(Rectf(120, 100,
+               Display::get_width()  - 120, 
+               Display::get_height() - 100), 
          false)
 {
   out << "Input Configurator\n"
@@ -45,6 +46,7 @@
 
   area.set_font(Fonts::ttffont);
 
+  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, AIM_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, PDA_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, TERTIARY_BUTTON);
   add_configure_item(ConfigureItem::CONFIGURE_BUTTON, SECONDARY_BUTTON);
@@ -53,10 +55,9 @@
   add_configure_item(ConfigureItem::CONFIGURE_AXIS, Y_AXIS);
   add_configure_item(ConfigureItem::CONFIGURE_AXIS, X_AXIS);
 
+  print_item();
 
-  add_configure_item(ConfigureItem::CONFIGURE_BUTTON, AIM_BUTTON);
-
-  print_item();
+  InputManagerSDL::current()->clear_bindings();
 }
 
 InputConfigurator::~InputConfigurator()
@@ -78,9 +79,9 @@
 void
 InputConfigurator::draw()
 {
-  Rectf rect(100, 100,
-             Display::get_width()  - 200, 
-             Display::get_height() - 200);
+  Rectf rect(100, 75,
+             Display::get_width()  - 100, 
+             Display::get_height() - 75);
 
   Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
   Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f)); 
@@ -88,7 +89,7 @@
 }
 
 void
-InputConfigurator::update(float delta)
+InputConfigurator::update(float delta, const Controller& controller)
 {
   
 }
@@ -118,21 +119,28 @@
 void
 InputConfigurator::next_item()
 {
-  ControllerDef def;
-
   out << std::endl;
   items.pop_back();
 
+  if (items.empty())
+    {
+      out << "Controller configuration is done, pressy any key to continue" << std::endl;
+    }
+
   print_item();
 
   area.set_text(out.str());
 }
 
 void
-InputConfigurator::on_event(const SDL_Event& event)
+InputConfigurator::handle_event(const SDL_Event& event)
 {
   if (items.empty())
-    return; 
+    {
+      std::cout << "InputConfigurator: done" << std::endl;
+      screen_manager.set_overlay(0);
+      return; 
+    }
 
   switch(event.type)
     {        
@@ -189,7 +197,9 @@
     case SDL_KEYDOWN:
       if (event.key.keysym.sym == SDLK_ESCAPE)
         {
-          next_item();
+          std::cout << "InputConfigurator: abort" << std::endl;
+          screen_manager.set_overlay(0);
+          //next_item();
         }
       else
         {

Modified: trunk/src/input/input_configurator.hpp
===================================================================
--- trunk/src/input/input_configurator.hpp	2005-08-08 18:34:49 UTC (rev 946)
+++ trunk/src/input/input_configurator.hpp	2005-08-08 21:16:53 UTC (rev 947)
@@ -26,6 +26,7 @@
 #ifndef HEADER_INPUT_CONFIGURATOR_HPP
 #define HEADER_INPUT_CONFIGURATOR_HPP
 
+#include "screen.hpp"
 #include "text_area.hpp"
 
 struct ConfigureItem
@@ -36,7 +37,7 @@
 };
 
 /** */
-class InputConfigurator
+class InputConfigurator : public Screen
 {
 private:
   std::vector<ConfigureItem> items;
@@ -50,8 +51,8 @@
   ~InputConfigurator();
   
   void draw();
-  void update(float delta);
-  void on_event(const SDL_Event& event);
+  void update(float delta, const Controller& controller);
+  void handle_event(const SDL_Event& event);
   void add_configure_item(ConfigureItem::Mode mode, int event_id);
   void next_item();
   void print_item();

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-08 18:34:49 UTC (rev 946)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-08 21:16:53 UTC (rev 947)
@@ -383,4 +383,14 @@
   impl->keyboard_axis_bindings.push_back(binding);
 }
 
+void
+InputManagerSDL::clear_bindings()
+{
+  impl->joystick_button_bindings.clear();
+  impl->joystick_axis_bindings.clear();
+  
+  impl->keyboard_button_bindings.clear();
+  impl->keyboard_axis_bindings.clear();
+}
+
 /* EOF */

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-08 18:34:49 UTC (rev 946)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-08 21:16:53 UTC (rev 947)
@@ -80,6 +80,8 @@
   void bind_keyboard_button(int event, SDLKey key);
   void bind_keyboard_axis(int event, SDLKey minus, SDLKey plus);
   
+  void clear_bindings();
+
   std::string keyid_to_string(SDLKey id);
   SDLKey string_to_keyid(const std::string& str);
 

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-08 18:34:49 UTC (rev 946)
+++ trunk/src/screen_manager.cpp	2005-08-08 21:16:53 UTC (rev 947)
@@ -32,6 +32,7 @@
 #include "fonts.hpp"
 #include "gameconfig.hpp"
 #include "input/input_manager.hpp"
+#include "input/input_configurator.hpp"
 #include "sound/sound_manager.hpp"
 #include "screen_manager.hpp"
 
@@ -45,6 +46,9 @@
     do_quit(false)
 {
   screen = 0;
+  overlay_screen = 0;
+  next_overlay_screen = 0;
+  has_next_overlay_screen = false;
   ticks = 0;
 }
 
@@ -74,7 +78,11 @@
       while (delta > step)
         {
           console.update(step);
-          screen->update(step, InputManager::get_controller());
+          if (overlay_screen)
+            overlay_screen->update(step, InputManager::get_controller());
+          else
+            screen->update(step, InputManager::get_controller());
+                
           InputManager::clear();
   
           delta -= step;
@@ -85,7 +93,10 @@
       sound_manager->update();
 
       screen->draw();
-      
+
+      if (overlay_screen)
+        overlay_screen->draw();
+
       console.draw();
 
       if (config->show_fps)
@@ -94,6 +105,14 @@
       SDL_GL_SwapBuffers();
       frame_counter += 1;
 
+      if (has_next_overlay_screen)
+        {
+          delete overlay_screen;
+          overlay_screen = next_overlay_screen;
+          next_overlay_screen = 0;
+          has_next_overlay_screen = false;
+        }
+
       poll_events();
     }
 }
@@ -139,6 +158,10 @@
             {    
               switch (event.key.keysym.sym)
                 {               
+                case SDLK_F9:
+                  set_overlay(new InputConfigurator());
+                  break;
+
                 case SDLK_F10:
                   config->show_fps = ! (config->show_fps);
                   break;
@@ -158,7 +181,12 @@
               
                 default:
                   if (!console.is_active())
-                    screen->handle_event(event);
+                    {
+                    if (overlay_screen)
+                      overlay_screen->handle_event(event);
+                    else
+                      screen->handle_event(event);
+                    }
                   break;
                 }
             }
@@ -186,7 +214,10 @@
           break;
         
         default:
-          screen->handle_event(event);
+          if (overlay_screen)
+            overlay_screen->handle_event(event);
+          else              
+            screen->handle_event(event);
           break;
       }
     }
@@ -216,6 +247,13 @@
 }
 
 void
+ScreenManager::set_overlay(Screen* s)
+{
+  next_overlay_screen = s;
+  has_next_overlay_screen = true;
+}
+
+void
 ScreenManager::quit()
 {
   do_quit = true;

Modified: trunk/src/screen_manager.hpp
===================================================================
--- trunk/src/screen_manager.hpp	2005-08-08 18:34:49 UTC (rev 946)
+++ trunk/src/screen_manager.hpp	2005-08-08 21:16:53 UTC (rev 947)
@@ -33,7 +33,11 @@
 {
 private:
   Screen* screen;
+  Screen* overlay_screen;
 
+  Screen* next_overlay_screen;
+  bool    has_next_overlay_screen;
+
   unsigned int ticks;
 
   float time_counter;
@@ -46,9 +50,20 @@
   ScreenManager();
   ~ScreenManager();
 
+  /** Displays the previously set screen in until quit() is called */
   void run();
+
+  /** Breaks out of the run() function */
+  void quit();
+
+  /** Sets the currently active screen */
   void set_screen(Screen* s);
-  void quit();
+
+  /** Sets the overlay, which is a screen drawn on-top of the current
+      screen, usefull for menus or console, use set_overlay(0) to kill
+      the current overlay */
+  void set_overlay(Screen* s);
+
 private:
   void poll_events();
   void draw_fps();



From grumbel at berlios.de  Tue Aug  9 14:15:20 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 9 Aug 2005 14:15:20 +0200
Subject: [Windstille-commit] r948 - in trunk/src: . input
Message-ID: <200508091215.j79CFKI4006842@sheep.berlios.de>

Author: grumbel
Date: 2005-08-09 14:15:17 +0200 (Tue, 09 Aug 2005)
New Revision: 948

Removed:
   trunk/src/input/input_manager_custom.cpp
   trunk/src/input/input_manager_custom.hpp
Modified:
   trunk/src/console.cpp
   trunk/src/controller_def.cpp
   trunk/src/controller_def.hpp
   trunk/src/input/controller.cpp
   trunk/src/input/controller.hpp
   trunk/src/input/input_configurator.cpp
   trunk/src/input/input_manager.cpp
   trunk/src/input/input_manager.hpp
   trunk/src/input/input_manager_impl.cpp
   trunk/src/input/input_manager_impl.hpp
   trunk/src/input/input_manager_player.cpp
   trunk/src/input/input_manager_player.hpp
   trunk/src/input/input_manager_sdl.cpp
Log:
- little bit of restructuring in the input code

Modified: trunk/src/console.cpp
===================================================================
--- trunk/src/console.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/console.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -211,7 +211,6 @@
             {
               if ((*i).keyboard.key_type == KeyboardEvent::LETTER)
                 {
-                  //std::cout << "Key: '" << (char)((*i).keyboard.code) << "' " << (*i).keyboard.code << std::endl;
                   if (cursor_pos == int(command_line.size()))
                     {
                       command_line += (char)(*i).keyboard.code;

Modified: trunk/src/controller_def.cpp
===================================================================
--- trunk/src/controller_def.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/controller_def.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -42,72 +42,46 @@
 void
 ControllerDef::add_button(const std::string& name, int id)
 {
-  buttons[name] = id;
+  InputEventDefinition event;
+
+  event.type = BUTTON_EVENT;
+  event.name = name;
+  event.id   = id;
+
+  str_to_event[event.name] = event;
+  id_to_event[event.id]    = event;
 }
 
 void
 ControllerDef::add_axis  (const std::string& name, int id)
 {
-  axes[name] = id;
-}
+  InputEventDefinition event;
 
-int
-ControllerDef::get_button_count() const
-{
-  return buttons.size();
-}
+  event.type = AXIS_EVENT;
+  event.name = name;
+  event.id   = id;
 
-int
-ControllerDef::get_axis_count() const
-{
-  return axes.size();
+  str_to_event[event.name] = event;
+  id_to_event[event.id]    = event;
 }
 
-int
-ControllerDef::get_keyboard_count() const
+const InputEventDefinition&
+ControllerDef::get_definition(int id) const
 {
-  return 1;
-}
+  std::map<int, InputEventDefinition>::const_iterator i = id_to_event.find(id);
+  if (i == id_to_event.end())
+    throw std::runtime_error("Unknown event id");
 
-std::string
-ControllerDef::button_id2name(int id) const
-{
-  for(std::map<std::string, int>::const_iterator i = buttons.begin(); i != buttons.end(); ++i)
-    {
-      if (i->second == id)
-        return i->first;
-    }
-  throw std::runtime_error("Unknown button id");
-}
-
-int
-ControllerDef::button_name2id(const std::string& name) const
-{
-  std::map<std::string, int>::const_iterator i = buttons.find(name);
-  if (i == buttons.end())
-    throw std::runtime_error("Unknown button name: " + name);
-
   return i->second;
 }
 
-std::string
-ControllerDef::axis_id2name(int id) const
+const InputEventDefinition&
+ControllerDef::get_definition(const std::string& name) const
 {
-  for(std::map<std::string, int>::const_iterator i = axes.begin(); i != axes.end(); ++i)
-    {
-      if (i->second == id)
-        return i->first;
-    }
-  throw std::runtime_error("Unknown axis id");
-}
+  std::map<std::string, InputEventDefinition>::const_iterator i = str_to_event.find(name);
+  if (i == str_to_event.end())
+    throw std::runtime_error("Unknown event str");
 
-int 
-ControllerDef::axis_name2id(const std::string& name) const
-{
-  std::map<std::string, int>::const_iterator i = axes.find(name);
-  if (i == axes.end())
-    throw std::runtime_error("Unknown axis name: " + name);
-
   return i->second;
 }
 

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/controller_def.hpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -22,15 +22,13 @@
 
 #include <map>
 #include <string>
+#include "input/input_event.hpp"
 
-enum AxisName
+enum InputEventName
   { 
     X_AXIS, // used to run left/right
-    Y_AXIS  // used to aim up/down
-  };
+    Y_AXIS,  // used to aim up/down
 
-enum ButtonName
-  { 
     PRIMARY_BUTTON,   // used to ok a dialog or for running
     SECONDARY_BUTTON, // used to cancel a dialog or for jumping
     TERTIARY_BUTTON,  // used to cancel a dialog or for jumping
@@ -38,37 +36,43 @@
     
     PAUSE_BUTTON,     // used to pause the game
     AIM_BUTTON,       // used to draw the gun and aim
+
+    LAST_EVENT
   };
 
-#define JUMP_BUTTON PRIMARY_BUTTON
-#define RUN_BUTTON  SECONDARY_BUTTON
-#define USE_BUTTON  TERTIARY_BUTTON
-#define OK_BUTTON   PRIMARY_BUTTON
+#define JUMP_BUTTON   PRIMARY_BUTTON
+#define RUN_BUTTON    SECONDARY_BUTTON
+#define USE_BUTTON    TERTIARY_BUTTON
+#define OK_BUTTON     PRIMARY_BUTTON
 #define CANCEL_BUTTON SECONDARY_BUTTON
 
+struct InputEventDefinition 
+{
+  InputEventType type;
+  int            id;
+  std::string    name;
+};
+
 /** */
 class ControllerDef
 {
 private:
-  std::map<std::string, int> buttons;
-  std::map<std::string, int> axes;
+  std::map<std::string, InputEventDefinition> str_to_event;
+  std::map<int,         InputEventDefinition> id_to_event;
 
 public:
   ControllerDef();
   ~ControllerDef();
 
   void add_button(const std::string& name, int id);
-  void add_axis  (const std::string& name, int id);
+  void add_axis  (const std::string& name, int id); 
 
-  int         get_button_count()   const;
-  int         get_axis_count()     const;
-  int         get_keyboard_count() const;
+  int get_button_count() const;
+  int get_axis_count() const;
+  int get_keyboard_count() const;
 
-  std::string button_id2name(int id) const;
-  int         button_name2id(const std::string& name) const;
-
-  std::string axis_id2name(int id) const;
-  int         axis_name2id(const std::string& name) const;
+  const InputEventDefinition& get_definition(int id) const;
+  const InputEventDefinition& get_definition(const std::string& name) const;
 };
 
 #endif

Modified: trunk/src/input/controller.cpp
===================================================================
--- trunk/src/input/controller.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/controller.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -25,46 +25,47 @@
 {
   ControllerDef def;
 
-  buttons.resize(def.get_button_count());
-  axes.resize(def.get_axis_count());
+  states.resize(LAST_EVENT);
 }
 
 float
-Controller::get_axis_state(int name) const
+Controller::get_axis_state(int id) const
 {
-  assert(name < int(axes.size()));
-  return axes[name];
+  assert(id < int(states.size()));
+  return states[id].axis;
 }
         
 
 bool
-Controller::get_button_state(int name) const
+Controller::get_button_state(int id) const
 {
-  assert(name < int(buttons.size()));
-  return buttons[name];
+  assert(id < int(states.size()));
+  return states[id].button;
 }
 
 void
-Controller::set_axis_state(int name, float pos)
+Controller::set_axis_state(int id, float pos)
 {
-  assert(name < static_cast<int> (axes.size()));
-  axes[name] = pos;
+  assert(id < static_cast<int>(states.size()));
+  states[id].axis = pos;
 }
 
 void
 Controller::set_button_state(int name, bool down)
 {
-  assert(name < static_cast<int>(buttons.size()));
-  buttons[name] = down;
+  assert(name < static_cast<int>(states.size()));
+  states[name].button = down;
 }
 
 void
 Controller::add_axis_event(int name, float pos)
 {
   InputEvent event;
+
   event.type = AXIS_EVENT;
   event.axis.name = name;
   event.axis.pos  = pos;
+
   events.push_back(event);
 }
 
@@ -72,13 +73,15 @@
 Controller::add_button_event(int name, bool down)
 {
   InputEvent event;
+
   event.type = BUTTON_EVENT;
   event.button.name = name;
   event.button.down = down;
+
   events.push_back(event);
 }
 
-InputEventLst
+const InputEventLst&
 Controller::get_events() const
 {
   return events;
@@ -129,4 +132,16 @@
   return false;
 }
 
+void
+Controller::clear()
+{
+  events.clear();
+}
+
+void
+Controller::add_event(const InputEvent& event)
+{
+  events.push_back(event);
+}
+
 /* EOF */

Modified: trunk/src/input/controller.hpp
===================================================================
--- trunk/src/input/controller.hpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/controller.hpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -30,12 +30,12 @@
 class Controller
 {
 private:
-  /** State of all buttons, indexed by ButtonName */
-  std::vector<bool> buttons;
-  
-  /** State of all axis, indexed by AxisName */
-  std::vector<float> axes;
+  union State {
+    bool  button;
+    float axis;
+  };
 
+  std::vector<State> states;
   InputEventLst events;
 
 public:
@@ -50,7 +50,7 @@
   void add_axis_event  (int name, float pos);
   void add_button_event(int name, bool down);
 
-  InputEventLst get_events() const;
+  const InputEventLst& get_events() const;
   void set_events(const InputEventLst& lst);
 
   /** Convenience function that searches for a button down event for
@@ -64,6 +64,10 @@
   /** Convenience function that searches for a AxisMove event that
       pushed the axis down */
   bool axis_was_pressed_down(int name) const;
+
+  void clear();
+
+  void add_event(const InputEvent& event);
 };
 
 #endif

Modified: trunk/src/input/input_configurator.cpp
===================================================================
--- trunk/src/input/input_configurator.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_configurator.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -32,7 +32,8 @@
 #include "input_configurator.hpp"
 
 InputConfigurator::InputConfigurator()
-  : area(Rectf(120, 100,
+  : wait_for_plus(false),
+    area(Rectf(120, 100,
                Display::get_width()  - 120, 
                Display::get_height() - 100), 
          false)
@@ -105,11 +106,11 @@
       
       if (item.mode == ConfigureItem::CONFIGURE_AXIS)
         {
-          out << "Configuring " << def.axis_id2name(item.event_id) << ": " << std::endl;
+          out << "Configuring " << def.get_definition(item.event_id).name << ": " << std::endl;
         }
       else if (item.mode == ConfigureItem::CONFIGURE_BUTTON)
         {
-          out << "Configuring " << def.button_id2name(item.event_id) << ": " << std::endl;
+          out << "Configuring " << def.get_definition(item.event_id).name << ": " << std::endl;
         }
     }
 

Modified: trunk/src/input/input_manager.cpp
===================================================================
--- trunk/src/input/input_manager.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -81,7 +81,7 @@
     recorder->record(get_controller());
 }
 
-Controller
+const Controller&
 InputManager::get_controller()
 {
   assert(impl);

Modified: trunk/src/input/input_manager.hpp
===================================================================
--- trunk/src/input/input_manager.hpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager.hpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -46,7 +46,7 @@
   static void setup_recorder(const std::string& filename);
 
   static void update(float delta);
-  static Controller get_controller();
+  static const Controller& get_controller();
   static void clear();
 private:
   InputManager(const InputManager&);

Deleted: trunk/src/input/input_manager_custom.cpp
===================================================================
--- trunk/src/input/input_manager_custom.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_custom.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -1,167 +0,0 @@
-//  $Id$
-//
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-//
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#include <iostream>
-#include <ClanLib/Display/keyboard.h>
-#include <ClanLib/Display/joystick.h>
-#include <ClanLib/Display/display_iostream.h>
-#include <ClanLib/Display/keys.h>
-
-#include "lisp/lisp.hpp"
-#include "lisp/properties.hpp"
-#include "controller_def.hpp"
-#include "input_button_input_device.hpp"
-#include "input_axis_input_device.hpp"
-#include "input_keyboard_input_device.hpp"
-#include "button_factory.hpp"
-#include "axis_factory.hpp"
-
-#include "input_manager_custom.hpp"
-
-InputManagerCustom::InputManagerCustom(const lisp::Lisp* lisp)
-{
-  if (0) // FIXME: input disabled, change this to SDL
-    {
-      init(lisp);
-
-      for (int i = 0; i < (int)buttons.size(); ++i)
-        {
-          if (buttons[i])
-            {
-              slots.push_back(buttons[i]->on_key_down().connect(this, &InputManagerCustom::on_button_down, i));
-              slots.push_back(buttons[i]->on_key_up().connect  (this, &InputManagerCustom::on_button_up,   i));
-            }
-          else
-            {
-              std::cout << "# Warrning: Button '" << ControllerDef::button_id2name(i)
-                        << "' not configured and will not be usable" << std::endl;
-            }
-        }
-
-      for (int i = 0; i < (int)axes.size(); ++i)
-        {
-          if (axes[i])
-            {
-              slots.push_back(axes[i]->on_move().connect(this, &InputManagerCustom::on_axis_move, i));
-            }
-          else
-            {
-              std::cout << "# Warrning: Axis '" << ControllerDef::axis_id2name(i)
-                        << "' not configured and will not be usable" << std::endl;
-            }
-        }
-
-      for (int i = 0; i < (int)keyboards.size(); ++i)
-        {
-          if (keyboards[i])
-            {
-              slots.push_back(keyboards[i]->on_key().connect(this, &InputManagerCustom::on_key));
-            }
-          else
-            {
-              std::cout << "# Warrning: Keyboard not configured" << std::endl;
-            }
-        }
-    }
-}
-
-void 
-InputManagerCustom::init(const lisp::Lisp* lisp)
-{
-  buttons.resize(ControllerDef::get_button_count());
-  axes.resize(ControllerDef::get_axis_count());
-  keyboards.resize(ControllerDef::get_keyboard_count());
-
-  lisp::Properties props(lisp);
-  lisp::PropertyIterator<const lisp::Lisp*> iter = props.get_iter();
-  while(iter.next()) {
-    std::string name = iter.item();
-    const lisp::Lisp* lisp = (*iter)->get_list_elem(1);
-
-    int id = ControllerDef::button_name2id(name);
-    if (id != -1)
-      {
-        buttons[id] = ButtonFactory::create(lisp);
-      }
-    else if (name == "keyboard")
-      {
-        keyboards[0] = new InputKeyboardInputDevice(CL_Keyboard::get_device());
-      }
-    else
-      {
-        id = ControllerDef::axis_name2id(name);
-        if (id != -1)
-          {
-            axes[id] = AxisFactory::create(lisp);
-          }
-        else
-          {
-            std::cout << "# Warning: InputManagerCustom::init: Error unknown tag: " << std::endl;
-          }
-      }
-  }
-}  
-
-void
-InputManagerCustom::on_axis_move(float pos, int name)
-{
-  add_axis_event(name, pos);
-}
-
-void
-InputManagerCustom::on_button_up(int name)
-{
-  add_button_event(name, false);
-}
-
-void
-InputManagerCustom::on_button_down(int name)
-{
-  add_button_event(name, true);
-}
-
-void
-InputManagerCustom::on_key(KeyboardEvent::KeyType key_type, int code)
-{
-  add_keyboard_event(0, key_type, code);
-}
-
-void
-InputManagerCustom::update(float delta)
-{
-  for (int i = 0; i < (int)buttons.size(); ++i)
-    {
-      if (buttons[i])
-        buttons[i]->update(delta);
-    }
-
-  for (int i = 0; i < (int)axes.size(); ++i)
-    {
-      if (axes[i])
-        axes[i]->update(delta);
-    }
-
-  for (int i = 0; i < (int)keyboards.size(); ++i)
-    {
-      if (keyboards[i])
-        keyboards[i]->update(delta);
-    }
-}
-
-/* EOF */

Deleted: trunk/src/input/input_manager_custom.hpp
===================================================================
--- trunk/src/input/input_manager_custom.hpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_custom.hpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -1,65 +0,0 @@
-//  $Id$
-// 
-//  Pingus - A free Lemmings clone
-//  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
-//
-//  This program is free software; you can redistribute it and/or
-//  modify it under the terms of the GNU General Public License
-//  as published by the Free Software Foundation; either version 2
-//  of the License, or (at your option) any later version.
-//
-//  This program is distributed in the hope that it will be useful,
-//  but WITHOUT ANY WARRANTY; without even the implied warranty of
-//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-//  GNU General Public License for more details.
-// 
-//  You should have received a copy of the GNU General Public License
-//  along with this program; if not, write to the Free Software
-//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-
-#ifndef HEADER_INPUT_MANAGER_CUSTOM_HXX
-#define HEADER_INPUT_MANAGER_CUSTOM_HXX
-
-#include <ClanLib/Display/input_device.h>
-#include <ClanLib/Display/input_event.h>
-#include "input_event.hpp"
-#include "input_button.hpp"
-#include "input_axis.hpp"
-#include "input_keyboard.hpp"
-#include "input_manager_impl.hpp"
-#include "lisp/lisp.hpp"
-
-/** */
-class InputManagerCustom : public InputManagerImpl
-{
-private:
-  std::vector<CL_Slot> slots;
-
-  typedef std::vector<InputAxis*>     Axes;
-  typedef std::vector<InputButton*>   Buttons;
-  typedef std::vector<InputKeyboard*> Keyboards;
-
-  Axes      axes;
-  Buttons   buttons;
-  Keyboards keyboards;
-
-public:
-  InputManagerCustom(const lisp::Lisp* lisp);
-  
-  void update(float delta);
-
-  void on_button_up(int name);
-  void on_button_down(int name);
-  void on_axis_move(float pos, int name);
-  void on_key(KeyboardEvent::KeyType key_type, int code);
-
-private:
-  void init(const lisp::Lisp* lisp);
-
-  InputManagerCustom (const InputManagerCustom&);
-  InputManagerCustom& operator= (const InputManagerCustom&);
-};
-
-#endif
-
-/* EOF */

Modified: trunk/src/input/input_manager_impl.cpp
===================================================================
--- trunk/src/input/input_manager_impl.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_impl.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -19,19 +19,6 @@
 
 #include "input_manager_impl.hpp"
 
-InputEventLst
-InputManagerImpl::get_events()
-{
-  return events;
-}
-
-Controller
-InputManagerImpl::get_controller()
-{
-  controller.set_events(events);
-  return controller;
-}
-
 void
 InputManagerImpl::add_axis_event(int name, float pos)
 {
@@ -39,8 +26,8 @@
   event.type = AXIS_EVENT;
   event.axis.name = name;
   event.axis.pos  = pos;
-  events.push_back(event);
 
+  controller.add_event(event);
   controller.set_axis_state(name, pos);
 }
 
@@ -48,11 +35,12 @@
 InputManagerImpl::add_button_event(int name, bool down)
 {
   InputEvent event;
+
   event.type = BUTTON_EVENT;
   event.button.name = name;
   event.button.down = down;
-  events.push_back(event);
 
+  controller.add_event(event);
   controller.set_button_state(name, down);
 }
 
@@ -63,13 +51,20 @@
   event.type = KEYBOARD_EVENT;
   event.keyboard.key_type = key_type;
   event.keyboard.code     = code;
-  events.push_back(event);  
+
+  controller.add_event(event);
 }
 
 void
 InputManagerImpl::clear()
 {
-  events.clear();
+  controller.clear();
 }
 
+const Controller&
+InputManagerImpl::get_controller() const
+{
+  return controller;
+}
+
 /* EOF */

Modified: trunk/src/input/input_manager_impl.hpp
===================================================================
--- trunk/src/input/input_manager_impl.hpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_impl.hpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -28,7 +28,6 @@
 {
 protected:
   Controller controller;
-  InputEventLst events;
 
 public:
   InputManagerImpl() {}
@@ -36,9 +35,7 @@
 
   virtual void update(float delta) =0;
   
-  InputEventLst get_events();
-
-  Controller get_controller();
+  const Controller& get_controller() const;
   void clear();
 
   void add_axis_event  (int name, float pos);

Modified: trunk/src/input/input_manager_player.cpp
===================================================================
--- trunk/src/input/input_manager_player.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_player.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -80,9 +80,10 @@
   (void) delta;
   if (entries.front().entry_num == entry_counter)
     {
-      events = entries.front().events;
+      controller.set_events(entries.front().events);
       
-      for (InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
+      for (InputEventLst::const_iterator i = controller.get_events().begin(); 
+           i != controller.get_events().end(); ++i)
         {
           if (i->type == AXIS_EVENT)
             controller.set_axis_state(i->axis.name, i->axis.pos);

Modified: trunk/src/input/input_manager_player.hpp
===================================================================
--- trunk/src/input/input_manager_player.hpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_player.hpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -29,7 +29,8 @@
 class InputManagerPlayer : public InputManagerImpl
 {
 private:
-  struct Entry {
+  struct Entry 
+  {
     Entry(int num, const InputEventLst& lst) 
       : entry_num(num), events(lst)
     {}

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-08 21:16:53 UTC (rev 947)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-09 12:15:17 UTC (rev 948)
@@ -113,7 +113,7 @@
                   props.get("device", device);
                   props.get("button", button);
 
-                  bind_joystick_button(controller_def.button_name2id(iter.item()),
+                  bind_joystick_button(controller_def.get_definition(iter.item()).id,
                                        device, button);
                 }
               else if (dev_iter.item() == "keyboard-button")
@@ -123,7 +123,7 @@
                   lisp::Properties props(*dev_iter);
                   props.get("key", key);
 
-                  bind_keyboard_button(controller_def.button_name2id(iter.item()), 
+                  bind_keyboard_button(controller_def.get_definition(iter.item()).id,
                                        string_to_keyid(key));
                 }
               else
@@ -147,7 +147,8 @@
                   props.get("device", device);
                   props.get("axis",   axis);
 
-                  bind_joystick_axis(controller_def.axis_name2id(iter.item()), device, axis);
+                  bind_joystick_axis(controller_def.get_definition(iter.item()).id,
+                                     device, axis);
                 }
               else if (dev_iter.item() == "keyboard-axis")
                 {
@@ -158,7 +159,7 @@
                   props.get("minus", minus);
                   props.get("plus",  plus);
 
-                  bind_keyboard_axis(controller_def.axis_name2id(iter.item()), 
+                  bind_keyboard_axis(controller_def.get_definition(iter.item()).id, 
                                      string_to_keyid(minus), string_to_keyid(plus));
                 }
               else



From grumbel at berlios.de  Tue Aug  9 15:03:15 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 9 Aug 2005 15:03:15 +0200
Subject: [Windstille-commit] r949 - in trunk/src: . input scripting
Message-ID: <200508091303.j79D3F7g009908@sheep.berlios.de>

Author: grumbel
Date: 2005-08-09 15:03:14 +0200 (Tue, 09 Aug 2005)
New Revision: 949

Modified:
   trunk/src/input/controller.cpp
   trunk/src/input/input_configurator.cpp
   trunk/src/input/input_manager_sdl.cpp
   trunk/src/input/input_manager_sdl.hpp
   trunk/src/screen_manager.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
Log:
- added support mapping joystick buttons to axis

Modified: trunk/src/input/controller.cpp
===================================================================
--- trunk/src/input/controller.cpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/input/controller.cpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -23,8 +23,6 @@
 
 Controller::Controller()
 {
-  ControllerDef def;
-
   states.resize(LAST_EVENT);
 }
 

Modified: trunk/src/input/input_configurator.cpp
===================================================================
--- trunk/src/input/input_configurator.cpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/input/input_configurator.cpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -142,6 +142,7 @@
       screen_manager.set_overlay(0);
       return; 
     }
+  
 
   switch(event.type)
     {        
@@ -159,12 +160,15 @@
 
     case SDL_JOYAXISMOTION:
       if (items.back().mode == ConfigureItem::CONFIGURE_AXIS)
-        {
+        { // FIXME: This doesn't work with analog Axis!
           InputManagerSDL::current()->bind_joystick_axis(items.back().event_id, event.jaxis.which, event.jaxis.axis);
-          out << "(joystick-axis (device " << event.jaxis.which << ")\n"
-              << "               (axis   " << event.jaxis.axis << "))" << std::endl;
+          out << "(joystick-axis (device " << int(event.jaxis.which) << ")\n"
+              << "               (axis   " << int(event.jaxis.axis) << "))" << std::endl;
           next_item();
         }
+      else
+        {
+        }
       break;
 
     case SDL_JOYBALLMOTION:
@@ -182,13 +186,28 @@
       if (items.back().mode == ConfigureItem::CONFIGURE_BUTTON)
         {
           InputManagerSDL::current()->bind_joystick_button(items.back().event_id, event.jbutton.which, event.jbutton.button);
-          out << "(joystick-button (device " << event.jbutton.which << ")\n"
-              << "                 (button " << event.jbutton.button << "))" << std::endl;
+          out << "(joystick-button (device " << int(event.jbutton.which) << ")\n"
+              << "                 (button " << int(event.jbutton.button) << "))" << std::endl;
           next_item();
         }
       else if (items.back().mode == ConfigureItem::CONFIGURE_AXIS)
         {
-          // ignore
+          if (wait_for_plus && minus.type == SDL_JOYBUTTONDOWN)
+            {
+              out << "(joystick-axis-button (minus " << InputManagerSDL::current()->keyid_to_string(minus.key.keysym.sym) << ") "
+                  << "(plus  " << InputManagerSDL::current()->keyid_to_string(event.key.keysym.sym) << "))" << std::endl;
+              InputManagerSDL::current()->bind_joystick_button_axis(items.back().event_id, event.jbutton.which, 
+                                                                    minus.jbutton.button, event.jbutton.button);
+              next_item();
+              wait_for_plus = false;
+            }
+          else if (!wait_for_plus)
+            {
+              out << "Press key for other direction" << std::endl;
+              area.set_text(out.str());
+              minus = event;
+              wait_for_plus = true;
+            }
         }
       break;
 

Modified: trunk/src/input/input_manager_sdl.cpp
===================================================================
--- trunk/src/input/input_manager_sdl.cpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/input/input_manager_sdl.cpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -38,6 +38,7 @@
 {
 public:
   std::vector<JoystickButtonBinding> joystick_button_bindings;
+  std::vector<JoystickButtonAxisBinding> joystick_button_axis_bindings;
   std::vector<JoystickAxisBinding>   joystick_axis_bindings;
 
   std::vector<KeyboardButtonBinding> keyboard_button_bindings;
@@ -237,6 +238,23 @@
           add_button_event(i->event, button.state);
         }
     }
+
+  for (std::vector<JoystickButtonAxisBinding>::const_iterator i = impl->joystick_button_axis_bindings.begin();
+       i != impl->joystick_button_axis_bindings.end();
+       ++i)
+    {
+      if (button.which  == i->device)
+        {
+          if (button.button == i->minus)
+            {
+              add_axis_event(i->event, button.state ? -1.0f : 0.0f);
+            }
+          else if (button.button == i->plus)
+            {
+              add_axis_event(i->event, button.state ?  1.0f : 0.0f);
+            }
+        }
+    }
 }
 
 void
@@ -334,6 +352,21 @@
 }
 
 void
+InputManagerSDL::bind_joystick_button_axis(int event, int device, int minus, int plus)
+{
+  ensure_open_joystick(device);
+
+  JoystickButtonAxisBinding binding;
+
+  binding.event  = event;
+  binding.device = device;
+  binding.minus  = minus;
+  binding.plus   = plus;
+
+  impl->joystick_button_axis_bindings.push_back(binding); 
+}
+
+void
 InputManagerSDL::bind_joystick_axis(int event, int device, int axis)
 {
   ensure_open_joystick(device);
@@ -389,6 +422,7 @@
 {
   impl->joystick_button_bindings.clear();
   impl->joystick_axis_bindings.clear();
+  impl->joystick_button_axis_bindings.clear();
   
   impl->keyboard_button_bindings.clear();
   impl->keyboard_axis_bindings.clear();

Modified: trunk/src/input/input_manager_sdl.hpp
===================================================================
--- trunk/src/input/input_manager_sdl.hpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/input/input_manager_sdl.hpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -46,6 +46,14 @@
   int axis;
 };
 
+struct JoystickButtonAxisBinding
+{
+  int event;
+  int device;
+  int minus;
+  int plus;
+};
+
 struct KeyboardButtonBinding
 {
   int event;
@@ -55,8 +63,8 @@
 struct KeyboardAxisBinding
 {
   int event;
+  SDLKey minus;
   SDLKey plus;
-  SDLKey minus;
 };
 
 /** */
@@ -75,6 +83,7 @@
   void bind_joystick_hat_axis(int event, int device, int axis);
 
   void bind_joystick_axis(int event, int device, int axis);
+  void bind_joystick_button_axis(int event, int device, int minus, int plus);
   void bind_joystick_button(int event, int device, int button);
 
   void bind_keyboard_button(int event, SDLKey key);

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/screen_manager.cpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -211,6 +211,9 @@
         case SDL_JOYBUTTONDOWN:
           if (InputManagerSDL::current())
             InputManagerSDL::current()->on_event(event);
+
+          if (overlay_screen)
+            overlay_screen->handle_event(event);
           break;
         
         default:

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/scripting/wrapper.cpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-09 12:15:17 UTC (rev 948)
+++ trunk/src/scripting/wrapper.hpp	2005-08-09 13:03:14 UTC (rev 949)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__



From grumbel at berlios.de  Tue Aug  9 20:17:20 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 9 Aug 2005 20:17:20 +0200
Subject: [Windstille-commit] r950 - in trunk/src: . badguy
Message-ID: <200508091817.j79IHK5t025980@sheep.berlios.de>

Author: grumbel
Date: 2005-08-09 20:17:19 +0200 (Tue, 09 Aug 2005)
New Revision: 950

Added:
   trunk/src/badguy/swarm.cpp
   trunk/src/badguy/swarm.hpp
Modified:
   trunk/src/badguy/Jamfile
   trunk/src/pda.cpp
   trunk/src/sector.cpp
Log:
- added some bad looking swarm

Modified: trunk/src/badguy/Jamfile
===================================================================
--- trunk/src/badguy/Jamfile	2005-08-09 13:03:14 UTC (rev 949)
+++ trunk/src/badguy/Jamfile	2005-08-09 18:17:19 UTC (rev 950)
@@ -7,6 +7,8 @@
   hedgehog.hpp
   spider_mine.cpp
   spider_mine.hpp
+  swarm.hpp
+  swarm.cpp
   vrdummy.hpp
   vrdummy.cpp
 ;

Added: trunk/src/badguy/swarm.cpp
===================================================================
--- trunk/src/badguy/swarm.cpp	2005-08-09 13:03:14 UTC (rev 949)
+++ trunk/src/badguy/swarm.cpp	2005-08-09 18:17:19 UTC (rev 950)
@@ -0,0 +1,136 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "globals.hpp"
+#include "player.hpp"
+#include "sector.hpp"
+#include "hedgehog.hpp"
+#include "lisp/properties.hpp"
+#include "game_session.hpp"
+#include "view.hpp"
+#include "windstille_getters.hpp"
+#include "display/vertex_array_drawing_request.hpp"
+#include "random.hpp"
+#include "swarm.hpp"
+
+Swarm::Swarm(const lisp::Lisp* lisp)
+{
+  int count = 100;
+  turn_speed = 7.0f;
+
+  lisp::Properties props(lisp);
+  props.get("name",  name);
+  props.get("pos",   pos);
+  props.get("count", count);
+  props.get("turn-speed", turn_speed);
+  props.print_unused_warnings("swarm");
+
+  agents.resize(count);
+
+  for(Agents::iterator i = agents.begin(); i != agents.end(); ++i)
+    {
+      i->pos.x = pos.x + rnd.drand(-100, 100);
+      i->pos.y = pos.y + rnd.drand(-100, 100);
+
+      i->angle = rnd.drand(-M_PI, M_PI);
+      i->speed = rnd.drand(50.0f, 200.0f);
+
+      i->max_speed = rnd.drand(150.0f, 200.0f);
+
+      i->last_pos = i->pos;
+    }
+}
+
+void
+Swarm::draw(SceneContext& sc)
+{
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), 
+                                                                   1000.0f, sc.highlight().get_modelview());
+
+  array->set_mode(GL_LINES);
+  array->set_blend_func(GL_ONE, GL_ZERO);
+
+  Color begin_color(1.0f, 1.0f, 1.0f);
+  Color end_color(0.0f, 0.0f, 0.0f);
+
+  for(Agents::const_iterator i = agents.begin(); i != agents.end(); ++i)
+    {
+      array->color(begin_color);
+      array->vertex(i->last_pos.x, i->last_pos.y);
+
+      array->color(end_color);
+      array->vertex(i->pos.x, i->pos.y);
+    }
+
+  sc.highlight().draw(array);
+}
+
+void
+Swarm::update(float delta)
+{
+  int x, y;
+  SDL_GetMouseState(&x, &y);
+  
+  target = GameSession::current()->get_view()->screen_to_world(Vector(x, y));
+
+  for(Agents::iterator i = agents.begin(); i != agents.end(); ++i)
+    {
+      i->last_pos = i->pos;
+
+      float dx = target.x - i->pos.x;
+      float dy = target.y - i->pos.y;
+
+      float target_angle   = atan2f(dy, dx);
+      float relative_angle = target_angle - i->angle;
+      
+
+      if (sqrt(dx*dx + dy*dy) > 50.0f) // swarm range
+        {
+          if (fabs(relative_angle) < 1.0f)
+            {
+              //i->angle += rnd.drand(-1.0f, 1.0f) * delta;
+              if (i->speed < i->max_speed) 
+                i->speed += 10.0f * delta;
+            }
+          else
+            {
+              if (fmod(relative_angle, 2*M_PI) > 0 && fmod(relative_angle, 2*M_PI) < M_PI)
+                i->angle += turn_speed * delta;
+              else
+                i->angle -= turn_speed * delta;
+            }
+        }
+      else
+        {
+          //i->angle += rnd.drand(-15.0f, 15.0f) * delta;
+          //i->speed += 150.0f - fabs(i->angle);
+        }
+
+      i->pos.x += i->speed * cos(i->angle) * delta;
+      i->pos.y += i->speed * sin(i->angle) * delta;
+    }
+}
+
+/* EOF */

Added: trunk/src/badguy/swarm.hpp
===================================================================
--- trunk/src/badguy/swarm.hpp	2005-08-09 13:03:14 UTC (rev 949)
+++ trunk/src/badguy/swarm.hpp	2005-08-09 18:17:19 UTC (rev 950)
@@ -0,0 +1,64 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_SWARM_HPP
+#define HEADER_SWARM_HPP
+
+#include "entity.hpp"
+
+class SwarmAgent
+{
+public:
+  Vector pos;
+  Vector last_pos;
+  float  angle;
+  float  speed;
+  float  max_speed;
+};
+
+/** */
+class Swarm : public Entity
+{
+private:
+  typedef std::vector<SwarmAgent> Agents;
+  Agents agents;
+
+  Vector target;
+
+  float turn_speed; 
+public:
+  Swarm(const lisp::Lisp* lisp);
+  
+  void draw(SceneContext& sc);
+  void update(float delta);
+
+private:
+  Swarm (const Swarm&);
+  Swarm& operator= (const Swarm&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-09 13:03:14 UTC (rev 949)
+++ trunk/src/pda.cpp	2005-08-09 18:17:19 UTC (rev 950)
@@ -48,11 +48,15 @@
   if (!active)
     return;
     
-  const Rectf& rect = text_area->get_rect().grow(8.0f);
+  if (text_area)
+    {
+      const Rectf& rect = text_area->get_rect().grow(8.0f);
 
-  Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
-  Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
-  text_area->draw();
+      Display::fill_rounded_rect(rect, 16.0f, Color(0.3f, 0.3f, 0.5f, 0.5f));
+      Display::draw_rounded_rect(rect, 16.0f, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+      text_area->draw();
+    }
 }
 
 void

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-09 13:03:14 UTC (rev 949)
+++ trunk/src/sector.cpp	2005-08-09 18:17:19 UTC (rev 950)
@@ -41,6 +41,7 @@
 #include "elevator.hpp"
 #include "nightvision.hpp"
 #include "character.hpp"
+#include "badguy/swarm.hpp"
 #include "badguy/hedgehog.hpp"
 #include "badguy/spider_mine.hpp"
 #include "box.hpp"
@@ -157,6 +158,8 @@
     add(new ScriptableObject(lisp));
   } else if (name == "vrdummy") {
     add(new VRDummy(lisp));
+  } else if (name == "swarm") {
+    add(new Swarm(lisp));
   } else {
     std::cout << "Skipping unknown Object: " << name << "\n";
   }



From matzebraun at berlios.de  Thu Aug 11 00:26:42 2005
From: matzebraun at berlios.de (Matthias Braun at BerliOS)
Date: Thu, 11 Aug 2005 00:26:42 +0200
Subject: [Windstille-commit] r951 - in trunk: data/levels data/scripts src src/collision src/lisp src/scripting
Message-ID: <200508102226.j7AMQgmv006877@sheep.berlios.de>

Author: matzebraun
Date: 2005-08-11 00:26:40 +0200 (Thu, 11 Aug 2005)
New Revision: 951

Added:
   trunk/src/physics.cpp
   trunk/src/physics.hpp
   trunk/src/scripting/squirrel_error.cpp
   trunk/src/scripting/squirrel_error.hpp
Modified:
   trunk/data/levels/intro.nut
   trunk/data/levels/intro.wst
   trunk/data/levels/newformat2.nut
   trunk/data/scripts/windstille.nut
   trunk/src/Jamfile
   trunk/src/box.cpp
   trunk/src/box.hpp
   trunk/src/collision/collision_data.hpp
   trunk/src/collision/collision_engine.cpp
   trunk/src/collision/collision_engine.hpp
   trunk/src/collision/collision_object.cpp
   trunk/src/collision/collision_object.hpp
   trunk/src/elevator.cpp
   trunk/src/entity.hpp
   trunk/src/lisp/parser.cpp
   trunk/src/player.cpp
   trunk/src/player.hpp
   trunk/src/script_manager.cpp
   trunk/src/script_manager.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/scripting/wrapper_util.cpp
   trunk/src/scripting/wrapper_util.hpp
   trunk/src/sector.cpp
Log:
- SOme cleanups to scripting code
- Moved GameObjects into objects table (now you have to use
        objects.Player instead of just Player)
- added link back to GameObject to CollisionObject
- No need for GameObject& other parameter in collision function when the same
  information is in CollisionData
- Added not yet working physics class (but I'll be off for holidays in the next
  3 weeks...)



Modified: trunk/data/levels/intro.nut
===================================================================
--- trunk/data/levels/intro.nut	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/data/levels/intro.nut	2005-08-10 22:26:40 UTC (rev 951)
@@ -1,7 +1,8 @@
 set_camera_active(false);
-player.set_active(false);
+objects.player.set_active(false);
 set_view(0, 0);
-spawn_object("scriptable-object", {name="planet", pos=[0,0], sprite="images/planet.sprite", z_pos=1001});
+spawn_object("scriptable-object", { name="planet", pos=[0,0],
+    sprite="images/planet.sprite", z_pos=1001 });
 wait(3);
 add_caption(BOTTOM, "The Big Boom. Humanity found out it could travel to the stars, and it did, en masse.");
 wait(10);
@@ -10,8 +11,8 @@
 add_caption(BOTTOM, "Still, many individuals took their chances, even without military hardware and terraformers. Most worlds were so barren or so dangerous that whole colonies died out. In the Free Colonies that survive, life isn't easy.");
 wait(15);
 end_caption();
-player.set_active(true);
+objects.player.set_active(true);
 set_camera_active(true);
-planet.remove();
+objects.planet.remove();
 
 /* EOF */

Modified: trunk/data/levels/intro.wst
===================================================================
--- trunk/data/levels/intro.wst	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/data/levels/intro.wst	2005-08-10 22:26:40 UTC (rev 951)
@@ -2,7 +2,7 @@
 (windstille-sector
   (version 2)
   (name   "")
-  (music  "silence_wip.ogg")
+  (music  "music/silence_wip.ogg")
   (ambient-color .666 .666 .666)
   (init-script "levels/intro.nut")
   (spawnpoint

Modified: trunk/data/levels/newformat2.nut
===================================================================
--- trunk/data/levels/newformat2.nut	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/data/levels/newformat2.nut	2005-08-10 22:26:40 UTC (rev 951)
@@ -1,27 +1,27 @@
 set_controller_help_active(true);
-player_flames2.set_active(false);
-player_flames.set_active(false);      
+objects.player_flames2.set_active(false);
+objects.player_flames.set_active(false);      
 
 /* Some fun with fire */
 function startfire()
 {
   // Need to parent here because at top level "player" isn't yet created
-  player_flames2.set_parent("player");
-  player_flames.set_parent("player");      
+  objects.player_flames2.set_parent("player");
+  objects.player_flames.set_parent("player");      
 
-  player_flames2.set_active(true);
-  player_flames.set_active(true);
+  objects.player_flames2.set_active(true);
+  objects.player_flames.set_active(true);
 }
 
 function stopfire()
 {
   // FIXME: Don't just deactivate the GameObject, but let the particle
   // system run out (set_cycles(1.0)) also add a bunch of white smoke
-  player_flames2.set_active(false);
-  player_flames.set_active(false);
+  objects.player_flames2.set_active(false);
+  objects.player_flames.set_active(false);
 }
 
-Block0Sign.start_flash(0.7);
-Block0Sign.move_to(100, 370, 100, 2);
+objects.Block0Sign.start_flash(0.7);
+objects.Block0Sign.move_to(100, 370, 100, 2);
 
 /* EOF */

Modified: trunk/data/scripts/windstille.nut
===================================================================
--- trunk/data/scripts/windstille.nut	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/data/scripts/windstille.nut	2005-08-10 22:26:40 UTC (rev 951)
@@ -6,13 +6,13 @@
 {
   if (vargc == 1) 
     {
-      if (::has_nightvision) {
-        nightvision.set_active(vargv[0]); 
+      if (has_nightvision) {
+        objects.nightvision.set_active(vargv[0]); 
       } 
       else if (vargv[0]) 
         {
-          ::spawn_object("nightvision", {});
-          ::has_nightvision = true;
+          spawn_object("nightvision", {});
+          has_nightvision = true;
         }
     } else {
       return true;
@@ -36,23 +36,23 @@
   return conversation_get_selection();
 }
 
-class Dialog {
-  constructor(arg_align, arg_character, arg_portrait)
-  {
+class Dialog {
+  constructor(arg_align, arg_character, arg_portrait)
+  {
     align = arg_align;
     character = arg_character;
-    portrait = arg_portrait;
-  }
-
-  function set(text)
-  {
+    portrait = arg_portrait;
+  }
+
+  function set(text)
+  {
     dialog_show(align, character, portrait, text);
-    wait_for_dialog();
-  }
-
+    wait_for_dialog();
+  }
+
   align = null;
   character = null;
-  portrait = null;
+  portrait = null;
 }
 
 function add_dialog(align, character, portrait, text)

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/Jamfile	2005-08-10 22:26:40 UTC (rev 951)
@@ -68,6 +68,8 @@
         math.hpp
         nightvision.cpp
         nightvision.hpp
+        physics.cpp
+        physics.hpp
         pda.cpp
         pda.hpp
         player.cpp

Modified: trunk/src/box.cpp
===================================================================
--- trunk/src/box.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/box.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -51,7 +51,7 @@
     throw std::runtime_error("No sprite name specified in Box");
   sprite = Sprite(spritename);
   
-  colobj = new CollisionObject(Rectf(0, 0, width, height));
+  colobj = new CollisionObject(this, Rectf(0, 0, width, height));
   colobj->set_velocity(vel);
   colobj->set_pos(Vector(pos.x, pos.y));
 
@@ -66,10 +66,8 @@
 }
 
 void 
-Box::collision(const CollisionData& data, CollisionObject& other)
+Box::collision(const CollisionData& data)
 {
-  (void) data;
-  (void) other;
   //std::cout << this << ": Collision Event" << std::endl;
   if ((data.direction.x > 0 && colobj->get_velocity().x < 0) ||
       (data.direction.x < 0 && colobj->get_velocity().x > 0))

Modified: trunk/src/box.hpp
===================================================================
--- trunk/src/box.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/box.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -39,7 +39,7 @@
   Box(const lisp::Lisp* lisp);
   virtual ~Box();
 
-  void collision(const CollisionData& data, CollisionObject& other); 
+  void collision(const CollisionData& data); 
 
   void update(float delta);
 

Modified: trunk/src/collision/collision_data.hpp
===================================================================
--- trunk/src/collision/collision_data.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/collision/collision_data.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -44,7 +44,8 @@
   // time of collision
   float col_time;
 
-  CollisionObject *a,*b;
+  CollisionObject* object1;
+  CollisionObject* object2;
 
   CollisionData()
   {
@@ -58,6 +59,8 @@
   {
     CollisionData r(*this);
     r.direction*=-1;
+    r.object1 = object2;
+    r.object2 = object1;
 
     return r;
   } 

Modified: trunk/src/collision/collision_engine.cpp
===================================================================
--- trunk/src/collision/collision_engine.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/collision/collision_engine.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -49,14 +49,10 @@
 }
 
 void
-CollisionEngine::collision(CollisionObject& a, CollisionObject& b, const CollisionData &result, float delta)
+CollisionEngine::collision(const CollisionData &result)
 {
-  (void)delta;
-
-  CollisionData inv=result.invert();
-
-  a.sig_collision()(result, b);
-  b.sig_collision()(inv, a);
+  result.object1->sig_collision() (result);
+  result.object2->sig_collision() (result.invert());
 }
 
 void
@@ -290,8 +286,8 @@
 		    {
 		      if (min_time > r.col_time && r.col_time>=0)
 			{
-			  r.a=*i;
-			  r.b=*j;
+			  r.object1 = *i;
+			  r.object2 = *j;
 			  col_data = r;
 			  min_time = r.col_time;
 			  if (min_time > 0.0005)
@@ -313,7 +309,7 @@
       // report collision
       if (min_time < frame)
 	{
-	  collision (*col_data.a, *col_data.b, col_data, min_time);
+	  collision (col_data);
 	}
 
       frame-=min_time;

Modified: trunk/src/collision/collision_engine.hpp
===================================================================
--- trunk/src/collision/collision_engine.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/collision/collision_engine.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -40,7 +40,7 @@
   void draw(DrawingContext& dc);
   void update(float delta);
   void update(CollisionObject& obj, float delta);
-  void collision(CollisionObject& a, CollisionObject& b, const CollisionData &result, float delta);
+  void collision(const CollisionData &result);
 
   CollisionObject* add(CollisionObject *obj);
   void remove(CollisionObject *obj);

Modified: trunk/src/collision/collision_object.cpp
===================================================================
--- trunk/src/collision/collision_object.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/collision/collision_object.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -30,7 +30,7 @@
  * CollisionObject
  ***********************************************************************/
 
-CollisionObject::CollisionObject(const Rectf& rect_)
+CollisionObject::CollisionObject(GameObject* game_object, const Rectf& rect_)
   : primitive(rect_)
 {
   object_type        = RECTANGLE;
@@ -38,7 +38,7 @@
   is_unstuck_movable = true;
   velocity           = Vector(0,0);
   pos                = Vector(0,0);
-  game_object        = 0;
+  game_object        = game_object;
 }
 
 CollisionObject::CollisionObject(TileMap* tilemap_)

Modified: trunk/src/collision/collision_object.hpp
===================================================================
--- trunk/src/collision/collision_object.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/collision/collision_object.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -54,7 +54,7 @@
 
   GameObject* game_object;
 
-  Signal_v2<const CollisionData &, CollisionObject &> collision;
+  Signal_v1<const CollisionData &> collision;
 
   Rectf primitive;
   TileMap* tilemap;
@@ -63,7 +63,7 @@
   bool is_unstuck_movable;
 
 public:
-  CollisionObject(const Rectf& rect_);
+  CollisionObject(GameObject* object, const Rectf& rect_);
   CollisionObject(TileMap* tilemap_);
 
   virtual ~CollisionObject();
@@ -108,7 +108,7 @@
   void set_unstuck(bool s) { is_unstuckable = s; }
   void set_unstuck_movable(bool s) { is_unstuck_movable = s; }
 
-  Signal_v2<const CollisionData &, CollisionObject &>& sig_collision() { return collision; }
+  Signal_v1<const CollisionData &>& sig_collision() { return collision; }
 
   friend class CollisionEngine;
 };

Modified: trunk/src/elevator.cpp
===================================================================
--- trunk/src/elevator.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/elevator.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -45,7 +45,7 @@
 
   sprite = Sprite(spritename);
   size  = Size(128, 64);
-  colobject = new CollisionObject(Rectf(Vector(0,0), size));
+  colobject = new CollisionObject(this, Rectf(Vector(0,0), size));
   Sector::current()->get_collision_engine()->add(colobject);
   colobject->set_pos(pos);
 }

Modified: trunk/src/entity.hpp
===================================================================
--- trunk/src/entity.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/entity.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -39,6 +39,7 @@
   Signal_v0 done; 
 
 protected:
+  friend class Physics;
   bool on_ground() const;
   bool in_wall() const;
   

Modified: trunk/src/lisp/parser.cpp
===================================================================
--- trunk/src/lisp/parser.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/lisp/parser.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -101,6 +101,9 @@
   parser->lexer = new Lexer(stream);
 
   parser->token = parser->lexer->getNextToken();
+  if(parser->token != Lexer::TOKEN_OPEN_PAREN)
+    throw ParseError(parser.get(), "file doesn't start with '('");
+
   std::auto_ptr<Lisp> result (parser->parse());
   if(parser->token != Lexer::TOKEN_EOF) {
     if(parser->token == Lexer::TOKEN_CLOSE_PAREN)

Added: trunk/src/physics.cpp
===================================================================
--- trunk/src/physics.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/physics.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -0,0 +1,95 @@
+#include <config.h>
+
+#include "physics.hpp"
+
+Physics::Physics(Entity* entity)
+  : entity(entity)
+{
+  mass = 1.0;
+  bounciness = 0.0;
+  air_friction = 0.0;
+  contact_friction = 0.0;
+}
+
+Physics::~Physics()
+{
+}
+
+void
+Physics::register_collobj(CollisionObject& object)
+{
+  slots.push_back(object.sig_collision().connect(this, &Physics::collision));
+}
+
+void
+Physics::collision(const CollisionData& data)
+{
+  GameObject* other_object = data.object2->get_game_object();
+  if(other_object == 0)
+    return;
+
+  data.object1->set_velocity(Vector(0, 0));
+  data.object2->set_velocity(Vector(0, 0));
+
+  const Physics* physics = dynamic_cast<const Physics*> (other_object);
+  if(physics)
+  {
+    elastic_collision(data, *physics);
+    return;
+  }
+
+  // assume fix object...
+  bounce_collision(data);
+}
+
+void
+Physics::elastic_collision(const CollisionData& data, const Physics& other)
+{
+  printf("elastic collision.\n");
+  // we could calculate this cheaper if we'd do it once for both objects and not
+  // each object on it's own...
+
+  Vector other_collision_vel 
+    = data.direction * (other.velocity() * data.direction);
+  Vector collision_vel
+    = data.direction * (velocity() * data.direction);
+  
+  Vector new_v = collision_vel * (mass - other.mass);
+  new_v += other_collision_vel * (2 * other.mass);
+  new_v /= mass + other.mass;
+
+  // velocity += new_v - collision_vel
+  force += (new_v - collision_vel) * mass / data.delta;
+
+  // TODO apply friction here?
+}
+
+void
+Physics::bounce_collision(const CollisionData& data)
+{
+  printf("bounce collision.\n");
+  Vector collision_vel
+    = data.direction * (velocity() * data.direction);
+
+  // velocity -= collision_vel * (1.0 + bounciness)
+  force -= collision_vel * (1.0f + bounciness) * mass / data.delta;
+
+  // TODO apply friction
+}
+
+void
+Physics::update(float elapsed_time)
+{
+  // take a look at verlet integration, might work better than euler here
+ 
+  // add gravity force (TODO make it configurable per Sector)
+  force += Vector(0, 9.81 * mass);
+
+  force -= velocity() * air_friction;
+  
+  Vector acceleration = force / mass;
+  velocity() += acceleration * elapsed_time;
+
+  force = Vector(0, 0);
+}
+

Added: trunk/src/physics.hpp
===================================================================
--- trunk/src/physics.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/physics.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -0,0 +1,38 @@
+#ifndef __PHYSICS_HPP__
+#define __PHYSICS_HPP__
+
+#include "collision/collision_data.hpp"
+#include "entity.hpp"
+
+class Physics
+{
+public:
+  Physics(Entity* entity);
+  ~Physics();
+
+  void update(float elapsed_time);
+  void register_collobj(CollisionObject& object);
+
+  Vector& pos() const
+  { return entity->pos; }
+  Vector& velocity() const
+  { return entity->velocity; }
+
+private:
+  void collision(const CollisionData& data);
+  
+  void elastic_collision(const CollisionData& data, const Physics& other);
+  void bounce_collision(const CollisionData& data);
+
+  Entity* entity;
+  float mass;
+  float bounciness;
+  Vector force;
+  float air_friction;
+  float contact_friction;
+
+  std::vector<Slot> slots;
+};
+
+#endif
+

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/player.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -57,7 +57,7 @@
   sprite.set_action("Stand");
 
   // collision detection init
-  c_object = new CollisionObject(Rectf(-15, -120, 15, 0));
+  c_object = new CollisionObject(this, Rectf(-15, -120, 15, 0));
 
   c_object->set_pos(pos);
   c_object->set_velocity(velocity);
@@ -576,12 +576,11 @@
 }
 
 void
-Player::collision(const CollisionData& data, CollisionObject& other)
+Player::collision(const CollisionData& data)
 {
   // copy velocity, as "velocity" is the wanted velocity, whereas
   // cur_vel is the velocity in the current delta-frame
   Vector cur_vel = c_object->get_velocity(); 
-  (void) other;
   if (data.direction.y != 0)
     {
       cur_vel.y = 0;

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/player.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -98,7 +98,7 @@
   int get_max_energy() const;
   void hit(int points);
   
-  void collision(const CollisionData& data, CollisionObject& other);
+  void collision(const CollisionData& data);
 
   Entity* find_useable_entity();
 

Modified: trunk/src/script_manager.cpp
===================================================================
--- trunk/src/script_manager.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/script_manager.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -15,8 +15,11 @@
 #include "timer.hpp"
 #include "scripting/wrapper.hpp"
 #include "scripting/wrapper_util.hpp"
+#include "scripting/squirrel_error.hpp"
 #include "physfs/physfs_stream.hpp"
 
+using namespace Scripting;
+
 ScriptManager* script_manager = 0;
 
 static void printfunc(HSQUIRRELVM, const char* str, ...)
@@ -55,7 +58,7 @@
   sq_setprintfunc(v, printfunc);
   
   // register windstille API
-  SquirrelWrapper::register_windstille_wrapper(v);
+  register_windstille_wrapper(v);
 }
 
 ScriptManager::~ScriptManager()
@@ -166,19 +169,6 @@
 }
 
 void
-ScriptManager::remove_object(const std::string& name)
-{
-  sq_pushroottable(v);
-  sq_pushstring(v, name.c_str(), -1);
-  if(sq_deleteslot(v, -2, SQFalse) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't remove squirrel object '" << name << "'";
-    throw SquirrelError(v, msg.str());
-  }
-  sq_pop(v, 1);
-}
-
-void
 ScriptManager::fire_wakeup_event(WakeupEvent event)
 {
   for(SquirrelVMs::iterator i = squirrel_vms.begin(); i != squirrel_vms.end(); ++i) {

Modified: trunk/src/script_manager.hpp
===================================================================
--- trunk/src/script_manager.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/script_manager.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -10,6 +10,12 @@
 #include "scripting/wrapper.hpp"
 #include "scripting/wrapper_util.hpp"
 
+/**
+ * This class is responsible for managing all running squirrel threads
+ * (called coroutines by others)
+ * It contains functions for loading and starting script, keeps a list of
+ * suspended scripts and receives wakeup events for them
+ */
 class ScriptManager
 {
 public:
@@ -22,30 +28,8 @@
   void run_script(const std::string& string, const std::string& sourcename);
   void run_script(std::istream& in, const std::string& sourcename);
 
-  template<typename T>
-  void expose_object(T* object, const std::string& name, bool free)
+  HSQUIRRELVM get_vm() const
   {
-    // part1 of registration of the instance in the root table
-    sq_pushroottable(v);
-    sq_pushstring(v, name.c_str(), -1);
-
-    sq_pushroottable(v);
-    SquirrelWrapper::create_squirrel_instance(v, object, free);
-    sq_remove(v, -2);
-    
-    // register instance in root table
-    if(sq_createslot(v, -3) < 0) {
-      std::ostringstream msg;
-      msg << "Couldn't register object '" << name << "' in squirrel root table";
-      throw SquirrelError(v, msg.str());
-    }
-
-    sq_pop(v, 1);
-  }
-  void remove_object(const std::string& name);
-
-  HSQUIRRELVM get_vm()
-  {
     return v;
   }
 

Added: trunk/src/scripting/squirrel_error.cpp
===================================================================
--- trunk/src/scripting/squirrel_error.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/scripting/squirrel_error.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -0,0 +1,37 @@
+#include <config.h>
+
+#include "squirrel_error.hpp"
+#include <sstream>
+
+namespace Scripting
+{
+
+SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& message) throw()
+{
+  std::ostringstream msg;
+  msg << "Squirrel error: " << message << " (";
+  const char* lasterr;
+  sq_getlasterror(v);
+  if(sq_gettype(v, -1) != OT_STRING)
+  {
+    lasterr = "no error info";
+  }
+  else
+  {
+    sq_getstring(v, -1, &lasterr);
+  }
+  sq_pop(v, 1);
+  msg << lasterr << ")";
+  this->message = msg.str();
+}
+
+SquirrelError::~SquirrelError() throw()
+{}
+
+const char*
+SquirrelError::what() const throw()
+{
+  return message.c_str();
+}
+
+}

Added: trunk/src/scripting/squirrel_error.hpp
===================================================================
--- trunk/src/scripting/squirrel_error.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/scripting/squirrel_error.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -0,0 +1,28 @@
+#ifndef __SQUIRREL_ERROR_HPP__
+#define __SQUIRREL_ERROR_HPP__
+
+#include <squirrel.h>
+#include <stdexcept>
+
+namespace Scripting
+{
+
+/** Exception class for squirrel errors, it takes a squirrelvm and uses
+ * sq_geterror() to retrieve additional information about the last error that
+ * occured and creates a readable message from that.
+ */
+class SquirrelError : public std::exception
+{
+public:
+  SquirrelError(HSQUIRRELVM v, const std::string& message) throw();
+  virtual ~SquirrelError() throw();
+
+  const char* what() const throw();
+private:
+  std::string message;
+};
+
+}
+
+#endif
+

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/scripting/wrapper.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -8,12 +8,15 @@
 #include <new>
 #include <assert.h>
 #include <string>
+#include <sstream>
 #include <squirrel.h>
-#include "wrapper_util.hpp"
+#include "squirrel_error.hpp"
 #include "wrapper.interface.hpp"
 
-namespace SquirrelWrapper
+namespace Scripting
 {
+namespace Wrapper
+{
 
 static int GameObject_release_hook(SQUserPointer ptr, int )
 {
@@ -22,27 +25,6 @@
   return 0;
 }
 
-void create_squirrel_instance(HSQUIRRELVM v, Scripting::GameObject* object, bool setup_releasehook)
-{
-  sq_pushstring(v, "GameObject", -1);
-  if(sq_get(v, -2) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't resolved squirrel type 'GameObject'";
-    throw SquirrelError(v, msg.str());
-  }
-
-  if(sq_createinstance(v, -1) < 0 || sq_setinstanceup(v, -1, object) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't setup squirrel instance for object of type 'GameObject'";
-    throw SquirrelError(v, msg.str());
-  }
-  sq_remove(v, -2);
-
-  if(setup_releasehook) {
-    sq_setreleasehook(v, -1, GameObject_release_hook);
-  }
-}
-
 static int GameObject_get_name_wrapper(HSQUIRRELVM v)
 {
   Scripting::GameObject* _this;
@@ -95,27 +77,6 @@
   return 0;
 }
 
-void create_squirrel_instance(HSQUIRRELVM v, Scripting::TestObject* object, bool setup_releasehook)
-{
-  sq_pushstring(v, "TestObject", -1);
-  if(sq_get(v, -2) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't resolved squirrel type 'TestObject'";
-    throw SquirrelError(v, msg.str());
-  }
-
-  if(sq_createinstance(v, -1) < 0 || sq_setinstanceup(v, -1, object) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't setup squirrel instance for object of type 'TestObject'";
-    throw SquirrelError(v, msg.str());
-  }
-  sq_remove(v, -2);
-
-  if(setup_releasehook) {
-    sq_setreleasehook(v, -1, TestObject_release_hook);
-  }
-}
-
 static int TestObject_set_sprite_wrapper(HSQUIRRELVM v)
 {
   Scripting::TestObject* _this;
@@ -187,27 +148,6 @@
   return 0;
 }
 
-void create_squirrel_instance(HSQUIRRELVM v, Scripting::Player* object, bool setup_releasehook)
-{
-  sq_pushstring(v, "Player", -1);
-  if(sq_get(v, -2) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't resolved squirrel type 'Player'";
-    throw SquirrelError(v, msg.str());
-  }
-
-  if(sq_createinstance(v, -1) < 0 || sq_setinstanceup(v, -1, object) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't setup squirrel instance for object of type 'Player'";
-    throw SquirrelError(v, msg.str());
-  }
-  sq_remove(v, -2);
-
-  if(setup_releasehook) {
-    sq_setreleasehook(v, -1, Player_release_hook);
-  }
-}
-
 static int Player_start_listening_wrapper(HSQUIRRELVM v)
 {
   Scripting::Player* _this;
@@ -235,27 +175,6 @@
   return 0;
 }
 
-void create_squirrel_instance(HSQUIRRELVM v, Scripting::ScriptableObject* object, bool setup_releasehook)
-{
-  sq_pushstring(v, "ScriptableObject", -1);
-  if(sq_get(v, -2) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't resolved squirrel type 'ScriptableObject'";
-    throw SquirrelError(v, msg.str());
-  }
-
-  if(sq_createinstance(v, -1) < 0 || sq_setinstanceup(v, -1, object) < 0) {
-    std::ostringstream msg;
-    msg << "Couldn't setup squirrel instance for object of type 'ScriptableObject'";
-    throw SquirrelError(v, msg.str());
-  }
-  sq_remove(v, -2);
-
-  if(setup_releasehook) {
-    sq_setreleasehook(v, -1, ScriptableObject_release_hook);
-  }
-}
-
 static int ScriptableObject_move_to_wrapper(HSQUIRRELVM v)
 {
   Scripting::ScriptableObject* _this;
@@ -577,12 +496,120 @@
   return Scripting::spawn_object(v);
 }
 
+} // end of namespace Wrapper
+
+void create_squirrel_instance(HSQUIRRELVM v, Scripting::GameObject* object, bool setup_releasehook)
+{
+  using namespace Wrapper;
+
+  sq_pushroottable(v);
+  sq_pushstring(v, "GameObject", -1);
+  if(SQ_FAILED(sq_get(v, -2))) {
+    std::ostringstream msg;
+    msg << "Couldn't resolved squirrel type 'GameObject'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  if(SQ_FAILED(sq_createinstance(v, -1)) || SQ_FAILED(sq_setinstanceup(v, -1, object))) {
+    std::ostringstream msg;
+    msg << "Couldn't setup squirrel instance for object of type 'GameObject'";
+    throw SquirrelError(v, msg.str());
+  }
+  sq_remove(v, -2); // remove object name
+
+  if(setup_releasehook) {
+    sq_setreleasehook(v, -1, GameObject_release_hook);
+  }
+
+  sq_remove(v, -2); // remove root table
+}
+
+void create_squirrel_instance(HSQUIRRELVM v, Scripting::TestObject* object, bool setup_releasehook)
+{
+  using namespace Wrapper;
+
+  sq_pushroottable(v);
+  sq_pushstring(v, "TestObject", -1);
+  if(SQ_FAILED(sq_get(v, -2))) {
+    std::ostringstream msg;
+    msg << "Couldn't resolved squirrel type 'TestObject'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  if(SQ_FAILED(sq_createinstance(v, -1)) || SQ_FAILED(sq_setinstanceup(v, -1, object))) {
+    std::ostringstream msg;
+    msg << "Couldn't setup squirrel instance for object of type 'TestObject'";
+    throw SquirrelError(v, msg.str());
+  }
+  sq_remove(v, -2); // remove object name
+
+  if(setup_releasehook) {
+    sq_setreleasehook(v, -1, TestObject_release_hook);
+  }
+
+  sq_remove(v, -2); // remove root table
+}
+
+void create_squirrel_instance(HSQUIRRELVM v, Scripting::Player* object, bool setup_releasehook)
+{
+  using namespace Wrapper;
+
+  sq_pushroottable(v);
+  sq_pushstring(v, "Player", -1);
+  if(SQ_FAILED(sq_get(v, -2))) {
+    std::ostringstream msg;
+    msg << "Couldn't resolved squirrel type 'Player'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  if(SQ_FAILED(sq_createinstance(v, -1)) || SQ_FAILED(sq_setinstanceup(v, -1, object))) {
+    std::ostringstream msg;
+    msg << "Couldn't setup squirrel instance for object of type 'Player'";
+    throw SquirrelError(v, msg.str());
+  }
+  sq_remove(v, -2); // remove object name
+
+  if(setup_releasehook) {
+    sq_setreleasehook(v, -1, Player_release_hook);
+  }
+
+  sq_remove(v, -2); // remove root table
+}
+
+void create_squirrel_instance(HSQUIRRELVM v, Scripting::ScriptableObject* object, bool setup_releasehook)
+{
+  using namespace Wrapper;
+
+  sq_pushroottable(v);
+  sq_pushstring(v, "ScriptableObject", -1);
+  if(SQ_FAILED(sq_get(v, -2))) {
+    std::ostringstream msg;
+    msg << "Couldn't resolved squirrel type 'ScriptableObject'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  if(SQ_FAILED(sq_createinstance(v, -1)) || SQ_FAILED(sq_setinstanceup(v, -1, object))) {
+    std::ostringstream msg;
+    msg << "Couldn't setup squirrel instance for object of type 'ScriptableObject'";
+    throw SquirrelError(v, msg.str());
+  }
+  sq_remove(v, -2); // remove object name
+
+  if(setup_releasehook) {
+    sq_setreleasehook(v, -1, ScriptableObject_release_hook);
+  }
+
+  sq_remove(v, -2); // remove root table
+}
+
 void register_windstille_wrapper(HSQUIRRELVM v)
 {
+  using namespace Wrapper;
+
   sq_pushroottable(v);
   sq_pushstring(v, "VCENTER", -1);
   sq_pushinteger(v, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register constant'VCENTER'";
     throw SquirrelError(v, msg.str());
@@ -590,7 +617,7 @@
 
   sq_pushstring(v, "LEFT", -1);
   sq_pushinteger(v, 1);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register constant'LEFT'";
     throw SquirrelError(v, msg.str());
@@ -598,7 +625,7 @@
 
   sq_pushstring(v, "RIGHT", -1);
   sq_pushinteger(v, 2);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register constant'RIGHT'";
     throw SquirrelError(v, msg.str());
@@ -606,7 +633,7 @@
 
   sq_pushstring(v, "HCENTER", -1);
   sq_pushinteger(v, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register constant'HCENTER'";
     throw SquirrelError(v, msg.str());
@@ -614,7 +641,7 @@
 
   sq_pushstring(v, "TOP", -1);
   sq_pushinteger(v, 16);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register constant'TOP'";
     throw SquirrelError(v, msg.str());
@@ -622,7 +649,7 @@
 
   sq_pushstring(v, "BOTTOM", -1);
   sq_pushinteger(v, 32);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register constant'BOTTOM'";
     throw SquirrelError(v, msg.str());
@@ -630,7 +657,7 @@
 
   sq_pushstring(v, "set_sector", -1);
   sq_newclosure(v, &set_sector_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_sector'";
     throw SquirrelError(v, msg.str());
@@ -638,7 +665,7 @@
 
   sq_pushstring(v, "play_music", -1);
   sq_newclosure(v, &play_music_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'play_music'";
     throw SquirrelError(v, msg.str());
@@ -646,7 +673,7 @@
 
   sq_pushstring(v, "stop_music", -1);
   sq_newclosure(v, &stop_music_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'stop_music'";
     throw SquirrelError(v, msg.str());
@@ -654,7 +681,7 @@
 
   sq_pushstring(v, "play_sound", -1);
   sq_newclosure(v, &play_sound_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'play_sound'";
     throw SquirrelError(v, msg.str());
@@ -662,7 +689,7 @@
 
   sq_pushstring(v, "add_caption", -1);
   sq_newclosure(v, &add_caption_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'add_caption'";
     throw SquirrelError(v, msg.str());
@@ -670,7 +697,7 @@
 
   sq_pushstring(v, "end_caption", -1);
   sq_newclosure(v, &end_caption_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'end_caption'";
     throw SquirrelError(v, msg.str());
@@ -678,7 +705,7 @@
 
   sq_pushstring(v, "set_view", -1);
   sq_newclosure(v, &set_view_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_view'";
     throw SquirrelError(v, msg.str());
@@ -686,7 +713,7 @@
 
   sq_pushstring(v, "set_camera_active", -1);
   sq_newclosure(v, &set_camera_active_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_camera_active'";
     throw SquirrelError(v, msg.str());
@@ -694,7 +721,7 @@
 
   sq_pushstring(v, "set_controller_help_active", -1);
   sq_newclosure(v, &set_controller_help_active_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_controller_help_active'";
     throw SquirrelError(v, msg.str());
@@ -702,7 +729,7 @@
 
   sq_pushstring(v, "dialog_show", -1);
   sq_newclosure(v, &dialog_show_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'dialog_show'";
     throw SquirrelError(v, msg.str());
@@ -710,7 +737,7 @@
 
   sq_pushstring(v, "wait_for_dialog", -1);
   sq_newclosure(v, &wait_for_dialog_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'wait_for_dialog'";
     throw SquirrelError(v, msg.str());
@@ -718,7 +745,7 @@
 
   sq_pushstring(v, "conversation_add", -1);
   sq_newclosure(v, &conversation_add_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'conversation_add'";
     throw SquirrelError(v, msg.str());
@@ -726,7 +753,7 @@
 
   sq_pushstring(v, "conversation_show", -1);
   sq_newclosure(v, &conversation_show_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'conversation_show'";
     throw SquirrelError(v, msg.str());
@@ -734,7 +761,7 @@
 
   sq_pushstring(v, "conversation_get_selection", -1);
   sq_newclosure(v, &conversation_get_selection_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'conversation_get_selection'";
     throw SquirrelError(v, msg.str());
@@ -742,7 +769,7 @@
 
   sq_pushstring(v, "wait_for_conversation", -1);
   sq_newclosure(v, &wait_for_conversation_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'wait_for_conversation'";
     throw SquirrelError(v, msg.str());
@@ -750,7 +777,7 @@
 
   sq_pushstring(v, "run_before", -1);
   sq_newclosure(v, &run_before_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'run_before'";
     throw SquirrelError(v, msg.str());
@@ -758,7 +785,7 @@
 
   sq_pushstring(v, "save_state", -1);
   sq_newclosure(v, &save_state_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'save_state'";
     throw SquirrelError(v, msg.str());
@@ -766,7 +793,7 @@
 
   sq_pushstring(v, "load_state", -1);
   sq_newclosure(v, &load_state_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'load_state'";
     throw SquirrelError(v, msg.str());
@@ -774,7 +801,7 @@
 
   sq_pushstring(v, "list_objects", -1);
   sq_newclosure(v, &list_objects_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'list_objects'";
     throw SquirrelError(v, msg.str());
@@ -782,7 +809,7 @@
 
   sq_pushstring(v, "set_debug", -1);
   sq_newclosure(v, &set_debug_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_debug'";
     throw SquirrelError(v, msg.str());
@@ -790,7 +817,7 @@
 
   sq_pushstring(v, "get_debug", -1);
   sq_newclosure(v, &get_debug_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'get_debug'";
     throw SquirrelError(v, msg.str());
@@ -798,7 +825,7 @@
 
   sq_pushstring(v, "get_game_speed", -1);
   sq_newclosure(v, &get_game_speed_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'get_game_speed'";
     throw SquirrelError(v, msg.str());
@@ -806,7 +833,7 @@
 
   sq_pushstring(v, "set_game_speed", -1);
   sq_newclosure(v, &set_game_speed_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_game_speed'";
     throw SquirrelError(v, msg.str());
@@ -814,7 +841,7 @@
 
   sq_pushstring(v, "get_text_speed", -1);
   sq_newclosure(v, &get_text_speed_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'get_text_speed'";
     throw SquirrelError(v, msg.str());
@@ -822,7 +849,7 @@
 
   sq_pushstring(v, "set_text_speed", -1);
   sq_newclosure(v, &set_text_speed_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_text_speed'";
     throw SquirrelError(v, msg.str());
@@ -830,7 +857,7 @@
 
   sq_pushstring(v, "wait", -1);
   sq_newclosure(v, &wait_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'wait'";
     throw SquirrelError(v, msg.str());
@@ -838,7 +865,7 @@
 
   sq_pushstring(v, "display", -1);
   sq_newclosure(v, &display_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'display'";
     throw SquirrelError(v, msg.str());
@@ -846,7 +873,7 @@
 
   sq_pushstring(v, "println", -1);
   sq_newclosure(v, &println_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'println'";
     throw SquirrelError(v, msg.str());
@@ -854,7 +881,7 @@
 
   sq_pushstring(v, "set_console_font", -1);
   sq_newclosure(v, &set_console_font_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_console_font'";
     throw SquirrelError(v, msg.str());
@@ -862,7 +889,7 @@
 
   sq_pushstring(v, "spawn_object", -1);
   sq_newclosure(v, &spawn_object_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'spawn_object'";
     throw SquirrelError(v, msg.str());
@@ -877,7 +904,7 @@
   }
   sq_pushstring(v, "get_name", -1);
   sq_newclosure(v, &GameObject_get_name_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'get_name'";
     throw SquirrelError(v, msg.str());
@@ -885,7 +912,7 @@
 
   sq_pushstring(v, "remove", -1);
   sq_newclosure(v, &GameObject_remove_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'remove'";
     throw SquirrelError(v, msg.str());
@@ -893,7 +920,7 @@
 
   sq_pushstring(v, "set_active", -1);
   sq_newclosure(v, &GameObject_set_active_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_active'";
     throw SquirrelError(v, msg.str());
@@ -901,13 +928,13 @@
 
   sq_pushstring(v, "set_parent", -1);
   sq_newclosure(v, &GameObject_set_parent_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_parent'";
     throw SquirrelError(v, msg.str());
   }
 
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register class'GameObject'";
     throw SquirrelError(v, msg.str());
@@ -924,7 +951,7 @@
   }
   sq_pushstring(v, "set_sprite", -1);
   sq_newclosure(v, &TestObject_set_sprite_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_sprite'";
     throw SquirrelError(v, msg.str());
@@ -932,7 +959,7 @@
 
   sq_pushstring(v, "set_action", -1);
   sq_newclosure(v, &TestObject_set_action_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_action'";
     throw SquirrelError(v, msg.str());
@@ -940,7 +967,7 @@
 
   sq_pushstring(v, "set_pos", -1);
   sq_newclosure(v, &TestObject_set_pos_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_pos'";
     throw SquirrelError(v, msg.str());
@@ -948,7 +975,7 @@
 
   sq_pushstring(v, "set_vflip", -1);
   sq_newclosure(v, &TestObject_set_vflip_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'set_vflip'";
     throw SquirrelError(v, msg.str());
@@ -956,13 +983,13 @@
 
   sq_pushstring(v, "attach", -1);
   sq_newclosure(v, &TestObject_attach_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'attach'";
     throw SquirrelError(v, msg.str());
   }
 
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register class'TestObject'";
     throw SquirrelError(v, msg.str());
@@ -979,7 +1006,7 @@
   }
   sq_pushstring(v, "start_listening", -1);
   sq_newclosure(v, &Player_start_listening_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'start_listening'";
     throw SquirrelError(v, msg.str());
@@ -987,13 +1014,13 @@
 
   sq_pushstring(v, "stop_listening", -1);
   sq_newclosure(v, &Player_stop_listening_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'stop_listening'";
     throw SquirrelError(v, msg.str());
   }
 
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register class'Player'";
     throw SquirrelError(v, msg.str());
@@ -1010,7 +1037,7 @@
   }
   sq_pushstring(v, "move_to", -1);
   sq_newclosure(v, &ScriptableObject_move_to_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'move_to'";
     throw SquirrelError(v, msg.str());
@@ -1018,13 +1045,13 @@
 
   sq_pushstring(v, "start_flash", -1);
   sq_newclosure(v, &ScriptableObject_start_flash_wrapper, 0);
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register function'start_flash'";
     throw SquirrelError(v, msg.str());
   }
 
-  if(sq_createslot(v, -3) < 0) {
+  if(SQ_FAILED(sq_createslot(v, -3))) {
     std::ostringstream msg;
     msg << "Couldn't register class'ScriptableObject'";
     throw SquirrelError(v, msg.str());
@@ -1033,5 +1060,5 @@
   sq_pop(v, 1);
 }
 
-}
+} // end of namespace Scripting
 

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/scripting/wrapper.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -9,7 +9,7 @@
 #include <squirrel.h>
 #include "wrapper.interface.hpp"
 
-namespace SquirrelWrapper
+namespace Scripting
 {
 
 void register_windstille_wrapper(HSQUIRRELVM v);

Modified: trunk/src/scripting/wrapper_util.cpp
===================================================================
--- trunk/src/scripting/wrapper_util.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/scripting/wrapper_util.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -180,31 +180,4 @@
     printf("--------------------------------------------------------------\n");
 }
 
-//----------------------------------------------------------------------------
-
-SquirrelError::SquirrelError(HSQUIRRELVM v, const std::string& message) throw()
-{
-  std::ostringstream msg;
-  msg << "Squirrel error: " << message << " (";
-  const char* lasterr;
-  sq_getlasterror(v);
-  if(sq_gettype(v, -1) != OT_STRING) {
-    lasterr = "no error info";
-  } else {
-    sq_getstring(v, -1, &lasterr);
-  }
-  sq_pop(v, 1);
-  msg << lasterr << ")";
-  this->message = msg.str();
-}
-
-SquirrelError::~SquirrelError() throw()
-{}
-
-const char*
-SquirrelError::what() const throw()
-{
-  return message.c_str();
-}
-
 /* EOF */

Modified: trunk/src/scripting/wrapper_util.hpp
===================================================================
--- trunk/src/scripting/wrapper_util.hpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/scripting/wrapper_util.hpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -2,21 +2,9 @@
 #define __WRAPPERUTIL_HPP__
 
 #include <squirrel.h>
-#include <exception>
 #include <sstream>
 #include <string>
 
-class SquirrelError : public std::exception
-{
-public:
-  SquirrelError(HSQUIRRELVM v, const std::string& message) throw();
-  virtual ~SquirrelError() throw();
-
-  const char* what() const throw();
-private:
-  std::string message;
-};
-
 std::string squirrel2string(HSQUIRRELVM v, int i);
 void print_squirrel_stack(HSQUIRRELVM v);
 

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-09 18:17:19 UTC (rev 950)
+++ trunk/src/sector.cpp	2005-08-10 22:26:40 UTC (rev 951)
@@ -16,6 +16,7 @@
 //  You should have received a copy of the GNU General Public License
 //  along with this program; if not, write to the Free Software
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+#include <config.h>
 
 #include <iostream>
 #include <sstream>
@@ -46,12 +47,22 @@
 #include "badguy/spider_mine.hpp"
 #include "box.hpp"
 #include "scriptable_object.hpp"
+#include "scripting/squirrel_error.hpp"
 
+// The table (works like a namespace here) where the game objects will appear
+#define OBJECTS_TABLE "objects"
+
 Sector* Sector::current_ = 0;
 
 Sector::Sector(const std::string& filename)
   : player(0)
 {
+  // make sure squirrel has an "objects" table
+  script_manager->run_script(
+      "if(! (\"" OBJECTS_TABLE "\" in this)) {"
+      "  " OBJECTS_TABLE " <- {};"
+      "}", "");
+  
   if (debug) std::cout << "Creating new Sector" << std::endl;
   collision_engine = new CollisionEngine();
 
@@ -274,40 +285,88 @@
 void
 Sector::remove_object_from_squirrel(GameObject* object)
 {
-  script_manager->remove_object(object->get_name());
+  using namespace Scripting;
+
+  // get objects table
+  HSQUIRRELVM v = script_manager->get_vm();
+  sq_pushroottable(v);
+  sq_pushstring(v, OBJECTS_TABLE, -1);
+  if(SQ_FAILED(sq_get(v, -2)))
+  {
+    std::ostringstream msg;
+    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  // remove object from table
+  sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
+  if(SQ_FAILED(sq_deleteslot(v, -2, SQFalse) < 0)) {
+    std::ostringstream msg;
+    msg << "Couldn't remove squirrel object for '" << object->get_name()
+        << "'";
+    throw SquirrelError(v, msg.str());
+  }
+  
+  // pop objects and root table
+  sq_pop(v, 2);
 }
 
-void
-Sector::expose_object_to_squirrel(GameObject* object)
+// tries to find out the "real" class of an gameobject by some dynamic casting
+// and creates a matching squirrel instance for that object
+static inline void create_squirrel_instance(HSQUIRRELVM v, GameObject* object)
 {
-  // FIXME: Grumbel: I don't consider this brute-force exposing a good
-  // idea, should be up to the scripter if we ones to keep a refrence
-  // to an object or not
   ScriptableObject* script_obj = dynamic_cast<ScriptableObject*> (object);
   if(script_obj) {
-    script_manager->expose_object(new Scripting::ScriptableObject(script_obj),
-                                  object->get_name(), true);
+    create_squirrel_instance(v, new Scripting::ScriptableObject(script_obj),
+                             true);
     return;
   }
-
+  
   TestObject* tobj = dynamic_cast<TestObject*> (object);
   if(tobj) {
-    script_manager->expose_object(new Scripting::TestObject(tobj),
-                                  object->get_name(), true);
+    create_squirrel_instance(v, new Scripting::TestObject(tobj), true);
     return;
-  }
+  }                                                                             
 
   Player* player = dynamic_cast<Player*> (object);
   if(player) {
-    script_manager->expose_object(new Scripting::Player(player),
-                                  object->get_name(), true);
+    create_squirrel_instance(v, new Scripting::Player(player), true);
     return;
   }
 
-  script_manager->expose_object(new Scripting::GameObject(object),
-                                object->get_name(), true);
+  create_squirrel_instance(v, new Scripting::GameObject(object), true);
 }
 
+void
+Sector::expose_object_to_squirrel(GameObject* object)
+{
+  using namespace Scripting;
+
+  // get objects table
+  HSQUIRRELVM v = script_manager->get_vm();
+  sq_pushroottable(v);
+  sq_pushstring(v, OBJECTS_TABLE, -1);
+  if(SQ_FAILED(sq_get(v, -2)))
+  {
+    std::ostringstream msg;
+    msg << "Couldn't get objects table '" << OBJECTS_TABLE << "'";
+    throw SquirrelError(v, msg.str());
+  }
+  
+  // create squirrel instance and register in table
+  sq_pushstring(v, object->get_name().c_str(), object->get_name().size());
+  create_squirrel_instance(v, object);
+  if(SQ_FAILED(sq_createslot(v, -3)))
+  {
+    std::ostringstream msg;
+    msg << "Couldn't register object in objects tab?e";
+    throw SquirrelError(v, msg.str());
+  }
+
+  // pop roottable and objects table
+  sq_pop(v, 2);
+}
+
 GameObject*
 Sector::get_object(const std::string& name) const
 {



From grumbel at berlios.de  Sat Aug 13 05:30:48 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 13 Aug 2005 05:30:48 +0200
Subject: [Windstille-commit] r952 - trunk/data/images
Message-ID: <200508130330.j7D3UmBN004129@sheep.berlios.de>

Author: grumbel
Date: 2005-08-13 05:30:28 +0200 (Sat, 13 Aug 2005)
New Revision: 952

Added:
   trunk/data/images/unknown.png
Modified:
   trunk/data/images/streetlamp-light.png
Log:
- some new image

Modified: trunk/data/images/streetlamp-light.png
===================================================================
(Binary files differ)

Added: trunk/data/images/unknown.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/unknown.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From jamesgregory at berlios.de  Sat Aug 13 10:37:56 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 13 Aug 2005 10:37:56 +0200
Subject: [Windstille-commit] r953 - in trunk: data/scripts data/scripts/newformat2 src src/scripting
Message-ID: <200508130837.j7D8bupH008405@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-13 10:37:50 +0200 (Sat, 13 Aug 2005)
New Revision: 953

Modified:
   trunk/data/scripts/init_script_vars.nut
   trunk/data/scripts/newformat2/bob.nut
   trunk/data/scripts/windstille.nut
   trunk/src/pda.cpp
   trunk/src/pda.hpp
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/wrapper.cpp
Log:
- added objectives to pda
- scripts can add objectives or mark old objectives as complete
- renamed dialog.set to dialog.show

Modified: trunk/data/scripts/init_script_vars.nut
===================================================================
--- trunk/data/scripts/init_script_vars.nut	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/data/scripts/init_script_vars.nut	2005-08-13 08:37:50 UTC (rev 953)
@@ -1,5 +1,4 @@
 like_frank <- false;
 bob_seen_before <- false;
-bob_knows_your_mercenary <- false;
-bob_knows_job <- false;
+bob_knows_you_mercenary <- false;
 

Modified: trunk/data/scripts/newformat2/bob.nut
===================================================================
--- trunk/data/scripts/newformat2/bob.nut	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/data/scripts/newformat2/bob.nut	2005-08-13 08:37:50 UTC (rev 953)
@@ -1,52 +1,51 @@
 function intro()
 {
-	bob_seen_before = true;
-  dialog.set("Hey, my name's bob.  Are you new around here?"); 
-	conversation_add("Yes, I am.");
-	conversation_add("Go away"); 
-	if (!conversation_get())
-	{
-      ask_questions();
-	}
-	else
-	{
-      bye();
-	}
+  bob_seen_before = true;
+  dialog.show("Hey, my name's bob.  Are you new around here?"); 
+  conversation_add("Yes, I am.");
+  conversation_add("Go away"); 
+  if (!conversation_get())
+  {
+    ask_questions();
+  }
+  else
+  {
+    bye();
+  }
 }
 
 function hello_again()
 {
-	dialog.set("Hello again");
+	dialog.show("Hello again");
 	conversation_add("Hey.");
 	conversation_add("Bye");
 	if (!conversation_get())
-		ask_questions();
+	  ask_questions();
 	else
-		bye();
+	  bye();
 }
 
 function ask_questions()
 {
-	dialog.set("So what are you doing here?");
+	dialog.show("So what are you doing here?");
 	conversation_add("I work as a mercenary.");
 	conversation_add("Not much");
 	if (!conversation_get())
 	{
-      bob_knows_your_mercenary = true;
+      bob_knows_you_mercenary = true;
       offer_job();
 	}
 	else
-		bye();
+	  bye();
 }
 
 function offer_job()
 {
-	dialog.set("Are you looking for some work?");
+	dialog.show("Are you looking for some work?");
 	conversation_add("I might be, if the offer is good enough.");
 	conversation_add("No thanks.");
-	if (!conversation_get())
-	{
-      bob_knows_job = true;
+	if (!conversation_get()) {
+	  add_objective("Kill spider", "You must kill the spider at the end of the level");
       explain_job();
 	}
 	else
@@ -55,23 +54,23 @@
 
 function explain_job()
 {
-	dialog.set("Your job is to kill the spider at the end of the level ;)");
+	dialog.show("Your job is to kill the spider at the end of the level ;)");
 }
 
 function bye()
 {
-	if (bob_knows_job)
-		dialog.set("Feel free to come back if you need a job");
+	if (is_objective_given("Kill spider"))
+		dialog.show("Feel free to come back if you need a job");
 	else
-		dialog.set("See you again some time");
+		dialog.show("See you again some time");
 }
 
 //sintro();
 
 dialog <- Dialog(0, "Bob", "images/portrait.sprite");
-if (bob_knows_job)
+if (is_objective_given("Kill spider"))
 	explain_job();
-else if (bob_knows_your_mercenary)
+else if (bob_knows_you_mercenary)
 	offer_job();
 else if (bob_seen_before)
 	hello_again();

Modified: trunk/data/scripts/windstille.nut
===================================================================
--- trunk/data/scripts/windstille.nut	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/data/scripts/windstille.nut	2005-08-13 08:37:50 UTC (rev 953)
@@ -44,7 +44,7 @@
     portrait = arg_portrait;
   }
 
-  function set(text)
+  function show(text)
   {
     dialog_show(align, character, portrait, text);
     wait_for_dialog();

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/src/pda.cpp	2005-08-13 08:37:50 UTC (rev 953)
@@ -29,12 +29,19 @@
 #include "fonts.hpp"
 #include "pda.hpp"
 
-Dialog_Entry::Dialog_Entry(const std::string& arg_character, const std::string& arg_text)
+DialogEntry::DialogEntry(const std::string& arg_character, const std::string& arg_text)
   : character(arg_character),
     text(arg_text)
 {
 }
 
+ObjectiveEntry::ObjectiveEntry(const std::string& arg_name, const std::string& arg_text)
+  : name(arg_name),
+    text(arg_text),
+    complete(false)
+{
+}
+
 PDA::PDA()
   : active(false),
     state(PDA_INVENTORY)
@@ -89,8 +96,8 @@
     case PDA_INVENTORY:
       show_inventory();
       break;
-    case PDA_MISSIONS:
-      show_missions();
+    case PDA_OBJECTIVES:
+      show_objectives();
       break;
     case PDA_DIALOGS:
       show_dialogs();
@@ -114,31 +121,78 @@
 void
 PDA::add_dialog(const std::string& character, const std::string& text)
 {
-  dialogs.push_back(Dialog_Entry(character, text));
+  dialogs.push_back(DialogEntry(character, text));
 }
 
 void
+PDA::add_objective(const std::string& name, const std::string& text)
+{
+  objectives.push_back(ObjectiveEntry(name, text));
+}
+
+void
+PDA::objective_complete(const std::string& name)
+{
+  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) {
+    if (i->name == name)
+      i->complete = true;
+      return;
+  }
+}
+
+bool
+PDA::is_objective_given(const std::string& name)
+{
+  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) {
+    if (i->name == name)
+      return true;
+  }
+  
+  return false;
+}
+
+bool
+PDA::is_objective_complete(const std::string& name)
+{
+  for (std::vector<ObjectiveEntry>::iterator i = objectives.begin(); i != objectives.end(); ++i) {
+    if (i->name == name && i->complete)
+      return true;
+  }
+  
+  return false;
+}
+
+void
 PDA::show_inventory()
 {
   new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "<b>inventory</b> - missions - dialogs\n\n";
+  new_text += "<b>inventory</b> - objectives - dialogs\n\n";
 }
 
 void
-PDA::show_missions()
+PDA::show_objectives()
 {
   new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "inventory - <b>missions</b> - dialogs\n\n";
-
+  new_text += "inventory - <b>objectives</b> - dialogs\n\n";
+  
+  for (std::vector<ObjectiveEntry>::reverse_iterator i = objectives.rbegin(); i != objectives.rend(); ++i) {
+    new_text += i->name;
+    new_text += ": ";
+    if (i->complete)
+      new_text += "complete\n";
+    else
+      new_text += "incomplete\n";
+    new_text += i->text + "\n\n";
+  }
 }
 
 void
 PDA::show_dialogs()
 {
   new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "inventory - missions - <b>dialogs</b>\n\n";
+  new_text += "inventory - objectives - <b>dialogs</b>\n\n";
   
-  for (std::vector<Dialog_Entry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) {
+  for (std::vector<DialogEntry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) {
     new_text += i->character;
     new_text += ": ";
     new_text += i->text + '\n';

Modified: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/src/pda.hpp	2005-08-13 08:37:50 UTC (rev 953)
@@ -28,15 +28,25 @@
 
 class TextArea;
 
-class Dialog_Entry
+class DialogEntry
 {
 public:
-  Dialog_Entry(const std::string& arg_character, const std::string& arg_text);
+  DialogEntry(const std::string& arg_character, const std::string& arg_text);
   
   std::string character;
   std::string text;
 };
 
+class ObjectiveEntry
+{
+public:
+  ObjectiveEntry(const std::string& arg_name, const std::string& arg_text);
+  
+  std::string name;
+  std::string text;
+  bool complete;
+};
+
 /** */
 class PDA
 {
@@ -48,18 +58,25 @@
   bool is_active() const {return active;}
   void set_active(bool arg_active) {active = arg_active;}
   void add_dialog(const std::string& character, const std::string& text);
+  
+  void add_objective(const std::string& name, const std::string& text);
+  void objective_complete(const std::string& name);
+  bool is_objective_given(const std::string& name);
+  bool is_objective_complete(const std::string& name);
 
 private:
   void show_inventory();
-  void show_missions();
+  void show_objectives();
   void show_dialogs();
   
   TextArea* text_area;
   bool active;
-  std::vector<Dialog_Entry> dialogs;
+  std::vector<DialogEntry> dialogs;
+  std::vector<ObjectiveEntry> objectives;   
+  
   std::string new_text;  
   std::string old_text;
-  enum pda_state { PDA_INVENTORY, PDA_MISSIONS, PDA_DIALOGS } state;
+  enum pda_state { PDA_INVENTORY, PDA_OBJECTIVES, PDA_DIALOGS } state;
 };
 
 #endif

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/src/scripting/interface.cpp	2005-08-13 08:37:50 UTC (rev 953)
@@ -78,6 +78,26 @@
   GameSession::current()->pda.add_dialog(character, text);
 }
 
+void add_objective(const std::string& name, const std::string& text)
+{
+  GameSession::current()->pda.add_objective(name, text);
+}
+
+void objective_complete(const std::string& name)
+{
+  GameSession::current()->pda.objective_complete(name);
+}
+
+bool is_objective_given(const std::string& name)
+{
+  return GameSession::current()->pda.is_objective_given(name);
+}
+
+bool is_objective_complete(const std::string& name)
+{
+  return GameSession::current()->pda.is_objective_given(name);
+}
+
 bool run_before(HSQUIRRELVM vm)
 {
   return script_manager->run_before(vm);

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/src/scripting/interface.hpp	2005-08-13 08:37:50 UTC (rev 953)
@@ -40,6 +40,11 @@
 int  conversation_get_selection();
 void wait_for_conversation(HSQUIRRELVM v) __suspend;
 
+void add_objective(const std::string& name, const std::string& text);
+void objective_complete(const std::string& name);
+bool is_objective_given(const std::string& name);
+bool is_objective_complete(const std::string& name);
+
 bool run_before(HSQUIRRELVM vm);
 
 // for testing

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-13 03:30:28 UTC (rev 952)
+++ trunk/src/scripting/wrapper.cpp	2005-08-13 08:37:50 UTC (rev 953)
@@ -360,6 +360,50 @@
   return sq_suspendvm(v);
 }
 
+static int add_objective_wrapper(HSQUIRRELVM v)
+{
+  const char* arg0;
+  sq_getstring(v, 2, &arg0);
+  const char* arg1;
+  sq_getstring(v, 3, &arg1);
+  
+  Scripting::add_objective(arg0, arg1);
+  
+  return 0;
+}
+
+static int objective_complete_wrapper(HSQUIRRELVM v)
+{
+  const char* arg0;
+  sq_getstring(v, 2, &arg0);
+  
+  Scripting::objective_complete(arg0);
+  
+  return 0;
+}
+
+static int is_objective_given_wrapper(HSQUIRRELVM v)
+{
+  const char* arg0;
+  sq_getstring(v, 2, &arg0);
+  
+  bool return_value = Scripting::is_objective_given(arg0);
+  
+  sq_pushbool(v, return_value);
+  return 1;
+}
+
+static int is_objective_complete_wrapper(HSQUIRRELVM v)
+{
+  const char* arg0;
+  sq_getstring(v, 2, &arg0);
+  
+  bool return_value = Scripting::is_objective_complete(arg0);
+  
+  sq_pushbool(v, return_value);
+  return 1;
+}
+
 static int run_before_wrapper(HSQUIRRELVM v)
 {
   HSQUIRRELVM arg0 = v;
@@ -775,6 +819,38 @@
     throw SquirrelError(v, msg.str());
   }
 
+  sq_pushstring(v, "add_objective", -1);
+  sq_newclosure(v, &add_objective_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'add_objective'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "objective_complete", -1);
+  sq_newclosure(v, &objective_complete_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'objective_complete'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "is_objective_given", -1);
+  sq_newclosure(v, &is_objective_given_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'is_objective_given'";
+    throw SquirrelError(v, msg.str());
+  }
+
+  sq_pushstring(v, "is_objective_complete", -1);
+  sq_newclosure(v, &is_objective_complete_wrapper, 0);
+  if(SQ_FAILED(sq_createslot(v, -3))) {
+    std::ostringstream msg;
+    msg << "Couldn't register function'is_objective_complete'";
+    throw SquirrelError(v, msg.str());
+  }
+
   sq_pushstring(v, "run_before", -1);
   sq_newclosure(v, &run_before_wrapper, 0);
   if(SQ_FAILED(sq_createslot(v, -3))) {



From jamesgregory at berlios.de  Sat Aug 13 10:44:36 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 13 Aug 2005 10:44:36 +0200
Subject: [Windstille-commit] r954 - trunk/data/scripts/newformat2
Message-ID: <200508130844.j7D8ia8s010379@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-13 10:44:35 +0200 (Sat, 13 Aug 2005)
New Revision: 954

Modified:
   trunk/data/scripts/newformat2/bob.nut
Log:
change tabs to spaces, remove a comment I don't understand

Modified: trunk/data/scripts/newformat2/bob.nut
===================================================================
--- trunk/data/scripts/newformat2/bob.nut	2005-08-13 08:37:50 UTC (rev 953)
+++ trunk/data/scripts/newformat2/bob.nut	2005-08-13 08:44:35 UTC (rev 954)
@@ -16,65 +16,63 @@
 
 function hello_again()
 {
-	dialog.show("Hello again");
-	conversation_add("Hey.");
-	conversation_add("Bye");
-	if (!conversation_get())
-	  ask_questions();
-	else
-	  bye();
+  dialog.show("Hello again");
+  conversation_add("Hey.");
+  conversation_add("Bye");
+  if (!conversation_get())
+    ask_questions();
+  else
+    bye();
 }
 
 function ask_questions()
 {
-	dialog.show("So what are you doing here?");
-	conversation_add("I work as a mercenary.");
-	conversation_add("Not much");
-	if (!conversation_get())
-	{
+  dialog.show("So what are you doing here?");
+  conversation_add("I work as a mercenary.");
+  conversation_add("Not much");
+  if (!conversation_get())
+  {
       bob_knows_you_mercenary = true;
       offer_job();
-	}
-	else
-	  bye();
+  }
+  else
+    bye();
 }
 
 function offer_job()
 {
-	dialog.show("Are you looking for some work?");
-	conversation_add("I might be, if the offer is good enough.");
-	conversation_add("No thanks.");
-	if (!conversation_get()) {
-	  add_objective("Kill spider", "You must kill the spider at the end of the level");
+  dialog.show("Are you looking for some work?");
+  conversation_add("I might be, if the offer is good enough.");
+  conversation_add("No thanks.");
+  if (!conversation_get()) {
+    add_objective("Kill spider", "You must kill the spider at the end of the level");
       explain_job();
-	}
-	else
-		bye();
+  }
+  else
+    bye();
 }
 
 function explain_job()
 {
-	dialog.show("Your job is to kill the spider at the end of the level ;)");
+  dialog.show("Your job is to kill the spider at the end of the level ;)");
 }
 
 function bye()
 {
-	if (is_objective_given("Kill spider"))
-		dialog.show("Feel free to come back if you need a job");
-	else
-		dialog.show("See you again some time");
+  if (is_objective_given("Kill spider"))
+    dialog.show("Feel free to come back if you need a job");
+  else
+    dialog.show("See you again some time");
 }
 
-//sintro();
-
 dialog <- Dialog(0, "Bob", "images/portrait.sprite");
 if (is_objective_given("Kill spider"))
-	explain_job();
+  explain_job();
 else if (bob_knows_you_mercenary)
-	offer_job();
+  offer_job();
 else if (bob_seen_before)
-	hello_again();
+  hello_again();
 else
-   intro();
+  intro();
 
 /* EOF */



From grumbel at berlios.de  Sat Aug 13 13:50:40 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 13 Aug 2005 13:50:40 +0200
Subject: [Windstille-commit] r955 - in trunk/src: badguy glutil input lisp
Message-ID: <200508131150.j7DBoeTA030014@sheep.berlios.de>

Author: grumbel
Date: 2005-08-13 13:50:32 +0200 (Sat, 13 Aug 2005)
New Revision: 955

Modified:
   trunk/src/badguy/swarm.cpp
   trunk/src/badguy/swarm.hpp
   trunk/src/glutil/texture.cpp
   trunk/src/input/input_configurator.cpp
   trunk/src/lisp/properties.cpp
Log:
- added some toleranze to handle analog sticks a bit better in input configurator
- some smaller bugfixes

Modified: trunk/src/badguy/swarm.cpp
===================================================================
--- trunk/src/badguy/swarm.cpp	2005-08-13 08:44:35 UTC (rev 954)
+++ trunk/src/badguy/swarm.cpp	2005-08-13 11:50:32 UTC (rev 955)
@@ -57,8 +57,10 @@
       i->angle = rnd.drand(-M_PI, M_PI);
       i->speed = rnd.drand(50.0f, 200.0f);
 
-      i->max_speed = rnd.drand(150.0f, 200.0f);
+      i->max_speed = rnd.drand(100.0f, 200.0f);
 
+      i->turn_speed = i->max_speed/30.0f;
+
       i->last_pos = i->pos;
     }
 }
@@ -87,6 +89,14 @@
   sc.highlight().draw(array);
 }
 
+static float normalize(float angle)
+{
+  // brings angle into [0,2*M_PI[ range
+  float ret = fmod(fmod(angle, 2*M_PI) + 2*M_PI, 2*M_PI);
+  assert(ret >= 0 && ret < 2*M_PI);
+  return ret;
+}
+
 void
 Swarm::update(float delta)
 {
@@ -103,29 +113,29 @@
       float dy = target.y - i->pos.y;
 
       float target_angle   = atan2f(dy, dx);
-      float relative_angle = target_angle - i->angle;
+      float relative_angle = normalize(target_angle - i->angle);
       
-
-      if (sqrt(dx*dx + dy*dy) > 50.0f) // swarm range
+      if (sqrt(dx*dx + (dy*dy)*2.0f) > 50.0f) // swarm range
         {
-          if (fabs(relative_angle) < 1.0f)
+          if (fabs(relative_angle) < 0.3f)
             {
               //i->angle += rnd.drand(-1.0f, 1.0f) * delta;
               if (i->speed < i->max_speed) 
-                i->speed += 10.0f * delta;
+                i->speed += 100.0f * delta;
             }
           else
             {
-              if (fmod(relative_angle, 2*M_PI) > 0 && fmod(relative_angle, 2*M_PI) < M_PI)
-                i->angle += turn_speed * delta;
+              if (relative_angle <= M_PI)
+                i->angle += i->turn_speed * delta;
               else
-                i->angle -= turn_speed * delta;
+                i->angle -= i->turn_speed * delta;
             }
         }
       else
         {
-          //i->angle += rnd.drand(-15.0f, 15.0f) * delta;
+          i->angle += rnd.drand(-15.0f, 15.0f) * delta;
           //i->speed += 150.0f - fabs(i->angle);
+          i->speed = rnd.drand(50.0f, 100.0f);
         }
 
       i->pos.x += i->speed * cos(i->angle) * delta;

Modified: trunk/src/badguy/swarm.hpp
===================================================================
--- trunk/src/badguy/swarm.hpp	2005-08-13 08:44:35 UTC (rev 954)
+++ trunk/src/badguy/swarm.hpp	2005-08-13 11:50:32 UTC (rev 955)
@@ -36,6 +36,7 @@
   float  angle;
   float  speed;
   float  max_speed;
+  float  turn_speed;
 };
 
 /** */

Modified: trunk/src/glutil/texture.cpp
===================================================================
--- trunk/src/glutil/texture.cpp	2005-08-13 08:44:35 UTC (rev 954)
+++ trunk/src/glutil/texture.cpp	2005-08-13 11:50:32 UTC (rev 955)
@@ -210,6 +210,7 @@
 {
   OpenGLState state;
   state.bind_texture(*this);
+  state.activate();
 
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, mode);
   glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, mode);

Modified: trunk/src/input/input_configurator.cpp
===================================================================
--- trunk/src/input/input_configurator.cpp	2005-08-13 08:44:35 UTC (rev 954)
+++ trunk/src/input/input_configurator.cpp	2005-08-13 11:50:32 UTC (rev 955)
@@ -159,7 +159,7 @@
       break;
 
     case SDL_JOYAXISMOTION:
-      if (items.back().mode == ConfigureItem::CONFIGURE_AXIS)
+      if (items.back().mode == ConfigureItem::CONFIGURE_AXIS && (event.jaxis.value > 16384 || event.jaxis.value < -16384))
         { // FIXME: This doesn't work with analog Axis!
           InputManagerSDL::current()->bind_joystick_axis(items.back().event_id, event.jaxis.which, event.jaxis.axis);
           out << "(joystick-axis (device " << int(event.jaxis.which) << ")\n"

Modified: trunk/src/lisp/properties.cpp
===================================================================
--- trunk/src/lisp/properties.cpp	2005-08-13 08:44:35 UTC (rev 954)
+++ trunk/src/lisp/properties.cpp	2005-08-13 11:50:32 UTC (rev 955)
@@ -23,7 +23,7 @@
           {    
             const Lisp* name = child->get_list_elem(0);
             if(name->get_type() != Lisp::TYPE_SYMBOL)
-              throw std::runtime_error("property has no string as name");
+              throw std::runtime_error("property has no symbol as name");
             properties.insert(std::make_pair(
                                              std::string(name->get_symbol()), ListEntry(child)));
           }



From jamesgregory at berlios.de  Sat Aug 13 19:19:54 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Sat, 13 Aug 2005 19:19:54 +0200
Subject: [Windstille-commit] r956 - in trunk/src: . scripting
Message-ID: <200508131719.j7DHJswo006753@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-13 19:19:44 +0200 (Sat, 13 Aug 2005)
New Revision: 956

Modified:
   trunk/src/conversation.cpp
   trunk/src/dialog_manager.cpp
   trunk/src/dialog_manager.hpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/globals.cpp
   trunk/src/globals.hpp
   trunk/src/player.cpp
   trunk/src/scripting/interface.cpp
   trunk/src/scripting/interface.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/text_area.cpp
   trunk/src/text_area.hpp
Log:
- made dialogs disappear when conversation responses appear, again
- added CONVERSATION control state in the hope it might one day be possible to view a dialog and possible responses at the same time
- made it possible to find when a text area has finished writing
- made it possible to skip dialogs again, and switched it to use button events rather than check for key down
- merge GameSession set control_state functions
- removed unused global text_speed and dialog manager progress variables

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/conversation.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -108,7 +108,7 @@
               active = false;
               GameSession::current()->pda.add_dialog("Jane", choices[selection]);
               choices.clear();
-              GameSession::current()->set_game_state();
+              GameSession::current()->set_control_state(GameSession::GAME);
               script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);
               return;
               break;

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/dialog_manager.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -44,7 +44,6 @@
 void
 DialogManager::add_dialog(int alignment_, const std::string& portrait_, const std::string& text_)
 { 
-  progress  = 0;
   delay     = 0.0;
   alignment = alignment_;
   portrait  = Sprite(portrait_);
@@ -57,7 +56,6 @@
 void
 DialogManager::add_caption(int alignment_, const std::string& text_)
 {
-  progress  = 0;
   delay     = 0.0;
   alignment = alignment_;
   text      = text_;
@@ -114,11 +112,6 @@
   text_area->update(delta);
 
   delay += delta;
-  if (InputManager::get_controller().get_button_state(OK_BUTTON) 
-      && delay > 0.2 && progress * text_speed < text.size())
-    progress = int(text.size()) / text_speed;
-  else
-    progress += delta;
 
   InputEventLst events = InputManager::get_controller().get_events();
 	
@@ -126,11 +119,15 @@
     {
       if ((*i).type == BUTTON_EVENT)
         {
-          if ((*i).button.name == OK_BUTTON && (*i).button.down == true
-              && int(progress * text_speed) > int(text.size()))
+          if ((*i).button.name == OK_BUTTON && (*i).button.down == true)
             {
-              GameSession::current()->set_game_state();
-              script_manager->fire_wakeup_event(ScriptManager::DIALOG_CLOSED);
+              if (text_area->is_progress_complete())
+                {
+                  GameSession::current()->set_control_state(GameSession::GAME);
+                  script_manager->fire_wakeup_event(ScriptManager::DIALOG_CLOSED);
+                }
+              else if (delay > 0.2)
+                text_area->set_progress_complete();
             } 
         }
     }

Modified: trunk/src/dialog_manager.hpp
===================================================================
--- trunk/src/dialog_manager.hpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/dialog_manager.hpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -35,7 +35,6 @@
   
   Sprite portrait;
   std::string text;
-  float progress;
   float delay;
   TextArea* text_area;
 

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/game_session.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -205,6 +205,8 @@
             {
             case DIALOG:
               dialog_manager->update(delta);
+              break;
+            case CONVERSATION:
               conversation->update(delta);
               break;
             case GAME:

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/game_session.hpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -46,7 +46,7 @@
 class GameSession : public Screen
 {
 public:
-  enum ControlState { DIALOG, GAME };
+  enum ControlState { DIALOG, GAME, CONVERSATION };
 private:
   SceneContext sc;
 
@@ -81,8 +81,7 @@
   View* get_view() { return view; }
   PDA pda;
 
-  void set_dialog_state() { control_state = DIALOG; }
-  void set_game_state()   { control_state = GAME; }
+  void set_control_state(ControlState state) { control_state = state; }
 
   /** Switches the sector instantly without fadeout */
   void set_sector(const std::string& filename);

Modified: trunk/src/globals.cpp
===================================================================
--- trunk/src/globals.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/globals.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -24,7 +24,6 @@
 int TILE_SIZE    = 32;
 int TILE_RESOLUTION = 64;
 
-float text_speed = 15.0f;
 float game_speed = 1.0f;
 #ifdef DEBUG
 bool debug = true;

Modified: trunk/src/globals.hpp
===================================================================
--- trunk/src/globals.hpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/globals.hpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -32,7 +32,6 @@
 /** datadir => /usr/local/share/games/windstille/ */
 extern std::string datadir;
 
-extern float text_speed;
 extern float game_speed;
 extern bool sound_disabled;
 

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/player.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -115,7 +115,8 @@
   controller = InputManager::get_controller();
 
   if (!console.is_active() && !GameSession::current()->pda.is_active()
-  && GameSession::current()->get_game_state() != GameSession::DIALOG)
+  && GameSession::current()->get_game_state() != GameSession::DIALOG
+  && GameSession::current()->get_game_state() != GameSession::CONVERSATION)
     {
       switch(state) {
         case STAND:

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/scripting/interface.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -38,12 +38,12 @@
 void add_caption(int alignment, const std::string& text)
 {
   DialogManager::current()->add_caption(alignment, text);
-  GameSession::current()->set_dialog_state();
+  GameSession::current()->set_control_state(GameSession::DIALOG);
 }
 
 void end_caption()
 {
-  GameSession::current()->set_game_state();
+  GameSession::current()->set_control_state(GameSession::GAME);
 }
 
 void set_view(float x, float y)
@@ -74,7 +74,7 @@
 void dialog_show(int alignment, const std::string& character, const std::string& portrait, const std::string& text)
 {
   DialogManager::current()->add_dialog(alignment, portrait, text);
-  GameSession::current()->set_dialog_state();
+  GameSession::current()->set_control_state(GameSession::DIALOG);
   GameSession::current()->pda.add_dialog(character, text);
 }
 
@@ -140,16 +140,6 @@
   game_speed = v;
 }
 
-float get_text_speed()
-{
-  return text_speed;
-}
-
-void set_text_speed(float v)
-{
-  text_speed = v;
-}
-
 void conversation_add(const std::string& text)
 {
   Conversation::current()->add(text);
@@ -158,7 +148,7 @@
 void conversation_show()
 {
   Conversation::current()->show();
-  GameSession::current()->set_dialog_state();
+  GameSession::current()->set_control_state(GameSession::CONVERSATION);
 }
 
 int  conversation_get_selection()

Modified: trunk/src/scripting/interface.hpp
===================================================================
--- trunk/src/scripting/interface.hpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/scripting/interface.hpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -59,9 +59,6 @@
 float get_game_speed();
 void  set_game_speed(float v);
 
-float get_text_speed();
-void  set_text_speed(float v);
-
 //Waits the specified time in seconds.
 void wait(HSQUIRRELVM vm, float time) __suspend;
 

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/scripting/wrapper.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -483,25 +483,6 @@
   return 0;
 }
 
-static int get_text_speed_wrapper(HSQUIRRELVM v)
-{
-  
-  float return_value = Scripting::get_text_speed();
-  
-  sq_pushfloat(v, return_value);
-  return 1;
-}
-
-static int set_text_speed_wrapper(HSQUIRRELVM v)
-{
-  float arg0;
-  sq_getfloat(v, 2, &arg0);
-  
-  Scripting::set_text_speed(arg0);
-  
-  return 0;
-}
-
 static int wait_wrapper(HSQUIRRELVM v)
 {
   HSQUIRRELVM arg0 = v;
@@ -915,22 +896,6 @@
     throw SquirrelError(v, msg.str());
   }
 
-  sq_pushstring(v, "get_text_speed", -1);
-  sq_newclosure(v, &get_text_speed_wrapper, 0);
-  if(SQ_FAILED(sq_createslot(v, -3))) {
-    std::ostringstream msg;
-    msg << "Couldn't register function'get_text_speed'";
-    throw SquirrelError(v, msg.str());
-  }
-
-  sq_pushstring(v, "set_text_speed", -1);
-  sq_newclosure(v, &set_text_speed_wrapper, 0);
-  if(SQ_FAILED(sq_createslot(v, -3))) {
-    std::ostringstream msg;
-    msg << "Couldn't register function'set_text_speed'";
-    throw SquirrelError(v, msg.str());
-  }
-
   sq_pushstring(v, "wait", -1);
   sq_newclosure(v, &wait_wrapper, 0);
   if(SQ_FAILED(sq_createslot(v, -3))) {

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/text_area.cpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -49,6 +49,7 @@
 
   int v_space;
   bool letter_by_letter;
+  bool progress_complete;
   std::vector<TextAreaCommand> commands;
 };
 
@@ -60,6 +61,7 @@
   // FIXME: freetype might provide info for vspacing, not sure
   impl->v_space = 2;
   impl->letter_by_letter = letter_by_letter;
+  impl->progress_complete = false;
   impl->passed_time = 0;
 }
 
@@ -124,6 +126,18 @@
 }
 
 void
+TextArea::set_progress_complete()
+{
+  impl->letter_by_letter = false;
+}
+
+bool
+TextArea::is_progress_complete()
+{
+  return impl->progress_complete;
+}
+
+void
 TextArea::draw()
 {
   assert(impl->font);
@@ -153,8 +167,13 @@
   bool is_large = false;
   float eat_time = impl->passed_time;
   bool sinus = false;
-  for(std::vector<TextAreaCommand>::const_iterator i = impl->commands.begin(); i != impl->commands.end(); ++i)
+  bool break_writing = false;
+  std::vector<TextAreaCommand>::const_iterator i = impl->commands.begin();
+  for(; i != impl->commands.end(); ++i)
     {
+      if (break_writing)
+        break;
+        
       switch (i->type)
         {
         case TextAreaCommand::START:
@@ -239,7 +258,10 @@
                   for(std::string::const_iterator j = i->content.begin(); j != i->content.end(); ++j)
                     {
                       if (impl->letter_by_letter && eat_time <= 0)
-                        break;
+                        {
+                          break_writing = true;
+                          break;
+                        }
                         
                       int x = x_pos;
                       int y = y_pos;
@@ -325,6 +347,9 @@
           break;
         }
     }
+  if (i == impl->commands.end())
+    impl->progress_complete = true;
+    
   glEnd();
   glPopMatrix();
 }

Modified: trunk/src/text_area.hpp
===================================================================
--- trunk/src/text_area.hpp	2005-08-13 11:50:32 UTC (rev 955)
+++ trunk/src/text_area.hpp	2005-08-13 17:19:44 UTC (rev 956)
@@ -49,6 +49,11 @@
       with special tags */
   void set_font(TTFFont* font);
 
+  /** Skips letter by letter display */  
+  void set_progress_complete();
+  
+  bool is_progress_complete();
+
   void update(float delta);
   void draw();
 



From grumbel at berlios.de  Mon Aug 15 22:22:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 15 Aug 2005 22:22:53 +0200
Subject: [Windstille-commit] r957 - trunk/data/blender/shuttle
Message-ID: <200508152022.j7FKMr7x008967@sheep.berlios.de>

Author: grumbel
Date: 2005-08-15 22:22:51 +0200 (Mon, 15 Aug 2005)
New Revision: 957

Modified:
   trunk/data/blender/shuttle/shuttle.blend
Log:
- reduced polycount a bit and some cleanup

Modified: trunk/data/blender/shuttle/shuttle.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Mon Aug 15 22:47:02 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 15 Aug 2005 22:47:02 +0200
Subject: [Windstille-commit] r958 - in trunk/data/blender: . pistol
Message-ID: <200508152047.j7FKl2Jn010293@sheep.berlios.de>

Author: grumbel
Date: 2005-08-15 22:46:59 +0200 (Mon, 15 Aug 2005)
New Revision: 958

Added:
   trunk/data/blender/pistol/
   trunk/data/blender/pistol/pistol.blend
   trunk/data/blender/pistol/pistol.xcf
Log:
- added pistol model

Added: trunk/data/blender/pistol/pistol.blend
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/pistol/pistol.blend
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/blender/pistol/pistol.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/pistol/pistol.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 14:14:28 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 14:14:28 +0200
Subject: [Windstille-commit] r959 - trunk/data/blender/pistol
Message-ID: <200508161214.j7GCESbN019781@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 14:14:26 +0200 (Tue, 16 Aug 2005)
New Revision: 959

Added:
   trunk/data/blender/pistol/pistoltexture.png
   trunk/data/blender/pistol/pistoltexture.xcf
Modified:
   trunk/data/blender/pistol/pistol.blend
Log:
- added pistol texture


Modified: trunk/data/blender/pistol/pistol.blend
===================================================================
(Binary files differ)

Added: trunk/data/blender/pistol/pistoltexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/pistol/pistoltexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/blender/pistol/pistoltexture.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/pistol/pistoltexture.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 16:25:02 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 16:25:02 +0200
Subject: [Windstille-commit] r960 - in trunk/data/blender: . powersuit
Message-ID: <200508161425.j7GEP2R4027518@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 16:25:00 +0200 (Tue, 16 Aug 2005)
New Revision: 960

Added:
   trunk/data/blender/powersuit/
   trunk/data/blender/powersuit/powersuit.blend
Log:
- seperated powersuit

Added: trunk/data/blender/powersuit/powersuit.blend
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/powersuit/powersuit.blend
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 16:36:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 16:36:41 +0200
Subject: [Windstille-commit] r961 - trunk/data/blender/barkeeper
Message-ID: <200508161436.j7GEafDD028023@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 16:36:37 +0200 (Tue, 16 Aug 2005)
New Revision: 961

Modified:
   trunk/data/blender/barkeeper/barkeeper.blend
Log:
- resized model

Modified: trunk/data/blender/barkeeper/barkeeper.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Tue Aug 16 16:43:09 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 16:43:09 +0200
Subject: [Windstille-commit] r962 - trunk/data/3dsprites
Message-ID: <200508161443.j7GEh9uw028377@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 16:43:08 +0200 (Tue, 16 Aug 2005)
New Revision: 962

Added:
   trunk/data/3dsprites/barkeeper.wsprite
   trunk/data/3dsprites/clothtexture.png
   trunk/data/3dsprites/facetexture.png
   trunk/data/3dsprites/powersuit.wsprite
   trunk/data/3dsprites/shuttle.wsprite
   trunk/data/3dsprites/yagor.wsprite
Modified:
   trunk/data/3dsprites/suit2-texture.png
Log:
- some experminetal stuff

Added: trunk/data/3dsprites/barkeeper.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/barkeeper.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/clothtexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/clothtexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/facetexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/facetexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/powersuit.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/powersuit.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/shuttle.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/shuttle.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/data/3dsprites/suit2-texture.png
===================================================================
(Binary files differ)

Added: trunk/data/3dsprites/yagor.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/yagor.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 16:56:09 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 16:56:09 +0200
Subject: [Windstille-commit] r963 - in trunk: data/images src/glutil
Message-ID: <200508161456.j7GEu9eW029080@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 16:56:07 +0200 (Tue, 16 Aug 2005)
New Revision: 963

Added:
   trunk/data/images/404.png
Modified:
   trunk/src/glutil/texture_manager.cpp
Log:
- fallback to 404 image when the requested one isn't available

Added: trunk/data/images/404.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/404.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/glutil/texture_manager.cpp
===================================================================
--- trunk/src/glutil/texture_manager.cpp	2005-08-16 14:43:08 UTC (rev 962)
+++ trunk/src/glutil/texture_manager.cpp	2005-08-16 14:56:07 UTC (rev 963)
@@ -36,11 +36,17 @@
   if(i != textures.end())
     return i->second;
 
-  SDL_Surface* image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
-  if(!image) {
-    std::ostringstream msg;
-    msg << "Couldn't load image '" << filename << "' :" << SDL_GetError();
-    throw std::runtime_error(msg.str());
+  SDL_Surface* image = 0;
+  try {
+    image = IMG_Load_RW(get_physfs_SDLRWops(filename), 1);
+    if(!image) {
+      std::ostringstream msg;
+      msg << "Couldn't load image '" << filename << "' :" << SDL_GetError();
+      throw std::runtime_error(msg.str());
+    }
+  } catch(std::exception& e) {
+    std::cerr << e.what() << std::endl;
+    return get("images/404.png");
   }
 
   Texture texture;



From grumbel at berlios.de  Tue Aug 16 18:46:29 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 18:46:29 +0200
Subject: [Windstille-commit] r964 - trunk/data/blender/powersuit
Message-ID: <200508161646.j7GGkTp7020654@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 18:46:17 +0200 (Tue, 16 Aug 2005)
New Revision: 964

Added:
   trunk/data/blender/powersuit/powersuittexture.xcf
Modified:
   trunk/data/blender/powersuit/powersuit.blend
Log:
- started to move all textures into a single image


Modified: trunk/data/blender/powersuit/powersuit.blend
===================================================================
(Binary files differ)

Added: trunk/data/blender/powersuit/powersuittexture.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/powersuit/powersuittexture.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 19:55:13 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 19:55:13 +0200
Subject: [Windstille-commit] r965 - trunk/data/3dsprites
Message-ID: <200508161755.j7GHtDkc026656@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 19:55:09 +0200 (Tue, 16 Aug 2005)
New Revision: 965

Added:
   trunk/data/3dsprites/powersuittexture.png
Modified:
   trunk/data/3dsprites/powersuit.wsprite
Log:
- added powersuit model

Modified: trunk/data/3dsprites/powersuit.wsprite
===================================================================
(Binary files differ)

Added: trunk/data/3dsprites/powersuittexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/powersuittexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 21:12:26 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 21:12:26 +0200
Subject: [Windstille-commit] r966 - trunk/src
Message-ID: <200508161912.j7GJCQXJ030735@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 21:12:24 +0200 (Tue, 16 Aug 2005)
New Revision: 966

Modified:
   trunk/src/character.cpp
Log:
- read sprite3d from config

Modified: trunk/src/character.cpp
===================================================================
--- trunk/src/character.cpp	2005-08-16 17:55:09 UTC (rev 965)
+++ trunk/src/character.cpp	2005-08-16 19:12:24 UTC (rev 966)
@@ -38,13 +38,16 @@
   set_useable(true);
   use_verb = "Talk";
 
+  std::string sprite3d_filename = "3dsprites/heroken.wsprite";
+
   lisp::Properties props(lisp);
   props.get("name", name);
   props.get("pos", pos);
+  props.get("sprite3d", sprite3d_filename);
   props.print_unused_warnings("character");
   
-  sprite = Sprite3D("3dsprites/heroken.wsprite");
-  sprite.set_action("Stand");
+  sprite = Sprite3D(sprite3d_filename);
+  //sprite.set_action("Stand");
 }
 
 Character::~Character()



From grumbel at berlios.de  Tue Aug 16 21:12:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 21:12:41 +0200
Subject: [Windstille-commit] r967 - in trunk/src: . display
Message-ID: <200508161912.j7GJCfRj030790@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 21:12:40 +0200 (Tue, 16 Aug 2005)
New Revision: 967

Modified:
   trunk/src/display/display.cpp
   trunk/src/gameconfig.cpp
   trunk/src/gameconfig.hpp
   trunk/src/windstille_main.cpp
Log:
- added antialising support


Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-16 19:12:24 UTC (rev 966)
+++ trunk/src/display/display.cpp	2005-08-16 19:12:40 UTC (rev 967)
@@ -207,6 +207,12 @@
   SDL_GL_SetAttribute(SDL_GL_GREEN_SIZE, 5);
   SDL_GL_SetAttribute(SDL_GL_BLUE_SIZE, 5);
 
+  if (config->antialiasing)
+    {
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLEBUFFERS, 1 ); // boolean value, either it's enabled or not
+      SDL_GL_SetAttribute( SDL_GL_MULTISAMPLESAMPLES, config->antialiasing ); // 0, 2, or 4 for number of samples
+    }
+
   window = SDL_SetVideoMode(config->screen_width, config->screen_height,
                             0, SDL_OPENGL | (config->use_fullscreen ? SDL_FULLSCREEN : 0));
   if (!window)
@@ -227,6 +233,9 @@
   glLoadIdentity();
   glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);
 
+  if (config->antialiasing)
+    glEnable(GL_MULTISAMPLE_ARB); 
+
   OpenGLState::init();
 }
 

Modified: trunk/src/gameconfig.cpp
===================================================================
--- trunk/src/gameconfig.cpp	2005-08-16 19:12:24 UTC (rev 966)
+++ trunk/src/gameconfig.cpp	2005-08-16 19:12:40 UTC (rev 967)
@@ -18,6 +18,8 @@
   show_fps = false;
   sound_enabled = true;
   music_enabled = true;
+
+  antialiasing = 0;
 }
 
 Config::~Config()
@@ -44,6 +46,7 @@
     props.get("screen_height", screen_height);
     props.get("fullscreen", use_fullscreen);
     props.get("show_fps", show_fps);
+    props.get("anti-aliasing", antialiasing);
     props.get("sound_enabled", sound_enabled);
     props.get("music_enabled", music_enabled);
     props.print_unused_warnings("configfile");
@@ -66,6 +69,7 @@
 
     writer.write_int("screen_width", screen_width);
     writer.write_int("screen_height", screen_height);
+    writer.write_int("anti-aliasing", antialiasing);
     writer.write_bool("fullscreen", use_fullscreen);
     writer.write_bool("show_fps", show_fps);
     writer.write_bool("sound_enabled", sound_enabled);

Modified: trunk/src/gameconfig.hpp
===================================================================
--- trunk/src/gameconfig.hpp	2005-08-16 19:12:24 UTC (rev 966)
+++ trunk/src/gameconfig.hpp	2005-08-16 19:12:40 UTC (rev 967)
@@ -19,6 +19,8 @@
 
   bool sound_enabled;
   bool music_enabled;
+
+  int antialiasing;
 };
 
 extern Config* config;

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-16 19:12:24 UTC (rev 966)
+++ trunk/src/windstille_main.cpp	2005-08-16 19:12:40 UTC (rev 967)
@@ -62,13 +62,14 @@
 
   const int debug_flag = 256;
     
-  argp.set_help_indent(22);
+  argp.set_help_indent(24);
   argp.add_usage ("[LEVELFILE]");
   argp.add_doc   ("Windstille is a classic Jump'n Run game.");
 
   argp.add_group("Display Options:");
   argp.add_option('g', "geometry",   "WxH", "Change window size to WIDTH and HEIGHT");
   argp.add_option('f', "fullscreen", "", "Launch the game in fullscreen");
+  argp.add_option('a', "anti-aliasing", "NUM", "Enable NUMx Anti-Aliasing");
 
   argp.add_group("Sound Options:");
   argp.add_option('s', "disable-sound", "", "Disable sound");
@@ -80,12 +81,12 @@
   argp.add_group("Misc Options:");
   argp.add_option('d', "datadir",    "DIR", "Fetch game data from DIR");
   argp.add_option(debug_flag, "debug",      "", "Turn on debug output");
-  argp.add_option('v', "version",       "", "Print Windstille Version");
+  argp.add_option('x', "version",       "", "Print Windstille Version");
   argp.add_option('h', "help",       "", "Print this help");
 
   argp.add_group("Demo Recording/Playback Options:");
   argp.add_option('r', "record",      "FILE", "Record input events to FILE");
-  argp.add_option('a', "record-video","DIR",  "Record a gameplay video to DIR");
+  argp.add_option('v', "record-video","DIR",  "Record a gameplay video to DIR");
   argp.add_option('p', "play",        "FILE", "Playback input events from FILE");
 
   argp.parse_args(argc, argv);
@@ -94,11 +95,18 @@
     {
       switch (argp.get_key())
         {
+        case 'a':
+          if (sscanf(argp.get_argument().c_str(), "%d", &config->antialiasing) != 1)
+            {
+              throw std::runtime_error("Anti-Aliasing option '-a' requires argument of type {NUM}");
+            }
+          break;
+
         case 'r':
           recorder_file = argp.get_argument();
           break;
 
-        case 'a':
+        case 'x':
           screenshot_dir = argp.get_argument();
           break;
 



From grumbel at berlios.de  Tue Aug 16 23:37:37 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 23:37:37 +0200
Subject: [Windstille-commit] r968 - trunk/data/3dsprites
Message-ID: <200508162137.j7GLbb8S005900@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 23:37:35 +0200 (Tue, 16 Aug 2005)
New Revision: 968

Added:
   trunk/data/3dsprites/spider.wsprite
   trunk/data/3dsprites/spidertexture.png
Log:
- added static spider model

Added: trunk/data/3dsprites/spider.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/spider.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/spidertexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/spidertexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 16 23:38:11 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 16 Aug 2005 23:38:11 +0200
Subject: [Windstille-commit] r969 - trunk/data/blender/spider
Message-ID: <200508162138.j7GLcBko006048@sheep.berlios.de>

Author: grumbel
Date: 2005-08-16 23:38:10 +0200 (Tue, 16 Aug 2005)
New Revision: 969

Modified:
   trunk/data/blender/spider/spider.blend
Log:
- changed size a bit

Modified: trunk/data/blender/spider/spider.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Wed Aug 17 17:49:14 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 17 Aug 2005 17:49:14 +0200
Subject: [Windstille-commit] r970 - trunk/data/blender/powersuit
Message-ID: <200508171549.j7HFnEdD026158@sheep.berlios.de>

Author: grumbel
Date: 2005-08-17 17:49:13 +0200 (Wed, 17 Aug 2005)
New Revision: 970

Added:
   trunk/data/blender/powersuit/powersuittexture.png
Modified:
   trunk/data/blender/powersuit/
   trunk/data/blender/powersuit/powersuit.blend
   trunk/data/blender/powersuit/powersuittexture.xcf
Log:
- some cleanup


Property changes on: trunk/data/blender/powersuit
___________________________________________________________________
Name: svn:ignore
   + powersuit.blend1


Modified: trunk/data/blender/powersuit/powersuit.blend
===================================================================
(Binary files differ)

Added: trunk/data/blender/powersuit/powersuittexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/powersuit/powersuittexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/data/blender/powersuit/powersuittexture.xcf
===================================================================
(Binary files differ)



From grumbel at berlios.de  Wed Aug 17 17:51:09 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 17 Aug 2005 17:51:09 +0200
Subject: [Windstille-commit] r971 - trunk/data/blender/powersuit
Message-ID: <200508171551.j7HFp9SR026471@sheep.berlios.de>

Author: grumbel
Date: 2005-08-17 17:50:58 +0200 (Wed, 17 Aug 2005)
New Revision: 971

Modified:
   trunk/data/blender/powersuit/powersuit.blend
Log:
- some cleanup

Modified: trunk/data/blender/powersuit/powersuit.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Wed Aug 17 18:59:43 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 17 Aug 2005 18:59:43 +0200
Subject: [Windstille-commit] r972 - trunk/data/blender/sophie
Message-ID: <200508171659.j7HGxhrQ031503@sheep.berlios.de>

Author: grumbel
Date: 2005-08-17 18:59:24 +0200 (Wed, 17 Aug 2005)
New Revision: 972

Modified:
   trunk/data/blender/sophie/headtexture.xcf
   trunk/data/blender/sophie/sophie.blend
Log:
- some cleanup, tried to model a lowerpolygon head

Modified: trunk/data/blender/sophie/headtexture.xcf
===================================================================
(Binary files differ)

Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Wed Aug 17 22:47:27 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 17 Aug 2005 22:47:27 +0200
Subject: [Windstille-commit] r973 - trunk/data/3dsprites
Message-ID: <200508172047.j7HKlRaD023237@sheep.berlios.de>

Author: grumbel
Date: 2005-08-17 22:47:25 +0200 (Wed, 17 Aug 2005)
New Revision: 973

Added:
   trunk/data/3dsprites/sophie.wsprite
   trunk/data/3dsprites/sophieheadtexture.png
   trunk/data/3dsprites/sophietexture.png
   trunk/data/3dsprites/worker.wsprite
Log:
- some more experimental 3d characters

Added: trunk/data/3dsprites/sophie.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/sophie.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/sophieheadtexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/sophieheadtexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/sophietexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/sophietexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/worker.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/worker.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Wed Aug 17 22:50:56 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 17 Aug 2005 22:50:56 +0200
Subject: [Windstille-commit] r974 - trunk/data/blender/sophie
Message-ID: <200508172050.j7HKouKD023392@sheep.berlios.de>

Author: grumbel
Date: 2005-08-17 22:50:54 +0200 (Wed, 17 Aug 2005)
New Revision: 974

Added:
   trunk/data/blender/sophie/headtexture.png
   trunk/data/blender/sophie/sophietexture.png
   trunk/data/blender/sophie/sophietexture.xcf
Modified:
   trunk/data/blender/sophie/sophie.blend
Log:
- added texture and changed clothing a bit

Added: trunk/data/blender/sophie/headtexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/sophie/headtexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)

Added: trunk/data/blender/sophie/sophietexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/sophie/sophietexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/blender/sophie/sophietexture.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/sophie/sophietexture.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Thu Aug 18 00:41:57 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 18 Aug 2005 00:41:57 +0200
Subject: [Windstille-commit] r975 - trunk/src
Message-ID: <200508172241.j7HMfvVV002917@sheep.berlios.de>

Author: grumbel
Date: 2005-08-18 00:41:19 +0200 (Thu, 18 Aug 2005)
New Revision: 975

Modified:
   trunk/src/globals.hpp
   trunk/src/windstille_main.cpp
Log:
- fixed disable sound

Modified: trunk/src/globals.hpp
===================================================================
--- trunk/src/globals.hpp	2005-08-17 20:50:54 UTC (rev 974)
+++ trunk/src/globals.hpp	2005-08-17 22:41:19 UTC (rev 975)
@@ -33,7 +33,6 @@
 extern std::string datadir;
 
 extern float game_speed;
-extern bool sound_disabled;
 
 extern bool debug;
 extern bool collision_debug;

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-17 20:50:54 UTC (rev 974)
+++ trunk/src/windstille_main.cpp	2005-08-17 22:41:19 UTC (rev 975)
@@ -136,11 +136,11 @@
           break;
         
         case 's':
-          sound_disabled = true;
+          config->sound_enabled = false;
           break;
 
         case 'S':
-          sound_disabled = false;
+          config->sound_enabled = true;
           break;  
 
         case 'c':



From grumbel at berlios.de  Thu Aug 18 14:19:44 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 18 Aug 2005 14:19:44 +0200
Subject: [Windstille-commit] r976 - trunk/data/blender/barkeeper
Message-ID: <200508181219.j7ICJiWb021763@sheep.berlios.de>

Author: grumbel
Date: 2005-08-18 14:19:26 +0200 (Thu, 18 Aug 2005)
New Revision: 976

Modified:
   trunk/data/blender/barkeeper/barkeeper.blend
Log:
added a lower polygon version

Modified: trunk/data/blender/barkeeper/barkeeper.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Thu Aug 18 15:44:05 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 18 Aug 2005 15:44:05 +0200
Subject: [Windstille-commit] r977 - trunk/data/blender/barkeeper
Message-ID: <200508181344.j7IDi5aB017702@sheep.berlios.de>

Author: grumbel
Date: 2005-08-18 15:43:52 +0200 (Thu, 18 Aug 2005)
New Revision: 977

Added:
   trunk/data/blender/barkeeper/barkeeperheadtexture.png
   trunk/data/blender/barkeeper/barkeeperheadtexture.xcf
   trunk/data/blender/barkeeper/barkeepertexture.png
   trunk/data/blender/barkeeper/barkeepertexture.xcf
Modified:
   trunk/data/blender/barkeeper/
   trunk/data/blender/barkeeper/barkeeper.blend
Log:
- added a basic texture



Property changes on: trunk/data/blender/barkeeper
___________________________________________________________________
Name: svn:ignore
   + barkeeper.blend1


Modified: trunk/data/blender/barkeeper/barkeeper.blend
===================================================================
(Binary files differ)

Added: trunk/data/blender/barkeeper/barkeeperheadtexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/barkeeper/barkeeperheadtexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/blender/barkeeper/barkeeperheadtexture.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/barkeeper/barkeeperheadtexture.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/blender/barkeeper/barkeepertexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/barkeeper/barkeepertexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/blender/barkeeper/barkeepertexture.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/barkeeper/barkeepertexture.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Thu Aug 18 21:59:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 18 Aug 2005 21:59:53 +0200
Subject: [Windstille-commit] r978 - in trunk: data/images data/images/inventory src src/math src/scripting
Message-ID: <200508181959.j7IJxrFq002146@sheep.berlios.de>

Author: grumbel
Date: 2005-08-18 21:59:50 +0200 (Thu, 18 Aug 2005)
New Revision: 978

Added:
   trunk/data/images/inventory/
   trunk/data/images/inventory/flashlight.png
   trunk/data/images/inventory/granate.png
   trunk/data/images/inventory/keycard.png
   trunk/data/images/inventory/pda.png
   trunk/data/images/inventory/slot.png
   trunk/data/images/inventory/slot.sprite
   trunk/data/images/inventory/slothighlight.png
   trunk/data/images/inventory/slothighlight.sprite
   trunk/data/images/inventory/stone.png
   trunk/src/inventory.cpp
   trunk/src/inventory.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/math/vector.cpp
   trunk/src/math/vector.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/windstille_main.cpp
Log:
- added rotating inventory

Added: trunk/data/images/inventory/flashlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/flashlight.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/inventory/granate.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/granate.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/inventory/keycard.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/keycard.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/inventory/pda.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/pda.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/inventory/slot.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/slot.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/inventory/slot.sprite
===================================================================
--- trunk/data/images/inventory/slot.sprite	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/data/images/inventory/slot.sprite	2005-08-18 19:59:50 UTC (rev 978)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "slot.png")
+    (offset -32 -32)
+  )
+)

Added: trunk/data/images/inventory/slothighlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/slothighlight.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/inventory/slothighlight.sprite
===================================================================
--- trunk/data/images/inventory/slothighlight.sprite	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/data/images/inventory/slothighlight.sprite	2005-08-18 19:59:50 UTC (rev 978)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "slothighlight.png")
+    (offset -48 -48)
+  )
+)

Added: trunk/data/images/inventory/stone.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/inventory/stone.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/Jamfile	2005-08-18 19:59:50 UTC (rev 978)
@@ -50,6 +50,8 @@
         entity.hpp
         elevator.hpp
         elevator.cpp
+        inventory.cpp
+        inventory.hpp
         ttf_font.cpp
         ttf_font.hpp
         field.hpp

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/game_session.cpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -55,6 +55,7 @@
 #include "conversation.hpp"
 #include "collision/collision_engine.hpp"
 #include "test_object.hpp"
+#include "inventory.hpp"
 #include "glutil/surface_manager.hpp"
 #include "glutil/surface.hpp"
 #include "display/display.hpp"
@@ -74,6 +75,7 @@
   energy_bar     = new EnergyBar();
   dialog_manager = new DialogManager();
   conversation   = new Conversation();
+  inventory      = new Inventory();
 
   pause = false;
   
@@ -85,6 +87,7 @@
 
 GameSession::~GameSession()
 {
+  delete inventory;
   delete energy_bar;
   delete view;
   delete dialog_manager;
@@ -102,6 +105,7 @@
 
   // Draw HUD
   energy_bar->draw();
+  inventory->draw();
 
   if (control_state == DIALOG)
     dialog_manager->draw(); 
@@ -219,6 +223,8 @@
       pda.update(delta);
     }
   
+  inventory->update(delta);
+
   if(keystate[SDLK_ESCAPE])
     quit();
 }

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/game_session.hpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -42,6 +42,7 @@
 class Player;
 class DialogManager;
 class Conversation;
+class Inventory;
 
 class GameSession : public Screen
 {
@@ -59,6 +60,7 @@
   EnergyBar*     energy_bar;
   DialogManager* dialog_manager;
   Conversation*  conversation;
+  Inventory*     inventory;
 
   std::string filename;
 

Added: trunk/src/inventory.cpp
===================================================================
--- trunk/src/inventory.cpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/inventory.cpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -0,0 +1,174 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <iostream>
+#include <vector>
+#include "sprite2d/sprite.hpp"
+#include "input/input_manager.hpp"
+#include "input/controller.hpp"
+#include "inventory.hpp"
+
+class InventoryItem
+{
+public:
+  Sprite sprite;
+  
+  InventoryItem(const std::string& filename)
+    : sprite(filename)
+  {
+  }
+};
+
+class InventoryImpl
+{
+public:
+  int   moving;
+  float add_angle;
+  Sprite slot;
+  Sprite slothighlight;
+  typedef std::vector<InventoryItem> Items;
+  Items items;
+  int current_item;
+
+  void update(float delta);
+  void draw();
+  
+  void incr_current_item() { 
+    if (current_item == int(items.size()) - 1)
+      current_item = 0;
+    else
+      current_item += 1;
+  }
+
+  void decr_current_item() { 
+    if (current_item == 0)
+      current_item = items.size() - 1;
+    else
+      current_item -= 1;
+  }
+};
+
+Inventory::Inventory()
+  : impl(new InventoryImpl())
+{
+  impl->slot = Sprite("images/inventory/slot.sprite");
+  impl->slothighlight = Sprite("images/inventory/slothighlight.sprite");
+  impl->moving = false;
+  impl->add_angle = 0.0f;
+  impl->current_item = 0;
+
+  impl->items.push_back(InventoryItem("images/inventory/flashlight.sprite"));
+  impl->items.push_back(InventoryItem("images/inventory/stone.sprite"));
+  impl->items.push_back(InventoryItem("images/inventory/pda.sprite"));
+  impl->items.push_back(InventoryItem("images/inventory/granate.sprite"));
+  impl->items.push_back(InventoryItem("images/inventory/keycard.sprite"));
+}
+
+Inventory::~Inventory()
+{
+}
+
+void
+InventoryImpl::draw()
+{
+  Vector pos = Vector(400, 300); // View::current()->screen_Player::currently->get_pos();
+
+  int num_items = items.size();
+  float step_angle = (2*M_PI) / num_items;
+
+  for(int i = 0; i < int(items.size()); ++i)
+    {
+      Vector draw_pos = pos + Vector(128, 0).rotate(step_angle * i - M_PI/2 + add_angle);
+
+      if (i == 0 && moving == 0)
+        slothighlight.draw(draw_pos);
+      else
+        slot.draw(draw_pos);
+
+      items[(i+current_item)%items.size()].sprite.draw(draw_pos - Vector(32,32));
+    }
+}
+
+void
+Inventory::draw()
+{
+  impl->draw();
+}
+
+void
+Inventory::update(float delta)
+{
+  impl->update(delta);
+}
+
+void
+InventoryImpl::update(float delta)
+{
+  Controller controller = InputManager::get_controller();
+ 
+  float step_angle = (2*M_PI) / items.size();
+  if (fabsf(add_angle) > step_angle)
+    {
+      if (moving == 1)
+        decr_current_item();
+      else if (moving == -1)
+        incr_current_item();
+
+      moving = 0;
+      add_angle = 0;
+    }
+
+  if (controller.get_axis_state(X_AXIS) < -0.5f)
+    {
+      if (moving == 1)
+        {
+          add_angle = -step_angle + add_angle;
+          decr_current_item();
+        }
+
+      moving = -1;
+    }
+  else if (controller.get_axis_state(X_AXIS) > 0.5f)
+    {
+      if (moving == -1)
+        {
+          add_angle = step_angle + add_angle;
+          incr_current_item();
+        }
+
+      moving =  1;
+    }
+
+  if (moving == -1)
+    {
+      add_angle -= 3 * delta;
+    }
+  else if (moving == 1)
+    {
+      add_angle += 3 * delta;
+    }
+}
+
+/* EOF */

Added: trunk/src/inventory.hpp
===================================================================
--- trunk/src/inventory.hpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/inventory.hpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -0,0 +1,50 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_INVENTORY_HPP
+#define HEADER_WINDSTILLE_INVENTORY_HPP
+
+#include "sharedptr.hpp"
+
+class InventoryImpl;
+
+/** */
+class Inventory
+{
+private:
+public:
+  Inventory();
+  ~Inventory();
+
+  void draw();
+  void update(float delta);
+
+private:
+  SharedPtr<InventoryImpl> impl;
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/math/vector.cpp
===================================================================
--- trunk/src/math/vector.cpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/math/vector.cpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -38,4 +38,11 @@
   return s;
 }
 
+Vector
+Vector::rotate(float angle) const
+{
+  float len = norm();
+  return Vector(len * cos(angle), len * sin(angle));
+}
+
 /* EOF */

Modified: trunk/src/math/vector.hpp
===================================================================
--- trunk/src/math/vector.hpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/math/vector.hpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -106,6 +106,10 @@
     return *this;
   }
 
+  /** Takes angle in radian and returns a copy of the vector rotated
+      by \a angle */
+  Vector rotate(float angle) const;
+
   /// Scalar product of 2 vectors
   float operator*(const Vector& other) const
     {

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/scripting/wrapper.cpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/scripting/wrapper.hpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/windstille_main.cpp
===================================================================
--- trunk/src/windstille_main.cpp	2005-08-18 13:43:52 UTC (rev 977)
+++ trunk/src/windstille_main.cpp	2005-08-18 19:59:50 UTC (rev 978)
@@ -190,6 +190,8 @@
       {
         if (!controller_file.empty())
           InputManager::init(controller_file);
+        else if (PHYSFS_exists("controller.cfg"))
+          InputManager::init("controller.cfg");
         else
           InputManager::init("controller/keyboard.scm");
       }



From grumbel at berlios.de  Fri Aug 19 00:13:54 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 00:13:54 +0200
Subject: [Windstille-commit] r979 - in trunk/src: . scripting
Message-ID: <200508182213.j7IMDsjf011728@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 00:13:52 +0200 (Fri, 19 Aug 2005)
New Revision: 979

Modified:
   trunk/src/controller_help_window.cpp
   trunk/src/controller_help_window.hpp
   trunk/src/conversation.cpp
   trunk/src/conversation.hpp
   trunk/src/dialog_manager.cpp
   trunk/src/dialog_manager.hpp
   trunk/src/energy_bar.cpp
   trunk/src/energy_bar.hpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/inventory.cpp
   trunk/src/inventory.hpp
   trunk/src/pda.cpp
   trunk/src/pda.hpp
   trunk/src/player.cpp
   trunk/src/screen.hpp
   trunk/src/scripting/interface.cpp
   trunk/src/sector.hpp
Log:
- turned a bunch of GameSession overlays into 'Screen's, this should be used cleanup the event handling a bit

Modified: trunk/src/controller_help_window.cpp
===================================================================
--- trunk/src/controller_help_window.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/controller_help_window.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -107,7 +107,7 @@
 }
 
 void
-ControllerHelpWindow::update(float delta)
+ControllerHelpWindow::update(float delta, const Controller& controller)
 {
   impl->text_area->update(delta);
 }

Modified: trunk/src/controller_help_window.hpp
===================================================================
--- trunk/src/controller_help_window.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/controller_help_window.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -26,18 +26,19 @@
 #ifndef HEADER_CONTROLLER_HELP_WINDOW_HPP
 #define HEADER_CONTROLLER_HELP_WINDOW_HPP
 
+#include "screen.hpp"
 #include "sharedptr.hpp"
 
 class ControllerHelpWindowImpl;
 
 /** */
-class ControllerHelpWindow
+class ControllerHelpWindow : public Screen
 {
 public:
   ControllerHelpWindow();
 
   void draw();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
   void set_active(bool active);
   static ControllerHelpWindow* current() { return current_; }
 

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/conversation.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -74,13 +74,12 @@
 }
 
 void
-Conversation::update(float delta)
+Conversation::update(float delta, const Controller& controller)
 {
   (void) delta;
   if (!active)
     return;
-    
-  Controller controller = InputManager::get_controller();
+
   const InputEventLst& events = controller.get_events();
 
   for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i)
@@ -106,7 +105,7 @@
             {
             case OK_BUTTON:
               active = false;
-              GameSession::current()->pda.add_dialog("Jane", choices[selection]);
+              GameSession::current()->get_pda().add_dialog("Jane", choices[selection]);
               choices.clear();
               GameSession::current()->set_control_state(GameSession::GAME);
               script_manager->fire_wakeup_event(ScriptManager::CONVERSATION_CLOSED);

Modified: trunk/src/conversation.hpp
===================================================================
--- trunk/src/conversation.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/conversation.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -22,10 +22,11 @@
 
 #include <vector>
 #include <string>
+#include "screen.hpp"
 
 /** Displays a list of text strings from which the user can select
     one, used to form multiple-choice dialogs */
-class Conversation
+class Conversation : public Screen
 {
 private:
   bool active;
@@ -41,7 +42,7 @@
   Conversation();
 
   void draw();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
 
   void add(const std::string& text);
   int  get_selection() const;

Modified: trunk/src/dialog_manager.cpp
===================================================================
--- trunk/src/dialog_manager.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/dialog_manager.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -107,13 +107,13 @@
 }
 
 void
-DialogManager::update(float delta)
+DialogManager::update(float delta, const Controller& controller)
 {
   text_area->update(delta);
 
   delay += delta;
 
-  InputEventLst events = InputManager::get_controller().get_events();
+  InputEventLst events = controller.get_events();
 	
   for (InputEventLst::iterator i = events.begin(); i != events.end(); ++i)
     {

Modified: trunk/src/dialog_manager.hpp
===================================================================
--- trunk/src/dialog_manager.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/dialog_manager.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -24,11 +24,12 @@
 #include <string>
 #include "sprite2d/sprite.hpp"
 #include "globals.hpp"
+#include "screen.hpp"
 
 class TextArea;
 
 /** */
-class DialogManager
+class DialogManager : public Screen
 {
 private:
   void create_text();
@@ -67,7 +68,7 @@
   ~DialogManager();
 
   void draw();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
 
   void add_dialog(int alignment, const std::string& portrait, const std::string& text);
   void add_caption(int alignment, const std::string& text);

Modified: trunk/src/energy_bar.cpp
===================================================================
--- trunk/src/energy_bar.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/energy_bar.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -53,7 +53,7 @@
 }
 
 void
-EnergyBar::update(float delta)
+EnergyBar::update(float delta, const Controller& controller)
 {
   bar.update(delta);
 }

Modified: trunk/src/energy_bar.hpp
===================================================================
--- trunk/src/energy_bar.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/energy_bar.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -20,10 +20,11 @@
 #ifndef HEADER_ENERGYBAR_HXX
 #define HEADER_ENERGYBAR_HXX
 
+#include "screen.hpp"
 #include "sprite2d/sprite.hpp"
 
 /** */
-class EnergyBar
+class EnergyBar : public Screen
 {
 private:
   Sprite bar;
@@ -32,7 +33,7 @@
   ~EnergyBar();
   
   void draw();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
 private:
   EnergyBar (const EnergyBar&);
   EnergyBar& operator= (const EnergyBar&);

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/game_session.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -203,15 +203,15 @@
           break;
 
         case RUNNING:
-          sector->update (delta);
-          energy_bar->update(delta);
+          sector->update(delta);
+          energy_bar->update(delta, controller);
           switch (control_state) 
             {
             case DIALOG:
-              dialog_manager->update(delta);
+              dialog_manager->update(delta, controller);
               break;
             case CONVERSATION:
-              conversation->update(delta);
+              conversation->update(delta, controller);
               break;
             case GAME:
               break;
@@ -219,11 +219,11 @@
           break;
         }
       
-      controller_help_window.update(delta);
-      pda.update(delta);
+      controller_help_window.update(delta, controller);
+      pda.update(delta, controller);
     }
   
-  inventory->update(delta);
+  inventory->update(delta, controller);
 
   if(keystate[SDLK_ESCAPE])
     quit();
@@ -329,4 +329,10 @@
     }
 }
 
+PDA&
+GameSession::get_pda()
+{
+  return pda;
+}
+
 /* EOF */

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/game_session.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -57,10 +57,12 @@
 
   Sector*        sector;
   View*          view;
+
   EnergyBar*     energy_bar;
   DialogManager* dialog_manager;
   Conversation*  conversation;
   Inventory*     inventory;
+  PDA            pda;
 
   std::string filename;
 
@@ -81,7 +83,6 @@
 
   SceneContext& get_scene_context() { return sc; }
   View* get_view() { return view; }
-  PDA pda;
 
   void set_control_state(ControlState state) { control_state = state; }
 
@@ -99,6 +100,8 @@
   void update(float delta, const Controller& controller);
   void handle_event(const SDL_Event& event);
 
+  PDA& get_pda();
+
   void quit();
 };
 

Modified: trunk/src/inventory.cpp
===================================================================
--- trunk/src/inventory.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/inventory.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -52,7 +52,7 @@
   Items items;
   int current_item;
 
-  void update(float delta);
+  void update(float delta, const Controller& controller);
   void draw();
   
   void incr_current_item() { 
@@ -118,16 +118,14 @@
 }
 
 void
-Inventory::update(float delta)
+Inventory::update(float delta, const Controller& controller)
 {
-  impl->update(delta);
+  impl->update(delta, controller);
 }
 
 void
-InventoryImpl::update(float delta)
+InventoryImpl::update(float delta, const Controller& controller)
 {
-  Controller controller = InputManager::get_controller();
- 
   float step_angle = (2*M_PI) / items.size();
   if (fabsf(add_angle) > step_angle)
     {

Modified: trunk/src/inventory.hpp
===================================================================
--- trunk/src/inventory.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/inventory.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -26,12 +26,13 @@
 #ifndef HEADER_WINDSTILLE_INVENTORY_HPP
 #define HEADER_WINDSTILLE_INVENTORY_HPP
 
+#include "screen.hpp"
 #include "sharedptr.hpp"
 
 class InventoryImpl;
 
 /** */
-class Inventory
+class Inventory : public Screen
 {
 private:
 public:
@@ -39,7 +40,7 @@
   ~Inventory();
 
   void draw();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
 
 private:
   SharedPtr<InventoryImpl> impl;

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/pda.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -67,12 +67,11 @@
 }
 
 void
-PDA::update(float delta)
+PDA::update(float delta, const Controller& controller)
 {
   if (!active)
     return;
   
-  Controller controller = InputManager::get_controller();
   const InputEventLst& events = controller.get_events();
   for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i) {
     if (i->type == AXIS_EVENT && i->axis.name == X_AXIS) {

Modified: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/pda.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -26,6 +26,8 @@
 #ifndef HEADER_PDA_HPP
 #define HEADER_PDA_HPP
 
+#include "screen.hpp"
+
 class TextArea;
 
 class DialogEntry
@@ -48,13 +50,13 @@
 };
 
 /** */
-class PDA
+class PDA : public Screen
 {
 public:
   PDA();
 
   void draw();
-  void update(float delta);
+  void update(float delta, const Controller& controller);
   bool is_active() const {return active;}
   void set_active(bool arg_active) {active = arg_active;}
   void add_dialog(const std::string& character, const std::string& text);

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/player.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -114,7 +114,7 @@
 {
   controller = InputManager::get_controller();
 
-  if (!console.is_active() && !GameSession::current()->pda.is_active()
+  if (!console.is_active() && !GameSession::current()->get_pda().is_active()
   && GameSession::current()->get_game_state() != GameSession::DIALOG
   && GameSession::current()->get_game_state() != GameSession::CONVERSATION)
     {

Modified: trunk/src/screen.hpp
===================================================================
--- trunk/src/screen.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/screen.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -32,9 +32,15 @@
   Screen();
   virtual ~Screen();
 
+  /** Draw the current screen */
   virtual void draw() =0;
+
+  /** Update the current screen by \a delta and with input from \a
+      controller */
   virtual void update(float delta, const Controller& controller) =0;
-  virtual void handle_event(const SDL_Event& event) =0;
+
+  /** Called once a new SDL_Event arrives */
+  virtual void handle_event(const SDL_Event& event) {}
 };
 
 #endif

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/scripting/interface.cpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -75,27 +75,27 @@
 {
   DialogManager::current()->add_dialog(alignment, portrait, text);
   GameSession::current()->set_control_state(GameSession::DIALOG);
-  GameSession::current()->pda.add_dialog(character, text);
+  GameSession::current()->get_pda().add_dialog(character, text);
 }
 
 void add_objective(const std::string& name, const std::string& text)
 {
-  GameSession::current()->pda.add_objective(name, text);
+  GameSession::current()->get_pda().add_objective(name, text);
 }
 
 void objective_complete(const std::string& name)
 {
-  GameSession::current()->pda.objective_complete(name);
+  GameSession::current()->get_pda().objective_complete(name);
 }
 
 bool is_objective_given(const std::string& name)
 {
-  return GameSession::current()->pda.is_objective_given(name);
+  return GameSession::current()->get_pda().is_objective_given(name);
 }
 
 bool is_objective_complete(const std::string& name)
 {
-  return GameSession::current()->pda.is_objective_given(name);
+  return GameSession::current()->get_pda().is_objective_given(name);
 }
 
 bool run_before(HSQUIRRELVM vm)

Modified: trunk/src/sector.hpp
===================================================================
--- trunk/src/sector.hpp	2005-08-18 19:59:50 UTC (rev 978)
+++ trunk/src/sector.hpp	2005-08-18 22:13:52 UTC (rev 979)
@@ -68,6 +68,7 @@
   void commit_removes();
   void expose_object_to_squirrel(GameObject* object);
   void remove_object_from_squirrel(GameObject* object);
+
 public:
   Sector(const std::string& filename);
   ~Sector();



From grumbel at berlios.de  Fri Aug 19 00:33:51 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 00:33:51 +0200
Subject: [Windstille-commit] r980 - trunk/src
Message-ID: <200508182233.j7IMXpuL022208@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 00:33:39 +0200 (Fri, 19 Aug 2005)
New Revision: 980

Modified:
   trunk/src/inventory.cpp
   trunk/src/ttf_font.cpp
   trunk/src/ttf_font.hpp
Log:
- added draw_center to TTFFont

Modified: trunk/src/inventory.cpp
===================================================================
--- trunk/src/inventory.cpp	2005-08-18 22:13:52 UTC (rev 979)
+++ trunk/src/inventory.cpp	2005-08-18 22:33:39 UTC (rev 980)
@@ -26,6 +26,7 @@
 #include <iostream>
 #include <vector>
 #include "sprite2d/sprite.hpp"
+#include "fonts.hpp"
 #include "input/input_manager.hpp"
 #include "input/controller.hpp"
 #include "inventory.hpp"
@@ -33,10 +34,11 @@
 class InventoryItem
 {
 public:
+  std::string name;
   Sprite sprite;
   
-  InventoryItem(const std::string& filename)
-    : sprite(filename)
+  InventoryItem(const std::string& name, const std::string& filename)
+    : name(name), sprite(filename)
   {
   }
 };
@@ -79,11 +81,11 @@
   impl->add_angle = 0.0f;
   impl->current_item = 0;
 
-  impl->items.push_back(InventoryItem("images/inventory/flashlight.sprite"));
-  impl->items.push_back(InventoryItem("images/inventory/stone.sprite"));
-  impl->items.push_back(InventoryItem("images/inventory/pda.sprite"));
-  impl->items.push_back(InventoryItem("images/inventory/granate.sprite"));
-  impl->items.push_back(InventoryItem("images/inventory/keycard.sprite"));
+  impl->items.push_back(InventoryItem("Flashlight",  "images/inventory/flashlight.sprite"));
+  impl->items.push_back(InventoryItem("Stone",       "images/inventory/stone.sprite"));
+  impl->items.push_back(InventoryItem("PDA",         "images/inventory/pda.sprite"));
+  impl->items.push_back(InventoryItem("5x Granates", "images/inventory/granate.sprite"));
+  impl->items.push_back(InventoryItem("Lv1 Keycard", "images/inventory/keycard.sprite"));
 }
 
 Inventory::~Inventory()
@@ -100,14 +102,20 @@
 
   for(int i = 0; i < int(items.size()); ++i)
     {
+      const InventoryItem& item = items[(i+current_item)%items.size()];
       Vector draw_pos = pos + Vector(128, 0).rotate(step_angle * i - M_PI/2 + add_angle);
 
       if (i == 0 && moving == 0)
-        slothighlight.draw(draw_pos);
+        {
+          slothighlight.draw(draw_pos);
+          Fonts::ttfdialog->draw_center(draw_pos.x, draw_pos.y - 64, item.name);
+        }
       else
-        slot.draw(draw_pos);
+        {
+          slot.draw(draw_pos);
+        }
 
-      items[(i+current_item)%items.size()].sprite.draw(draw_pos - Vector(32,32));
+      item.sprite.draw(draw_pos - Vector(32,32));
     }
 }
 

Modified: trunk/src/ttf_font.cpp
===================================================================
--- trunk/src/ttf_font.cpp	2005-08-18 22:13:52 UTC (rev 979)
+++ trunk/src/ttf_font.cpp	2005-08-18 22:33:39 UTC (rev 980)
@@ -238,6 +238,12 @@
   glEnd();
 }
 
+void
+TTFFont::draw_center(float x_pos, float y_pos, const std::string& str, const Color& color)
+{
+  draw(x_pos - get_width(str)/2, y_pos, str, color);
+}
+
 int
 TTFFont::get_width(const std::string& text) const
 {

Modified: trunk/src/ttf_font.hpp
===================================================================
--- trunk/src/ttf_font.hpp	2005-08-18 22:13:52 UTC (rev 979)
+++ trunk/src/ttf_font.hpp	2005-08-18 22:33:39 UTC (rev 980)
@@ -70,6 +70,7 @@
 
   const TTFCharacter& get_character(int c) const;
   void draw(float x_pos, float y_pos, const std::string& str, const Color& color = Color(1.0f, 1.0f, 1.0f));
+  void draw_center(float x_pos, float y_pos, const std::string& str, const Color& color = Color(1.0f, 1.0f, 1.0f));
 private:
   TTFFontImpl* impl;
 };



From grumbel at berlios.de  Fri Aug 19 01:24:52 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 01:24:52 +0200
Subject: [Windstille-commit] r981 - in trunk/src: . scripting
Message-ID: <200508182324.j7INOq92021575@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 01:24:37 +0200 (Fri, 19 Aug 2005)
New Revision: 981

Modified:
   trunk/src/conversation.cpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/player.cpp
   trunk/src/scripting/interface.cpp
Log:
- moved GameSession variables into GameSessionImpl

Modified: trunk/src/conversation.cpp
===================================================================
--- trunk/src/conversation.cpp	2005-08-18 22:33:39 UTC (rev 980)
+++ trunk/src/conversation.cpp	2005-08-18 23:24:37 UTC (rev 981)
@@ -24,6 +24,7 @@
 #include "script_manager.hpp"
 #include "display/display.hpp"
 #include "conversation.hpp"
+#include "pda.hpp"
 #include "game_session.hpp"
 
 Conversation* Conversation::current_ = 0;

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-18 22:33:39 UTC (rev 980)
+++ trunk/src/game_session.cpp	2005-08-18 23:24:37 UTC (rev 981)
@@ -59,67 +59,90 @@
 #include "glutil/surface_manager.hpp"
 #include "glutil/surface.hpp"
 #include "display/display.hpp"
+#include "pda.hpp"
 
 #include "game_session.hpp"
 
 GameSession* GameSession::current_ = 0; 
 
+class GameSessionImpl
+{
+public:
+  SceneContext sc;
+
+  float fadeout_value;
+
+  Sector* sector;
+  View    view;
+
+  std::string filename;
+
+  bool pause;
+
+  enum { NO_ACTION, QUIT_ACTION, CHANGE_SECTOR_ACTION } next_action;
+  
+  enum { FADEIN, RUNNING, FADEOUT } fade_state;
+  GameSession::ControlState control_state;
+
+  // GUI Elements
+  ControllerHelpWindow controller_help_window;
+  EnergyBar     energy_bar;
+  DialogManager dialog_manager;
+  Conversation  conversation;
+  Inventory     inventory;
+  PDA           pda;
+
+  GameSessionImpl() {
+    sector = 0;
+  }
+  ~GameSessionImpl() {
+    delete sector;
+  }
+
+  void draw();
+  void update(float delta, const Controller& controller);
+  void handle_event(const SDL_Event& event);
+};
+
 GameSession::GameSession(const std::string& arg_filename)
-  : sector (0),
-    filename(arg_filename)
+  : impl(new GameSessionImpl())
 {
+  impl->filename = arg_filename;
+
   if (debug) std::cout << "Creating new GameSession" << std::endl;
   current_ = this;
 
-  view           = new View();  
-  energy_bar     = new EnergyBar();
-  dialog_manager = new DialogManager();
-  conversation   = new Conversation();
-  inventory      = new Inventory();
-
-  pause = false;
+  impl->pause = false;
   
   if (1)
     script_manager->run_script_file("scripts/init_script_vars.nut");
     
-  set_sector(filename);
+  set_sector(impl->filename);
 }
 
 GameSession::~GameSession()
 {
-  delete inventory;
-  delete energy_bar;
-  delete view;
-  delete dialog_manager;
-  delete conversation;
-  delete sector;
 }
 
 void
-GameSession::draw_game()
+GameSessionImpl::draw()
 {
-  view->draw(sc);
+  view.draw(sc);
 
   // Render the scene to the screen
   sc.render();
 
   // Draw HUD
-  energy_bar->draw();
-  inventory->draw();
+  energy_bar.draw();
+  inventory.draw();
 
-  if (control_state == DIALOG)
-    dialog_manager->draw(); 
+  if (control_state == GameSession::DIALOG)
+    dialog_manager.draw(); 
   
-  conversation->draw();
+  conversation.draw();
   controller_help_window.draw();
   pda.draw();
-}
 
-void
-GameSession::draw()
-{
-  draw_game();
-
   switch (fade_state)
     {
     case FADEOUT:
@@ -145,7 +168,7 @@
 }
 
 void
-GameSession::update(float delta, const Controller& controller)
+GameSessionImpl::update(float delta, const Controller& controller)
 {  
   if (controller.button_was_pressed(PDA_BUTTON))
     pda.set_active(!pda.is_active());
@@ -171,7 +194,7 @@
       game_time += delta;
       script_manager->update();
       
-      view->update(delta);
+      view.update(delta);
   
       switch (fade_state)
         {
@@ -187,7 +210,7 @@
               switch(next_action)
                 {
                 case CHANGE_SECTOR_ACTION:
-                  set_sector(filename);
+                  GameSession::current()->set_sector(filename);
                   break;
 
                 case QUIT_ACTION:
@@ -204,16 +227,16 @@
 
         case RUNNING:
           sector->update(delta);
-          energy_bar->update(delta, controller);
+          energy_bar.update(delta, controller);
           switch (control_state) 
             {
-            case DIALOG:
-              dialog_manager->update(delta, controller);
+            case GameSession::DIALOG:
+              dialog_manager.update(delta, controller);
               break;
-            case CONVERSATION:
-              conversation->update(delta, controller);
+            case GameSession::CONVERSATION:
+              conversation.update(delta, controller);
               break;
-            case GAME:
+            case GameSession::GAME:
               break;
             }
           break;
@@ -223,48 +246,48 @@
       pda.update(delta, controller);
     }
   
-  inventory->update(delta, controller);
+  inventory.update(delta, controller);
 
   if(keystate[SDLK_ESCAPE])
-    quit();
+    GameSession::current()->quit();
 }
 
 void
 GameSession::change_sector(const std::string& arg_filename)
 {
-  filename = arg_filename;
+  impl->filename = arg_filename;
  
   sound_manager->stop_music();
 
-  fade_state    = FADEOUT;
-  fadeout_value = 0;
-  next_action   = CHANGE_SECTOR_ACTION;
+  impl->fade_state    = GameSessionImpl::FADEOUT;
+  impl->fadeout_value = 0;
+  impl->next_action   = GameSessionImpl::CHANGE_SECTOR_ACTION;
 }
 
 void
 GameSession::set_sector(const std::string& arg_filename)
 {
-  delete sector;
-  sector = new Sector(filename);
+  delete impl->sector;
+  impl->sector = new Sector(impl->filename);
  
-  GameObject::set_world(sector);
+  GameObject::set_world(impl->sector);
 
   //FIXME: does the TestObject class still need to exist?
   //sector->add(new TestObject());
   
-  sector->spawn_player("default");
-  sector->activate();
+  impl->sector->spawn_player("default");
+  impl->sector->activate();
     
-  fade_state    = FADEIN;
-  fadeout_value = 0;
-  control_state = GAME;
-  next_action   = NO_ACTION;
+  impl->fade_state    = GameSessionImpl::FADEIN;
+  impl->fadeout_value = 0;
+  impl->control_state = GAME;
+  impl->next_action   = GameSessionImpl::NO_ACTION;
 
   if (debug) std::cout << "Finished changing sector" << std::endl;
 }
 
 void
-GameSession::handle_event(const SDL_Event& event)
+GameSessionImpl::handle_event(const SDL_Event& event)
 {
   switch(event.type)
   {
@@ -320,19 +343,61 @@
 void
 GameSession::quit()
 {
-  if (fade_state != FADEOUT)
+  if (impl->fade_state != GameSessionImpl::FADEOUT)
     {
-      fadeout_value = 0;
+      impl->fadeout_value = 0;
       sound_manager->stop_music();
-      fade_state = FADEOUT;
-      next_action = QUIT_ACTION;
+      impl->fade_state  = GameSessionImpl::FADEOUT;
+      impl->next_action = GameSessionImpl::QUIT_ACTION;
     }
 }
 
 PDA&
 GameSession::get_pda()
 {
-  return pda;
+  return impl->pda;
 }
 
+void
+GameSession::draw()
+{
+  impl->draw();
+}
+
+void
+GameSession::update(float delta, const Controller& controller)
+{
+  impl->update(delta, controller);
+}
+
+void
+GameSession::handle_event(const SDL_Event& event)
+{
+  impl->handle_event(event);
+}
+
+View*
+GameSession::get_view() 
+{
+  return &impl->view; 
+}
+
+void
+GameSession::set_control_state(ControlState state) 
+{
+  impl->control_state = state; 
+}
+
+GameSession::ControlState
+GameSession::get_game_state() const 
+{
+  return impl->control_state; 
+}
+
+const std::string&
+GameSession::get_filename() const 
+{
+ return impl->filename; 
+}
+
 /* EOF */

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-18 22:33:39 UTC (rev 980)
+++ trunk/src/game_session.hpp	2005-08-18 23:24:37 UTC (rev 981)
@@ -32,10 +32,10 @@
 #include "squirrel/include/squirrel.h"
 #include "screen.hpp"
 #include "controller_help_window.hpp"
-#include "pda.hpp"
 #include "sprite2d/sprite.hpp"
 #include "globals.hpp"
 
+class PDA;
 class EnergyBar;
 class View;
 class Sector;
@@ -44,47 +44,23 @@
 class Conversation;
 class Inventory;
 
+class GameSessionImpl;
+
 class GameSession : public Screen
 {
 public:
   enum ControlState { DIALOG, GAME, CONVERSATION };
 private:
-  SceneContext sc;
-
-  float fadeout_value;
-
-  ControllerHelpWindow controller_help_window;
-
-  Sector*        sector;
-  View*          view;
-
-  EnergyBar*     energy_bar;
-  DialogManager* dialog_manager;
-  Conversation*  conversation;
-  Inventory*     inventory;
-  PDA            pda;
-
-  std::string filename;
-
-  bool pause;
-
-  enum { NO_ACTION, QUIT_ACTION, CHANGE_SECTOR_ACTION } next_action;
-  
-  enum { FADEIN, RUNNING, FADEOUT } fade_state;
-  ControlState control_state;
-
   static GameSession* current_; 
-
 public:
   static GameSession* current() { return current_; } 
 
   GameSession (const std::string& arg_filename);
   ~GameSession ();
 
-  SceneContext& get_scene_context() { return sc; }
-  View* get_view() { return view; }
+  View* get_view();
 
-  void set_control_state(ControlState state) { control_state = state; }
+  void set_control_state(ControlState state);
 
   /** Switches the sector instantly without fadeout */
   void set_sector(const std::string& filename);
@@ -92,17 +68,20 @@
   /** Fades out then switches sectors and fades in again */
   void change_sector(const std::string& filename);
 
-  ControlState get_game_state() const { return control_state; }
-  const std::string& get_filename () const { return filename; }
+  ControlState get_game_state() const;
 
   void draw();
-  void draw_game();
   void update(float delta, const Controller& controller);
   void handle_event(const SDL_Event& event);
 
   PDA& get_pda();
 
   void quit();
+
+  const std::string& get_filename () const;
+
+private:
+  SharedPtr<GameSessionImpl> impl;
 };
 
 #endif

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-18 22:33:39 UTC (rev 980)
+++ trunk/src/player.cpp	2005-08-18 23:24:37 UTC (rev 981)
@@ -25,6 +25,7 @@
 #include "player.hpp"
 #include "bomb.hpp"
 #include "globals.hpp"
+#include "pda.hpp"
 #include "sprite3d/manager.hpp"
 #include "glutil/surface_manager.hpp"
 #include "particles/particle_system.hpp"

Modified: trunk/src/scripting/interface.cpp
===================================================================
--- trunk/src/scripting/interface.cpp	2005-08-18 22:33:39 UTC (rev 980)
+++ trunk/src/scripting/interface.cpp	2005-08-18 23:24:37 UTC (rev 981)
@@ -10,6 +10,7 @@
 #include "fonts.hpp"
 #include "serialize.hpp"
 #include "camera.hpp"
+#include "pda.hpp"
 #include "controller_help_window.hpp"
 
 namespace Scripting



From grumbel at berlios.de  Fri Aug 19 01:51:48 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 01:51:48 +0200
Subject: [Windstille-commit] r982 - in trunk/src: . scripting
Message-ID: <200508182351.j7INpmnc004872@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 01:51:35 +0200 (Fri, 19 Aug 2005)
New Revision: 982

Modified:
   trunk/src/character.cpp
   trunk/src/controller_def.cpp
   trunk/src/controller_def.hpp
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
   trunk/src/pda.cpp
   trunk/src/pda.hpp
   trunk/src/player.cpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/sector.cpp
   trunk/src/sector.hpp
Log:
- cleaned up GameSession and input handling a bit more

Modified: trunk/src/character.cpp
===================================================================
--- trunk/src/character.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/character.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -69,7 +69,7 @@
 void
 Character::use()
 {
-  std::string filename = basename(GameSession::current()->get_filename());
+  std::string filename = basename(Sector::current()->get_filename());
   filename.erase(filename.find('.'));
   filename = "scripts/" + filename + "/" + name + ".nut";
 

Modified: trunk/src/controller_def.cpp
===================================================================
--- trunk/src/controller_def.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/controller_def.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -27,6 +27,7 @@
   add_button("tertiary-button",  TERTIARY_BUTTON);
 
   add_button("pda-button", PDA_BUTTON);
+  add_button("inventory-button", INVENTORY_BUTTON);
 
   add_button("aim-button",       AIM_BUTTON);
   add_button("pause-button",     PAUSE_BUTTON);

Modified: trunk/src/controller_def.hpp
===================================================================
--- trunk/src/controller_def.hpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/controller_def.hpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -33,6 +33,7 @@
     SECONDARY_BUTTON, // used to cancel a dialog or for jumping
     TERTIARY_BUTTON,  // used to cancel a dialog or for jumping
     PDA_BUTTON,       // display the PDA
+    INVENTORY_BUTTON, // display inventory button
     
     PAUSE_BUTTON,     // used to pause the game
     AIM_BUTTON,       // used to draw the gun and aim

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/game_session.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -82,18 +82,22 @@
   enum { NO_ACTION, QUIT_ACTION, CHANGE_SECTOR_ACTION } next_action;
   
   enum { FADEIN, RUNNING, FADEOUT } fade_state;
-  GameSession::ControlState control_state;
 
   // GUI Elements
   ControllerHelpWindow controller_help_window;
   EnergyBar     energy_bar;
+
+  // Active GUI Elements
   DialogManager dialog_manager;
   Conversation  conversation;
   Inventory     inventory;
   PDA           pda;
 
+  Screen* current_gui;
+
   GameSessionImpl() {
     sector = 0;
+    current_gui = 0;
   }
   ~GameSessionImpl() {
     delete sector;
@@ -134,15 +138,11 @@
 
   // Draw HUD
   energy_bar.draw();
-  inventory.draw();
-
-  if (control_state == GameSession::DIALOG)
-    dialog_manager.draw(); 
-  
-  conversation.draw();
   controller_help_window.draw();
-  pda.draw();
 
+  if (current_gui)
+    current_gui->draw();
+
   switch (fade_state)
     {
     case FADEOUT:
@@ -171,7 +171,10 @@
 GameSessionImpl::update(float delta, const Controller& controller)
 {  
   if (controller.button_was_pressed(PDA_BUTTON))
-    pda.set_active(!pda.is_active());
+    if (current_gui == &pda)
+      current_gui = 0;
+    else
+      current_gui = &pda;
 
   if (controller.button_was_pressed(PAUSE_BUTTON))
     pause = !pause;
@@ -228,25 +231,13 @@
         case RUNNING:
           sector->update(delta);
           energy_bar.update(delta, controller);
-          switch (control_state) 
-            {
-            case GameSession::DIALOG:
-              dialog_manager.update(delta, controller);
-              break;
-            case GameSession::CONVERSATION:
-              conversation.update(delta, controller);
-              break;
-            case GameSession::GAME:
-              break;
-            }
+          if (current_gui)
+            current_gui->update(delta, controller);
           break;
         }
       
       controller_help_window.update(delta, controller);
-      pda.update(delta, controller);
     }
-  
-  inventory.update(delta, controller);
 
   if(keystate[SDLK_ESCAPE])
     GameSession::current()->quit();
@@ -280,7 +271,6 @@
     
   impl->fade_state    = GameSessionImpl::FADEIN;
   impl->fadeout_value = 0;
-  impl->control_state = GAME;
   impl->next_action   = GameSessionImpl::NO_ACTION;
 
   if (debug) std::cout << "Finished changing sector" << std::endl;
@@ -385,19 +375,26 @@
 void
 GameSession::set_control_state(ControlState state) 
 {
-  impl->control_state = state; 
-}
+  switch(state)
+    {
+    case DIALOG:
+      impl->current_gui = &impl->dialog_manager;
+      break;
 
-GameSession::ControlState
-GameSession::get_game_state() const 
-{
-  return impl->control_state; 
+    case CONVERSATION:
+      impl->current_gui = &impl->conversation;
+      break;
+
+    case GAME:
+      impl->current_gui = 0;
+      break;
+    }
 }
 
-const std::string&
-GameSession::get_filename() const 
+bool
+GameSession::is_active() const
 {
- return impl->filename; 
+  return (impl->current_gui == 0);
 }
 
 /* EOF */

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/game_session.hpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -60,6 +60,10 @@
 
   View* get_view();
 
+  /** Return true when the gameplay is currently active, return false
+      if PDA, Conversation or other things are active */
+  bool is_active() const;
+
   void set_control_state(ControlState state);
 
   /** Switches the sector instantly without fadeout */
@@ -68,8 +72,6 @@
   /** Fades out then switches sectors and fades in again */
   void change_sector(const std::string& filename);
 
-  ControlState get_game_state() const;
-
   void draw();
   void update(float delta, const Controller& controller);
   void handle_event(const SDL_Event& event);
@@ -78,8 +80,6 @@
 
   void quit();
 
-  const std::string& get_filename () const;
-
 private:
   SharedPtr<GameSessionImpl> impl;
 };

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/pda.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -43,8 +43,7 @@
 }
 
 PDA::PDA()
-  : active(false),
-    state(PDA_INVENTORY)
+  : state(PDA_INVENTORY)
 { 
   text_area = 0;
 }
@@ -52,9 +51,6 @@
 void
 PDA::draw()
 {
-  if (!active)
-    return;
-    
   if (text_area)
     {
       const Rectf& rect = text_area->get_rect().grow(8.0f);
@@ -69,9 +65,6 @@
 void
 PDA::update(float delta, const Controller& controller)
 {
-  if (!active)
-    return;
-  
   const InputEventLst& events = controller.get_events();
   for(InputEventLst::const_iterator i = events.begin(); i != events.end(); ++i) {
     if (i->type == AXIS_EVENT && i->axis.name == X_AXIS) {

Modified: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/pda.hpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -57,8 +57,6 @@
 
   void draw();
   void update(float delta, const Controller& controller);
-  bool is_active() const {return active;}
-  void set_active(bool arg_active) {active = arg_active;}
   void add_dialog(const std::string& character, const std::string& text);
   
   void add_objective(const std::string& name, const std::string& text);
@@ -72,7 +70,6 @@
   void show_dialogs();
   
   TextArea* text_area;
-  bool active;
   std::vector<DialogEntry> dialogs;
   std::vector<ObjectiveEntry> objectives;   
   

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/player.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -115,9 +115,7 @@
 {
   controller = InputManager::get_controller();
 
-  if (!console.is_active() && !GameSession::current()->get_pda().is_active()
-  && GameSession::current()->get_game_state() != GameSession::DIALOG
-  && GameSession::current()->get_game_state() != GameSession::CONVERSATION)
+  if (GameSession::current()->is_active())
     {
       switch(state) {
         case STAND:

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/scripting/wrapper.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/scripting/wrapper.hpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'scripting/wrapper.interface.hpp'
+ *  'src/scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/sector.cpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -54,9 +54,16 @@
 
 Sector* Sector::current_ = 0;
 
-Sector::Sector(const std::string& filename)
-  : player(0)
+const std::string&
+Sector::get_filename () const
 {
+  return filename;
+}
+
+Sector::Sector(const std::string& arg_filename)
+  : filename(arg_filename),
+    player(0)    
+{
   // make sure squirrel has an "objects" table
   script_manager->run_script(
       "if(! (\"" OBJECTS_TABLE "\" in this)) {"

Modified: trunk/src/sector.hpp
===================================================================
--- trunk/src/sector.hpp	2005-08-18 23:24:37 UTC (rev 981)
+++ trunk/src/sector.hpp	2005-08-18 23:51:35 UTC (rev 982)
@@ -37,6 +37,7 @@
 class Sector
 {
 private:
+  std::string filename;
   std::string name;
   std::string music;
   std::string init_script;
@@ -75,6 +76,8 @@
 
   static Sector* current() { return current_; }
 
+  const std::string& get_filename () const;
+
   void draw(SceneContext& gc);
   void update(float delta);
 



From grumbel at berlios.de  Fri Aug 19 02:23:03 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 02:23:03 +0200
Subject: [Windstille-commit] r983 - in trunk: data/controller src
Message-ID: <200508190023.j7J0N3A1021838@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 02:22:43 +0200 (Fri, 19 Aug 2005)
New Revision: 983

Modified:
   trunk/data/controller/keyboard.scm
   trunk/src/game_session.cpp
   trunk/src/player.cpp
   trunk/src/screen_manager.cpp
Log:
- added inventory button

Modified: trunk/data/controller/keyboard.scm
===================================================================
--- trunk/data/controller/keyboard.scm	2005-08-18 23:51:35 UTC (rev 982)
+++ trunk/data/controller/keyboard.scm	2005-08-19 00:22:43 UTC (rev 983)
@@ -2,11 +2,11 @@
 (windstille-controller
  (x-axis
   (keyboard-axis (minus "left") (plus "right"))
-  (joystick-axis (device 0)  (axis 2)))
+  (joystick-axis (device 0)  (axis 0)))
 
  (y-axis
   (keyboard-axis (minus "up") (plus "down"))
-  (joystick-axis (device 0)  (axis 2)))
+  (joystick-axis (device 0)  (axis 1)))
  
  (primary-button
   (keyboard-button (key "s"))
@@ -31,6 +31,9 @@
  (pause-button
   (keyboard-button (key "p"))
   (joystick-button (device 0)  (button 9)))
+
+ (inventory-button
+  (keyboard-button (key "e")))
  )
 
 

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-18 23:51:35 UTC (rev 982)
+++ trunk/src/game_session.cpp	2005-08-19 00:22:43 UTC (rev 983)
@@ -171,10 +171,19 @@
 GameSessionImpl::update(float delta, const Controller& controller)
 {  
   if (controller.button_was_pressed(PDA_BUTTON))
-    if (current_gui == &pda)
-      current_gui = 0;
-    else
-      current_gui = &pda;
+    {
+      if (current_gui == &pda)
+        current_gui = 0;
+      else
+        current_gui = &pda;
+    }
+  else if (controller.button_was_pressed(INVENTORY_BUTTON))
+    {
+      if (current_gui == &inventory)
+        current_gui = 0;
+      else
+        current_gui = &inventory;
+    }
 
   if (controller.button_was_pressed(PAUSE_BUTTON))
     pause = !pause;
@@ -187,9 +196,7 @@
     game_speed *= 1.0 + delta;
   if(keystate[SDLK_KP5])
     game_speed = 1.0;
-
-  InputManager::update(delta);
-  
+ 
   delta *= game_speed;
 
   if (!pause)

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-18 23:51:35 UTC (rev 982)
+++ trunk/src/player.cpp	2005-08-19 00:22:43 UTC (rev 983)
@@ -229,7 +229,7 @@
       return;
     }
     
-  if(controller.get_button_state(JUMP_BUTTON)) {
+  if(controller.button_was_pressed(JUMP_BUTTON)) {
     set_jump_up_begin();
     return;
   }

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-18 23:51:35 UTC (rev 982)
+++ trunk/src/screen_manager.cpp	2005-08-19 00:22:43 UTC (rev 983)
@@ -77,6 +77,8 @@
 
       while (delta > step)
         {
+          InputManager::update(delta);
+
           console.update(step);
           if (overlay_screen)
             overlay_screen->update(step, InputManager::get_controller());



From grumbel at berlios.de  Fri Aug 19 03:30:05 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 03:30:05 +0200
Subject: [Windstille-commit] r984 - in trunk: data/images src
Message-ID: <200508190130.j7J1U5nT024558@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 03:29:52 +0200 (Fri, 19 Aug 2005)
New Revision: 984

Added:
   trunk/data/images/noise2.png
   trunk/src/laser_pointer.cpp
   trunk/src/laser_pointer.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/game_session.cpp
   trunk/src/inventory.cpp
   trunk/src/nightvision.cpp
   trunk/src/screen_manager.cpp
   trunk/src/sector.cpp
Log:
- added laserpointer, pause gameplay when console is active

Added: trunk/data/images/noise2.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/noise2.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/Jamfile	2005-08-19 01:29:52 UTC (rev 984)
@@ -67,6 +67,8 @@
         globals.hpp
         graphic_context_state.cpp
         graphic_context_state.hpp
+        laser_pointer.hpp
+        laser_pointer.cpp
         math.hpp
         nightvision.cpp
         nightvision.hpp

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/game_session.cpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -170,21 +170,6 @@
 void
 GameSessionImpl::update(float delta, const Controller& controller)
 {  
-  if (controller.button_was_pressed(PDA_BUTTON))
-    {
-      if (current_gui == &pda)
-        current_gui = 0;
-      else
-        current_gui = &pda;
-    }
-  else if (controller.button_was_pressed(INVENTORY_BUTTON))
-    {
-      if (current_gui == &inventory)
-        current_gui = 0;
-      else
-        current_gui = &inventory;
-    }
-
   if (controller.button_was_pressed(PAUSE_BUTTON))
     pause = !pause;
 
@@ -246,6 +231,21 @@
       controller_help_window.update(delta, controller);
     }
 
+  if (controller.button_was_pressed(PDA_BUTTON))
+    {
+      if (current_gui == &pda)
+        current_gui = 0;
+      else
+        current_gui = &pda;
+    }
+  else if (controller.button_was_pressed(INVENTORY_BUTTON))
+    {
+      if (current_gui == &inventory)
+        current_gui = 0;
+      else
+        current_gui = &inventory;
+    }
+
   if(keystate[SDLK_ESCAPE])
     GameSession::current()->quit();
 }

Modified: trunk/src/inventory.cpp
===================================================================
--- trunk/src/inventory.cpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/inventory.cpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -25,6 +25,7 @@
 
 #include <iostream>
 #include <vector>
+#include "game_session.hpp"
 #include "sprite2d/sprite.hpp"
 #include "fonts.hpp"
 #include "input/input_manager.hpp"
@@ -175,6 +176,15 @@
     {
       add_angle += 3 * delta;
     }
+
+  if (moving == 0)
+    {
+      if (controller.button_was_pressed(USE_BUTTON) ||
+          controller.button_was_pressed(INVENTORY_BUTTON))
+        {
+          GameSession::current()->set_control_state(GameSession::GAME);
+        }
+    }
 }
 
 /* EOF */

Added: trunk/src/laser_pointer.cpp
===================================================================
--- trunk/src/laser_pointer.cpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/laser_pointer.cpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -0,0 +1,75 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "display/vertex_array_drawing_request.hpp"
+#include "player.hpp"
+#include "laser_pointer.hpp"
+
+LaserPointer::LaserPointer()
+{
+  noise = Texture("images/noise2.png");
+  noise.set_wrap(GL_REPEAT);
+  noise.set_filter(GL_LINEAR);
+  
+  progress = 0.0f;
+}
+
+LaserPointer::~LaserPointer()
+{
+}
+
+void
+LaserPointer::draw(SceneContext& sc)
+{
+  Vector pos = Player::current()->get_pos();
+
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(pos - Vector(0, 64), 10000,
+                                                                   sc.highlight().get_modelview());
+  array->set_mode(GL_LINE_STRIP);
+  array->set_texture(noise);
+  array->set_blend_func(GL_SRC_ALPHA, GL_ONE);
+
+  array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
+  array->texcoord(0/400.0f, progress);
+  array->vertex(0, 0);
+
+  array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
+  array->texcoord(300/400.0f, progress);
+  array->vertex(300, 0);
+
+  array->color(Color(1.0f, 0.0f, 0.0f, 0.0f));
+  array->texcoord(400/400.0f, progress);
+  array->vertex(400, 0);
+
+  sc.highlight().draw(array);
+}
+
+void
+LaserPointer::update(float delta)
+{
+  progress += 0.1 * delta;
+}
+
+/* EOF */

Added: trunk/src/laser_pointer.hpp
===================================================================
--- trunk/src/laser_pointer.hpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/laser_pointer.hpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -0,0 +1,52 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_LASER_POINTER_HPP
+#define HEADER_WINDSTILLE_LASER_POINTER_HPP
+
+#include "game_object.hpp"
+
+/** Simple class that generates a laser for pointing at objects */
+class LaserPointer : public GameObject
+{
+private:
+  Texture noise;
+  float   progress;
+
+public:
+  LaserPointer();
+  ~LaserPointer();
+
+  void draw(SceneContext& sc);
+  void update(float delta);
+
+private:
+  LaserPointer (const LaserPointer&);
+  LaserPointer& operator= (const LaserPointer&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/nightvision.cpp
===================================================================
--- trunk/src/nightvision.cpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/nightvision.cpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -61,7 +61,6 @@
 
   if (1)
     {
-      // FIXME: Use raw OpenGL here and offset the texture coordinates
       VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0, 0), 10000,
                                                                        sc.light().get_modelview());
       array->set_mode(GL_QUADS);
@@ -110,6 +109,11 @@
 
   if (1)
     {
+      // FIXME: might be better to copy the highlight over to the
+      // color layer, however that would require some changes to the
+      // DrawingContext structure
+      sc.highlight().clear();
+
       sc.highlight().push_modelview();
       sc.highlight().set_modelview(Matrix::identity());
       nightvision.set_alpha(0.5f);

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/screen_manager.cpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -80,11 +80,13 @@
           InputManager::update(delta);
 
           console.update(step);
-          if (overlay_screen)
-            overlay_screen->update(step, InputManager::get_controller());
-          else
-            screen->update(step, InputManager::get_controller());
-                
+          if (!console.is_active())
+            {
+              if (overlay_screen)
+                overlay_screen->update(step, InputManager::get_controller());
+              else
+                screen->update(step, InputManager::get_controller());
+            }
           InputManager::clear();
   
           delta -= step;

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-19 00:22:43 UTC (rev 983)
+++ trunk/src/sector.cpp	2005-08-19 01:29:52 UTC (rev 984)
@@ -42,6 +42,7 @@
 #include "elevator.hpp"
 #include "nightvision.hpp"
 #include "character.hpp"
+#include "laser_pointer.hpp"
 #include "badguy/swarm.hpp"
 #include "badguy/hedgehog.hpp"
 #include "badguy/spider_mine.hpp"
@@ -80,7 +81,7 @@
     throw std::runtime_error("No interactive-tilemap available");
 
   // add interactive to collision engine
-  collision_engine->add (new CollisionObject (interactive_tilemap));
+  collision_engine->add(new CollisionObject(interactive_tilemap));
 }
 
 Sector::~Sector()
@@ -178,6 +179,8 @@
     add(new VRDummy(lisp));
   } else if (name == "swarm") {
     add(new Swarm(lisp));
+  } else if (name == "laserpointer") {
+    add(new LaserPointer());
   } else {
     std::cout << "Skipping unknown Object: " << name << "\n";
   }



From grumbel at berlios.de  Fri Aug 19 15:46:04 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 15:46:04 +0200
Subject: [Windstille-commit] r985 - in trunk/src: . collision scripting
Message-ID: <200508191346.j7JDk4wd025497@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 15:46:03 +0200 (Fri, 19 Aug 2005)
New Revision: 985

Modified:
   trunk/src/collision/collision_engine.cpp
   trunk/src/collision/collision_engine.hpp
   trunk/src/laser_pointer.cpp
   trunk/src/laser_pointer.hpp
   trunk/src/player.cpp
   trunk/src/player.hpp
   trunk/src/scripting/wrapper.cpp
   trunk/src/scripting/wrapper.hpp
   trunk/src/tile_map.cpp
   trunk/src/tile_map.hpp
Log:
- added not yet really working raycasting for the laserpointer

Modified: trunk/src/collision/collision_engine.cpp
===================================================================
--- trunk/src/collision/collision_engine.cpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/collision/collision_engine.cpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -713,5 +713,19 @@
   return result;
 }
 
+Vector
+CollisionEngine::raycast(const Vector& pos, float angle)
+{
+  for(Objects::iterator i = objects.begin(); i != objects.end(); ++i)
+    {
+      if ((*i)->get_type() == CollisionObject::TILEMAP)
+        {
+          return (*i)->tilemap->raycast(pos, angle);
+        }
+    }
+
+  return Vector(0, 0);
+}
+
 /* EOF */
 

Modified: trunk/src/collision/collision_engine.hpp
===================================================================
--- trunk/src/collision/collision_engine.hpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/collision/collision_engine.hpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -45,6 +45,10 @@
   CollisionObject* add(CollisionObject *obj);
   void remove(CollisionObject *obj);
 
+  /** Shoots a ray from \a pos into direction \a angle, returns the
+      position were the ray collides with the tilemap FIXME: Should be
+      extended to handle objects as well */
+  Vector raycast(const Vector& pos, float angle);
 private:
   void unstuck(CollisionObject& a, CollisionObject& b, float delta);
   CollisionData collide(CollisionObject& a, CollisionObject& b, float delta);

Modified: trunk/src/laser_pointer.cpp
===================================================================
--- trunk/src/laser_pointer.cpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/laser_pointer.cpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -25,6 +25,8 @@
 
 #include "display/vertex_array_drawing_request.hpp"
 #include "player.hpp"
+#include "collision/collision_engine.hpp"
+#include "sector.hpp"
 #include "laser_pointer.hpp"
 
 LaserPointer::LaserPointer()
@@ -44,25 +46,23 @@
 LaserPointer::draw(SceneContext& sc)
 {
   Vector pos = Player::current()->get_pos();
+  pos.y -= 80;
+  Vector target = Sector::current()->get_collision_engine()->raycast(pos, angle);
 
-  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(pos - Vector(0, 64), 10000,
+  VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0,0), 10000,
                                                                    sc.highlight().get_modelview());
   array->set_mode(GL_LINE_STRIP);
   array->set_texture(noise);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE);
 
   array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
-  array->texcoord(0/400.0f, progress);
-  array->vertex(0, 0);
+  array->texcoord(pos.x/400.0f, progress);
+  array->vertex(pos.x, pos.y);
 
   array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
-  array->texcoord(300/400.0f, progress);
-  array->vertex(300, 0);
+  array->texcoord(target.x/400.0f, progress);
+  array->vertex(target.x, target.y);
 
-  array->color(Color(1.0f, 0.0f, 0.0f, 0.0f));
-  array->texcoord(400/400.0f, progress);
-  array->vertex(400, 0);
-
   sc.highlight().draw(array);
 }
 
@@ -72,4 +72,16 @@
   progress += 0.1 * delta;
 }
 
+float
+LaserPointer::get_angle() const
+{
+  return angle;
+}
+
+void
+LaserPointer::set_angle(float a)
+{
+  angle = a;
+}
+
 /* EOF */

Modified: trunk/src/laser_pointer.hpp
===================================================================
--- trunk/src/laser_pointer.hpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/laser_pointer.hpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -34,6 +34,7 @@
 private:
   Texture noise;
   float   progress;
+  float   angle;
 
 public:
   LaserPointer();
@@ -42,6 +43,8 @@
   void draw(SceneContext& sc);
   void update(float delta);
 
+  float get_angle() const;
+  void  set_angle(float angle);
 private:
   LaserPointer (const LaserPointer&);
   LaserPointer& operator= (const LaserPointer&);

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/player.cpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -30,6 +30,7 @@
 #include "glutil/surface_manager.hpp"
 #include "particles/particle_system.hpp"
 #include "collision/collision_engine.hpp"
+#include "laser_pointer.hpp"
 #include "game_session.hpp"
 #include "console.hpp"
 
@@ -45,6 +46,7 @@
   grenade("3dsprites/grenade.wsprite"),
   state(STAND)
 {
+  laser_pointer = new LaserPointer();
   sprite = Sprite3D("3dsprites/heroken.wsprite");
   pos.x = 320;
   pos.y = 200;
@@ -70,6 +72,7 @@
 
 Player::~Player()
 {
+  delete laser_pointer;
 }
 
 void
@@ -90,6 +93,7 @@
   
   //BoneID id = sprite.get_bone_id("Hand.R");
   //grenade->draw(sc, sprite.get_bone_matrix(id));
+  laser_pointer->draw(sc);
 }
 
 void
@@ -115,6 +119,11 @@
 {
   controller = InputManager::get_controller();
 
+  if (controller.get_axis_state(Y_AXIS) < 0)
+    laser_pointer->set_angle(laser_pointer->get_angle() - 1.0 * delta);
+  else if (controller.get_axis_state(Y_AXIS) > 0)
+    laser_pointer->set_angle(laser_pointer->get_angle() + 1.0 * delta);
+
   if (GameSession::current()->is_active())
     {
       switch(state) {

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/player.hpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -30,6 +30,7 @@
 #include "glutil/surface.hpp"
 
 class Controller;
+class LaserPointer;
 
 class Player : public Entity
 {
@@ -48,6 +49,7 @@
   CollisionObject* c_object;
   Slot slot;
 
+  LaserPointer* laser_pointer;
 public:
   enum State
   {

Modified: trunk/src/scripting/wrapper.cpp
===================================================================
--- trunk/src/scripting/wrapper.cpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/scripting/wrapper.cpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #include <config.h>

Modified: trunk/src/scripting/wrapper.hpp
===================================================================
--- trunk/src/scripting/wrapper.hpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/scripting/wrapper.hpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -1,6 +1,6 @@
 /**
  * WARNING: This file is automatically generated from:
- *  'src/scripting/wrapper.interface.hpp'
+ *  'scripting/wrapper.interface.hpp'
  * DO NOT CHANGE
  */
 #ifndef __windstille_WRAPPER_H__

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/tile_map.cpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -24,6 +24,7 @@
 #include "globals.hpp"
 #include "view.hpp"
 #include "display/vertex_array_drawing_request.hpp"
+#include "collision/collision_engine.hpp"
 #include "lisp/properties.hpp"
 
 TileMap::TileMap(const lisp::Lisp* lisp)
@@ -173,4 +174,52 @@
     return 0;
 }
 
+Vector
+TileMap::raycast(const Vector& pos, float angle)
+{
+  // Ray position in Tile units
+  int x = static_cast<int>(pos.x / TILE_SIZE);
+  int y = static_cast<int>(pos.y / TILE_SIZE);
+
+  Vector direction(cos(angle), sin(angle));
+
+  int step_x = (direction.x > 0) ? 1 : -1;
+  int step_y = (direction.y > 0) ? 1 : -1;
+
+  float tMaxX = (direction.x == 0) ? 0 : fmodf(pos.x, TILE_SIZE)/direction.x;
+  float tMaxY = (direction.y == 0) ? 0 : fmodf(pos.y, TILE_SIZE)/direction.y;
+
+  float tDeltaX = (direction.x == 0) ? 0 : (TILE_SIZE / direction.x);
+  float tDeltaY = (direction.y == 0) ? 0 : (TILE_SIZE / direction.y);
+
+  while(x >= 0 && x < get_width() &&
+        y >= 0 && y < get_height())
+    {
+      Tile* tile = field(x, y);  
+      if (tile && tile->colmap)
+        {
+          if ((tMaxX - tDeltaX) < (tMaxY - tDeltaY))
+            return pos + Vector((tMaxX - tDeltaX) * direction.x, (tMaxX - tDeltaX) * direction.y);
+          else
+            return pos + Vector((tMaxY - tDeltaY) * direction.x, (tMaxY - tDeltaY) * direction.y);
+          //return Vector(x * TILE_SIZE, y * TILE_SIZE);
+        }
+
+      // move one tile
+      if (tMaxX < tMaxY) 
+        {
+          tMaxX += tDeltaX;
+          x = x + step_x;
+        }
+      else 
+        {
+          tMaxY += tDeltaY;
+          y = y + step_y;
+        }
+    }
+
+  // Ray got out of the map
+  return Vector(x * TILE_SIZE, y * TILE_SIZE);
+}
+
 /* EOF */

Modified: trunk/src/tile_map.hpp
===================================================================
--- trunk/src/tile_map.hpp	2005-08-19 01:29:52 UTC (rev 984)
+++ trunk/src/tile_map.hpp	2005-08-19 13:46:03 UTC (rev 985)
@@ -55,6 +55,10 @@
   int get_height () const { return field.get_height (); }
 
   int get_tile_size () const { return TILE_SIZE; }
+
+  /** Shoots a ray from \a pos into direction \a angle, returns the
+      position were the ray collides with the tilemap */
+  Vector raycast(const Vector& pos, float angle);
 };
 
 #endif



From grumbel at berlios.de  Fri Aug 19 15:53:40 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 15:53:40 +0200
Subject: [Windstille-commit] r986 - trunk/src
Message-ID: <200508191353.j7JDre3T025984@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 15:53:37 +0200 (Fri, 19 Aug 2005)
New Revision: 986

Modified:
   trunk/src/tile_map.cpp
Log:
- added not yet really working raycasting for the laserpointer

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-19 13:46:03 UTC (rev 985)
+++ trunk/src/tile_map.cpp	2005-08-19 13:53:37 UTC (rev 986)
@@ -192,27 +192,28 @@
   float tDeltaX = (direction.x == 0) ? 0 : (TILE_SIZE / direction.x);
   float tDeltaY = (direction.y == 0) ? 0 : (TILE_SIZE / direction.y);
 
+  float t = 0;
+
   while(x >= 0 && x < get_width() &&
         y >= 0 && y < get_height())
     {
       Tile* tile = field(x, y);  
       if (tile && tile->colmap)
         {
-          if ((tMaxX - tDeltaX) < (tMaxY - tDeltaY))
-            return pos + Vector((tMaxX - tDeltaX) * direction.x, (tMaxX - tDeltaX) * direction.y);
-          else
-            return pos + Vector((tMaxY - tDeltaY) * direction.x, (tMaxY - tDeltaY) * direction.y);
+          return pos + Vector(t * direction.x, t * direction.y);
           //return Vector(x * TILE_SIZE, y * TILE_SIZE);
         }
 
       // move one tile
       if (tMaxX < tMaxY) 
         {
+          t = tMaxX;
           tMaxX += tDeltaX;
           x = x + step_x;
         }
       else 
         {
+          t = tMaxY;
           tMaxY += tDeltaY;
           y = y + step_y;
         }



From grumbel at berlios.de  Fri Aug 19 23:07:23 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 23:07:23 +0200
Subject: [Windstille-commit] r987 - in trunk: data/images src
Message-ID: <200508192107.j7JL7NqR010514@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 23:07:21 +0200 (Fri, 19 Aug 2005)
New Revision: 987

Added:
   trunk/data/images/laserpointer.png
   trunk/data/images/laserpointer.sprite
Modified:
   trunk/src/laser_pointer.cpp
   trunk/src/laser_pointer.hpp
   trunk/src/player.cpp
   trunk/src/tile_map.cpp
Log:
- fixed raycasting a bit, but not much

Added: trunk/data/images/laserpointer.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/laserpointer.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/laserpointer.sprite
===================================================================
--- trunk/data/images/laserpointer.sprite	2005-08-19 13:53:37 UTC (rev 986)
+++ trunk/data/images/laserpointer.sprite	2005-08-19 21:07:21 UTC (rev 987)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "laserpointer.png")
+    (offset -7 -7)
+  )
+)

Modified: trunk/src/laser_pointer.cpp
===================================================================
--- trunk/src/laser_pointer.cpp	2005-08-19 13:53:37 UTC (rev 986)
+++ trunk/src/laser_pointer.cpp	2005-08-19 21:07:21 UTC (rev 987)
@@ -27,11 +27,13 @@
 #include "player.hpp"
 #include "collision/collision_engine.hpp"
 #include "sector.hpp"
+#include "tile_map.hpp"
 #include "laser_pointer.hpp"
 
 LaserPointer::LaserPointer()
 {
   noise = Texture("images/noise2.png");
+  laserpointer = Sprite("images/laserpointer.sprite");
   noise.set_wrap(GL_REPEAT);
   noise.set_filter(GL_LINEAR);
   
@@ -42,16 +44,74 @@
 {
 }
 
+static float find_max(float pos, float v)
+{
+  if (v == 0) 
+    return 0;
+  else if (v < 0)
+    return fmodf(fmodf(fabsf(pos), TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
+  else // if (v > 0)
+    return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
+}
+
 void
 LaserPointer::draw(SceneContext& sc)
 {
+  TileMap* tilemap = Sector::current()->get_tilemap();
   Vector pos = Player::current()->get_pos();
   pos.y -= 80;
-  Vector target = Sector::current()->get_collision_engine()->raycast(pos, angle);
+  Vector target; // = Sector::current()->get_collision_engine()->raycast(pos, angle);
 
+  // Ray position in Tile units
+  int x = static_cast<int>(pos.x / TILE_SIZE);
+  int y = static_cast<int>(pos.y / TILE_SIZE);
+
+  Vector direction(cos(angle) * 100.0f, sin(angle) * 100.0f);
+
+  int step_x = (direction.x > 0) ? 1 : -1;
+  int step_y = (direction.y > 0) ? 1 : -1;
+
+  float tMaxX = find_max(pos.x, direction.x);
+  float tMaxY = find_max(pos.y, direction.y);
+
+  float tDeltaX = (direction.x == 0) ? 0 : fabsf(TILE_SIZE / direction.x);
+  float tDeltaY = (direction.y == 0) ? 0 : fabsf(TILE_SIZE / direction.y);
+
+  float t = 0;
+
+  while(x >= 0 && x < tilemap->get_width() &&
+        y >= 0 && y < tilemap->get_height())
+    {
+      sc.color().fill_rect(Rectf(Vector(x * TILE_SIZE, y * TILE_SIZE), Size(TILE_SIZE, TILE_SIZE)), 
+                           Color(1.0, 1.0, 1.0, 0.5), 500);
+
+      if (tilemap->get_pixel(x, y))
+        {
+            //return Vector(x * TILE_SIZE, y * TILE_SIZE);
+          goto done;
+        }
+
+      // move one tile
+      if (tMaxX < tMaxY)
+        {
+          t = tMaxX;
+          tMaxX += tDeltaX;
+          x = x + step_x;
+        }
+      else 
+        {
+          t = tMaxY;
+          tMaxY += tDeltaY;
+          y = y + step_y;
+        }
+    }
+  
+ done:
+  target = pos + Vector(t * direction.x, t * direction.y);
+  
   VertexArrayDrawingRequest* array = new VertexArrayDrawingRequest(Vector(0,0), 10000,
                                                                    sc.highlight().get_modelview());
-  array->set_mode(GL_LINE_STRIP);
+  array->set_mode(GL_LINES);
   array->set_texture(noise);
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE);
 
@@ -63,7 +123,19 @@
   array->texcoord(target.x/400.0f, progress);
   array->vertex(target.x, target.y);
 
+
+  array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
+  array->texcoord(pos.x/400.0f, progress);
+  array->vertex(pos.x, pos.y);
+
+  array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
+  array->texcoord(target.x/400.0f, progress);
+  array->vertex(pos.x + cos(angle) * 100.0f, pos.y + sin(angle) * 100.0f);
+
+
   sc.highlight().draw(array);
+  laserpointer.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  sc.highlight().draw(laserpointer, target);
 }
 
 void

Modified: trunk/src/laser_pointer.hpp
===================================================================
--- trunk/src/laser_pointer.hpp	2005-08-19 13:53:37 UTC (rev 986)
+++ trunk/src/laser_pointer.hpp	2005-08-19 21:07:21 UTC (rev 987)
@@ -33,6 +33,7 @@
 {
 private:
   Texture noise;
+  Sprite  laserpointer;
   float   progress;
   float   angle;
 

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-19 13:53:37 UTC (rev 986)
+++ trunk/src/player.cpp	2005-08-19 21:07:21 UTC (rev 987)
@@ -119,10 +119,7 @@
 {
   controller = InputManager::get_controller();
 
-  if (controller.get_axis_state(Y_AXIS) < 0)
-    laser_pointer->set_angle(laser_pointer->get_angle() - 1.0 * delta);
-  else if (controller.get_axis_state(Y_AXIS) > 0)
-    laser_pointer->set_angle(laser_pointer->get_angle() + 1.0 * delta);
+  laser_pointer->set_angle(laser_pointer->get_angle() + controller.get_axis_state(Y_AXIS) * delta);
 
   if (GameSession::current()->is_active())
     {

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-19 13:53:37 UTC (rev 986)
+++ trunk/src/tile_map.cpp	2005-08-19 21:07:21 UTC (rev 987)
@@ -167,13 +167,22 @@
       return 0;
     }
 
-
-  if (field (x_pos, y_pos))
+  if (field(x_pos, y_pos))
     return field(x_pos, y_pos)->get_colmap();
   else
     return 0;
 }
 
+static float find_max(float pos, float tilesize, float v)
+{
+  if (v == 0) 
+    return 0;
+  else if (v < 0)
+    return fmodf(fabs(pos), tilesize)/fabsf(v);
+  else // if (v > 0)
+    return fmodf(pos, tilesize)/v;
+}
+
 Vector
 TileMap::raycast(const Vector& pos, float angle)
 {
@@ -181,13 +190,13 @@
   int x = static_cast<int>(pos.x / TILE_SIZE);
   int y = static_cast<int>(pos.y / TILE_SIZE);
 
-  Vector direction(cos(angle), sin(angle));
+  Vector direction(cos(angle) * 100.0f, sin(angle) * 100.0f);
 
   int step_x = (direction.x > 0) ? 1 : -1;
   int step_y = (direction.y > 0) ? 1 : -1;
 
-  float tMaxX = (direction.x == 0) ? 0 : fmodf(pos.x, TILE_SIZE)/direction.x;
-  float tMaxY = (direction.y == 0) ? 0 : fmodf(pos.y, TILE_SIZE)/direction.y;
+  float tMaxX = find_max(pos.x, TILE_SIZE, direction.x);
+  float tMaxY = find_max(pos.y, TILE_SIZE, direction.y);
 
   float tDeltaX = (direction.x == 0) ? 0 : (TILE_SIZE / direction.x);
   float tDeltaY = (direction.y == 0) ? 0 : (TILE_SIZE / direction.y);
@@ -205,7 +214,7 @@
         }
 
       // move one tile
-      if (tMaxX < tMaxY) 
+      if (tMaxX < tMaxY)
         {
           t = tMaxX;
           tMaxX += tDeltaX;



From grumbel at berlios.de  Fri Aug 19 23:54:13 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 19 Aug 2005 23:54:13 +0200
Subject: [Windstille-commit] r988 - trunk/src
Message-ID: <200508192154.j7JLsDXg013056@sheep.berlios.de>

Author: grumbel
Date: 2005-08-19 23:54:09 +0200 (Fri, 19 Aug 2005)
New Revision: 988

Modified:
   trunk/src/laser_pointer.cpp
   trunk/src/player.cpp
   trunk/src/tile_map.cpp
Log:
- finally fixed raycasting, could need a bit cleanup however

Modified: trunk/src/laser_pointer.cpp
===================================================================
--- trunk/src/laser_pointer.cpp	2005-08-19 21:07:21 UTC (rev 987)
+++ trunk/src/laser_pointer.cpp	2005-08-19 21:54:09 UTC (rev 988)
@@ -49,9 +49,11 @@
   if (v == 0) 
     return 0;
   else if (v < 0)
-    return fmodf(fmodf(fabsf(pos), TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
+    return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
   else // if (v > 0)
-    return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
+    {
+      return fmodf(fmodf(-pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
+    }
 }
 
 void
@@ -82,12 +84,12 @@
   while(x >= 0 && x < tilemap->get_width() &&
         y >= 0 && y < tilemap->get_height())
     {
-      sc.color().fill_rect(Rectf(Vector(x * TILE_SIZE, y * TILE_SIZE), Size(TILE_SIZE, TILE_SIZE)), 
-                           Color(1.0, 1.0, 1.0, 0.5), 500);
+      //sc.color().fill_rect(Rectf(Vector(x * TILE_SIZE, y * TILE_SIZE), Size(TILE_SIZE, TILE_SIZE)), 
+      //                     Color(1.0, 1.0, 1.0, 0.5), 500);
 
       if (tilemap->get_pixel(x, y))
         {
-            //return Vector(x * TILE_SIZE, y * TILE_SIZE);
+          //return Vector(x * TILE_SIZE, y * TILE_SIZE);
           goto done;
         }
 
@@ -116,23 +118,24 @@
   array->set_blend_func(GL_SRC_ALPHA, GL_ONE);
 
   array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
-  array->texcoord(pos.x/400.0f, progress);
+  array->texcoord(0, progress);
   array->vertex(pos.x, pos.y);
 
   array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
-  array->texcoord(target.x/400.0f, progress);
+  array->texcoord((target - pos).norm()/256.0f, progress);
   array->vertex(target.x, target.y);
+   
+  if (0)
+    {
+      array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
+      array->texcoord(pos.x/200.0f, progress);
+      array->vertex(pos.x, pos.y);
 
+      array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
+      array->texcoord(target.x/200.0f, progress);
+      array->vertex(pos.x + cos(angle) * 100.0f, pos.y + sin(angle) * 100.0f);
+    }
 
-  array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
-  array->texcoord(pos.x/400.0f, progress);
-  array->vertex(pos.x, pos.y);
-
-  array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
-  array->texcoord(target.x/400.0f, progress);
-  array->vertex(pos.x + cos(angle) * 100.0f, pos.y + sin(angle) * 100.0f);
-
-
   sc.highlight().draw(array);
   laserpointer.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   sc.highlight().draw(laserpointer, target);

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-19 21:07:21 UTC (rev 987)
+++ trunk/src/player.cpp	2005-08-19 21:54:09 UTC (rev 988)
@@ -117,6 +117,8 @@
 void 
 Player::update (float delta)
 {
+  laser_pointer->update(delta);
+
   controller = InputManager::get_controller();
 
   laser_pointer->set_angle(laser_pointer->get_angle() + controller.get_axis_state(Y_AXIS) * delta);

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-19 21:07:21 UTC (rev 987)
+++ trunk/src/tile_map.cpp	2005-08-19 21:54:09 UTC (rev 988)
@@ -173,14 +173,16 @@
     return 0;
 }
 
-static float find_max(float pos, float tilesize, float v)
+static float find_max(float pos, float v)
 {
   if (v == 0) 
     return 0;
   else if (v < 0)
-    return fmodf(fabs(pos), tilesize)/fabsf(v);
+    return fmodf(fmodf(pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/fabsf(v);
   else // if (v > 0)
-    return fmodf(pos, tilesize)/v;
+    {
+      return fmodf(fmodf(-pos, TILE_SIZE) + TILE_SIZE, TILE_SIZE)/v;
+    }
 }
 
 Vector
@@ -195,11 +197,11 @@
   int step_x = (direction.x > 0) ? 1 : -1;
   int step_y = (direction.y > 0) ? 1 : -1;
 
-  float tMaxX = find_max(pos.x, TILE_SIZE, direction.x);
-  float tMaxY = find_max(pos.y, TILE_SIZE, direction.y);
+  float tMaxX = find_max(pos.x, direction.x);
+  float tMaxY = find_max(pos.y, direction.y);
 
-  float tDeltaX = (direction.x == 0) ? 0 : (TILE_SIZE / direction.x);
-  float tDeltaY = (direction.y == 0) ? 0 : (TILE_SIZE / direction.y);
+  float tDeltaX = (direction.x == 0) ? 0 : fabsf(TILE_SIZE / direction.x);
+  float tDeltaY = (direction.y == 0) ? 0 : fabsf(TILE_SIZE / direction.y);
 
   float t = 0;
 
@@ -210,7 +212,6 @@
       if (tile && tile->colmap)
         {
           return pos + Vector(t * direction.x, t * direction.y);
-          //return Vector(x * TILE_SIZE, y * TILE_SIZE);
         }
 
       // move one tile
@@ -229,7 +230,7 @@
     }
 
   // Ray got out of the map
-  return Vector(x * TILE_SIZE, y * TILE_SIZE);
+  return pos + Vector(t * direction.x, t * direction.y);
 }
 
 /* EOF */



From grumbel at berlios.de  Sat Aug 20 02:32:04 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 20 Aug 2005 02:32:04 +0200
Subject: [Windstille-commit] r989 - trunk/data/images
Message-ID: <200508200032.j7K0W4JQ019007@sheep.berlios.de>

Author: grumbel
Date: 2005-08-20 02:30:42 +0200 (Sat, 20 Aug 2005)
New Revision: 989

Added:
   trunk/data/images/flashlighthighlight.png
   trunk/data/images/flashlighthighlight.sprite
   trunk/data/images/flashlightlight.png
   trunk/data/images/flashlightlight.sprite
Log:
- added flashlight light images

Added: trunk/data/images/flashlighthighlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/flashlighthighlight.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/flashlighthighlight.sprite
===================================================================
--- trunk/data/images/flashlighthighlight.sprite	2005-08-19 21:54:09 UTC (rev 988)
+++ trunk/data/images/flashlighthighlight.sprite	2005-08-20 00:30:42 UTC (rev 989)
@@ -0,0 +1,8 @@
+(sprite
+  (action
+    (name "default")
+    (images "flashlighthighlight.png")
+    (offset 0 -128)
+        
+  )
+)

Added: trunk/data/images/flashlightlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/flashlightlight.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/flashlightlight.sprite
===================================================================
--- trunk/data/images/flashlightlight.sprite	2005-08-19 21:54:09 UTC (rev 988)
+++ trunk/data/images/flashlightlight.sprite	2005-08-20 00:30:42 UTC (rev 989)
@@ -0,0 +1,8 @@
+(sprite
+  (action
+    (name "default")
+    (images "flashlightlight.png")
+    (offset 0 -128)
+        
+  )
+)



From grumbel at berlios.de  Sat Aug 20 19:53:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 20 Aug 2005 19:53:53 +0200
Subject: [Windstille-commit] r990 - trunk/data/blender/hero
Message-ID: <200508201753.j7KHrr7S001523@sheep.berlios.de>

Author: grumbel
Date: 2005-08-20 19:53:46 +0200 (Sat, 20 Aug 2005)
New Revision: 990

Added:
   trunk/data/blender/hero/heroken3.blend
Log:
- some new animations

Added: trunk/data/blender/hero/heroken3.blend
===================================================================
(Binary files differ)


Property changes on: trunk/data/blender/hero/heroken3.blend
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Sat Aug 20 20:35:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 20 Aug 2005 20:35:53 +0200
Subject: [Windstille-commit] r991 - trunk/data/blender/hero
Message-ID: <200508201835.j7KIZrKP005606@sheep.berlios.de>

Author: grumbel
Date: 2005-08-20 20:35:51 +0200 (Sat, 20 Aug 2005)
New Revision: 991

Modified:
   trunk/data/blender/hero/heroken3.blend
Log:
- some more updates from quickflash

Modified: trunk/data/blender/hero/heroken3.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 21 00:35:46 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 00:35:46 +0200
Subject: [Windstille-commit] r992 - in trunk/src: . gui
Message-ID: <200508202235.j7KMZkje028737@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 00:35:34 +0200 (Sun, 21 Aug 2005)
New Revision: 992

Added:
   trunk/src/gui/
   trunk/src/gui/Jamfile
   trunk/src/gui/button.cpp
   trunk/src/gui/button.hpp
   trunk/src/gui/component.cpp
   trunk/src/gui/component.hpp
   trunk/src/gui/grid_component.cpp
   trunk/src/gui/grid_component.hpp
   trunk/src/gui/gui_manager.cpp
   trunk/src/gui/gui_manager.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/laser_pointer.cpp
   trunk/src/laser_pointer.hpp
   trunk/src/pda.cpp
   trunk/src/pda.hpp
   trunk/src/player.cpp
   trunk/src/player.hpp
   trunk/src/screen_manager.cpp
Log:
- started a generic GUI for use in the PDA, terminals and similar things

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/Jamfile	2005-08-20 22:35:34 UTC (rev 992)
@@ -1,21 +1,22 @@
 SubDir TOP src ;
 
 SubInclude TOP src badguy ;
+SubInclude TOP src collision ;
 SubInclude TOP src display ;
 SubInclude TOP src glutil ;
+SubInclude TOP src gui ;
 SubInclude TOP src input ;
 SubInclude TOP src lisp ;
+SubInclude TOP src math ;
+SubInclude TOP src particles ;
 SubInclude TOP src physfs ;
-SubInclude TOP src squirrel ;
+SubInclude TOP src scripting ;
+SubInclude TOP src signals ;
 SubInclude TOP src sound ;
-SubInclude TOP src scripting ;
 SubInclude TOP src sprite2d ;
 SubInclude TOP src sprite3d ;
+SubInclude TOP src squirrel ;
 SubInclude TOP src tinygettext ;
-SubInclude TOP src collision ;
-SubInclude TOP src particles ;
-SubInclude TOP src math ;
-SubInclude TOP src signals ;
 
 sources = 
         baby_xml.cpp
@@ -127,6 +128,8 @@
         $(display_objects)
 
         $(glutil_objects)
+
+        $(gui_objects)
     
         $(input_objects)
 

Added: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/Jamfile	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,15 @@
+SubDir TOP src gui ;
+
+sources = 
+  button.hpp
+  button.cpp
+  component.hpp
+  component.cpp
+  gui_manager.hpp
+  gui_manager.cpp
+  grid_component.hpp
+  grid_component.cpp
+;
+
+TRANSLATABLE_SOURCES = [ SearchSource $(sources) ] ;
+gui_objects = [ CompileObjects $(sources) ] ;

Added: trunk/src/gui/button.cpp
===================================================================
--- trunk/src/gui/button.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/button.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,59 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "display/display.hpp"
+#include "fonts.hpp"
+#include "button.hpp"
+
+namespace GUI {
+
+Button::Button(const std::string& label_, Component* parent)
+  : Component(Rectf(), parent),
+    label(label_)
+{
+}
+
+Button::~Button()
+{
+}
+
+void
+Button::draw()
+{
+  Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
+  Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+  Fonts::ttfdialog->draw_center(rect.left + rect.get_width()/2, rect.top + rect.get_height()/2,
+                                label);
+}
+
+void
+Button::update(float delta, const Controller& controller)
+{
+  
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/button.hpp
===================================================================
--- trunk/src/gui/button.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/button.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,56 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_BUTTON_HPP
+#define HEADER_WINDSTILLE_GUI_BUTTON_HPP
+
+#include <string>
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class Button : public Component
+{
+private:
+  std::string label;
+
+public:
+  Button(const std::string& lable, Component* parent);
+  ~Button();
+
+  void draw();
+  void update(float delta, const Controller& controller);
+  
+private:
+  Button (const Button&);
+  Button& operator= (const Button&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Added: trunk/src/gui/component.cpp
===================================================================
--- trunk/src/gui/component.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/component.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,67 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "component.hpp"
+
+namespace GUI {
+
+Component::Component(const Rectf& rect_, Component* parent_)
+  : rect(rect_),
+    parent(parent_),
+    active(false)
+{
+}
+
+Component::~Component()
+{
+}
+
+bool
+Component::is_active() const
+{
+  return active;
+}
+
+void
+Component::set_active(bool a)
+{
+  active = a;
+}
+
+Rectf
+Component::get_screen_rect() const
+{
+  return rect;
+}
+
+void
+Component::set_screen_rect(const Rectf& r)
+{
+  rect = r;
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/component.hpp
===================================================================
--- trunk/src/gui/component.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/component.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,64 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_COMPONENT_HPP
+#define HEADER_WINDSTILLE_GUI_COMPONENT_HPP
+
+#include "math/rect.hpp"
+
+class Controller;
+
+namespace GUI {
+
+/** */
+class Component
+{
+protected:
+  Rectf rect;
+  Component* parent;
+  bool active;
+
+public:
+  Component(const Rectf& rect, Component* parent);
+  virtual ~Component();
+  
+  bool is_active() const;
+  void set_active(bool a);
+
+  virtual void draw() =0;
+  virtual void update(float delta, const Controller& controller) =0;
+
+  Rectf get_screen_rect() const;
+  void  set_screen_rect(const Rectf& rect);
+private:
+  Component (const Component&);
+  Component& operator= (const Component&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Added: trunk/src/gui/grid_component.cpp
===================================================================
--- trunk/src/gui/grid_component.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/grid_component.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,154 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <iostream>
+#include "display/display.hpp"
+#include "input/controller.hpp"
+#include "grid_component.hpp"
+
+namespace GUI {
+
+GridComponent::GridComponent(const Rectf& rect, int weight, int height, Component* parent)
+  : Component(rect, parent),
+    grid(weight, height),
+    child_active(false) 
+{
+}
+
+GridComponent::~GridComponent()
+{
+}
+
+void
+GridComponent::draw()
+{
+  Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
+  Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+  for(int y = 0; y < grid.get_height(); ++y)
+    for(int x = 0; x < grid.get_width(); ++x)
+      {
+        if (grid(x, y))
+          {
+            if (x == pos.x && y == pos.y)
+              Display::fill_rect(grid(x, y)->get_screen_rect(), Color(1.0f, 1.0f, 1.0f, 0.5f));
+            grid(x, y)->draw();
+          }
+      }
+}
+
+void
+GridComponent::update(float delta, const Controller& controller)
+{
+  for(int y = 0; y < grid.get_height(); ++y)
+    for(int x = 0; x < grid.get_width(); ++x)
+      {
+        if (grid(x, y)) 
+          {
+            if (child_active && pos.x == x && pos.y == y)
+              grid(x, y)->update(delta, controller);
+            else
+              grid(x, y)->update(delta, Controller());
+          }
+      }
+
+  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT)
+        {
+          if (i->button.name == OK_BUTTON)
+            {
+              child_active = true;
+            }
+          else if (i->button.name == CANCEL_BUTTON)
+            {
+              
+            }
+        }
+      else if (i->type == AXIS_EVENT)
+        {
+          if (i->axis.name == X_AXIS)
+            {
+              if (i->axis.pos < 0)
+                {
+                  pos.x -= 1;
+                  if (pos.x < 0)
+                    pos.x = grid.get_width()-1;
+                }
+              else if (i->axis.pos > 0)
+                {
+                  pos.x += 1;
+                  if (pos.x >= grid.get_width())
+                    pos.x = 0;
+                }
+            }
+          else if (i->axis.name == Y_AXIS)
+            {
+              if (i->axis.pos < 0)
+                {
+                  pos.y -= 1;
+                  if (pos.y < 0)
+                    pos.y = grid.get_height()-1;
+                }
+              else if (i->axis.pos > 0)
+                {
+                  pos.y += 1;
+                  if (pos.y >= grid.get_height())
+                    pos.y = 0;
+                }
+            }            
+        }
+    }
+}
+
+void
+GridComponent::pack(Component* component, int x, int y)
+{
+  assert(x >= 0);
+  assert(y >= 0);
+  assert(x < grid.get_width());
+  assert(y < grid.get_height());
+
+  if (grid(x, y) != 0)
+    {
+      std::cout << "Warning component already at: " << x << ", " << y << ", ignoring" << std::endl;
+    }
+  else
+    {
+      Rectf rect = get_screen_rect();
+      grid(x, y) = component;
+
+      float padding = 15.0f;
+
+      component->set_screen_rect(Rectf(Vector(rect.left + x * (rect.get_width()/grid.get_width()) + padding,
+                                              rect.top  + y * (rect.get_height()/grid.get_height()) + padding),
+                                       Sizef(rect.get_width()/grid.get_width() - 2*padding,
+                                             rect.get_height()/grid.get_height() - 2*padding)));
+    }
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/grid_component.hpp
===================================================================
--- trunk/src/gui/grid_component.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/grid_component.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,60 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_GRID_COMPONENT_HPP
+#define HEADER_WINDSTILLE_GUI_GRID_COMPONENT_HPP
+
+#include "field.hpp"
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class GridComponent : public Component
+{
+private:
+  typedef Field<Component*> Grid;
+  Grid grid;
+  Point pos;
+  bool child_active;
+  
+public:
+  GridComponent(const Rectf& rect, int weight, int height, Component* parent);
+  ~GridComponent();
+  
+  void draw();
+  void update(float delta, const Controller& controller);
+
+  void pack(Component* component, int x, int y);
+private:
+  GridComponent (const GridComponent&);
+  GridComponent& operator= (const GridComponent&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Added: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/gui_manager.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,78 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "input/controller.hpp"
+#include "button.hpp"
+#include "screen_manager.hpp"
+#include "grid_component.hpp"
+#include "gui_manager.hpp"
+
+namespace GUI {
+
+GUIManager::GUIManager()
+{
+  GridComponent* grid = new GridComponent(Rectf(100, 100, 700, 500), 3, 4, NULL);
+  component = grid;
+
+  grid->pack(new Button("1", grid), 0, 0);
+  grid->pack(new Button("2", grid), 1, 0);
+  grid->pack(new Button("3", grid), 2, 0);
+
+  grid->pack(new Button("4", grid), 0, 1);
+  grid->pack(new Button("5", grid), 1, 1);
+  grid->pack(new Button("6", grid), 2, 1);
+
+  grid->pack(new Button("7", grid), 0, 2);
+  grid->pack(new Button("8", grid), 1, 2);
+  grid->pack(new Button("9", grid), 2, 2);
+
+  grid->pack(new Button("Cl", grid), 0, 3);
+  grid->pack(new Button("0",  grid), 1, 3);
+  grid->pack(new Button("Ok", grid), 2, 3);
+}
+
+GUIManager::~GUIManager()
+{
+  delete component;
+}
+
+void
+GUIManager::draw()
+{
+  component->draw();
+}
+
+void
+GUIManager::update(float delta, const Controller& controller)
+{
+  component->update(delta, controller);
+
+  if (controller.button_was_pressed(CANCEL_BUTTON))
+    screen_manager.set_overlay(0);
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/gui_manager.hpp
===================================================================
--- trunk/src/gui/gui_manager.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/gui/gui_manager.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -0,0 +1,56 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
+#define HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
+
+#include "component.hpp"
+#include "screen.hpp"
+
+namespace GUI {
+
+/** */
+class GUIManager : public Screen
+{
+private:
+  Component* component;
+
+public:
+  GUIManager();
+  ~GUIManager();
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+private:
+  GUIManager (const GUIManager&);
+  GUIManager& operator= (const GUIManager&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Modified: trunk/src/laser_pointer.cpp
===================================================================
--- trunk/src/laser_pointer.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/laser_pointer.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -34,6 +34,8 @@
 {
   noise = Texture("images/noise2.png");
   laserpointer = Sprite("images/laserpointer.sprite");
+  laserpointer_light = Sprite("images/laserpointer_light.sprite");
+  laserpointer_light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   noise.set_wrap(GL_REPEAT);
   noise.set_filter(GL_LINEAR);
   
@@ -124,21 +126,11 @@
   array->color(Color(1.0f, 0.0f, 0.0f, 1.0f));
   array->texcoord((target - pos).norm()/256.0f, progress);
   array->vertex(target.x, target.y);
-   
-  if (0)
-    {
-      array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
-      array->texcoord(pos.x/200.0f, progress);
-      array->vertex(pos.x, pos.y);
 
-      array->color(Color(1.0f, 1.0f, 0.0f, 1.0f));
-      array->texcoord(target.x/200.0f, progress);
-      array->vertex(pos.x + cos(angle) * 100.0f, pos.y + sin(angle) * 100.0f);
-    }
-
   sc.highlight().draw(array);
   laserpointer.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   sc.highlight().draw(laserpointer, target);
+  sc.light().draw(laserpointer_light, target);
 }
 
 void

Modified: trunk/src/laser_pointer.hpp
===================================================================
--- trunk/src/laser_pointer.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/laser_pointer.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -34,6 +34,7 @@
 private:
   Texture noise;
   Sprite  laserpointer;
+  Sprite  laserpointer_light;
   float   progress;
   float   angle;
 

Modified: trunk/src/pda.cpp
===================================================================
--- trunk/src/pda.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/pda.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -43,7 +43,7 @@
 }
 
 PDA::PDA()
-  : state(PDA_INVENTORY)
+  : state(PDA_OBJECTIVES)
 { 
   text_area = 0;
 }
@@ -71,11 +71,11 @@
       if (i->axis.pos > 0) {
         state = static_cast<pda_state>(state + 1);
         if (state > PDA_DIALOGS)
-          state = PDA_INVENTORY;
+          state = PDA_OBJECTIVES;
       }
       else if (i->axis.pos < 0) {
         state = static_cast<pda_state>(state - 1);
-        if (state < PDA_INVENTORY)
+        if (state < PDA_OBJECTIVES)
           state = PDA_DIALOGS;
       }
     }
@@ -85,9 +85,6 @@
   int height = 400;
   
   switch (state) {
-    case PDA_INVENTORY:
-      show_inventory();
-      break;
     case PDA_OBJECTIVES:
       show_objectives();
       break;
@@ -155,17 +152,10 @@
 }
 
 void
-PDA::show_inventory()
-{
-  new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "<b>inventory</b> - objectives - dialogs\n\n";
-}
-
-void
 PDA::show_objectives()
 {
   new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "inventory - <b>objectives</b> - dialogs\n\n";
+  new_text += "<b>objectives</b> - dialogs\n\n";
   
   for (std::vector<ObjectiveEntry>::reverse_iterator i = objectives.rbegin(); i != objectives.rend(); ++i) {
     new_text += i->name;
@@ -182,7 +172,7 @@
 PDA::show_dialogs()
 {
   new_text = "<large>Personal Digital Assistant</large>\n";
-  new_text += "inventory - objectives - <b>dialogs</b>\n\n";
+  new_text += "objectives - <b>dialogs</b>\n\n";
   
   for (std::vector<DialogEntry>::reverse_iterator i = dialogs.rbegin(); i != dialogs.rend(); ++i) {
     new_text += i->character;

Modified: trunk/src/pda.hpp
===================================================================
--- trunk/src/pda.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/pda.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -65,7 +65,6 @@
   bool is_objective_complete(const std::string& name);
 
 private:
-  void show_inventory();
   void show_objectives();
   void show_dialogs();
   
@@ -75,7 +74,7 @@
   
   std::string new_text;  
   std::string old_text;
-  enum pda_state { PDA_INVENTORY, PDA_OBJECTIVES, PDA_DIALOGS } state;
+  enum pda_state { PDA_OBJECTIVES, PDA_DIALOGS } state;
 };
 
 #endif

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/player.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -42,6 +42,8 @@
 
 Player::Player () :
   light("images/light3.sprite"),
+  flashlight("images/flashlightlight.sprite"),
+  flashlighthighlight("images/flashlighthighlight.sprite"),
   //sprite ("3dsprites/heroken.wsprite"),
   grenade("3dsprites/grenade.wsprite"),
   state(STAND)
@@ -78,10 +80,17 @@
 void
 Player::draw (SceneContext& sc)
 {
-  light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
-  light.set_scale(4.0f);
+  //light.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  //light.set_scale(4.0f);
 
-  //sc.light().draw(light, pos, 100.0f);
+  flashlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  flashlight.set_scale(2.0f);
+
+  flashlighthighlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
+  flashlighthighlight.set_scale(2.0f);
+
+  sc.highlight().draw(flashlighthighlight, pos - Vector(40, 80), 100.0f);
+  sc.light().draw(flashlight, pos - Vector(40, 80), 100.0f);
   sprite.draw(sc.color(), pos, 100);
 
   Entity* obj = find_useable_entity();

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/player.hpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -38,6 +38,8 @@
   Controller controller;
 
   Sprite   light;
+  Sprite   flashlight;
+  Sprite   flashlighthighlight;
   Sprite3D sprite;
   Sprite3D grenade;
 

Modified: trunk/src/screen_manager.cpp
===================================================================
--- trunk/src/screen_manager.cpp	2005-08-20 18:35:51 UTC (rev 991)
+++ trunk/src/screen_manager.cpp	2005-08-20 22:35:34 UTC (rev 992)
@@ -34,8 +34,11 @@
 #include "input/input_manager.hpp"
 #include "input/input_configurator.hpp"
 #include "sound/sound_manager.hpp"
+#include "gui/gui_manager.hpp"
 #include "screen_manager.hpp"
 
+using GUI::GUIManager;
+
 ScreenManager screen_manager; 
 
 ScreenManager::ScreenManager()
@@ -162,6 +165,10 @@
             {    
               switch (event.key.keysym.sym)
                 {               
+                case SDLK_F8:
+                  set_overlay(new GUIManager());
+                  break;
+
                 case SDLK_F9:
                   set_overlay(new InputConfigurator());
                   break;



From grumbel at berlios.de  Sun Aug 21 01:58:18 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 01:58:18 +0200
Subject: [Windstille-commit] r993 - trunk/src/gui
Message-ID: <200508202358.j7KNwIIL004579@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 01:57:32 +0200 (Sun, 21 Aug 2005)
New Revision: 993

Modified:
   trunk/src/gui/grid_component.cpp
   trunk/src/gui/grid_component.hpp
   trunk/src/gui/gui_manager.cpp
Log:
- added col/rowspan to GridComponent

Modified: trunk/src/gui/grid_component.cpp
===================================================================
--- trunk/src/gui/grid_component.cpp	2005-08-20 22:35:34 UTC (rev 992)
+++ trunk/src/gui/grid_component.cpp	2005-08-20 23:57:32 UTC (rev 993)
@@ -33,7 +33,9 @@
 GridComponent::GridComponent(const Rectf& rect, int weight, int height, Component* parent)
   : Component(rect, parent),
     grid(weight, height),
-    child_active(false) 
+    pos(0, 0),
+    child_active(false)
+
 {
 }
 
@@ -50,11 +52,12 @@
   for(int y = 0; y < grid.get_height(); ++y)
     for(int x = 0; x < grid.get_width(); ++x)
       {
-        if (grid(x, y))
+        if (grid(x, y).component && !grid(x, y).has_parent())
           {
             if (x == pos.x && y == pos.y)
-              Display::fill_rect(grid(x, y)->get_screen_rect(), Color(1.0f, 1.0f, 1.0f, 0.5f));
-            grid(x, y)->draw();
+              Display::fill_rect(grid(x, y).component->get_screen_rect(), Color(1.0f, 1.0f, 1.0f, 0.5f));
+            
+            grid(x, y).component->draw();
           }
       }
 }
@@ -65,12 +68,12 @@
   for(int y = 0; y < grid.get_height(); ++y)
     for(int x = 0; x < grid.get_width(); ++x)
       {
-        if (grid(x, y)) 
+        if (grid(x, y).component && !grid(x, y).has_parent())
           {
             if (child_active && pos.x == x && pos.y == y)
-              grid(x, y)->update(delta, controller);
+              grid(x, y).component->update(delta, controller);
             else
-              grid(x, y)->update(delta, Controller());
+              grid(x, y).component->update(delta, Controller());
           }
       }
 
@@ -93,59 +96,105 @@
             {
               if (i->axis.pos < 0)
                 {
-                  pos.x -= 1;
-                  if (pos.x < 0)
-                    pos.x = grid.get_width()-1;
+                  move_left();
                 }
               else if (i->axis.pos > 0)
                 {
-                  pos.x += 1;
-                  if (pos.x >= grid.get_width())
-                    pos.x = 0;
+                  move_right();
                 }
             }
           else if (i->axis.name == Y_AXIS)
             {
               if (i->axis.pos < 0)
                 {
-                  pos.y -= 1;
-                  if (pos.y < 0)
-                    pos.y = grid.get_height()-1;
+                  move_down();
                 }
               else if (i->axis.pos > 0)
                 {
-                  pos.y += 1;
-                  if (pos.y >= grid.get_height())
-                    pos.y = 0;
+                  move_up();
                 }
-            }            
+            }
         }
     }
 }
 
 void
-GridComponent::pack(Component* component, int x, int y)
+GridComponent::move_up()
 {
+  pos.y += grid(pos.x, pos.y).span.height;
+  if (pos.y >= grid.get_height())
+    pos.y = 0;
+
+  if (grid(pos.x, pos.y).has_parent())
+    pos = grid(pos.x, pos.y).parent;
+}
+
+void
+GridComponent::move_down()
+{
+  pos.y -= 1;
+  if (pos.y < 0)
+    pos.y = grid.get_height()-1;
+
+  if (grid(pos.x, pos.y).has_parent())
+    pos = grid(pos.x, pos.y).parent;
+}
+
+void
+GridComponent::move_left()
+{
+  pos.x -= 1;
+  if (pos.x < 0)
+    pos.x = grid.get_width()-1;  
+
+  if (grid(pos.x, pos.y).has_parent())
+    pos = grid(pos.x, pos.y).parent;
+}
+
+void
+GridComponent::move_right()
+{
+  pos.x += grid(pos.x, pos.y).span.width;
+  if (pos.x >= grid.get_width())
+    pos.x = 0;
+
+  if (grid(pos.x, pos.y).has_parent())
+    pos = grid(pos.x, pos.y).parent;
+}
+
+void
+GridComponent::pack(Component* component, int x, int y, int colspan, int rowspan)
+{
   assert(x >= 0);
   assert(y >= 0);
   assert(x < grid.get_width());
   assert(y < grid.get_height());
 
-  if (grid(x, y) != 0)
+  if (grid(x, y).component != 0)
     {
       std::cout << "Warning component already at: " << x << ", " << y << ", ignoring" << std::endl;
     }
   else
     {
       Rectf rect = get_screen_rect();
-      grid(x, y) = component;
+      if (colspan == 1 && rowspan == 1)
+        grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
+      else
+        {
+          for(int iy = 0; iy < rowspan; ++iy)
+            for(int ix = 0; ix < colspan; ++ix)
+              {
+                grid(x + ix, y + iy) = ComponentBox(component, Size(0, 0), Point(x, y));
+              }
+          grid(x, y) = ComponentBox(component, Size(colspan, rowspan));
+        }
 
       float padding = 15.0f;
 
-      component->set_screen_rect(Rectf(Vector(rect.left + x * (rect.get_width()/grid.get_width()) + padding,
+      component->set_screen_rect(Rectf(Vector(rect.left + x * (rect.get_width() /grid.get_width())  + padding,
                                               rect.top  + y * (rect.get_height()/grid.get_height()) + padding),
-                                       Sizef(rect.get_width()/grid.get_width() - 2*padding,
-                                             rect.get_height()/grid.get_height() - 2*padding)));
+                                       Sizef((rect.get_width()/grid.get_width())   * colspan - 2*padding,
+                                             (rect.get_height()/grid.get_height()) * rowspan - 2*padding)));
     }
 }
 

Modified: trunk/src/gui/grid_component.hpp
===================================================================
--- trunk/src/gui/grid_component.hpp	2005-08-20 22:35:34 UTC (rev 992)
+++ trunk/src/gui/grid_component.hpp	2005-08-20 23:57:32 UTC (rev 993)
@@ -35,7 +35,25 @@
 class GridComponent : public Component
 {
 private:
-  typedef Field<Component*> Grid;
+  struct ComponentBox 
+  {
+    enum { } type;
+
+    Component* component;
+    Size  span;
+    Point parent;
+
+    ComponentBox() 
+      : component(0), span(1, 1), parent(-1, -1) {}
+
+    ComponentBox(Component* c, const Size& s, const Point& parent_ = Point(-1, -1))
+      : component(c), span(s), parent(parent_) {}
+
+    bool is_simple()  const { return (span.width == 1 && span.height == 1); }
+    bool has_parent() const { return (parent.x != -1 || parent.y != -1); }
+  };
+
+  typedef Field<ComponentBox> Grid;
   Grid grid;
   Point pos;
   bool child_active;
@@ -47,7 +65,13 @@
   void draw();
   void update(float delta, const Controller& controller);
 
-  void pack(Component* component, int x, int y);
+  void pack(Component* component, int x, int y, int colspan = 1, int rowspan = 1);
+
+  void move_up();
+  void move_down();
+
+  void move_left();
+  void move_right();
 private:
   GridComponent (const GridComponent&);
   GridComponent& operator= (const GridComponent&);

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-20 22:35:34 UTC (rev 992)
+++ trunk/src/gui/gui_manager.cpp	2005-08-20 23:57:32 UTC (rev 993)
@@ -41,14 +41,14 @@
   grid->pack(new Button("3", grid), 2, 0);
 
   grid->pack(new Button("4", grid), 0, 1);
-  grid->pack(new Button("5", grid), 1, 1);
-  grid->pack(new Button("6", grid), 2, 1);
+  grid->pack(new Button("5", grid), 1, 1, 2, 2);
+  //grid->pack(new Button("6", grid), 2, 1);
 
-  grid->pack(new Button("7", grid), 0, 2);
-  grid->pack(new Button("8", grid), 1, 2);
-  grid->pack(new Button("9", grid), 2, 2);
+  grid->pack(new Button("7", grid), 0, 2, 1, 2);
+  //grid->pack(new Button("8", grid), 1, 2);
+  //grid->pack(new Button("9", grid), 2, 2);
 
-  grid->pack(new Button("Cl", grid), 0, 3);
+  //grid->pack(new Button("Cl", grid), 0, 3);
   grid->pack(new Button("0",  grid), 1, 3);
   grid->pack(new Button("Ok", grid), 2, 3);
 }



From grumbel at berlios.de  Sun Aug 21 15:57:01 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 15:57:01 +0200
Subject: [Windstille-commit] r994 - trunk/src/gui
Message-ID: <200508211357.j7LDv1JX019781@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 15:56:59 +0200 (Sun, 21 Aug 2005)
New Revision: 994

Added:
   trunk/src/gui/tab_component.cpp
   trunk/src/gui/tab_component.hpp
Modified:
   trunk/src/gui/Jamfile
   trunk/src/gui/gui_manager.cpp
Log:
- added primitive tab component

Modified: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-08-20 23:57:32 UTC (rev 993)
+++ trunk/src/gui/Jamfile	2005-08-21 13:56:59 UTC (rev 994)
@@ -9,6 +9,8 @@
   gui_manager.cpp
   grid_component.hpp
   grid_component.cpp
+  tab_component.hpp
+  tab_component.cpp
 ;
 
 TRANSLATABLE_SOURCES = [ SearchSource $(sources) ] ;

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-20 23:57:32 UTC (rev 993)
+++ trunk/src/gui/gui_manager.cpp	2005-08-21 13:56:59 UTC (rev 994)
@@ -27,12 +27,15 @@
 #include "button.hpp"
 #include "screen_manager.hpp"
 #include "grid_component.hpp"
+#include "tab_component.hpp"
 #include "gui_manager.hpp"
 
 namespace GUI {
 
 GUIManager::GUIManager()
 {
+  if (0)
+    {
   GridComponent* grid = new GridComponent(Rectf(100, 100, 700, 500), 3, 4, NULL);
   component = grid;
 
@@ -51,6 +54,14 @@
   //grid->pack(new Button("Cl", grid), 0, 3);
   grid->pack(new Button("0",  grid), 1, 3);
   grid->pack(new Button("Ok", grid), 2, 3);
+    }
+  else
+    {
+      TabComponent* tab = new TabComponent(Rectf(100, 100, 700, 500), NULL);
+      tab->pack("My Button",   new Button("Map Test", tab));
+      tab->pack("Your Button", new Button("Inventory", tab));
+      component = tab;
+    }
 }
 
 GUIManager::~GUIManager()

Added: trunk/src/gui/tab_component.cpp
===================================================================
--- trunk/src/gui/tab_component.cpp	2005-08-20 23:57:32 UTC (rev 993)
+++ trunk/src/gui/tab_component.cpp	2005-08-21 13:56:59 UTC (rev 994)
@@ -0,0 +1,135 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "input/controller.hpp"
+#include "fonts.hpp"
+#include "display/display.hpp"
+#include "tab_component.hpp"
+
+namespace GUI {
+
+TabComponent::TabComponent(const Rectf& rect, Component* parent)
+  : Component(rect, parent)
+{
+  current_tab = 0;
+}
+
+TabComponent::~TabComponent()
+{
+}
+
+void
+TabComponent::draw()
+{
+  if (tabs.empty()) return;
+
+  float tab_width = rect.get_width()/tabs.size();
+  for(int i = 0; i != int(tabs.size()); ++i)
+    {
+      Rectf tab_rect(Vector(rect.left + tab_width * i + 10,
+                            rect.top),
+                     Sizef(tab_width - 20, Fonts::ttfdialog->get_height()));
+
+      if (i == current_tab)
+        Display::fill_rect(tab_rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+      else
+        Display::fill_rect(tab_rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
+
+      Display::draw_rect(tab_rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
+
+      Fonts::ttfdialog->draw_center(rect.left + tab_width * i + tab_width/2,
+                                    rect.top + Fonts::ttfdialog->get_height(),
+                                    tabs[i].label);
+    }
+
+  tabs[current_tab].component->draw();
+}
+
+void
+TabComponent::update(float delta, const Controller& controller)
+{
+  if (tabs.empty()) return;
+
+  tabs[current_tab].component->update(delta, Controller());
+
+  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT)
+        {
+          if (i->button.name == OK_BUTTON)
+            {
+            }
+          else if (i->button.name == CANCEL_BUTTON)
+            {            
+            }
+        }
+      else if (i->type == AXIS_EVENT)
+        {
+          if (i->axis.name == X_AXIS)
+            {
+              if (i->axis.pos < 0)
+                {
+                  if (current_tab == 0)
+                    current_tab = tabs.size() - 1;
+                  else
+                    current_tab -= 1;
+                }
+              else if (i->axis.pos > 0)
+                {
+                  if (current_tab == int(tabs.size()) - 1)
+                    current_tab = 0;
+                  else
+                    current_tab += 1;
+                }
+            }
+          else if (i->axis.name == Y_AXIS)
+            {
+              if (i->axis.pos < 0)
+                {
+                }
+              else if (i->axis.pos > 0)
+                {
+                }
+            }
+        }
+    }
+}
+
+void
+TabComponent::pack(const std::string& name, Component* component)
+{
+  tabs.push_back(Tab(name, component));
+
+  int padding = 6;
+  component->set_screen_rect(Rectf(rect.left + padding,
+                                   rect.top  + padding + Fonts::ttfdialog->get_height(),
+                                   rect.right  - padding,
+                                   rect.bottom - padding
+                                  ));
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/tab_component.hpp
===================================================================
--- trunk/src/gui/tab_component.hpp	2005-08-20 23:57:32 UTC (rev 993)
+++ trunk/src/gui/tab_component.hpp	2005-08-21 13:56:59 UTC (rev 994)
@@ -0,0 +1,72 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_TAB_COMPONENT_HPP
+#define HEADER_WINDSTILLE_GUI_TAB_COMPONENT_HPP
+
+#include <string>
+#include <vector>
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class TabComponent : public Component
+{
+private:
+  struct Tab 
+  {
+    std::string label;
+    Component*  component;
+
+    Tab() : component(0) {}
+    
+    Tab(const std::string& label_, Component* c)
+      : label(label_), component(c) {}
+  };
+
+  typedef std::vector<Tab> Tabs;
+  Tabs tabs;
+
+  int current_tab;
+
+public:
+  TabComponent(const Rectf& rect, Component* parent);
+  ~TabComponent();
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+  void pack(const std::string& name, Component* component);
+private:
+  TabComponent (const TabComponent&);
+  TabComponent& operator= (const TabComponent&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */



From grumbel at berlios.de  Sun Aug 21 18:00:30 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 18:00:30 +0200
Subject: [Windstille-commit] r995 - trunk/src/gui
Message-ID: <200508211600.j7LG0UcX028054@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 18:00:28 +0200 (Sun, 21 Aug 2005)
New Revision: 995

Added:
   trunk/src/gui/root_component.cpp
   trunk/src/gui/root_component.hpp
Modified:
   trunk/src/gui/Jamfile
   trunk/src/gui/button.cpp
   trunk/src/gui/component.cpp
   trunk/src/gui/component.hpp
   trunk/src/gui/grid_component.cpp
   trunk/src/gui/grid_component.hpp
   trunk/src/gui/gui_manager.cpp
   trunk/src/gui/gui_manager.hpp
   trunk/src/gui/tab_component.cpp
Log:
- some experiments with embedding a grid component inside a tab component

Modified: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/Jamfile	2005-08-21 16:00:28 UTC (rev 995)
@@ -11,6 +11,8 @@
   grid_component.cpp
   tab_component.hpp
   tab_component.cpp
+  root_component.hpp
+  root_component.cpp
 ;
 
 TRANSLATABLE_SOURCES = [ SearchSource $(sources) ] ;

Modified: trunk/src/gui/button.cpp
===================================================================
--- trunk/src/gui/button.cpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/button.cpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -25,6 +25,7 @@
 
 #include "display/display.hpp"
 #include "fonts.hpp"
+#include "input/controller.hpp"
 #include "button.hpp"
 
 namespace GUI {
@@ -45,13 +46,28 @@
   Display::fill_rect(rect, Color(0.0f, 0.0f, 0.0f, 0.5f));
   Display::draw_rect(rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
   Fonts::ttfdialog->draw_center(rect.left + rect.get_width()/2, rect.top + rect.get_height()/2,
-                                label);
+                                label,
+                                is_active()
+                                ? Color(1.0f, 1.0f, 1.0f, 1.0f) 
+                                : Color(1.0f, 1.0f, 1.0f, 0.5f));
 }
 
 void
 Button::update(float delta, const Controller& controller)
 {
-  
+  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT)
+        {
+          if (i->button.name == OK_BUTTON)
+            {
+            }
+          else if (i->button.name == CANCEL_BUTTON)
+            {            
+              set_active(false);
+            }
+        }
+    }  
 }
 
 } // namespace GUI

Modified: trunk/src/gui/component.cpp
===================================================================
--- trunk/src/gui/component.cpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/component.cpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -47,6 +47,8 @@
 void
 Component::set_active(bool a)
 {
+  if (!active && a)
+    on_activation();
   active = a;
 }
 

Modified: trunk/src/gui/component.hpp
===================================================================
--- trunk/src/gui/component.hpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/component.hpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -47,11 +47,13 @@
   bool is_active() const;
   void set_active(bool a);
 
+  virtual void on_activation() {}
   virtual void draw() =0;
   virtual void update(float delta, const Controller& controller) =0;
 
   Rectf get_screen_rect() const;
   void  set_screen_rect(const Rectf& rect);
+
 private:
   Component (const Component&);
   Component& operator= (const Component&);

Modified: trunk/src/gui/grid_component.cpp
===================================================================
--- trunk/src/gui/grid_component.cpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/grid_component.cpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -87,7 +87,7 @@
             }
           else if (i->button.name == CANCEL_BUTTON)
             {
-              
+              set_active(false);
             }
         }
       else if (i->type == AXIS_EVENT)
@@ -121,45 +121,61 @@
 void
 GridComponent::move_up()
 {
+  grid(pos.x, pos.y).component->set_active(false);
+
   pos.y += grid(pos.x, pos.y).span.height;
   if (pos.y >= grid.get_height())
     pos.y = 0;
 
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
+
+  grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
 GridComponent::move_down()
 {
+  grid(pos.x, pos.y).component->set_active(false);
+
   pos.y -= 1;
   if (pos.y < 0)
     pos.y = grid.get_height()-1;
 
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
+
+  grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
 GridComponent::move_left()
 {
+  grid(pos.x, pos.y).component->set_active(false);
+
   pos.x -= 1;
   if (pos.x < 0)
     pos.x = grid.get_width()-1;  
 
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
+
+  grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
 GridComponent::move_right()
 {
+  grid(pos.x, pos.y).component->set_active(false);
+
   pos.x += grid(pos.x, pos.y).span.width;
   if (pos.x >= grid.get_width())
     pos.x = 0;
 
   if (grid(pos.x, pos.y).has_parent())
     pos = grid(pos.x, pos.y).parent;
+
+  grid(pos.x, pos.y).component->set_active(true);
 }
 
 void
@@ -198,6 +214,12 @@
     }
 }
 
+void
+GridComponent::on_activation()
+{
+  grid(pos.x, pos.y).component->set_active(true);
+}
+
 } // namespace GUI
 
 /* EOF */

Modified: trunk/src/gui/grid_component.hpp
===================================================================
--- trunk/src/gui/grid_component.hpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/grid_component.hpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -72,6 +72,8 @@
 
   void move_left();
   void move_right();
+
+  void on_activation();
 private:
   GridComponent (const GridComponent&);
   GridComponent& operator= (const GridComponent&);

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/gui_manager.cpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -25,6 +25,7 @@
 
 #include "input/controller.hpp"
 #include "button.hpp"
+#include "root_component.hpp"
 #include "screen_manager.hpp"
 #include "grid_component.hpp"
 #include "tab_component.hpp"
@@ -34,11 +35,12 @@
 
 GUIManager::GUIManager()
 {
-  if (0)
-    {
-  GridComponent* grid = new GridComponent(Rectf(100, 100, 700, 500), 3, 4, NULL);
-  component = grid;
+  root = new RootComponent(Rectf(0,0,800,600));
 
+  TabComponent* tab = new TabComponent(Rectf(100, 100, 700, 500), root);
+
+  GridComponent* grid = new GridComponent(Rectf(100, 130, 700, 500), 3, 4, tab);
+
   grid->pack(new Button("1", grid), 0, 0);
   grid->pack(new Button("2", grid), 1, 0);
   grid->pack(new Button("3", grid), 2, 0);
@@ -54,34 +56,33 @@
   //grid->pack(new Button("Cl", grid), 0, 3);
   grid->pack(new Button("0",  grid), 1, 3);
   grid->pack(new Button("Ok", grid), 2, 3);
-    }
-  else
-    {
-      TabComponent* tab = new TabComponent(Rectf(100, 100, 700, 500), NULL);
-      tab->pack("My Button",   new Button("Map Test", tab));
-      tab->pack("Your Button", new Button("Inventory", tab));
-      component = tab;
-    }
+
+  tab->pack("My Button",   new Button("Map Test", tab));
+  tab->pack("DaGrid", grid);
+
+  root->set_child(tab);
 }
 
 GUIManager::~GUIManager()
 {
-  delete component;
+  delete root;
 }
 
 void
 GUIManager::draw()
 {
-  component->draw();
+  root->draw();
 }
 
 void
 GUIManager::update(float delta, const Controller& controller)
 {
-  component->update(delta, controller);
+  root->update(delta, controller);
 
-  if (controller.button_was_pressed(CANCEL_BUTTON))
-    screen_manager.set_overlay(0);
+  if (!root->is_active())
+    {
+      screen_manager.set_overlay(0);
+    }
 }
 
 } // namespace GUI

Modified: trunk/src/gui/gui_manager.hpp
===================================================================
--- trunk/src/gui/gui_manager.hpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/gui_manager.hpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -26,16 +26,17 @@
 #ifndef HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 #define HEADER_WINDSTILLE_GUI_GUI_MANAGER_HPP
 
-#include "component.hpp"
 #include "screen.hpp"
 
 namespace GUI {
 
+class RootComponent;
+
 /** */
 class GUIManager : public Screen
 {
 private:
-  Component* component;
+  RootComponent* root;
 
 public:
   GUIManager();

Added: trunk/src/gui/root_component.cpp
===================================================================
--- trunk/src/gui/root_component.cpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/root_component.cpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -0,0 +1,61 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "root_component.hpp"
+
+namespace GUI {
+
+RootComponent::RootComponent(const Rectf& rect)
+  : Component(rect, 0),
+    child(0)
+{
+  set_active(true);
+}
+
+RootComponent::~RootComponent()
+{
+}
+
+void
+RootComponent::set_child(Component* child_)
+{
+  child = child_;
+}
+
+void
+RootComponent::draw()
+{
+  child->draw();
+}
+
+void
+RootComponent::update(float delta, const Controller& controller)
+{
+  child->update(delta, controller);
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/root_component.hpp
===================================================================
--- trunk/src/gui/root_component.hpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/root_component.hpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -0,0 +1,57 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_ROOT_COMPONENT_HPP
+#define HEADER_WINDSTILLE_GUI_ROOT_COMPONENT_HPP
+
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class RootComponent : public Component
+{
+private:
+  Component* child;
+
+public:
+  RootComponent(const Rectf& rect);
+  ~RootComponent();
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+  void set_child(Component* child);
+
+private:
+  RootComponent (const RootComponent&);
+  RootComponent& operator= (const RootComponent&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Modified: trunk/src/gui/tab_component.cpp
===================================================================
--- trunk/src/gui/tab_component.cpp	2005-08-21 13:56:59 UTC (rev 994)
+++ trunk/src/gui/tab_component.cpp	2005-08-21 16:00:28 UTC (rev 995)
@@ -50,7 +50,7 @@
     {
       Rectf tab_rect(Vector(rect.left + tab_width * i + 10,
                             rect.top),
-                     Sizef(tab_width - 20, Fonts::ttfdialog->get_height()));
+                     Sizef(tab_width - 20, Fonts::ttfdialog->get_height() + 6));
 
       if (i == current_tab)
         Display::fill_rect(tab_rect, Color(1.0f, 1.0f, 1.0f, 0.5f));
@@ -61,7 +61,10 @@
 
       Fonts::ttfdialog->draw_center(rect.left + tab_width * i + tab_width/2,
                                     rect.top + Fonts::ttfdialog->get_height(),
-                                    tabs[i].label);
+                                    tabs[i].label,
+                                    tabs[current_tab].component->is_active()
+                                    ? Color(1.0f, 1.0f, 1.0f, 0.5f) 
+                                    : Color(1.0f, 1.0f, 1.0f, 1.0f));
     }
 
   tabs[current_tab].component->draw();
@@ -72,45 +75,53 @@
 {
   if (tabs.empty()) return;
 
-  tabs[current_tab].component->update(delta, Controller());
+  if (tabs[current_tab].component->is_active())
+    {
+      tabs[current_tab].component->update(delta, controller);
+    }
+  else
+    {
+      tabs[current_tab].component->update(delta, Controller());
 
-  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
-    {
-      if (i->type == BUTTON_EVENT)
+      for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
         {
-          if (i->button.name == OK_BUTTON)
+          if (i->type == BUTTON_EVENT)
             {
-            }
-          else if (i->button.name == CANCEL_BUTTON)
-            {            
-            }
-        }
-      else if (i->type == AXIS_EVENT)
-        {
-          if (i->axis.name == X_AXIS)
-            {
-              if (i->axis.pos < 0)
+              if (i->button.name == OK_BUTTON)
                 {
-                  if (current_tab == 0)
-                    current_tab = tabs.size() - 1;
-                  else
-                    current_tab -= 1;
+                  tabs[current_tab].component->set_active(true);
                 }
-              else if (i->axis.pos > 0)
-                {
-                  if (current_tab == int(tabs.size()) - 1)
-                    current_tab = 0;
-                  else
-                    current_tab += 1;
+              else if (i->button.name == CANCEL_BUTTON)
+                {            
                 }
             }
-          else if (i->axis.name == Y_AXIS)
+          else if (i->type == AXIS_EVENT)
             {
-              if (i->axis.pos < 0)
+              if (i->axis.name == X_AXIS)
                 {
+                  if (i->axis.pos < 0)
+                    {
+                      if (current_tab == 0)
+                        current_tab = tabs.size() - 1;
+                      else
+                        current_tab -= 1;
+                    }
+                  else if (i->axis.pos > 0)
+                    {
+                      if (current_tab == int(tabs.size()) - 1)
+                        current_tab = 0;
+                      else
+                        current_tab += 1;
+                    }
                 }
-              else if (i->axis.pos > 0)
+              else if (i->axis.name == Y_AXIS)
                 {
+                  if (i->axis.pos < 0)
+                    {
+                    }
+                  else if (i->axis.pos > 0)
+                    {
+                    }
                 }
             }
         }
@@ -124,10 +135,10 @@
 
   int padding = 6;
   component->set_screen_rect(Rectf(rect.left + padding,
-                                   rect.top  + padding + Fonts::ttfdialog->get_height(),
+                                   rect.top  + padding + Fonts::ttfdialog->get_height() + 10,
                                    rect.right  - padding,
                                    rect.bottom - padding
-                                  ));
+                                   ));
 }
 
 } // namespace GUI



From grumbel at berlios.de  Sun Aug 21 20:35:26 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 20:35:26 +0200
Subject: [Windstille-commit] r996 - in trunk/src: glutil gui
Message-ID: <200508211835.j7LIZQgd029770@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 20:35:25 +0200 (Sun, 21 Aug 2005)
New Revision: 996

Added:
   trunk/src/gui/automap.cpp
   trunk/src/gui/automap.hpp
Modified:
   trunk/src/glutil/surface_drawing_parameters.hpp
   trunk/src/gui/Jamfile
   trunk/src/gui/gui_manager.cpp
Log:
- added very primitive automapping component

Modified: trunk/src/glutil/surface_drawing_parameters.hpp
===================================================================
--- trunk/src/glutil/surface_drawing_parameters.hpp	2005-08-21 16:00:28 UTC (rev 995)
+++ trunk/src/glutil/surface_drawing_parameters.hpp	2005-08-21 18:35:25 UTC (rev 996)
@@ -26,6 +26,7 @@
 #ifndef HEADER_GLUTIL_SURFACE_DRAWING_PARAMETERS_HPP
 #define HEADER_GLUTIL_SURFACE_DRAWING_PARAMETERS_HPP
 
+#include <GL/gl.h>
 #include "math/vector.hpp"
 #include "color.hpp"
 

Modified: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-08-21 16:00:28 UTC (rev 995)
+++ trunk/src/gui/Jamfile	2005-08-21 18:35:25 UTC (rev 996)
@@ -1,6 +1,8 @@
 SubDir TOP src gui ;
 
 sources = 
+  automap.hpp
+  automap.cpp
   button.hpp
   button.cpp
   component.hpp

Added: trunk/src/gui/automap.cpp
===================================================================
--- trunk/src/gui/automap.cpp	2005-08-21 16:00:28 UTC (rev 995)
+++ trunk/src/gui/automap.cpp	2005-08-21 18:35:25 UTC (rev 996)
@@ -0,0 +1,129 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "glutil/surface_drawing_parameters.hpp"
+#include "input/controller.hpp"
+#include "sector.hpp"
+#include "tile_map.hpp"
+#include "automap.hpp"
+
+namespace GUI {
+
+Automap::Automap(const Rectf& rect, Component* parent)
+  : Component(rect, parent),
+    pos(0.0f, 0.0f),
+    zoom(1.0f)
+{
+  TileMap* tilemap = Sector::current()->get_tilemap();
+  
+#if SDL_BYTEORDER == SDL_BIG_ENDIAN
+  SDL_Surface* image = SDL_CreateRGBSurface(SDL_SWSURFACE,
+                                            tilemap->get_width(), tilemap->get_height(), 32,
+                                            0xff000000, 0x00ff0000, 0x0000ff00, 0x000000ff);
+#else
+  SDL_Surface* image = SDL_CreateRGBSurface(SDL_SWSURFACE,
+                                            tilemap->get_width(), tilemap->get_height(), 32,
+                                            0x000000ff, 0x0000ff00, 0x00ff0000, 0xff000000);
+#endif
+
+  SDL_LockSurface(image);
+  
+  unsigned char* buffer = static_cast<unsigned char*>(image->pixels);
+
+  for(int y = 0; y < image->h; ++y)
+    for(int x = 0; x < image->w; ++x)
+      {
+        if (tilemap->get_pixel(x, y))
+          {
+            buffer[image->pitch * y + 4*x + 0] = 255;
+            buffer[image->pitch * y + 4*x + 1] = 255;
+            buffer[image->pitch * y + 4*x + 2] = 255;
+            buffer[image->pitch * y + 4*x + 3] = 255;
+          }
+        else
+          {
+            buffer[image->pitch * y + 4*x + 0] = 0;
+            buffer[image->pitch * y + 4*x + 1] = 0;
+            buffer[image->pitch * y + 4*x + 2] = 0;
+            buffer[image->pitch * y + 4*x + 3] = 255;
+          }
+      }
+
+  surface = Surface(tilemap->get_width(), tilemap->get_height());
+  surface.get_texture().set_filter(GL_NEAREST);
+  surface.get_texture().put(image, 0, 0);
+
+  SDL_UnlockSurface(image);
+
+  SDL_FreeSurface(image);
+}
+
+Automap::~Automap()
+{
+}
+
+void
+Automap::draw()
+{
+  surface.draw(SurfaceDrawingParameters()
+               .set_pos(Vector(rect.left, rect.top) + pos)
+               .set_color(Color(1.0f, 1.0f, 1.0f, is_active() ? 0.8f : 0.5f))
+               .set_scale(zoom));
+}
+
+void
+Automap::update(float delta, const Controller& controller)
+{
+  if (controller.get_button_state(AIM_BUTTON))
+    {
+      if (controller.get_axis_state(Y_AXIS) < 0)
+        zoom /= 1.0f + (0.5f * fabsf(controller.get_axis_state(Y_AXIS))) * delta;
+      else if (controller.get_axis_state(Y_AXIS) > 0)
+        zoom *= 1.0f + (0.5f * controller.get_axis_state(Y_AXIS)) * delta;
+    }
+  else
+    {
+      pos.x += controller.get_axis_state(X_AXIS) * delta * 100.0f;
+      pos.y += controller.get_axis_state(Y_AXIS) * delta * 100.0f;
+    }
+
+  for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT)
+        {
+          if (i->button.name == OK_BUTTON)
+            {
+            }
+          else if (i->button.name == CANCEL_BUTTON)
+            {
+              set_active(false);
+            }
+        }
+    }
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/automap.hpp
===================================================================
--- trunk/src/gui/automap.hpp	2005-08-21 16:00:28 UTC (rev 995)
+++ trunk/src/gui/automap.hpp	2005-08-21 18:35:25 UTC (rev 996)
@@ -0,0 +1,58 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_AUTOMAP_HPP
+#define HEADER_WINDSTILLE_GUI_AUTOMAP_HPP
+
+#include "glutil/surface.hpp"
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class Automap : public Component
+{
+private:
+  Surface surface;
+  Vector  pos;
+  float   zoom;
+
+public:
+  Automap(const Rectf& rect, Component* parent);
+  ~Automap();
+
+  void draw();
+  void update(float delta, const Controller& controller);
+
+private:
+  Automap (const Automap&);
+  Automap& operator= (const Automap&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-21 16:00:28 UTC (rev 995)
+++ trunk/src/gui/gui_manager.cpp	2005-08-21 18:35:25 UTC (rev 996)
@@ -29,6 +29,7 @@
 #include "screen_manager.hpp"
 #include "grid_component.hpp"
 #include "tab_component.hpp"
+#include "automap.hpp"
 #include "gui_manager.hpp"
 
 namespace GUI {
@@ -57,8 +58,8 @@
   grid->pack(new Button("0",  grid), 1, 3);
   grid->pack(new Button("Ok", grid), 2, 3);
 
-  tab->pack("My Button",   new Button("Map Test", tab));
-  tab->pack("DaGrid", grid);
+  tab->pack("Auto Map",  new Automap(Rectf(100, 130, 700, 500), tab));
+  tab->pack("Grid Test", grid);
 
   root->set_child(tab);
 }



From grumbel at berlios.de  Sun Aug 21 21:36:03 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 21:36:03 +0200
Subject: [Windstille-commit] r997 - trunk/data/blender/monster
Message-ID: <200508211936.j7LJa3Je002437@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 21:36:02 +0200 (Sun, 21 Aug 2005)
New Revision: 997

Modified:
   trunk/data/blender/monster/v2.blend
Log:
- updated monster blend

Modified: trunk/data/blender/monster/v2.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 21 22:13:01 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 22:13:01 +0200
Subject: [Windstille-commit] r998 - trunk/data/blender/monster
Message-ID: <200508212013.j7LKD1fc005353@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 22:12:59 +0200 (Sun, 21 Aug 2005)
New Revision: 998

Modified:
   trunk/data/blender/monster/v2.blend
Log:
- added low polygon model

Modified: trunk/data/blender/monster/v2.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 21 22:50:23 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 22:50:23 +0200
Subject: [Windstille-commit] r999 - trunk/data/images
Message-ID: <200508212050.j7LKoNQJ008858@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 22:50:22 +0200 (Sun, 21 Aug 2005)
New Revision: 999

Added:
   trunk/data/images/laserpointer_light.sprite
Log:


Added: trunk/data/images/laserpointer_light.sprite
===================================================================
--- trunk/data/images/laserpointer_light.sprite	2005-08-21 20:12:59 UTC (rev 998)
+++ trunk/data/images/laserpointer_light.sprite	2005-08-21 20:50:22 UTC (rev 999)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "laserpointer_light.png")
+    (offset -32 -32)
+  )
+)



From grumbel at berlios.de  Sun Aug 21 23:09:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 23:09:53 +0200
Subject: [Windstille-commit] r1000 - trunk/data/images
Message-ID: <200508212109.j7LL9roA011033@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 23:09:52 +0200 (Sun, 21 Aug 2005)
New Revision: 1000

Added:
   trunk/data/images/laserpointer_light.png
Log:


Added: trunk/data/images/laserpointer_light.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/laserpointer_light.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Sun Aug 21 23:12:22 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 21 Aug 2005 23:12:22 +0200
Subject: [Windstille-commit] r1001 - trunk/data/3dsprites
Message-ID: <200508212112.j7LLCMFM011216@sheep.berlios.de>

Author: grumbel
Date: 2005-08-21 23:12:21 +0200 (Sun, 21 Aug 2005)
New Revision: 1001

Added:
   trunk/data/3dsprites/monster.wsprite
   trunk/data/3dsprites/monstertexture.png
Log:
- added static monster

Added: trunk/data/3dsprites/monster.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/monster.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/3dsprites/monstertexture.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/3dsprites/monstertexture.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Mon Aug 22 00:47:24 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 00:47:24 +0200
Subject: [Windstille-commit] r1002 - trunk/src/gui
Message-ID: <200508212247.j7LMlON4010174@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 00:47:16 +0200 (Mon, 22 Aug 2005)
New Revision: 1002

Added:
   trunk/src/gui/list_view.cpp
   trunk/src/gui/list_view.hpp
Modified:
   trunk/src/gui/Jamfile
Log:
- added listview (just api, no code)

Modified: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-08-21 21:12:21 UTC (rev 1001)
+++ trunk/src/gui/Jamfile	2005-08-21 22:47:16 UTC (rev 1002)
@@ -11,6 +11,8 @@
   gui_manager.cpp
   grid_component.hpp
   grid_component.cpp
+  list_view.hpp
+  list_view.cpp
   tab_component.hpp
   tab_component.cpp
   root_component.hpp

Added: trunk/src/gui/list_view.cpp
===================================================================
--- trunk/src/gui/list_view.cpp	2005-08-21 21:12:21 UTC (rev 1001)
+++ trunk/src/gui/list_view.cpp	2005-08-21 22:47:16 UTC (rev 1002)
@@ -0,0 +1,66 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "list_view.hpp"
+
+namespace GUI {
+
+ListView::ListView(const Rectf& rect, Component* parent)
+  : Component(rect, parent)
+{
+  current_item = 0;
+}
+
+ListView::~ListView()
+{
+}
+
+void
+ListView::draw()
+{
+  
+}
+
+void
+ListView::update(float delta, const Controller& controller)
+{
+  
+}
+
+void
+ListView::add_column(const std::string& name)
+{
+  headers.push_back(name);
+}
+
+void
+ListView::add_item(const Item& item)
+{
+  items.push_back(item);
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/list_view.hpp
===================================================================
--- trunk/src/gui/list_view.hpp	2005-08-21 21:12:21 UTC (rev 1001)
+++ trunk/src/gui/list_view.hpp	2005-08-21 22:47:16 UTC (rev 1002)
@@ -0,0 +1,64 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_LIST_VIEW_HPP
+#define HEADER_WINDSTILLE_GUI_LIST_VIEW_HPP
+
+#include <vector>
+#include <string>
+#include "component.hpp"
+
+namespace GUI { 
+
+/** */
+class ListView : public Component
+{
+private:
+  typedef std::vector<std::string> Item;
+  typedef std::vector<Item> Items;
+  Item    headers;
+  Items   items;
+  int     current_item;
+
+public:
+  ListView(const Rectf& rect, Component* parent);
+  ~ListView();
+  
+  void draw();
+  void update(float delta, const Controller& controller);
+
+  void add_column(const std::string& name);
+  void add_item(const Item& item);
+  
+private:
+  ListView (const ListView&);
+  ListView& operator= (const ListView&);
+};
+
+} // namespace GUI 
+
+#endif
+
+/* EOF */



From grumbel at berlios.de  Mon Aug 22 01:19:48 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 01:19:48 +0200
Subject: [Windstille-commit] r1003 - trunk/src/gui
Message-ID: <200508212319.j7LNJmxd027383@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 01:19:06 +0200 (Mon, 22 Aug 2005)
New Revision: 1003

Modified:
   trunk/src/gui/automap.cpp
   trunk/src/gui/button.cpp
   trunk/src/gui/component.hpp
   trunk/src/gui/grid_component.cpp
   trunk/src/gui/root_component.cpp
   trunk/src/gui/root_component.hpp
   trunk/src/gui/tab_component.cpp
Log:
- fixed some input handling bugs

Modified: trunk/src/gui/automap.cpp
===================================================================
--- trunk/src/gui/automap.cpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/automap.cpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -111,7 +111,7 @@
 
   for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
     {
-      if (i->type == BUTTON_EVENT)
+      if (i->type == BUTTON_EVENT && i->button.down)
         {
           if (i->button.name == OK_BUTTON)
             {

Modified: trunk/src/gui/button.cpp
===================================================================
--- trunk/src/gui/button.cpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/button.cpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -57,7 +57,7 @@
 {
   for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
     {
-      if (i->type == BUTTON_EVENT)
+      if (i->type == BUTTON_EVENT && i->button.down)
         {
           if (i->button.name == OK_BUTTON)
             {

Modified: trunk/src/gui/component.hpp
===================================================================
--- trunk/src/gui/component.hpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/component.hpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -44,8 +44,8 @@
   Component(const Rectf& rect, Component* parent);
   virtual ~Component();
   
-  bool is_active() const;
-  void set_active(bool a);
+  virtual bool is_active() const;
+  virtual void set_active(bool a);
 
   virtual void on_activation() {}
   virtual void draw() =0;

Modified: trunk/src/gui/grid_component.cpp
===================================================================
--- trunk/src/gui/grid_component.cpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/grid_component.cpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -79,7 +79,7 @@
 
   for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
     {
-      if (i->type == BUTTON_EVENT)
+      if (i->type == BUTTON_EVENT && i->button.down)
         {
           if (i->button.name == OK_BUTTON)
             {

Modified: trunk/src/gui/root_component.cpp
===================================================================
--- trunk/src/gui/root_component.cpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/root_component.cpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -42,6 +42,7 @@
 RootComponent::set_child(Component* child_)
 {
   child = child_;
+  child->set_active(true);
 }
 
 void
@@ -56,6 +57,12 @@
   child->update(delta, controller);
 }
 
+bool
+RootComponent::is_active() const
+{
+  return child->is_active();
+}
+
 } // namespace GUI
 
 /* EOF */

Modified: trunk/src/gui/root_component.hpp
===================================================================
--- trunk/src/gui/root_component.hpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/root_component.hpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -45,6 +45,7 @@
 
   void set_child(Component* child);
 
+  bool is_active() const;
 private:
   RootComponent (const RootComponent&);
   RootComponent& operator= (const RootComponent&);

Modified: trunk/src/gui/tab_component.cpp
===================================================================
--- trunk/src/gui/tab_component.cpp	2005-08-21 22:47:16 UTC (rev 1002)
+++ trunk/src/gui/tab_component.cpp	2005-08-21 23:19:06 UTC (rev 1003)
@@ -85,14 +85,16 @@
 
       for(InputEventLst::const_iterator i = controller.get_events().begin(); i != controller.get_events().end(); ++i) 
         {
-          if (i->type == BUTTON_EVENT)
+          if (i->type == BUTTON_EVENT && i->button.down)
             {
               if (i->button.name == OK_BUTTON)
                 {
                   tabs[current_tab].component->set_active(true);
                 }
               else if (i->button.name == CANCEL_BUTTON)
-                {            
+                {
+                  tabs[current_tab].component->set_active(false);
+                  set_active(false);
                 }
             }
           else if (i->type == AXIS_EVENT)



From grumbel at berlios.de  Mon Aug 22 01:26:57 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 01:26:57 +0200
Subject: [Windstille-commit] r1004 - trunk/src
Message-ID: <200508212326.j7LNQvNE002517@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 01:26:42 +0200 (Mon, 22 Aug 2005)
New Revision: 1004

Modified:
   trunk/src/laser_pointer.cpp
Log:
- little bug fix

Modified: trunk/src/laser_pointer.cpp
===================================================================
--- trunk/src/laser_pointer.cpp	2005-08-21 23:19:06 UTC (rev 1003)
+++ trunk/src/laser_pointer.cpp	2005-08-21 23:26:42 UTC (rev 1004)
@@ -40,6 +40,7 @@
   noise.set_filter(GL_LINEAR);
   
   progress = 0.0f;
+  angle = 0.0f;
 }
 
 LaserPointer::~LaserPointer()



From grumbel at berlios.de  Mon Aug 22 01:56:18 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 01:56:18 +0200
Subject: [Windstille-commit] r1005 - trunk/src/gui
Message-ID: <200508212356.j7LNuIOI011650@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 01:56:08 +0200 (Mon, 22 Aug 2005)
New Revision: 1005

Added:
   trunk/src/gui/text_view.cpp
   trunk/src/gui/text_view.hpp
Modified:
   trunk/src/gui/Jamfile
Log:
- added textview, again only empty class placeholder

Modified: trunk/src/gui/Jamfile
===================================================================
--- trunk/src/gui/Jamfile	2005-08-21 23:26:42 UTC (rev 1004)
+++ trunk/src/gui/Jamfile	2005-08-21 23:56:08 UTC (rev 1005)
@@ -15,6 +15,8 @@
   list_view.cpp
   tab_component.hpp
   tab_component.cpp
+  text_view.hpp
+  text_view.cpp
   root_component.hpp
   root_component.cpp
 ;

Added: trunk/src/gui/text_view.cpp
===================================================================
--- trunk/src/gui/text_view.cpp	2005-08-21 23:26:42 UTC (rev 1004)
+++ trunk/src/gui/text_view.cpp	2005-08-21 23:56:08 UTC (rev 1005)
@@ -0,0 +1,56 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "text_view.hpp"
+
+namespace GUI {
+
+TextView::TextView(const Rectf& rect, Component* component)
+  : Component(rect, component)
+{
+}
+
+TextView::~TextView()
+{
+}
+  
+void
+TextView::draw()
+{
+}
+
+void
+TextView::update(float delta, const Controller& controller)
+{
+}
+
+void
+TextView::set_text(const std::string& text)
+{
+}
+
+} // namespace GUI
+
+/* EOF */

Added: trunk/src/gui/text_view.hpp
===================================================================
--- trunk/src/gui/text_view.hpp	2005-08-21 23:26:42 UTC (rev 1004)
+++ trunk/src/gui/text_view.hpp	2005-08-21 23:56:08 UTC (rev 1005)
@@ -0,0 +1,55 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_GUI_TEXT_VIEW_HPP
+#define HEADER_WINDSTILLE_GUI_TEXT_VIEW_HPP
+
+#include "component.hpp"
+
+namespace GUI {
+
+/** */
+class TextView : public Component
+{
+private:
+public:
+  TextView(const Rectf& rect, Component* component);
+  ~TextView();
+  
+  void draw();
+  void update(float delta, const Controller& controller);
+
+  void set_text(const std::string& text);
+  
+private:
+  TextView (const TextView&);
+  TextView& operator= (const TextView&);
+};
+
+} // namespace GUI
+
+#endif
+
+/* EOF */



From grumbel at berlios.de  Mon Aug 22 02:57:32 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 02:57:32 +0200
Subject: [Windstille-commit] r1006 - in trunk/src: . gui
Message-ID: <200508220057.j7M0vWal024635@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 02:57:12 +0200 (Mon, 22 Aug 2005)
New Revision: 1006

Modified:
   trunk/src/gui/component.hpp
   trunk/src/gui/gui_manager.cpp
   trunk/src/gui/text_view.cpp
   trunk/src/gui/text_view.hpp
   trunk/src/text_area.cpp
   trunk/src/text_area.hpp
Log:
- implemented TextView (no scrolling yet)

Modified: trunk/src/gui/component.hpp
===================================================================
--- trunk/src/gui/component.hpp	2005-08-21 23:56:08 UTC (rev 1005)
+++ trunk/src/gui/component.hpp	2005-08-22 00:57:12 UTC (rev 1006)
@@ -50,10 +50,10 @@
   virtual void on_activation() {}
   virtual void draw() =0;
   virtual void update(float delta, const Controller& controller) =0;
+  
+  virtual Rectf get_screen_rect() const;
+  virtual void  set_screen_rect(const Rectf& rect);
 
-  Rectf get_screen_rect() const;
-  void  set_screen_rect(const Rectf& rect);
-
 private:
   Component (const Component&);
   Component& operator= (const Component&);

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-21 23:56:08 UTC (rev 1005)
+++ trunk/src/gui/gui_manager.cpp	2005-08-22 00:57:12 UTC (rev 1006)
@@ -29,6 +29,7 @@
 #include "screen_manager.hpp"
 #include "grid_component.hpp"
 #include "tab_component.hpp"
+#include "text_view.hpp"
 #include "automap.hpp"
 #include "gui_manager.hpp"
 
@@ -47,7 +48,10 @@
   grid->pack(new Button("3", grid), 2, 0);
 
   grid->pack(new Button("4", grid), 0, 1);
-  grid->pack(new Button("5", grid), 1, 1, 2, 2);
+  //grid->pack(new Button("5", grid), 1, 1, 2, 2);
+  TextView* text_view = new TextView(Rectf(), grid);
+  grid->pack(text_view, 1, 1, 2, 2);
+
   //grid->pack(new Button("6", grid), 2, 1);
 
   grid->pack(new Button("7", grid), 0, 2, 1, 2);
@@ -62,6 +66,10 @@
   tab->pack("Grid Test", grid);
 
   root->set_child(tab);
+  text_view->set_text("Hello World\n<large>Blabla</large> more textt and more and"
+                      "more for testing all for testing even more and more blabla blabla"
+                      "more for testing all for testing even more and more blabla blabla"
+                      "blabla blabla blabltest und ende.");
 }
 
 GUIManager::~GUIManager()

Modified: trunk/src/gui/text_view.cpp
===================================================================
--- trunk/src/gui/text_view.cpp	2005-08-21 23:56:08 UTC (rev 1005)
+++ trunk/src/gui/text_view.cpp	2005-08-22 00:57:12 UTC (rev 1006)
@@ -28,7 +28,8 @@
 namespace GUI {
 
 TextView::TextView(const Rectf& rect, Component* component)
-  : Component(rect, component)
+  : Component(rect, component),
+    text_area(rect, false)
 {
 }
 
@@ -39,16 +40,26 @@
 void
 TextView::draw()
 {
+  text_area.draw();
 }
 
 void
 TextView::update(float delta, const Controller& controller)
 {
+  text_area.update(delta);
 }
 
 void
+TextView::set_screen_rect(const Rectf& rect)
+{
+  Component::set_screen_rect(rect);
+  text_area.set_rect(rect);
+}
+
+void
 TextView::set_text(const std::string& text)
 {
+  text_area.set_text(text);
 }
 
 } // namespace GUI

Modified: trunk/src/gui/text_view.hpp
===================================================================
--- trunk/src/gui/text_view.hpp	2005-08-21 23:56:08 UTC (rev 1005)
+++ trunk/src/gui/text_view.hpp	2005-08-22 00:57:12 UTC (rev 1006)
@@ -26,6 +26,7 @@
 #ifndef HEADER_WINDSTILLE_GUI_TEXT_VIEW_HPP
 #define HEADER_WINDSTILLE_GUI_TEXT_VIEW_HPP
 
+#include "text_area.hpp"
 #include "component.hpp"
 
 namespace GUI {
@@ -34,6 +35,8 @@
 class TextView : public Component
 {
 private:
+  TextArea text_area;
+
 public:
   TextView(const Rectf& rect, Component* component);
   ~TextView();
@@ -41,6 +44,7 @@
   void draw();
   void update(float delta, const Controller& controller);
 
+  void  set_screen_rect(const Rectf& rect);
   void set_text(const std::string& text);
   
 private:

Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-21 23:56:08 UTC (rev 1005)
+++ trunk/src/text_area.cpp	2005-08-22 00:57:12 UTC (rev 1006)
@@ -27,6 +27,7 @@
 #include "ttf_font.hpp"
 #include "text_area.hpp"
 #include "baby_xml.hpp"
+#include "fonts.hpp"
 #include "text_area.hpp"
 
 struct TextAreaCommand 
@@ -56,7 +57,7 @@
 TextArea::TextArea(const Rectf& rect, bool letter_by_letter)
   : impl(new TextAreaImpl)
 {
-  impl->font = 0;
+  impl->font = Fonts::ttfdialog;
   impl->rect    = rect;
   // FIXME: freetype might provide info for vspacing, not sure
   impl->v_space = 2;
@@ -71,6 +72,12 @@
 }
 
 void
+TextArea::set_rect(const Rectf& rect)
+{
+  impl->rect = rect;
+}
+
+void
 TextArea::set_text(const std::string& str)
 {
   impl->commands.clear();

Modified: trunk/src/text_area.hpp
===================================================================
--- trunk/src/text_area.hpp	2005-08-21 23:56:08 UTC (rev 1005)
+++ trunk/src/text_area.hpp	2005-08-22 00:57:12 UTC (rev 1006)
@@ -42,6 +42,8 @@
   TextArea(const Rectf& rect, bool letter_by_letter);
   ~TextArea();
 
+  void set_rect(const Rectf& rect);
+
   /** Sets the text to be displayed in the text box */
   void set_text(const std::string& str);
 



From grumbel at berlios.de  Mon Aug 22 13:14:04 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 13:14:04 +0200
Subject: [Windstille-commit] r1007 - trunk/src/gui
Message-ID: <200508221114.j7MBE4Sa013019@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 13:13:45 +0200 (Mon, 22 Aug 2005)
New Revision: 1007

Modified:
   trunk/src/gui/gui_manager.cpp
   trunk/src/gui/list_view.cpp
   trunk/src/gui/list_view.hpp
Log:
- made listview basically working (spacing wrong, no clippping, etc)

Modified: trunk/src/gui/gui_manager.cpp
===================================================================
--- trunk/src/gui/gui_manager.cpp	2005-08-22 00:57:12 UTC (rev 1006)
+++ trunk/src/gui/gui_manager.cpp	2005-08-22 11:13:45 UTC (rev 1007)
@@ -29,6 +29,7 @@
 #include "screen_manager.hpp"
 #include "grid_component.hpp"
 #include "tab_component.hpp"
+#include "list_view.hpp"
 #include "text_view.hpp"
 #include "automap.hpp"
 #include "gui_manager.hpp"
@@ -65,11 +66,22 @@
   tab->pack("Auto Map",  new Automap(Rectf(100, 130, 700, 500), tab));
   tab->pack("Grid Test", grid);
 
+  ListView* list_view = new ListView(Rectf(), tab);
+  list_view->add_column("Date");
+  list_view->add_column("Name");
+  list_view->add_column("Subject");
+
+  list_view->add_item(ListView::Item("2005-10-08", "John Doh", "Re: Buying a goldmine"));
+  list_view->add_item(ListView::Item("2005-13-08", "Jane Doh", "Re: What the f***"));
+  list_view->add_item(ListView::Item("2005-13-09", "Testo Test", "Testing Email"));
+
+  tab->pack("ListView", list_view);
+
   root->set_child(tab);
   text_view->set_text("Hello World\n<large>Blabla</large> more textt and more and"
                       "more for testing all for testing even more and more blabla blabla"
                       "more for testing all for testing even more and more blabla blabla"
-                      "blabla blabla blabltest und ende.");
+                      "blabla blabla blabltest ende.");
 }
 
 GUIManager::~GUIManager()

Modified: trunk/src/gui/list_view.cpp
===================================================================
--- trunk/src/gui/list_view.cpp	2005-08-22 00:57:12 UTC (rev 1006)
+++ trunk/src/gui/list_view.cpp	2005-08-22 11:13:45 UTC (rev 1007)
@@ -23,6 +23,9 @@
 **  02111-1307, USA.
 */
 
+#include "display/display.hpp"
+#include "input/controller.hpp"
+#include "fonts.hpp"
 #include "list_view.hpp"
 
 namespace GUI {
@@ -40,19 +43,95 @@
 void
 ListView::draw()
 {
-  
+  TTFFont* font = Fonts::ttfdialog;
+
+  float x = rect.left;
+  float y = rect.top + font->get_height();
+  float padding = 10;
+
+  for(int i = 0; i < int(columns.size()); ++i)
+    {
+      // FIXME: Poor mans outline effect
+      font->draw_center(x + columns[i].width/2 + 1, y - 1, columns[i].title);
+      font->draw_center(x + columns[i].width/2 - 1, y - 1, columns[i].title);
+      font->draw_center(x + columns[i].width/2 + 1, y + 1, columns[i].title);
+      font->draw_center(x + columns[i].width/2 - 1, y + 1, columns[i].title);
+      font->draw_center(x + columns[i].width/2, y, columns[i].title, Color(0.0f, 0.0f, 0.0f));
+      x += columns[i].width;
+    }
+
+  for(int j = 0; j < int(items.size()); ++j)
+    {
+      x = rect.left;
+
+      if (j == current_item)
+        Display::fill_rect(Rectf(x, y,
+                                 rect.right, y + font->get_height()), 
+                           is_active() ? Color(0.5f, 0.5f, 1.0f, 0.8f) : Color(0.5f, 0.5f, 1.0f, 0.3f));
+
+      y += font->get_height();
+          
+      for(int i = 0; i < int(items[j].columns.size()) && i < int(columns.size()); ++i)
+        {
+          font->draw(x + padding, y, items[j].columns[i]);
+            
+          x += columns[i].width;
+        }
+    }
 }
 
 void
 ListView::update(float delta, const Controller& controller)
 {
-  
+   for(InputEventLst::const_iterator i = controller.get_events().begin(); 
+       i != controller.get_events().end(); ++i) 
+    {
+      if (i->type == BUTTON_EVENT && i->button.down)
+        {
+          if (i->button.name == OK_BUTTON)
+            {
+              // do something with item (scripting callback)
+            }
+          else if (i->button.name == CANCEL_BUTTON)
+            {
+              set_active(false);
+            }
+        }
+      else if (i->type == AXIS_EVENT)
+        {
+          if (i->axis.name == Y_AXIS)
+            {
+              if (i->axis.pos > 0)
+                {
+                  if (current_item == int(items.size()) - 1)
+                    current_item = 0;
+                  else
+                    current_item += 1;
+                }
+              else if (i->axis.pos < 0)
+                {
+                  if (current_item == 0)
+                    current_item = items.size() - 1;
+                  else
+                    current_item -= 1;
+                }
+            }
+        }
+    }
 }
 
 void
-ListView::add_column(const std::string& name)
+ListView::add_column(const std::string& title, float width)
 {
-  headers.push_back(name);
+  Column column;
+
+  column.title = title;
+  if (width == -1)
+    column.width = 150;
+  else
+    column.width = width;
+
+  columns.push_back(column);
 }
 
 void

Modified: trunk/src/gui/list_view.hpp
===================================================================
--- trunk/src/gui/list_view.hpp	2005-08-22 00:57:12 UTC (rev 1006)
+++ trunk/src/gui/list_view.hpp	2005-08-22 11:13:45 UTC (rev 1007)
@@ -36,9 +36,29 @@
 class ListView : public Component
 {
 private:
-  typedef std::vector<std::string> Item;
+  struct Column {
+    std::string title;
+    float       width;
+  };
+  
+public:
+  struct Item {
+    std::vector<std::string> columns;
+
+    Item(const std::string& el1, 
+         const std::string& el2,
+         const std::string& el3)
+    {
+      columns.push_back(el1);
+      columns.push_back(el2);
+      columns.push_back(el3);
+    }
+  };
+
+private:
   typedef std::vector<Item> Items;
-  Item    headers;
+  typedef std::vector<Column> Columns;
+  Columns columns;
   Items   items;
   int     current_item;
 
@@ -49,7 +69,8 @@
   void draw();
   void update(float delta, const Controller& controller);
 
-  void add_column(const std::string& name);
+  /** if width is -1 it will be automatically spaced */
+  void add_column(const std::string& name, float width = -1);
   void add_item(const Item& item);
   
 private:



From grumbel at berlios.de  Mon Aug 22 14:57:51 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 14:57:51 +0200
Subject: [Windstille-commit] r1008 - trunk/src
Message-ID: <200508221257.j7MCvpMb010596@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 14:57:49 +0200 (Mon, 22 Aug 2005)
New Revision: 1008

Added:
   trunk/src/border_font_effect.cpp
   trunk/src/border_font_effect.hpp
   trunk/src/font_effect.hpp
Modified:
   trunk/src/Jamfile
   trunk/src/blitter.cpp
   trunk/src/blitter.hpp
   trunk/src/fonts.cpp
   trunk/src/ttf_font.cpp
   trunk/src/ttf_font.hpp
Log:
- added font effects API, could need a little bit more

Modified: trunk/src/Jamfile
===================================================================
--- trunk/src/Jamfile	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/Jamfile	2005-08-22 12:57:49 UTC (rev 1008)
@@ -27,6 +27,8 @@
         bomb.hpp
 	box.cpp
  	box.hpp
+        border_font_effect.hpp
+        border_font_effect.cpp
         camera.cpp
         camera.hpp
         character.cpp
@@ -51,6 +53,7 @@
         entity.hpp
         elevator.hpp
         elevator.cpp
+        font_effect.hpp
         inventory.cpp
         inventory.hpp
         ttf_font.cpp

Modified: trunk/src/blitter.cpp
===================================================================
--- trunk/src/blitter.cpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/blitter.cpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -53,4 +53,34 @@
   SDL_UnlockSurface(surface);
 }
 
+void 
+blit_ftbitmap(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos)
+{
+  SDL_LockSurface(target);
+  
+  int start_x = std::max(0, -x_pos);
+  int start_y = std::max(0, -y_pos);
+  
+  int end_x = std::min(brush.width, target->w  - x_pos);
+  int end_y = std::min(brush.rows,  target->h - y_pos);
+
+  unsigned char* target_buf = static_cast<unsigned char*>(target->pixels);
+
+  int target_pitch = target->pitch;
+
+  for (int y = start_y; y < end_y; ++y)
+    for (int x = start_x; x < end_x; ++x)
+      {
+        int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
+        int brush_pos  = y * brush.pitch + x;
+            
+        target_buf[target_pos + 0] = 255;
+        target_buf[target_pos + 1] = 255;
+        target_buf[target_pos + 2] = 255;
+        target_buf[target_pos + 3] = brush.buffer[brush_pos];
+      }
+    
+  SDL_UnlockSurface(target);
+}
+
 /* EOF */

Modified: trunk/src/blitter.hpp
===================================================================
--- trunk/src/blitter.hpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/blitter.hpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -22,6 +22,10 @@
 
 #include <SDL.h>
 
+#include <ft2build.h>
+#include FT_FREETYPE_H
+#include FT_GLYPH_H
+
 /** Duplicate all the edge pixel of the given rectangle to the outside
     of the rectangle, thus creating a border around the given
     rectangle, this is needed for OpenGL textures to avoid filtering
@@ -33,6 +37,7 @@
     X X X X X    4 4 5 6 6
 */
 void generate_border(SDL_Surface* surface, int x_pos, int y_pos, int width, int height);
+void blit_ftbitmap(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos);
 
 #endif
 

Added: trunk/src/border_font_effect.cpp
===================================================================
--- trunk/src/border_font_effect.cpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/border_font_effect.cpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -0,0 +1,87 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include <algorithm>
+#include "border_font_effect.hpp"
+
+BorderFontEffect::BorderFontEffect(int size_)
+  : size(size_)
+{
+}
+
+BorderFontEffect::~BorderFontEffect()
+{
+}
+  
+int
+BorderFontEffect::get_height(int orig_font_size) const
+{
+  return orig_font_size + 2*size ;
+}
+  
+int
+BorderFontEffect::get_glyph_width(int orig_glyph_width) const
+{
+  return orig_glyph_width + 2*size ;
+}
+
+int
+BorderFontEffect::get_glyph_height(int orig_glyph_height) const
+{
+  return orig_glyph_height + 2*size ;
+}
+  
+void
+BorderFontEffect::blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const
+{
+  SDL_LockSurface(target);
+  
+  int start_x = std::max(0, -x_pos);
+  int start_y = std::max(0, -y_pos);
+  
+  int end_x = std::min(brush.width, target->w  - x_pos);
+  int end_y = std::min(brush.rows,  target->h - y_pos);
+
+  unsigned char* target_buf = static_cast<unsigned char*>(target->pixels);
+
+  int target_pitch = target->pitch;
+
+  for (int y = start_y; y < end_y; ++y)
+    for (int x = start_x; x < end_x; ++x)
+      {
+        int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
+        int brush_pos  = y * brush.pitch + x;
+            
+        target_buf[target_pos + 0] = int(float(y)/brush.width * 255);
+        target_buf[target_pos + 1] = int(float(y)/brush.width * 255);
+        target_buf[target_pos + 2] = 255;
+        target_buf[target_pos + 3] = brush.buffer[brush_pos];
+      }
+    
+  SDL_UnlockSurface(target);
+
+}
+
+/* EOF */

Added: trunk/src/border_font_effect.hpp
===================================================================
--- trunk/src/border_font_effect.hpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/border_font_effect.hpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -0,0 +1,54 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_BORDER_FONT_EFFECT_HPP
+#define HEADER_WINDSTILLE_BORDER_FONT_EFFECT_HPP
+
+#include "font_effect.hpp"
+
+/** */
+class BorderFontEffect : public FontEffect
+{
+private:
+  int size;
+public:
+  BorderFontEffect(int size);
+  ~BorderFontEffect();
+  
+  int get_height(int orig_font_size) const;
+  
+  int get_glyph_width(int orig_glyph_width) const;
+  int get_glyph_height(int orig_glyph_height) const;
+  
+  void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const;
+
+private:
+  BorderFontEffect (const BorderFontEffect&);
+  BorderFontEffect& operator= (const BorderFontEffect&);
+};
+
+#endif
+
+/* EOF */

Added: trunk/src/font_effect.hpp
===================================================================
--- trunk/src/font_effect.hpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/font_effect.hpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -0,0 +1,57 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_FONT_EFFECT_HPP
+#define HEADER_FONT_EFFECT_HPP
+
+#include <SDL.h>
+#include <ft2build.h>
+#include FT_FREETYPE_H
+#include FT_GLYPH_H
+
+/** */
+class FontEffect
+{
+private:
+public:
+  FontEffect() {}
+  virtual ~FontEffect() {}
+  
+  /** Returns the new height of the font after its transformation */
+  virtual int get_height(int orig_font_size) const =0;
+
+  virtual int get_glyph_width(int orig_glyph_width) const =0;
+  virtual int get_glyph_height(int orig_glyph_height) const =0;
+
+  virtual void blit(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos) const =0;
+
+private:
+  FontEffect (const FontEffect&);
+  FontEffect& operator= (const FontEffect&);
+};
+
+#endif
+
+/* EOF */

Modified: trunk/src/fonts.cpp
===================================================================
--- trunk/src/fonts.cpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/fonts.cpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -18,6 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include "globals.hpp"
+#include "border_font_effect.hpp"
 #include "fonts.hpp"
 
 TTFFont* Fonts::ttffont = 0;
@@ -27,8 +28,12 @@
 void
 Fonts::init()
 {
-  ttffont = new TTFFont("fonts/VeraMono.ttf", 12);
-  ttfdialog  = new TTFFont("fonts/Vera.ttf", 20);
+  BorderFontEffect* border_effect = new BorderFontEffect(1);
+
+  ttffont   = new TTFFont("fonts/VeraMono.ttf", 12);
+  ttfdialog = new TTFFont("fonts/Vera.ttf", 20, border_effect);
+
+  delete border_effect;
 }
 
 void

Modified: trunk/src/ttf_font.cpp
===================================================================
--- trunk/src/ttf_font.cpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/ttf_font.cpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -36,6 +36,7 @@
 #include "glutil/texture_manager.hpp"
 #include "blitter.hpp"
 #include "ttf_font.hpp"
+#include "font_effect.hpp"
 #include "util.hpp"
 
 TTFCharacter::TTFCharacter(const Rect& pos_,
@@ -57,50 +58,25 @@
       256 characters, no full unicode */
   std::vector<TTFCharacter> characters;
 
+  /** The original size of the font in pixels */
   int size;
 
+  /** The amount of pixels to advance in y direction after a finished
+      line, this can be transformed by FontEffect */
+  int height;
+
   /** OpenGL Texture which holds all the characters */
   Texture texture;
 };
 
 FT_Library TTFFontImpl::library;
 
-void 
-blit_ftbitmap(SDL_Surface* target, const FT_Bitmap& brush, int x_pos, int y_pos)
-{
-  SDL_LockSurface(target);
-  
-  int start_x = std::max(0, -x_pos);
-  int start_y = std::max(0, -y_pos);
-  
-  int end_x = std::min(brush.width, target->w  - x_pos);
-  int end_y = std::min(brush.rows,  target->h - y_pos);
-
-  unsigned char* target_buf = static_cast<unsigned char*>(target->pixels);
-
-  int target_pitch = target->pitch;
-
-  for (int y = start_y; y < end_y; ++y)
-    for (int x = start_x; x < end_x; ++x)
-      {
-        int target_pos = (y + y_pos) * target_pitch + 4*(x + x_pos);
-        int brush_pos  = y * brush.pitch + x;
-            
-        target_buf[target_pos + 0] = 255;
-        target_buf[target_pos + 1] = 255;
-        target_buf[target_pos + 2] = 255;
-        target_buf[target_pos + 3] = brush.buffer[brush_pos];
-      }
-    
-  SDL_UnlockSurface(target);
-}
-
-TTFFont::TTFFont(const std::string& filename, int size)
+TTFFont::TTFFont(const std::string& filename, int size_, FontEffect* effect)
   : impl(new TTFFontImpl())
 {
-  assert(size > 0);
+  assert(size_ > 0);
 
-  impl->size = size;
+  impl->size = size_;
 
   IFileStream fin(filename);
   std::istreambuf_iterator<char> first(fin), last;
@@ -114,7 +90,7 @@
       throw std::runtime_error("Couldn't load font: '" + filename + "'");
     }
   
-  FT_Set_Pixel_Sizes( face, size, size);
+  FT_Set_Pixel_Sizes(face, impl->size, impl->size);
 
   FT_Select_Charmap(face,  FT_ENCODING_UNICODE);
 
@@ -133,6 +109,8 @@
   int x_pos = 1;
   int y_pos = 1;
 
+  impl->height = effect ? effect->get_height(impl->size) : impl->size;
+
   // We limit ourself to 256 characters for the momemnt
   for(int glyph_index = 0; glyph_index < 256; glyph_index += 1)
     {
@@ -142,30 +120,36 @@
           throw std::runtime_error("couldn't load char");
         }
       
-      blit_ftbitmap(pixelbuffer, face->glyph->bitmap, x_pos, y_pos);
-      generate_border(pixelbuffer, x_pos, y_pos, 
-                      face->glyph->bitmap.width, face->glyph->bitmap.rows);
+      if (!effect)
+        blit_ftbitmap(pixelbuffer, face->glyph->bitmap, x_pos, y_pos);
+      else
+        effect->blit(pixelbuffer, face->glyph->bitmap, x_pos, y_pos);
 
+      int glyph_width  = effect ? effect->get_glyph_width(face->glyph->bitmap.width) : face->glyph->bitmap.width;
+      int glyph_height = effect ? effect->get_glyph_height(face->glyph->bitmap.rows) : face->glyph->bitmap.rows;
+
+      generate_border(pixelbuffer, x_pos, y_pos, glyph_width, glyph_height);
+
       Rect pos(Point(face->glyph->bitmap_left,  -face->glyph->bitmap_top), 
-               Size (face->glyph->bitmap.width, face->glyph->bitmap.rows));
+               Size(glyph_width, glyph_height));
 
       Rectf uv(x_pos/float(pixelbuffer->w),
                y_pos/float(pixelbuffer->h),
-               (x_pos + face->glyph->bitmap.width)/float(pixelbuffer->w),
-               (y_pos + face->glyph->bitmap.rows)/float(pixelbuffer->h));
+               (x_pos + glyph_width)/float(pixelbuffer->w),
+               (y_pos + glyph_height)/float(pixelbuffer->h));
       
       impl->characters.push_back(TTFCharacter(pos, uv,
                                               face->glyph->advance.x >> 6));
 
       // we leave a one pixel border around the letters which we fill with generate_border
-      x_pos += face->glyph->bitmap.width + 2;
-      if (x_pos + size + 2 > pixelbuffer->w)
+      x_pos += glyph_width + 2;
+      if (x_pos + impl->height + 2 > pixelbuffer->w)
         {
-          y_pos += size + 2;
+          y_pos += impl->height + 2;
           x_pos = 1;
         }
 
-      if (y_pos + size + 2 > pixelbuffer->h)
+      if (y_pos + impl->height + 2 > pixelbuffer->h)
         throw std::runtime_error("Font Texture to small");
     }
   FT_Done_Face(face);

Modified: trunk/src/ttf_font.hpp
===================================================================
--- trunk/src/ttf_font.hpp	2005-08-22 11:13:45 UTC (rev 1007)
+++ trunk/src/ttf_font.hpp	2005-08-22 12:57:49 UTC (rev 1008)
@@ -32,6 +32,8 @@
 #include "math/rect.hpp"
 #include "glutil/texture.hpp"
 
+class FontEffect;
+
 class TTFCharacter
 {
 public:
@@ -43,6 +45,8 @@
       uv-coordinates */
   Rectf uv;
 
+  /** Amount of pixels that the cursor will advance after having
+      printed this character */
   int advance;
 
   TTFCharacter(const Rect& pos, const Rectf& uv, int advance);
@@ -57,15 +61,21 @@
   static void init();
   static void deinit();
 
-  TTFFont(const std::string& file, int size);
+  TTFFont(const std::string& file, int size, FontEffect* effect = 0);
   ~TTFFont();
 
+  /** */
   int get_height() const;
 
   /** Returns the width of a given piece of text, doesn't take
       newlines into account */
   int get_width(const std::string& text) const;
 
+  /** Returns the height as given in the constructor, this does *not*
+      take into account any possible resize effects done by
+      FontEffoct */
+  int get_size() const;
+
   Texture get_texture() const;
 
   const TTFCharacter& get_character(int c) const;



From jamesgregory at berlios.de  Mon Aug 22 17:02:33 2005
From: jamesgregory at berlios.de (James Gregory at BerliOS)
Date: Mon, 22 Aug 2005 17:02:33 +0200
Subject: [Windstille-commit] r1009 - trunk/src/display
Message-ID: <200508221502.j7MF2XCw022478@sheep.berlios.de>

Author: jamesgregory
Date: 2005-08-22 17:02:30 +0200 (Mon, 22 Aug 2005)
New Revision: 1009

Modified:
   trunk/src/display/display.cpp
Log:
add missing glext.h include

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-22 12:57:49 UTC (rev 1008)
+++ trunk/src/display/display.cpp	2005-08-22 15:02:30 UTC (rev 1009)
@@ -29,6 +29,7 @@
 #include "gameconfig.hpp"
 #include "glutil/opengl_state.hpp"
 #include "display.hpp"
+#include <GL/glext.h>
 
 SDL_Surface* window       = 0;
 



From grumbel at berlios.de  Mon Aug 22 20:56:33 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 22 Aug 2005 20:56:33 +0200
Subject: [Windstille-commit] r1010 - trunk/src
Message-ID: <200508221856.j7MIuX5K020337@sheep.berlios.de>

Author: grumbel
Date: 2005-08-22 20:56:28 +0200 (Mon, 22 Aug 2005)
New Revision: 1010

Modified:
   trunk/src/player.cpp
Log:
- changed jump height so that its enough to make it over 64 pixels

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-22 15:02:30 UTC (rev 1009)
+++ trunk/src/player.cpp	2005-08-22 18:56:28 UTC (rev 1010)
@@ -470,7 +470,7 @@
 void
 Player::set_jump_air()
 {
-  velocity.y = -400;
+  velocity.y = -450;
   sprite.set_next_action("JumpLandSofttoRun");
   state = JUMP_AIR;
 }



From grumbel at berlios.de  Tue Aug 23 02:52:14 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 23 Aug 2005 02:52:14 +0200
Subject: [Windstille-commit] r1011 - trunk/data/blender/monster
Message-ID: <200508230052.j7N0qEL1006040@sheep.berlios.de>

Author: grumbel
Date: 2005-08-23 02:52:06 +0200 (Tue, 23 Aug 2005)
New Revision: 1011

Modified:
   trunk/data/blender/monster/v2.blend
Log:
- more details in the face

Modified: trunk/data/blender/monster/v2.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Tue Aug 23 03:07:51 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 23 Aug 2005 03:07:51 +0200
Subject: [Windstille-commit] r1012 - trunk/data/blender/monster
Message-ID: <200508230107.j7N17pwH009354@sheep.berlios.de>

Author: grumbel
Date: 2005-08-23 03:07:05 +0200 (Tue, 23 Aug 2005)
New Revision: 1012

Modified:
   trunk/data/blender/monster/v2.blend
Log:
- more details in the face, some more then the last commit

Modified: trunk/data/blender/monster/v2.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Tue Aug 23 15:32:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 23 Aug 2005 15:32:41 +0200
Subject: [Windstille-commit] r1013 - trunk/data/blender/monster
Message-ID: <200508231332.j7NDWfwm012171@sheep.berlios.de>

Author: grumbel
Date: 2005-08-23 15:32:37 +0200 (Tue, 23 Aug 2005)
New Revision: 1013

Modified:
   trunk/data/blender/monster/v2.blend
Log:
- shaped the legs much better
- added some bone structure (not rigged yet)

Modified: trunk/data/blender/monster/v2.blend
===================================================================
(Binary files differ)



From line72 at berlios.de  Tue Aug 23 22:00:51 2005
From: line72 at berlios.de (Mark Dillavou at BerliOS)
Date: Tue, 23 Aug 2005 22:00:51 +0200
Subject: [Windstille-commit] r1014 - trunk/src
Message-ID: <200508232000.j7NK0pFf001707@sheep.berlios.de>

Author: line72
Date: 2005-08-23 22:00:49 +0200 (Tue, 23 Aug 2005)
New Revision: 1014

Modified:
   trunk/src/text_area.cpp
Log:
Added missing assert.h include


Modified: trunk/src/text_area.cpp
===================================================================
--- trunk/src/text_area.cpp	2005-08-23 13:32:37 UTC (rev 1013)
+++ trunk/src/text_area.cpp	2005-08-23 20:00:49 UTC (rev 1014)
@@ -23,6 +23,8 @@
 **  02111-1307, USA.
 */
 
+#include <assert.h>
+
 #include "glutil/opengl_state.hpp"
 #include "ttf_font.hpp"
 #include "text_area.hpp"



From grumbel at berlios.de  Thu Aug 25 20:29:49 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 25 Aug 2005 20:29:49 +0200
Subject: [Windstille-commit] r1015 - in trunk/src: . display
Message-ID: <200508251829.j7PITnTT027093@sheep.berlios.de>

Author: grumbel
Date: 2005-08-25 20:29:48 +0200 (Thu, 25 Aug 2005)
New Revision: 1015

Modified:
   trunk/src/display/display.cpp
   trunk/src/display/display.hpp
   trunk/src/display/scene_context.cpp
   trunk/src/fonts.cpp
Log:
- added cliprect support

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-23 20:00:49 UTC (rev 1014)
+++ trunk/src/display/display.cpp	2005-08-25 18:29:48 UTC (rev 1015)
@@ -31,7 +31,8 @@
 #include "display.hpp"
 #include <GL/glext.h>
 
-SDL_Surface* window       = 0;
+SDL_Surface* Display::window       = 0;
+std::vector<Rect> Display::cliprects;
 
 void
 Display::draw_line(const Vector& pos1, const Vector& pos2, const Color& color)
@@ -305,4 +306,45 @@
   glEnd();
 }
 
+void
+Display::push_cliprect(const Rect& rect_)
+{
+  Rect rect = rect_;
+
+  if (!cliprects.empty())
+    {
+      rect.left   = std::max(rect.left, cliprects.back().left);
+      rect.top    = std::max(rect.top,  cliprects.back().top);
+
+      rect.right  = std::min(rect.right,  cliprects.back().right);
+      rect.bottom = std::min(rect.bottom, cliprects.back().bottom);
+    }
+
+  cliprects.push_back(rect);
+
+  glScissor(rect.left, get_height() - rect.top - rect.get_height(),
+            rect.get_width(), rect.get_height());
+  glEnable(GL_SCISSOR_TEST);
+}
+
+void
+Display::pop_cliprect()
+{
+  assert(cliprects.size() >= 1);
+
+  cliprects.pop_back();
+
+  if (!cliprects.empty())
+    {
+      const Rect& rect = cliprects.back();
+
+      glScissor(rect.left, get_height() - rect.top - rect.get_height(),
+                rect.get_width(), rect.get_height());
+    }
+  else
+    {
+      glDisable(GL_SCISSOR_TEST);
+    }
+}
+
 /* EOF */

Modified: trunk/src/display/display.hpp
===================================================================
--- trunk/src/display/display.hpp	2005-08-23 20:00:49 UTC (rev 1014)
+++ trunk/src/display/display.hpp	2005-08-25 18:29:48 UTC (rev 1015)
@@ -26,12 +26,17 @@
 #ifndef HEADER_DISPLAY_DISPLAY_HPP
 #define HEADER_DISPLAY_DISPLAY_HPP
 
+#include <vector>
+#include <SDL.h>
 #include "math/rect.hpp"
 #include "color.hpp"
 
 class Display
 {
 private:
+  static std::vector<Rect> cliprects;
+  static SDL_Surface* window;
+
 public:
   static void fill_rect(const Rectf& rect, const Color& color);
   static void draw_rect(const Rectf& rect, const Color& color);
@@ -49,6 +54,9 @@
 
   static void set_fullscreen(bool fullscreen);
 
+  static void push_cliprect(const Rect& rect);
+  static void pop_cliprect();
+
   static void init();
 };
 

Modified: trunk/src/display/scene_context.cpp
===================================================================
--- trunk/src/display/scene_context.cpp	2005-08-23 20:00:49 UTC (rev 1014)
+++ trunk/src/display/scene_context.cpp	2005-08-25 18:29:48 UTC (rev 1015)
@@ -132,9 +132,8 @@
       
   if (impl->render_mask & LIGHTMAPSCREEN)
     {
-      glEnable(GL_SCISSOR_TEST);
-      glScissor(0, Display::get_height() - impl->lightmap.get_height(), 
-                impl->lightmap.get_width(), impl->lightmap.get_height());
+      Display::push_cliprect(Rect(Point(0, 0),
+                                  Size(impl->lightmap.get_width(), impl->lightmap.get_height())));
 
       glPushMatrix();
       glScalef(1.0f/LIGHTMAP_DIV, 1.0f/LIGHTMAP_DIV, 1.0f);
@@ -155,7 +154,7 @@
                             impl->lightmap.get_width(), impl->lightmap.get_height());
       }
 
-      glDisable(GL_SCISSOR_TEST);
+      Display::pop_cliprect();
     }
 
   if (impl->render_mask & COLORMAP)

Modified: trunk/src/fonts.cpp
===================================================================
--- trunk/src/fonts.cpp	2005-08-23 20:00:49 UTC (rev 1014)
+++ trunk/src/fonts.cpp	2005-08-25 18:29:48 UTC (rev 1015)
@@ -31,7 +31,7 @@
   BorderFontEffect* border_effect = new BorderFontEffect(1);
 
   ttffont   = new TTFFont("fonts/VeraMono.ttf", 12);
-  ttfdialog = new TTFFont("fonts/Vera.ttf", 20, border_effect);
+  ttfdialog = new TTFFont("fonts/Vera.ttf", 20);
 
   delete border_effect;
 }



From grumbel at berlios.de  Thu Aug 25 20:32:37 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Thu, 25 Aug 2005 20:32:37 +0200
Subject: [Windstille-commit] r1016 - trunk/src/gui
Message-ID: <200508251832.j7PIWb2Z027317@sheep.berlios.de>

Author: grumbel
Date: 2005-08-25 20:32:31 +0200 (Thu, 25 Aug 2005)
New Revision: 1016

Modified:
   trunk/src/gui/automap.cpp
Log:
- added clipping to automap

Modified: trunk/src/gui/automap.cpp
===================================================================
--- trunk/src/gui/automap.cpp	2005-08-25 18:29:48 UTC (rev 1015)
+++ trunk/src/gui/automap.cpp	2005-08-25 18:32:31 UTC (rev 1016)
@@ -27,6 +27,7 @@
 #include "input/controller.hpp"
 #include "sector.hpp"
 #include "tile_map.hpp"
+#include "display/display.hpp"
 #include "automap.hpp"
 
 namespace GUI {
@@ -34,7 +35,7 @@
 Automap::Automap(const Rectf& rect, Component* parent)
   : Component(rect, parent),
     pos(0.0f, 0.0f),
-    zoom(1.0f)
+    zoom(6.0f)
 {
   TileMap* tilemap = Sector::current()->get_tilemap();
   
@@ -87,10 +88,12 @@
 void
 Automap::draw()
 {
+  Display::push_cliprect(Rect(get_screen_rect()));
   surface.draw(SurfaceDrawingParameters()
                .set_pos(Vector(rect.left, rect.top) + pos)
                .set_color(Color(1.0f, 1.0f, 1.0f, is_active() ? 0.8f : 0.5f))
                .set_scale(zoom));
+  Display::pop_cliprect();
 }
 
 void



From grumbel at berlios.de  Fri Aug 26 00:14:20 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 26 Aug 2005 00:14:20 +0200
Subject: [Windstille-commit] r1017 - trunk/tools
Message-ID: <200508252214.j7PMEKum009942@sheep.berlios.de>

Author: grumbel
Date: 2005-08-26 00:14:19 +0200 (Fri, 26 Aug 2005)
New Revision: 1017

Modified:
   trunk/tools/windstille_export.py
Log:
- moved exporter code into a class
- split it up into seperate functions (function names could need a little improvment)
- removed the parsing of default values from blender file, shouldn't be needed and can be easily moved back in case it is

Modified: trunk/tools/windstille_export.py
===================================================================
--- trunk/tools/windstille_export.py	2005-08-25 18:32:31 UTC (rev 1016)
+++ trunk/tools/windstille_export.py	2005-08-25 22:14:19 UTC (rev 1017)
@@ -129,52 +129,24 @@
       token = lex.get_token()
     lex.push_token(token)
       
-    actionconfig[action_name] = \
-        (first_frame, last_frame, speed, samplerate, markers)
-    print "Config: %s - %s" % (action_name, str(actionconfig[action_name]))
+    actionconfig[action_name] = ActionConfig(first_frame, last_frame, speed, samplerate, markers)
+    print "Config: %-20s - %s" % (action_name, str(actionconfig[action_name]))
 
   return actionconfig
 
-def parse_config(text):
-  lex = shlex.shlex(text)
-  lex.wordchars += "."
-  def expect_string():
-    res = lex.get_token()
-    if res == lex.eof:
-      raise Exception, "Expected string, got EOF"
-    return res
+class ActionConfig:
+  def __init__(self, first_frame, last_frame, speed, samplerate, markers):
+    self.first_frame = first_frame
+    self.last_frame  = last_frame
+    self.speed       = speed
+    self.samplerate  = samplerate
+    self.markers     = markers
+    self.numframes   = last_frame - first_frame + 1
 
-  def expect_int():
-    res = lex.get_token()
-    if res == lex.eof:
-      raise Exception, "Expected in, got EOF"
-    return int(res)
-                                                    
-  def expect_float():
-    res = lex.get_token()
-    if res == lex.eof:
-      raise Exception, "Expected float, got EOF"
-    return float(res)
+  def __str__(self):
+    return "Frames: %3i - %3i, speed: %3.2f, Samplerate: %3d" % (self.first_frame, self.last_frame,
+                                                           self.speed, self.samplerate)
 
-  while True:
-    token = lex.get_token()
-    if token == lex.eof:
-      break
-    elif token == "DefaultSpeed":
-      global DEFAULT_SPEED
-      DEFAULT_SPEED = expect_float()
-    elif token == "SpeedMultiplier":
-      global SPEED_MULTIPLIER
-      SPEED_MULTIPLIER = expect_float()
-    elif token == "Zoom":
-      global ZOOM
-      ZOOM = expect_float()
-    elif token == "DefaultSamplerate":
-      global DEFAULT_SAMPLERATE
-      DEFAULT_SAMPLERATE = expect_int()
-    else:
-      raise Exception, "Unexpected token '%s'" % token
-
 # return contents of a text in the blender scene
 def get_text(textname):
   try:
@@ -189,86 +161,132 @@
     text += line + "\n"
   return text
 
-def export(filename):
-  scene = Blender.Scene.getCurrent()
-  layers = scene.Layers
+class WindstilleExporter:
+  def __init__(self):
+    self.meshes    = []
+    self.attachement_objects = []
+    self.actions = []
+    self.objvertmaps = {}
+    self.file = None
+    self.armatureobj = None
 
-  # parse exportconfig
-  try:
-    parse_config(get_text("exportconfig"))
-  except Exception, message:
-    raise Exception, "Parse Error in exportconfig:" + str(message)
+  def export(self, filename):
+    # parse actionconfig
+    try:
+      self.actionconfigs = parse_actionconfig(get_text("actionconfig"))
+    except Exception, message:
+      raise Exception, "Parse Error in actionconfig:" + str(message)
+    
+    self.export_lowlevel()
+    
+    self.file = open(filename, "wb")
+    self.write_file()
+    self.file.close()
 
-  # parse actionconfig
-  actionconfig = {}
-  try:
-    actionconfig = parse_actionconfig(get_text("actionconfig"))
-  except Exception, message:
-    raise Exception, "Parse Error in actionconfig:" + str(message)
- 
-  # compose list of meshs to export
-  meshes = []
-  for obj in Blender.Object.Get():
-    data = obj.getData()
-    if (type(data) is not Blender.Types.NMeshType) or not data.faces:
-      continue
-    if (obj.Layers & layers) == 0:
-      print "Skipping \"%s\" because it is on different layer" % obj.getName()
-      continue
-    texture = data.faces[0].image
-    if not texture:
-      print "Skipping Mesh %s: no texture" % obj.getName()
-      continue
-    meshes.append(obj)
+  def write_file(self):
+    # write file header
+    self.file.write(struct.pack("=4sHHHH", "W3DS", FORMAT_VERSION, \
+          len(self.meshes), len(self.attachement_objects), len(self.actions)))
 
-  # search for armature object
-  armatures = Blender.Armature.Get()
-  if len(armatures) > 1:
-    raise Exception, "Need to have at most 1 armature in the scene"
+    # Mesh Headers + Data
+    for obj in self.meshes:
+      self.export_mesh_header(obj)
+      
+    # Attachement Point Headers
+    for obj in self.attachement_objects:
+      self.file.write(struct.pack("=64s", obj.getName()[2:]))
 
-  armatureobj = 0
-  for obj in Blender.Object.Get():
-    print "Type: " + obj.getType()
-    if obj.getType() == "Armature":
-      print "found"
-      armatureobj = obj
-      armature = obj.getData()
-      break
+    # Action Headers + actions
+    def save_frame():
+      for obj in self.meshes:
+        data = Blender.NMesh.GetRawFromObject(obj.getName())
+        m = obj.getMatrix()
+        # action/frame/mesh/vertices
+        for nv in self.objvertmaps[obj.getName()]:
+          v = data.verts[nv]
+          t = [0, 0, 0]
+          t[0] = m[0][0]*v[0] + m[1][0]*v[1] + m[2][0]*v[2] + m[3][0]
+          t[1] = m[0][1]*v[0] + m[1][1]*v[1] + m[2][1]*v[2] + m[3][1]        
+          t[2] = m[0][2]*v[0] + m[1][2]*v[1] + m[2][2]*v[2] + m[3][2]
+          t[0] *= ZOOM
+          t[1] *= ZOOM
+          t[2] *= ZOOM
+          self.file.write(struct.pack("=fff", t[1], -t[2], t[0]))
 
-  # compose list of objects for attachement points
-  attachement_objects = []
-  for obj in Blender.Object.Get():
-    if obj.getType() != 'Empty':
-      continue
-    if not obj.getName().startswith("A:"):
-      continue;
-    attachement_objects.append(obj)
-  
-  # compose list of actions to export
-  actions = []
-  if armatureobj == 0:
-    actions.append("Default")
-  else:
-    for action in Blender.Armature.NLA.GetActions().iteritems():
-      actions.append(action[1])
+      # attachement points
+      for obj in self.attachement_objects:
+        m = obj.matrixWorld
+        loc = (m[3][0] * ZOOM, m[3][1] * ZOOM, m[3][2] * ZOOM)
+        self.file.write(struct.pack("=fff", loc[0], loc[1], loc[2]))
+        quat = matrix2quaternion(m)
+        self.file.write(struct.pack("=ffff", quat[0], quat[1], quat[2], quat[3]))
 
-  # write file header
-  file = open(filename, "wb")
-  file.write(struct.pack("=4sHHHH", "W3DS", FORMAT_VERSION, \
-        len(meshes), len(attachement_objects), len(actions)))
-  objvertmaps = {}
+    actionnum = 0
 
-  # Mesh Headers + Data
-  for obj in meshes:
-    data = obj.getData()
+    for action in self.actions:
+      # special case, no armature+animations
+      if not self.armatureobj:
+        self.file.write(struct.pack("=64sfHH", "Default", \
+                   DEFAULT_SPEED * SPEED_MULTIPLIER, 0, 1))
+        save_frame()
+        break
 
+      # enable action
+      action.setActive(self.armatureobj)
+
+      # find/autodetect config
+      if self.actionconfigs.has_key(action.getName()):
+        actioncfg = self.actionconfigs[action.getName()]
+      else:
+        print "Error: No config for action '%s' defined." % action.getName()
+        actioncfg = ActionConfig(1, 1, DEFAULT_SPEED, DEFAULT_SAMPLERATE, [])
+
+      # calculate number of frames and stuff for the header
+      resultframes = 0
+      for i in range(actioncfg.first_frame, actioncfg.last_frame+1, actioncfg.samplerate):
+        resultframes += 1
+      progress = 1.0/float(len(self.actions)) * actionnum
+
+      print "Exporting Action %s (%d frames)" \
+              % (action.getName(), resultframes)
+      Window.DrawProgressBar(progress, "Exporting Action %s (%d frames)" \
+              % (action.getName(), resultframes))
+      actionnum += 1
+      self.file.write(struct.pack("=64sfHH", action.getName(), \
+            actioncfg.speed * SPEED_MULTIPLIER, len(actioncfg.markers), resultframes))
+
+      def blenderframe_to_wspriteframe(frame):
+        return (frame - actioncfg.first_frame) / actioncfg.samplerate
+
+      # write markers
+      for marker in actioncfg.markers:
+        self.file.write(struct.pack("=64sH", marker[0], \
+              blenderframe_to_wspriteframe(marker[1])))
+
+      # output for all frames for all meshs all vertex positions
+      frs = 0
+      for frame in range(actioncfg.first_frame, actioncfg.last_frame+1, actioncfg.samplerate):
+        frs += 1
+        Blender.Set("curframe", int(frame))
+        save_frame()
+    
+  def export_mesh_header(self, obj):
     print "Exporting Mesh %s" % obj.getName()
+    data = obj.getData()
 
+    print "Faces: %s" % (len(data.faces))
+    
     texture = data.faces[0].image
     texture_filename = texture.filename
     texture_filename = os.path.basename(texture_filename)
+
+    # triangles
     vertexmap = []
     uvs = []
+    bodydata = ""
+    facecount = 0
+    texturewarning = False
+
     def mapvertex(index, u, v):
       for mv in xrange(0, len(vertexmap)):
         if vertexmap[mv] == index and uvs[mv] == (u, v):
@@ -276,18 +294,12 @@
       vertexmap.append(index)
       uvs.append( (u, v) )
       return len(vertexmap)-1
-
-    # triangles
-    vertexmap = []
-    uvs = []
-    bodydata = ""
-    facecount = 0
-    texturewarning = False
+    
     for face in data.faces:
       if face.image != texture and not texturewarning:
         print "WARNING: Mesh '%s' has more than 1 material" % obj.getName()
         texturewarning = True
-    
+
       for v in [0, 1, 2]:
         bodydata += struct.pack("=H", \
               mapvertex(face.v[v].index, face.uv[v][0], face.uv[v][1]))
@@ -309,110 +321,65 @@
     for uv in uvs:
       bodydata += struct.pack("=ff", uv[0], 1.0-uv[1])
 
-    file.write(struct.pack("=64sHH", texture_filename, facecount, len(vertexmap)))
+    self.file.write(struct.pack("=64sHH", texture_filename, facecount, len(vertexmap)))
     print "Exporting Mesh Tex: %s Facecount: %d Vertices: %d" \
             % (texture_filename, facecount, len(vertexmap))
-    file.write(bodydata)
+    self.file.write(bodydata)
 
-    objvertmaps[obj.getName()] = vertexmap
+    self.objvertmaps[obj.getName()] = vertexmap
 
-  # Attachement Point Headers
-  for obj in attachement_objects:
-    file.write(struct.pack("=64s", obj.getName()[2:]))
-
-  # Action Headers + actions
-  def save_frame():
-    for obj in meshes:
-      data = Blender.NMesh.GetRawFromObject(obj.getName())
-      vertexmap = objvertmaps[obj.getName()]
-      m = obj.getMatrix()
-      # action/frame/mesh/vertices
-      for nv in vertexmap:
-        v = data.verts[nv]
-        t = [0, 0, 0]
-        t[0] = m[0][0]*v[0] + m[1][0]*v[1] + m[2][0]*v[2] + m[3][0]
-        t[1] = m[0][1]*v[0] + m[1][1]*v[1] + m[2][1]*v[2] + m[3][1]        
-        t[2] = m[0][2]*v[0] + m[1][2]*v[1] + m[2][2]*v[2] + m[3][2]
-        t[0] *= ZOOM
-        t[1] *= ZOOM
-        t[2] *= ZOOM
-        file.write(struct.pack("=fff", t[1], -t[2], t[0]))
-
-    # attachement points
-    for obj in attachement_objects:
-      m = obj.matrixWorld
-      loc = (m[3][0] * ZOOM, m[3][1] * ZOOM, m[3][2] * ZOOM)
-      file.write(struct.pack("=fff", loc[0], loc[1], loc[2]))
-      quat = matrix2quaternion(m)
-      file.write(struct.pack("=ffff", quat[0], quat[1], quat[2], quat[3]))
+  def export_lowlevel(self):
+    scene = Blender.Scene.getCurrent()
+    layers = scene.Layers
     
-  actionnum = 0
-  for action in actions:
-    # special case, no armature+animations
-    if armatureobj == 0:
-      file.write(struct.pack("=64sfHH", "Default", \
-                 DEFAULT_SPEED * SPEED_MULTIPLIER, 0, 1))
-      save_frame()
-      break
-  
-    # enable action
-    action.setActive(armatureobj)
- 
-    # find/autodetect config
-    if actionconfig.has_key(action.getName()):
-      (first_frame, last_frame, action_speed, samplerate, markers) = actionconfig[action.getName()]
-    else:
-      print "No config for action '%s' defined." % action.getName()
-      first_frame = 1 
-  
-      # find out when the last ipo frame is set
-      last_frame = 1
-      for _ipo in action.getAllChannelIpos().iteritems():
-        ipo = _ipo[1]
-        for curve in ipo.getCurves():
-          for p in curve.getPoints():
-            time = p.getPoints() [0]
-            if time > last_frame:
-              last_frame = int(time)
-      action_speed = DEFAULT_SPEED
-      samplerate = DEFAULT_SAMPLERATE
-      markers = []
+    # compose list of meshs to export
+    for obj in Blender.Object.Get():
+      data = obj.getData()
+      if (type(data) is not Blender.Types.NMeshType) or not data.faces:
+        continue
+      if (obj.Layers & layers) == 0:
+        print "Skipping \"%s\" because it is on different layer" % obj.getName()
+        continue
+      texture = data.faces[0].image
+      if not texture:
+        print "Skipping Mesh %s: no texture" % obj.getName()
+        continue
+      self.meshes.append(obj)
 
-    # calculate number of frames and stuff for the header
-    numframes = last_frame - first_frame + 1
-    resultframes = 0
-    for i in range(first_frame, last_frame+1, samplerate):
-      resultframes += 1
-    progress = 1.0/float(len(actions)) * actionnum
+    # search for armature object
+    armatures = Blender.Armature.Get()
+    if len(armatures) > 1:
+      raise Exception, "Need to have at most 1 armature in the scene"
 
-    print "Exporting Action %s (%d frames)" \
-            % (action.getName(), resultframes)
-    Window.DrawProgressBar(progress, "Exporting Action %s (%d frames)" \
-            % (action.getName(), resultframes))
-    actionnum += 1
-    file.write(struct.pack("=64sfHH", action.getName(), \
-          action_speed * SPEED_MULTIPLIER, len(markers), resultframes))
+    for obj in Blender.Object.Get():
+      print "Type: " + obj.getType()
+      if obj.getType() == "Armature":
+        print "found"
+        self.armatureobj = obj
+        armature = obj.getData()
+        break
 
-    def blenderframe_to_wspriteframe(frame):
-      return (frame - first_frame) / samplerate
+    # compose list of objects for attachement points
+    for obj in Blender.Object.Get():
+      if obj.getType() == 'Empty' and obj.getName().startswith("A:"):
+        self.attachement_objects.append(obj)
 
-    # write markers
-    for marker in markers:
-      file.write(struct.pack("=64sH", marker[0], \
-            blenderframe_to_wspriteframe(marker[1])))
-  
-    # output for all frames for all meshs all vertex positions
-    frs = 0
-    for frame in range(first_frame, last_frame+1, samplerate):
-      frs += 1
-      Blender.Set("curframe", int(frame))
-      save_frame
+    # compose list of actions to export
+    if not self.armatureobj:
+      self.actions.append("Default")
+    else:
+      for action in Blender.Armature.NLA.GetActions().iteritems():
+        self.actions.append(action[1])
       
 def fs_callback(filename):
-  export(filename)
+  print "=== Exporting: %s ===" % (filename)
+  exporter = WindstilleExporter()
+  exporter.export(filename)
+  print "=== Done ==="
 
 defaultname = Blender.Get("filename")
 if defaultname.endswith(".blend"):
     defaultname = defaultname[0:len(defaultname) - len(".blend")] + ".wsprite"
 Window.FileSelector(fs_callback, "Windstille Export", defaultname)
 
+# EOF #



From grumbel at berlios.de  Fri Aug 26 14:47:58 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 26 Aug 2005 14:47:58 +0200
Subject: [Windstille-commit] r1018 - trunk/src
Message-ID: <200508261247.j7QClwXN000353@sheep.berlios.de>

Author: grumbel
Date: 2005-08-26 14:47:57 +0200 (Fri, 26 Aug 2005)
New Revision: 1018

Modified:
   trunk/src/game_session.cpp
   trunk/src/game_session.hpp
Log:
- added cinematic mode (veeerryyy simple implementation for the moment, could need additional fade-in/fade-out for the black bars)

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-25 22:14:19 UTC (rev 1017)
+++ trunk/src/game_session.cpp	2005-08-26 12:47:57 UTC (rev 1018)
@@ -78,6 +78,7 @@
   std::string filename;
 
   bool pause;
+  bool cutscene_mode;
 
   enum { NO_ACTION, QUIT_ACTION, CHANGE_SECTOR_ACTION } next_action;
   
@@ -98,6 +99,7 @@
   GameSessionImpl() {
     sector = 0;
     current_gui = 0;
+    cutscene_mode = true;
   }
   ~GameSessionImpl() {
     delete sector;
@@ -136,9 +138,20 @@
   // Render the scene to the screen
   sc.render();
 
-  // Draw HUD
-  energy_bar.draw();
-  controller_help_window.draw();
+  if (!cutscene_mode)
+    {
+      // Draw HUD
+      energy_bar.draw();
+      controller_help_window.draw();
+    }
+  else
+    {
+      int border_size = 75;
+      Display::fill_rect(Rect(Point(0, 0), Size(Display::get_width(), border_size)), 
+                         Color(0.0f, 0.0f, 0.0f, 1.0f));
+      Display::fill_rect(Rect(Point(0, Display::get_height() - border_size), Size(Display::get_width(), border_size)), 
+                         Color(0.0f, 0.0f, 0.0f, 1.0f));
+    }
 
   if (current_gui)
     current_gui->draw();
@@ -404,4 +417,10 @@
   return (impl->current_gui == 0);
 }
 
+void
+GameSession::set_cutscene_mode(bool t)
+{
+  impl->cutscene_mode = t;
+}
+
 /* EOF */

Modified: trunk/src/game_session.hpp
===================================================================
--- trunk/src/game_session.hpp	2005-08-25 22:14:19 UTC (rev 1017)
+++ trunk/src/game_session.hpp	2005-08-26 12:47:57 UTC (rev 1018)
@@ -72,6 +72,10 @@
   /** Fades out then switches sectors and fades in again */
   void change_sector(const std::string& filename);
 
+  /** Set the GameSession into a mode for cutscenes, this means for
+      most part to switch into a 16:9 viewmode with black borders */
+  void set_cutscene_mode(bool t);
+
   void draw();
   void update(float delta, const Controller& controller);
   void handle_event(const SDL_Event& event);



From grumbel at berlios.de  Fri Aug 26 18:47:43 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 26 Aug 2005 18:47:43 +0200
Subject: [Windstille-commit] r1019 - trunk/data/blender/sophie
Message-ID: <200508261647.j7QGlh06019933@sheep.berlios.de>

Author: grumbel
Date: 2005-08-26 18:47:27 +0200 (Fri, 26 Aug 2005)
New Revision: 1019

Modified:
   trunk/data/blender/sophie/sophie.blend
Log:
- reduced polycount a bit and cleanup

Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Fri Aug 26 20:13:11 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 26 Aug 2005 20:13:11 +0200
Subject: [Windstille-commit] r1020 - trunk/src
Message-ID: <200508261813.j7QIDBUo017614@sheep.berlios.de>

Author: grumbel
Date: 2005-08-26 20:13:08 +0200 (Fri, 26 Aug 2005)
New Revision: 1020

Modified:
   trunk/src/game_session.cpp
   trunk/src/tile_map.cpp
Log:
- added support for reading tiledata from seperate file (should probally better use a relative directory to the level file then absolute)

Modified: trunk/src/game_session.cpp
===================================================================
--- trunk/src/game_session.cpp	2005-08-26 16:47:27 UTC (rev 1019)
+++ trunk/src/game_session.cpp	2005-08-26 18:13:08 UTC (rev 1020)
@@ -99,7 +99,7 @@
   GameSessionImpl() {
     sector = 0;
     current_gui = 0;
-    cutscene_mode = true;
+    cutscene_mode = false;
   }
   ~GameSessionImpl() {
     delete sector;

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-26 16:47:27 UTC (rev 1019)
+++ trunk/src/tile_map.cpp	2005-08-26 18:13:08 UTC (rev 1020)
@@ -18,6 +18,7 @@
 //  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 #include <sstream>
+#include <physfs.h>
 #include "tile_map.hpp"
 #include "tile.hpp"
 #include "tile_factory.hpp"
@@ -42,28 +43,60 @@
   props.get("height", height);
   if(width <= 0 || height <= 0) {
     throw std::runtime_error(
-        "Invalid width or height defined or "
-        "data defined before width and height");  
+                             "Invalid width or height defined or "
+                             "data defined before width and height");  
   }
-  Field<int> tmpfield(width, height);
-  props.get("data", tmpfield.get_vector());
-  props.print_unused_warnings("tilemap");
-  
+ 
   if(width <= 0 || height <= 0) {
     throw std::runtime_error(
-        "Invalid width or height defined or "
-        "data defined before width and height");
+                             "Invalid width or height defined or "
+                             "data defined before width and height");
   }
-  
-  field = Field<Tile*>(width, height);
-  for (int y = 0; y < field.get_height (); ++y) 
-  {
-    for (int x = 0; x < field.get_width (); ++x)
+
+  std::string data_filename;
+  if (props.get("data-file", data_filename))
     {
-      field(x, y) = TileFactory::current()->create(tmpfield(x, y));
+      PHYSFS_file* file = PHYSFS_openRead(data_filename.c_str());
+      if (!file)
+        {
+          throw std::runtime_error("Couldn't open tiledata file: " + data_filename);
+        }
+      
+      for(int y = 0; y < height; ++y)
+        for(int x = 0; x < width; ++x)
+          {
+            uint16_t result;
+            if(PHYSFS_readULE16(file, &result) == 0) {
+              std::ostringstream msg;
+              msg << "Problem reading uint16 value: " << PHYSFS_getLastError();
+              throw std::runtime_error(msg.str());
+            }
+
+            field(x, y) = TileFactory::current()->create(result);
+          }
+
+      PHYSFS_close(file);
     }
-  }
+  else // read data directly from the levelfile
+    {
+      Field<int> tmpfield(width, height);
 
+      props.get("data", tmpfield.get_vector());
+
+  
+      field = Field<Tile*>(width, height);
+      for (int y = 0; y < field.get_height (); ++y) 
+        {
+          for (int x = 0; x < field.get_width (); ++x)
+            {
+              field(x, y) = TileFactory::current()->create(tmpfield(x, y));
+            }
+        }
+    }
+
+  props.print_unused_warnings("tilemap");
+
+
   if(field.size() == 0)
     throw std::runtime_error("No tiles defined in tilemap");  
 }



From grumbel at berlios.de  Fri Aug 26 22:21:21 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Fri, 26 Aug 2005 22:21:21 +0200
Subject: [Windstille-commit] r1021 - trunk/src
Message-ID: <200508262021.j7QKLL9S026300@sheep.berlios.de>

Author: grumbel
Date: 2005-08-26 22:21:13 +0200 (Fri, 26 Aug 2005)
New Revision: 1021

Modified:
   trunk/src/baby_xml.cpp
   trunk/src/baby_xml.hpp
Log:
- added attribute parsing

Modified: trunk/src/baby_xml.cpp
===================================================================
--- trunk/src/baby_xml.cpp	2005-08-26 18:13:08 UTC (rev 1020)
+++ trunk/src/baby_xml.cpp	2005-08-26 20:21:13 UTC (rev 1021)
@@ -23,92 +23,244 @@
 **  02111-1307, USA.
 */
 
+#include <sstream>
 #include <stdexcept>
+#include <iostream>
 #include "baby_xml.hpp"
 
-BabyXML::BabyXML(const std::string& text)
+class BabyXMLReader
 {
-  State state = START;
+public:
+  BabyXML* xml;
+  std::string text;
+  int cursor;
+  int line_no;
+  int column_no;
+  
+  BabyXMLReader(const std::string& text_, BabyXML* xml_) 
+    : xml(xml_),
+      text(text_),
+      cursor(0),
+      line_no(0),
+      column_no(0)
+  {
+    std::string content;
+    
+    while(!eof())
+      {
+        char c = look_ahead();
+        switch(c)
+          {
+          case '<':
+            if (!content.empty())
+              {
+                xml->add_node(BabyXML::Node(BabyXML::Node::TEXT, content));
+                content = "";
+              }
+            read_element();
+            break;
 
-  if (!text.empty())
-    {
-      Node node;
-      
-      for(int i = 0; i < int(text.size()); ++i)
-        {
-          switch(state)
-            {
-            case START: // looking for type the next node
-              if (text[i] == '<')
-                {
-                  if (i+1 < int(text.size()) && text[i+1] == '/')
-                    {
-                      node = Node(Node::END_TAG);
-                      i += 1;
-                    }
-                  else
-                    {
-                      node = Node(Node::START_TAG);
-                    }
-                }
-              else if (text[i] == '&')
-                {
-                  node = Node(Node::ENTITY);
-                }
-              else
-                {
-                  node = Node(Node::TEXT);
-                  node.content += text[i];
-                }
-              state = END;
-              break;
+          case '&':
+            content += read_entity();
+            break;
 
-            case END: // looking for end of current node
-              if ((node.type == Node::START_TAG || node.type == Node::END_TAG) && text[i] == '>')
-                {
-                  nodes.push_back(node);
-                  state = START;
-                }
-              else if (node.type == Node::TEXT && (text[i] == '<' || text[i] == '&'))
-                {
-                  nodes.push_back(node);
-                  i -= 1;
-                  state = START;
-                }
-              else if (node.type == Node::ENTITY && text[i] == ';')
-                {
-                  std::string entity;
-                  if (node.content == "quot")
-                    entity = "\"";
-                  else if (node.content == "gt")
-                    entity = ">";
-                  else if (node.content == "lt")
-                    entity = "<";
-                  else
-                    throw std::runtime_error("Unknown entity: '" + node.content + "'");
+          default:
+            content += c;
+            incr_cursor();
+            break;
+          }
+      }
+  }
 
-                  if (!nodes.empty() && nodes.back().type == Node::TEXT)
-                    {
-                      node = nodes.back();
-                      nodes.pop_back();
-                      node.content += entity;
-                    }
-                  else
-                    {
-                      node = Node(Node::TEXT, entity);
-                    }
-                }
-              else
-                {
-                  node.content += text[i];
-                }
-              break;
-            }
+  void skip_space()
+  {
+    while(true) 
+      {
+        char c = look_ahead();
+        if (c != ' ' && c != '\t') {
+          break;
+        } else {
+          incr_cursor();
         }
+      }
+  }
 
-      if (state == END)
-        nodes.push_back(node);
-    }
+  void read_char(char expect)
+  {
+    char c = look_ahead();
+    if (c != expect)
+      {
+        std::ostringstream str;
+        str << "Syntax Error:" << line_no << ":" << column_no 
+            << ": Syntax error: read_char(): expected '" << expect << "' got '" << c << "'";
+        throw std::runtime_error(str.str());
+      }
+    else
+      {
+        incr_cursor();
+      }
+  }
+
+  void read_element()
+  {
+    BabyXML::Node node;
+
+    read_char('<');
+    if (look_ahead() == '/') 
+      {
+        node.type = BabyXML::Node::END_TAG;
+        incr_cursor();
+        node.content = read_identifer();
+      }
+    else
+      {
+        node.type = BabyXML::Node::START_TAG;
+        node.content    = read_identifer();
+        node.attributes = read_attributes();
+      }
+    
+    skip_space();
+    read_char('>');
+
+    xml->add_node(node);
+  }
+
+  /** Read a string of the form: '"your string"' */
+  std::string read_string()
+  {
+    char start = look_ahead();
+    if (start != '\'' && start != '"')
+      {
+        std::ostringstream str;
+        str << "Syntax Error:" << line_no << ":" << column_no 
+            << ": Syntax error: read_string(): expected ' or \" got '" << start << "'";
+        throw std::runtime_error(str.str());
+      }
+    incr_cursor();
+    
+    std::string content;
+    while(true)
+      {
+        char c = look_ahead();
+        if (c == '"' || c == '\'') 
+          {
+            if (c != start)
+              {
+                std::ostringstream str;
+                str << "Syntax Error:" << line_no << ":" << column_no 
+                    << ": Syntax error: read_string(): quote mismatch";
+                throw std::runtime_error(str.str());
+              }
+            incr_cursor();
+            break;
+          } 
+        else if (c == '&') 
+          {
+            c += read_entity();
+          } 
+        else 
+          {
+            incr_cursor();
+            content += c;
+          }
+      }
+    return content;
+  }
+
+  char read_entity()
+  {
+    read_char('&');
+    std::string identifer = read_identifer();
+    read_char(';');
+
+    if (identifer == "quot")
+      return '"';
+    else if (identifer == "gt")
+      return '>';
+    else if (identifer == "lt")
+      return '<';
+    else
+      {
+        std::ostringstream str;
+        str << "Syntax Error:" << line_no << ":" << column_no << ": Unknown entity: '&" + identifer + ";'";
+        throw std::runtime_error(str.str());
+      }
+  }
+  
+  std::vector<BabyXML::Attribute> read_attributes()
+  {
+    std::vector<BabyXML::Attribute> attributes;
+    while(true) 
+      {
+        skip_space();
+
+        char c = look_ahead();
+        if (c == '>' || c == '&' || c == '<' || c == ';')
+          {
+            break;
+          }
+
+        attributes.push_back(BabyXML::Attribute());
+
+        attributes.back().name = read_identifer();
+        read_char('=');
+        attributes.back().value = read_string();
+      }
+    return attributes;
+  }
+
+  std::string read_identifer()
+  {
+    std::string identifer;
+    while(true) 
+      {
+        char c = look_ahead();
+        if (c == '<' || c == '>' || c == '&' || c == ';' || c == ' ' || c == '\t' || c == '=') {
+          break;
+        } else {
+          identifer += c;
+          incr_cursor();
+        }
+      }
+
+    if (identifer.empty())
+      {
+        std::ostringstream str;
+        str << "Syntax Error:" << line_no << ":" << column_no << ": Identifer is empty";
+        throw std::runtime_error(str.str());
+      }
+
+    return identifer;
+  }
+
+  bool eof()
+  {
+    return cursor >= int(text.size());
+  }
+
+  char look_ahead()
+  {
+    return text[cursor];
+  }
+
+  void incr_cursor()
+  {
+    cursor += 1;
+    if (text[cursor] == '\n')
+      {
+        line_no += 1;
+        column_no = 0;
+      }
+    else
+      {
+        column_no += 1;
+      }
+  }
+};
+
+BabyXML::BabyXML(const std::string& text)
+{
+  BabyXMLReader(text, this);
 }
 
 BabyXML::~BabyXML()
@@ -116,12 +268,18 @@
   
 }
 
+void
+BabyXML::add_node(const Node& node)
+{
+  nodes.push_back(node);
+}
+
 #ifdef TEST_BABY_XML
 #include <iostream>
 
 int main()
 {
-  BabyXML xml("<strong>Hello &lt;World&gt; <b>&quot;blabla&quot;</b> Blablub</strong>");
+  BabyXML xml("<strong size='10'>Hello &lt; World&gt; <b>&quot;blabla&quot;</b> Blablub</strong>");
 
   for(BabyXML::iterator i = xml.begin(); i != xml.end(); ++i)
     {
@@ -132,7 +290,14 @@
       else if (i->type == BabyXML::Node::TEXT)
         std::cout << "TEXT: ";
 
-      std::cout << "'" << i->content << "'" << std::endl;
+      std::cout << "'" << i->content << "'";
+
+      for(std::vector<BabyXML::Attribute>::iterator j = i->attributes.begin(); j != i->attributes.end(); ++j)
+        {
+          std::cout << " " << j->name << "=" << j->value;
+        }
+
+      std::cout << std::endl;
     }
 }
 #endif

Modified: trunk/src/baby_xml.hpp
===================================================================
--- trunk/src/baby_xml.hpp	2005-08-26 18:13:08 UTC (rev 1020)
+++ trunk/src/baby_xml.hpp	2005-08-26 20:21:13 UTC (rev 1021)
@@ -34,18 +34,25 @@
 class BabyXML
 {
 public:
-  class Node
+  struct Attribute
   {
-  public:
-    enum Type { TEXT, START_TAG, END_TAG, ENTITY } type;
+    std::string name;
+    std::string value;
+  };
 
+  struct Node
+  {
+    enum Type { NONE, TEXT, START_TAG, END_TAG, ENTITY };
+    typedef std::vector<Attribute> Attributes;
+
+    Type type;
     std::string content;
-    Node() {}
+    Attributes attributes;
+
+    Node() : type(NONE) {}
     Node(Type type_, const std::string& content_ = std::string()) : type(type_), content(content_) {}
   };
 
-  enum State { START, END } state;
-
   typedef std::vector<Node> Nodes;
   typedef Nodes::iterator       iterator;
   typedef Nodes::const_iterator const_iterator;
@@ -56,6 +63,8 @@
   BabyXML(const std::string& text);
   ~BabyXML();
 
+  void add_node(const Node& node);
+
   iterator begin() { return nodes.begin(); }
   iterator end()   { return nodes.end(); }
 };



From grumbel at berlios.de  Sat Aug 27 02:30:50 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 27 Aug 2005 02:30:50 +0200
Subject: [Windstille-commit] r1022 - trunk/data/blender/sophie
Message-ID: <200508270030.j7R0Uo0R014775@sheep.berlios.de>

Author: grumbel
Date: 2005-08-27 02:30:32 +0200 (Sat, 27 Aug 2005)
New Revision: 1022

Modified:
   trunk/data/blender/sophie/sophie.blend
Log:
- uv mapped the low-poly head

Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sat Aug 27 16:09:34 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 27 Aug 2005 16:09:34 +0200
Subject: [Windstille-commit] r1023 - trunk/data/sounds
Message-ID: <200508271409.j7RE9Y34002469@sheep.berlios.de>

Author: grumbel
Date: 2005-08-27 16:09:33 +0200 (Sat, 27 Aug 2005)
New Revision: 1023

Added:
   trunk/data/sounds/fizzle.wav
Log:
- added sound effect

Added: trunk/data/sounds/fizzle.wav
===================================================================
(Binary files differ)


Property changes on: trunk/data/sounds/fizzle.wav
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Sat Aug 27 19:38:03 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 27 Aug 2005 19:38:03 +0200
Subject: [Windstille-commit] r1024 - trunk/data/blender/sophie
Message-ID: <200508271738.j7RHc34K030851@sheep.berlios.de>

Author: grumbel
Date: 2005-08-27 19:38:02 +0200 (Sat, 27 Aug 2005)
New Revision: 1024

Modified:
   trunk/data/blender/sophie/sophie.blend
Log:
- some weight painting on the arm

Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sat Aug 27 22:26:09 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sat, 27 Aug 2005 22:26:09 +0200
Subject: [Windstille-commit] r1025 - trunk/data/blender/sophie
Message-ID: <200508272026.j7RKQ9Fq007595@sheep.berlios.de>

Author: grumbel
Date: 2005-08-27 22:26:07 +0200 (Sat, 27 Aug 2005)
New Revision: 1025

Modified:
   trunk/data/blender/sophie/sophie.blend
Log:
- added armatures for leg'


Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 02:09:29 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 02:09:29 +0200
Subject: [Windstille-commit] r1026 - trunk/data/blender/sophie
Message-ID: <200508280009.j7S09T5E014687@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 02:08:56 +0200 (Sun, 28 Aug 2005)
New Revision: 1026

Modified:
   trunk/data/blender/sophie/sophie.blend
Log:
- added some armature for the head

Modified: trunk/data/blender/sophie/sophie.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 16:22:31 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 16:22:31 +0200
Subject: [Windstille-commit] r1027 - in trunk/data: . models models/characters
Message-ID: <200508281422.j7SEMVdD006391@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 16:22:29 +0200 (Sun, 28 Aug 2005)
New Revision: 1027

Added:
   trunk/data/models/
   trunk/data/models/characters/
   trunk/data/models/characters/bob/
   trunk/data/models/characters/jane/
   trunk/data/models/characters/sophie/
   trunk/data/models/characters/yagor/
   trunk/data/models/enemies/
Log:
- reorganizing the directory hierachie a bit



From grumbel at berlios.de  Sun Aug 28 16:36:15 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 16:36:15 +0200
Subject: [Windstille-commit] r1028 - trunk/data/blender/barkeeper
Message-ID: <200508281436.j7SEaFoS007229@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 16:36:14 +0200 (Sun, 28 Aug 2005)
New Revision: 1028

Added:
   trunk/data/blender/barkeeper/body.png
   trunk/data/blender/barkeeper/body.xcf
   trunk/data/blender/barkeeper/head.png
   trunk/data/blender/barkeeper/head.xcf
Removed:
   trunk/data/blender/barkeeper/barkeeperheadtexture.png
   trunk/data/blender/barkeeper/barkeeperheadtexture.xcf
   trunk/data/blender/barkeeper/barkeepertexture.png
   trunk/data/blender/barkeeper/barkeepertexture.xcf
Modified:
   trunk/data/blender/barkeeper/barkeeper.blend
Log:
- some naming cleanup

Modified: trunk/data/blender/barkeeper/barkeeper.blend
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/barkeeper/barkeeperheadtexture.png
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/barkeeper/barkeeperheadtexture.xcf
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/barkeeper/barkeepertexture.png
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/barkeeper/barkeepertexture.xcf
===================================================================
(Binary files differ)

Copied: trunk/data/blender/barkeeper/body.png (from rev 1006, trunk/data/blender/barkeeper/barkeepertexture.png)

Copied: trunk/data/blender/barkeeper/body.xcf (from rev 1006, trunk/data/blender/barkeeper/barkeepertexture.xcf)

Copied: trunk/data/blender/barkeeper/head.png (from rev 1006, trunk/data/blender/barkeeper/barkeeperheadtexture.png)

Copied: trunk/data/blender/barkeeper/head.xcf (from rev 1006, trunk/data/blender/barkeeper/barkeeperheadtexture.xcf)



From grumbel at berlios.de  Sun Aug 28 17:11:13 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 17:11:13 +0200
Subject: [Windstille-commit] r1029 - trunk/data/blender/barkeeper
Message-ID: <200508281511.j7SFBD6B015229@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 17:11:12 +0200 (Sun, 28 Aug 2005)
New Revision: 1029

Modified:
   trunk/data/blender/barkeeper/barkeeper.blend
Log:
- added basic armature

Modified: trunk/data/blender/barkeeper/barkeeper.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 17:11:59 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 17:11:59 +0200
Subject: [Windstille-commit] r1030 - in trunk/data/blender: . bob
Message-ID: <200508281511.j7SFBx3w015389@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 17:11:57 +0200 (Sun, 28 Aug 2005)
New Revision: 1030

Added:
   trunk/data/blender/bob/
   trunk/data/blender/bob/barkeeper.blend
   trunk/data/blender/bob/body.png
   trunk/data/blender/bob/body.xcf
   trunk/data/blender/bob/head.png
   trunk/data/blender/bob/head.xcf
Removed:
   trunk/data/blender/bob/barkeeper.blend
   trunk/data/blender/bob/barkeeperheadtexture.png
   trunk/data/blender/bob/barkeeperheadtexture.xcf
   trunk/data/blender/bob/barkeepertexture.png
   trunk/data/blender/bob/barkeepertexture.xcf
Log:
- rename

Copied: trunk/data/blender/bob (from rev 1006, trunk/data/blender/barkeeper)

Deleted: trunk/data/blender/bob/barkeeper.blend
===================================================================
(Binary files differ)

Copied: trunk/data/blender/bob/barkeeper.blend (from rev 1029, trunk/data/blender/barkeeper/barkeeper.blend)

Deleted: trunk/data/blender/bob/barkeeperheadtexture.png
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/bob/barkeeperheadtexture.xcf
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/bob/barkeepertexture.png
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/bob/barkeepertexture.xcf
===================================================================
(Binary files differ)

Copied: trunk/data/blender/bob/body.png (from rev 1028, trunk/data/blender/barkeeper/body.png)

Copied: trunk/data/blender/bob/body.xcf (from rev 1028, trunk/data/blender/barkeeper/body.xcf)

Copied: trunk/data/blender/bob/head.png (from rev 1028, trunk/data/blender/barkeeper/head.png)

Copied: trunk/data/blender/bob/head.xcf (from rev 1028, trunk/data/blender/barkeeper/head.xcf)



From grumbel at berlios.de  Sun Aug 28 17:27:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 17:27:41 +0200
Subject: [Windstille-commit] r1031 - trunk/data/blender/bob
Message-ID: <200508281527.j7SFRfxM019313@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 17:27:40 +0200 (Sun, 28 Aug 2005)
New Revision: 1031

Added:
   trunk/data/blender/bob/bob.blend
   trunk/data/blender/bob/bob.xcf
Removed:
   trunk/data/blender/bob/barkeeper.blend
   trunk/data/blender/bob/barkeeper.xcf
Log:
- renames

Deleted: trunk/data/blender/bob/barkeeper.blend
===================================================================
(Binary files differ)

Deleted: trunk/data/blender/bob/barkeeper.xcf
===================================================================
(Binary files differ)

Copied: trunk/data/blender/bob/bob.blend (from rev 1030, trunk/data/blender/bob/barkeeper.blend)

Copied: trunk/data/blender/bob/bob.xcf (from rev 1030, trunk/data/blender/bob/barkeeper.xcf)



From grumbel at berlios.de  Sun Aug 28 18:57:32 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 18:57:32 +0200
Subject: [Windstille-commit] r1032 - trunk/data/blender/bob
Message-ID: <200508281657.j7SGvWJp003519@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 18:57:09 +0200 (Sun, 28 Aug 2005)
New Revision: 1032

Modified:
   trunk/data/blender/bob/bob.blend
Log:
- armature setup might now be complete, needs some more testing

Modified: trunk/data/blender/bob/bob.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 19:56:06 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 19:56:06 +0200
Subject: [Windstille-commit] r1033 - trunk/data/blender/bob
Message-ID: <200508281756.j7SHu6CH024052@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 19:56:03 +0200 (Sun, 28 Aug 2005)
New Revision: 1033

Modified:
   trunk/data/blender/bob/bob.blend
Log:
- added walk animation


Modified: trunk/data/blender/bob/bob.blend
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 20:10:59 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 20:10:59 +0200
Subject: [Windstille-commit] r1034 - trunk/data/models/characters/bob
Message-ID: <200508281810.j7SIAxrV024973@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 20:10:58 +0200 (Sun, 28 Aug 2005)
New Revision: 1034

Added:
   trunk/data/models/characters/bob/bob.wsprite
   trunk/data/models/characters/bob/body.png
   trunk/data/models/characters/bob/head.png
Log:
- added bob with walk animation

Added: trunk/data/models/characters/bob/bob.wsprite
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/characters/bob/bob.wsprite
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/models/characters/bob/body.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/characters/bob/body.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/models/characters/bob/head.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/models/characters/bob/head.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Sun Aug 28 20:16:05 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 20:16:05 +0200
Subject: [Windstille-commit] r1035 - trunk/data/blender/bob
Message-ID: <200508281816.j7SIG5Ao025408@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 20:16:03 +0200 (Sun, 28 Aug 2005)
New Revision: 1035

Modified:
   trunk/data/blender/bob/bob.blend
   trunk/data/blender/bob/body.xcf
   trunk/data/blender/bob/head.xcf
Log:
- improved texture a bit, not really great, just to that its a plain color

Modified: trunk/data/blender/bob/bob.blend
===================================================================
(Binary files differ)

Modified: trunk/data/blender/bob/body.xcf
===================================================================
(Binary files differ)

Modified: trunk/data/blender/bob/head.xcf
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 21:13:53 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 21:13:53 +0200
Subject: [Windstille-commit] r1036 - trunk/data/models/characters/bob
Message-ID: <200508281913.j7SJDroE003295@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 21:13:50 +0200 (Sun, 28 Aug 2005)
New Revision: 1036

Modified:
   trunk/data/models/characters/bob/bob.wsprite
Log:
- added 'Bar' animation

Modified: trunk/data/models/characters/bob/bob.wsprite
===================================================================
(Binary files differ)



From grumbel at berlios.de  Sun Aug 28 21:15:09 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 21:15:09 +0200
Subject: [Windstille-commit] r1037 - trunk/data/levels
Message-ID: <200508281915.j7SJF98N003540@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 21:15:08 +0200 (Sun, 28 Aug 2005)
New Revision: 1037

Modified:
   trunk/data/levels/newformat2.wst
Log:
- added little bar test

Modified: trunk/data/levels/newformat2.wst
===================================================================
--- trunk/data/levels/newformat2.wst	2005-08-28 19:13:50 UTC (rev 1036)
+++ trunk/data/levels/newformat2.wst	2005-08-28 19:15:08 UTC (rev 1037)
@@ -4,13 +4,18 @@
   (version 1)
   (name   "")
   (music  "music/techdemo.ogg")
-  (ambient-color .666 .666 .666)
+  (ambient-color .4 .4 .4)
   (init-script "levels/newformat2.nut")
   (spawnpoint
     (name "default")
     (pos 300 650)
   )
   (objects
+   (vrdummy
+    (name "VRDummy")
+    (pos 600 600)
+    )
+
     (scriptable-object
       (name "Block0Sign")
       (pos 550 370)
@@ -188,10 +193,14 @@
     (character
       (name "bob")
       (pos 320 831)
+      (z-pos -50)
+      (action "Bar")
+      (sprite3d "models/characters/bob/bob.wsprite")
     )
     (character
       (name "frank")
       (pos 200 831)
+      (sprite3d "3dsprites/sophie.wsprite")
     )
     (spider-mine
       (name "spider2")
@@ -207,6 +216,11 @@
 ;      (pos 1100 750)
 ;    )
     (scriptable-object
+      (sprite "images/objects/bar.sprite")
+      (pos 256 746)
+      (z-pos 100))
+
+    (scriptable-object
       (sprite "images/objects/vrdoor-color.sprite")
       (highlight "images/objects/vrdoor-highlight.sprite")
       (pos 384 704)



From grumbel at berlios.de  Sun Aug 28 21:23:14 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Sun, 28 Aug 2005 21:23:14 +0200
Subject: [Windstille-commit] r1038 - trunk/data/images/objects
Message-ID: <200508281923.j7SJNEcJ004140@sheep.berlios.de>

Author: grumbel
Date: 2005-08-28 21:23:09 +0200 (Sun, 28 Aug 2005)
New Revision: 1038

Added:
   trunk/data/images/objects/bar.png
Log:
- ugly bar placeholder

Added: trunk/data/images/objects/bar.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/bar.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Mon Aug 29 02:04:00 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 29 Aug 2005 02:04:00 +0200
Subject: [Windstille-commit] r1039 - trunk/src
Message-ID: <200508290004.j7T040CU015935@sheep.berlios.de>

Author: grumbel
Date: 2005-08-29 02:03:31 +0200 (Mon, 29 Aug 2005)
New Revision: 1039

Modified:
   trunk/src/baby_xml.cpp
   trunk/src/tile_map.cpp
Log:
- fixed throuble handling pure text snippes

Modified: trunk/src/baby_xml.cpp
===================================================================
--- trunk/src/baby_xml.cpp	2005-08-28 19:23:09 UTC (rev 1038)
+++ trunk/src/baby_xml.cpp	2005-08-29 00:03:31 UTC (rev 1039)
@@ -70,6 +70,9 @@
             break;
           }
       }
+
+    if (!content.empty())
+      xml->add_node(BabyXML::Node(BabyXML::Node::TEXT, content));
   }
 
   void skip_space()
@@ -240,6 +243,13 @@
 
   char look_ahead()
   {
+    if (cursor >= int(text.size()))
+      {
+        std::ostringstream str;
+        str << "Syntax Error:" << line_no << ":" << column_no << ": Premature end of text";
+        throw std::runtime_error(str.str());
+      }
+
     return text[cursor];
   }
 
@@ -279,7 +289,8 @@
 
 int main()
 {
-  BabyXML xml("<strong size='10'>Hello &lt; World&gt; <b>&quot;blabla&quot;</b> Blablub</strong>");
+  // BabyXML xml("<strong size='10'>Hello &lt; World&gt; <b>&quot;blabla&quot;</b> Blablub</strong>");
+  BabyXML xml("Hello ");
 
   for(BabyXML::iterator i = xml.begin(); i != xml.end(); ++i)
     {

Modified: trunk/src/tile_map.cpp
===================================================================
--- trunk/src/tile_map.cpp	2005-08-28 19:23:09 UTC (rev 1038)
+++ trunk/src/tile_map.cpp	2005-08-29 00:03:31 UTC (rev 1039)
@@ -62,6 +62,8 @@
           throw std::runtime_error("Couldn't open tiledata file: " + data_filename);
         }
       
+      field = Field<Tile*>(width, height);
+
       for(int y = 0; y < height; ++y)
         for(int x = 0; x < width; ++x)
           {
@@ -82,7 +84,6 @@
       Field<int> tmpfield(width, height);
 
       props.get("data", tmpfield.get_vector());
-
   
       field = Field<Tile*>(width, height);
       for (int y = 0; y < field.get_height (); ++y) 



From grumbel at berlios.de  Mon Aug 29 02:06:41 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 29 Aug 2005 02:06:41 +0200
Subject: [Windstille-commit] r1040 - trunk/src
Message-ID: <200508290006.j7T06fE2017939@sheep.berlios.de>

Author: grumbel
Date: 2005-08-29 02:06:01 +0200 (Mon, 29 Aug 2005)
New Revision: 1040

Modified:
   trunk/src/character.cpp
Log:
- allow to set the action

Modified: trunk/src/character.cpp
===================================================================
--- trunk/src/character.cpp	2005-08-29 00:03:31 UTC (rev 1039)
+++ trunk/src/character.cpp	2005-08-29 00:06:01 UTC (rev 1040)
@@ -39,15 +39,19 @@
   use_verb = "Talk";
 
   std::string sprite3d_filename = "3dsprites/heroken.wsprite";
+  std::string action_name;
 
   lisp::Properties props(lisp);
   props.get("name", name);
   props.get("pos", pos);
   props.get("sprite3d", sprite3d_filename);
+  props.get("action", action_name);
   props.print_unused_warnings("character");
   
   sprite = Sprite3D(sprite3d_filename);
-  //sprite.set_action("Stand");
+
+  if (!action_name.empty())
+    sprite.set_action(action_name);
 }
 
 Character::~Character()



From grumbel at berlios.de  Mon Aug 29 02:47:05 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 29 Aug 2005 02:47:05 +0200
Subject: [Windstille-commit] r1041 - trunk/data/images/objects
Message-ID: <200508290047.j7T0l5da018772@sheep.berlios.de>

Author: grumbel
Date: 2005-08-29 02:46:48 +0200 (Mon, 29 Aug 2005)
New Revision: 1041

Added:
   trunk/data/images/objects/apartmentlamp.png
   trunk/data/images/objects/apartmentlamp.sprite
   trunk/data/images/objects/apartmentlamp_highlight.png
   trunk/data/images/objects/apartmentlamp_highlight.sprite
   trunk/data/images/objects/apartmentlamp_light.png
   trunk/data/images/objects/apartmentlamp_light.sprite
Log:
- added apartment lights

Added: trunk/data/images/objects/apartmentlamp.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/apartmentlamp.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/objects/apartmentlamp.sprite
===================================================================
--- trunk/data/images/objects/apartmentlamp.sprite	2005-08-29 00:06:01 UTC (rev 1040)
+++ trunk/data/images/objects/apartmentlamp.sprite	2005-08-29 00:46:48 UTC (rev 1041)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "apartmentlamp.png")
+    (offset -64 0)
+  )
+)

Added: trunk/data/images/objects/apartmentlamp_highlight.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/apartmentlamp_highlight.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/objects/apartmentlamp_highlight.sprite
===================================================================
--- trunk/data/images/objects/apartmentlamp_highlight.sprite	2005-08-29 00:06:01 UTC (rev 1040)
+++ trunk/data/images/objects/apartmentlamp_highlight.sprite	2005-08-29 00:46:48 UTC (rev 1041)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "apartmentlamp_highlight.png")
+    (offset -101 -40)
+  )
+)

Added: trunk/data/images/objects/apartmentlamp_light.png
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/objects/apartmentlamp_light.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: trunk/data/images/objects/apartmentlamp_light.sprite
===================================================================
--- trunk/data/images/objects/apartmentlamp_light.sprite	2005-08-29 00:06:01 UTC (rev 1040)
+++ trunk/data/images/objects/apartmentlamp_light.sprite	2005-08-29 00:46:48 UTC (rev 1041)
@@ -0,0 +1,7 @@
+(sprite
+  (action
+    (name "default")
+    (images "apartmentlamp_light.png")
+    (offset -400 -90)
+  )
+)



From grumbel at berlios.de  Mon Aug 29 02:47:55 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 29 Aug 2005 02:47:55 +0200
Subject: [Windstille-commit] r1042 - trunk/data/levels
Message-ID: <200508290047.j7T0ltnX018843@sheep.berlios.de>

Author: grumbel
Date: 2005-08-29 02:47:41 +0200 (Mon, 29 Aug 2005)
New Revision: 1042

Modified:
   trunk/data/levels/apartment.wst
Log:
- added apartment lights

Modified: trunk/data/levels/apartment.wst
===================================================================
--- trunk/data/levels/apartment.wst	2005-08-29 00:46:48 UTC (rev 1041)
+++ trunk/data/levels/apartment.wst	2005-08-29 00:47:41 UTC (rev 1042)
@@ -3,7 +3,7 @@
   (version 2)
   (name   "")
   (music  "")
-  (ambient-color .666 .666 .666)
+  (ambient-color .4 .4 .4)
   (objects
   (tilemap (name "background") (width 100) (height 30) (z-pos 0)
     (data
@@ -73,6 +73,25 @@
      ))
 
     (scriptable-object
+      (sprite    "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light     "images/objects/apartmentlamp_light.sprite")
+      (pos 1280 64))
+
+    (scriptable-object
+      (sprite    "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light     "images/objects/apartmentlamp_light.sprite")
+      (pos 768 64))
+
+
+    (scriptable-object
+      (sprite    "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light     "images/objects/apartmentlamp_light.sprite")
+      (pos 256 64))
+
+    (scriptable-object
       (name "Painting1")
       (pos 72 135)
         (z-pos 100)
@@ -80,6 +99,13 @@
       (active #t))
 
     (scriptable-object
+      (name "Painting1")
+      (pos 72 135)
+        (z-pos 100)
+      (sprite "images/objects/painting1.sprite")
+      (active #t))
+
+    (scriptable-object
       (name "Painting2")
       (pos 336 125)
         (z-pos 100)



From grumbel at berlios.de  Tue Aug 30 15:32:56 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:32:56 +0200
Subject: [Windstille-commit] r1043 - in trunk/src: . collision display
Message-ID: <200508301332.j7UDWueB014362@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:32:54 +0200 (Tue, 30 Aug 2005)
New Revision: 1043

Modified:
   trunk/src/collision/collision_engine.cpp
   trunk/src/collision/collision_object.cpp
   trunk/src/collision/collision_object.hpp
   trunk/src/display/display.cpp
   trunk/src/player.cpp
   trunk/src/player.hpp
   trunk/src/sector.cpp
   trunk/src/sector.hpp
   trunk/src/tile.hpp
Log:
- added quite ugly experimental stairs implementation

Modified: trunk/src/collision/collision_engine.cpp
===================================================================
--- trunk/src/collision/collision_engine.cpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/collision/collision_engine.cpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -51,8 +51,26 @@
 void
 CollisionEngine::collision(const CollisionData &result)
 {
-  result.object1->sig_collision() (result);
-  result.object2->sig_collision() (result.invert());
+  if (result.object2->get_is_domains() & result.object1->get_check_domains())
+    {
+      result.object1->sig_collision()(result);
+    }
+  else
+    {
+      std::cout << (result.object2->get_is_domains() & result.object1->get_check_domains()) << std::endl;
+    }
+  
+  unsigned int res1 = result.object1->get_is_domains() & result.object2->get_check_domains();
+
+  if (res1)
+    {
+      result.object2->sig_collision()(result.invert());
+    }
+  else
+    {
+      std::cout << "obj1: " << result.object1->get_is_domains() << std::endl;
+      std::cout << "obj2: " << result.object2->get_check_domains() << std::endl;
+    }
 }
 
 void
@@ -279,7 +297,8 @@
 	{
 	  for(Objects::iterator j = i + 1; j != objects.end(); ++j)
 	    {
-	      if (i != j)
+	      if (i != j && (((*i)->get_is_domains() & (*j)->get_check_domains()) ||
+                             ((*j)->get_is_domains() & (*i)->get_check_domains())))
 		{
 		  CollisionData r = collide(**i, **j, frame);
 		  if(r.state!=CollisionData::NONE)

Modified: trunk/src/collision/collision_object.cpp
===================================================================
--- trunk/src/collision/collision_object.cpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/collision/collision_object.cpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -39,6 +39,9 @@
   velocity           = Vector(0,0);
   pos                = Vector(0,0);
   game_object        = game_object;
+
+  is_domains    = DOMAIN_PLAYER  | DOMAIN_ENEMY;
+  check_domains = DOMAIN_TILEMAP | DOMAIN_PLAYER | DOMAIN_ENEMY;
 }
 
 CollisionObject::CollisionObject(TileMap* tilemap_)
@@ -50,6 +53,9 @@
   velocity           = Vector(0,0);
   pos                = Vector(0,0);
   game_object        = 0;
+
+  is_domains    = DOMAIN_TILEMAP;
+  check_domains = DOMAIN_PLAYER | DOMAIN_ENEMY;
 }
 
 CollisionObject::~CollisionObject()
@@ -117,4 +123,28 @@
   return game_object;
 }
 
+unsigned int
+CollisionObject::get_is_domains() const
+{
+  return is_domains;
+}
+
+void
+CollisionObject::set_is_domains(unsigned int d)
+{
+  is_domains = d;
+}
+
+unsigned int
+CollisionObject::get_check_domains() const
+{
+  return check_domains;
+}
+
+void
+CollisionObject::set_check_domains(unsigned int d)
+{
+  check_domains = d;
+}
+
 /* EOF */

Modified: trunk/src/collision/collision_object.hpp
===================================================================
--- trunk/src/collision/collision_object.hpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/collision/collision_object.hpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -62,7 +62,19 @@
   bool is_unstuckable;
   bool is_unstuck_movable;
 
+  unsigned int is_domains;
+  unsigned int check_domains;
+
 public:
+  /** Domains provide a way to logically seperate objects from each
+      other, so that for example enemies don't check collisions
+      against other enemies, but only against the player */
+  enum Domains {
+    DOMAIN_TILEMAP = (1 << 0),
+    DOMAIN_PLAYER  = (1 << 1), 
+    DOMAIN_ENEMY   = (1 << 2)
+  };
+
   CollisionObject(GameObject* object, const Rectf& rect_);
   CollisionObject(TileMap* tilemap_);
 
@@ -108,6 +120,14 @@
   void set_unstuck(bool s) { is_unstuckable = s; }
   void set_unstuck_movable(bool s) { is_unstuck_movable = s; }
 
+  /** Domains which this object 'is' */
+  unsigned int get_is_domains() const;
+  void         set_is_domains(unsigned int d);
+
+  /** Domains against which the collision object should check */
+  unsigned int get_check_domains() const;
+  void         set_check_domains(unsigned int d);
+
   Signal_v1<const CollisionData &>& sig_collision() { return collision; }
 
   friend class CollisionEngine;

Modified: trunk/src/display/display.cpp
===================================================================
--- trunk/src/display/display.cpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/display/display.cpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -230,7 +230,8 @@
 
 #define cl_pixelcenter_constant 0.375
 
-  glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+  //glOrtho(0.0, window->w, window->h, 0.0, -1000.0, 1000.0);
+  glOrtho(0.0, 800, 600, 0.0, -1000.0, 1000.0);
   glMatrixMode(GL_MODELVIEW);
   glLoadIdentity();
   glTranslated(cl_pixelcenter_constant, cl_pixelcenter_constant, 0.0);

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/player.cpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -26,6 +26,7 @@
 #include "bomb.hpp"
 #include "globals.hpp"
 #include "pda.hpp"
+#include "tile.hpp"
 #include "sprite3d/manager.hpp"
 #include "glutil/surface_manager.hpp"
 #include "particles/particle_system.hpp"
@@ -70,6 +71,8 @@
   slot = c_object->sig_collision().connect(this, &Player::collision);
 
   Sector::current()->get_collision_engine()->add(c_object);
+
+  z_pos = 100.0f;
 }
 
 Player::~Player()
@@ -89,10 +92,17 @@
   flashlighthighlight.set_blend_func(GL_SRC_ALPHA, GL_ONE);
   flashlighthighlight.set_scale(2.0f);
 
-  sc.highlight().draw(flashlighthighlight, pos - Vector(40, 80), 100.0f);
-  sc.light().draw(flashlight, pos - Vector(40, 80), 100.0f);
-  sprite.draw(sc.color(), pos, 100);
+  if (1)
+    { // draw the 'stand-on' tile
+      sc.highlight().fill_rect(Rect(Point(int(pos.x)/32 * 32, (int(pos.y)/32 + 1) * 32),
+                                    Size(32, 32)),
+                               Color(1.0f, 0.0f, 0.0f, 0.5f), 10000.0f);
+    }
 
+  //sc.highlight().draw(flashlighthighlight, pos - Vector(40, 80), 100.0f);
+  //sc.light().draw(flashlight, pos - Vector(40, 80), 100.0f);
+  sprite.draw(sc.color(), pos, z_pos);
+
   Entity* obj = find_useable_entity();
   if (obj)
     {
@@ -175,6 +185,15 @@
         case JUMP_UP_LAND:
           update_jump_up_land();
           break;
+        case PULL_GUN:
+          update_pull_gun();
+          break;
+        case STAIRS_DOWN:
+          update_stairs_down(delta);
+          break;
+        case STAIRS_UP:
+          update_stairs_up(delta);
+          break;
         default:
           assert(false);
           break;
@@ -204,8 +223,44 @@
 Player::update_walk_stand()
 {
   if (controller.get_axis_state(Y_AXIS) > 0) {
-    set_ducking();
-    return;
+    TileMap* tilemap = Sector::current()->get_tilemap2();
+    if (tilemap)
+      {
+        unsigned int col = tilemap->get_pixel(int(pos.x)/32, (int(pos.y)/32 + 1));
+
+        if ((col & TILE_STAIRS) && (get_direction() == WEST && (col & TILE_LEFT) ||
+                                    get_direction() == EAST && (col & TILE_RIGHT)))
+          {
+            std::cout << "Stair mode" << std::endl;
+            state = STAIRS_DOWN;
+            //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
+            Sector::current()->get_collision_engine()->remove(c_object);
+            z_pos = -10.0f;
+            return;
+          }
+        else
+          {
+            set_ducking();
+            return;
+          }
+      }
+  } else if (controller.get_axis_state(Y_AXIS) < 0) {
+    TileMap* tilemap = Sector::current()->get_tilemap2();
+    if (tilemap)
+      {
+        unsigned int col = tilemap->get_pixel(int(pos.x)/32 + ((get_direction() == WEST) ? -1 : +1),
+                                              (int(pos.y)/32));
+
+        if ((col & TILE_STAIRS) && (get_direction() == EAST && (col & TILE_LEFT) ||
+                                    get_direction() == WEST && (col & TILE_RIGHT)))
+          {
+            state = STAIRS_UP;
+            //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
+            Sector::current()->get_collision_engine()->remove(c_object);
+            z_pos = -10.0f;
+            return;
+          }
+      }    
   }
 
   if(state == STAND)
@@ -213,7 +268,69 @@
   else
     update_walk();
 }
-  
+
+void
+Player::update_stairs_up(float delta)
+{
+  if (get_direction() == WEST)
+    {
+      c_object->set_pos(c_object->get_pos() + Vector(-WALK_SPEED, -WALK_SPEED) * delta * 0.7f);
+    }
+  else
+    {
+      c_object->set_pos(c_object->get_pos() + Vector(WALK_SPEED, -WALK_SPEED) * delta * 0.7f);
+    }
+
+  if (!(controller.get_axis_state(Y_AXIS) < 0)) {
+     Sector::current()->get_collision_engine()->add(c_object);
+     set_stand();
+     z_pos = 100.0f;
+  }
+
+  if (0)
+    {
+      TileMap* tilemap = Sector::current()->get_tilemap2();
+      if (tilemap)
+        {
+          unsigned int col = tilemap->get_pixel(int(pos.x)/32, (int(pos.y)/32 + 1));
+          if ((col & TILE_SOLID) && !(col & TILE_STAIRS))
+            {
+              Sector::current()->get_collision_engine()->add(c_object);
+              set_stand();
+            }
+        }
+    }
+
+  velocity = Vector(0, 0);
+}
+
+void
+Player::update_stairs_down(float delta)
+{
+  if (get_direction() == WEST)
+    {
+      c_object->set_pos(c_object->get_pos() + Vector(-WALK_SPEED, WALK_SPEED) * delta * 0.7f);
+    }
+  else
+    {
+      c_object->set_pos(c_object->get_pos() + Vector(WALK_SPEED, WALK_SPEED) * delta * 0.7f);
+    }
+
+  TileMap* tilemap = Sector::current()->get_tilemap2();
+  if (tilemap)
+    {
+      unsigned int col = tilemap->get_pixel(int(pos.x)/32, (int(pos.y)/32 + 1));
+      if ((col & TILE_SOLID) && !(col & TILE_STAIRS))
+        {
+          Sector::current()->get_collision_engine()->add(c_object);
+          set_stand();
+          z_pos = 100.0f;
+        }
+    }
+
+  velocity = Vector(0, 0);
+}
+
 Entity*
 Player::find_useable_entity()
 {
@@ -246,22 +363,30 @@
       return;
     }
     
-  if(controller.button_was_pressed(JUMP_BUTTON)) {
-    set_jump_up_begin();
-    return;
-  }
-
-  if (controller.get_axis_state(X_AXIS) < 0) {
-    if(get_direction() == WEST)
-      set_walk(WEST);
-    else
-      set_turnaround();
-  } else if (controller.get_axis_state(X_AXIS) > 0) {
-    if(get_direction() == EAST)
-      set_walk(EAST);
-    else
-      set_turnaround();
-  }
+  if(controller.button_was_pressed(JUMP_BUTTON)
+     && controller.get_axis_state(Y_AXIS) > 1.0f) 
+    {
+      set_jump_up_begin();
+    } 
+  else if (controller.button_was_pressed(AIM_BUTTON))
+    {
+      sprite.set_action("PullGun");
+      state = PULL_GUN;
+    }
+  else if (controller.get_axis_state(X_AXIS) < 0) 
+    {
+      if(get_direction() == WEST)
+        set_walk(WEST);
+      else
+        set_turnaround();
+    }
+  else if (controller.get_axis_state(X_AXIS) > 0) 
+    {
+      if(get_direction() == EAST)
+        set_walk(EAST);
+      else
+        set_turnaround();
+    }
 }
 
 void
@@ -549,6 +674,16 @@
   }
 }
 
+void
+Player::update_pull_gun()
+{
+  if (!controller.get_button_state(AIM_BUTTON))
+    {
+      sprite.set_next_action("Stand");      
+      state = STAND;
+    }
+}
+
 Direction
 Player::get_direction() const
 {

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/player.hpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -62,6 +62,7 @@
     DUCKED,
     ACCELERATE,
     RUN,
+    PULL_GUN,
     SLOWDOWN,
     STAND_TO_LISTEN,
     LISTEN,
@@ -70,7 +71,9 @@
     JUMP_LAND,
     JUMP_UP_BEGIN,
     JUMP_UP_AIR,
-    JUMP_UP_LAND
+    JUMP_UP_LAND,
+    STAIRS_UP,
+    STAIRS_DOWN
   };
 
 private:
@@ -83,6 +86,7 @@
   Foot jump_foot;
   
   double reload_time;
+  float  z_pos;
   static Player* current_;
 public:
   Player ();
@@ -141,6 +145,10 @@
   void set_jump_up_land();
   void update_jump_up_land();
 
+  void update_pull_gun();
+  void update_stairs_up(float delta);
+  void update_stairs_down(float delta);
+
   /**
    * Sets an action for the sprite. In contrast to sprite->set_action this
    * function will not restart the action if it was already running

Modified: trunk/src/sector.cpp
===================================================================
--- trunk/src/sector.cpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/sector.cpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -76,6 +76,8 @@
 
   current_ = this;
   interactive_tilemap = 0;
+  interactivebackground_tilemap = 0;
+
   parse_file(filename);
   if (!interactive_tilemap)
     throw std::runtime_error("No interactive-tilemap available");
@@ -153,6 +155,8 @@
     add(tilemap);
     if (tilemap->get_name() == "interactive")
       interactive_tilemap = tilemap;
+    else if (tilemap->get_name() == "interactivebackground")
+      interactivebackground_tilemap = tilemap;
   } else if(name == "background") {
     // TODO
   } else if(name == "trigger") {

Modified: trunk/src/sector.hpp
===================================================================
--- trunk/src/sector.hpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/sector.hpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -56,6 +56,7 @@
 
   /** The TileMap with which the player interacts */
   TileMap* interactive_tilemap;
+  TileMap* interactivebackground_tilemap;
 
   CollisionEngine* collision_engine;
 
@@ -106,6 +107,7 @@
 
   std::vector<GameObject*>* get_objects() { return &objects; }
   TileMap* get_tilemap() const { return interactive_tilemap; }
+  TileMap* get_tilemap2() const { return interactivebackground_tilemap; }
   void     set_tilemap(TileMap* t);
   Player* get_player() const
   {

Modified: trunk/src/tile.hpp
===================================================================
--- trunk/src/tile.hpp	2005-08-29 00:47:41 UTC (rev 1042)
+++ trunk/src/tile.hpp	2005-08-30 13:32:54 UTC (rev 1043)
@@ -25,6 +25,14 @@
 #include "glutil/texture.hpp"
 #include "math/rect.hpp"
 
+enum TileType {
+  TILE_EMPTY  = 0,
+  TILE_SOLID  = (1 << 0),
+  TILE_STAIRS = (1 << 1),
+  TILE_LEFT   = (1 << 2),
+  TILE_RIGHT  = (1 << 3)
+};
+
 /** A Tile is a surface or sprite together with information for
  *  collision detection (aka colmap). The collision map is at a
  *  resolution of 8x8 bits. Position information is handled in the
@@ -35,8 +43,10 @@
   /** The id of the Tile by which the tilemap refers to it */
   int id; 
 
-  Rectf color_rect;
-  int   color_packer;
+  // FIXME: Using a surface here might be a worthy consideration, just
+  // need to find a way to properly bucket-sort the request
+  Rectf   color_rect;
+  int     color_packer;
   Texture texture;
 
   /** bitmap that holds the collision attributes for this tile */



From grumbel at berlios.de  Tue Aug 30 15:34:12 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:34:12 +0200
Subject: [Windstille-commit] r1044 - trunk/data/3dsprites
Message-ID: <200508301334.j7UDYC8g014438@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:34:11 +0200 (Tue, 30 Aug 2005)
New Revision: 1044

Removed:
   trunk/data/3dsprites/barkeeper.wsprite
Modified:
   trunk/data/3dsprites/heroken.wsprite
   trunk/data/3dsprites/monster.wsprite
   trunk/data/3dsprites/sophie.wsprite
Log:
- some updates

Deleted: trunk/data/3dsprites/barkeeper.wsprite
===================================================================
(Binary files differ)

Modified: trunk/data/3dsprites/heroken.wsprite
===================================================================
(Binary files differ)

Modified: trunk/data/3dsprites/monster.wsprite
===================================================================
(Binary files differ)

Modified: trunk/data/3dsprites/sophie.wsprite
===================================================================
(Binary files differ)



From grumbel at berlios.de  Tue Aug 30 15:34:54 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:34:54 +0200
Subject: [Windstille-commit] r1045 - trunk/data
Message-ID: <200508301334.j7UDYsBV014485@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:34:53 +0200 (Tue, 30 Aug 2005)
New Revision: 1045

Modified:
   trunk/data/tiles.scm
Log:
marked stairs

Modified: trunk/data/tiles.scm
===================================================================
--- trunk/data/tiles.scm	2005-08-30 13:34:11 UTC (rev 1044)
+++ trunk/data/tiles.scm	2005-08-30 13:34:53 UTC (rev 1045)
@@ -441,10 +441,10 @@
          1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764)
 
         (colmap
-         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
          0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0        
-         0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 0        
-         0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0     
+         0 0 1 1 1 1 1 1 0 0 0 0 0 0 0 7
+         0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0     
          
          0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        
          0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0        



From grumbel at berlios.de  Tue Aug 30 15:35:14 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:35:14 +0200
Subject: [Windstille-commit] r1046 - trunk/data/images/tiles
Message-ID: <200508301335.j7UDZEN0014542@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:35:11 +0200 (Tue, 30 Aug 2005)
New Revision: 1046

Modified:
   trunk/data/images/tiles/apartment-foreground.png
Log:
- added stairs

Modified: trunk/data/images/tiles/apartment-foreground.png
===================================================================
(Binary files differ)



From grumbel at berlios.de  Tue Aug 30 15:36:26 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:36:26 +0200
Subject: [Windstille-commit] r1047 - trunk/data/images/tiles
Message-ID: <200508301336.j7UDaQfV014593@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:36:25 +0200 (Tue, 30 Aug 2005)
New Revision: 1047

Added:
   trunk/data/images/tiles/bluestone.xcf
Log:
- added bluestone

Added: trunk/data/images/tiles/bluestone.xcf
===================================================================
(Binary files differ)


Property changes on: trunk/data/images/tiles/bluestone.xcf
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From grumbel at berlios.de  Tue Aug 30 15:39:18 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:39:18 +0200
Subject: [Windstille-commit] r1048 - trunk/data/levels
Message-ID: <200508301339.j7UDdIpe014748@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:39:16 +0200 (Tue, 30 Aug 2005)
New Revision: 1048

Modified:
   trunk/data/levels/apartment.wst
   trunk/data/levels/bluestone.wst
   trunk/data/levels/industrial.wst
   trunk/data/levels/newformat2.wst
Log:
- added stairs and some other minor changes

Modified: trunk/data/levels/apartment.wst
===================================================================
--- trunk/data/levels/apartment.wst	2005-08-30 13:36:25 UTC (rev 1047)
+++ trunk/data/levels/apartment.wst	2005-08-30 13:39:16 UTC (rev 1048)
@@ -1,11 +1,10 @@
 ;; Generated by Flexlay Editor
 (windstille-sector
   (version 2)
-  (name   "")
+  (ambient-color .666 .666 .666)  (name   "")
   (music  "")
-  (ambient-color .4 .4 .4)
   (objects
-  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+  (tilemap (name "background") (width 100) (height 30) (z-pos -100)
     (data
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
@@ -38,87 +37,79 @@
       1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1895 1896 1801 1802 1797 1798 1799 1800 1801 1802 1797 1798 1897 1898 
       1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1911 1912 1817 1818 1813 1814 1815 1816 1817 1818 1813 1814 1913 1914 
      ))
-  (tilemap (name "interactive") (width 100) (height 30) (z-pos -10)
+  (tilemap (name "interactivebackground") (width 100) (height 30) (z-pos 0)
     (data
-      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1667 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1643 1644 1667 1668 1699 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1668 1699 1700 1731 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1699 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
-      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 10)
+    (data
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1667 1668 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1655 1656 1657 1658 1659 1660 1655 1658 1659 1660 1655 1656 1657 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1671 1672 1673 1674 1675 1676 1671 1674 1675 1676 1671 1672 1673 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1700 1731 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 1651 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1683 1684 1715 1716 0 0 1651 1652 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1700 1731 1732 0 1651 1667 1668 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
       1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1651 1652 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1667 1668 1699 1700 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1683 1684 1715 1716 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1699 1700 1731 1732 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1656 1657 1658 1659 1660 1655 1656 1657 1658 1659 1660 1655 1656 1657 1658 
+      1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1672 1673 1674 1675 1676 1671 1672 1673 1674 1675 1676 1671 1672 1673 1674 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
       0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
      ))
-
-    (scriptable-object
-      (sprite    "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light     "images/objects/apartmentlamp_light.sprite")
-      (pos 1280 64))
-
-    (scriptable-object
-      (sprite    "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light     "images/objects/apartmentlamp_light.sprite")
-      (pos 768 64))
-
-
-    (scriptable-object
-      (sprite    "images/objects/apartmentlamp.sprite")
-      (highlight "images/objects/apartmentlamp_highlight.sprite")
-      (light     "images/objects/apartmentlamp_light.sprite")
-      (pos 256 64))
-
-    (scriptable-object
-      (name "Painting1")
-      (pos 72 135)
-        (z-pos 100)
-      (sprite "images/objects/painting1.sprite")
-      (active #t))
-
-    (scriptable-object
-      (name "Painting1")
-      (pos 72 135)
-        (z-pos 100)
-      (sprite "images/objects/painting1.sprite")
-      (active #t))
-
-    (scriptable-object
-      (name "Painting2")
-      (pos 336 125)
-        (z-pos 100)
-      (sprite "images/objects/painting2.sprite")
-      (active #t))
-
-    (scriptable-object
-      (name "Painting3")
-      (pos 563 131)
-        (z-pos 100)
-      (sprite "images/objects/painting3.sprite")
-      (active #t))
-
+(scriptable-object (sprite "images/objects/apartmentlamp.sprite") (highlight "images/objects/apartmentlamp_highlight.sprite") (light "images/objects/apartmentlamp_light.sprite") (pos 1280 64))
+(scriptable-object (sprite "images/objects/apartmentlamp.sprite") (highlight "images/objects/apartmentlamp_highlight.sprite") (light "images/objects/apartmentlamp_light.sprite") (pos 768 64))
+(scriptable-object (sprite "images/objects/apartmentlamp.sprite") (highlight "images/objects/apartmentlamp_highlight.sprite") (light "images/objects/apartmentlamp_light.sprite") (pos 256 64))
+(scriptable-object (name "Painting1") (pos 72 135) (z-pos 100) (sprite "images/objects/painting1.sprite") (active true))
+(scriptable-object (name "Painting1") (pos 72 135) (z-pos 100) (sprite "images/objects/painting1.sprite") (active true))
+(scriptable-object (name "Painting2") (pos 336 125) (z-pos 100) (sprite "images/objects/painting2.sprite") (active true))
+(scriptable-object (name "Painting3") (pos 563 131) (z-pos 100) (sprite "images/objects/painting3.sprite") (active true))
    )
  )
 

Modified: trunk/data/levels/bluestone.wst
===================================================================
--- trunk/data/levels/bluestone.wst	2005-08-30 13:36:25 UTC (rev 1047)
+++ trunk/data/levels/bluestone.wst	2005-08-30 13:39:16 UTC (rev 1048)
@@ -7,36 +7,36 @@
   (objects
   (tilemap (name "background") (width 100) (height 30) (z-pos 0)
     (data
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
-      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
      ))
   (tilemap (name "interactive") (width 100) (height 30) (z-pos 120)
     (data

Modified: trunk/data/levels/industrial.wst
===================================================================
--- trunk/data/levels/industrial.wst	2005-08-30 13:36:25 UTC (rev 1047)
+++ trunk/data/levels/industrial.wst	2005-08-30 13:39:16 UTC (rev 1048)
@@ -4,7 +4,49 @@
   (name   "")
   (music  "")
   (ambient-color .4 .4 .4)
+  (spawnpoint
+    (name "default")
+    (pos 400 650)
+  )
   (objects
+    (swarm 
+        (pos 300 600)
+        (count 10))
+
+    ;; Smoke
+    (particle-system
+     (lifetime   2.0)
+     (count      35)
+     (pos       0 0)
+
+     (z-pos  1000)
+     (spawn-point 386 736)
+     (velocity    50 60)
+     (cone   -110 -80)
+     (gravity -1.5 0.5)
+     (size   0.05 1.0)
+     (drawer (surface-drawer (image "images/particles/smoke2.png")))
+     (distribution (point-distribution))
+     )
+
+
+    ;; Smoke
+    (particle-system
+     (lifetime   1.5)
+     (count      35)
+     (pos       0 0)
+
+     (z-pos  1000)
+     (spawn-point 900 736)
+     (velocity    150 160)
+     (cone   -110 -80)
+     (gravity -1.5 0.5)
+     (size   0.15 0.5)
+     (drawer (surface-drawer (image "images/particles/smoke2.png")))
+     (distribution (point-distribution))
+     )
+
+
     (scriptable-object
       (name "Lamp")
       (pos 256 736)
@@ -13,6 +55,12 @@
       (light "images/streetlamp-light.sprite")
       (active #t))
 
+   (character
+      (name "bob")
+      (sprite3d "3dsprites/barkeeper.wsprite")
+      (pos 768 736)
+    )
+ 
     (scriptable-object
       (name "Lamp")
       (pos 768 736)

Modified: trunk/data/levels/newformat2.wst
===================================================================
--- trunk/data/levels/newformat2.wst	2005-08-30 13:36:25 UTC (rev 1047)
+++ trunk/data/levels/newformat2.wst	2005-08-30 13:39:16 UTC (rev 1048)
@@ -228,6 +228,14 @@
       (use-verb "Enter")
     )
 
+
+    (scriptable-object
+      (sprite    "images/objects/apartmentlamp.sprite")
+      (highlight "images/objects/apartmentlamp_highlight.sprite")
+      (light     "images/objects/apartmentlamp_light.sprite")
+      (pos 320 640))
+
+
   (tilemap (name "background") (width 100) (height 30) (z-pos -1000)
     (data
       257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 



From grumbel at berlios.de  Tue Aug 30 15:39:28 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 15:39:28 +0200
Subject: [Windstille-commit] r1049 - trunk/data/levels
Message-ID: <200508301339.j7UDdSWk014778@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 15:39:27 +0200 (Tue, 30 Aug 2005)
New Revision: 1049

Added:
   trunk/data/levels/virtualreality.wst
Log:
- added stairs and some other minor changes

Added: trunk/data/levels/virtualreality.wst
===================================================================
--- trunk/data/levels/virtualreality.wst	2005-08-30 13:39:16 UTC (rev 1048)
+++ trunk/data/levels/virtualreality.wst	2005-08-30 13:39:27 UTC (rev 1049)
@@ -0,0 +1,106 @@
+;; Generated by Flexlay Editor
+(windstille-sector
+  (version 2)
+  (ambient-color .666 .666 .666)  (name   "")
+  (music  "")
+  (objects
+  (tilemap (name "background") (width 100) (height 30) (z-pos 0)
+    (data
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+      257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 261 262 257 258 259 260 
+      263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 267 268 263 264 265 266 
+      269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 273 274 269 270 271 272 
+      275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 279 280 275 276 277 278 
+      281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 285 286 281 282 283 284 
+      287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 291 292 287 288 289 290 
+     ))
+  (tilemap (name "interactive") (width 100) (height 30) (z-pos 0)
+    (data
+      50 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 51 52 53 
+      66 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 69 
+      82 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 83 84 85 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 50 55 56 57 58 53 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 3 4 3 3 4 4 3 4 3 3 4 4 3 4 3 3 4 4 5 6 0 0 0 0 65 66 67 68 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 17 18 19 20 19 20 19 19 20 20 19 20 19 19 20 20 19 20 19 19 20 20 21 22 0 0 0 0 81 82 83 84 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 65 66 67 68 67 68 67 67 68 68 67 68 67 67 68 68 67 68 67 67 68 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 81 82 83 84 83 84 83 83 84 84 83 84 83 83 84 84 83 84 83 83 84 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 0 0 1 2 3 4 5 6 1 2 3 4 5 6 0 0 1 2 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 17 18 19 20 21 22 0 0 17 18 19 20 21 22 17 18 19 20 21 22 0 0 17 18 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 1 2 3 4 41 42 7 8 69 70 0 0 65 66 67 68 69 70 65 66 67 68 69 70 0 0 65 66 9 10 39 40 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 17 18 19 20 57 58 23 24 85 86 0 0 81 82 83 84 85 86 81 82 83 84 85 86 0 0 81 82 25 26 55 56 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 65 66 67 68 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 65 66 67 68 69 70 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 81 82 83 84 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 81 82 83 84 85 86 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 0 1 2 3 4 3 4 5 6 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 0 17 18 19 20 19 20 21 22 0 0 0 
+      2 3 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 3 4 5 6 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 0 33 34 7 8 9 10 37 38 0 0 0 
+      18 19 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 19 20 21 22 0 0 0 49 50 55 56 57 58 53 54 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 0 49 50 23 24 25 26 53 54 0 0 0 
+      66 67 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 67 68 69 70 0 0 0 65 66 67 68 67 68 69 70 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 0 33 34 39 40 41 42 53 54 0 0 0 
+     ))
+  (tilemap (name "foreground") (width 100) (height 30) (z-pos 0)
+    (data
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
+     ))
+))
\ No newline at end of file



From grumbel at berlios.de  Tue Aug 30 20:01:35 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 30 Aug 2005 20:01:35 +0200
Subject: [Windstille-commit] r1050 - trunk/src/collision
Message-ID: <200508301801.j7UI1ZYw015031@sheep.berlios.de>

Author: grumbel
Date: 2005-08-30 20:01:34 +0200 (Tue, 30 Aug 2005)
New Revision: 1050

Added:
   trunk/src/collision/contact.hpp
   trunk/src/collision/stair_contact.cpp
   trunk/src/collision/stair_contact.hpp
Log:
- only empty placeholder for now

Added: trunk/src/collision/contact.hpp
===================================================================
--- trunk/src/collision/contact.hpp	2005-08-30 13:39:27 UTC (rev 1049)
+++ trunk/src/collision/contact.hpp	2005-08-30 18:01:34 UTC (rev 1050)
@@ -0,0 +1,48 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_WINDSTILLE_COLLISION_CONTACT_HPP
+#define HEADER_WINDSTILLE_COLLISION_CONTACT_HPP
+
+/** A Contact is a helper class that allows the player to either
+    attach to other objects or move along them */
+class Contact
+{
+private:
+public:
+  Contact()  {}
+  ~Contact() {}
+
+  virtual void set_velocity(float a) =0;
+  virtual void update(float delta) =0;
+
+private:
+  Contact (const Contact&);
+  Contact& operator= (const Contact&);
+};
+
+#endif
+
+/* EOF */

Added: trunk/src/collision/stair_contact.cpp
===================================================================
--- trunk/src/collision/stair_contact.cpp	2005-08-30 13:39:27 UTC (rev 1049)
+++ trunk/src/collision/stair_contact.cpp	2005-08-30 18:01:34 UTC (rev 1050)
@@ -0,0 +1,43 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#include "stair_contact.hpp"
+
+StairContact::StairContact()
+{
+}
+
+void
+StairContact::set_velocity(float a)
+{
+  
+}
+
+void
+StairContact::update(float delta)
+{
+}
+
+/* EOF */

Added: trunk/src/collision/stair_contact.hpp
===================================================================
--- trunk/src/collision/stair_contact.hpp	2005-08-30 13:39:27 UTC (rev 1049)
+++ trunk/src/collision/stair_contact.hpp	2005-08-30 18:01:34 UTC (rev 1050)
@@ -0,0 +1,48 @@
+/*  $Id$
+**   __      __ __             ___        __   __ __   __
+**  /  \    /  \__| ____    __| _/_______/  |_|__|  | |  |   ____
+**  \   \/\/   /  |/    \  / __ |/  ___/\   __\  |  | |  | _/ __ \
+**   \        /|  |   |  \/ /_/ |\___ \  |  | |  |  |_|  |_\  ___/
+**    \__/\  / |__|___|  /\____ /____  > |__| |__|____/____/\___  >
+**         \/          \/      \/    \/                         \/
+**  Copyright (C) 2005 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software; you can redistribute it and/or
+**  modify it under the terms of the GNU General Public License
+**  as published by the Free Software Foundation; either version 2
+**  of the License, or (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+** 
+**  You should have received a copy of the GNU General Public License
+**  along with this program; if not, write to the Free Software
+**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+**  02111-1307, USA.
+*/
+
+#ifndef HEADER_STAIR_CONTACT_HPP
+#define HEADER_STAIR_CONTACT_HPP
+
+#include "contact.hpp"
+
+/** A special contact to walk stairs up or down */
+class StairContact : public Contact
+{
+private:
+public:
+  StairContact();
+  
+  void set_velocity(float a);
+  void update(float delta);
+
+private:
+  StairContact (const StairContact&);
+  StairContact& operator= (const StairContact&);
+};
+
+#endif
+
+/* EOF */



From grumbel at berlios.de  Wed Aug 31 23:55:06 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 31 Aug 2005 23:55:06 +0200
Subject: [Windstille-commit] r1051 - in trunk/src: . collision
Message-ID: <200508312155.j7VLt6OW008300@sheep.berlios.de>

Author: grumbel
Date: 2005-08-31 23:55:04 +0200 (Wed, 31 Aug 2005)
New Revision: 1051

Modified:
   trunk/src/collision/Jamfile
   trunk/src/collision/contact.hpp
   trunk/src/collision/stair_contact.cpp
   trunk/src/collision/stair_contact.hpp
   trunk/src/player.cpp
   trunk/src/player.hpp
Log:
- changed stair implementation a bit

Modified: trunk/src/collision/Jamfile
===================================================================
--- trunk/src/collision/Jamfile	2005-08-30 18:01:34 UTC (rev 1050)
+++ trunk/src/collision/Jamfile	2005-08-31 21:55:04 UTC (rev 1051)
@@ -9,6 +9,9 @@
   collision_object.hpp
   collision_test.cpp
   collision_test.hpp
+  contact.hpp
+  stair_contact.hpp
+  stair_contact.cpp
 ;
 
 TRANSLATABLE_SOURCES += [ SearchSource $(sources) ] ;

Modified: trunk/src/collision/contact.hpp
===================================================================
--- trunk/src/collision/contact.hpp	2005-08-30 18:01:34 UTC (rev 1050)
+++ trunk/src/collision/contact.hpp	2005-08-31 21:55:04 UTC (rev 1051)
@@ -33,11 +33,12 @@
 private:
 public:
   Contact()  {}
-  ~Contact() {}
+  virtual ~Contact() {}
 
-  virtual void set_velocity(float a) =0;
   virtual void update(float delta) =0;
-
+  virtual void advance(float s) =0;
+  virtual bool is_active() const =0;
+  virtual Vector get_pos() const =0;
 private:
   Contact (const Contact&);
   Contact& operator= (const Contact&);

Modified: trunk/src/collision/stair_contact.cpp
===================================================================
--- trunk/src/collision/stair_contact.cpp	2005-08-30 18:01:34 UTC (rev 1050)
+++ trunk/src/collision/stair_contact.cpp	2005-08-31 21:55:04 UTC (rev 1051)
@@ -23,21 +23,104 @@
 **  02111-1307, USA.
 */
 
+#include <iostream>
+#include "tile.hpp"
+#include "tile_map.hpp"
 #include "stair_contact.hpp"
 
-StairContact::StairContact()
+StairContact::StairContact(TileMap* tilemap_, const Point& pos_)
+  : tilemap(tilemap_), pos(pos_), advancement(0.0f)
 {
+  unsigned int col = tilemap->get_pixel(pos.x, pos.y);
+  if (!(col & TILE_STAIRS))
+    std::cout << "Warning: StairContact: Given tile is no stair tile" << std::endl;
+
+  tile_type = col;
 }
 
 void
-StairContact::set_velocity(float a)
+StairContact::update(float delta)
 {
+  // shouldn't be needed!?
+}
+
+void
+StairContact::advance(float s)
+{
+  if (s == 0)
+    return;
+
+  s /= 32.0f;
+
+  //std::cout << "Advance: (" << pos.x << ", " << pos.y << ") " << advancement << " " << s << std::endl;
   
+  float step = (s > 0.0f) ? 1.0f : -1.0f;
+
+  // advancement must happen tile by tile  
+  while ((fabs(s) > fabs(step)) && is_active())
+    {
+      advancement += step;
+      s -= step;
+
+      // increment tile position, based on tile direction
+      // can be up/down, left/rigth
+      advance_or_not();
+    }
+
+  advancement += s;
+  advance_or_not();
 }
 
 void
-StairContact::update(float delta)
+StairContact::advance_or_not()
 {
+  if (tile_type & TILE_LEFT)
+    {
+      if (advancement < -0.5f)
+        {
+          pos.x -= 1;
+          pos.y += 1;
+          advancement += 1.0f;
+        }
+      else if (advancement > 0.5f)
+        {
+          pos.x += 1;
+          pos.y -= 1;
+          advancement -= 1.0f;
+        }
+    }
+  else if (tile_type & TILE_RIGHT)
+    {
+      if (advancement < -0.5f)
+        {
+          pos.x += 1;
+          pos.y -= 1;
+          advancement += 1.0f;
+        }
+      else if (advancement > 0.5f)
+        {
+          pos.x -= 1;
+          pos.y += 1;
+          advancement -= 1.0f;
+        }
+    }
 }
 
+Vector
+StairContact::get_pos() const
+{
+  if (tile_type & TILE_RIGHT)
+    return Vector(pos.x * 32 + 16 + 32 * advancement,
+                  pos.y * 32 + 16 + 32 * advancement);
+  else // (tile_type & TILE_LEFT)
+    return Vector(pos.x * 32 + 16 + 32 * advancement,
+                  pos.y * 32 + 16 - 32 * advancement);
+}
+
+bool
+StairContact::is_active() const
+{
+  return (tilemap->get_pixel(pos.x, pos.y) & TILE_STAIRS);
+}
+
 /* EOF */

Modified: trunk/src/collision/stair_contact.hpp
===================================================================
--- trunk/src/collision/stair_contact.hpp	2005-08-30 18:01:34 UTC (rev 1050)
+++ trunk/src/collision/stair_contact.hpp	2005-08-31 21:55:04 UTC (rev 1051)
@@ -28,17 +28,43 @@
 
 #include "contact.hpp"
 
+class TileMap;
+
 /** A special contact to walk stairs up or down */
 class StairContact : public Contact
 {
 private:
+  /** The tilemap with which the contact interacts */
+  TileMap* tilemap;
+
+  /** Current position in unit of tiles */
+  Point pos;
+
+  /** Amount of how much we are away from the center of the tile, its
+      in range [-0.5, 0.5], else we move on to the next tile.
+      advancement is in sync with the x-axis, y-axis depend on
+      direction */
+  float advancement;
+
+  unsigned int tile_type;
+
 public:
-  StairContact();
+  StairContact(TileMap* tilemap, const Point& p);
   
-  void set_velocity(float a);
   void update(float delta);
 
+  /** Move the contact forward or backward across the stairs */
+  void advance(float s);
+
+  /** Get the current position in world coordinates */
+  Vector get_pos() const;
+
+  /** Return false when the given contact has left the stairs */
+  bool is_active() const;
+
 private:
+  void advance_or_not();
+
   StairContact (const StairContact&);
   StairContact& operator= (const StairContact&);
 };

Modified: trunk/src/player.cpp
===================================================================
--- trunk/src/player.cpp	2005-08-30 18:01:34 UTC (rev 1050)
+++ trunk/src/player.cpp	2005-08-31 21:55:04 UTC (rev 1051)
@@ -32,6 +32,7 @@
 #include "particles/particle_system.hpp"
 #include "collision/collision_engine.hpp"
 #include "laser_pointer.hpp"
+#include "collision/stair_contact.hpp"
 #include "game_session.hpp"
 #include "console.hpp"
 
@@ -73,6 +74,8 @@
   Sector::current()->get_collision_engine()->add(c_object);
 
   z_pos = 100.0f;
+
+  contact = 0;
 }
 
 Player::~Player()
@@ -134,7 +137,7 @@
 }
 
 void 
-Player::update (float delta)
+Player::update(float delta)
 {
   laser_pointer->update(delta);
 
@@ -189,10 +192,8 @@
           update_pull_gun();
           break;
         case STAIRS_DOWN:
-          update_stairs_down(delta);
-          break;
         case STAIRS_UP:
-          update_stairs_up(delta);
+          update_stairs(delta);
           break;
         default:
           assert(false);
@@ -226,11 +227,15 @@
     TileMap* tilemap = Sector::current()->get_tilemap2();
     if (tilemap)
       {
-        unsigned int col = tilemap->get_pixel(int(pos.x)/32, (int(pos.y)/32 + 1));
+        Point p(int(pos.x)/32, (int(pos.y)/32 + 1));
+        unsigned int col = tilemap->get_pixel(p.x, p.y);
 
         if ((col & TILE_STAIRS) && (get_direction() == WEST && (col & TILE_LEFT) ||
                                     get_direction() == EAST && (col & TILE_RIGHT)))
           {
+            delete contact;
+            contact = new StairContact(tilemap, p);
+
             std::cout << "Stair mode" << std::endl;
             state = STAIRS_DOWN;
             //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
@@ -248,12 +253,15 @@
     TileMap* tilemap = Sector::current()->get_tilemap2();
     if (tilemap)
       {
-        unsigned int col = tilemap->get_pixel(int(pos.x)/32 + ((get_direction() == WEST) ? -1 : +1),
-                                              (int(pos.y)/32));
+        Point p(int(pos.x)/32 + ((get_direction() == WEST) ? -1 : +1), (int(pos.y)/32));
+        unsigned int col = tilemap->get_pixel(p.x, p.y);
 
         if ((col & TILE_STAIRS) && (get_direction() == EAST && (col & TILE_LEFT) ||
                                     get_direction() == WEST && (col & TILE_RIGHT)))
           {
+            delete contact;
+            contact = new StairContact(tilemap, p);
+
             state = STAIRS_UP;
             //c_object->get_check_domains() & (~CollisionObject::DOMAIN_TILEMAP));
             Sector::current()->get_collision_engine()->remove(c_object);
@@ -270,65 +278,25 @@
 }
 
 void
-Player::update_stairs_up(float delta)
+Player::update_stairs(float delta)
 {
-  if (get_direction() == WEST)
-    {
-      c_object->set_pos(c_object->get_pos() + Vector(-WALK_SPEED, -WALK_SPEED) * delta * 0.7f);
-    }
-  else
-    {
-      c_object->set_pos(c_object->get_pos() + Vector(WALK_SPEED, -WALK_SPEED) * delta * 0.7f);
-    }
+  assert(contact);
 
-  if (!(controller.get_axis_state(Y_AXIS) < 0)) {
-     Sector::current()->get_collision_engine()->add(c_object);
-     set_stand();
-     z_pos = 100.0f;
-  }
+  if (controller.get_axis_state(X_AXIS) < 0 ||
+      controller.get_axis_state(Y_AXIS) > 0)
+    contact->advance(-WALK_SPEED * delta * 0.7f);
+  else if (controller.get_axis_state(X_AXIS) > 0 ||
+           controller.get_axis_state(Y_AXIS) < 0)
+    contact->advance(WALK_SPEED * delta * 0.7f);
 
-  if (0)
-    {
-      TileMap* tilemap = Sector::current()->get_tilemap2();
-      if (tilemap)
-        {
-          unsigned int col = tilemap->get_pixel(int(pos.x)/32, (int(pos.y)/32 + 1));
-          if ((col & TILE_SOLID) && !(col & TILE_STAIRS))
-            {
-              Sector::current()->get_collision_engine()->add(c_object);
-              set_stand();
-            }
-        }
-    }
-
   velocity = Vector(0, 0);
-}
+  c_object->set_pos(contact->get_pos());
 
-void
-Player::update_stairs_down(float delta)
-{
-  if (get_direction() == WEST)
+  if (!contact->is_active())
     {
-      c_object->set_pos(c_object->get_pos() + Vector(-WALK_SPEED, WALK_SPEED) * delta * 0.7f);
+      Sector::current()->get_collision_engine()->add(c_object);
+      state = STAND;
     }
-  else
-    {
-      c_object->set_pos(c_object->get_pos() + Vector(WALK_SPEED, WALK_SPEED) * delta * 0.7f);
-    }
-
-  TileMap* tilemap = Sector::current()->get_tilemap2();
-  if (tilemap)
-    {
-      unsigned int col = tilemap->get_pixel(int(pos.x)/32, (int(pos.y)/32 + 1));
-      if ((col & TILE_SOLID) && !(col & TILE_STAIRS))
-        {
-          Sector::current()->get_collision_engine()->add(c_object);
-          set_stand();
-          z_pos = 100.0f;
-        }
-    }
-
-  velocity = Vector(0, 0);
 }
 
 Entity*

Modified: trunk/src/player.hpp
===================================================================
--- trunk/src/player.hpp	2005-08-30 18:01:34 UTC (rev 1050)
+++ trunk/src/player.hpp	2005-08-31 21:55:04 UTC (rev 1051)
@@ -30,6 +30,7 @@
 #include "glutil/surface.hpp"
 
 class Controller;
+class Contact;
 class LaserPointer;
 
 class Player : public Entity
@@ -52,6 +53,8 @@
   Slot slot;
 
   LaserPointer* laser_pointer;
+  Contact* contact;
+
 public:
   enum State
   {
@@ -146,8 +149,7 @@
   void update_jump_up_land();
 
   void update_pull_gun();
-  void update_stairs_up(float delta);
-  void update_stairs_down(float delta);
+  void update_stairs(float delta);
 
   /**
    * Sets an action for the sprite. In contrast to sprite->set_action this



