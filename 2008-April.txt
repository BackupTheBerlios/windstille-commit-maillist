From grumbel at mail.berlios.de  Wed Apr 23 02:33:39 2008
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 23 Apr 2008 02:33:39 +0200
Subject: [Windstille-commit] r1600 - in trunk/windstille: . src
Message-ID: <200804230033.m3N0Xdtu006858@sheep.berlios.de>

Author: grumbel
Date: 2008-04-23 02:33:37 +0200 (Wed, 23 Apr 2008)
New Revision: 1600

Removed:
   trunk/windstille/Jamfile
   trunk/windstille/Jamrules
   trunk/windstille/mk/
   trunk/windstille/src/Jamfile
Modified:
   trunk/windstille/
Log:
- cleaning up jamfiles


Property changes on: trunk/windstille
___________________________________________________________________
Name: svn:ignore
   - 
aclocal.m4
autom4te.cache
cache
cache/
config.h.in
config.log
config.status
configure
custom.py
Jamconfig
Jamconfig.in
options.cache
.sconf_temp
.sconf_temp/
.sconsign.dblite
windstille

   + cache
custom.py
options.cache
.sconf_temp
.sconsign.dblite
windstille


Deleted: trunk/windstille/Jamfile
===================================================================
--- trunk/windstille/Jamfile	2008-03-17 20:15:47 UTC (rev 1599)
+++ trunk/windstille/Jamfile	2008-04-23 00:33:37 UTC (rev 1600)
@@ -1,17 +0,0 @@
-SubDir TOP ;
-
-# Decend into subdirs
-SubInclude TOP lib ;
-SubInclude TOP tools miniswig ;
-SubInclude TOP src ;
-SubInclude TOP data ;
-
-UseAutoconf ;
-
-# add some additional files to package
-Package INSTALL NEWS README COPYING AUTHORS ChangeLog ;
-
-MakePot data/locale/messages.pot : $(TRANSLATABLE_SOURCES) ;
-XGETTEXT_FLAGS on data/locale/messages.pot += --language=C++ ;
-
-InstallDoc README COPYING AUTHORS ChangeLog BUGS ;

Deleted: trunk/windstille/Jamrules
===================================================================
--- trunk/windstille/Jamrules	2008-03-17 20:15:47 UTC (rev 1599)
+++ trunk/windstille/Jamrules	2008-04-23 00:33:37 UTC (rev 1600)
@@ -1,84 +0,0 @@
-if ! $(top_builddir)
-{
-    top_builddir = $(TOP) ;
-}
-top_srcdir = $(TOP) ;
-
-# unset some stuff defined in Jambase
-LEX = ;
-
-JAMCONFIG ?= $(top_builddir)/Jamconfig ;
-include $(JAMCONFIG) ;
-if ! $(JAMCONFIG_READ)
-{
-  EXIT "Couldn't find config. Please run 'configure' first." ;
-}
-
-if $(USE_STLPORT_DEBUG)
-{
-  CXXFLAGS += -I/usr/include/stlport ;
-  CXXFLAGS += -D_STLP_DEBUG=1 -D_STLP_DEBUG_UNINITIALIZED=1 ;
-  CXXFLAGS += -D_STLP_SHRED_BYTE=0xA3 ;
-  LIBS += -lstlport_gcc_debug ;
-}
-
-CPPFLAGS += -include config.h ;
-
-switch $(VARIANT) {
-    case optimize :
-        CFLAGS += -Wall -O3 -g ;
-        CXXFLAGS += -Wall -O3 -g ;
-        LIBS += -g ;
-    case debug :
-        CFLAGS += -Wall -W -O0 -g3 -DDEBUG ;
-        CXXFLAGS += -Wall -W -O0 -g3 -DDEBUG ;
-        LIBS += -g3 ;
-    case profile :
-        CFLAGS += -Wall -W -O3 -g3 -pg ;
-        CXXFLAGS += -Wall -W -O3 -g3 -pg ;
-        LIBS += -g3 -pg ;
-    case * :
-        EXIT "Invalid variant $(VARIANT) selected" ;
-}
-
-LINK = $(CXX) ;
-
-# Include build rules
-include $(TOP)/mk/jam/build.jam ;
-
-# Include Dirs
-IncludeDir $(top_builddir) ; # for config.h
-IncludeDir $(top_srcdir)/src ;
-IncludeDir $(top_srcdir)/lib/SQUIRREL2/include/ ;
-
-# use CLANLIB, OPENAL and PHYSFS
-USE_LIBS = FT2 OPENAL PHYSFS VORBISFILE VORBIS OGG ICONV GL GLU SDL SDLIMAGE ;
-CXXFLAGS += $($(USE_LIBS)_CFLAGS) ;
-CFLAGS += $($(USE_LIBS)_CFLAGS) ;
-# don't set LIBS globally for now, as miniswig doesn't link with SDL on win32
-# we set libs for the windstille target manually
-#LIBS += $($(USE_LIBS)_LIBS) ;
-
-# for the emacsers out there (compiles all objects in current subdir if jam is
-# invoked in a subdir)
-SUBDIR_OBJECTS_COMPILE = 1 ;
-
-if $(XGETTEXT) != ""
-{
-    actions XGetText
-    {
-        $(XGETTEXT) $(XGETTEXT_FLAGS) --keyword='_:1' --keyword='N_:1' -o $(<) $(>)
-    }
-    rule MakePot
-    {
-      if $(>) {
-        XGetText $(<) : $(>) ;
-        Depends $(<) : $(>) ;
-        Depends all : $(<) ;
-      }
-    }
-} else {
-    rule MakePot
-    { }
-}
-

Deleted: trunk/windstille/src/Jamfile
===================================================================
--- trunk/windstille/src/Jamfile	2008-03-17 20:15:47 UTC (rev 1599)
+++ trunk/windstille/src/Jamfile	2008-04-23 00:33:37 UTC (rev 1600)
@@ -1,67 +0,0 @@
-SubDir TOP src ;
-
-SubInclude TOP src collision ;
-SubInclude TOP src display ;
-SubInclude TOP src font ;
-SubInclude TOP src gui ;
-SubInclude TOP src input ;
-SubInclude TOP src lisp ;
-SubInclude TOP src math ;
-SubInclude TOP src objects ;
-SubInclude TOP src particles ;
-SubInclude TOP src physfs ;
-SubInclude TOP src scripting ;
-SubInclude TOP src signals ;
-SubInclude TOP src sound ;
-SubInclude TOP src sprite2d ;
-SubInclude TOP src sprite3d ;
-SubInclude TOP src tinygettext ;
-
-sources = [ Wildcard *.cpp *.hpp ] ;
-
-TRANSLATABLE_SOURCES += [ SearchSource $(sources) ] ;
-
-Application windstille
-    :   $(display_objects)
-
-        $(font_objects)
-
-        $(glutil_objects)
-
-        $(gui_objects)
-    
-        $(input_objects)
-
-        $(lisp_objects)
-
-        $(objects_objects)
-
-        $(physfs_objects)
-
-        $(scripting_objects)
-
-        $(sound_objects)
-
-        $(sprite2d_objects)
-
-        $(sprite3d_objects)
-
-        $(tinygettext_objects)
-
-	$(collision_objects)
-
-        $(particles_objects)
-
-        $(math_objects)
-
-        $(signals_objects)
-
-        $(sources)
-;
-
-C++Flags windstille : -DAPPDATADIR='\"$(appdatadir)\"' ;
-CppFlags windstille : -I$(top_srcdir)/lib/glew ;
-LinkWith windstille : squirrel glew ;
-LFlags windstille : $($(USE_LIBS)_LIBS) ;
-Help windstille : "Build the windstille executable" ;
-



From grumbel at mail.berlios.de  Sat Apr 26 09:45:34 2008
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Sat, 26 Apr 2008 09:45:34 +0200
Subject: [Windstille-commit] r1601 - trunk/windstille/tools/sdl-jstest
Message-ID: <200804260745.m3Q7jYql014683@sheep.berlios.de>

Author: grumbel
Date: 2008-04-26 09:45:34 +0200 (Sat, 26 Apr 2008)
New Revision: 1601

Modified:
   trunk/windstille/tools/sdl-jstest/sdl-jstest.c
Log:
- poll all events and only redraw then, don't redraw after every event

Modified: trunk/windstille/tools/sdl-jstest/sdl-jstest.c
===================================================================
--- trunk/windstille/tools/sdl-jstest/sdl-jstest.c	2008-04-23 00:33:37 UTC (rev 1600)
+++ trunk/windstille/tools/sdl-jstest/sdl-jstest.c	2008-04-26 07:45:34 UTC (rev 1601)
@@ -175,110 +175,114 @@
               SDL_Event event;
               while(!quit)
                 {
-                  if (SDL_WaitEvent(&event)) {
+                  SDL_Delay(10);
+
+                  bool something_new = false;
+                  while (SDL_PollEvent(&event)) {
+                    something_new = true;
                     switch(event.type)
                       {
-                      case SDL_JOYAXISMOTION:
-                        assert(event.jaxis.axis < num_axes);
-                        axes[event.jaxis.axis] = event.jaxis.value;
-                        break;
+                        case SDL_JOYAXISMOTION:
+                          assert(event.jaxis.axis < num_axes);
+                          axes[event.jaxis.axis] = event.jaxis.value;
+                          break;
 
-                      case SDL_JOYBUTTONDOWN:
-                      case SDL_JOYBUTTONUP:
-                        assert(event.jbutton.button < num_buttons);
-                        buttons[event.jbutton.button] = event.jbutton.state;
-                        break;
+                        case SDL_JOYBUTTONDOWN:
+                        case SDL_JOYBUTTONUP:
+                          assert(event.jbutton.button < num_buttons);
+                          buttons[event.jbutton.button] = event.jbutton.state;
+                          break;
 
-                      case SDL_JOYHATMOTION:
-                        assert(event.jhat.hat < num_hats);
-                        hats[event.jhat.hat] = event.jhat.value;
-                        break;
+                        case SDL_JOYHATMOTION:
+                          assert(event.jhat.hat < num_hats);
+                          hats[event.jhat.hat] = event.jhat.value;
+                          break;
 
-                      case SDL_JOYBALLMOTION:
-                        assert(event.jball.ball < num_balls);
-                        balls[2*event.jball.ball + 0] = event.jball.xrel;
-                        balls[2*event.jball.ball + 1] = event.jball.yrel;
-                        break;
+                        case SDL_JOYBALLMOTION:
+                          assert(event.jball.ball < num_balls);
+                          balls[2*event.jball.ball + 0] = event.jball.xrel;
+                          balls[2*event.jball.ball + 1] = event.jball.yrel;
+                          break;
 
-                      case SDL_QUIT:
-                        quit = 1;
-                        printf("Recieved interrupt, exiting\n");
-                        break;
+                        case SDL_QUIT:
+                          quit = 1;
+                          printf("Recieved interrupt, exiting\n");
+                          break;
 
-                      default:
-                        fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
+                        default:
+                          fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
                       }
-                  } else {
-                    fprintf(stderr, "Error in SDL_WaitEvent\n");
-                    quit = 1;
                   }
 
-                  //clear();
-                  move(0,0);
+                  if (something_new)
+                    {
+                      //clear();
+                      move(0,0);
 
-                  printw("Joystick Name:   '%s'\n", SDL_JoystickName(joy_idx));
-                  printw("Joystick Number: %d\n", joy_idx);
-                  printw("\n");
+                      printw("Joystick Name:   '%s'\n", SDL_JoystickName(joy_idx));
+                      printw("Joystick Number: %d\n", joy_idx);
+                      printw("\n");
 
-                  printw("Axes %2d:\n", num_axes);
-                  for(int i = 0; i < num_axes; ++i)
-                    {
-                      int len = COLS - 20;
-                      printw("  %2d: %6d  ", i, axes[i]);
-                      print_bar((axes[i] + 32767) * (len-1) / 65534, len);
-                      addch('\n');
-                    }
-                  printw("\n");
+                      printw("Axes %2d:\n", num_axes);
+                      for(int i = 0; i < num_axes; ++i)
+                        {
+                          int len = COLS - 20;
+                          printw("  %2d: %6d  ", i, axes[i]);
+                          print_bar((axes[i] + 32767) * (len-1) / 65534, len);
+                          addch('\n');
+                        }
+                      printw("\n");
 
-                  printw("Buttons %2d:\n", num_buttons);
-                  for(int i = 0; i < num_buttons; ++i)
-                    {
-                      printw("  %2d: %d  %s\n", i, buttons[i], buttons[i] ? "[#]":"[ ]");
-                    }
-                  printw("\n");
+                      printw("Buttons %2d:\n", num_buttons);
+                      for(int i = 0; i < num_buttons; ++i)
+                        {
+                          printw("  %2d: %d  %s\n", i, buttons[i], buttons[i] ? "[#]":"[ ]");
+                        }
+                      printw("\n");
 
-                  printw("Hats %2d:\n", num_hats);
-                  for(int i = 0; i < num_hats; ++i)
-                    {
-                      printw("  %2d: value: %d\n", i, hats[i]);
-                      printw("  +-----+  up:    %c\n"
-                             "  |%c %c %c|  down:  %c\n"
-                             "  |%c %c %c|  left:  %c\n"
-                             "  |%c %c %c|  right: %c\n"
-                             "  +-----+\n",
+                      printw("Hats %2d:\n", num_hats);
+                      for(int i = 0; i < num_hats; ++i)
+                        {
+                          printw("  %2d: value: %d\n", i, hats[i]);
+                          printw("  +-----+  up:    %c\n"
+                                 "  |%c %c %c|  down:  %c\n"
+                                 "  |%c %c %c|  left:  %c\n"
+                                 "  |%c %c %c|  right: %c\n"
+                                 "  +-----+\n",
 
-                             (hats[i] & SDL_HAT_UP)?'1':'0',
+                                 (hats[i] & SDL_HAT_UP)?'1':'0',
 
-                             ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                             ((hats[i] & SDL_HAT_UP) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                             ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
+                                 ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
+                                 ((hats[i] & SDL_HAT_UP) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
+                                 ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
 
-                             (hats[i] & SDL_HAT_DOWN)?'1':'0',
+                                 (hats[i] & SDL_HAT_DOWN)?'1':'0',
 
-                             (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                             (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                             (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
+                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
+                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
+                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
 
-                             (hats[i] & SDL_HAT_LEFT)?'1':'0',
+                                 (hats[i] & SDL_HAT_LEFT)?'1':'0',
 
-                             ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                             ((hats[i] & SDL_HAT_DOWN) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                             ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
+                                 ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
+                                 ((hats[i] & SDL_HAT_DOWN) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
+                                 ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
 
-                             (hats[i] & SDL_HAT_RIGHT)?'1':'0');
-                    }
-                  printw("\n");
+                                 (hats[i] & SDL_HAT_RIGHT)?'1':'0');
+                        }
+                      printw("\n");
 
-                  printw("Balls %2d: ", num_balls);
-                  for(int i = 0; i < num_balls; ++i)
-                    {
-                      printw("  %2d: %6d %6d\n", i, balls[2*i+0], balls[2*i+0]);
+                      printw("Balls %2d: ", num_balls);
+                      for(int i = 0; i < num_balls; ++i)
+                        {
+                          printw("  %2d: %6d %6d\n", i, balls[2*i+0], balls[2*i+0]);
+                        }
+                      printw("\n");
+                      printw("\n");
+                      printw("Press Ctrl-c to exit\n");
+
+                      refresh();
                     }
-                  printw("\n");
-                  printw("\n");
-                  printw("Press Ctrl-c to exit\n");
-
-                  refresh();
                 } // while
 
               free(balls);
@@ -316,37 +320,37 @@
                 {
                   switch(event.type)
                     {
-                    case SDL_JOYAXISMOTION:
-                      printf("SDL_JOYAXISMOTION: joystick: %d axis: %d value: %d\n",
-                             event.jaxis.which, event.jaxis.axis, event.jaxis.value);
-                      break;
+                      case SDL_JOYAXISMOTION:
+                        printf("SDL_JOYAXISMOTION: joystick: %d axis: %d value: %d\n",
+                               event.jaxis.which, event.jaxis.axis, event.jaxis.value);
+                        break;
 
-                    case SDL_JOYBUTTONDOWN:
-                      printf("SDL_JOYBUTTONUP: joystick: %d button: %d state: %d\n",
-                             event.jbutton.which, event.jbutton.button, event.jbutton.state);
-                      break;
-                    case SDL_JOYBUTTONUP:
-                      printf("SDL_JOYBUTTONDOWN: joystick: %d button: %d state: %d\n",
-                             event.jbutton.which, event.jbutton.button, event.jbutton.state);
-                      break;
+                      case SDL_JOYBUTTONDOWN:
+                        printf("SDL_JOYBUTTONUP: joystick: %d button: %d state: %d\n",
+                               event.jbutton.which, event.jbutton.button, event.jbutton.state);
+                        break;
+                      case SDL_JOYBUTTONUP:
+                        printf("SDL_JOYBUTTONDOWN: joystick: %d button: %d state: %d\n",
+                               event.jbutton.which, event.jbutton.button, event.jbutton.state);
+                        break;
 
-                    case SDL_JOYHATMOTION:
-                      printf("SDL_JOYHATMOTION: joystick: %d hat: %d value: %d\n",
-                             event.jhat.which, event.jhat.hat, event.jhat.value);
-                      break;
+                      case SDL_JOYHATMOTION:
+                        printf("SDL_JOYHATMOTION: joystick: %d hat: %d value: %d\n",
+                               event.jhat.which, event.jhat.hat, event.jhat.value);
+                        break;
 
-                    case SDL_JOYBALLMOTION:
-                      printf("SDL_JOYBALLMOTION: joystick: %d ball: %d x: %d y: %d\n",
-                             event.jball.which, event.jball.ball, event.jball.xrel, event.jball.yrel);
-                      break;
+                      case SDL_JOYBALLMOTION:
+                        printf("SDL_JOYBALLMOTION: joystick: %d ball: %d x: %d y: %d\n",
+                               event.jball.which, event.jball.ball, event.jball.xrel, event.jball.yrel);
+                        break;
 
-                    case SDL_QUIT:
-                      quit = 1;
-                      printf("Recieved interrupt, exiting\n");
-                      break;
+                      case SDL_QUIT:
+                        quit = 1;
+                        printf("Recieved interrupt, exiting\n");
+                        break;
 
-                    default:
-                      fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
+                      default:
+                        fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
                     }
                 }
               SDL_JoystickClose(joy);



