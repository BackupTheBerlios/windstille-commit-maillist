From grumbel at mail.berlios.de  Fri May  7 19:17:19 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 19:17:19 +0200
Subject: [Windstille-commit] r3295 - in trunk/sdl-jstest: . debian
Message-ID: <201005071717.o47HHJYu031180@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 19:17:18 +0200 (Fri, 07 May 2010)
New Revision: 3295

Added:
   trunk/sdl-jstest/debian/
   trunk/sdl-jstest/debian/changelog
   trunk/sdl-jstest/debian/compat
   trunk/sdl-jstest/debian/control
   trunk/sdl-jstest/debian/copyright
   trunk/sdl-jstest/debian/dirs
   trunk/sdl-jstest/debian/docs
   trunk/sdl-jstest/debian/rules
Log:
Added debian/ directory

Added: trunk/sdl-jstest/debian/changelog
===================================================================
--- trunk/sdl-jstest/debian/changelog	2009-11-18 13:21:56 UTC (rev 3294)
+++ trunk/sdl-jstest/debian/changelog	2010-05-07 17:17:18 UTC (rev 3295)
@@ -0,0 +1,5 @@
+sdl-jstest (0.1.0-1) lucid; urgency=low
+
+  * Initial release
+
+ -- Ingo Ruhnke <grumbel at gmx.de>  Fri, 07 May 2010 18:43:22 +0200

Added: trunk/sdl-jstest/debian/compat
===================================================================
--- trunk/sdl-jstest/debian/compat	2009-11-18 13:21:56 UTC (rev 3294)
+++ trunk/sdl-jstest/debian/compat	2010-05-07 17:17:18 UTC (rev 3295)
@@ -0,0 +1 @@
+7

Added: trunk/sdl-jstest/debian/control
===================================================================
--- trunk/sdl-jstest/debian/control	2009-11-18 13:21:56 UTC (rev 3294)
+++ trunk/sdl-jstest/debian/control	2010-05-07 17:17:18 UTC (rev 3295)
@@ -0,0 +1,18 @@
+Source: sdl-jstest
+Section: utils
+Priority: extra
+Maintainer: Ingo Ruhnke <grumbel at gmx.de>
+Build-Depends: debhelper (>= 7), libsdl1.2-dev
+Standards-Version: 3.8.0
+Homepage: svn://svn.berlios.de/windstille/trunk/sdl-jstest
+
+Package: sdl-jstest
+Architecture: any
+Depends: ${shlibs:Depends}, ${misc:Depends}
+Description: A simple joystick tester for SDL
+ sdl-jstest is a simple program that lets you find out how many
+ joysticks SDL detected on your system, how many axes, buttons, hats
+ and balls they have each. It also lets you test the joysticks by
+ displaying the events they send or by displaying their current button,
+ axis, hat or ball state. sdl-jstest is especially useful if you want
+ to test your SDL_LINUX_JOYSTICK configuration.

Added: trunk/sdl-jstest/debian/copyright
===================================================================
--- trunk/sdl-jstest/debian/copyright	2009-11-18 13:21:56 UTC (rev 3294)
+++ trunk/sdl-jstest/debian/copyright	2010-05-07 17:17:18 UTC (rev 3295)
@@ -0,0 +1,31 @@
+This package was debianized by Ingo Ruhnke <grumbel at gmx.de> on
+Tue, 7 Mai 2010 18:43:42 +0200.
+
+It was downloaded from svn://svn.berlios.de/windstille/trunk/sdl-jstest
+
+Upstream Author(s):
+
+  Ingo Ruhnke <grumbel at gmx.de>
+
+Copyright:
+
+  Copyright (C) 2009 Ingo Ruhnke <grumbel at gmx.de>
+
+License:
+
+  This program is free software: you can redistribute it and/or modify
+  it under the terms of the GNU General Public License as published by
+  the Free Software Foundation, either version 3 of the License, or
+  (at your option) any later version.
+   
+  This program is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+  GNU General Public License for more details.
+  
+  You should have received a copy of the GNU General Public License
+  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+
+The Debian packaging is copyright 2010, Ingo Ruhnke <grumbel at gmx.de> and
+is licensed under the GPL, see `/usr/share/common-licenses/GPL'.

Added: trunk/sdl-jstest/debian/dirs
===================================================================
--- trunk/sdl-jstest/debian/dirs	2009-11-18 13:21:56 UTC (rev 3294)
+++ trunk/sdl-jstest/debian/dirs	2010-05-07 17:17:18 UTC (rev 3295)
@@ -0,0 +1,2 @@
+usr/bin
+

Added: trunk/sdl-jstest/debian/docs
===================================================================

Added: trunk/sdl-jstest/debian/rules
===================================================================
--- trunk/sdl-jstest/debian/rules	2009-11-18 13:21:56 UTC (rev 3294)
+++ trunk/sdl-jstest/debian/rules	2010-05-07 17:17:18 UTC (rev 3295)
@@ -0,0 +1,94 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+# This file was originally written by Joey Hess and Craig Small.
+# As a special exception, when this file is copied by dh-make into a
+# dh-make output file, you may use that output file without restriction.
+# This special exception was added by Craig Small in version 0.37 of dh-make.
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+
+
+
+
+configure: configure-stamp
+configure-stamp:
+	dh_testdir
+	# Add here commands to configure the package.
+
+	touch configure-stamp
+
+
+build: build-stamp
+
+build-stamp: configure-stamp  
+	dh_testdir
+
+	# Add here commands to compile the package.
+	# $(MAKE)
+	scons
+	#docbook-to-man debian/sdl-jstest.sgml > sdl-jstest.1
+
+	touch $@
+
+clean: 
+	dh_testdir
+	dh_testroot
+	rm -f build-stamp configure-stamp
+
+	# Add here commands to clean up after the build process.
+	scons -c
+	rm -rf .sconf_temp/
+	rm -f .sconsign.dblite
+
+	dh_clean 
+
+install: build
+	dh_testdir
+	dh_testroot
+	dh_prep  
+	dh_installdirs
+
+	# Add here commands to install the package into debian/sdl-jstest.
+	# $(MAKE) DESTDIR=$(CURDIR)/debian/sdl-jstest install
+	install sdl-jstest $(CURDIR)/debian/sdl-jstest/usr/bin/
+
+# Build architecture-independent files here.
+binary-indep: install
+# We have nothing to do by default.
+
+# Build architecture-dependent files here.
+binary-arch: install
+	dh_testdir
+	dh_testroot
+	dh_installchangelogs 
+	dh_installdocs
+	dh_installexamples
+#	dh_install
+#	dh_installmenu
+#	dh_installdebconf
+#	dh_installlogrotate
+#	dh_installemacsen
+#	dh_installpam
+#	dh_installmime
+#	dh_python
+#	dh_installinit
+#	dh_installcron
+#	dh_installinfo
+	dh_installman
+	dh_link
+	dh_strip
+	dh_compress
+	dh_fixperms
+#	dh_perl
+#	dh_makeshlibs
+	dh_installdeb
+	dh_shlibdeps
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+
+binary: binary-indep binary-arch
+.PHONY: build clean binary-indep binary-arch binary install configure


Property changes on: trunk/sdl-jstest/debian/rules
___________________________________________________________________
Name: svn:executable
   + *



From grumbel at mail.berlios.de  Fri May  7 19:17:34 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 19:17:34 +0200
Subject: [Windstille-commit] r3296 - trunk/sdl-jstest
Message-ID: <201005071717.o47HHYhX032149@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 19:17:33 +0200 (Fri, 07 May 2010)
New Revision: 3296

Modified:
   trunk/sdl-jstest/sdl-jstest.c
Log:
Added --version option

Modified: trunk/sdl-jstest/sdl-jstest.c
===================================================================
--- trunk/sdl-jstest/sdl-jstest.c	2010-05-07 17:17:18 UTC (rev 3295)
+++ trunk/sdl-jstest/sdl-jstest.c	2010-05-07 17:17:33 UTC (rev 3296)
@@ -1,22 +1,20 @@
-/*  $Id$
-**  sdl-jstest - Joystick Test Program for SDL
-**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software; you can redistribute it and/or
-**  modify it under the terms of the GNU General Public License
-**  as published by the Free Software Foundation; either version 2
-**  of the License, or (at your option) any later version.
-**
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-** 
-**  You should have received a copy of the GNU General Public License
-**  along with this program; if not, write to the Free Software
-**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-**  02111-1307, USA.
-*/
+//  sdl-jstest - Joystick Test Program for SDL
+//  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
+//
+//  This program is free software; you can redistribute it and/or
+//  modify it under the terms of the GNU General Public License
+//  as published by the Free Software Foundation; either version 2
+//  of the License, or (at your option) any later version.
+//
+//  This program is distributed in the hope that it will be useful,
+//  but WITHOUT ANY WARRANTY; without even the implied warranty of
+//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+//  GNU General Public License for more details.
+// 
+//  You should have received a copy of the GNU General Public License
+//  along with this program; if not, write to the Free Software
+//  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+//  02111-1307, USA.
 
 #include <SDL/SDL.h>
 #include <assert.h>
@@ -78,10 +76,11 @@
          "/dev/input/jsX interface\n");
   printf("\n");
   printf("Options:\n");
+  printf("  --help             Print this help\n");
+  printf("  --version          Print version number and exit\n");
   printf("  --list             Search for available joysticks and list their properties\n");
   printf("  --test  JOYNUM     Display a graphical representation of the current joystick state\n");
   printf("  --event JOYNUM     Display the events that are recieved from the joystick\n");
-  printf("  --help             Print this help\n");
   printf("\n");
   printf("Examples:\n");
   printf("  %s --list\n", prg);
@@ -111,6 +110,11 @@
         {
           print_help(argv[0]);
         }
+      if (argc == 2 && (strcmp(argv[1], "--version") == 0))
+      {
+        printf("sdl-jstest 0.1.0\n");
+        exit(EXIT_SUCCESS);
+      }
       else if (argc == 2 && (strcmp(argv[1], "--list") == 0 ||
                              (strcmp(argv[1], "-l") == 0)))
         {



From grumbel at mail.berlios.de  Fri May  7 19:17:54 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 19:17:54 +0200
Subject: [Windstille-commit] r3297 - trunk/sdl-jstest
Message-ID: <201005071717.o47HHsNJ000904@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 19:17:54 +0200 (Fri, 07 May 2010)
New Revision: 3297

Modified:
   trunk/sdl-jstest/sdl-jstest.c
Log:
Changed indention style

Modified: trunk/sdl-jstest/sdl-jstest.c
===================================================================
--- trunk/sdl-jstest/sdl-jstest.c	2010-05-07 17:17:33 UTC (rev 3296)
+++ trunk/sdl-jstest/sdl-jstest.c	2010-05-07 17:17:54 UTC (rev 3297)
@@ -28,12 +28,12 @@
 {
   addch('[');
   for(int i = 0; i < len; ++i)
-    {
-      if (i == pos)
-        addch('#');
-      else
-        addch(' ');
-    }
+  {
+    if (i == pos)
+      addch('#');
+    else
+      addch(' ');
+  }
   addch(']');
 }
 
@@ -90,284 +90,284 @@
 int main(int argc, char** argv)
 {
   if (argc == 1)
-    {
-      print_help(argv[0]);
-      exit(1);
-    }
+  {
+    print_help(argv[0]);
+    exit(1);
+  }
 
   // FIXME: We don't need video, but without it SDL will fail to work in SDL_WaitEvent()
   if(SDL_Init(SDL_INIT_TIMER | SDL_INIT_VIDEO | SDL_INIT_JOYSTICK) < 0)
+  {
+    fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
+    exit(1);
+  }
+  else
+  {
+    atexit(SDL_Quit);
+
+    if (argc == 2 && (strcmp(argv[1], "--help") == 0 ||
+                      strcmp(argv[1], "-h") == 0))
     {
-      fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
-      exit(1);
+      print_help(argv[0]);
     }
-  else
+    if (argc == 2 && (strcmp(argv[1], "--version") == 0))
     {
-      atexit(SDL_Quit);
-
-      if (argc == 2 && (strcmp(argv[1], "--help") == 0 ||
-                        strcmp(argv[1], "-h") == 0))
-        {
-          print_help(argv[0]);
-        }
-      if (argc == 2 && (strcmp(argv[1], "--version") == 0))
+      printf("sdl-jstest 0.1.0\n");
+      exit(EXIT_SUCCESS);
+    }
+    else if (argc == 2 && (strcmp(argv[1], "--list") == 0 ||
+                           (strcmp(argv[1], "-l") == 0)))
+    {
+      int num_joysticks = SDL_NumJoysticks();
+      if (num_joysticks == 0)
       {
-        printf("sdl-jstest 0.1.0\n");
-        exit(EXIT_SUCCESS);
+        printf("No joysticks were found\n");
       }
-      else if (argc == 2 && (strcmp(argv[1], "--list") == 0 ||
-                             (strcmp(argv[1], "-l") == 0)))
+      else
+      {
+        printf("Found %d joystick(s)\n\n", num_joysticks);
+        for(int joy_idx = 0; joy_idx < num_joysticks; ++joy_idx)
         {
-          int num_joysticks = SDL_NumJoysticks();
-          if (num_joysticks == 0)
-            {
-              printf("No joysticks were found\n");
-            }
-          else
-            {
-              printf("Found %d joystick(s)\n\n", num_joysticks);
-              for(int joy_idx = 0; joy_idx < num_joysticks; ++joy_idx)
-                {
-                  SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
-                  if (!joy)
-                    {
-                      fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
-                    }
-                  else
-                    {
-                      print_joystick_info(joy_idx, joy);
-                      SDL_JoystickClose(joy);
-                    }
-                }
-            }
-        }
-      else if (argc == 3 && (strcmp(argv[1], "--test") == 0 ||
-                             strcmp(argv[1], "-t") == 0))
-        {
-          int joy_idx;
-          if (!str2int(argv[2], &joy_idx))
-            {
-              fprintf(stderr, "Error: JOYSTICKNUM argument must be a number, but was '%s'\n", argv[2]);
-              exit(1);
-            }
-
           SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
           if (!joy)
-            {
-              fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
-            }
+          {
+            fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
+          }
           else
-            {
-              initscr();
+          {
+            print_joystick_info(joy_idx, joy);
+            SDL_JoystickClose(joy);
+          }
+        }
+      }
+    }
+    else if (argc == 3 && (strcmp(argv[1], "--test") == 0 ||
+                           strcmp(argv[1], "-t") == 0))
+    {
+      int joy_idx;
+      if (!str2int(argv[2], &joy_idx))
+      {
+        fprintf(stderr, "Error: JOYSTICKNUM argument must be a number, but was '%s'\n", argv[2]);
+        exit(1);
+      }
 
-              //cbreak();
-              //noecho();
-              //nonl();
-              curs_set(0);
+      SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
+      if (!joy)
+      {
+        fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
+      }
+      else
+      {
+        initscr();
 
-              int num_axes    = SDL_JoystickNumAxes(joy);
-              int num_buttons = SDL_JoystickNumButtons(joy);
-              int num_hats    = SDL_JoystickNumHats(joy);
-              int num_balls   = SDL_JoystickNumBalls(joy);
+        //cbreak();
+        //noecho();
+        //nonl();
+        curs_set(0);
 
-              Sint16* axes    = calloc(num_axes,    sizeof(Sint16));
-              Uint8*  buttons = calloc(num_buttons, sizeof(Uint8));
-              Uint8*  hats    = calloc(num_hats,    sizeof(Uint8));
-              Uint8*  balls   = calloc(num_balls,   2*sizeof(Sint16));
+        int num_axes    = SDL_JoystickNumAxes(joy);
+        int num_buttons = SDL_JoystickNumButtons(joy);
+        int num_hats    = SDL_JoystickNumHats(joy);
+        int num_balls   = SDL_JoystickNumBalls(joy);
 
-              int quit = 0;
-              SDL_Event event;
-              while(!quit)
-                {
-                  SDL_Delay(10);
+        Sint16* axes    = calloc(num_axes,    sizeof(Sint16));
+        Uint8*  buttons = calloc(num_buttons, sizeof(Uint8));
+        Uint8*  hats    = calloc(num_hats,    sizeof(Uint8));
+        Uint8*  balls   = calloc(num_balls,   2*sizeof(Sint16));
 
-                  bool something_new = false;
-                  while (SDL_PollEvent(&event)) {
-                    something_new = true;
-                    switch(event.type)
-                      {
-                        case SDL_JOYAXISMOTION:
-                          assert(event.jaxis.axis < num_axes);
-                          axes[event.jaxis.axis] = event.jaxis.value;
-                          break;
+        int quit = 0;
+        SDL_Event event;
+        while(!quit)
+        {
+          SDL_Delay(10);
 
-                        case SDL_JOYBUTTONDOWN:
-                        case SDL_JOYBUTTONUP:
-                          assert(event.jbutton.button < num_buttons);
-                          buttons[event.jbutton.button] = event.jbutton.state;
-                          break;
+          bool something_new = false;
+          while (SDL_PollEvent(&event)) {
+            something_new = true;
+            switch(event.type)
+            {
+              case SDL_JOYAXISMOTION:
+                assert(event.jaxis.axis < num_axes);
+                axes[event.jaxis.axis] = event.jaxis.value;
+                break;
 
-                        case SDL_JOYHATMOTION:
-                          assert(event.jhat.hat < num_hats);
-                          hats[event.jhat.hat] = event.jhat.value;
-                          break;
+              case SDL_JOYBUTTONDOWN:
+              case SDL_JOYBUTTONUP:
+                assert(event.jbutton.button < num_buttons);
+                buttons[event.jbutton.button] = event.jbutton.state;
+                break;
 
-                        case SDL_JOYBALLMOTION:
-                          assert(event.jball.ball < num_balls);
-                          balls[2*event.jball.ball + 0] = event.jball.xrel;
-                          balls[2*event.jball.ball + 1] = event.jball.yrel;
-                          break;
+              case SDL_JOYHATMOTION:
+                assert(event.jhat.hat < num_hats);
+                hats[event.jhat.hat] = event.jhat.value;
+                break;
 
-                        case SDL_QUIT:
-                          quit = 1;
-                          printf("Recieved interrupt, exiting\n");
-                          break;
+              case SDL_JOYBALLMOTION:
+                assert(event.jball.ball < num_balls);
+                balls[2*event.jball.ball + 0] = event.jball.xrel;
+                balls[2*event.jball.ball + 1] = event.jball.yrel;
+                break;
 
-                        default:
-                          fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
-                      }
-                  }
+              case SDL_QUIT:
+                quit = 1;
+                printf("Recieved interrupt, exiting\n");
+                break;
 
-                  if (something_new)
-                    {
-                      //clear();
-                      move(0,0);
+              default:
+                fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
+            }
+          }
 
-                      printw("Joystick Name:   '%s'\n", SDL_JoystickName(joy_idx));
-                      printw("Joystick Number: %d\n", joy_idx);
-                      printw("\n");
+          if (something_new)
+          {
+            //clear();
+            move(0,0);
 
-                      printw("Axes %2d:\n", num_axes);
-                      for(int i = 0; i < num_axes; ++i)
-                        {
-                          int len = COLS - 20;
-                          printw("  %2d: %6d  ", i, axes[i]);
-                          print_bar((axes[i] + 32767) * (len-1) / 65534, len);
-                          addch('\n');
-                        }
-                      printw("\n");
+            printw("Joystick Name:   '%s'\n", SDL_JoystickName(joy_idx));
+            printw("Joystick Number: %d\n", joy_idx);
+            printw("\n");
 
-                      printw("Buttons %2d:\n", num_buttons);
-                      for(int i = 0; i < num_buttons; ++i)
-                        {
-                          printw("  %2d: %d  %s\n", i, buttons[i], buttons[i] ? "[#]":"[ ]");
-                        }
-                      printw("\n");
+            printw("Axes %2d:\n", num_axes);
+            for(int i = 0; i < num_axes; ++i)
+            {
+              int len = COLS - 20;
+              printw("  %2d: %6d  ", i, axes[i]);
+              print_bar((axes[i] + 32767) * (len-1) / 65534, len);
+              addch('\n');
+            }
+            printw("\n");
 
-                      printw("Hats %2d:\n", num_hats);
-                      for(int i = 0; i < num_hats; ++i)
-                        {
-                          printw("  %2d: value: %d\n", i, hats[i]);
-                          printw("  +-----+  up:    %c\n"
-                                 "  |%c %c %c|  down:  %c\n"
-                                 "  |%c %c %c|  left:  %c\n"
-                                 "  |%c %c %c|  right: %c\n"
-                                 "  +-----+\n",
+            printw("Buttons %2d:\n", num_buttons);
+            for(int i = 0; i < num_buttons; ++i)
+            {
+              printw("  %2d: %d  %s\n", i, buttons[i], buttons[i] ? "[#]":"[ ]");
+            }
+            printw("\n");
 
-                                 (hats[i] & SDL_HAT_UP)?'1':'0',
+            printw("Hats %2d:\n", num_hats);
+            for(int i = 0; i < num_hats; ++i)
+            {
+              printw("  %2d: value: %d\n", i, hats[i]);
+              printw("  +-----+  up:    %c\n"
+                     "  |%c %c %c|  down:  %c\n"
+                     "  |%c %c %c|  left:  %c\n"
+                     "  |%c %c %c|  right: %c\n"
+                     "  +-----+\n",
 
-                                 ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_UP) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
+                     (hats[i] & SDL_HAT_UP)?'1':'0',
 
-                                 (hats[i] & SDL_HAT_DOWN)?'1':'0',
+                     ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
+                     ((hats[i] & SDL_HAT_UP) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
+                     ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
 
-                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
+                     (hats[i] & SDL_HAT_DOWN)?'1':'0',
 
-                                 (hats[i] & SDL_HAT_LEFT)?'1':'0',
+                     (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
+                     (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
+                     (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
 
-                                 ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_DOWN) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
+                     (hats[i] & SDL_HAT_LEFT)?'1':'0',
 
-                                 (hats[i] & SDL_HAT_RIGHT)?'1':'0');
-                        }
-                      printw("\n");
+                     ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
+                     ((hats[i] & SDL_HAT_DOWN) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
+                     ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
 
-                      printw("Balls %2d: ", num_balls);
-                      for(int i = 0; i < num_balls; ++i)
-                        {
-                          printw("  %2d: %6d %6d\n", i, balls[2*i+0], balls[2*i+0]);
-                        }
-                      printw("\n");
-                      printw("\n");
-                      printw("Press Ctrl-c to exit\n");
-
-                      refresh();
-                    }
-                } // while
-
-              free(balls);
-              free(hats);
-              free(buttons);
-              free(axes);
-
-              endwin();
+                     (hats[i] & SDL_HAT_RIGHT)?'1':'0');
             }
-        }
-      else if (argc == 3 && (strcmp(argv[1], "--event") == 0 ||
-                             strcmp(argv[1], "-e") == 0))
-        {
-          int joy_idx;
-          if (!str2int(argv[2], &joy_idx))
-            {
-              fprintf(stderr, "Error: JOYSTICKNUM argument must be a number, but was '%s'\n", argv[2]);
-              exit(1);
-            }
+            printw("\n");
 
-          SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
-          if (!joy)
+            printw("Balls %2d: ", num_balls);
+            for(int i = 0; i < num_balls; ++i)
             {
-              fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
+              printw("  %2d: %6d %6d\n", i, balls[2*i+0], balls[2*i+0]);
             }
-          else
-            {
-              print_joystick_info(joy_idx, joy);
+            printw("\n");
+            printw("\n");
+            printw("Press Ctrl-c to exit\n");
 
-              printf("Entering joystick test loop, press Ctrl-c to exit\n");
-              int quit = 0;
-              SDL_Event event;
+            refresh();
+          }
+        } // while
 
-              while(!quit && SDL_WaitEvent(&event))
-                {
-                  switch(event.type)
-                    {
-                      case SDL_JOYAXISMOTION:
-                        printf("SDL_JOYAXISMOTION: joystick: %d axis: %d value: %d\n",
-                               event.jaxis.which, event.jaxis.axis, event.jaxis.value);
-                        break;
+        free(balls);
+        free(hats);
+        free(buttons);
+        free(axes);
 
-                      case SDL_JOYBUTTONDOWN:
-                        printf("SDL_JOYBUTTONUP: joystick: %d button: %d state: %d\n",
-                               event.jbutton.which, event.jbutton.button, event.jbutton.state);
-                        break;
-                      case SDL_JOYBUTTONUP:
-                        printf("SDL_JOYBUTTONDOWN: joystick: %d button: %d state: %d\n",
-                               event.jbutton.which, event.jbutton.button, event.jbutton.state);
-                        break;
+        endwin();
+      }
+    }
+    else if (argc == 3 && (strcmp(argv[1], "--event") == 0 ||
+                           strcmp(argv[1], "-e") == 0))
+    {
+      int joy_idx;
+      if (!str2int(argv[2], &joy_idx))
+      {
+        fprintf(stderr, "Error: JOYSTICKNUM argument must be a number, but was '%s'\n", argv[2]);
+        exit(1);
+      }
 
-                      case SDL_JOYHATMOTION:
-                        printf("SDL_JOYHATMOTION: joystick: %d hat: %d value: %d\n",
-                               event.jhat.which, event.jhat.hat, event.jhat.value);
-                        break;
+      SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
+      if (!joy)
+      {
+        fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
+      }
+      else
+      {
+        print_joystick_info(joy_idx, joy);
 
-                      case SDL_JOYBALLMOTION:
-                        printf("SDL_JOYBALLMOTION: joystick: %d ball: %d x: %d y: %d\n",
-                               event.jball.which, event.jball.ball, event.jball.xrel, event.jball.yrel);
-                        break;
+        printf("Entering joystick test loop, press Ctrl-c to exit\n");
+        int quit = 0;
+        SDL_Event event;
 
-                      case SDL_QUIT:
-                        quit = 1;
-                        printf("Recieved interrupt, exiting\n");
-                        break;
+        while(!quit && SDL_WaitEvent(&event))
+        {
+          switch(event.type)
+          {
+            case SDL_JOYAXISMOTION:
+              printf("SDL_JOYAXISMOTION: joystick: %d axis: %d value: %d\n",
+                     event.jaxis.which, event.jaxis.axis, event.jaxis.value);
+              break;
 
-                      default:
-                        fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
-                    }
-                }
-              SDL_JoystickClose(joy);
+            case SDL_JOYBUTTONDOWN:
+              printf("SDL_JOYBUTTONUP: joystick: %d button: %d state: %d\n",
+                     event.jbutton.which, event.jbutton.button, event.jbutton.state);
+              break;
+            case SDL_JOYBUTTONUP:
+              printf("SDL_JOYBUTTONDOWN: joystick: %d button: %d state: %d\n",
+                     event.jbutton.which, event.jbutton.button, event.jbutton.state);
+              break;
 
-            }
-          fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
+            case SDL_JOYHATMOTION:
+              printf("SDL_JOYHATMOTION: joystick: %d hat: %d value: %d\n",
+                     event.jhat.which, event.jhat.hat, event.jhat.value);
+              break;
+
+            case SDL_JOYBALLMOTION:
+              printf("SDL_JOYBALLMOTION: joystick: %d ball: %d x: %d y: %d\n",
+                     event.jball.which, event.jball.ball, event.jball.xrel, event.jball.yrel);
+              break;
+
+            case SDL_QUIT:
+              quit = 1;
+              printf("Recieved interrupt, exiting\n");
+              break;
+
+            default:
+              fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
+          }
         }
-      else
-        {
-          fprintf(stderr, "%s: unknown arguments\n", argv[0]);
-          fprintf(stderr, "Try '%s --help' for more informations\n", argv[0]);
-        }
+        SDL_JoystickClose(joy);
+
+      }
+      fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
     }
+    else
+    {
+      fprintf(stderr, "%s: unknown arguments\n", argv[0]);
+      fprintf(stderr, "Try '%s --help' for more informations\n", argv[0]);
+    }
+  }
 }
 
-  /* EOF */
+/* EOF */



From grumbel at mail.berlios.de  Fri May  7 19:18:47 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 19:18:47 +0200
Subject: [Windstille-commit] r3298 - in tags: . sdl-jstest-0.1.0
Message-ID: <201005071718.o47HIlG2005461@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 19:18:46 +0200 (Fri, 07 May 2010)
New Revision: 3298

Added:
   tags/sdl-jstest-0.1.0/
   tags/sdl-jstest-0.1.0/debian/
   tags/sdl-jstest-0.1.0/sdl-jstest.c
Removed:
   tags/sdl-jstest-0.1.0/sdl-jstest.c
Log:
Tagged sdl-jstest 0.1.0

Copied: tags/sdl-jstest-0.1.0 (from rev 3294, trunk/sdl-jstest)

Copied: tags/sdl-jstest-0.1.0/debian (from rev 3295, trunk/sdl-jstest/debian)

Deleted: tags/sdl-jstest-0.1.0/sdl-jstest.c
===================================================================
--- trunk/sdl-jstest/sdl-jstest.c	2009-11-18 13:21:56 UTC (rev 3294)
+++ tags/sdl-jstest-0.1.0/sdl-jstest.c	2010-05-07 17:18:46 UTC (rev 3298)
@@ -1,369 +0,0 @@
-/*  $Id$
-**  sdl-jstest - Joystick Test Program for SDL
-**  Copyright (C) 2007 Ingo Ruhnke <grumbel at gmx.de>
-**
-**  This program is free software; you can redistribute it and/or
-**  modify it under the terms of the GNU General Public License
-**  as published by the Free Software Foundation; either version 2
-**  of the License, or (at your option) any later version.
-**
-**  This program is distributed in the hope that it will be useful,
-**  but WITHOUT ANY WARRANTY; without even the implied warranty of
-**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-**  GNU General Public License for more details.
-** 
-**  You should have received a copy of the GNU General Public License
-**  along with this program; if not, write to the Free Software
-**  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-**  02111-1307, USA.
-*/
-
-#include <SDL/SDL.h>
-#include <assert.h>
-#include <curses.h>
-#include <errno.h>
-#include <limits.h>
-#include <stdio.h>
-#include <stdlib.h>
-
-void print_bar(int pos, int len)
-{
-  addch('[');
-  for(int i = 0; i < len; ++i)
-    {
-      if (i == pos)
-        addch('#');
-      else
-        addch(' ');
-    }
-  addch(']');
-}
-
-int str2int(const char* str, int* val)
-{
-  char* endptr;
-  errno = 0;    /* To distinguish success/failure after call */
-
-  *val = strtol(str, &endptr, 10);
-
-  /* Check for various possible errors */
-  if ((errno == ERANGE && (*val == LONG_MAX || *val == LONG_MIN))
-      || (errno != 0 && *val == 0)) {
-    return 0;
-  }
-
-  if (endptr == str) {
-    return 0;
-  }
-
-  return 1;
-}
-
-void print_joystick_info(int joy_idx, SDL_Joystick* joy)
-{
-  printf("Joystick Name:     '%s'\n", SDL_JoystickName(joy_idx));
-  printf("Joystick Number:   %2d\n", joy_idx);
-  printf("Number of Axes:    %2d\n", SDL_JoystickNumAxes(joy));
-  printf("Number of Buttons: %2d\n", SDL_JoystickNumButtons(joy));
-  printf("Number of Hats:    %2d\n", SDL_JoystickNumHats(joy));
-  printf("Number of Balls:   %2d\n", SDL_JoystickNumBalls(joy));
-  printf("\n");
-}
-
-void print_help(const char* prg)
-{
-  printf("Usage: %s [OPTION]\n", prg);
-  printf("List available joysticks or test a  joystick.\n");
-  printf("This programm uses SDL for doing its test instead of using the raw\n"
-         "/dev/input/jsX interface\n");
-  printf("\n");
-  printf("Options:\n");
-  printf("  --list             Search for available joysticks and list their properties\n");
-  printf("  --test  JOYNUM     Display a graphical representation of the current joystick state\n");
-  printf("  --event JOYNUM     Display the events that are recieved from the joystick\n");
-  printf("  --help             Print this help\n");
-  printf("\n");
-  printf("Examples:\n");
-  printf("  %s --list\n", prg);
-  printf("  %s --test 1\n", prg);
-}
-
-int main(int argc, char** argv)
-{
-  if (argc == 1)
-    {
-      print_help(argv[0]);
-      exit(1);
-    }
-
-  // FIXME: We don't need video, but without it SDL will fail to work in SDL_WaitEvent()
-  if(SDL_Init(SDL_INIT_TIMER | SDL_INIT_VIDEO | SDL_INIT_JOYSTICK) < 0)
-    {
-      fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
-      exit(1);
-    }
-  else
-    {
-      atexit(SDL_Quit);
-
-      if (argc == 2 && (strcmp(argv[1], "--help") == 0 ||
-                        strcmp(argv[1], "-h") == 0))
-        {
-          print_help(argv[0]);
-        }
-      else if (argc == 2 && (strcmp(argv[1], "--list") == 0 ||
-                             (strcmp(argv[1], "-l") == 0)))
-        {
-          int num_joysticks = SDL_NumJoysticks();
-          if (num_joysticks == 0)
-            {
-              printf("No joysticks were found\n");
-            }
-          else
-            {
-              printf("Found %d joystick(s)\n\n", num_joysticks);
-              for(int joy_idx = 0; joy_idx < num_joysticks; ++joy_idx)
-                {
-                  SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
-                  if (!joy)
-                    {
-                      fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
-                    }
-                  else
-                    {
-                      print_joystick_info(joy_idx, joy);
-                      SDL_JoystickClose(joy);
-                    }
-                }
-            }
-        }
-      else if (argc == 3 && (strcmp(argv[1], "--test") == 0 ||
-                             strcmp(argv[1], "-t") == 0))
-        {
-          int joy_idx;
-          if (!str2int(argv[2], &joy_idx))
-            {
-              fprintf(stderr, "Error: JOYSTICKNUM argument must be a number, but was '%s'\n", argv[2]);
-              exit(1);
-            }
-
-          SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
-          if (!joy)
-            {
-              fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
-            }
-          else
-            {
-              initscr();
-
-              //cbreak();
-              //noecho();
-              //nonl();
-              curs_set(0);
-
-              int num_axes    = SDL_JoystickNumAxes(joy);
-              int num_buttons = SDL_JoystickNumButtons(joy);
-              int num_hats    = SDL_JoystickNumHats(joy);
-              int num_balls   = SDL_JoystickNumBalls(joy);
-
-              Sint16* axes    = calloc(num_axes,    sizeof(Sint16));
-              Uint8*  buttons = calloc(num_buttons, sizeof(Uint8));
-              Uint8*  hats    = calloc(num_hats,    sizeof(Uint8));
-              Uint8*  balls   = calloc(num_balls,   2*sizeof(Sint16));
-
-              int quit = 0;
-              SDL_Event event;
-              while(!quit)
-                {
-                  SDL_Delay(10);
-
-                  bool something_new = false;
-                  while (SDL_PollEvent(&event)) {
-                    something_new = true;
-                    switch(event.type)
-                      {
-                        case SDL_JOYAXISMOTION:
-                          assert(event.jaxis.axis < num_axes);
-                          axes[event.jaxis.axis] = event.jaxis.value;
-                          break;
-
-                        case SDL_JOYBUTTONDOWN:
-                        case SDL_JOYBUTTONUP:
-                          assert(event.jbutton.button < num_buttons);
-                          buttons[event.jbutton.button] = event.jbutton.state;
-                          break;
-
-                        case SDL_JOYHATMOTION:
-                          assert(event.jhat.hat < num_hats);
-                          hats[event.jhat.hat] = event.jhat.value;
-                          break;
-
-                        case SDL_JOYBALLMOTION:
-                          assert(event.jball.ball < num_balls);
-                          balls[2*event.jball.ball + 0] = event.jball.xrel;
-                          balls[2*event.jball.ball + 1] = event.jball.yrel;
-                          break;
-
-                        case SDL_QUIT:
-                          quit = 1;
-                          printf("Recieved interrupt, exiting\n");
-                          break;
-
-                        default:
-                          fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
-                      }
-                  }
-
-                  if (something_new)
-                    {
-                      //clear();
-                      move(0,0);
-
-                      printw("Joystick Name:   '%s'\n", SDL_JoystickName(joy_idx));
-                      printw("Joystick Number: %d\n", joy_idx);
-                      printw("\n");
-
-                      printw("Axes %2d:\n", num_axes);
-                      for(int i = 0; i < num_axes; ++i)
-                        {
-                          int len = COLS - 20;
-                          printw("  %2d: %6d  ", i, axes[i]);
-                          print_bar((axes[i] + 32767) * (len-1) / 65534, len);
-                          addch('\n');
-                        }
-                      printw("\n");
-
-                      printw("Buttons %2d:\n", num_buttons);
-                      for(int i = 0; i < num_buttons; ++i)
-                        {
-                          printw("  %2d: %d  %s\n", i, buttons[i], buttons[i] ? "[#]":"[ ]");
-                        }
-                      printw("\n");
-
-                      printw("Hats %2d:\n", num_hats);
-                      for(int i = 0; i < num_hats; ++i)
-                        {
-                          printw("  %2d: value: %d\n", i, hats[i]);
-                          printw("  +-----+  up:    %c\n"
-                                 "  |%c %c %c|  down:  %c\n"
-                                 "  |%c %c %c|  left:  %c\n"
-                                 "  |%c %c %c|  right: %c\n"
-                                 "  +-----+\n",
-
-                                 (hats[i] & SDL_HAT_UP)?'1':'0',
-
-                                 ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_UP) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_UP) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
-
-                                 (hats[i] & SDL_HAT_DOWN)?'1':'0',
-
-                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                                 (!(hats[i] & (SDL_HAT_UP | SDL_HAT_DOWN)) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
-
-                                 (hats[i] & SDL_HAT_LEFT)?'1':'0',
-
-                                 ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_LEFT)) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_DOWN) && !(hats[i] & (SDL_HAT_LEFT | SDL_HAT_RIGHT))) ? 'O' : ' ',
-                                 ((hats[i] & SDL_HAT_DOWN) && (hats[i] & SDL_HAT_RIGHT)) ? 'O' : ' ',
-
-                                 (hats[i] & SDL_HAT_RIGHT)?'1':'0');
-                        }
-                      printw("\n");
-
-                      printw("Balls %2d: ", num_balls);
-                      for(int i = 0; i < num_balls; ++i)
-                        {
-                          printw("  %2d: %6d %6d\n", i, balls[2*i+0], balls[2*i+0]);
-                        }
-                      printw("\n");
-                      printw("\n");
-                      printw("Press Ctrl-c to exit\n");
-
-                      refresh();
-                    }
-                } // while
-
-              free(balls);
-              free(hats);
-              free(buttons);
-              free(axes);
-
-              endwin();
-            }
-        }
-      else if (argc == 3 && (strcmp(argv[1], "--event") == 0 ||
-                             strcmp(argv[1], "-e") == 0))
-        {
-          int joy_idx;
-          if (!str2int(argv[2], &joy_idx))
-            {
-              fprintf(stderr, "Error: JOYSTICKNUM argument must be a number, but was '%s'\n", argv[2]);
-              exit(1);
-            }
-
-          SDL_Joystick* joy = SDL_JoystickOpen(joy_idx);
-          if (!joy)
-            {
-              fprintf(stderr, "Unable to open joystick %d\n", joy_idx);
-            }
-          else
-            {
-              print_joystick_info(joy_idx, joy);
-
-              printf("Entering joystick test loop, press Ctrl-c to exit\n");
-              int quit = 0;
-              SDL_Event event;
-
-              while(!quit && SDL_WaitEvent(&event))
-                {
-                  switch(event.type)
-                    {
-                      case SDL_JOYAXISMOTION:
-                        printf("SDL_JOYAXISMOTION: joystick: %d axis: %d value: %d\n",
-                               event.jaxis.which, event.jaxis.axis, event.jaxis.value);
-                        break;
-
-                      case SDL_JOYBUTTONDOWN:
-                        printf("SDL_JOYBUTTONUP: joystick: %d button: %d state: %d\n",
-                               event.jbutton.which, event.jbutton.button, event.jbutton.state);
-                        break;
-                      case SDL_JOYBUTTONUP:
-                        printf("SDL_JOYBUTTONDOWN: joystick: %d button: %d state: %d\n",
-                               event.jbutton.which, event.jbutton.button, event.jbutton.state);
-                        break;
-
-                      case SDL_JOYHATMOTION:
-                        printf("SDL_JOYHATMOTION: joystick: %d hat: %d value: %d\n",
-                               event.jhat.which, event.jhat.hat, event.jhat.value);
-                        break;
-
-                      case SDL_JOYBALLMOTION:
-                        printf("SDL_JOYBALLMOTION: joystick: %d ball: %d x: %d y: %d\n",
-                               event.jball.which, event.jball.ball, event.jball.xrel, event.jball.yrel);
-                        break;
-
-                      case SDL_QUIT:
-                        quit = 1;
-                        printf("Recieved interrupt, exiting\n");
-                        break;
-
-                      default:
-                        fprintf(stderr, "Error: Unhandled event type: %d\n", event.type);
-                    }
-                }
-              SDL_JoystickClose(joy);
-
-            }
-          fprintf(stderr, "Unable to init SDL: %s\n", SDL_GetError());
-        }
-      else
-        {
-          fprintf(stderr, "%s: unknown arguments\n", argv[0]);
-          fprintf(stderr, "Try '%s --help' for more informations\n", argv[0]);
-        }
-    }
-}
-
-  /* EOF */

Copied: tags/sdl-jstest-0.1.0/sdl-jstest.c (from rev 3297, trunk/sdl-jstest/sdl-jstest.c)



From grumbel at mail.berlios.de  Fri May  7 20:23:30 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 20:23:30 +0200
Subject: [Windstille-commit] r3299 - trunk/sdl-jstest/debian
Message-ID: <201005071823.o47INUn0025163@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 20:23:29 +0200 (Fri, 07 May 2010)
New Revision: 3299

Modified:
   trunk/sdl-jstest/debian/changelog
   trunk/sdl-jstest/debian/control
Log:
Added scons to the Build-Depends

Modified: trunk/sdl-jstest/debian/changelog
===================================================================
--- trunk/sdl-jstest/debian/changelog	2010-05-07 17:18:46 UTC (rev 3298)
+++ trunk/sdl-jstest/debian/changelog	2010-05-07 18:23:29 UTC (rev 3299)
@@ -1,3 +1,9 @@
+sdl-jstest (0.1.0-2) lucid; urgency=low
+
+  * Added scons to the Build-Depends
+
+ -- Ingo Ruhnke <grumbel at gmx.de>  Fri, 07 May 2010 18:43:22 +0200
+
 sdl-jstest (0.1.0-1) lucid; urgency=low
 
   * Initial release

Modified: trunk/sdl-jstest/debian/control
===================================================================
--- trunk/sdl-jstest/debian/control	2010-05-07 17:18:46 UTC (rev 3298)
+++ trunk/sdl-jstest/debian/control	2010-05-07 18:23:29 UTC (rev 3299)
@@ -2,7 +2,7 @@
 Section: utils
 Priority: extra
 Maintainer: Ingo Ruhnke <grumbel at gmx.de>
-Build-Depends: debhelper (>= 7), libsdl1.2-dev
+Build-Depends: debhelper (>= 7), libsdl1.2-dev, scons
 Standards-Version: 3.8.0
 Homepage: svn://svn.berlios.de/windstille/trunk/sdl-jstest
 



From grumbel at mail.berlios.de  Fri May  7 21:39:52 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 21:39:52 +0200
Subject: [Windstille-commit] r3300 - in trunk/sdl-jstest: . debian
Message-ID: <201005071939.o47JdqRx000751@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 21:39:51 +0200 (Fri, 07 May 2010)
New Revision: 3300

Added:
   trunk/sdl-jstest/sdl-jstest.1
   trunk/sdl-jstest/sdl-jstest.xml
Removed:
   trunk/sdl-jstest/SConstruct
Modified:
   trunk/sdl-jstest/Makefile
   trunk/sdl-jstest/debian/dirs
   trunk/sdl-jstest/debian/rules
Log:
Added a manpage

Modified: trunk/sdl-jstest/Makefile
===================================================================
--- trunk/sdl-jstest/Makefile	2010-05-07 18:23:29 UTC (rev 3299)
+++ trunk/sdl-jstest/Makefile	2010-05-07 19:39:51 UTC (rev 3300)
@@ -1,4 +1,9 @@
+all: sdl-jstest sdl-jstest.1
+
 sdl-jstest: sdl-jstest.c
 	$(CC) -o $@ $< -std=c99 -Wall `sdl-config --cflags --libs` -lcurses
 
+sdl-jstest.1: sdl-jstest.xml
+	docbook2x-man --to-stdout $< > $@
+
 # EOF #

Deleted: trunk/sdl-jstest/SConstruct
===================================================================
--- trunk/sdl-jstest/SConstruct	2010-05-07 18:23:29 UTC (rev 3299)
+++ trunk/sdl-jstest/SConstruct	2010-05-07 19:39:51 UTC (rev 3300)
@@ -1,25 +0,0 @@
-##  -*- python -*-
-##  sdl-jstest - A Joystick Test Application For SDL
-##  Copyright (C) 2000,2005 Ingo Ruhnke <grumbel at gmx.de>
-##
-##  This program is free software: you can redistribute it and/or modify
-##  it under the terms of the GNU General Public License as published by
-##  the Free Software Foundation, either version 3 of the License, or
-##  (at your option) any later version.
-##  
-##  This program is distributed in the hope that it will be useful,
-##  but WITHOUT ANY WARRANTY; without even the implied warranty of
-##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-##  GNU General Public License for more details.
-##  
-##  You should have received a copy of the GNU General Public License
-##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
-
-sdl_jstest_env = Environment()
-sdl_jstest_env.Append(CCFLAGS=["-std=c99", "-Wall"])
-sdl_jstest_env.Append(LIBS=["curses"])
-sdl_jstest_env.ParseConfig('sdl-config --cflags --libs')
-sdl_jstest_env.Program('sdl-jstest', ['sdl-jstest.c'])
-
-# EOF #
-

Modified: trunk/sdl-jstest/debian/dirs
===================================================================
--- trunk/sdl-jstest/debian/dirs	2010-05-07 18:23:29 UTC (rev 3299)
+++ trunk/sdl-jstest/debian/dirs	2010-05-07 19:39:51 UTC (rev 3300)
@@ -1,2 +1,2 @@
 usr/bin
-
+usr/share/man/man1

Modified: trunk/sdl-jstest/debian/rules
===================================================================
--- trunk/sdl-jstest/debian/rules	2010-05-07 18:23:29 UTC (rev 3299)
+++ trunk/sdl-jstest/debian/rules	2010-05-07 19:39:51 UTC (rev 3300)
@@ -54,6 +54,7 @@
 	# Add here commands to install the package into debian/sdl-jstest.
 	# $(MAKE) DESTDIR=$(CURDIR)/debian/sdl-jstest install
 	install sdl-jstest $(CURDIR)/debian/sdl-jstest/usr/bin/
+	install sdl-jstest.1 $(CURDIR)/debian/sdl-jstest/usr/share/man/man1/
 
 # Build architecture-independent files here.
 binary-indep: install

Added: trunk/sdl-jstest/sdl-jstest.1
===================================================================
--- trunk/sdl-jstest/sdl-jstest.1	2010-05-07 18:23:29 UTC (rev 3299)
+++ trunk/sdl-jstest/sdl-jstest.1	2010-05-07 19:39:51 UTC (rev 3300)
@@ -0,0 +1,65 @@
+'\" -*- coding: us-ascii -*-
+.if \n(.g .ds T< \\FC
+.if \n(.g .ds T> \\F[\n[.fam]]
+.de URL
+\\$2 \(la\\$1\(ra\\$3
+..
+.if \n(.g .mso www.tmac
+.TH "sdl-jstest " 1 2010-05-07 0.1.0 "User Commands"
+.SH NAME
+sdl-jstest
+\- A joystick test application for SDL 
+.SH SYNOPSIS
+'nh
+.fi
+.ad l
+\fBsdl-jstest\fR \kx
+.if (\nx>(\n(.l/2)) .nr x (\n(.l/5)
+'in \n(.iu+\nxu
+[--help] [--version] [--list] [--test \fIJOYNUM\fR] [--event \fIJOYNUM\fR]
+'in \n(.iu-\nxu
+.ad b
+'hy
+.SH DESCRIPTION
+.TP 
+\*(T<\fB\-h\fR\*(T>, \*(T<\fB\-\-help\fR\*(T>
+Display help text and exit.
+.TP 
+\*(T<\fB\-\-version\fR\*(T>
+Display the version number and exit.
+.TP 
+\*(T<\fB\-\-list\fR\*(T>
+Search for available joysticks and list their properties.
+.TP 
+\*(T<\fB\-\-test\fR\*(T> \fIJOYNUM\fR
+Display a graphical representation of the current joystick state.
+.TP 
+\*(T<\fB\-\-event\fR\*(T> \fIJOYNUM\fR
+Display the events that are recieved from the joystick.
+.SH "SDL CONFIGURATION"
+What SDL detects as axis is treated as a hat and which as normal
+axis can be configured with the environment variable
+\fBSDL_LINUX_JOYSTICK:\fR
+.TP 
+\fBSDL_LINUX_JOYSTICK\fR
+Special joystick configuration string for linux. The format is
+\*(T<\fB"name numaxes numhats numballs"\fR\*(T>
+where name is the name string of the joystick (possibly in single
+quotes), and the rest are the number of axes, hats and balls
+respectively.
+.PP
+A simple example would be:
+.PP
+.nf
+\*(T<$ export SDL_LINUX_JOYSTICK="'Xbox Gamepad (userspace driver)' 6 0 0"\*(T>
+.fi
+.PP
+Which makes all axis be handled as normal axis and none as hat,
+as most games don't use hats.
+.PP
+A complete list of which environment variables SDL supports can be found at:
+.TP 0.2i
+\(bu
+.URL ftp://ptah.lnf.kth.se/pub/misc/sdl-env-vars ""
+.SH "SEE ALSO"
+jstest(1), jstest-gtk(1), xboxdrv(1)

Added: trunk/sdl-jstest/sdl-jstest.xml
===================================================================
--- trunk/sdl-jstest/sdl-jstest.xml	2010-05-07 18:23:29 UTC (rev 3299)
+++ trunk/sdl-jstest/sdl-jstest.xml	2010-05-07 19:39:51 UTC (rev 3300)
@@ -0,0 +1,137 @@
+<?xml version="1.0" standalone="no"?>
+<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
+          "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
+<refentry id="sdl-jstest">
+  <refentryinfo>
+    <date>2010-05-07</date>
+  </refentryinfo>
+
+  <refmeta>
+    <refentrytitle>
+      <application>sdl-jstest</application>
+    </refentrytitle>
+    <manvolnum>1</manvolnum>
+    <refmiscinfo class="version">0.1.0</refmiscinfo>
+    <refmiscinfo class="author">0.1.0</refmiscinfo>
+    <refmiscinfo class="manual">User Commands</refmiscinfo>
+    <refmiscinfo class="source">sdl-jstest</refmiscinfo>
+  </refmeta>
+
+  <refnamediv>
+    <refname>
+      <application>sdl-jstest</application>
+    </refname>
+    <refpurpose>
+      A joystick test application for SDL
+    </refpurpose>
+  </refnamediv>
+
+  <refsynopsisdiv>
+    <cmdsynopsis>
+      <command>sdl-jstest</command>
+      <arg>--help</arg>
+      <arg>--version</arg>
+      <arg>--list</arg>
+      <arg>--test <replaceable>JOYNUM</replaceable></arg>
+      <arg>--event <replaceable>JOYNUM</replaceable></arg>
+    </cmdsynopsis>
+  </refsynopsisdiv>
+
+  <refsect1>
+    <title>DESCRIPTION</title>
+    <variablelist>
+
+      <varlistentry>
+        <term><option>-h</option>, <option>--help</option></term>
+        <listitem>
+          <para>Display help text and exit.</para>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--version</option></term>
+        <listitem>
+          <para>
+            Display the version number and exit.
+          </para>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--list</option></term>
+        <listitem>
+          <para>
+            Search for available joysticks and list their properties.
+          </para>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--test</option> <replaceable class="parameter">JOYNUM</replaceable></term>
+        <listitem>
+          <para>
+            Display a graphical representation of the current joystick state.
+          </para>
+        </listitem>
+      </varlistentry>
+
+      <varlistentry>
+        <term><option>--event</option> <replaceable class="parameter">JOYNUM</replaceable></term>
+        <listitem>
+          <para>
+            Display the events that are recieved from the joystick.
+          </para>
+        </listitem>
+      </varlistentry>
+    </variablelist>
+  </refsect1>
+
+  <refsect1>
+    <title>SDL Configuration</title>
+    <para>
+      What SDL detects as axis is treated as a hat and which as normal
+      axis can be configured with the environment variable
+      <envar>SDL_LINUX_JOYSTICK:</envar>
+    </para>
+
+    <variablelist>
+      <varlistentry>
+        <term><envar>SDL_LINUX_JOYSTICK</envar></term>
+        <listitem>
+          Special joystick configuration string for linux. The format is
+          <option>"name numaxes numhats numballs"</option>
+          where name is the name string of the joystick (possibly in single
+          quotes), and the rest are the number of axes, hats and balls
+          respectively.
+        </listitem>
+      </varlistentry>
+    </variablelist>
+    <para>        
+      A simple example would be:
+    </para>
+    
+    <programlisting>$ export SDL_LINUX_JOYSTICK="'Xbox Gamepad (userspace driver)' 6 0 0"</programlisting>
+
+    <para>
+      Which makes all axis be handled as normal axis and none as hat,
+      as most games don't use hats.
+    </para>
+
+    <para>
+      A complete list of which environment variables SDL supports can be found at:
+    </para>
+
+    <itemizedlist>
+      <listitem><ulink url="ftp://ptah.lnf.kth.se/pub/misc/sdl-env-vars" /></listitem>
+    </itemizedlist>
+
+  </refsect1>
+
+  <refsect1>
+    <title>See also</title>
+    <para>
+      jstest(1), jstest-gtk(1), xboxdrv(1)
+    </para>
+  </refsect1>
+</refentry>
+



From grumbel at mail.berlios.de  Fri May  7 21:41:14 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 21:41:14 +0200
Subject: [Windstille-commit] r3301 - trunk/sdl-jstest/debian
Message-ID: <201005071941.o47JfEZ6000936@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 21:41:14 +0200 (Fri, 07 May 2010)
New Revision: 3301

Modified:
   trunk/sdl-jstest/debian/changelog
Log:
Added a manpage

Modified: trunk/sdl-jstest/debian/changelog
===================================================================
--- trunk/sdl-jstest/debian/changelog	2010-05-07 19:39:51 UTC (rev 3300)
+++ trunk/sdl-jstest/debian/changelog	2010-05-07 19:41:14 UTC (rev 3301)
@@ -1,3 +1,9 @@
+sdl-jstest (0.1.0-3) lucid; urgency=low
+
+  * Added a man page
+
+ -- Ingo Ruhnke <grumbel at gmx.de>  Fri, 07 May 2010 21:40:18 +0200
+
 sdl-jstest (0.1.0-2) lucid; urgency=low
 
   * Added scons to the Build-Depends



From grumbel at mail.berlios.de  Fri May  7 21:43:27 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 21:43:27 +0200
Subject: [Windstille-commit] r3302 - trunk/sdl-jstest/debian
Message-ID: <201005071943.o47JhRLf001169@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 21:43:27 +0200 (Fri, 07 May 2010)
New Revision: 3302

Modified:
   trunk/sdl-jstest/debian/control
   trunk/sdl-jstest/debian/rules
Log:
Fixed Build-Depends

Modified: trunk/sdl-jstest/debian/control
===================================================================
--- trunk/sdl-jstest/debian/control	2010-05-07 19:41:14 UTC (rev 3301)
+++ trunk/sdl-jstest/debian/control	2010-05-07 19:43:27 UTC (rev 3302)
@@ -2,7 +2,7 @@
 Section: utils
 Priority: extra
 Maintainer: Ingo Ruhnke <grumbel at gmx.de>
-Build-Depends: debhelper (>= 7), libsdl1.2-dev, scons
+Build-Depends: debhelper (>= 7), libsdl1.2-dev, make, docbook2x
 Standards-Version: 3.8.0
 Homepage: svn://svn.berlios.de/windstille/trunk/sdl-jstest
 

Modified: trunk/sdl-jstest/debian/rules
===================================================================
--- trunk/sdl-jstest/debian/rules	2010-05-07 19:41:14 UTC (rev 3301)
+++ trunk/sdl-jstest/debian/rules	2010-05-07 19:43:27 UTC (rev 3302)
@@ -28,7 +28,7 @@
 
 	# Add here commands to compile the package.
 	# $(MAKE)
-	scons
+	make
 	#docbook-to-man debian/sdl-jstest.sgml > sdl-jstest.1
 
 	touch $@



From grumbel at mail.berlios.de  Fri May  7 21:45:23 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 21:45:23 +0200
Subject: [Windstille-commit] r3303 - in trunk/sdl-jstest: . debian
Message-ID: <201005071945.o47JjNfi001511@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 21:45:23 +0200 (Fri, 07 May 2010)
New Revision: 3303

Modified:
   trunk/sdl-jstest/Makefile
   trunk/sdl-jstest/debian/rules
Log:
Added make clean target

Modified: trunk/sdl-jstest/Makefile
===================================================================
--- trunk/sdl-jstest/Makefile	2010-05-07 19:43:27 UTC (rev 3302)
+++ trunk/sdl-jstest/Makefile	2010-05-07 19:45:23 UTC (rev 3303)
@@ -1,5 +1,11 @@
+.PHONY: all clean
+
 all: sdl-jstest sdl-jstest.1
 
+clean:
+	rm sdl-jstest
+	rm sdl-jstest.1
+
 sdl-jstest: sdl-jstest.c
 	$(CC) -o $@ $< -std=c99 -Wall `sdl-config --cflags --libs` -lcurses
 

Modified: trunk/sdl-jstest/debian/rules
===================================================================
--- trunk/sdl-jstest/debian/rules	2010-05-07 19:43:27 UTC (rev 3302)
+++ trunk/sdl-jstest/debian/rules	2010-05-07 19:45:23 UTC (rev 3303)
@@ -39,9 +39,7 @@
 	rm -f build-stamp configure-stamp
 
 	# Add here commands to clean up after the build process.
-	scons -c
-	rm -rf .sconf_temp/
-	rm -f .sconsign.dblite
+	make clean
 
 	dh_clean 
 



From grumbel at mail.berlios.de  Fri May  7 21:46:46 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 7 May 2010 21:46:46 +0200
Subject: [Windstille-commit] r3304 - trunk/sdl-jstest
Message-ID: <201005071946.o47JkkWV001595@sheep.berlios.de>

Author: grumbel
Date: 2010-05-07 21:46:46 +0200 (Fri, 07 May 2010)
New Revision: 3304

Modified:
   trunk/sdl-jstest/Makefile
Log:
Fixed make clean target

Modified: trunk/sdl-jstest/Makefile
===================================================================
--- trunk/sdl-jstest/Makefile	2010-05-07 19:45:23 UTC (rev 3303)
+++ trunk/sdl-jstest/Makefile	2010-05-07 19:46:46 UTC (rev 3304)
@@ -3,8 +3,8 @@
 all: sdl-jstest sdl-jstest.1
 
 clean:
-	rm sdl-jstest
-	rm sdl-jstest.1
+	rm -f sdl-jstest
+	rm -f sdl-jstest.1
 
 sdl-jstest: sdl-jstest.c
 	$(CC) -o $@ $< -std=c99 -Wall `sdl-config --cflags --libs` -lcurses



From grumbel at mail.berlios.de  Wed May 12 06:14:43 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 12 May 2010 06:14:43 +0200
Subject: [Windstille-commit] r3305 - trunk/windstille
Message-ID: <201005120414.o4C4Ehjh002062@sheep.berlios.de>

Author: grumbel
Date: 2010-05-12 06:14:42 +0200 (Wed, 12 May 2010)
New Revision: 3305

Modified:
   trunk/windstille/Makefile
Log:
Extended Makefile with full clean and install targets and DESTDIR, DATADIR, BINDIR and PREFIX handling

Modified: trunk/windstille/Makefile
===================================================================
--- trunk/windstille/Makefile	2010-05-07 19:46:46 UTC (rev 3304)
+++ trunk/windstille/Makefile	2010-05-12 04:14:42 UTC (rev 3305)
@@ -1,4 +1,58 @@
-all:
+##  Windstille - A Sci-Fi Action-Adventure Game
+##  Copyright (C) 2010 Ingo Ruhnke <grumbel at gmx.de>
+##
+##  This program is free software: you can redistribute it and/or modify
+##  it under the terms of the GNU General Public License as published by
+##  the Free Software Foundation, either version 3 of the License, or
+##  (at your option) any later version.
+##  
+##  This program is distributed in the hope that it will be useful,
+##  but WITHOUT ANY WARRANTY; without even the implied warranty of
+##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+##  GNU General Public License for more details.
+##  
+##  You should have received a copy of the GNU General Public License
+##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+DESTDIR = 
+PREFIX  = "/usr/local"
+DATADIR = "${PREFIX}/share/windstille"
+BINDIR  = "${PREFIX}/bin"
+
+build/windstille:
 	scons
 
+clean:
+	scons -c
+
+install: build/windstille
+	install -d "${DESTDIR}${BINDIR}"
+	echo "#!/bin/sh\nexec \"${BINDIR}/windstille.bin\" --datadir \"${DATADIR}/\"" > "${DESTDIR}${BINDIR}/windstille"
+	chmod 755 "${DESTDIR}${BINDIR}/windstille"
+	install -D build/windstille "${DESTDIR}${BINDIR}/windstille.bin"
+	cd data/; \
+	find -type f \( \
+	-name "*.arm" -o \
+	-name "*.frag" -o \
+	-name "*.jpg" -o \
+	-name "*.mesh" -o \
+	-name "*.nav" -o \
+	-name "*.nut" -o \
+	-name "*.ogg" -o \
+	-name "*.particles" -o \
+	-name "*.png" -o \
+	-name "*.po" -o \
+	-name "*.pose" -o \
+	-name "*.scm" -o \
+	-name "*.sprite" -o \
+	-name "*.svg" -o \
+	-name "*.ttf" -o \
+	-name "*.wav" -o \
+	-name "*.wsprite" -o \
+	-name "*.wst" -o \
+	-name "*.xcf" \) \
+	-exec install -D {} ${DESTDIR}${DATADIR}/{} \;
+
+.PHONY : clean install
+
 # EOF #



From grumbel at mail.berlios.de  Wed May 12 14:12:21 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 12 May 2010 14:12:21 +0200
Subject: [Windstille-commit] r3306 - in trunk/windstille/src: display editor
	util
Message-ID: <201005121212.o4CCCLdP018938@sheep.berlios.de>

Author: grumbel
Date: 2010-05-12 14:12:20 +0200 (Wed, 12 May 2010)
New Revision: 3306

Modified:
   trunk/windstille/src/display/display.cpp
   trunk/windstille/src/editor/editor_window.cpp
   trunk/windstille/src/editor/main.cpp
   trunk/windstille/src/editor/object_selector.cpp
   trunk/windstille/src/editor/object_selector.hpp
   trunk/windstille/src/editor/sector_model.cpp
   trunk/windstille/src/editor/sector_model_builder.cpp
   trunk/windstille/src/editor/windstille_widget.cpp
   trunk/windstille/src/util/directory.cpp
Log:
Fixed Pathname handling so that install is possible

Modified: trunk/windstille/src/display/display.cpp
===================================================================
--- trunk/windstille/src/display/display.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/display/display.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -475,7 +475,7 @@
   int len = size.width * size.height * 3;
   
   boost::scoped_array<GLbyte> pixels(new GLbyte[len]);
-
+  glPixelStorei(GL_PACK_ALIGNMENT, 1);
   glReadPixels(0, 0, size.width, size.height, GL_RGB, GL_UNSIGNED_BYTE, pixels.get());
 
   if (0)

Modified: trunk/windstille/src/editor/editor_window.cpp
===================================================================
--- trunk/windstille/src/editor/editor_window.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/editor_window.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -521,7 +521,7 @@
 
   dialog.add_button(Gtk::Stock::CANCEL, Gtk::RESPONSE_CANCEL);
   dialog.add_button(Gtk::Stock::OPEN,   Gtk::RESPONSE_OK);
-  dialog.set_current_folder("data/sectors/");
+  dialog.set_current_folder(Pathname("sectors/", Pathname::kDataPath).get_sys_path());
 
   switch(dialog.run())
   {
@@ -578,7 +578,7 @@
     dialog.add_button(Gtk::Stock::SAVE,   Gtk::RESPONSE_OK);
 
     if (wst->get_filename().empty())
-      dialog.set_current_folder("data/sectors/");
+      dialog.set_current_folder(Pathname("sectors", Pathname::kDataPath).get_sys_path());
     else
       dialog.set_current_folder(Glib::path_get_dirname(wst->get_filename()));
 

Modified: trunk/windstille/src/editor/main.cpp
===================================================================
--- trunk/windstille/src/editor/main.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/main.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -100,7 +100,7 @@
     SpriteManager  sprite2d_manager;
 
     Glib::RefPtr<Gtk::IconTheme> icon_theme = Gtk::IconTheme::get_default();
-    icon_theme->append_search_path("data/editor/");
+    icon_theme->append_search_path(Pathname("editor", Pathname::kDataPath).get_sys_path());
       
     EditorWindow window(glconfig);
     window.show_all();

Modified: trunk/windstille/src/editor/object_selector.cpp
===================================================================
--- trunk/windstille/src/editor/object_selector.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/object_selector.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -26,6 +26,7 @@
 #include <gtkmm/treemodelcolumn.h>
 
 #include "util/util.hpp"
+#include "util/directory.hpp"
 #include "editor/windstille_widget.hpp"
 #include "editor/editor_window.hpp"
 #include "editor/object_selector.hpp"
@@ -34,7 +35,7 @@
 {
 public:
   Gtk::TreeModelColumn<std::string> url;
-  Gtk::TreeModelColumn<std::string> pathname;
+  Gtk::TreeModelColumn<Pathname> pathname;
   Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > icon;
   Gtk::TreeModelColumn<unsigned int>    filter_mask;
   
@@ -160,7 +161,7 @@
 
 void
 ObjectSelector::add_decal(const Glib::RefPtr<Gdk::Pixbuf>& icon,
-                          const std::string& pathname,
+                          const Pathname& pathname,
                           const std::string& url,
                           unsigned int filter_)
 {
@@ -179,26 +180,15 @@
 }
 
 void
-ObjectSelector::add_decals_from_directory(const std::string& pathname, unsigned int filter_)
+ObjectSelector::add_decals_from_directory(const Pathname& pathname, unsigned int filter_)
 {
-  std::vector<Glib::ustring> images;
+  Directory::List images = Directory::read(pathname, ".png");
 
-  Glib::Dir dir(pathname);
-  for(Glib::Dir::iterator i = dir.begin(); i != dir.end(); ++i)
-  {
-    if (has_suffix(*i, ".png"))
-    {
-      Glib::ustring path_ = pathname;
-      path_ += *i;
-      images.push_back(path_);
-    }
-  }
-
   std::sort(images.begin(), images.end());
 
-  for(std::vector<Glib::ustring>::iterator i = images.begin(); i != images.end(); ++i)    
+  for(Directory::List::iterator i = images.begin(); i != images.end(); ++i)
   {
-    Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(*i);
+    Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(i->get_sys_path());
     Glib::RefPtr<Gdk::Pixbuf> icon;
 
     { // Create an icon, by scaling it down, keeping aspect
@@ -208,7 +198,7 @@
 
       if (1)
       {
-        icon = Gdk::Pixbuf::create_from_file("data/editor/icon_bg.png");
+        icon = Gdk::Pixbuf::create_from_file(Pathname("editor/icon_bg.png", Pathname::kDataPath).get_sys_path());
         size = std::max(icon->get_width(), icon->get_height());
       }
       else
@@ -244,21 +234,17 @@
                         255);
     }
 
-    add_decal(icon, *i, 
-              "file:///home/ingo/projects/windstille/trunk/windstille/" + *i, 
-              filter_);
+    add_decal(icon, *i, "file://" + i->get_sys_path(), filter_);
   }
 }
 
 void
 ObjectSelector::populate()
 {
-  add_decals_from_directory("data/images/decal/", OBJECT_GROUP_DECAL);
-  add_decals_from_directory("data/images/objects/bar/", OBJECT_GROUP_DECAL | OBJECT_GROUP_OBJECT | OBJECT_GROUP_DECOR);
-  add_decals_from_directory("data/images/objects/", OBJECT_GROUP_DECAL | OBJECT_GROUP_OBJECT | OBJECT_GROUP_DECOR);
-  add_decals_from_directory("data/images/", OBJECT_GROUP_LIGHT);
-  //("data/images/inventory/");
-  //("data/images/portraits/");
+  add_decals_from_directory(Pathname("images/decal/", Pathname::kDataPath), OBJECT_GROUP_DECAL);
+  add_decals_from_directory(Pathname("images/objects/bar/", Pathname::kDataPath), OBJECT_GROUP_DECAL | OBJECT_GROUP_OBJECT | OBJECT_GROUP_DECOR);
+  add_decals_from_directory(Pathname("images/objects/", Pathname::kDataPath), OBJECT_GROUP_DECAL | OBJECT_GROUP_OBJECT | OBJECT_GROUP_DECOR);
+  add_decals_from_directory(Pathname("images/", Pathname::kDataPath), OBJECT_GROUP_LIGHT);
 }
 void
 ObjectSelector::refresh()
@@ -277,7 +263,7 @@
 void
 ObjectSelector::on_drag_begin(const Glib::RefPtr<Gdk::DragContext>& context)
 {
-  std::string iconpath;
+  Pathname iconpath;
 
   Gtk::IconView::ArrayHandle_TreePaths selection = iconview.get_selected_items();
   for(Gtk::IconView::ArrayHandle_TreePaths::iterator i = selection.begin();
@@ -296,7 +282,7 @@
   }
   else
   {
-    Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(iconpath);
+    Glib::RefPtr<Gdk::Pixbuf> pixbuf = Gdk::Pixbuf::create_from_file(iconpath.get_sys_path());
     if (WindstilleWidget* wst = EditorWindow::current()->get_windstille_widget())
     {
       pixbuf = pixbuf->scale_simple(std::max(4, int(static_cast<float>(pixbuf->get_width())  * wst->get_state().get_zoom())),
@@ -325,7 +311,7 @@
 
     if (selection_data.get_target() == "application/x-windstille-decal")
     {
-      const std::string& str = (*it)[Columns::instance().pathname];
+      std::string str = static_cast<Pathname>((*it)[Columns::instance().pathname]).get_physfs_path();
       selection_data.set(8, reinterpret_cast<const guint8*>(str.c_str()), str.length());
     }
     else

Modified: trunk/windstille/src/editor/object_selector.hpp
===================================================================
--- trunk/windstille/src/editor/object_selector.hpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/object_selector.hpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -86,11 +86,11 @@
   virtual ~ObjectSelector();
 
   void add_decal(const Glib::RefPtr<Gdk::Pixbuf>& icon,
-                 const std::string& pathname,
+                 const Pathname& pathname,
                  const std::string& url,
                  unsigned int filter);
 
-  void add_decals_from_directory(const std::string& pathname, unsigned int filter);
+  void add_decals_from_directory(const Pathname& pathname, unsigned int filter);
 
   void populate();
   void refresh();

Modified: trunk/windstille/src/editor/sector_model.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/sector_model.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -38,6 +38,7 @@
 #include "navigation/node.hpp"
 #include "scenegraph/drawable_group.hpp"
 #include "util/file_reader.hpp"
+#include "util/pathname.hpp"
 
 LayerManagerColumns* LayerManagerColumns::instance_ = 0;
 
@@ -62,7 +63,7 @@
   Gtk::ListStore::iterator it = layer_tree->append();
 
   LayerHandle layer(new Layer(*this));
-  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file(Pathname("editor/type.png", Pathname::kDataPath).get_sys_path());
   (*it)[LayerManagerColumns::instance().name]      = Glib::ustring("Scene");
   (*it)[LayerManagerColumns::instance().visible]   = true;
   (*it)[LayerManagerColumns::instance().locked]    = false;
@@ -94,7 +95,7 @@
   else
     it = layer_tree->insert(layer_tree->get_iter(path));
   
-  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file(Pathname("editor/type.png", Pathname::kDataPath).get_sys_path());
   (*it)[LayerManagerColumns::instance().name]      = layer->get_name();
   (*it)[LayerManagerColumns::instance().visible]   = layer->is_visible();
   (*it)[LayerManagerColumns::instance().locked]    = layer->is_locked();
@@ -112,7 +113,7 @@
     it = layer_tree->insert(layer_tree->get_iter(path));
 
   LayerHandle layer(new Layer(*this));
-  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file(Pathname("/editor/type.png", Pathname::kDataPath).get_sys_path());
   (*it)[LayerManagerColumns::instance().name]      = name;
   (*it)[LayerManagerColumns::instance().visible]   = true; 
   (*it)[LayerManagerColumns::instance().locked]    = false; 

Modified: trunk/windstille/src/editor/sector_model_builder.cpp
===================================================================
--- trunk/windstille/src/editor/sector_model_builder.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/sector_model_builder.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -156,7 +156,7 @@
   // Append the layer to the tree
   Gtk::ListStore::iterator it = m_sector.get_layer_tree()->append();
 
-  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file("data/editor/type.png");
+  (*it)[LayerManagerColumns::instance().type_icon] = Gdk::Pixbuf::create_from_file(Pathname("editor/type.png", Pathname::kDataPath).get_sys_path());
   (*it)[LayerManagerColumns::instance().name]      = name;
   (*it)[LayerManagerColumns::instance().visible]   = visible; 
   (*it)[LayerManagerColumns::instance().locked]    = locked; 

Modified: trunk/windstille/src/editor/windstille_widget.cpp
===================================================================
--- trunk/windstille/src/editor/windstille_widget.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/editor/windstille_widget.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -481,12 +481,15 @@
                                         int x, int y, const Gtk::SelectionData& data,
                                         guint /*info*/, guint /*time*/)
 {
-  //std::cout << "WindstilleWidget: on_drag_data_received: "
-  //          << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
-  
+  if (false)
+  {
+    std::cout << "WindstilleWidget: on_drag_data_received: "
+              << x << ", " << y << ": " << data.get_data_type() << " " << data.get_data_as_string() << std::endl;
+  }
+
   ObjectModelHandle object = DecalObjectModel::create(data.get_data_as_string(),
                                                       state.screen_to_world(Vector2f(static_cast<float>(x), static_cast<float>(y))),
-                                                      data.get_data_as_string().substr(5), 
+                                                      data.get_data_as_string(),
                                                       map_type);
 
   // if layer mask is 0, set it to all layers instead, so that the

Modified: trunk/windstille/src/util/directory.cpp
===================================================================
--- trunk/windstille/src/util/directory.cpp	2010-05-12 04:14:42 UTC (rev 3305)
+++ trunk/windstille/src/util/directory.cpp	2010-05-12 12:12:20 UTC (rev 3306)
@@ -49,12 +49,10 @@
        it != boost::filesystem::directory_iterator();
        ++it)
   {
-    // FIXME: Would make sense to try to keep the Pathname::type
-    // intact, instead of converting everything to system path
     const std::string& filename = it->path().string();
     if (has_suffix(filename, suffix))
     {
-      entries.push_back(Pathname(filename, Pathname::kSysPath));
+      entries.push_back(Pathname(pathname.get_raw_path() + it->leaf(), pathname.get_type()));
     }
   }
 



From grumbel at mail.berlios.de  Wed May 12 14:12:48 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 12 May 2010 14:12:48 +0200
Subject: [Windstille-commit] r3307 - trunk/windstille
Message-ID: <201005121212.o4CCCm9D018974@sheep.berlios.de>

Author: grumbel
Date: 2010-05-12 14:12:48 +0200 (Wed, 12 May 2010)
New Revision: 3307

Modified:
   trunk/windstille/Makefile
Log:
Split data and exec installs

Modified: trunk/windstille/Makefile
===================================================================
--- trunk/windstille/Makefile	2010-05-12 12:12:20 UTC (rev 3306)
+++ trunk/windstille/Makefile	2010-05-12 12:12:48 UTC (rev 3307)
@@ -24,12 +24,23 @@
 
 clean:
 	scons -c
+	rm -rf .sconf_temp/
+	rm -f .sconsign.dblite
 
-install: build/windstille
+install: install-exec install-data
+
+install-exec: build/windstille
 	install -d "${DESTDIR}${BINDIR}"
-	echo "#!/bin/sh\nexec \"${BINDIR}/windstille.bin\" --datadir \"${DATADIR}/\"" > "${DESTDIR}${BINDIR}/windstille"
+
+	install -D build/windstille "${DESTDIR}${BINDIR}/windstille.bin"
+	echo "#!/bin/sh\nexec \"${BINDIR}/windstille.bin\" --datadir \"${DATADIR}\"" > "${DESTDIR}${BINDIR}/windstille"
 	chmod 755 "${DESTDIR}${BINDIR}/windstille"
-	install -D build/windstille "${DESTDIR}${BINDIR}/windstille.bin"
+
+	install -D build/windstille-editor "${DESTDIR}${BINDIR}/windstille-editor.bin"
+	echo "#!/bin/sh\nexec \"${BINDIR}/windstille-editor.bin\" --datadir \"${DATADIR}/\"" > "${DESTDIR}${BINDIR}/windstille-editor"
+	chmod 755 "${DESTDIR}${BINDIR}/windstille-editor"
+
+install-data:
 	cd data/; \
 	find -type f \( \
 	-name "*.arm" -o \
@@ -53,6 +64,6 @@
 	-name "*.xcf" \) \
 	-exec install -D {} ${DESTDIR}${DATADIR}/{} \;
 
-.PHONY : clean install
+.PHONY : clean install install-exec install-data
 
 # EOF #



From grumbel at mail.berlios.de  Wed May 12 14:13:20 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Wed, 12 May 2010 14:13:20 +0200
Subject: [Windstille-commit] r3308 - trunk/windstille
Message-ID: <201005121213.o4CCDKKm019032@sheep.berlios.de>

Author: grumbel
Date: 2010-05-12 14:13:20 +0200 (Wed, 12 May 2010)
New Revision: 3308

Modified:
   trunk/windstille/INSTALL
Log:
Added missing dependencies

Modified: trunk/windstille/INSTALL
===================================================================
--- trunk/windstille/INSTALL	2010-05-12 12:12:48 UTC (rev 3307)
+++ trunk/windstille/INSTALL	2010-05-12 12:13:20 UTC (rev 3308)
@@ -32,13 +32,15 @@
  * gtkmm (for the editor only)
  * gtkglextmm (for the editor only)
 
-In most cases these will come with your distribution. In Ubuntu you
-can install them with:
+In most cases these will come with your distribution. In Ubuntu 10.04
+you can install them with:
 
  % sudo apt-get install \
+     scons \
      bison \
      flex \
      libboost-dev \
+     libboost-filesystem-dev \
      libboost-signals-dev \
      libboost-thread-dev \
      libfreetype6-dev \



From grumbel at mail.berlios.de  Fri May 28 01:34:56 2010
From: grumbel at mail.berlios.de (grumbel at BerliOS)
Date: Fri, 28 May 2010 01:34:56 +0200
Subject: [Windstille-commit] r3309 - in trunk/windstille: . extra
Message-ID: <201005272334.o4RNYuIf007215@sheep.berlios.de>

Author: grumbel
Date: 2010-05-28 01:34:55 +0200 (Fri, 28 May 2010)
New Revision: 3309

Added:
   trunk/windstille/extra/
   trunk/windstille/extra/image_blur.cpp
Log:
Some experimentation with motionblur and lighteffects

Added: trunk/windstille/extra/image_blur.cpp
===================================================================
--- trunk/windstille/extra/image_blur.cpp	2010-05-12 12:13:20 UTC (rev 3308)
+++ trunk/windstille/extra/image_blur.cpp	2010-05-27 23:34:55 UTC (rev 3309)
@@ -0,0 +1,182 @@
+/*
+**  Windstille - A Sci-Fi Action-Adventure Game
+**  Copyright (C) 2010 Ingo Ruhnke <grumbel at gmx.de>
+**
+**  This program is free software: you can redistribute it and/or modify
+**  it under the terms of the GNU General Public License as published by
+**  the Free Software Foundation, either version 3 of the License, or
+**  (at your option) any later version.
+**
+**  This program is distributed in the hope that it will be useful,
+**  but WITHOUT ANY WARRANTY; without even the implied warranty of
+**  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+**  GNU General Public License for more details.
+**
+**  You should have received a copy of the GNU General Public License
+**  along with this program.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#include <SDL.h>
+#include <sstream>
+#include <stdexcept>
+
+#include "display/opengl_window.hpp"
+#include "display/surface.hpp"
+#include "display/surface_manager.hpp"
+#include "display/surface_drawing_parameters.hpp"
+#include "math/size.hpp"
+#include "math/vector2f.hpp"
+
+int main(int argc, char** argv)
+{
+  if (argc != 3) 
+  {
+    std::cout << "Usage: " << argv[0] << " FILENAME" << std::endl;
+    return -1;
+  }
+
+  Uint32 flags = SDL_INIT_VIDEO | SDL_INIT_JOYSTICK;
+
+  if (SDL_Init(flags) < 0)
+  {
+    std::stringstream msg;
+    msg << "Couldn't initialize SDL: " << SDL_GetError();
+    throw std::runtime_error(msg.str());
+  }
+  else
+  {
+    atexit(SDL_Quit);
+    SDL_EnableUNICODE(1);
+  }
+
+  Size window_size(1024, 768);
+  OpenGLWindow window(window_size, window_size);
+
+  SDL_ShowCursor(SDL_DISABLE);
+
+  SurfaceManager surface_manager;
+  Surface surface(Pathname(argv[1], Pathname::kSysPath));
+
+  Surface surface_2(Pathname(argv[2], Pathname::kSysPath));
+
+  float ray_length = 3.0f;
+  Vector2f pos;
+  int t = 0;
+  std::vector<Vector2f> buffer(16);
+  std::vector<Vector2f>::size_type buffer_pos = 0;
+  bool quit = false;
+  while(!quit)
+  {
+    SDL_Event event;
+    while(SDL_PollEvent(&event))
+    {
+      switch(event.type)
+      {
+        case SDL_QUIT:
+          // FIXME: This should be a bit more gentle, but will do for now
+          std::cout << "Ctrl-c or Window-close pressed, game is going to quit" << std::endl;
+          quit = true;
+          break;
+
+        case SDL_KEYDOWN:
+          if (event.key.keysym.sym == SDLK_ESCAPE)
+          {
+            quit = true;
+          }
+          break;
+
+        case SDL_MOUSEBUTTONDOWN:
+          if (event.button.button == 1)
+          {
+            ray_length *= 1.0f/1.4f;
+          }
+          else if (event.button.button == 3)
+          {
+            ray_length *= 1.4f;
+          }
+          std::cout << ray_length << std::endl;
+          break;
+          
+        case SDL_MOUSEMOTION:
+          //std::cout << event.motion.x << ", " << event.motion.y << std::endl;
+          pos = Vector2f(1024.0f - static_cast<float>(event.motion.x),
+                         768.0f - static_cast<float>(event.motion.y));
+          break;
+
+        default:
+          break;
+      }
+    }
+
+    t += 30;
+    ray_length = sin(t/1000.0f);
+
+    buffer[buffer_pos % buffer.size()] = pos;
+    buffer_pos += 1;
+
+    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
+    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
+
+    if (false)
+    {
+      for(size_t i = 0; i < std::min(buffer_pos, buffer.size()); ++i)
+      {
+        size_t idx = (buffer_pos - buffer.size() + i) % buffer.size();
+        pos = buffer[idx];
+
+        float n = static_cast<float>(buffer.size());
+
+        if (true)
+        { // after image motion blur
+          n = static_cast<float>(i) / ((n * n + n) / 2.0f);
+        }
+        else
+        { // simple trail, doesn't fade out
+          n = 1.0f / n;
+        }
+
+        surface.draw(SurfaceDrawingParameters()
+                     .set_scale(1.0f)
+                     .set_pos(pos - Vector2f(surface.get_width()/2, surface.get_height()/2))
+                     .set_blend_func(GL_SRC_ALPHA, GL_ONE)
+                     .set_color(Color(1.0f, 1.0f, 1.0f, n)));
+      }
+    }
+    else
+    {
+      int n = 100;
+      for(int i = 0; i < n; ++i)
+      {
+        float scale = 1.0f + static_cast<float>(i) / static_cast<float>(n) * ray_length;
+        if (true)
+          surface.draw(SurfaceDrawingParameters()
+                       .set_scale(scale)
+                       .set_pos(Vector2f(512, 384) - Vector2f(surface.get_width()/2 * scale, 
+                                                              surface.get_height()/2 * scale)
+                                + (Vector2f(512, 384) - pos) * scale * 3.0f)
+                       .set_blend_func(GL_SRC_ALPHA, GL_ONE)
+                       .set_color(Color(1.0f, 1.0f, 1.0f, static_cast<float>(1)/static_cast<float>(n))));
+
+        if (false && i == 1)
+        {
+          scale = 1.0f;
+          //std::cout << "Black: " << pos << std::endl;
+          surface_2.draw(SurfaceDrawingParameters()
+                         .set_scale(scale)
+                         .set_pos(Vector2f(512, 384) - Vector2f(surface_2.get_width()/2 * scale, 
+                                                                surface_2.get_height()/2 * scale)
+                                  + (Vector2f(512, 384) - pos) * scale * 3.0f)
+                         .set_blend_func(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA)
+                         .set_color(Color(1.0f, 1.0f, 1.0f, 1.0f)));
+        }
+      }
+    }
+
+    SDL_GL_SwapBuffers();
+    SDL_Delay(15);
+  }
+
+  return 0;
+}
+
+/* EOF */


Property changes on: trunk/windstille/extra/image_blur.cpp
___________________________________________________________________
Name: svn:eol-style
   + native



